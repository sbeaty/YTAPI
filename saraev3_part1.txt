Video: https://www.youtube.com/watch?v=tXrssFdywgQ
Title: THIS Smart Invoice System Will Make You $750/Month
[0] How many times you guys kicked [1] yourselves for not following up on an [2] unpaid invoice? Well, over the next 20 [4] minutes, I'm going to build a smart [5] invoice collection system in front of [6] you live in NAN that automatically [8] follows up on overdue invoices and can [10] easily generate an additional 10 to [12] $15,000 per year in missed payments for [14] the average agency or freelancer. I use [16] similar systems all the time with real [18] clients and you can easily sell [19] something like this for 1,500 bucks a [20] pop or more. I'm also going to include [22] the template down below for free for [23] anybody who needs it. If you're new [25] here, my name is Nick. I scaled my own [26] AI automation agency to 72,000 bucks per [28] month and currently lead the number one [29] A automation community, Maker School. [31] Anyway, I'm going to build this entire [32] thing for you from scratch in NAND. I'll [35] walk through my exact thought process [36] and I'm going to show you guys all the [37] real development stuff, including the [39] dead ends and debugging that most people [40] would probably leave out. Let's get into [42] it. So, here's the system we're about to [43] build. But before I show you an actual [44] demo, let me give you the business [46] context around this, cuz understanding [47] the why, I think, is just as important, [49] if not more, than understanding the how. [51] The whole goal of today is I want to [52] build an intelligent invoice collection [54] system that eliminates one of the [55] biggest cash flow killers for most [57] businesses, which is forgotten [58] follow-ups and unpaid invoices. As [60] opposed to easily ignorable automatic [62] follow-ups, these are all going to be [63] custom. They're going to be [64] intelligently written. And most [65] importantly, they're going to come [66] directly from the business owner or from [68] you if you're installing this in your [69] own company. So, why this system? A [71] really big problem in small to mid-size [73] businesses is you don't typically get [74] paid at the same time that you do your [76] work. If you guys have ever heard of the [77] terms net30 or net 60 or net 90, what [80] all this stuff means is that a business [82] delivers services and then doesn't [83] expect payment until 30, 60 or 90 days [86] later. And because of this gap, in [88] practice, a lot of clients that should [89] have paid you money just forget or they [91] take a really long time to pay those [92] overdue invoices and you end up with a [94] ton of cash in accounts receivable. Now, [96] this may not seem like a big deal, but [97] can amount to massive cash flow issues [99] for an average small to mid-size [100] business or alternatively just a lot of [102] time spent following up chasing after [104] clients that owe you money. So, that's [105] what the system solves. Instead of [106] manually tracking payment dates, writing [108] annoying follow-up emails. This is just [110] an automation that monitors your invoice [111] status, it calculates exactly how many [112] days each payment is overdue, and then [114] it sends increasingly urgent but [116] professional follow-up emails at precise [117] intervals, 7 days, 14 days, 21 days, and [120] so on. The business opportunity here is [121] massive cuz the ROI is just really [123] obvious. If you say the client won a [124] $3,000 invoice per quarter that would [126] otherwise have been forgotten, you have [128] now generated an additional $12,000 in [130] revenue. And for a service business [131] that's doing several hundred,000 per [133] year, that's probably on the low end of [134] the value you're driving. So you can [136] absolutely charge a percentage of that [137] if you were to sell it or use it in your [139] own business to improve your own cash [140] flow. All right, with that aside, let's [141] dive into the actual build. [144] Okay, so here's a demo of the working [145] system. I want you guys to know that you [146] can use this exact same approach that [148] I'm showing you to literally any sort of [150] follow-up situation. Whether it's [151] following up on unpaid invoices or [153] following up sales calls or following up [155] on cold emails, whatever you want to do, [156] the logic is contained here. Just copy [158] and paste your particular templates and [159] you'll be good to go. The way that this [160] works is we're grabbing data from a [162] source. Now, I'm using Google Sheets [163] here because I want to make this [164] agnostic. I want to make this work with [165] everything. But I want you to know this [166] first node can actually just be swapped [168] out for anything. Like if you're doing [168] Stripe, you can swap it out for Stripe. [170] If you're doing like QuickBooks, you can [171] swap it out for QuickBooks. If you're [172] doing Zero, like whatever platform [174] you're using, this is just where you [175] grab the data. Then what we're doing is [177] we are filtering this to check people [179] that we have sent invoices to on 74 218 [183] day intervals. So every 7 days we're [184] then calculating the distance between [186] today which is uh June the 11th and then [189] you know these invoices over here. So [191] there are two that are on a cadence of 7 [193] and 14 days. And then after that we [195] build in a little bit of logic to grab [196] all of the email history between us and [198] the lead so that we know exactly what's [200] going on. We don't make any erroneous [202] errors by sending a follow-up at the [203] wrong time. We then do a little bit of [204] processing and then finally we send an [207] invoice follow-up using OpenAI where we [209] then in our case are drafting them but [211] in your case you could just send them or [212] whatever the heck you want really. You [214] could have this thing run on turbo all [215] day long. So if I click execute workflow [217] what's happening is it's starting by [219] grabbing that data. It's then looping [220] over and for every email that is found, [222] it's getting our conversation history, [224] whipping up an email follow-up template [226] that is relevant and tailored to our [228] conversation history and it's creating a [229] draft and just doing it over and over [231] and over and over again. The final draft [232] outcome looks something like this. So [234] these are contextually relevant and they [236] are unique to the prospect. We base it [238] off of a template, but then we modify [240] that template using AI to fit the [241] specific circumstance. So this specific [243] one is for a rascal called Nicholas who [245] didn't pay his invoice on time. Hey [246] Nicholas, following up on the invoice. [247] Let me know if you have trouble paying [248] this or if there's something I can do to [249] assist. I'm here to help if anything's [250] unclear. Show anytime. Thanks Nick. This [252] one says, "Hey Nick, hope you're well." [253] It's another rascal. I just wanted to [254] check on the invoice. I sent you earlier [256] with you. Let me know if you need [256] anything. Trying to get this in before [257] end of week. Thank you. Cheers Nick. So [259] stuff like this works. Stuff like this [260] is used by companies all over the world [262] to significantly decrease their accounts [264] receivable and make sure that they're [265] cash flow healthy. I'm about to show you [267] how to build it. [269] All right, so as mentioned, I haven't [270] actually built this yet. I'm going to be [272] doing it live in front of you using this [273] NAN canvas. What I have is a road map, [275] which is just a series of steps that I [277] think I'm probably going to use during [278] this build. And the reason why I'm [280] approaching it this way and not just [281] showing you guys a finished product is [282] just because I think it's a lot more [283] informative to proceed with a blank [284] canvas and then run you through and [286] actually narrate what I'm thinking while [287] I do the build. I also think it's a lot [289] more informative to like include all the [290] crappy parts that most other people [292] don't in the video so you guys could see [293] what actual debugging looks like. You [295] know, we're not just looking at the [296] finished product here. I'm actually [297] guiding you through what like an actual [298] development processes. So, yeah, usually [300] the way that I do my development [301] processes is I just bullet point a [302] couple of things that I think I'm going [303] to do and then I proceed logically top [305] to bottom. So, here's what I think I'm [306] going to do. I'm going to start by [307] probably grabbing invoices from some [309] source. Now, bunch of different sources [311] I imagine we could use for this. Like if [312] you guys are using Stripe for payment [313] processors, you could do that. Using [315] QuickBooks for invoices, you could do [316] that. I'm just going to be using a [317] Google sheet. This is a test Google [319] sheet that I generated a while ago for a [321] similar build that I did in make.com. [322] This is going to be pretty different. [323] So, if you've seen that, stay tuned. But [325] basically, what we need to do is we need [327] some sort of source, right? So, I'm just [328] going to verify I can grab invoices from [330] my source, whether it's a payment [331] processor, QuickBooks or Google Sheet, [333] that's okay. After this, we're going to [334] check the sent dates on the source and [337] then we're going to calculate the [338] distance between when the invoice was [340] sent and then today. And in doing so, [342] we're going to get some number. So, for [344] instance, like today it is June 11th. So [347] that's 2025-06-11. [350] If I go current date minus this date, [353] what should I expect to get? I should [354] expect to get six. Okay. So the reason [356] why I'm doing this is because this feeds [358] into the next step, which is where if [359] the distance is equal to some interval, [361] let's say it's equal to 7 and I want to [363] follow up every 7 days. Well, then I can [366] proceed with the rest of the flow. But [367] if the distance is 6 days or if it's 8 [369] days or something, then I don't. And I'm [371] doing this because I think it's just [372] going to be the simplest way to proceed [373] with an invoice follow-up. I don't know [374] for sure, but um that's what I'm [376] thinking. And then after that, what [377] we're going to do is we're actually [378] going to grab all of the email history [379] for context. One fragile piece in my [382] make.com automation and a couple of [384] other similar builds that I've seen with [385] this before is like sometimes you do [387] communication with a client on three or [388] four different platforms or sometimes [390] you do communication with a client over [391] email and they actually explain why they [394] didn't follow up with you or they didn't [395] pay the invoice or something and they [396] say, "Hey, you know, just give me a [397] couple more days." So, what I want to do [399] is I want to account for that by [400] basically every time that we have one of [402] these follow-up periods, just getting [403] the last X emails and then aggregating [406] it into some big history, then feeding [407] into AI, just having AI tell us, hey, is [409] this an appropriate email to send? If [411] not, should we make any adjustments to [412] it? From there, yeah, we're going to [413] eliminate the weird messages. Then, [415] we're going to draft or send follow-ups [416] to prospects so that you know what's [417] going on. And then, I kind of have an [419] optional one here. Um, I don't really [420] think we can do this today just cuz I'm [421] going to be using this Google sheet like [423] I talked about, but essentially, you [425] know, if you're using a Stripe invoice [426] system or using a QuickBooks invoice [428] system or maybe Mercury or whatever, you [430] can track events. So, like when somebody [432] pays the invoice, you can actually [433] monitor that, send that to a web hook [435] and then catch the web hook. What you [436] can theoretically do is you could use [437] this to like close the loop in the [439] system. So, if somebody pays your [440] invoice, then you can actually just go [441] back to the source. You can change it [443] from status unpaid to paid or something. [445] Do you know what I mean? So, in that [447] way, we can kind of close the loop and [448] uh yeah, make it really nice and tight. [449] So, I'm going to be filling these out [452] like so. You know, when I'm done, I'm [453] just going to mark this cute little [454] check mark thing, a little bit of [456] dopamine. And uh yeah, let's let's dive [457] into exactly what this is going to look [458] like. So, first step I'm going to do is [460] I'm going to go to Google Sheets. And [462] what I want is I just want a way to list [464] all of the invoices here. And [466] realistically, I should probably set [467] this on like a daily schedule where it [469] like runs at like 7:30 or something like [471] that. Because if you think about it, if [472] it runs at 7:30, there's much higher [474] likelihood that the person is going to [475] get the email and be like, "Oh yeah, I [477] have a little bit of time to fix that [478] up." So the note I'm going to use, if [481] you guys can't see it here, is get rows [482] in sheet. Now, what this does is it asks [485] for a credential to connect with. So [487] create a new credential here. All we do [488] in order to hook this up is we just [490] click the sign in with Google button. [492] And then what you do is you go and you [493] you select the specific email address [495] that you want. So I've already done this [496] with uh my email address. So, I'm just [498] going to exit out of this puppy and then [500] go to this specific one, which I believe [502] was this one that says YouTube. Okay. [503] Next, sheet within document get rows. [505] The document that I'm going to use [506] specifically is smart invoice follow-up [509] system. At least it should be smart [511] invoice system example. There we go. And [513] then the specific sheet, this just asks [515] for um this value right over here. So, [517] specific sheet is just going to be sheet [519] one. And then it'll give me some filters [520] that I could use, combine, some options [523] and stuff like that. I'm not going to [523] worry about anything. I'm just going to [524] click execute step. And we're just going [525] to see what happens. So executing the [527] step right now on the right hand side we [529] see we have some um output. Now I [530] usually do my output in JSON. A lot of [532] people prefer the schema but the reason [533] why I like JSON is because you guys see [535] up here where it says 10 items. I [536] actually want to be able to see the [537] other nine items. I personally think [538] this is one of the reasons why so many [540] people struggle with NAN item matching [542] because they don't realize that what is [543] actually being output is not just that [544] one record with Samantha TR but like you [547] know 10 records all with their own [549] stuff. So I'm a big fan of JSON. Uh for [551] those that don't know, JSON is just like [553] a very simple convention where you, you [555] know, store the name here and then you [557] have a colon and then you have the [558] actual value. So the name or the key and [560] then the actual value. The key actual [562] value. Um and in this way I can just get [564] a much quicker and easier appreciation [565] of what's actually going on. Anyway, [567] what I do after I run that is I'm just [568] going to pin and I pin everything. [569] Pinning is just the simplest and most [571] straightforward way of making sure that [572] you have reliable and consistent data. [574] Um and now what we see here is we feed [577] in one item and then we get 10 items [578] after. So what am I thinking? We just [580] verified that we can grab the invoices [582] from the source. That's easy. What do we [583] have to do now? We have to check the [584] sent dates and calculate the distance [586] and days between sent and now. So, okay, [588] just to reiterate, we have a bunch of [589] dates sent here, right? What we have to [591] do or what I want to do is I want to [593] calculate the distance between all of [595] the records that are just fed in here [596] and then the current date. That may [598] sound like witchcraft to you. What the [599] hell is a distance between dates? Um, [601] what I'm going to do is I'm going to use [602] the edit fields node. And I think this [604] is going to work. I don't actually know. [605] We're going to go manual mapping. So I'm [607] going to call this [609] days since [611] and then over here I'm going to click [612] expression and in n you can actually do [615] dollar sign now and it'll grab you a [617] datetime representation of right this [620] second. So this is actually down to the [621] second thing is we don't actually need [623] the second but that's okay. The second [624] that you have something the second that [626] you have something in a datetime format [627] you can manipulate the hell out of it [629] just with a period. So check this out. [630] Now I pressed period there's minus plus [633] diff to extract. I think what we need is [635] diff two, right? Yeah, I think it's [638] going to be diff two. So, diff 2 returns [640] the difference between two date times in [642] the given units. Cool. So, I'm going to [643] do this. And what we're going to [645] calculate is we're going to calculate [646] the difference between now. That's the [650] thing that we're starting with. And then [652] what I want to do is I want to feed in [653] one of these dates. [655] So, dollar sign JSON dot what we want? [658] We want date sent. Okay, cool. So, [660] distance between now and then date sent [662] in days is 9.62. 62597. Okay. So, [665] obviously I don't actually want this big [667] 9.2 whatever, right? Like that doesn't [669] actually mean anything to me. So, what [670] I'm going to do is I'm going to round [672] this now. So, period round. There you [675] go. And now we actually have the [677] distance, the days since the invoice was [678] sent. Easy peasy lemon squeezy. Just for [680] my own, I guess, ease of use. I'm also [682] just going to map the email in here. Let [684] me just drag that in just so that I have [685] it in the edit fields node. I like the [687] edit fields node. Pretty simple and [689] easy. And let me just see if there are [690] any additional settings I want. No, I [692] don't think so. I think we should be [692] good. Okay. So now what I'm going to do [694] is I'm going to execute this. Okay. So [696] what do we get now? Now we get a list of [698] days since sent. Then we actually get [700] the email. Now don't get me wrong, we [701] can totally still access all this [702] information here. I just wanted to [704] simplify, make my life easier and show [705] you which records are responsible for [707] whatever distances. Now if you're smart, [709] you'll notice that I've actually added [710] my own email addresses here in days [712] since since for seven and 14 just cuz I [714] wanted to show you what like it actually [716] looks like moving forward on my own [717] stuff. I don't actually have access to [719] Maria Chen's email address, so we'll [721] leave it there. But I'm glad that that's [722] worked. I can now pin this. So now that [724] we've calculated the scent dates, what [726] we do logically is we just need to check [728] to see whether the interval is equal to [730] the distance. And so I guess what what [732] intervals are we going to do? I'm [733] thinking I'm going to do it this way. So [734] like, you know, how often do you really [735] want to follow up on an invoice? Well, [737] odds are, you know, if they're actually [739] overdue on invoices, you're not going to [740] be the only person following up. Like um [742] Stripe is going to be following up. If [743] you send that through Panadoc, Panadoc's [745] going to be following up. Quick post is [746] going to be following up, whatever. So I [747] don't actually want to overwhelm them. I [748] personally like the once a 7-day [750] structure. You can theoretically set [752] this up to do like once every day if you [754] were super keen on it and it was a [756] really big payment or I don't know [757] something like that. But I'll just do [758] once every seven days. What I'm thinking [760] is I'll start with a 7-day, then I'll do [762] 14 days, then I'll do 21 days, then I'll [765] do 28 days. And because, you know, I [766] just want to do this live build and I [767] want to make sure the video isn't 700 [769] hours. I'm just going to stick to these [770] four. Um, feel free to extend this [772] however you want. Feel free to do, I [773] don't know, 4day interval, whatever. You [776] know, the world is your oyster, I [778] suppose. So, we're going to do 7 14 21 [780] 28. um delete this 35. So the question [783] is how do we actually check that now? [785] Right? Um we have 10 items. We want to [786] check to see which one of these are [787] within the intervals. There are a [789] variety of different ways logically that [790] you can do this. I'm just going to use a [791] filter node. So a filter node allows you [794] to feed in an item days since sent and [796] then check to see whether it's something [798] that you want. So let's go. Let's check [800] to see if days since is equal to 7. [804] Okay. And should we do number? I [806] actually don't know. I see we have a [807] string here. Let me just try number. I [809] feel like we need number. So number is [811] equal to. Yeah, it's not going to allow [813] that. Why? Cuz days since is currently [814] not a number. There's a little bit of [816] nuance here. But um when you see stuff [817] surrounded in quotes, then it's a [819] string. It's not a number. So does it [820] make a massive difference for us? No, [822] not really. But maybe I'm going to want [823] to use this in the future as a number. [826] So I'm going to go back to my edit [827] fields node. Change this from string to [829] number. And now if I execute this, this [831] should now say 10. Yeah, there you go. [833] You see how it just changed to green. [834] Okay. So I am going to pin this again. [836] That'll make my life easier. Then under [838] the filter, the number field now works. [840] It's not giving me any errors. So [842] basically what I want to do is I just [843] want to filter out anything that's not [844] 7, 14, 21, or 28 days. How do I do this? [846] Just going to add some more conditions [847] and I'll go or add condition or add [850] condition or. So what are we doing here? [852] 14 218. [855] You got to go number is equal to number [858] is equal to number is equal to. And then [861] we're just going to map the same [862] variable over and over and over again. [864] Oh, that's kind of annoying. We can't [865] actually do that if it's not set to an [866] expression. So, let's set it to an [867] expression first. Okay. So, what are we [870] expecting to happen now? Well, we're [871] feeding in this array and we're just [873] checking to see, hey, which ones of [874] these are 7,4 21 or 28? If they're not [877] 7,4 211 or 28, eliminate them. So, we [880] should only expect to get a couple left. [882] Okay. And that's what happened. Kept two [883] items, discarded eight items. Looking [885] pretty solid to me. Just going to pin [886] this. Now, we sort of have like the base [888] logic setup, I'm thinking. And so, [890] logically, what do we do now? I guess [891] now we need to grab the email history, [892] right? Okay. So, in order to grab the [894] email history, there are a variety of [896] different ways to do this, what I'm [897] thinking I'm going to do, just [898] brainstorming out loud here, is I'm [899] going to loop over each email cuz, you [902] know, we have Nick left and Nicholas [903] Drive. I'm going to loop over each email [905] using the loop node and then I'm going [907] to grab all of the emails sent or [911] received by that email address because [914] if you think about it, if it's sent, [915] then that means that I got it. And then [916] if it's received, that means that they [918] got it. So, it'll be like both the [919] two-way communications. I might want to [921] sort that. It may come back as [923] automatically sorted. I don't know. But [924] then what I want to do is I just want to [925] turn all that into a big text thing, [927] feed it into AI, and then ask AI like, [928] "Hey, you know, this is the email [930] template I was thinking of sending, [931] which I guess I haven't done yet, but [932] I'll I'll do that later. Is this one [934] good? You know, is there any changes [935] that we should make to this or [936] whatever?" Okay, so that's what I'm [937] thinking of doing. Let's actually build [939] that out. So, loop over items batch size [941] is one. So, I personally really like [943] using loop over. I don't think you [945] actually explicitly need this. Um, but I [946] really like using loop over items [948] because I used to use a noode platform [950] called make.com predominantly and since [952] I moved over to Nadn, it's been kind of [953] a learning experience with the item [954] matching and stuff like that. You know [956] how earlier I mentioned that item [957] matching is one of the biggest issues [958] that people have with this platform. [960] Nobody talks about it, but I guarantee [961] you that's the main issue that like 90% [962] of people have. Why can't I select this [964] item and stuff? Well, the reason why is [966] because um, you know, they don't [967] understand what's going on under the [969] hood. This is a really simple way of [970] just like contextualizing what's [972] happening. And I usually like adding a [973] weight here too so I could see it. So [975] don't be afraid to do simple [977] straightforward hacks like this. Anyway, [978] so what what do I need to do? I need to [979] get emails. So I'm just going to connect [980] to Gmail. And what I want is get many [982] messages. And notice how I'm adding this [984] to the loop route. Basically everything [986] that goes on in this loop route will [988] just go on one at a time. And you can [990] actually visualize it, which is so [991] useful. And then once it's all done, [993] then we're going to proceed down the [994] done route. And we have access to some [995] of the variables inside. Okay. So we're [997] going to start by getting the messages. [1000] And what are we going to do? I guess I'm [1002] just going to get all them. No, maybe we [1003] shouldn't get all of them because I [1004] mean, what if it's a lot? Let's just do [1005] the last 10. That sounds reasonable. [1008] Filter. There should be a way to filter [1010] this out. Search. Yeah. So, from Okay, [1012] so I don't actually have access to any [1014] input data. So, I need to sort that out [1015] first. So, why don't I execute this so [1018] that we have some output on the loop [1020] branch. Okay, looks like we do. I'm just [1021] going to pin this. Oh, I can't actually [1023] pin. Sorry, I lied. You can't actually [1025] pin a loop node. It doesn't look like. [1026] So, that's all right. Um, now that I [1028] have access to this note, now what I can [1029] say is, hey, I want all emails that are [1031] from Nick at leftclick.ai or, and I [1035] don't know if this is the right syntax. [1036] I'm literally just we're raw dogging it [1038] today. We're going to see what happens. [1040] And then I only want to return 10. So, [1043] let's run it. Oh, and by the way, if you [1045] guys haven't connected to Gmail, it's [1046] very simple and straightforward. Just [1047] click create new credential and then you [1048] just do that sign in with Google thing. [1050] If you're self-hosting, could be a [1051] little bit more difficult. I'm a big fan [1052] of um cloud hosting because it [1054] eliminates all the complexity. But [1055] anyway, so what do we have here now? We [1057] have emails from or to nick at [1060] leftclick.ai. [1062] Oh, you know, I'm realizing this isn't [1063] actually the email that I wanted to use. [1065] My bad. My bad. Let me actually go over [1068] here [1069] cuz I wanted to do this. [1073] Yeah, I just got to rerun this one more [1074] time. So, let's unpin all of this and [1078] then disconnect this. Then let's run it. [1083] And just got to collect a different [1084] email address. We should still have [1085] everything else be the same, right? Just [1087] now it should be nick at nixive.com. [1089] Okay, cool. So, we're going to go down [1090] the loop node. Get that. And then now [1092] it's to from nyx drive or to nixive. Let [1095] me execute this step. What are we [1096] getting? Cool. So, now we have like a, [1099] you know, coaching sessions. This is me [1101] talking to my LLM. This is me sending [1103] and receiving some emails and stuff like [1105] that. That's cool. Now, what I want with [1106] this stuff is I want to add some sort of [1109] Well, actually, hold on a second. This [1111] is currently in, now that I'm thinking [1114] about it, this is currently in nine item [1116] format. So you guys see how it says nine [1118] items down here. What I need to do is I [1120] need to transform that nine items into [1123] one item. Like I just want to aggregate [1124] it all so that instead of me outputting [1127] a list with nine items, I have a list of [1130] nine items in one item. Does that make [1132] sense? We got to nest it. So simple and [1134] easy way of doing that is the aggregate [1135] node. So I'm going to give that a try. [1136] And then what I want to do is the input [1138] field name. And it's just going to be [1139] text probably. I think I think it's just [1142] text. Okay. So, I'm just going to do [1144] text. Let's just see what happens. Screw [1145] it. Okay. So, there's no text in the [1147] input item. So, maybe I didn't do that [1149] right. Oh, you know why? Because it's [1151] not outputting text. It's outputting [1152] snippet. The reason why this happens in [1154] Gmail is because the simplify trigger, [1156] which is super annoying. Make sure you [1158] sort that out. If not, you're not [1160] actually going to get the full text. [1160] You're only going to get a little [1161] snippet of it. Okay, cool. So, now that [1163] we have this, we should be able to go [1164] text. I should be able to execute. Then [1167] if I execute this, we should get yes, [1170] now we get all of the text. Okay, so [1172] logically what just happened? Well, now [1174] we actually get all of the text here in [1176] one, you know, big like text array [1179] essentially. What we can do, do you guys [1180] notice how this says one item is now we [1182] can actually turn this into just one [1184] string. Then with the string, we can [1185] feed it into AI and have AI do something [1187] cool with it. So at least this is my [1189] idea. I don't actually know that's going [1190] to work in practice. I'm just going to [1191] rearrange this, tidy it up. So select [1193] and then shift command T. And that just [1195] makes my life a little bit easier. It [1197] just like applies some I don't know what [1199] the thing that they're doing is, but it [1200] just makes it look really pretty. And [1202] then I'm just going to pin a couple of [1203] these nodes. And then over here, I'm now [1205] going to go open AI. So open AI. We're [1208] going to go messenger model. Here we go. [1210] Okay. And now what I want to do is I [1212] just want to select a model that I think [1213] is going to be sufficient for this. So [1214] the one I like is GBT4.1. So I'm going [1217] to go here. And the prompt I'm going to [1219] do is I'm going to say, [1221] "You're a helpful, intelligent, [1223] administrative assistant. You help me [1226] follow up with emails." Now, that's the [1229] system prompt. I'm just giving it some [1230] very highle directions in the user [1232] prompt. Now, I'm going to ask it some [1233] stuff. Your task is to read through a [1236] conversation history and determine. [1240] So, actually, let's give it some more [1241] context. I am following up with overdue [1245] invoices by sending a series of [1247] templated emails. Your task is to read [1249] through a conversation history between [1252] me and the prospect and determine [1254] whether I can send the email as is or if [1259] there are some changes I need to make to [1263] the template. [1265] Here is the template. Uh, for now I'm [1269] going to hardcode a template, but [1270] realistically I'd like to select the [1271] template based off of how many days it's [1274] been. So if it's been 7 days, I want to [1276] do one template. If it's been 14 days, I [1278] want to do another one. So what I'm [1279] going to do is for now I'm just going to [1282] hardcode it and then I'll worry about [1283] the actual thing later. And I'll just [1285] say, [1287] you know, hey, [1289] hope you're well. Just checking in on [1292] that invoice I sent you earlier. Thanks. [1296] let me know if you need anything. [1298] Okay? And then it'll just be thanks [1300] Nick. Okay. Great. So, rules. If we just [1305] sent an email discussing the invoice, [1310] if we sent an email discussing the [1311] invoice within 48 hours, do not follow [1315] up. [1316] You return your answer in JSON using [1319] this format. We'll go. [1324] We'll go verdict. [1329] True or false. Let's go email template [1335] modified [1336] email template with backslash in place [1339] of new lines. And then that actually [1342] should be sufficient. [1345] Now, if we sent an email discussing the [1347] invoice within [1349] in the last 48 hours, do not follow up. [1351] This would be annoying. [1355] If this occurs, let's think. Can we [1357] schedule an email in Gmail? I mean, it [1359] would be really cool if we could [1360] schedule an email in Gmail. I don't [1361] think we could schedule an email. Yeah, [1364] we can't schedule an email. No chance. [1366] Send a message. Wait for response. [1368] Remove label for message. No, we could [1369] schedule it for another day. I think [1373] that would just be overkill. So in this [1374] case, okay, first of all, let's change [1376] this to 72 hours and then we'll just say [1380] just skip because I will probably have [1382] carried on a conversation. Aside from [1384] that, just skip and return false [1387] for verdict. [1390] If we discussed something that [1393] materially makes the followup seem [1397] strange, i.e. repeats the same [1399] information [1400] or says something out of context. Modify [1403] the template to accommodate [1409] for this. Do not modify the template [1412] unless it's necessary to maintain a [1414] cohesive conversation. Okay. Then over [1418] here, if we did not send an email [1421] discussing [1424] if we sent or received an email [1425] discussing the invoice in the last 72 [1428] hours, return true for verdict. Cool. [1431] So, this looks pretty good to me. This [1434] is going to be our template variable. [1436] And then [1438] I think we can actually go ahead with [1440] it. And then here will be the [1441] conversation history. Going to feed in [1444] text, which is just going to be one [1445] item. Okay. Right. right down there. [1449] Okay. Output content is JSON. For output [1453] randomness, we're going to go 0.7. [1456] And now, just given all this, let's go [1458] and let's see what the verdict does. [1459] Verdict should be true. [1462] You know, I'm realizing that we're not [1463] actually including the date at all. Why [1464] aren't we including the date? Hm. We [1466] need the current date. So, right now, [1469] this isn't actually going to do anything [1470] unless we say [1473] current date. We're going to go now. [1479] And then inside of the conversation [1480] history, we have to adjust this [1482] aggregator. Oh, and sorry, are we we're [1484] just feeding in an entire [1487] Are we feeding in an entire um array [1490] right now? [1492] Okay. Yeah, we are. [1495] Okay. I think personally we should [1496] probably aggregate [1499] the data inside of this. Uh we need we [1502] need we need the date somehow, right? [1503] the date sent or received. So, we don't [1505] currently have the date sent or [1506] received. So, I think what we should [1508] probably do is we should probably merge [1510] the [1511] text field [1515] with the date field. So, why don't I go [1520] date sent or received? That would make [1522] more sense. So, where is the date? Oops. [1524] Damn, this is big. Okay. Date over here. [1528] What is this? Headers. Date. Okay. So, [1530] we should be able to get the date with [1531] headers. date. So I'm going to go text [1535] add field aggregate headers date as [1537] well. Let's unpin this [1541] and then let's just execute this and see [1543] what happens. So now we should have two. [1544] We should have text. We should also have [1545] headers date or date or whatever. It's [1548] executing. Okay, so that looks pretty [1551] reasonable. Uh sorry, my internet just [1552] died there. Um looks like we have text [1554] and then we also have dates. Can we just [1556] merge these lists? Is that a thing? Like [1558] there has to be a way to do this. Merge [1560] lists. I don't know what this does. [1561] Let's find out. Merge the open to a [1563] single flat list rather than a list of [1565] lists if the aggre if the field to [1566] aggregate is a list. Uh is the field to [1568] aggregate a list? I don't know. Screw [1569] it. Execute [1571] and see what happens. [1574] Okay. So, what I really want to do is I [1575] just want to join the date at the [1578] current index with the email at the [1580] current index. Uh that would just be the [1584] easiest for me. So, how the heck do you [1587] do that again? I should definitely know [1589] how to do this. I need to sort of like [1591] map this. I think I may be stupid, but [1594] uh [1595] I think I just need to map this. So, [1598] let's just change this to an expression. [1602] What do we do? Dollar sign JSON.ext [1606] map. Right. [1610] And then item item. Can we get item ID? [1619] I'm just going to type map ID NAN. [1622] Can we enumerate this? [1626] Hello. [1632] ID subjects item JSON. H. [1639] No, that's not how you do it. I've [1640] probably forgotten a function. So, let's [1643] just go. [1645] Okay. So, here's what we do. We actually [1646] need to set this as a map and index, [1650] right? So, map then we'll go [1655] text index, [1658] right? I think [1663] I don't actually know if this is how you [1665] do it, but we're going to find out. [1667] Okay, let's just reset this cuz I hate [1669] the red. Go map right [1674] now. Go number H. Why did map work a [1676] moment ago? I know it's not working. [1679] Sometimes this happens. Um, let's try [1680] this. JSON.ext [1684] dot [1686] map. [1689] What I want to do is actually in [1690] brackets go item index [1694] item [1698] then [1701] plus. No, we want [1705] dollar sign JSON date [1708] index plus item. [1718] Okay, I think I figured it out. So now [1720] what we've done is we have mapped the [1723] date and for every item we've also [1725] mapped the [1728] text. Sorry, we mapped the text and then [1731] for every element in this array, we've [1734] grabbed both the item itself, which is [1736] this big long text string and the index. [1739] The index is just this place. So 0 1 2 3 [1742] 4 they're all zero indexed. Then what [1744] we're doing is we're returning this. So [1746] we're grabbing the dates now and then [1749] we're selecting slicing out only the [1753] specific record of relevance. Then we're [1755] adding a new line and then we're adding [1757] the item um via like a string. So what [1760] this is now going to be this is going to [1761] be text with text with sent uh uh date. [1767] So now if we run this we're going to [1769] have access to a text with date [1771] parameter here. And now what we can do [1774] is we can go over here [1776] and feed this in. So conversation [1779] history is going to be text with date. [1781] The cool thing is in Na if you just feed [1783] it in it's going to be the big array. [1784] And uh that's fine. That's sufficient [1786] for me. Okay, last thing is we need the [1789] first name somehow. So I don't actually [1790] know. Can we get the first name? That is [1792] the question. What do we get loop over [1794] items? You know, I feel like I should [1795] probably feed in the first name as well [1796] into edit fields. That'll make my life a [1798] little easier here, right? So let's do [1800] that. Let's go back to edit fields and [1801] let's just add first name. Now, what is [1804] first name going to be? Well, we're [1805] going to grab the client name and then [1807] what we're going to do is we're just [1808] going to split it. So now it's going to [1809] be two things, [1812] Samantha and Tran. And then we're just [1813] going to grab the first element which is [1814] Samantha. Right? So this is going to now [1816] say Samantha. So why did I do all this [1818] fun stuff? Because if I unpin, which I [1822] don't believe you can do bulk. You can [1824] only pin in bulk for some silly reason. [1826] Now going to execute this workflow. Grab [1828] the fields, filter them out, loop over [1830] them, and then we should it it's going [1832] to um loop back unless I stop it. So I'm [1834] just going to stop it. Let's see. [1836] Looks like the edit fields worked. We [1839] got the full names and every or first [1841] names and everything. So we now pin [1843] these again. I'll pin this. I'll pin [1844] this. I'll pin this. And I'll pin this. [1846] What did we actually feed in? Most [1849] things. It's just for first name. [1851] Instead, now what I can do is I can go [1853] to my loop over items. Now what I'm [1855] going to do is I'm just going to say [1856] first name. Just like that. So now I'll [1859] say, "Hey Nick, thanks Nick." I mean, [1861] this is kind of annoying because hey [1862] Nick, thanks Nick. But is what it is. [1864] Then over here it'll say, "Hey, hope [1866] you're well. Just checking on that [1866] invoice. Let me know if you need [1868] anything. Thanks Nick." Cool. Nice. So [1870] it is now true. How cool is that? All [1871] right. All right. Now, what we're going [1873] to do is we're going to I'm just going [1876] to filter anything that's not true. Um I [1878] personally just like using the filter [1880] node. You can use whatever the heck you [1881] want. Um but anyway, I'm just going to [1882] check to make sure that this here is [1885] true. So, we're only going to be [1886] selecting them if they're true. Now, I [1888] should note that I'm using a string [1889] here, not technically a boolean. So, if [1891] you're like super big into string types, [1893] you'll probably want to murder me, but [1894] that's okay. We just filtered that [1895] through. And now logically what we can [1897] do so we can go back to Gmail and I'm [1900] just going to draft a message. Although [1901] I want you guys to know you can just [1902] completely autonomously send them. Then [1904] I'm just going to say reinvoice. [1907] And then what we can do is we can feed [1908] in the email template with text. Okay. [1911] Hey Nick, hope you're doing well. Blah [1912] blah blah blah. All right. Now what I [1915] can do is I can feed in the butt of this [1917] into the mouth human centipede style. [1921] U anyway I'm going to [1924] sort this out. Make it look really nice. [1925] I'm going to feed that in there. And [1927] then now I'm actually going to run this [1929] for real. So let me unpin everything. [1933] We're going to give this a go. We're [1934] going to see how this works. And then [1935] we'll worry about all the rest of the [1937] logic aka selecting the templates and [1938] stuff later. Okay. [1941] How satisfying is that? It's going [1944] through getting our stuff. Ye-haw. And [1948] then it's uh sending or I guess in my [1949] case creating a draft. Okay. So where am [1952] I going to get this draft? I got to go [1953] to my other email. Okay. And we got the [1955] emails here. I'm realizing now that we [1957] didn't set a two parameter. So we're [1958] going to have to fix that. And then we [1959] have reinvoice. Reinvoice. This is the [1961] first one to Mr. Nicholas at Nicholas. [1964] And then this one is to Mr. Nick. [1965] Nicknix.com. [1967] So those are pretty cool, but I'm glad [1968] that we caught that, right? Like that's [1970] an issue. What do we have to do? We have [1972] to go to email, obviously. Jeez, how do [1975] you not have the two email, man? [1977] Ridiculous. Let's go back to loop over [1979] items. And then what I want is this [1983] email here. [1986] Then what we could even say is reinvoice [1989] for. We could even put that in there if [1991] we really really wanted to like follow [1992] up with them and be like, "Hey man, pay [1994] the dang invoice." Okay. So now we [1996] should have the two. That looks good. We [1997] should also have the subject. That looks [1998] good. Email type text. Cool. This looks [2000] good. Yeah, I think we're making some [2002] solid progress here. So now we're [2004] feeding email history into AI with the [2006] templates and a weird message. That [2007] looks good to me. So what do we have to [2008] do now though? We actually have to make [2010] different templates for 7,4 21 and 28. [2013] So I like this initial light one as my [2015] 7-day one. I like that. So I'm going to [2018] do that as my 7-day. It's just going to [2020] be hey whatever. [2023] So let's just go back here. This is [2026] going to be my simple, hey, you know, [2028] hope you're well. Just checking in on [2029] that invoice I sent you earlier. Let me [2030] know if you need anything. Why don't we [2032] just duplicate this and this will be our [2033] second one. We'll go hi instead of hey. [2036] Hit him with that hi. following up [2040] about the invoice. [2043] I'm here if I can help with anything. [2048] Shout [2051] am here to help. [2054] If anything is unclear, shout anytime. [2056] Cool. Thanks, Nick. This is reasonable. [2060] Let's do number three. [2062] Yo, big dog. Nick's coming in for your [2065] money. Okay. So, hey, [2069] thought I'd send another ping re my last [2074] invoice. [2077] Let me know. Go best, Nick. Oh, yeah. [2080] Hit him with that. Best is uh rough. [2083] Then I'll say, "Hi, [2087] I know it's been a while since that [2088] invoice [2090] voice and it's not my intention to [2092] bother. Just want to follow up. [2095] make sure I can close this out. Let me [2098] know if there's anything I can do to [2101] help. Okay, still pretty light [2103] obviously, but you know, we're just [2104] slowly gradually applying pressure. I'm [2106] sure you can see how over the course of [2108] let's say another four to 6 week [2110] follow-up thing, we eventually go from [2112] like, hey, I know it's been a while and [2113] you know, I'm here to help to, hey, the [2116] invoice has been outstanding for the [2117] last 90 days. You're going to need to [2118] sort that out. So, uh, something else [2121] that's really interesting is you can [2122] employ the same idea in collections. So [2124] collection sequences um are very similar [2127] to this. You start with like something [2128] pretty general and then you know like [2131] they're they always have some issue why [2132] they can't pay your invoice, right? It's [2134] like our cash flow isn't very good. Do [2135] you mind waiting until next month? Hey, [2136] can we pay a premium charge interest on [2138] it or whatever? There's like a million [2139] possible responses to this. But if you [2141] have AI take in the conversation history [2143] and just like tweak your email a little [2144] bit just to 100% make sure nothing is a [2147] miss, then you're good to go. So cool. [2149] So now we have four templates, right? [2151] The question is, how do we make it so [2152] that this dynamically feeds in a [2154] different template for each? Well, what [2156] I'm going to do is I'm going to do [2157] something really simple. I'm just going [2158] to feed in a array [2162] and this array is going to have four [2163] items. So, we're just going to call this [2165] followup template array. Then inside of [2168] the array, we're just going to have four [2170] items. Every item is just going to be a [2171] different one. Cool. So, let's copy [2173] this. Let's now just paste this. And [2176] first of all, let me just verify that [2177] this actually works, right? Does this [2179] actually work? Let's just pin everything [2181] except for this so that we don't have to [2183] rerun this. I'm very um scared. I'm [2186] terrified of the Google Cloud Console [2188] API. So, I always just like to rerun [2190] things manually. Okay. So, we can make [2192] this smaller. That's fine. Where's the [2194] follow-up template? I am not seeing [2195] this. Uh here it is. Okay. So, hey loop [2199] over items blah blah blah. Hope you're [2200] well. Just checking the way. So, uh it [2202] looks like we can't include new lines [2204] here. So, I just have to regenerate the [2205] new lines manually, which is kind of [2206] annoying. [2207] We'll go new line. New line. Thanks. New [2212] line. Nick. [2214] Okay, that should be fine. And then I'm [2217] just going to now duplicate this so that [2219] there's three. It's just I need to grab [2223] this. Right. Let's go back here now. Go [2226] new line. New line. [2229] Then here we'll go. Thanks, Nick. This [2232] is number two. [2234] So, now I'm going to go. My goodness, is [2237] that annoying. We can actually open this [2238] up. What the heck am I doing? All right, [2241] paste this in again. We're going to do [2244] this two more times. So, I'm going to go [2245] back here. And I'm just going to replace [2248] this with new line, new line, new line, [2250] new line, new line. [2253] This is number three. [2256] And then [2258] this one here is going to be number [2259] four. New line. New line. [2262] New line. new line. This one's going to [2264] be new line. Okay, so now we should have [2267] all four of these. Let's just verify. Do [2269] we have all four of these? [2274] One, two, three, four. Cool. So, now [2276] that we have these, we should be able to [2277] implement some if then logic. Basically [2279] saying, hey, if this is a 7-day, I want [2281] you to follow up with this template. If [2282] it's a 14-day, I want you to follow up [2283] with another template. And so on and so [2285] on and so forth. So, here's the template [2286] right over there. Uh, I actually don't [2288] know if this is going to hardcode the [2289] value of that. We're going to find out. [2291] What I'm going to say is we're going to [2293] grab the array follow-up templates. [2297] So, I'm going to go dollar sign JSON [2299] follow-up templates array. This is going [2301] to be 0 1 2 3. And actually, is there a [2305] switch here? Is that a thing? Can I do a [2307] switch? [2309] [Music] [2310] Do I cases n switch function? Maybe. No, [2314] it looks like we only have a switch [2315] node, which is kind of annoying. I don't [2316] really want a switch node. [2321] or like a cases or something. [2326] I don't know. That'd be so much easier. [2334] Function node, write some JavaScript, [2335] switch node, and then set this value. [2336] That's kind of annoying, but it is what [2337] it is. Um, all right. So [2342] why don't we get this dollar sign JSONf [2346] follow-up templates array is zero. [2349] What I'm going to say is I'll go dollar [2351] sign if [2353] and then if [2355] the number of days is 14, right? [2360] So if days since sent [2365] equals 14, [2367] I think is it equals equals 7? H [2373] we'll start with this. [2375] Can we do multiple? [2377] Yes, I think we can. Or do we have to [2379] nest a bunch? It's kind of if the value [2382] is false, we need to go this again. [2386] Okay. Well, this is kind of annoying. [2387] Let's just feed this in AI. Write and [2390] end JavaScript of the form [2393] except we want four conditions. If days [2396] since sent equals 7, [2399] template follow up template array zero. [2404] If days since sent equal 14, [2408] then we go followup template array one [2410] etc. [2414] Let's just have it write it and see if [2415] it does a pretty good job. [2418] I like how it's doing the indents. Um, [2420] and this looks pretty good to me. [2424] So, that should be fine. Now, this is [2426] 14. So, we should grab number one. Okay. [2429] And we are grabbing number one. So, I [2431] think this is going to be fine. But hey, [2433] screw it. We'll give it a try. Now that [2434] we have this, let's pin it over here. [2436] Let's execute it and let's see what we [2437] feed in. Are we going to feed in the [2439] whole variable? Like [2441] if whatever or Yeah, it did. It fed in [2444] the whole thing, didn't it? It's kind of [2446] annoying. [2447] All right. So, what does that mean? Um, [2449] that means we actually have to do the [2451] logic here, which is annoying, but [2454] is also just what we got to do. So, [2456] let's change this to an expression [2457] field. Let's populate this here. And [2460] then now we should be feeding in Nick, [2463] not this. So we can unpin this. We can [2466] then re-execute this. Now we should get [2469] Nick. [2470] Uh, whoa. Using the item method doesn't [2472] work with pin data in this scenario. Why [2474] not? So we're aggregating a bunch of [2476] text. That's fine. [2479] We're now identifying the arrays. [2482] We might have to do some unpinning here. [2487] Okay. One sec. One sec. Let's just run [2489] this one more time and let's see if [2490] maybe there's an item matching error. [2491] Cuz as I mentioned, item matching errors [2493] are by far and above the most common and [2494] also the worst to deal with. [2497] If there is, I definitely don't see it [2499] right now, but I could just be crazy. [2505] Well, looks pretty good to me. Yeah. [2507] Yep. Okay. So, yeah, there was a [2509] temporary item matching error, but it [2510] was just because I had pinned the data. [2512] So, if you run into an issue like this, [2513] just unpin the data, give it another [2514] try. Okay, cool. So now it looks like [2517] we've queued up these drafts again. Just [2518] going to check them now. Okay. And so [2520] this is the one for Nicholas arrive at [2522] Gmail. Invoice for Nicholas with the [2523] full name. Following the invoice. I'm [2525] here to help anything clear. Show [2526] anytime. Hope you're well just checking [2527] on the invoice. I sent you to let me [2528] know if you need anything. Invoice for [2529] Nick. Cool. This looks pretty good. We [2531] now have basically accomplished our [2533] initial mission, which was to draft or [2536] send follow-up emails to a prospect so [2538] you know what's going on. We could [2541] extend this obviously. We can create a [2543] more in-depth follow-up system. We could [2545] do some sort of like monitoring or [2546] triage thing where after we send it out, [2548] we have some follow-up status. Then what [2551] we do is we like update this with the [2552] number of follow-ups and then maybe [2553] after four or something, it gets [2555] directed to a human. We could also [2556] employ the exact same approach that I [2557] just showed you guys right here, except [2559] instead of doing it for invoice [2561] follow-ups, you can totally just do it [2562] for sales follow-ups. So if you guys [2563] have people that are coming into your [2564] funnel, you can copy and paste the [2566] system, then just change the Google [2568] sheet source so that it's whatever your [2570] CRM is. Maybe it's like uh ClickUp or [2572] maybe it's Monday.com or maybe it's a [2574] whatever the heck you're storing your [2575] leads in Salesforce and then you can [2576] just rout it through this feed all the [2578] conversation history with a list of [2579] templates that are relevant to that [2580] particular thing and then just blast [2582] them out. So yeah, a lot of cool things [2583] you can do here. I'm going to leave it [2584] at that. But um hopefully everything [2586] here I've said makes sense and thanks so [2587] much for watching. And there you have [2588] it. This is a complete automated invoice [2590] collection system that can easily [2591] generate an extra 10 to 15K per year by [2593] ensuring you guys actually get paid for [2594] the work you've already done. Now, if [2596] you want to see exactly how to sell [2597] systems like this to actual business [2599] clients, I'd encourage you to check out [2600] this video right here above my right [2602] shoulder where I start an AI service [2603] completely from scratch and land my [2605] first interested prospects live in just [2607] 10 hours. I walk through the complete [2608] process from identifying pain points to [2610] actually showing you how to close deals. [2612] Also, I should note that the technical [2614] skills to build these systems is not at [2616] all sufficient to actually make money. [2617] If you guys want to grow an AI [2618] automation company, the real need you [2620] have is putting yourself in front of [2621] customers and staying consistent with [2623] daily client acquisition activities [2625] while also obviously not getting [2626] overwhelmed like a lot of other people [2627] do just because this is a very shiny [2629] industry and there's a lot of possible [2630] directions to go down. Now, that's [2632] exactly where Maker School comes in. [2633] Maker School, if you haven't heard of [2634] it, is my 90-day accountability program [2636] that guarantees you your first AI and [2638] automation client or your money back. [2640] Many members land their first client [2642] within just two weeks by focusing on [2643] systems that solve obvious, expensive, [2645] and mundane problems. So, if you guys [2647] are serious about turning your [2648] automation skills into actual recurring [2650] income, check the link in the [2651] description. Otherwise, thanks so much [2653] for watching and I'll catch you on the [2654] next

Video: https://www.youtube.com/watch?v=DrqR7a7lmBE
Title: This AI Agent Replaces an $82k/yr Graphic Designer (N8N)
[0] Hey, today I'm going to build a graphic [1] design AI agent live in front of you [3] that generates logos, ad creatives, [5] style guides, literally any visual asset [7] you guys want 24/7, plus you review it [9] and revise it until these assets are [11] perfect. Also, I'm going to include a [13] chatbot that you guys can install in [14] client workspaces and sell for a,000 [16] bucks a pop or more. Templates, [18] blueprints, everything you guys need is [20] down below in the description. If this [21] is your first time here, my name is [22] Nick. I've scaled my own AI and [24] automation agency at over 72,000 bucks a [26] month. And I'm now leading the biggest [27] AI automation community by revenue with [29] almost 3,000 automation freelancers and [31] agency owners. I'm going to build this [33] entire thing from scratch using Naden. [35] I'm going to walk you guys through my [36] entire thought process. I'll also show [37] you all the deadends and detours so you [39] guys could see what actual real high [41] value AI development looks like from [43] first principles. If that sounds like [44] something you guys want to get into, [45] this is a video for you. Let's do it. [49] Okay, so this is the system. It's an AI [51] agent built in N8N and AI agents have [54] their pros and their cons, but one of [55] the most valuable and best use cases for [58] them is this sort of like gradual [59] iterative design. Their ability to come [61] up with cool prompts and then their [63] ability to work with you until something [65] is to the point that you like it. So in [67] situations where accuracy is less of a [68] big deal, they're fantastic and this is [70] the design pattern I've chosen for this [72] system. The way that it works is [74] essentially you send it a message [76] saying, "Hey, how's it going?" It then [78] goes through and selects the OpenAI chat [80] model, stores a bunch of stuff in [82] memory, and then it has access to a [83] number of tools. We can generate a logo, [85] a style guide, a gradient background. We [86] can upscale images, and then we can feed [88] things back into the open API to do a [90] revision process, which I've mapped out. [92] You can add arbitrarily many of these [94] subworkflows. The way that they're [96] working to be specific is we are [97] basically downloading a pre-existing [100] asset using a highquality service like [101] Canva. So this is a style guide for [103] instance and then we're having it use [104] that style guide as like an example of [106] the thing that we want and it does a [108] pretty good job of mimicking the layout, [110] mimicking the way that things look and [112] then just adding in our own data. So [114] that's more or less what we're going to [115] do here. We've also exposed a little [117] chat endpoint over here and I just made [119] some minor design changes. So you guys [121] could take this, upload it into your [122] business, sell it to people as like a [124] chat endpoint. Do more or less whatever [126] you want, but in this case I'm just [127] going to communicate with it directly [128] through this little widget. And what [130] we're going to do to start is we're just [132] going to generate a style guide. So I'll [133] say, "Hey, I want to generate a style [136] guide." I'll show you guys the upscale [138] functionality as well in a second. We [140] also baked in logic to like have it ask [142] you things and, you know, follow up. So [144] I don't know, let's call it like [145] leftclick, uh, preferred colors, pastel [149] hues, rainbow, gradient, soft, light, [153] ethereal. I want minimalistic flat icon [156] design with no outlines. [159] And then for fonts, I want serif fonts. [162] Um, and then style guide will be yeah, [165] nothing. Okay, let's just go go for it. [170] It's going to take all of that data and [172] it's going to use it to generate a [173] request which is now feeding into our [174] style guide generator. Style guide [176] generator was the um one that was using [178] that example that I showed you earlier. [180] Kind of look like this. So, what it's [181] going to do is going to take this and [182] it's just going to modify it so that you [183] know instead of it saying orange or [185] something, it's going to say what we [186] want it to say, which in my case is [187] going to be leftclick. Okay. And then [188] once it's done, it returns it in a link [191] format, which is kind of cool. This is [193] what the leftclick brand looks like. Um, [195] reasonably high quality. I didn't [197] specify the date that I started the [199] company, but that's something you can do [200] as well. So, as you can see, it did [201] match pretty closely to what we were [203] looking for. Um, and I personally think [204] that this is extraordinarily sexy. So, [206] what I'm going to do next is I'll say [208] upscale this. Let's do 2x for now. What [211] it's going to do is going to take that [212] image that we just outputed, send it [214] over to the replicate API. Replicate [215] being the service that does all the [217] stuff. Um, and then yeah, we now have [220] the upscaled image over here, which is [222] twice as big. It's also much sharper, [224] which is really nice. So now this is [225] something that might be like client [226] ready. You could actually send it over [227] to a client or maybe you know, you're [228] using this internally or whatnot. And [230] then, yeah, just to show you guys an [231] example of like a bunch of the other [232] things you can do. I also had it like [233] generate me a gradient background. [234] Generate a gradient background based on [238] these colors. Light pink. [242] Let's do greenish pastel. Okay. So now [245] what it's going to do is going to go [246] down that third route. That's going to [247] generate me a gradient background using [249] another example that I provided. Okay. [251] And though it generated me a nice pastel [253] gradient. Opening that up. As you guys [255] could see, we do have that beautiful [256] pastel color. We could upscale it. We [258] could do whatever we want. We could also [259] ask it to change things. Hey, this is [262] great, but could you make it darker? So [266] now I'm going to ask it, could you make [267] it darker? It's going to ask me for some [268] clarification. Yes, make them deeper, [272] more saturated pastel tones. The reason [274] why you do this is because if you just [275] ask it to make a change for you, um it's [277] very uh general. So this allows us to [280] cut the fluff and get hyper specific and [282] then now we go through an edit or [284] revised route which allows us to close [286] the loop and it's uh one thing that a [287] lot of these graphic design team tools [289] are missing. I should also note we [290] expose an endpoint where you could use [292] this. Um so you could copy and paste [294] this URL, send it over to a client, have [296] the client specific templates or style [298] guide stuff for that particular [299] instance. Um, and then if I go to the [302] darker edited version, you can see that [303] it's done some some edits. So, you could [305] dial back the edits. You can make them [306] even more intense. I'm not a big fan of [308] this one, but is what it is. Uh, better [310] than having to hire a fiber designer or [312] something, right? And that's the system. [315] All right. So, as I mentioned, this is a [317] live build, meaning I'm looking at a [318] blank canvas now. I've yet to actually [320] do anything. The only thing I actually [321] have is a road map here. And this road [323] map is just me thinking through what I [326] believe is going to be how I'm going to [327] proceed with the system. I don't [329] actually know for sure, though. And the [330] reason why I'm showing you guys this and [331] leaving in all the detours and all the [333] ugly bits is because I actually think [334] this is a much better and easier way for [336] you guys to learn how to build systems [337] than just looking at the finished [338] product. I think that seeing the detours [340] that go into an actual live development [342] process, seeing some of the mistakes [344] that I make, seeing how I deal with [345] debugging and stuff like that, I think [347] that's actually just very valuable. And [348] when I was learning naden and make.com [350] and just no code and in general, I [352] followed creators that did stuff like [353] this specifically because they left it [355] all in. I liked seeing their thought [356] process. It was very informative. So [358] yeah, all I have so far is this road map [360] and this is what I think the system is [361] going to look like in a nutshell. Um I [363] want to start by building a workflow [364] that just generates an image using [366] OpenAI's GPT image 1. This is the [368] current most advanced uh you know image [370] model that I have access to and it's [372] also in the OpenAI stack. So it makes it [373] really easy to do everything I want to [374] do. But the reason why I'm starting with [377] the actual image generation is because I [378] always just like to start at the end and [380] then once I verify I can actually do the [382] thing that I want to do, which in this [383] case is going to be generate some [384] designs, then I'll work backwards to, [385] you know, putting together the agent [387] logic and making it all nice and pretty. [389] So, we're going to verify this first of [390] all. Then I'm thinking we're probably [392] just going to connect it straight to the [393] NA agent, start setting up some prompts, [396] and then I believe I'll have to build [397] different routes for different asset [399] types. Um, I don't know for sure, but [400] I'm thinking like, you know, we'll have [401] a logo, but what if somebody wants to [404] design like a style guide, right? That's [406] a pretty common thing for a design firm [408] to do. What if maybe we want some sort [410] of ad creative or maybe some website [412] design? I think what I'm going to have [414] to do, and I'm not entirely sure yet, [415] but I believe that this is going to be [417] fire, is I'm going to start with just [419] one route. After I verify that that [421] route works, I'm going to create like a [423] logo preset. Then I'm going to create [424] like a style guide preset. Then I'm [426] going to create like an ad creative [427] preset. And maybe I'll do two or three [429] for now. I don't actually know how many [430] I'm going to go down, but I'm going to [431] provide you guys the way and the nugget [432] that you will need to build out however [434] many of these you want. And the idea is [436] like I'm just going to use winning [438] templates that other people have already [439] created for these things. I'm going to [440] go on like Canva and I'm going to find [442] examples of style guides that crush and [443] then I'm going to provide it to GPT [445] image one alongside a prompt. So that [447] way we're going to take a template which [449] we know looks super sexy and then we're [451] just going to say, "Hey, I want you to [452] do something like this, but here's a [454] bunch of information about the specific [456] client request." That's how I think [457] we're going to do things. I'm not [458] entirely sure, but yeah, we'll give it a [460] go. Then I want to build some a scaling [462] functionality into the designer. And for [464] those of you guys that don't know, Aab [465] scaling basically just means like if an [467] image is 1,024 x,024 pixels, we just [470] scale it up to 2048* 2048. So we just [472] increase the quality of it. AI is pretty [474] good at that. And that'll avoid this [476] from just being a simple agent chatbt [478] wrapper, which I think a lot of agents [479] are. Then I'm going to build some way to [481] revise the images to make them better [482] and like, you know, make some [484] adjustments cuz revisions are pretty [485] common. And then finally, I'll make it [486] pretty and package it. Okay, this is [488] everything in a nutshell that I'm going [490] to try my best to do right now. In [492] reality, we're going to have some [492] detours. We're going to hit some [493] stumbling blocks. Whatever. Let's get to [495] it. First thing I want to do is I just [497] want to verify, can I actually generate [498] an image using GBT image one? In order [500] to do that, I'll hit over here, click [502] trigger manually, and then what I want [504] is I want the open AI node. I'm going to [505] click on that button. The specific node [508] I want is generate an image. Now, I'm [510] going to assume you guys don't have a [511] credential. So, I actually set this up [512] alongside you. Let's scroll down here. [514] And what we need to do is we need to [516] fill in this API key section. So in [518] order to do that, just head over to [519] platform.openai.com. [521] Log in. I believe I'm already logged in. [523] Yes, I am. Then I go to the top right [524] hand corner settings. Go to API keys. [527] Then just create a new secret key. So [529] I'll just say I don't know like Nad June [532] the 10th. You can see that I actually [534] did this cuz I wanted to already have [536] one, but spur the moment decided I would [538] redo it. Cool. Now I'm going to copy [539] this and I'm going to go down here. If [541] anybody wonders why I was exposed my [543] damn OpenAI keys, this is why. I'm going [546] to save. Somebody ran the hell up my [548] account the other day. Okay, open [549] account 3. And then down here under [551] model, it's a GBT image one. So, let's [552] click that. And let's just verify we can [554] actually do something cool. So, [555] minimalistic [557] flat logo for a brand called leftclick [562] no text inspired by Google's flat [567] iconic design. Let's do that. What sort [570] of options we have? Quality for demo. [573] I'm just going to go low. And then [574] resolution. Looks like we can change the [576] resolution to 1024 10 1536 or 1536. [580] Okay. So, I'm just going to click [581] execute step. The reason why I'm doing [582] this, again, just to be clear, is I [584] always like starting at the end. And I [586] recommend you guys start at the end, [587] too. Don't start at the beginning when [588] you do a system like this. Start at the [590] end. Verify you can do the thing that [591] everybody is paying you to do anyway. [593] Hardcode all the data. In our case, [594] we're hard coding the prompt and stuff. [596] And only once we verify that that works [598] are am I actually going to bother [599] putting together an agent or something. [601] Okay. All right. So, data. I'm going to [603] click view. What do we got? That looks [605] kind of cool. I mean, do I actually [607] think it looks cool? No, I don't like [608] the outline. Oh, okay. Yeah. Yeah. [610] Actually, I think when I put it on a [611] dark background, it look like trash. Now [613] that it's on a light background, it [614] actually looks okay. Um, why don't I do [617] no outlines? I don't really like the [619] outlines. Let's do pastel hues [623] and color tones. Let's do that. I'm just [626] going to play around with it a little [626] bit. I imagine this is why I'm thinking [628] we need some revision feature. I imagine [630] people are going to want to go back and [631] forth a little bit, right? Insert their [633] own things. So, yeah, I'm just trying to [636] see what sort of like user experience [638] the people that are using this are going [639] to have. And I think this is somewhat [641] realistic. So, it's a view. Oh, that's [643] so clean. That's the logo right there. [646] Look at that. Oh, that's way better than [648] my current logo. [650] I might actually steal that. Just save [652] this. Okay, we'll call it binary data. [655] Awesome. So, we verified this. Uh, do [656] you notice how right now the output is [658] in binary, though? I don't really like [659] this. I imagine this is going to serve a [661] problem. I don't know for sure, but like [662] rather than having it be output in [663] binary, why don't I um just add it to a [665] Google Drive. So, I'll go to Google [666] Drive. They have an uh node called [669] upload a file. So, I'm just going to my [671] Google Drive account. As opposed to just [673] showing you guys how to set up the [674] credential here, I'm not going to cuz I [676] actually did have my Google client ID [677] and secret leaked and that did lead me [679] to paying quite a lot of money. So, I'm [680] just going to give you guys the docs for [681] this. Just click on open docs. If you [683] guys want to connect Google Drive, you [684] do have to set up what's called a Google [686] Cloud console. And then after that, you [687] have to create a you have to authorize [690] the Google Drive app. And then after [692] that's done, you create a project. And [694] then in the project, you get a client ID [696] and client secret. So assuming that [698] you've done this now, and there's many [699] videos out there, just Google, you know, [700] Google Drive authentication. Assuming [702] you've done this, what we want to do is [704] we want to go to file name. I'll just [705] say design parent drive my drive root [707] folder. Okay. Input data field name. [709] This just needs to match this. So it [711] matches this. So I'm good. So, okay, now [713] that I have all this stuff, why don't I [714] just pin this and I click execute [716] workflow. You guys probably can't see [718] this in the bottom right, but it says [719] problem in node Google Drive. The [720] operation expects the nodes input data [722] to contain a binary file data, but none [723] was found item zero. So, why is this [725] occurring? It's occurring because in N8, [727] if you pin I I just realized a second [728] after I did it. If you pin a binary [731] output, it doesn't work. So, you [732] actually have to rerun the whole thing, [733] which kind of blows, but whatever. Let's [734] just rerun it. Let's see what happens. [736] The way that I I do debugging is I [738] always just take a deep breath anytime I [739] see a bug. H. And then I ask myself, [743] okay, what node is the problem arising [745] from? And then I find that just like [748] isolates the problem and it makes it a [749] lot easier to know where to go. And you [751] know, sometimes you don't know the node. [753] Looks like that actually worked. Um, [756] there are a lot of links on the right [757] hand side. I think it's web view. This [759] is what the one I'm going to paste in. [760] And we're going to see does it pop up? [762] Cool. So, as you can see, it took a [763] different approach this time. It didn't [764] take that like little mouse gradient [766] thing, which is unfortunate cuz I like [767] that one more, but whatever. It it did [769] upload the thing and we got a web view [771] link. So, let me just see. Can I see [772] this in incognito? Can't really see that [774] in incognito. That's unfortunate. Is [775] there some way I can like make this more [777] accessible? H a properties. What the [780] hell does that mean? I don't know. [782] Properties. The hell does that mean? I [784] don't know. Keep revision forever. OCR [786] language. Yeah, I don't know. Let's see. [788] Is there a node that that can make this [790] just accessible to everybody? H share [793] file probably. Let's see. Google Drive [795] account file resource share. the file I [797] I want to map by ID. I'll go expression [800] and I'm just going to map this here. [801] Okay, that looks good to me. And then [806] permissions. What do I want? I want roll [809] writer. So, I want the person to be able [811] to edit it and then it'll be anyone. So, [812] anyone gets this. I don't know what file [814] discovery is. Oh, I don't want to make [815] mine Googled Google. Okay. Now, if I pin [819] this now, will this work? Maybe it will. [821] I don't know. Hopefully, it will. Let's [822] see. Okay, it worked. Cool. So now this [825] is now accessible to anybody. So I'm [827] going to open up an incognito, paste in [828] my link. Can I see it? Yes, I can. [831] Fantastic. Cool, cool, cool. All right. [833] So what does this mean, ladies, [834] gentlemen, and anybody else that's [836] watching this? Uh, we are now done the [838] first hurdle. Okay, so this is now [841] complete. 100% good to go. We've now [843] built a workflow that generates the [844] image using OpenAS GBT1. Now it's time [847] to make this really fancy and build in [848] some agent logic. Okay, so what I want [851] to do is I want to connect this to an [852] NAND AI agent and set up prompts. So in [855] case you guys have never used an AI [857] agent before, I used to all over AI [859] agents all the time to be honest, but [861] recently the technology has gotten to a [863] point where AI agents are actually [864] somewhat reliable, which is nice. So [866] what they are is that this node right [867] over here where you connect a chat [868] model, memory, and a tool. In order to [870] have this stop being read, we need to [872] connect a chat trigger to it. So that's [875] what I'm going to do here and drag it. [877] Then under chat model, I'm going to type [878] open AI. The one that I'm just currently [881] addicted to using is GPT 4.1. I just use [884] it for everything. I don't use the mini. [885] I just pay full price. Why? Because I'm [887] a badass. Then I do sampling temperature [889] 0.7. That looks pretty cool to me. And [892] then memory. I always just do simple [894] memory. Now GPT 4.1's context window is [896] so big that you can actually totally get [898] away with having like a 5,000 context [900] window or something. I'm just going to [901] do 10. But I just want you to know that [903] this is like irrelevant now. Context [904] window doesn't matter. And before I do [905] this, let's just actually go ahead and [907] chat with us. So, open chat. Hey, what's [909] up? Just want to show you guys what this [911] looks like in case anybody here is new [912] to AI agents. So, what happened is I [915] sent the chat message and then it [916] thought for a second and then it passed [918] over to the chat model. Sent my message. [920] Hey, what's up? Hey, not much. Just here [922] ready to help. What's up with you? And [924] then it went back here, added it to [925] memory and then it kind of responded and [927] output this. Can you design me an image, [929] good sir? [932] No, I don't believe so. Why? Because it [935] can't help you because it doesn't have [937] access to a tool. But now what we're [938] going to do is we're actually going to [939] give it access to a tool. Tool is going [941] to make everything super hunky dory. So [943] now I'm going to go call NA workflow [944] tool. So call this tool to generate a [947] design. We'll say design for now, not [949] image. I'm going to go create a [950] subworkflow and personal. This is going [952] to open up a new window. And now we can [953] actually add the thing that we will be [955] calling. Okay. It'll ask us to change [958] the input schema. So what sort of data [959] do we want to provide to it using AI? I [961] want to provide the image prompt for [963] sure. the resolution probably because [966] that was a field. Uh and then let me see [968] what what else do we got actually [971] uh prompt resolution. We should add the [974] type as well. Like I don't know for sure [976] what the logic is going to be here but [978] uh hypothetically let's just say we have [980] three types. We have logo style guide. [983] Let's just say background for now. Logo, [985] style guide, and background. Okay. And [986] we're going to like you know hardcode [988] those in. So okay. Anyway, now we have a [990] sub workflow. Why don't we call this GPT [992] image one generator? Okay. Then in [996] brackets, what was the title of this? I [997] always like to organize them. AI graphic [999] designer. So this one's just in brackets [1000] going to be a graphic designer. That's [1002] how I know that the AI graphic designer [1003] agent is calling this. And then what am [1005] I going to do? I'm actually just going [1006] to copy all of this. Well, cut it and [1009] paste it in here. I'm going to remove [1011] this when clicking execute workflow. And [1014] then I'll feed this in directly. So what [1017] I've done now is I've taken the logic [1018] with the image generation the very end [1021] and I've added it to the subworkflow and [1023] I'm connecting that subworkflow as a [1025] tool to the main agent called AI graphic [1028] designer. Okay. So now when executed by [1030] a flow what do we have? Oh I think [1033] there's one more thing we might need. [1034] Actually [1036] you see the file name. I'm going to I'm [1037] going to have it create a file name too. [1039] I'm going to go over here. I'll go a [1041] file name. Okay. All right. All right, [1043] so once we have all this, okay, how do [1044] we actually map the fields and like make [1046] our agent be capable of sending data to [1048] the subworkflow and then receiving it? [1050] What we need to do is we need to map [1051] them by clicking execute step. It's now [1053] just going to output a bunch of examples [1055] here. What I want to do is I just want [1056] to like give it something. So image [1058] prompt simple flat minimalistic icon [1061] with a C similar to the Google logo [1066] flat, no outline. Let's do that. [1068] Resolution. I don't actually remember [1070] what the resolution types were. [1074] Already forgotten. 10,024. Okay. So, [1077] let's just double check. Anytime you [1078] want to double check what the actual [1080] like code value is of a field, just go [1083] from fix to expression. So, this is 1024 [1086] x024. [1087] So, you know, I just feed in a string [1090] basically. So, let me go over here. [1092] Let's just pretend that this is actually [1096] 1024 x24. Image type. For now, we'll go [1098] logo and then file name. What do we want [1099] to do? Like uh C logo logo. Let's do [1104] that. Okay. Save. Great. Now that this [1107] is done, we actually need to map this. [1108] So, let me delete this. Image prompt [1110] goes here. Quality. We'll just keep it [1112] as low for now cuz I don't want to burn [1114] my tokens and I'm just testing. [1115] Resolution will go here. Uh what else [1118] did we need? Google Drive. Okay. So, we [1120] we we don't actually have access to [1121] anything until we run this. That's how N [1123] works. So, we just have to execute this [1124] workflow. I'm just going to decouple it [1126] from the subsequent node so it doesn't [1127] run all the way. Then once I'm done with [1129] that, um, yeah, we'll, uh, we'll connect [1132] it and then map everything. Okay, I'm [1134] seeing that it just finished. Let's view [1136] this. Now, we got the logo. It's a C [1139] instead of a G. The copyright claims so [1141] I can hear them from here. Uh, what we [1144] do now is we go back to schema. And then [1146] what do I want? I want the file name. [1149] Stick that here. [1151] C logo. That looks good to me. Fine. [1153] Upload data file. That's good. Uh, can I [1157] Oh, you know what? I can't actually pin [1159] this. You guys remember there was that [1160] issue. All right. Well, that's fine. [1163] Everything else here looks okay, [1167] I think. I believe. I am not sure. Is it [1171] okay? You know, I think we have to edit [1174] uh edit some fields here actually too, [1176] which is annoying. [1178] Yeah, I think the way that the agent [1180] works is input goes here, output goes [1183] here. So, if the output node is the [1185] Google Drive share node, it's not going [1186] to work. I'm not entirely sure, but I [1188] think I need to use an edit fields node. [1190] Kind of sucks, but whatever. [1193] We'll go manual mapping. We'll go web [1196] view link. I think that's the only thing [1198] we need. Web view link. Anything else? [1204] Maybe we'll just add the initial prompt [1206] as well, just in case we need the [1208] initial prompt for editing purposes. [1211] Uh, do I not have the initial prompt? [1213] Where the hell is the initial prompt, [1214] man? Why is this so long? H, why is this [1219] so long? We'll call this initial prompt. [1222] We'll call this file name as well. [1227] Okay. Oh, and then we'll also call this [1229] uh file uh image type. [1233] Okay. I'm just providing a bunch of [1235] additional data just in case. Uh we can [1237] now just [1239] pause these execute the workflow. Does [1241] this output what I was expecting? Web [1243] view link. Copy paste C logo. Nice. That [1247] does work. All right. All right. All [1248] right. I think we're now ready to [1249] actually call this agent and just see [1250] what happens. Let's give it a try. So [1253] let me just add a system message and say [1255] you are helpful intelligent design [1258] assistant. [1260] You generate high quality designs using [1263] the provided tools. I'll say when you [1267] receive an image from a tool, [1270] wrap it wrap it in nice looking markdown [1274] ATX format and present it to the user. [1279] Uh markdown is just a simple way that [1281] you can format image outputs and just [1282] make it really pretty. And let's just [1284] rename this now to generate design. And [1286] I'm just going to go general for now. [1289] Okay, I believe NAND also has a tidy up [1291] selection now, which is cool. So, just [1293] um doing that. And now let's clear our [1296] previous output and say, "Hey, how's it [1299] going?" [1301] It says, "Hello, I'm doing well. How can [1302] I assist you with your designing today?" [1304] I'd like to generate a logo. [1309] What is the name or text for the logo? [1311] Let's go left click. Left click. No, [1315] left click. But don't include the text. [1320] Minimalistic, [1322] flat, no outlines, gradient, [1327] Google colors. [1329] Um, let's do a mouse [1332] pointer. [1335] Then let's go company. All right. [1337] Awesome. Just sent it all in. [1343] I'm not seeing anything here. Oh, my [1346] bad. I forgot the most important part of [1348] the prompt. Uh, which is the fact you [1350] have to have AI do it all. So, sorry. [1352] Anytime you're working with an agent, [1353] let the model define all of the [1355] parameters. Okay. All right. All right. [1358] I'm just going to say try again. It [1360] should now be okay. Crossing my fingers. [1363] Okay. The fact that it's already taking [1365] some time to generate is good. And don't [1368] be like me. Um, there's a little bit of [1370] nuance there. they're inside of your AI [1372] agent tool fields. You can actually [1375] specify the data that you send over [1377] there. And what we're doing is we're [1379] always letting AI define that logic no [1381] matter what. So just always make sure to [1383] go down here, click define automatically [1385] by the model. [1387] Okay. Anyway, it looks like it's giving [1389] me the logo, but I can't actually click [1391] it. Why can't I click it? H I think [1394] there's a bug of some kind. [1397] This is the input. This is the output. [1399] Let's go here. [1402] Odd. It looks like the output was [1404] generated fine. Oh, hold on a second. [1409] Ah, no. There there is some problem with [1411] this. I'm copying the JSON, not the [1413] actual output. [1416] All I want is the output. So, no. [1420] How do we actually see just the output [1422] data? [1426] It did the mouse. The mouse looks pretty [1428] cool. has some slight gradients and [1429] stuff, but um why isn't this wrapped? [1433] Maybe call this tool to generate a [1435] design. Then return the web view link in [1440] markdown ATX format so the user can [1444] click it and open a new tab. Maybe we [1447] try that. All right, let's do this one [1450] more time. [1452] Repeat this, please. Oh, and you know [1454] what? There's um some option here to [1457] pass through binary images. Let's do [1458] that as well, just in case that I'm [1460] missing something. Okay, I think this [1463] now worked. View logo, left click, mouse [1465] pointer. Clicking on it. Nice. Okay, [1466] cool. We got our little leftclick mouse [1468] pointer in there. Beautiful. Beautiful. [1469] Awesome. I should probably clarify. [1471] That's the name of my company. That's [1472] why I keep on saying left click over and [1474] over and over again. Cool. So, what have [1475] we done now, ladies, gentlemen? We have [1477] connected to NAND agent and we set up [1479] the prompts. Our next step is to build [1481] routes with design presets for different [1483] asset types. Now, you're probably [1485] wondering, Nick, what the hell is a [1486] design preset? Well, here's what I'm [1488] thinking. I know for a fact that if you [1490] give OpenAI GPT image 1 an example of [1493] something that you want, and then you [1495] say, hey, I want you to do it kind of [1497] like this, but I want you to swap out a [1498] bunch of stuff, it'll actually do a [1499] pretty good job. So, what I want to do [1502] is I want to give it a bunch of examples [1503] of things that I like that I've verified [1505] are great designs, and then I want to [1507] have it like change it up a little bit. [1509] Now the thing is I know for a fact that [1511] you also just can't use the GPT generate [1514] image node here. We have to actually [1516] take a different approach which kind of [1517] sucks. If I go to OpenAI here, you see [1520] how there's if I type in image or [1522] something. There's only analyze an image [1523] or generate an image. There's no actual [1524] like edit an image here. Unfortunately, [1527] there's nothing for for editing an [1529] image. So you can't actually supply an [1531] image as an input through their thing [1534] that I know of. I mean maybe I'm stupid. [1535] I don't know. Yeah, I I don't believe [1537] you can. I think you tech Yeah, I think [1539] you have to do an API call. So, that [1541] kind of sucks, right? But whatever. [1543] We'll make it work regardless. Somewhere [1544] in here, I have a cyclic content [1547] generator that I generated forever ago. [1549] And I was playing around with image01 or [1552] GPT image one, and I came into the HTTP [1556] request. So, I'm just going to copy this [1558] being lazy, but I'll run you guys [1559] through what it looks like. Basically, [1561] previously, I was using Dolly 3 to [1563] generate images of handdrawn squiggly [1565] cute subjects to put in a newsletter. [1567] And the newsletter outputs are actually [1568] pretty great. Um, but I was just testing [1570] it with GBT image, but I'll actually [1572] show you guys what it looks like. Let's [1573] just paste it back in here. Uh, should I [1575] paste it here? Should I paste? Okay, [1576] anyway, let's paste it here. And then [1579] I'm just going to add a manual trigger. [1581] So, what I want to do is, um, this is an [1583] HTTP request to the OpenAI back end, [1585] which does V1 images edits. Okay, I'll [1587] run you guys through how to set all this [1588] stuff up, and I'll pretend that I'm, you [1590] know, doing it live for you the first [1591] time, even though I'm copying this over [1593] from another workflow. But I I want you [1594] guys to know that like I copy stuff from [1596] previous workflows all the time. Like [1597] you want to talk about live builds, like [1599] 70% of my live builds are just like, hm, [1600] how the hell did I do that API spec [1602] before? And this is normal and it's [1603] actually recommended. Like I recommend [1605] you do this because every time you do an [1606] HTTP request like this, you are building [1608] a component. Why not make use of that [1611] component again? I mean, AI automation [1613] is all about leverage, right? So that's [1614] what I'm doing. And yeah, I mean, this [1616] is very similar to what I want to do. [1617] But anyway, let me actually show you [1618] guys an example of it first and then [1620] we'll I'll kind of kind of run you [1621] through the rest of this. Let's actually [1622] just use my Google Drive. [1624] That'll be easier. I'm going to download [1626] the file as binary and then I'm going to [1627] send it over to GPT image. What am I [1630] going to do for the image? I'll go to [1631] Canva [1633] and then I'm going to do style guide. [1637] Yes, this is where I make all my crappy [1639] thumbnails. That is definitely not me. [1643] Let's go. I guess just create then style [1646] guide. I want to see style guide doc. Is [1649] that really the only thing that we have [1650] for style guides? [1652] Wow, that sucks. [1655] Actually, [1658] my goodness, that's terrible. A brand [1659] guide. I think it's called a brand [1662] guide. [1664] Um, [1670] I'm going to go brand guide. Okay. Yeah, [1673] this is what I wanted. Okay. Okay. Okay. [1675] You see this? This is what I'm going to [1677] use as an example. [1679] I'm going to feed this into AI and I'm [1681] going to say, "Hey, I want you to [1682] generate stuff that's kind of like this. [1684] Let's do a PNG for now. [1687] We're not going to do the same aspect [1688] ratio, I don't think. Maybe we'll do [1690] 1536 or whatever." But I'm going to [1692] download this. And then what I'm going [1693] to do is I'm going to upload this to [1694] Google Drive. And then I'm going to [1695] access this. So, let's go drive. [1699] So, now what I'm going to do is I'm [1700] going to drag this over here. [1703] I don't know why that isn't coming in. [1706] I'm then going to open this. Um, I need [1708] to grab the link. So, I'll go share and [1710] then I'm just going to copy this link. [1713] This is the ID over here. So, if I just [1716] copy this and then go back to my AI [1718] workflow, I I can actually just paste [1720] the ID directly in here. This should [1722] download my file now as binary. We'll [1725] see. But, um, yeah, let's execute this [1727] step. [1728] We should have a binary file, right? [1730] View. All right, cool. That's pretty [1732] big, but whatever. We'll feed it into a [1734] one. So [1737] data using this image as inspiration, [1740] let's create a new style guide for a [1742] dark and moody brand called leftclick [1745] ink. [1748] Use sand sarah fonts and dark pastel [1751] hues [1753] along yes for design. Okay. So now what [1756] I'm going to do is I'm going to feed [1757] this in and then can we do resolution? [1760] Oh, I don't know if we can do resolution [1761] as output h. All right, whatever. I'm [1764] going to try execute step. Okay. Now, [1766] the output of this is always going to be [1767] B64_JSON. [1769] That just stands for base 64. It's kind [1771] of annoying, but what you can do is you [1773] can pin this node. And then let's just [1775] pin the rest of this over here. You can [1778] go base 64 convert to file feed in this [1785] data and put output in file. And then [1788] mime type. I think you have to go image [1791] image. Uh, I actually kind of forgot. [1794] Uh, I think it's PNG. Yes, PNG. PNG. [1798] There we go. And this will actually now [1800] create a PNG for you. At least it should [1803] create a PNG for you. We'll see. Right [1806] now, we actually have a PNG that we can [1808] view and download. And what does the [1809] actual PNG look like? Check this out. [1812] Leftclick ink S 2018. Left click ink. [1814] Left slick ink. Nice. Fonts. Quick sand. [1818] Quick sand. Color palette. Mouse [1820] pouring. It's dark and it's moody and [1823] this is our color palette. Listen, [1824] that's actually pretty good. I mean, [1825] that looks clean as hell. If I could [1827] generate these sorts of brand guides on [1829] demand and this is like part of the work [1830] that I did. Hell yeah. So, I'm thinking [1832] this is going to be the approach I'm [1833] going to take for all of the content. [1835] We're going to do like templated for [1837] style guides. We're going to do [1838] templated for I don't know. I'll [1839] probably do like a nice background [1840] gradient just to make my life easy and [1842] show you guys what's possible. And then [1844] I'll do some for logos too. And we'll [1845] just like pass this in. Now that I'm [1846] thinking about it, we can actually just [1847] add HTTP requests as tools. So, we could [1849] probably just map this one to one. [1850] That's going to be so easy. Basically, [1851] what I'm thinking of doing is we're [1852] going to have this [1854] call this generate logo. Okay. [1859] If we generate a logo, this is the tool [1860] we call. Then I'll say if you want to [1863] generate a style guide, then call that [1866] other tool. If you want to generate [1868] something else, then call that other [1869] tool. So this is just going to be our [1870] logo generator right here. Okay. Then [1872] what I want to do is I want to do HTTP [1874] request. Actually want to map this HTTP [1877] request from this. So, unfortunately, [1879] there's no way to map it. You just have [1880] to kind of copy and paste it one over [1882] one because the HTTP request nodes are a [1883] little different, but I know that it's a [1885] post. Nope. Post. I know that the [1888] authentication's predefined credential [1890] type. Under credential type, I'm going [1891] to go open AAI. This will allow you to [1893] actually collect or select the same [1895] credential that you created for OpenAI [1897] earlier. So, even though you're doing an [1899] HTTP request, you don't have to rebuild [1900] the wheel. Then underneath uh let's see [1904] what else did I do. underneath body we [1907] have to do form. So send body body [1911] content type form data I think and then [1914] we just go one for one model GPT image [1917] one [1919] and then NAN binary file image and then [1922] that last one is going to be the prompt [1924] sorry prompt we can have AI fill this in [1926] maybe I'll have that in for now and then [1928] I think that's all we need to do I'm not [1930] entirely sure probably let's just give [1932] it some [1935] instructions here as well call this tool [1938] to generate a style guide, then return [1941] the web view link in Markdown X format [1943] so the user can click it and open a new [1944] tab. [1948] Okay, so after we call the HTTP request [1950] to generate um style guide, [1953] we actually do have to um now that I'm [1956] thinking about it, do a couple a little [1958] bit of post-processing, [1960] right? [1962] So it's not actually that when we [1963] generate a style guide first we have to [1965] generate a bunch of [1968] binary using this. So, [1972] let's think. [1976] Okay, maybe we have one thing that [1979] downloads [1980] a specific file [1984] and then we'll download this file and I [1988] think it's called orange or something, [1990] right? [1993] No, [1995] this one right over here. [2000] Then we'll call this [2006] the [2007] gener uh grab style guide example. [2013] Then we'll feed that in here. [2016] And then we're also going to convert the [2019] file. Do we have any processing? [2022] No, we don't actually have the ability [2024] to do any processing. [2026] It's kind of annoying. Okay. Actually, [2027] now that I'm thinking about it, probably [2029] makes less sense to do it this way and [2030] it makes more sense just to feed it in [2032] as a subworkflow. As cool as it would be [2034] just to bang this out in one shot and [2036] then I, you know, I could edit it here. [2037] There's also the simplicity aspect, I [2040] like the idea of them all looking the [2041] same, feeling and working the same. Uh, [2044] and then obviously I wouldn't have to do [2045] this get style guide example, right? [2047] Yeah, probably makes sense. So, I think [2049] I'll call it there. You know, we're just [2050] going to duplicate this. Instead of a [2052] logo, it's going to be [2054] a style guide. then return the web view [2057] link in markdown format. And then what [2059] I'm going to do is I'm just going to [2060] create a new sub workflow. [2062] And instead of it being, you know, GBT1, [2065] I'll call this logo generator. [2068] This one right over here is going to be [2070] called style guide generator. I'll go [2073] back to my style guide generator and [2076] then copy this. Paste this in here. [2081] Now we should be able to [2085] yeah if you think about it download this [2087] file generate the image and then convert [2089] it to [2092] a file and then upload it to Google [2094] Drive at the very end as well. Why am I [2098] uploading to Google Drive? Because I [2100] want the format of this to be the same [2102] as the other generate which has the [2104] Google Drive upload and then share [2107] basically at the end. Uh, did I do this [2110] again for some reason? I think I did. [2112] That's stupid. Let me delete that. [2114] Right. So now we should be able to map [2117] this from the previous node. The only [2120] difference is it's going to be base 64. [2123] We're still going to upload it from data [2126] that we should also get when executed by [2128] another workflow. So I just want to make [2130] sure the schemas are the same. So can I [2131] just copy this? [2134] Is that going to work? I don't really [2135] know. [2137] Nah, you can't just paste one uh one [2139] node to another like that. We have to [2141] manually put them in. Kind of sucks, but [2142] it's what it is. Let's just manually add [2144] four. [2146] Image prompt is the first thing. [2148] Resolution is the second thing. Image [2151] type is the third thing. And then file [2154] name is the fourth thing. We're going to [2156] execute this step. [2158] We now have access to all of these. [2162] So, let me plug it in. Let's just copy [2164] these as examples for this so that we [2166] can actually run it too. [2170] So that's one. This is another. [2174] I don't like how it always goes on lines [2176] here. It's kind of annoying. [2178] This is now going to be style guide. And [2180] let's do 1536. [2184] And then this one down here is going to [2185] be called C logo. Then we'll say image [2189] prompt is [2192] style guide for leftclick a dark moody [2196] brand with [2198] sans sarah font and a frightening pastel [2204] frightening [2207] yet pleasant [2209] pastel hue. [2212] Okay, [2214] that sounds sufficiently [2217] that I think he could pass off for [2219] graphic design work. [2222] I'm going to get uh some hate for that, [2224] I take it. Uh generate image using GPD [2226] image one. So, what are we going to feed [2227] in here? Using this image as [2228] inspiration. No, we're not. What we're [2231] going to do is we're going to feed this [2232] in. [2235] I'll say create. [2238] Then I'm just going to feed this in [2240] using this image as inspiration. create [2242] and then going to do all that. Okay. [2246] Then after we're done with this, we are [2248] going to convert the file. [2251] Uh I think this is the right field. I'm [2254] not entirely sure. Then we're going to [2255] upload the file. And that should be [2256] fine. Just data with the file name. And [2258] then we're going to share the file, [2261] which also looks good to me. And then [2263] just copying the last thing from here. [2265] I'm then going to grab the Google Drive [2268] web view link. Cool. Cool. Cool. Let's [2271] drag all this now. And then let's just [2273] tidy up selection. Space them out all [2275] nicely. Very, very big fan of that [2277] feature. And then I just want to run [2278] this once. Just make sure that it works. [2280] Well, not make sure that it works. No [2281] way in hell it's going to work on the [2283] first go. Things never work on the first [2285] go. Um, but I'm just giving this a test. [2287] Oh my goodness. It might actually work [2289] in one shot. Good lord. I think it just [2291] worked in one shot. Okay, generate [2292] image. We generated it. Let's move on. [2295] We then generated or we grabbed the [2298] data. Oh my goodness. Talk about spooky. [2301] That's pretty funny. I like it. It's [2304] actually pretty close to my own logo. [2305] What does that say about me? [2308] Uh, okay. And then what? Web view link. [2310] We don't have web view link. Why not? [2311] Oh, cuz this one's called Google Drive, [2313] too. There we go. So, it was null. So, [2315] that wouldn't have actually worked. [2316] Cool. Um, just because I changed the way [2319] that the things were named a bit under [2322] edit fields. Everything else work [2323] though? Yeah, everything else worked. [2324] Okay, cool. So, now we should actually [2326] be able to like specify two different [2328] assets that we're generating. I should [2330] note that these run times are going to [2331] be a little while. Uh, but that's okay. [2333] Let's give it a try. So, AI agent, it's [2335] going to have two tools. You're helpful [2336] intelligent design assistant. You [2337] generate high quality designs using the [2339] provided tools. And then I always like [2341] to just like make it really clear what [2343] those tools are, right? Logo and [2346] generate style guide. When you receive [2348] an image from a tool, the user, [2352] the only two things you can generate are [2356] logos and style guides. Make sure to [2358] clarify which as well as any additional [2362] information needed. [2365] So your prompt is optimal. The prompt [2369] you send to the image model is optimal. [2373] Okay, great. Looks good to me. [2376] Am I missing anything? I don't think so. [2378] We're going to refresh this. Open this. [2380] Hey, what's going on? Hot stuff. [2385] Hi, I'm here to help you create amazing [2387] logos and style guides. If you have [2388] brand, project, or ID in mind, just let [2389] me know what you need. Logo, style [2390] guide, or both. Okay, let's start with a [2393] logo. [2395] And I'm kind of curious, what sort of [2397] questions is it going to ask me? [2401] So, name or text? Let's say workflow [2404] loop. I want it sleek, clean, minimal, [2409] flat icon style. Um, pleasant pastel [2413] hues reminiscent of the Google [2417] logo. [2419] Pick whatever images you'd like. Pick [2422] whatever symbols you'd like. Okay, send [2425] that over. We should now call the [2427] generate logo. And we are calling the [2429] generate logo. Cool. I should also note [2432] that all the images that were generated [2433] so far using the low resolution. So, [2435] it's like about as crappy as it'll ever [2436] be. But hey, just zoom out a little bit [2438] here just so that I could see the [2440] outputs and I could see the messages [2441] that I'm sending. [2444] Okay, it's done. We should now return [2446] it. Clicking it open workflow loop. [2449] Very, very cool. I really like this. The [2451] only downside is, as you see, there are [2453] still some issues with the text [2455] processing. That actually still looks [2457] pretty sweet, though. Not going to lie. [2458] I mean, this does a much better job than [2460] I'd ever be able to do. Okay, great. I'd [2462] now like you to generate a style guide. [2465] base it on the prompt I sent you above [2468] light pleasant etc. Okay, it should now [2472] turn that prompt that I used to generate [2474] the logo into a concordant style guide [2476] which should have some sort of similar [2479] data. Let's go to input style guide for [2481] workflow loop with a sleek clean [2483] minimalist flat icon style. Pleasant [2484] pastel hues reminiscent of the Google [2486] logo and ensure an overall light modern [2487] and inviting feel include suggested logo [2490] use color palette typography iconography [2492] and sample branding elements. Looks like [2494] it's feeding in a resolution that is not [2496] possible though. 1792 * 1024. [2500] That may be a little bad. Uh we should [2502] probably specify the resolutions, [2505] right? We should supported resolutions. [2509] Let's go 1024 * 1024. Can already tell [2513] that's going to be a bug. Um 1536 and [2518] then 1536. [2520] Cool. We should probably add this to the [2523] other one as well so it doesn't screw [2526] that up later. [2530] Yeah. So, we did run into an issue with [2532] that. [2534] Oh, wow. No, we didn't. Very cool. Look [2536] at this. Oh, so clean. Type typography. [2540] Regular iconography. Workflow loop. [2542] Workflow loop. Oh, this is very, very [2543] sexy. I am surprised it's that sexy, [2545] honestly. Was not expecting that at all. [2547] I like the green as well. Very cool. [2549] Very cool. So, now we have like a [2551] designer in-house basically that we can [2552] send this stuff off to. Um, let's do one [2555] more. And I'm going to breeze through [2556] this just because, you know, I want this [2558] to be like a very domain specific thing. [2560] So, like what's something that we always [2561] get asked for? Generate some cool [2562] gradient or something. Instead of you [2563] having to build like a gradient tool, [2564] you could totally just do this. So, [2567] let's do it. I'm just going to copy and [2568] paste this. Instead of style guide, it's [2570] just going to be like gradient [2572] background. So, let me rename this. [2574] We'll go gradient background. By the [2576] way, I'm using manual stuff for all [2578] this, but like you can just press space [2579] and then you can rename. Um, they've [2581] updated their hotkeys, which is pretty [2582] nice. This is going to be gradient [2584] background. So, space. Let's go generate [2587] gradient background. Over here, I'll say [2590] call this tool to generate a gradient [2592] background. and then return the web view [2594] link and markdown so the user can click [2595] it and open a new tab. Then I give you [2597] some supported resolutions. Very cool. [2599] Image prompt, whatever. I actually need [2600] to generate a new subworkflow, right? [2602] This one needs to be for gradient image [2604] background. [2606] Let's just copy this. [2612] Very cool. Very cool. Then I just [2614] basically want to, you know, duplicate [2616] this workflow. If you think about it, [2617] all this is going to be the same. Logic [2620] here is going to be the same. We're [2621] going to hook this puppy up. And now we [2624] just need to add those four schema [2626] types. So I think it was image prompt. I [2629] think it was resolution. I think it was [2632] image type. And then I think it was file [2634] name. And it doesn't look like we're [2635] actually going to use image type. Um [2637] why? Because I'm a silly goose. That's [2639] why. What am I going to do now? Just to [2641] make my life a lot easier. This is about [2643] as fast as I'd do it if I wasn't [2644] explaining everything. I'd say gradient [2646] for left click. Dark moody brand. [2650] Simple gradient background for left [2653] click. A dark moody brand that prefers [2657] dark pastel tones. [2660] Okay, looks good. Now, the file that I'm [2663] going to download has to be a gradient [2665] background. So, I like the noisy [2667] gradient backgrounds. Let me see if I [2668] can add noise to it. Oh, you see that? [2671] Oh, I love them noisy back. Oh, look at [2673] this. Oh, that's so sexy. Let's do that [2675] one. Open image in new tab. We're going [2679] to download this now. Uh oh, AVIF. No, [2682] sorry. We need a PNG. I I don't actually [2684] know for sure what you can use, but um [2686] this is way too big. I don't want to [2688] spend all that money. Okay, we'll use [2690] something that's midsize like this. This [2691] is JPG. I don't actually know if JPG is [2694] fine. Why don't I go JPG to PNG just in [2696] case? Um, it probably works. Yeah, you [2700] know what? I think it does work. Open AI [2701] API image. [2705] Can we support like a JPG? Let me just [2708] double check this really quickly. [2712] Yeah. Okay. Yeah, we can do just JPEG. [2714] So, let's just do JPEG. So, I'm going to [2716] grab this now. Oops. [2719] I'm just going to paste this somewhere. [2721] Let me just rename this to cool gradient [2725] background. [2727] Cool gradient background is now [2729] uploaded. We should be able to click [2730] this button to show the file location. [2733] And we got it. Um, so how are we going [2734] to get the ID? I'm just going to copy [2736] the link again. I'm going to grab this [2738] URL. Now, I can delete all this stuff [2740] cuz I don't need it anymore. Okay. Uh [2742] where are we here? I think it's this [2744] one. So, I'm just paste this ID in. And [2746] then generate the image. I'm going to [2748] say using this image as inspiration. [2751] Create. That should be good. Revert to [2754] file. Upload. [2756] Share. And this field should say Google [2758] 2. Okay, it does. Awesome. So, now what [2760] we're going to do is we're just going to [2761] run it. We're going to see how this one [2763] works. [2764] You'll notice that while I do all of [2765] this, I test after every run. Um, when I [2768] say every run, I mean every run. Like, I [2770] legitimately test after more or less any [2772] change that I make. And the reason why [2774] is because it's just much more [2775] effective. Like, let's say I were to run [2777] into some issue at some point with any [2778] part of my flow. And I didn't know what [2780] the issue was. Well, now that I because [2782] I test everything and then I do the next [2784] thing after, I know that if there's any [2785] issue with any part of my flow, it is [2787] the specific thing that I'm testing. [2788] It's nothing before or after. Okay. So, [2790] let's go to edit fields here. Let's see [2792] the web view again. Let's see how it did [2793] generating that gradient. I mean, it's [2795] okay. It's not the best gradient I've [2797] ever seen, but it is pretty dark and [2798] moody, so I think that works. Let me [2800] just see what sort of size was sent to [2802] it. I mean, you know, we we said low [2803] resolution, so I imagine that's why it [2804] was kind of grainy back there, but what [2806] kind of size was sent to it? 1536 by [2810] 1024. Does that 1536 x 1024? I don't [2814] know. It's tall. [2816] It's tall for sure. It's taller than it [2818] is wide. You know, this would this would [2820] have been square, something like that. [2822] But this is taller than it is wide. All [2824] right, whatever. I'll leave it at that. [2825] Looks pretty good to me. So, now we have [2827] three tools. An AI graphic design tool [2830] for gradient images, one for style [2832] guides, and one for logos. Notice how [2834] the logo I just left without any preset [2837] or example, but you guys could do [2838] whatever preset or example you want for [2840] any of this. The idea is I just want to [2841] give you guys the nuggets that you could [2842] use to make this better. Um, so where do [2845] we go from here? Well, we've actually [2848] done this now. So, we now have our Asian [2850] capable of doing this. So, why don't I [2851] do one more just little test with the [2854] gradient tool. And then from there, [2857] we'll mark that as done. Let me not mark [2859] that as done until we're 100% sure. So, [2861] let's refresh this. Generate me a cool [2865] breezy gradient [2868] background. Cool, breezy, light blue, [2872] almost ethereal gradient background. [2875] Okay. [2878] And you know, I think I just realized [2879] we've only given it two tools. [2884] Generate logo, generate style guide, and [2887] generate gradient background. [2894] Logos, style guides, and gradient [2897] backgrounds just so it doesn't make a uh [2900] make a major mistake. [2902] Still, the fact that it's taking a while [2903] to generate is a really good sign. We [2905] have our little sweat shop in the [2907] background. [2909] Let's see what that reel background [2911] looks like. Ooh, that is so much better. [2913] Oh, look how clean that is. I really [2914] like that. What sort of logo design do [2918] you think would fit with this? [2927] What do you think? Mhm. [2932] Okay, this is great. I like all of this. [2935] Let's generate a logo for workflow loop [2943] using your above tone [2946] above uh directions. [2950] We're going to take those directions. [2953] We're then going to feed that into the [2954] generate logo. And now you guys can see [2955] how there's a little bit of back and [2956] forth. you know, we're actually capable [2958] of having it generate something, asking [2960] it for some more refinement as a result, [2962] then feeding that into the next thing. [2965] This is very similar to the end result [2967] that I want to get to. The one final [2969] thing we need is we need a way to revise [2970] images. Well, I guess two final things. [2972] I want a way to upscale images cuz I [2974] don't like the resolutions that are [2975] provided. And I also want a way to um [2977] upscale im uh revise images. Okay, so [2980] look at this. This looks really sexy. It [2982] did make that mistake with the eye [2983] again. But hey, I mean, what what are [2985] you going to We have magic intelligence [2988] in the can. Are you really going to [2990] break a blood vessel or something [2991] because it forgot a tiny subset of [2994] pixels here? I definitely wouldn't. Um, [2996] so that's pretty cool. I'm pretty stoked [2997] on this. I'm building this in part [2999] because somebody asked me in a previous [3001] video about this, but also because I've [3002] wanted something like this for myself, [3004] so I'm pretty stoked on it. Let's now [3005] talk about that third last step, which [3007] is building an AI upscaling [3008] functionality into the designer. [3009] Upscaling is just an HTTP request with [3011] the image basically. Um, there's a a [3013] variety of upscalers out there. I'm [3015] thinking replicate upscaler. And I know [3017] for sure that there are a few. The one [3019] I'm thinking using is this Google one. [3021] So, it's just going to upscale it two to [3022] four times. Pretty simple. Pretty high [3024] quality. The way that you do this is you [3025] need to create an account. So, I haven't [3027] I don't think I've done this yet. Okay. [3029] So, I just signed in. Now, I'm [3030] authorizing. [3032] Cool. So, now I want to run with this [3034] API. Uh, I just want to do curl [3036] requests. Looks like this is how you do [3037] it. But I'm just going to copy this over [3039] into this. And what am I going to do [3041] now? Well, now I can actually do just an [3043] HTTP request. Like that's fine. I'm [3045] going to import the curl. Paste this in. [3047] I don't know what EOM means. I have no [3048] idea to be honest. Call this tool to [3051] upscale an image. [3053] And then let me see what sort of [3055] parameters can we provide. So we need [3058] Yeah, we need our API key. So I'm going [3060] to grab the API key in a sec, but that's [3061] it. Just input image upscale factor X4. [3064] Okay. [3066] for upscale factor you can you can write [3070] 2x or 4x nothing else okay let's just be [3073] very clear about that we need the [3075] replicate API token so how the hell do I [3077] get the API token dashboard [3080] private AI models I honestly don't know [3083] who knows oh API tokens there we go all [3084] right this my default API token we're [3086] going to go back here feed that in so do [3089] I need a dollar sign no probably not [3090] just feed in the token right this is [3093] going to be the URL that I'm feeding in [3094] so let's just double check this is Okay, [3096] bold one. Let's just give this a try. [3098] Um, the only thing that I really care [3099] about at this point is giving it a try. [3100] So, let's give it a try. Payment [3102] required. Check your payment details. [3104] All right, so that makes sense. Should [3105] probably add some payment details. That [3106] looks good to me. So, can I now just [3108] call this please? Okay, we're now [3109] upscaling the image. That's pretty neat. [3112] Um, looks like the output is called [3114] output. Sorry. Well, damn, that is [3117] upscaled as hell. Okay, cool. So now we [3119] have the ability to upscale [3121] return the output [3125] response zero output parameter wrapped [3128] in markdown [3131] nice markdown ATX format for the user [3135] actually I mean I guess the model's [3136] going to do it all but whatever let's [3138] now call this upscale image okay and now [3142] why don't we do this we do need to [3144] change one thing this over here is going [3147] to the dollar sign from AI and this is [3150] going to be like the input image URL. [3153] Then this over here [3156] is also going to have to be from AI. [3159] This is how you sort of do 50, you know, [3161] 50% upscale factor. Okay, so now I don't [3166] know for sure if this is going to work, [3167] but we'll give it a try. Let's just [3168] clear everything. Clear execution. Clear [3170] this. Hey, what's up? What tools do you [3174] have available? Oh, and I think I need [3176] to ask add one more tool here. [3180] Then you can also upscale them. [3184] Okay. [3185] What tools do you have available? We [3187] ask. And what will it say? It'll say we [3190] can generate these three or upscale [3192] them. Okay. Great. Generate me. [3196] Oops. [3198] Me a super funky Dory gradient. We want [3203] funky and we want Dory, baby. Let's make [3205] a funky dory. [3207] Super funky. Yeah, I think I should [3210] record these videos with sunglasses on [3213] for max funk. [3217] Get that that max funk on. All right. Uh [3220] let's see what we got here. [3224] Let's go. Chop chop. Giant galaxy brain. [3226] I got places I need to be. You know, I [3229] think when the robot uprising occurs, [3231] they're coming for me first because I [3233] just make them generate super funky dory [3235] gradient backgrounds. Great. Please [3238] upscale this. Now, it should do your [3240] request is invalid. Now, why is the [3242] request invalid? [3245] No. Why is the request invalid? Tell me. [3248] What was your input, man? [3251] Can we see the input that we are feeding [3253] into this or is it just going to give me [3254] the error? [3257] image input URL is this. [3260] Oh, that's why. [3263] Oh, yeah. We can't uh we can't feed a [3266] Google Drive link in. It's not going to [3269] work. I think what we need to do is we [3272] need to feed in a direct [3275] uh image link. One sec. [3278] This is the gradient background. [3281] No, this looks good. We have the [3283] download function on, don't we? [3287] So what was the object [3294] forex and then the UC right? [3298] Your request is invalid. [3302] Could we just pin all of these? I'd kind [3305] of forget if you could just pin these. [3314] Hm. [3318] All right. One sec. Let's just see if we [3320] could hardcode this and make this work. [3330] Yeah, it's a Google Drive link for sure. [3333] Definitely a Google Drive link. Uh, how [3335] about this? If we feed this in, is this [3337] going to work? [3339] Let's see. [3342] 4x. [3344] Uh, why is the four red? [3348] Okay, let's just go to imager. Imager. [3350] Open up this. Uh, and then go over here. [3354] Feed that in. [3357] Press is invalid or cannot be. Huh. Is [3359] is there some issue here that I'm not [3363] understanding? Because I thought this [3364] worked fine earlier. [3366] Let's go back to the replicate API. [3370] Let's see what my usage this month has [3372] been so far. 2 cents, right? So, [3378] no. No. Here's the upscaler, right? So, [3381] curl request input. [3383] This is the Is it only a PNG that this [3387] works with? Maybe. If I just feed this [3389] example in again and then I say 2x, is [3391] it going to work fine? If it does, then [3393] yeah, definitely an image. No, there's [3395] um actually just like some fundamental [3397] image with this. Okay, so it's not [3398] actually me. That's great. Um, that's [3400] fantastic. [3402] This is really good. [3405] Authorization content type application [3407] JSON prefer weight. Oh, X2. [3412] Oh, okay. My bad. So, I just made a very [3414] simple mistake [3416] where I was saying X2. [3421] I was saying um 2X when it should be X2. [3424] So, let's see now if this works on my [3427] Google Drive file. [3430] That was fast. I don't know if that [3432] works. It says output and null. So, I [3434] don't think that this works as an input. [3437] Okay. Well, now let's try this again. [3443] We're going to unpin all this. [3447] Going to get the link here. [3449] Try again. [3452] Feed that in. [3456] No, I I definitely just want it to [3458] finish. I don't want to wait like this. [3461] Oh, right, right, right. Sorry, I didn't [3463] I mapped it wrong. Right, right. I got [3464] to go um dollar sign from AI. And then [3468] this has to be input image URL. [3472] Then this over here has to be dollar [3474] sign from AI. And this one has to be [3476] upscale factor, right? [3480] Just make sure this looks good. Yes, it [3482] does. Okay. [3484] Try again. Let's do that. [3489] Oh, did we run out? I think we ran out. [3496] So, use the funky dory. It's now feeding [3498] in the funky door. It's taking some [3500] sweet ass time. This is a good sign. [3506] Hey, there's the super funky dory [3508] upscaled gradient. Look at that. Oh, [3510] that's so much better. Wow. Clean. Look [3513] at that. Oh, I'm so excited about this. [3516] All right, sweet. So, now we have the [3517] upscaling functionality built in. [3520] Wonderful. And hell, it even actually [3521] just like put the whole file in here. [3523] Why did it put the whole file in here? [3525] Do we have the binary or something? I [3526] don't know. Weird. Super cool, though. [3529] Super cool. Um, got the input image URL. [3532] Looks like it actually converted into a [3533] downloadable Google Drive file. So, I [3535] don't even need to make any edits. And [3536] yeah, we now have that. All right. So, [3539] we can head over here. Build AI [3541] upscaling functionality into designer. [3542] build a way to revise images is that's [3544] the last thing that we kind of need to [3545] do if you think about it. So, how are we [3546] going to do that? Well, we use something [3548] very similar to what I just showed you [3549] guys a moment ago with the generate [3551] style guide, generate gradient [3552] background. At least this is what I'm [3553] thinking. You know, we want to edit the [3555] image, right? So, in order to edit the [3557] image, we're going to have to feed in [3558] some previous image obviously. And then [3561] we're going to say no, make these minor [3562] adjustments to it. So, what am I going [3564] to do? I'm just going to copy what I did [3565] for gradient background. [3568] Then, I'm going to drag this over here. [3570] Okay. [3572] And then this one here will be called [3575] edit. Let's say edit /revise image. Call [3580] this tool to edit or revise an image. [3583] Only call this if you are explicitly [3585] asked to change something. [3589] Okay. And then supported resolutions. [3591] We're going to include those. And then [3593] I'm going to create a new subworkflow. [3596] This is now subworkflow number four. [3600] This subworkflow is going to be called [3602] the same thing as the rest of these just [3604] for organizational purposes. I'll just [3606] call this image [3609] editor. Maybe design editor revisor or [3612] something. And then over here, just [3615] going to copy [3616] all of these nodes, paste them right the [3619] hell back in, making use of previous [3621] time and logic. And then what I'm also [3624] going to do is I'm just going to get the [3627] uh right input schema like I had before. [3629] So I'm going to add image prompt [3631] including one new one. We'll do [3632] resolution. [3634] We'll do image type. [3637] Then we will do file name as well. Then [3640] the last one we're going to do is we're [3641] going to go previous image URL. The [3645] reason why we're feeding in the previous [3646] image URL is because we're then going to [3648] download the file directly from there. [3650] So, we actually just map it by URL. [3653] Okay. What I'm going to do here is I'm [3656] going to go grab the pinned output. I'm [3659] going to go back [3662] to this. [3664] Change it. The last thing is though, I [3667] want the previous image URL. [3671] And what do I want? Let's do this. I [3674] think this is this. [3676] Yeah, I believe this is okay for URL. [3680] I'm going to feed this in. [3683] Leave this and let's just say make this [3685] darker. [3687] 1024. This is revision and this is [3690] workflow loop logo. [3694] Okay. So now when this is executed, [3697] we should feed this in. [3700] Grab the previous image URL, which I [3702] don't know if this is going to work. [3703] We're going to find out. Then generate [3705] an image using GPT image 1. Then I'm [3707] going to say this is the former image. [3711] The client wants these revisions. Make [3714] them. Let's just try that. Okay. So, [3717] first thing is I'm just going to test to [3718] make sure the Google Drive node works [3720] with that URL mapped in. Does it? It [3723] does. So, we've now got the image back [3725] inside of NAN. We're now going to [3727] generate the image using GPT1. It's [3729] automatically going to model. [3731] Okay. And we also have the image prompt [3733] that we're pulling, which is good. After [3736] we're generating it, we're going to [3737] convert it. Then we're going to upload [3739] it. So that's cool. [3741] And then we're going to go Google Drive. [3744] Cool. And then we're going to edit the [3745] fields again. We're going to return [3746] everything. We want Google Drive to web [3748] view link, right? I think it's two. [3750] Yeah. Cool. So honestly, we we should [3752] have everything that we need now. I'm [3754] not entirely sure, but why don't we just [3756] try one whole run through from start to [3758] finish with the adjustments that we [3761] asked for. uh where we're going to feed [3762] in the actual image itself plus a [3765] request to change and we're going to see [3766] how all this stuff goes. [3769] Crossing my fingers here. That looks [3771] like it worked reasonably well. Now [3773] we're editing the fields. Let's see. Is [3774] this uh change visible? [3778] Well, it definitely did make it darker [3779] and it fixed the workflow loop. Um [3782] realistically, if I were to get this, I [3784] would probably see this and then I would [3785] say, well, I don't I didn't want it this [3786] dark. I mean, the background's black, [3788] you know. Realistically, I would say, [3790] you know, make this darker without [3791] changing the background, right? So, [3793] maybe there's going to be some issue [3795] where like when people make these [3797] changes, it'll specifically always screw [3800] up the background. I don't know for [3801] sure. Make them without materially [3804] changing [3805] anything not explicitly asked for, [3809] including backgrounds if relevant. Okay, [3811] I'm just going to try this one more time [3812] and just see if my minor little [3814] correction solved this one edge case. [3816] Now, obviously the issue with agents in [3818] general is that there's just so many [3820] edge cases, so many things that people [3821] could ask, right? So, we're not entirely [3823] 100% sure if this is necessarily going [3825] to cover all the edge cases, but we know [3826] that it can cover the specific [3828] background one, and that's okay. And [3829] then we can slowly build in some more um [3831] suggestions, I would say, to guide it [3833] towards the right answer. Okay. So, now [3836] with this adjustment, I'm just going to [3837] paste this in and see if we can grab the [3839] same thing. Maybe the issue is not [3841] necessarily that we should guide the [3845] rails at the generate image side. Maybe [3848] what we need to do is we need to force [3850] the user to construct a more explicit [3853] change. [3855] Make the logo part of this [3860] a darker blueish [3863] color. And maybe we have some sort of, [3865] you know, I like this, but make the logo [3867] part of the design a darker bluish [3871] color. Keep the background light [3875] white for transparency reasons. Let's do [3877] that. So maybe the problem is actually [3880] earlier up in the chain and we can [3882] achieve similar results if we adjust the [3885] way that the agent is making the call. [3887] And over here we say only call this if [3890] you're explicitly asked to change [3891] something. make sure that the user has [3894] explicitly defined what edits or change [3897] that they want, right? Something like [3899] that, I think, could work re [3901] realistically. It may also have [3903] something to do with the resolution. [3904] Maybe because we're having it generate [3906] like the lowest quality or something [3907] like that. Maybe it's just not as good. [3909] I don't know. But yeah, I mean, this [3911] obviously is significantly darker than [3912] the previous design. Um, which is nice. [3915] So, I think if I were to compare this [3918] design to this one, I obviously like [3920] this design more, but um you know, also [3922] maybe Oh, wow. Look, it didn't even [3924] really change the shape at all. Very, [3926] very barely. I mean, you know, there are [3928] some minor adjustments to sizing and [3929] stuff like this, but still pretty solid. [3932] Okay, so I think that's what we need to [3934] do. So, I'm just going to go back to the [3935] agent, [3937] then I'll say. Then you can also upscale [3940] them. And finally, you can revise them. [3944] If you are asked to adjust or revise an [3948] image, [3950] ask the user to define their changes as [3953] explicitly as possible. [3957] Okay, let's try this. Now, I'm going to [3959] open the chat again and I will say, [3964] "Hey, uh, well, let's just verify. Does [3965] this work? Hey, [3967] could you make funky Dory darker? [3972] Let's see if it's going to ask me. Uh, [3974] okay. So, there there is an issue with [3976] this. Why is there an issue with this? [3978] Oh, right. Right. We're missing one um [3981] field here which we can define [3982] automatically. There we go. [3987] Okay. Maybe we add give them a very [3989] simplistic ask. [3991] Uh the parameters value is in Oh, [3993] interesting. Image link I used to make [3995] the gradient darker. Why? What did we [3997] feed in here? Interesting. [3999] Well, we got to go up the stack again. [4000] So, opening a chat model, right? So, [4004] edit revise. So, what did we feed in? [4005] Replicate delivery. What the heck is [4007] this? [4009] Hm. Previous image URL was replicate [4012] delivery. I don't think it was. Oh, yes, [4015] it was. [4017] Huh. Does it look like the URL is [4019] incorrect, though? Why is it when I copy [4022] this, I'm pasting the wrong link? Well, [4026] this looks good to me. Can I access this [4027] without being signed in? Yes, I can. [4030] Strange. We need to be able to feed in [4032] the input URL, the previous image URL in [4034] order for it to do something with it. [4035] Right. So, what's going on here then? [4038] This is the designer. I fed in the [4040] previous image URL. [4043] So, let me unpin this. Maybe it has [4044] something to do with the pins. I don't [4045] entirely remember to be honest. We then [4048] download the previous image URL. Okay. [4050] Generate the image using that download [4052] thing. [4054] Google Drive 2 3. Okay. [4057] Hm. [4060] Let's try again. [4066] Getting the same details again. [4069] Are we feeding in something that we [4071] shouldn't be feeding in? H [4075] I'm going to view the subexecution and [4077] see what data was fed in. [4083] Okay. Okay. So, when executed by another [4084] workflow, we did feed in the replicate [4086] data. [4088] Looks like Google Drive. Oh. Oh, of [4092] course Google Drive can't download the [4093] replicate data. That would be silly. [4096] Okay, so [4099] this is an edge case and I'm glad we [4101] found it. Most of the changes that we're [4103] going to ask for are presumably going to [4105] be changes to the the source files that [4107] are generated from the gradient [4109] generator, the sty generator, or the [4111] logo generator. [4113] But in this case, I asked it to make a [4115] change using the upscaled image itself. [4118] And the likelihood of that occurring is [4119] low because it just doesn't really make [4121] logical sense. Why would you upscale the [4123] image and then be like, "No, actually, I [4124] want to change the upscaled image." [4126] Silly, right? So, what we should [4128] probably do instead of this is [4131] we should have some routes available [4132] where if somebody uploads a non- [4134] Googlele image, we should download the [4136] image and then we should upload it to [4137] Google and then continue with the route. [4138] That makes sense to me. So yeah, that's [4141] probably the the best way to do it. [4144] Are there any other things that we might [4146] do? No, this is the only route where [4148] this would be immediately applicable. [4150] Yeah, that's it. No other route. Why? [4152] Because logically this is the only route [4155] in which we would need [4157] something like that. So what we have to [4160] do is we have to switch [4163] and I will say if previous image URL [4167] contains [4171] we will say um Google then we go down [4175] route number one otherwise if previous [4179] image URL does not contain Google [4183] then I want to go down route number two [4186] so or route number one I should say so [4188] this should be route number zero right [4191] this should be route number one [4195] um Google [4196] this should be non Google. Okay. So, [4199] Google goes down here. Non- Googlele is [4202] actually going to do an HTTP request to [4204] that data first. [4207] And it's unfortunate, but I have to grab [4211] the execution history from here, don't [4214] I? Yes, I do. So, bear with me one [4217] second. Let's bring this up. Can we [4221] change this to be JavaScript? [4225] Yes, we can. [4228] Let's do this. [4230] Let's go back here. And then what I want [4233] is I need to pin this just like I was [4235] doing before. [4237] Oh, this is not what I wanted. Um, [4240] this is what I wanted. [4244] And then Oh, no, no, no, no, nope. I [4247] actually wanted the real data, but it [4248] looks like I'm copying the schema over. [4250] Why is that? It's pretty annoying. [4253] Can I just copy this whole thing or is [4256] it No, it is definitely going to do [4257] that. That's really crappy. [4261] Can I just copy this manually and then [4262] it'll work? Yeah. Yeah. Okay, that [4264] works. Let's go here. Nice. So, we [4267] should now have everything, I think. [4268] Save. [4270] Yeah. Yeah. Okay. So, now it's feeding [4272] the replicate URL in for our test. [4274] Because it's feeding the replicate URL [4275] in our test, it should always go down to [4277] this, which means we can feed in [4279] previous image URL here. What we're [4281] going to want to do is we're just going [4282] to want to download the file. And um [4284] I'll be honest, I don't remember how to [4285] download a file. So, let's just give it [4286] a go. That is an invalid URL, ladies and [4289] gentlemen. That is very invalid. [4292] So, why don't we delete this? Execute [4294] the workflow. [4296] Are we downloading the file? Hey, we are [4298] down downloading the file. Okay, great, [4300] great, great. So, then what we do is we [4302] upload this to Google Drive. You don't [4304] have to do this, mind you, but I'm doing [4306] it because I uh am a stickler for [4310] consistency. You know, like if [4311] everything else is going to be [4315] like this, then I'm going to include the [4318] same logic everywhere. [4321] So, if it's Google, it's going to go in [4323] here. [4326] Oh, sorry. And then if it's not Google, [4328] it's going to go in here. [4331] So, no matter what, uh, it should always [4333] get JSON previous image URL. And I think [4335] that's enough to close the chain. I may [4337] be wrong. I don't know. I might need a [4338] merge node or something. But, uh, why [4340] don't we just select everything and then [4342] how do we tidy up selection? Was it [4345] shift [4346] option t? Nice. I don't really like how [4350] it tidies it up, but what are you going [4351] to do? Execute workflow. Download. [4353] Upload. [4357] The parameters value is invalid. [4360] Why? [4363] Because this output is not going to be [4365] called previous image URL. Obviously, [4370] this is going to be called web view [4371] link. [4375] I'll go if make an expression here. [4380] Dollar sign if. Can we do that? Yeah. [4382] dollar sign if JSON previous image URL [4387] then we'll do JSON previous image URL [4390] then if not we'll go JSON dot [4394] web view link probably [4399] uh I'm not seeing this web view link [4404] I think that's sufficient I don't know [4407] for sure [4409] I think this is going to grab the web [4411] view link [4413] Um, no, this shouldn't. [4417] Okay, let's try this again. [4427] Okay, it's now downloading the file, [4428] generating the image using GBT1. Okay, [4430] cool. So, I think that logic worked. [4431] Let's see. So, it downloaded this URL. [4434] Cool. Cool. Which is nice. We've now put [4436] in a little bit of code here just to [4437] route it correctly. And uh yeah, we [4440] should now be good to go. So now, no [4442] matter what happens, we will always [4444] generate uh the right thing, which is [4447] nice. At least that's the idea anyway. [4450] And that is how you do a debug. That [4452] seemed like a pretty material issue. [4454] Obviously, we had to implement like [4455] different logic in order to handle it. [4457] And yeah, still pretty cool. Let's see [4458] what it looked like. [4461] Change is indeed much darker and much [4463] funkier. Okay, we are funk maxing. So [4466] given the funk maxing, let us now try. [4469] I'm going to be angry. I'm going to say [4472] try again. I fix [4476] it is now calling edit revise image. And [4478] we did not error out immediately. [4479] Meaning the editing is actually [4480] occurring as we speak. The logic was [4483] correct. [4485] I can close all this stuff. [4487] We can go back to the main route. [4490] What a beautiful, cool, simple, and easy [4493] example [4494] uh of an AI agent that actually adds [4497] value. Super cool. Super cool. You know, [4501] just 3 or 4 months ago, these agents had [4503] nowhere near as much accuracy or [4504] reliability. I'm happy to say that the [4506] hype bubble that I saw explode over the [4510] course of the last little bit is now [4512] finally gotten a little bit more [4513] reasonable. And these agents are [4514] actually a little more uh yeah, they're [4516] a little more valuable. Just the fact [4517] that it can automatically convert like a [4519] Google Drive file URL to a download link [4520] is pretty sweet. So awesome guys, that [4523] is that we are now done with that second [4526] last chunk. Building a way to revise [4527] them just to close loop. Now all we need [4529] to do is make it pretty and package it. [4530] What do I mean by make it a pretty and [4531] package it? Well, it's cool that it's [4532] like kind of in NAN, right? But who [4534] actually cares about that? Definitely [4536] nobody that you'll be selling this to. [4538] Definitely nobody that maybe you'll [4540] install this in the business of. What we [4541] need to do is we need to take this out [4542] of NAND now and we need to embed it on a [4544] website or give people a link. We also [4547] need to change the style and make it [4548] really pretty. I mean we are selling a [4550] design thing at the end of the day, [4551] right? So what are some ways to do that? [4553] Simplest most straightforward way is in [4555] the AI agent side you guys can actually [4558] like generate a link. What I'm going to [4559] do is when it says when chat message [4561] received click publicly available. We'll [4564] do hosted chat for now. And now if you [4567] guys just go inactive to active, you [4569] save this, paste this in, you actually [4571] now have a link. And that link allows [4573] you to communicate with this agent. So [4574] it's saying that his name is Nathan Nat, [4576] right? But uh it's obviously not. The [4578] cool thing is we can customize this to [4579] be whatever we want. So maybe I'll just [4581] say, "Hi, it's your graphic design [4584] agent. [4586] How can I help? [4588] I can generate a logo, style guide [4593] or background gradient for you. Let me [4596] know how I can help. Okay, [4599] so let me just test this. Uh, not test. [4603] Sorry. Let's just exit this out. We can [4605] clear the logs and the execution [4608] history. I think I need to save first, [4610] then refresh. Cool. And now we can [4614] actually go back and then we can change [4615] the font and the style and all that [4617] stuff. So how do we do that? Uh title. [4620] So title is hi there up here. So why [4622] don't we call this leftclick design [4625] agent. Maybe we'll do a little wave. [4627] Subtitle. What's subtitle? Subtitle is [4629] over here. So maybe we'll go I'm your [4633] friendly neighborhood [4637] design agent. Is that how you spell [4638] neighborhood? I think it's yelling at me [4640] because I'm Canadian. Yes, it is. [4644] I'm your friendly neighborhood design [4646] agent. [4647] And I need to save this. [4650] Cool. [4652] Then underneath, we can now go custom [4654] chat styling. Now, this is going to seem [4656] pretty intimidating to a lot of you [4657] guys. You guys, what the hell's going on [4659] here? Custom chat, chat color, primary [4661] chat color, whatever. Base layout, [4663] right? Uh, you can actually just add [4664] whatever the heck you want here. So, you [4666] know, window dimensions, you change the [4668] height of the embed, the input area [4671] color, and you can override any class [4673] that you want with like the chat message [4674] functionality. So, if I save this now [4676] and I go back here and I refresh, you'll [4677] see that this is now different. Why? [4679] Because it added some sort of like Times [4680] New Roman style to it. I don't really [4682] like the Times New Roman style. So, uh, [4685] let's just not do Times New Roman. No, [4687] thank you. Why don't we do Robboto [4689] first? [4691] I like Robboto. We'll do Robboto. That [4693] seems pretty nice. If I save this and [4696] refresh this now, I'm still getting that [4698] weird thing, I think. Why is that? Maybe [4700] because I don't have access to robboto. [4703] Let's open up this puppy. Apple system [4706] UI. Uh, what's Seigo UI? [4710] Sans serif is at the end. I think sans [4711] serif should be at the beginning [4714] probably. [4723] I probably just don't have most of the [4725] fonts that I'd want to be honest. Why [4726] don't I just remove this? [4731] Yeah. Okay, cool. Nice. Um, that's all [4735] right. I just double changed it, which [4736] is why it asked me. Why don't we change [4738] the uh palette a little bit? So, I don't [4739] like this blue. Um, let's go over here. [4741] If you guys like don't know what element [4743] is responsible for this, just go over [4744] here, go styles, and then find that [4748] blue. See where it says background [4751] chat-header-background. [4753] You guys can actually change this. So I [4754] always go to like Tailwind colors [4757] and then I just generate like a nice [4759] nice background gradient. And um I'm I'm [4762] a big fan of these colors here. They're [4763] kind of like greenish tealish whatever. [4765] Um let's do let's do 800. So that's [4769] this. So I'm going to go back over here [4771] to the code and then where it said what [4773] was it again? chat header pad or chat [4777] header. [4779] Go over here to where it says chat [4780] header color and it's just going to take [4782] from this variable. I don't really want [4784] that. I'm actually just going to hardode [4785] it. Um, sorry, I keep on clicking test [4789] chat, but that's not what we want to [4790] click. And I know I'm alt tabbing back [4791] and forth quite a bit, but okay. So, [4793] that actually changed the font. That's [4794] not what I wanted to do at all. Not in [4796] the slightest. [4799] Um, I believe we can't actually [4803] Yeah, that kind of sucks. We can't [4804] actually um reverse this easily. [4808] So that blows. We can just go FF FFF. [4812] That should be fine. FF is just white. [4815] Cool. Nice. That looks a little bit more [4816] left clicky. Uh maybe we'll go even [4818] darker than that to be honest. Maybe [4821] we'll go down here. You know, [4825] I'll go back here. [4832] Nice. That's much darker and much [4834] cleaner. Uh, we can also change the [4836] background color. It looks like the [4837] background color is this weird kind of [4839] like light thing. I don't really like [4841] it. So, I think it's probably h chat [4847] input background probably. So, I'm just [4849] going to change this all to white. [4852] Like I don't think this is white. Is [4854] this white? Might be white. If it's [4855] white, I'm cooked, man. Can hardly see [4858] colors anymore. [4860] No, this is white. This is not white. [4863] Obviously, they change the colors of [4864] this for a reason. Anyway, I guess the [4866] point that I'm making is you can [4866] actually go through and you can change [4868] basically every aspect of this. Um, you [4869] can also embed this on a website, which [4871] is kind of neat. So, as opposed to me [4873] having just this URL that I chat with, [4874] um, I can also embed it. But, uh, yeah, [4877] you guys can go arbitrarily deep on this [4879] if you want. You know, just take this, [4881] feed it into chat GBT, then ask it to [4884] design you like a color palette or [4886] something. And then, you know, we can [4888] actually do this side by side with let's [4889] do 03 Pro, which is like the most [4891] advanced model. So, I'm going to feed [4892] this in. [4894] I'll say this is a custom chat style for [4898] an NAND chatbot. [4901] I've attached an image of the NADN [4904] chatbot [4906] visuals as well. adjust the color [4909] palette [4911] and design so it's minimalistic, sleek, [4915] and uses a pastel blue color instead of [4919] the teal. Now, I'm going to go over [4921] here. [4924] Going to I guess hide this somewhere or [4927] it doesn't see it. It does see it. [4929] That's unfortunate. I think it'll be [4931] smart enough to know that that's [4932] actually part of its input. [4935] Paste that in there. And now we are [4937] going to click go. What's going to do [4939] now is send this off to 03 Pro. [4943] Okay. And the end result is uh we got [4945] this cool kind of sleek white design. I [4947] just called a design agent and said [4948] message anytime. You can you can just [4949] get rid of the stuff if you want. [4951] Obviously you can actually customize the [4953] hell out of this. Like I just changed a [4955] few of the colors around, but you can [4956] package this and make it as sexy as you [4957] want. Uh you can assign your own URL to [4960] it. A lot of different ways you can [4961] implement this in your own organization [4962] if you wanted to as well. Anyway, let's [4964] just have it actually go and do [4965] something that we want. So, hey, let's [4968] see what it says. How can I assist you [4970] with your design needs today? Would you [4971] like a logo, a style guide, or a [4972] gradient background? Let me know what [4973] you're looking for. Big fan of the I [4976] don't know, light pastel [4979] blue vibe. Thinking of creating a new [4982] brand around it. Cool color featuring [4985] light pastel blue as the main color. [4986] Sure, let's do it. [4989] Yeah, let's make a light blue pastel [4991] logo, but I want it to be flat and [4995] minimalistic, sort of like Google's, but [4998] with [5000] variations of that light blue color. [5005] In terms of what the company is is, it's [5008] called Whirlpool [5012] Automation. I don't want any text in [5014] there. Help me brainstorm something. A [5017] prompt first. Let's do that. So, it's [5019] going to help me come up with a prompt [5020] now. Flat minimalistic logo using only [5022] variations of light pastel blue. [5024] Abstract geometric whirlpool or swirling [5026] shapes. Nice. I like that. Cool. Now, [5028] it's actually going out and generating [5030] the design. So, that's pretty nice. [5032] Cool. Looks like we got something. Let's [5034] take a peek. Nice. This looks pretty [5036] interesting. I like that it's geometric. [5038] I'm not a big fan of this exactly to be [5040] honest. So, why don't I say, "Yes, I [5042] like this, but could you add sections to [5045] the whirlpool? [5048] I want them to be varying hues of that [5052] light blue." So, now we're going to test [5054] out the revision feature. Essentially, [5056] what should be occurring [5059] is we're going to have it distinct [5061] sections or segments. [5063] Yes, that's right. [5065] Okay, [5067] we're now um clarifying because if you [5069] guys remember, I asked it to clarify the [5071] hell out of any revision or design [5072] request so that it was as simple and as [5074] straightforward and as exact as [5076] possible. Now, we're sending off the [5078] revision track. So, it's going through [5080] and it's actually revising the design [5082] for us. And then we now have that [5084] finished. So, let me take a peek at it. [5086] I like this. If you notice, these are [5088] now slightly different colors, which is [5089] kind of cool. Um I like the fact that [5092] this one here is a noticeably darker [5093] shade of blue. And to be honest, this [5094] almost looks like the Open AAI logo. [5097] Anyway, that's kind of cool. Um, yeah, [5099] looks great. Upscale the hell out of [5101] this, please. [5103] So, now it's going to send that over to [5105] replicate and then it's going to deliver [5106] a higher quality one. Okay, now I'm [5108] going to check out the upscaled version. [5110] If we zoom in, you'll see there are [5111] these slight little artifacts um around [5113] it. The reason why we have these [5114] artifacts is uh this is just been [5117] trained on millions of images that human [5120] beings find sharper. And what's really [5123] interesting is they found that when you [5124] have a slight little outline like this, [5126] human beings rate the images sharper, [5128] aka higher resolution, aka better [5130] quality. And so, you know, I'll be [5132] honest, this this does seem [5133] significantly better quality to me. You [5134] guys may not be able to tell just [5136] through the uh the camera, but yeah, [5138] this is like sharp as hell. It's super [5139] clean. The lines are very exact. So, I [5142] like it a lot. All right. Anyway, so [5143] this isn't really enough for me. Let's [5145] go a little bit further and let's ask [5147] for a whole style guide. Great work. I'd [5149] like a style guide for a brand. [5153] Um, in the same fashion, let's have it [5156] now take my request and let's convert it [5158] into some sort of prompt. Now, what it's [5160] done is it's basically under the hood [5162] converted my request to a prompt. And [5164] now it's sent that out. And now it is [5165] now generating me a style guide. [5166] Similar, if you guys remember, to the [5168] template that I sent it over. So, in [5170] terms of what to expect, it's not just [5171] whipping stuff out of its ass. Like, it [5172] knows what I want essentially. Okay, so [5174] we've now generated a style guide. If I [5176] take a look at it, you can see that we [5177] Oh, look. I like what I did with the O [5179] rollpool automation. Here's the logo. [5181] Here's that. Here's the typography. [5182] Robboto color palette. Oo, I love the [5184] color gradient icons. Now, now we're not [5187] feeding in the logo that we just [5189] generated automatically into the style [5190] guide. So, um, ideally, we'd probably do [5192] the style guide first and we'd look at [5194] the style guides logo and then I don't [5196] know, maybe make some minor adjustments [5197] or something like that. We could [5198] obviously have built in the [5199] functionality to like, hey, when you're [5200] making the style guide, if anybody asked [5202] for any other image, then add that image [5204] to the style guide. But it's still [5205] pretty clean. I found it really [5207] interesting how it like picked uh inter [5209] and robboto here and then it even [5210] provided us some icons and stuff like [5212] that uh which is neat. Okay, awesome. [5215] Now let's do a light gradient [5217] background. [5218] So now it's going to generate me said [5220] light gradient background. [5223] Okay, and now we have a beautiful white [5225] uh/blue gradient as well. Just going to [5228] download that. And if we just and if we [5232] just head over here, I just want to show [5233] you guys what these assets look like on [5235] a brand board because I don't think [5236] they're you can really fully appreciate [5238] them without it. Um, these are really [5239] high quality assets. Like this is no [5241] joke. This is this is really good stuff. [5244] I mean, you know, I used to I mean, it [5245] looks like the colors here are just a [5246] tiny bit different. We could have asked [5248] to revise it so that the hues were just [5250] a bit off. Um, but still, uh, these are [5252] really high quality assets. These are [5253] things that you otherwise would have had [5255] to pay people for realistically just a [5257] few months ago. And the fact that we can [5258] generate them all autonomously using AI, [5262] you know, is one of the craziest things [5264] ever. So, let me just download this one [5266] as well. [5269] Arrange this right over here. I mean, [5271] like [5273] the fact that we just got all of these [5275] for nothing and we have a system that [5278] can now generate these things on demand [5280] basically for people, scale it up. So [5282] maybe instead of just doing the gradient [5284] background, the logo, the style guide or [5286] whatever, now you're doing some sort of [5288] like advertising stuff that's specific [5290] to the template or format that you like [5292] or characters for some video game or [5295] whatever. Um, the value in a system like [5297] this is that you basically get to do [5299] whatever the heck you want. And you [5300] know, I've hopefully shown you guys how [5303] to build the start of a system like [5304] this, but there's no reason why you just [5306] have to stick to these three or these [5307] four tools. You guys could realistically [5309] expand this to be however complicated [5310] you want. Okay? the core parts of the [5313] logic obviously uh we started at the end [5315] so we just verified that we could do [5317] what we wanted to do before we actually [5318] spent all the time effort and energy [5320] building logic to do it as we debugged [5322] as issues came up you know we took a [5324] deep breath we sort of confronted them [5326] step by step we took advantage of a [5328] couple of simple straightforward APIs we [5330] took advantage of some built-in NN [5332] functionality like import curl and so on [5334] and so forth and yeah the end result is [5336] ultimately a pretty high quality system [5337] so whether you want to install something [5338] like this in your own business or [5339] whether you want to sell a package [5341] package service like this to other [5342] people. The world is your oyster and you [5344] can do whatever the heck you want with [5346] it. Really appreciate you guys watching [5347] all the way to the end of the video. You [5349] guys know who you are. Y'all are the [5350] real ones. If you guys like this sort of [5352] stuff, definitely check out Maker [5353] School. It's my day-by-day [5354] accountability roadmap where I show [5356] people not just how to build automations [5357] like this, but how to get up and running [5359] selling them to real people. The [5361] guarantee portion of the program is 90 [5363] days. What I mean by that is if you join [5365] the program and you do not land your [5366] first customer within 90 days, I [5368] literally send you all of your money [5369] back. That's how confident I am that you [5371] could do this sort of thing. It's been [5372] followed by well over 4,000 people to [5374] date and uh yeah, it works. So, if you [5377] guys like this sort of thing, definitely [5378] check that out. Otherwise, if you guys [5380] just do me a big solid like, subscribe, [5381] do all that fun YouTube stuff that bumps [5383] me up to the top of the algo. And I'll [5384] catch you on the next video. Thanks so [5386] much.

Video: https://www.youtube.com/watch?v=JFRmgIGVuMY
Title: N8N MASTERCLASS 8 Hours (Build & Sell $10k+ AI Workflows)
[0] Hey, welcome to the most comprehensive [1] NAD building master class. This is over [3] eight hours of pure live automation [5] builds and my goal is to take you from a [7] pure beginner and turn you into somebody [8] who can build professionalgrade AI [10] workflows that a business is willing to [11] pay thousands of dollars for. This is [13] your first time here. I'm Nick. I scaled [15] my own AI automation agency to 72K a [17] month. And I now run the biggest paid AI [19] automation community with around 3,000 [20] AI automation freelancers and AI agency [22] owners. Most of them land their first [24] paying client within 2 to 3 weeks of [26] joining thanks to our daily [27] accountability program and our proven [28] frameworks. So, I don't just want this [30] to be another cookie cutter NAND [31] tutorial. There are millions of those. [33] My goal instead is for this to be a [34] comprehensive guide to real building. In [37] particular, I'm going to be creating [38] eight high value NADN workflows that you [40] guys can start selling immediately. What [42] that means, I'm not just going to show [43] you a pretty finished product. In many [44] cases, I'm actually going to build this [45] entire thing alongside you live as if I [47] have no idea what I'm putting together, [49] and I'm going to do it while narrating [50] my thought process out loud cuz I think [51] it's much more instructive for people to [53] see what a real build process looks like [55] versus just the shiny finished product [57] at the end. So, we're going to cover [58] everything from the absolute foundations [60] here to advanced systems that can [62] command $3,000 to $10,000 per [64] implementation. I've also added [65] timestamps for every section in the [66] description, meaning you guys can just [68] jump around to what you need most and [69] then come back for the rest. And also, [70] just make sure to bookmark this video so [72] you can reference the workflows again [73] and again as you build and scale your [75] automation company. Okay, whether you're [77] looking to automate your own business or [78] start an automation agency or maybe just [80] add some highv value skills to your [81] freelancing toolkit, welcome to the [83] complete nadn building masterass. Before [85] we start, this master class is all about [86] live builds. The purpose is to show you, [88] as I mentioned, what a real live build [89] process looks like. And then I want you [91] to internalize the parts of automation [92] that you can't really learn by reading, [94] only by watching somebody who knows what [96] they're doing do it. So to make sure [98] everybody's on the same page, this first [99] section is going to include an [100] introductory course on the foundations [102] of NAD. I'm going to include content on [103] simple logic, workflows, some basic [106] nodes, and maybe some more. I have this [107] elsewhere on my channel, so if you guys [109] have already seen all of this stuff, you [110] can jump right to the next section. The [112] key here is to build a solid foundation [113] that will support everything else we do [114] later. Because when we start building [115] those $5,000 plus automation systems, [118] you do need to understand some core [119] fundamentals inside and out before you [121] can get to the good stuff. Let's now [123] dive into the NAN foundations that are [125] going to make everything else possible. [126] So, if you guys have seen some of the [127] other videos on my channel, you'll know [128] that I put a very big emphasis on [130] building things practically. I don't [131] really care much for the academic side [133] of things. I prefer we just dive right [134] in and then teach some of these concepts [136] by actually putting nodes together, [137] making workflows that you could sell for [139] business purposes or implement into your [140] own companies. And that's what we're [142] going to be doing today. We can't really [143] get away from doing some of the academic [146] stuff with JSON just because, you know, [147] if you don't know JavaScript object [149] notation, you are going to have to learn [150] some things like types and objects and [152] what variables are and stuff like that. [154] But for the most part, we're going to be [155] learning all of these concepts down here [157] by building two workflows. The first [159] workflow is up here. And essentially [161] what this does is it feeds in a bunch of [163] lead data to artificial [166] intelligence. This is the Google sheet [168] containing four leads with a bunch of [170] information here. So we're going to feed [171] in this information to AI. Then what [173] we're going to do is we're going to have [174] AI generate a subject line for an email, [176] an icebreaker for an email, an elevator [178] pitch for an email, a call to action, [180] and then a post script little PS sign. [182] The idea here is this is a real workflow [184] that people pay me for. And so these are [186] the ones that I want to I want to start [187] with. Essentially, this will allow you [189] to customize email outreach that it [190] seems as if you've done a lot of [192] research into the person, uh, which is [193] very, very valuable in a business [195] setting. The second workflow is a little [197] bit more peculiar, I guess. There's this [199] service out there called source of [200] sources. It used to be called helper [202] reporter at Haro. Basically, the way [203] that it works is this lovely gentleman [205] here, Peter, will send you uh a bunch of [208] information basically where journalists [210] are looking for professionals in a [212] certain industry to weigh in on some [215] developments. And then if you're a [217] professional in the industry and you [218] give the journalist some good info, they [220] can actually tag you and then like use [221] you in an article, it's a quick and easy [223] way to basically get listed in a [224] magazine or some very authoritative data [226] source. And what this system does is it [229] basically gets an email like this. Then [231] it pumps in the titles into AI, does [233] some cool processing, and then we [234] actually write a draft of that email as [236] if we were an expert in that field, [238] which all you need to do is just like [239] quickly review, give a once over, edit a [241] little bit, and then send off to [242] journalists. There's another system that [243] I've sold a number of times. And so I [245] want the videos that I create on NAND to [247] be practical in nature. I want them to [249] be on things that you're probably going [250] to be using for business purposes. So [251] these are the two systems that uh we're [253] going to be building. They're cool [254] systems and all, but you know, for the [255] purpose of this video, I kind of want to [256] build them from scratch. So why don't we [257] just exit out of that puppy? That's the [259] prompt that we're going to be using for [260] AI. And for the rest of this, we'll just [263] get rid of that. Okay. The very first [265] concept I want to cover are fixed fields [267] and expression fields. I'm going to be [268] basically convincing you to just use [270] expressions all the time. And I'm also [271] going to show you how to map different [272] field inputs because the last time that [273] we jumped around Nadn, we built a couple [276] of workflows, but I was sort of glancing [277] over at some of the nuance behind fields [279] and stuff like that. So, for the [280] purposes of demonstration, it's going to [281] be pretty easy. We're just going to [283] build the first system out by clicking a [284] button that is going to get a bunch of [287] data from our Google sheet and then [289] we're just going to pass all of that [290] data in kind of rowby row into AI. [293] Pretty simple, pretty straightforward, [294] but ultimately something that is very [295] useful and you'll find yourself doing [296] quite a bit if you do cold outreach. So, [298] first things first, I'm just going to [299] press tab. That's going to open up this [301] trigger thing on the lefth hand side. [302] And then, you know, if you type trigger [304] here, there'll be if you type trig, I [306] should say, you'll see a ton of options [308] here. Um, you could either do that or [309] you could just scroll down to the bottom [310] where it says add another trigger and [311] then press trigger manually. Either is [313] fine, but for the purpose of this demo, [315] I'm just going to do that. And basically [317] what I want to do is the second that I [319] run this trigger, when I click on test [320] workflow, um, I want to, uh, get all of [323] the rows and all the data in my Google [324] sheet. So, I'm going to go up here to [325] nodes. I'm just going to type in sheet. [327] We're going to get Google Sheets. Now, [329] what I'm going to do is if you scroll [331] down here, you'll see that there's this [332] one node called get rows and sheets. [334] That's what I'm going to click on. Now, [336] I've already done a connection before. [338] Um, what you're going to have to do if [339] you want to connect to your Google [340] Sheets account is go to create new [342] connection. Now, because I'm on the [343] cloud hosted offering, and keep in mind [345] if you're not on the cloud hosted [346] offering, um, these sorts of connections [347] are a little bit more difficult. You [349] have to go to Google Cloud Console and [350] get set up there. But because I'm on the [352] cloud hosted offering, all I need to do [353] is click sign in with Google over here. [355] And I'll actually go connect to my email [358] account and then it'll create a [359] credential for me, which is pretty [361] handy. So you can see it's saying it's [363] already has some access just because [364] I've already done this connection. But [365] for the purpose of this demo, I just [366] wanted to show you guys what that looks [368] like. And then I'm just going to save [370] this connection here with a name so that [371] it's just nice and organized. Okay. And [373] what we want to do is we just want to [374] grab this Google sheet up here, right? [376] So, in NADM, there are a variety of ways [379] to do this, but I'm just going to I'm [381] going to be looking for a document. [383] Sorry, a sheet within a document. My [384] bad. The document we're going to want to [386] select is from the list. And we're [387] actually going to go down. We're going [388] to choose this one called leads, comma [390] space, January 27th, 2025. So, as you [394] can see, we've already manually found [395] that. Okay. And then the specific [398] subshet that we want is this sheet one [401] because I guess that's the only one that [402] we have here. So, I'm just going to [403] click on this. It's going to actually do [405] an API call to Google Sheets. It's going [407] to find that there's only sheet one [408] here. Then I can give it a click and [409] then voila. Let me just run test step [412] and let's see what happens when I click [414] test. Okay, great. So, I've offiscated [416] this data. This data is not um actually [418] one for one whoever this this person is. [420] I've gone through and I've like renamed [422] them and stuff like that just for [423] privacy purposes. But as we see on the [425] right hand side here, we we have a bunch [426] of output. And we can see the output in [428] a variety of ways. Tabular, JSON, [430] schema. most people in and they like the [432] schema look because it just kind of [434] compresses the information nicely. It's [435] a little bit easier for them to see. I'm [437] a little zoomed in here too. Um but uh [439] yeah, you know, normally like you see [441] most of the node variables which is [443] pretty handy. But this JSON one over [446] here, this is really intimidating for a [448] lot of people. And so we're we're going [449] to cover this in detail. I'm going to [450] show you exactly how you read JSON, what [452] all those things mean. But just I just [453] want you guys to know that for the [454] remainder of this course, I'm going to [455] be using primarily the JSON and the [457] schema view. But I'm actually going to [458] tend towards JSON. And the reason why [460] I'm going to be tending towards Jason is [461] because like JSON says all the same [464] stuff that the schema view does anyway. [466] But unfortunately part of the way you [467] learn JSON is just by kind of staring at [469] it a lot and squinting at it and kind of [470] inherently and intuitively understanding [472] the formatting. If we're going to be [473] looking at outputs all day anyway, we [475] might as well kind of get, you know, [476] kill two birds with one stone. All of [477] the same data in JSON is represented in [480] schema anyway. It's just instead of like [482] the quotes around key names and stuff, [483] you just have sort of this light gray [485] box alongside like a type sign here. So, [487] I guess the point I'm making is we might [489] as well double up and just learn how [490] JSON looks while we're proceeding with [492] the course. Um, and that's why I'm going [493] to be using this. Even if it looks a [494] little bit more intimidating, don't [495] worry too much about it. Okay. So, I [496] said that I'd talk about fields, right? [498] So, fields in N&M just as I was covering [500] on the previous video are stuff like [502] this, right? We have this sort of center [504] node config option here for our Google [506] Sheets node. Um, you know, one of the [508] fields we selected was this YouTube [511] credential to connect with. Another one [513] was this resource sheet within document [515] operation document sheet. But I want you [517] to know that these are actually all [519] representable in code as well. So as you [523] see over here, we have two different [524] types of fields. One's called fixed and [526] the other is called expression. So by [528] default, just to keep your life easy and [530] to not like freak you the hell out, [532] especially if you're like a newbie and [533] an um they're going to keep all the [535] fields to the fixed type. But if you [537] click on [538] expression, you'll see that things are [540] now a little bit different. [542] Notice how when I went to fixed, we had [545] like a nice little, you know, it said um [547] leads January 27, 2025. And then when I [549] jump over to expression, now we have [550] some big long ID. So what is this? Why [553] is it structured that way? And what [555] exactly does any of this mean? Well, if [558] we pay close attention, this ID field [560] here, 1 lowerase o t r r r r r r r r r r [563] r r r r r r r r r r r a t 4 C capital C [565] and then the rest of this big long ID [567] string over here. If we go to our Google [569] sheet, what you'll see is that that ID [571] string actually matches the URL of our [573] Google sheet [575] exactly. This takes me to a wider point. [577] Most of the time, sorry about that. Most [579] of the time, anytime you're accessing a [580] resource on some API or even just on the [583] internet, they will store the ID of the [585] resource, which is sort of like a hidden [587] representation of it, in the URL. So, [591] you know, one of the examples that I [592] provided the other day was I went over [593] to ClickUp, right? And inside of [596] ClickUp, I like searched around for some [598] record. I'm just going to click on this [599] here. This is this was my old content [600] calendar. Um, how to send 1,000 cold [603] Instagram DMs per day. That was one of [604] the things I wanted to do. This right up [606] here is the ID of the record. [610] 86B27A7Zm, right? If I wanted to do [613] something with this through their API, [614] this is the ID of the record that I [616] would be calling. So, I want you to know [618] that like ClickUp, uh, Monday, uh, like [620] even Gmail, basically every service out [622] there, they will store the ID of the [624] thing you want to modify or update or [626] whatever just in the URL. So if ever a [629] field asks for an ID, you can almost [631] always just go to the URL of the thing [633] on the actual user um you know on the [635] actual app like the user interface, then [637] you can find that URL thing. You just [639] hardcode it in here. Okay, so that's [641] just a just a brief look at some of the [643] differences between fixed and [645] expression. Basically fix a lot of the [646] time just to to keep you guys um to make [649] sure that like we're on the same page [650] here. Fix is just the simpler version. [653] Then expression is sort of what's [654] actually going on under the hood. So, [656] you know, um, NAN just defaults to fix [658] like it just did here because it doesn't [660] really want to scare you away. But in [662] order to really unlock the value of NAN, [665] we have to go to the expression, um, [667] field. And I'm going to show you here [668] why, you know, I basically just use [669] expression for everything at this point. [672] Okay. So, looking at the output here, [674] what we have is we have we clicked and [676] then we got a click event that was [677] counted as one item. And so, N8 actually [679] shows you the number of items that are [680] passed on. Then we pumped that click [683] event into Google Sheets and then that [685] click event outputed four items. So now [686] we actually we're working off of array [688] data or tabular data which I'll cover um [690] in a moment. But essentially with these [692] four items now what we want to do is we [694] want to pass each of these items into [696] artificial intelligence and we want to [697] have AI tell us something about it [699] before um writing some cold email copy [702] for us to insert into an email or maybe [703] we could just send a Gmail directly or [705] something. So what I'm going to do is [706] I'm going to click on this button. I [708] zoom out a little bit. What we want is [710] we want um if you go down advanced AI, [713] we want is we want this open AI node. [715] And specifically what I want is I want [717] the message a model. So if you've seen [719] me connect this in the previous video, [721] you'll notice that you know in order to [722] create a new credential, you actually [723] have to go and you have to find the API [725] key from OpenAI in order to do this. [727] This is pretty simple to do. You just [728] type [730] platform.openai.com/ I think it's like [731] account/appi or something. You'll have [733] to click on this button here to open the [735] documentation to tell you more. But [737] anyway, you can basically just create an [738] API key for Nadn. Um, it's very simple [741] and very straightforward to do so. And [742] I've already done this and I've called [744] it YouTube. So, I'm just going to use [745] that credential just so I don't have to [747] like leak another API key. Now, again, [749] we have a ton. We have a ton of fields. [751] We have resource text operation message [753] and model from list choose. Keep in mind [756] the fields are again fixed, right? It's [758] trying to make it really easy for us to [759] select GPT40. So I'm just going to go [761] down here, type [762] GPT and four. And then I'm just going to [766] click 4 O. And now we actually enter in [768] the text that we're interested in. Okay. [771] And this is really where you're going to [772] start learning the differences between [774] the fixed and the expression. So fixed [776] again, fixed is just I mean it's what [777] the name implies. It's fixed. It's text. [779] You can't make this dynamic. You can't [781] add variables to it. It's the simplest [782] way to get up and running with a node, [784] which is why nad will default to fixed. [787] Um, but over the course of the next few [788] minutes, I'm going to convince you to [789] basically always just use expression. [792] Okay. So, I I saved my prompt somewhere [794] else. The first thing I'm going to do is [795] I'm going to add a system prompt. So, [796] I'm going to go down here to system. [797] I'll just say you are a helpful [799] intelligent writing assistant. Usually, [801] the way that you will do um AI calls is [803] you will have a system prompt first. [806] Then you'll have a user prompt after. [808] And the user prompt is where you [809] actually give it the instructions you [810] want it to do. So, you know, in our [812] case, it's going to be like, hey, I want [813] you to write a bunch of fields that are [814] templates that we're going to insert [815] into a cold email later. And then after [816] you have the choice to provide a bunch [817] of examples. So you could provide an [818] assistant prompt and then you could do [820] another user prompt. Assistant prompt. [821] User prompt. Assistant prompt. You can [823] do that however many times you want just [824] to show it how things work. For the [826] purpose of this example, I'm just going [827] to be providing a single user prompt. [828] And what I'm going to be doing here is [830] I'm just going to copy over my prompt [832] below. Let me paste that in. And let's [835] just read through this together. Your [837] task is to personalize an email. You'll [839] do this by taking as input a prospect [841] LinkedIn profile. Then editing five [843] templates for different sections of the [845] email. Subject line, icebreaker, [847] elevator pitch, call to action, and a PS [849] or postcript field. If you're unfamiliar [851] with postcript, you know, at the bottom [852] of an email, it'll just say PS, I really [855] miss you. Can't wait to see you. That's [857] what a postcript field is. We basically [858] want AI to automate that for us because [860] there's a lot of value in making those [862] postcript fields seem human written. [865] Anyway, now we're offering it some [866] templates. subject line. Hey, name I [869] think I have something for you. Re and [871] then cool thing about them that we [873] discovered. Let's just go unique thing [875] about them or their company. Icebreaker, [879] I know you're doing thing and I've been [881] following related thing for a while, so [883] I figured it made sense to chat. Next [885] elevator pitch the TLDDR. I think I can [887] add 5K a month to their paraphrase [890] business with a few automated systems. [892] And then there's a call to action. I [894] just did this for a very similar [895] industry company and we had 28,350 in a [898] few months. They do related things. So [899] I'm very confident I can duplicate this [901] at minimum. Would be 100% risk-f free. I [904] guarantee at least 20 appointments [905] booked or you wouldn't have to pay. [907] Pretty neat, huh? So then I give it a [909] bunch of guidelines. And feel free to [910] pause the video if you want to take a [911] look at it. The last thing that I do is [913] then I say respond in JSON using this [917] format. And if you've at all used AI [919] before, you'll see this JSON thing come [920] up again. JSON. JSON. JSON. We're going [922] to cover that in just a few minutes, so [924] buckle up. Okay, great. So, we've given [926] it a ton of uh instructions in the first [928] user prompt. So, what I do next is I [930] just give it a user prompt with the [933] actual body of the input that I want to [935] give. And if you think back here um you [938] know what this Google sheet is just just [939] so you guys um are all on the same page [941] as me is I've basically gone and I've [942] scraped a bunch of data about random [944] people on the internet that fulfill some [946] criteria that I have. So, chief [947] executive officer, director of demand [949] generation, director of marketing, [950] business development, manager, some [952] dentistry person or something. Okay. And [954] then I have a bunch of fields here. One [956] of the fields I have is I have a summary [957] field where people basically write their [958] own summary of who they are and what [960] they care about. We have a ton of other [961] fields as well. We have company [962] location. We have a description of their [965] title. We have um I don't know their [967] their industry. And the cool part about [969] AI is you could just feed this into a [970] large language model and have it have it [971] automate something for you. Have it have [973] it write something customized. And so [975] that's what we're going to be doing [976] here. The thing is though, right, how do [979] I get dynamic data into this? So, I [982] don't know, let's say um one of the [984] things I want is I want to feed the AI [985] the person's full name. Notice how this [988] is fixed here, right? If I just typed [989] Amy Wabby, then that means that every [992] time I do an API call that includes [995] their full name, I'm going to have it [996] say Amy Wabby. This is fixed. It's the [998] same thing every time. If you want to [1000] make this dynamic, what you have to do, [1002] there are variety of ways to do this, [1003] but I'm going to use the expression [1004] field, is you have to click [1005] expression and then you drag the field [1008] that you want and then you drop it. And [1011] you'll see that when I do that, we've [1013] now just inserted a little bit of code. [1016] This is in N8N's [1019] um code format, the equivalent of the [1022] variable that we just pulled from our [1024] pinned data or our our data from the uh [1026] input. And what you see down here is [1028] this is separated into two halves. The [1030] top half is the code representation. We [1033] said full name just in like regular [1034] characters. And I can manipulate this [1036] how I want. Then a colon, then a space. [1038] And then there's uh curly bracket curly [1040] bracket space dollar sign Js N. FU L N A [1046] M E space. And then right curly bracket [1048] right curly bracket. Up here you have [1050] the code representation. And then notice [1051] that underneath here we have result. It [1053] actually shows us what the data that [1054] we're pulling in is from the input, [1057] which was right over here. Now, I'm [1059] going to be feeding it a bunch of data [1061] in order to have this personalized. I'm [1062] going to be feeding in their full name. [1063] I'm going to be feeding in the summary. [1064] I'm going to be feeding in the title. [1065] But I just want you guys to to notice [1067] how these these variables change between [1070] the full name, between the summary, [1072] between the title. And you're going to [1073] notice that there's kind of a pattern [1074] there. Okay. So, full name was that [1077] we'll go title. I'm just going to drag [1079] this [1080] in. Paste it in. Notice how the first [1083] one was jso nf full name. Second one was [1086] jso n.title. [1088] Right. Let's see what the third one is. [1091] Let's go down here to [1093] company. Company. If I drag and drop [1095] this, it now says JSON. Company. You [1098] know that the C is capitalized. That [1099] looks a little bit new, but for the most [1100] part, it's still pretty [1102] self-explanatory. It seems to me if I [1105] were an alien staring at this and [1106] looking to try and figure out what the [1108] pattern here is. It seems to me that [1109] every single time I drag and drop one of [1111] these fields in there, it says dollar [1112] sign jso n dot and then the name of the [1116] variable. And the name of the variable [1117] tends to be whatever I'm looking at on [1119] the left hand side here. So what if [1121] hypothetically instead of me doing this [1123] drag and drop what if I were [1126] to actually just try and write this [1128] myself? Well, let's see what happens. If [1130] I zoom in a little bit, just so we could [1132] all see. If I go curly bracket curly [1134] bracket, you'll see that I'm now [1137] entering sort of the next level up in [1139] NN. I'm now manipulating like code or [1142] JavaScript, their version of JavaScript, [1143] the JMSE path I believe it's called, [1145] directly in the expression editor. And [1147] this is where N gets really powerful [1149] because you also have a ton of built-in [1150] methods and built-in ways you can [1152] manipulate this data with literally one [1154] click, one little button tap without [1155] having to drag and drop all these [1156] modules everywhere. You can just do so [1157] in the convenience of your own field [1160] editor. Okay, so the very first thing [1161] that pops up is it says suggested JSON, [1163] if I just type that and then I press [1164] enter, you'll see that now I have access [1166] to all of the fields that I had access [1169] to earlier. So instead of me dragging [1171] and dropping all this stuff, what if I [1173] just wanted to write the word summary [1174] here to grab this. If I just type [1176] summary, notice how this now turned [1178] green. And we've added all of that [1179] information down here to the results [1181] tab. All that information is here. How [1184] cool is that? So now, you know, if I [1187] want to continue on, I'll go industry. [1189] I'll go dollar sign JSON industry. [1192] Voila. Next, we're going to go company [1194] location. I'm going to go um JSON.co [1197] company location. Voila. Notice how it's [1200] trying to autofill this for me, right? [1202] I'll go title description, dollar sign [1204] JSON dot to ital description. Voila. And [1209] I basically have the ability to do this [1211] um infinitely depending on how nested [1213] the data is in the JSON structure of the [1215] input. I I'll run through how to do all [1217] of that um in a moment, but I just want [1218] you guys to sort of pattern match look [1220] from the outside in. How am I actually [1221] referencing all these variables from [1223] from previous [1224] calls? Okay, great. So, to me, you know, [1226] as somebody that does this sort of [1228] personalization all the time, if we [1229] click on this little button here, we can [1230] actually open up we can see all of the [1232] um code and all of the text. To me, [1234] somebody that does this all the time, [1235] this looks like sufficient amount of [1236] information for us to personalize an [1238] email off of. So, I'm actually just [1239] going to call it there, and we're [1240] actually going to just run this puppy. [1241] But basically what's going to happen is [1242] we're just going to be feeding in all of [1244] this stuff to artificial intelligence [1246] and we're going to be saying, "Hey man, [1247] based off of all of Amy's info, I want [1249] you to tell me something about her and [1251] then I want you to write an email um [1253] based off of the template that I [1254] provided you earlier." The last thing [1256] I'm going to do is I'm going to go down [1257] here and press output content as Jason. [1258] Give this a click. And then I'm not [1261] going to modify any of the options here [1262] either. Um but I'm just going to click [1264] test [1265] step. Okay. Okay, so what just happened [1267] or what is occurring as we speak is I'm [1269] feeding in four items to open AI. I'm [1271] basically Blitz going item one, item [1274] two, item three, item four, and it's [1276] happening all at once before they show [1278] us the output of each of these. So [1280] that's why it takes a little bit longer [1281] than usual. Um, but this is more or less [1283] what's happening under the hood. Okay, [1285] great. And we just received an output. [1287] Um, so what I'm going to do is I'm just [1288] going to zoom out a little bit just so [1289] we could see this in completeness. And [1292] I'll use schema for now just to make it [1293] easier for you guys. You don't have to [1295] like scroll all the way to the right to [1296] see it, but let's take a look. Um, the [1298] output was content, subject line, [1301] icebreaker, elevator pitch, call to [1303] action, PS. So, it actually went it [1304] outputed five fields for us and we can [1307] use those fields in future nodes very [1310] easily. The first thing in the subject [1312] line was, "Hey Amy, think I have [1314] something for you regarding boosting [1315] online strategies." The icebreaker was, [1317] "I know you're leading creative web [1318] solutions and net directives and been [1319] following innovative marketing [1320] strategies for a while, so I figured it [1321] made sense to chat." The TLDDR, I think [1323] you can add 5K a month to your client [1325] focused internet marketing efforts with [1326] a few automated systems. The call to [1328] action, I just did this for a very [1330] similar IT consulting company. We hit [1332] this amount. They do e-commerce and [1333] marketing, too. How cool is that? So, [1335] I'm very confident I can duplicate this [1336] at minimum. Would be 100% risk-f free. [1338] I'd guarantee at least 20 appointments [1339] booked. You wouldn't pay. P.S., even if [1342] we just chat, I'd love to hear about [1343] what you're doing with video marketing. [1345] That sounds pretty cool to me, right? If [1346] I were to receive an email like this, [1348] you know, aside from the subject line, [1349] which is a little bit vague, boosting [1351] online strategies, but you can't fault [1353] the AI for not being perfect 100% of the [1354] time. Um, you know, even if I were to [1357] get something like this, it would seem [1358] as if, uh, you know, like the person [1360] that's reaching out to me did their did [1362] their research at minimum and is [1363] reaching out to me sort of in a [1364] personalized customized way as opposed [1366] to just like blasting me a big sequence. [1368] So, uh, what else do I want to do with [1370] this? Well, if you guys, you know, [1371] remember back to the beginning of the [1372] video, the there weren't just two or [1373] three nodes here. there was um there was [1375] a note that updated the Google sheet. [1376] So, I'm going to show you how to update [1377] the Google sheet. And what we're [1378] actually going to do is we're going to [1379] take this one step further and I'm [1381] actually going to draft some emails to [1382] send to Amy and the rest of the people [1384] here. So, actually the first thing I'm [1386] going to do is I'm just going to go over [1387] here and pin this output. The reason why [1389] is because if you think about it, me [1391] calling um OpenAI there, that was a [1393] little bit like computationally [1393] expensive. It took me a little bit of [1395] time. I don't actually want to have to [1396] rerun that over and over and over again. [1398] pinning the data just allows me to [1400] capture that, cache it, and now I can [1402] just like test all subsequent nodes [1403] using that, which is very [1405] straightforward. Okay. So, what I want [1407] to do, I want to update this Google [1408] sheet. So, I'm going to click here, [1409] search nodes. I'll type sheets. And what [1411] I want to do is I want to um update row [1414] and [1415] sheet. I'm going to select my [1417] credentials again, YouTube. The resource [1419] will be sheet within document. The [1420] operation will be update row. Let's [1422] instead of using the fix, let's actually [1424] just use the expression so I could show [1425] you how this works. Just going to grab [1427] the ID of this field or of this sheet. [1430] Paste that in there. Voila. Then the [1432] sheet that I'm going to be picking, it's [1433] just going to be sheet one. So notice [1435] that the top here we use the expression [1437] field view and then down here we just [1439] use the fix. So it actually use the [1440] expression field view to do an API call [1442] to their backend to discover that sheet [1444] one was the only sheet and then we [1446] selected it there. We can also just feed [1447] in an expression. And as you see when [1449] you go from fix to expression for the [1451] specific sheet type, it just says G [1453] equals Z. G equals Z just refers to the [1455] first sheet. um basically here. So we're [1457] we're always going to be selecting the [1459] first sheet. But anyway, for this I'm [1461] actually going to go from list and then [1462] I'll just go sheet one. Keep this [1464] simpler. Okay. Now it's going to be [1465] fetching a bunch of columns for us. And [1467] basically in order to do this update, [1469] what we have to do is um we have to grab [1472] the data from the previous nodes and [1473] then we have to update every single [1475] column here with that data. If I were [1477] just to, you know, scroll all the way [1479] down and update the columns that I care [1481] about like subject, icebreaker, [1483] elevator, pitch, call to action, [1484] postcript, it would just leave the rest [1486] of these blank, which is kind of [1487] annoying if I'm being honest. But I [1489] don't want the rest of these to be blank [1490] and these to be filled. I want all of [1491] this data because I'm just going to [1492] import this into some cold email tool [1493] later, right? So, what we have to do is [1496] now, this is kind of the initial idea [1498] behind this system. I'm going to go [1500] through and I'm going to update every [1501] single one of these um using the [1503] expression tab and then I'm going to be [1504] pulling data in. But I'm not going to be [1506] pulling data in from here. I'm going to [1507] be pulling data in from one node behind [1508] it. So you guys could see what it looks [1510] like in code basically. Okay. So first [1512] thing we have to do is we just need a [1513] column to match on. In order for the [1515] automation to know which row should be [1518] updated, we have to find data that [1520] includes that email. So I'm going to go [1522] email. Then the first thing I'm going to [1524] do is I'm going to scroll down here to [1526] the previous node, not the OpenAI node, [1528] but the Google Sheets node, the one that [1529] like first listed us the data. I'm going [1531] to drag this feed that in there. And [1534] you'll notice that the format now looks [1536] different than it did before. Previously [1538] we had a dollar sign JSON dot item. [1540] Right now we have a dollar sign and then [1543] a bracket single quote sign the name of [1545] the node another single quote sign and [1548] then another bracket and then we go do [1550] item.json.e. So when you when you access [1552] node data from more than one node back [1554] you have to use this new format here [1556] which is kind of annoying but you'll see [1558] how easy it is when we just like kind of [1559] copy paste and spam our way through. So, [1563] uh, how about this civility? I'm going [1564] to go to expression. I'm going to paste [1565] this in. Then, instead of email, I'm [1567] just going to go [1569] civility. How about this first name? [1572] Let's paste that in there. We'll go [1573] first name. How about this first name [1576] suggestion? Paste that in there. Go [1578] expression. Go first name [1581] suggestion. How about the last name? I'm [1584] going to paste this in there. Go last [1586] name. How about the full name? I'm going [1589] to paste that in there. Go expression. [1591] We'll go full name. How about the title? [1593] I'm going to paste this in there. I'll [1595] go title, profile URL. So, you can see, [1598] you know, we're picking up the pace a [1599] little bit. It's getting a little bit [1600] faster and faster. [1603] Company, company, illegal [1608] name, company [1611] phone. And I'm just going to go ahead [1612] and um cut to me having actually filled [1615] all this stuff out just for brevity. [1616] Okay. Okay. Elevator pitch, call to [1619] action. Looking good. And then last but [1623] not least, we'll do um I think it was [1625] just PS or was it postcript? Yeah, [1627] sorry. It was just PS for that. This is [1629] the one situation which uh the column [1631] name is a little bit different from the [1632] variable name down here. Okay. Now that [1634] we're done with that, let's just quickly [1636] cover um just some little differences [1638] here in the formatting just so we can [1640] get a runup on the JSON which I'm about [1641] to teach you. You scroll all the way up [1643] here. You'll see that some of these or [1645] actually most of these followed this [1646] format. It was oops sorry about that. [1650] Let's go over here. It was um curly [1653] brace curly brace dollar sign the name [1656] of the node in single quotes dot [1659] item.json dot whatever the value was [1661] dots summary. In this case this one was [1664] regular company URL. This one down here [1666] wasvm ID. You'll notice that a few of [1668] these are actually a little bit [1669] different. A few of these in particular [1671] the variable names with spaces. They [1672] weren't just dot, you know, the the [1674] name. It was square bracket single quote [1678] and then the name of the variable that [1680] we're referencing. The reason why we had [1682] to do this instead of just doing the dot [1685] and then the variable name is because [1688] JSON in JavaScript object notation, you [1691] can't query I mean the technical term is [1692] you can't query a key that has spaces [1695] basically just because spaces aren't [1696] really represented. So, you know, if we [1698] scroll down here to some of these [1700] variable names, first space name space [1702] suggestion, there's a bunch of spaces in [1703] there, right? So, the way that you get [1705] around this in uh Nad's formatting is [1708] instead of calling, let me get that [1710] specific example, company legal name or [1712] was it uh first name suggestion. So, the [1716] way that you get around this is you [1717] can't just go first name suggestion cuz [1720] that kind of breaks the formatting here, [1721] right? The way you can get around this [1723] is two things. one, you can make it so [1724] that the input data aka the columns in [1726] your Google sheet are all just one word. [1728] So if instead it was first name [1730] suggestion, this would be fine. You [1732] could also do something like first name [1734] suggestion. Some people do that format. [1735] I don't really like that. I don't know [1737] why. What I do is um called camelc case. [1740] It's kind of like a programming [1742] convention. And here we can get into [1743] like a a lifelong mutually assured [1746] destructive battle where some people [1747] prefer camel case, other people prefer [1749] underlining. Um, but I'm team camel [1751] case. So, go team camel case. Um, [1753] instead, you know, if we want to [1755] represent the spaces, what we have to do [1756] is we have to go brackets here. Um, [1758] single colon first name suggestion, [1761] another col uh another quote sign, and [1763] then another square bracket. So, don't [1765] don't sweat the small little formatting [1767] stuff too much. I just wanted to give [1768] you guys like the best way that I found [1770] to learn this is literally just to like [1771] spam a bunch of examples. Um, that's [1773] what I did when I was picking this stuff [1774] up. I didn't read a bunch of books on [1777] JavaScript object notation or [1778] expressions or whatever. I just spammed [1780] a bunch of examples. And the human brain [1782] is such that if you squint at it long [1783] enough, you'll sort of figure it out [1785] intuitively. Uh, okay, great. So, now [1786] that we've mapped all these, let's [1787] actually go and let's, um, let's update [1789] this data, right? That's the whole point [1790] of this. So, uh, now that we've mapped [1792] all the data, if I click test step, then [1793] I go over here to my Google sheet, [1795] scroll all the way to the right, you [1797] see, and it just took us a second, but [1798] you see that we just, boom, we just [1799] updated all four of these [1800] simultaneously. Uh, we got the subject [1802] line for Amy, subject line for Joe, [1804] subject line for Mercedes, subject line [1805] for Susan. Same thing with all the [1807] elevator pitches, call to actions, [1809] postcripts. You'll see that the the the [1811] copy of the email is pretty similar, but [1813] um it it changes. So, this one's, I know [1815] you're leading creative web solutions. I [1817] know you're le into leveraging customer [1818] voices. I know you're focused on [1819] building relationships. I know you're [1820] advancing digital dentistry. These are [1822] all basically like reframing or [1825] paraphrasing [1826] um the things that they said in their [1828] profile which ultimately uh you know is [1830] meant to make them go like oh okay this [1831] person did their research they read a [1832] little bit about me. So that's pretty [1834] cool. Um why don't we take this one step [1836] further now. Why don't we pin this and [1837] then I'm actually going to create a [1839] Gmail draft in my inbox just so we can [1841] see what's going on here. So I'm type [1843] draft create a draft. I'll connect with [1846] my Gmail credential and this is before I [1848] did the naming convention so it was [1849] probably number three. We're just going [1851] to create a draft. The subject line is [1854] going to be, let's just go to fix now [1855] that we know how to do this. It's going [1857] to be JSON dot uh subject right [1862] here. And then the actual message. It's [1865] going to be pretty interesting, but I'll [1866] show you I'll show you how we put it [1867] together. First thing we're going to do [1868] is we're going to go JSON dot. And then [1870] what I want to do is I want an [1872] icebreaker. [1874] Uh, sorry, I don't want an icebreaker. I [1877] want to go hi. And then I want to grab [1879] the person's name. So I'll go Jason [1881] first name right [1883] here. So hi [1886] Amy, then we have the the JSON [1888] icebreaker. Next up, I want to go JSON [1890] dot uh sorry, dollar sign JSON dot and [1893] then what were we doing here? Was it the [1895] elevator pitch? Yeah, it was the [1896] elevator pitch. Paste that in there. [1899] Then we want to go dollar sign JSON dot [1901] what's the next one? Call to action. [1904] Beautiful. And we also want to go dollar [1907] sign JSON dot and I'm sure you guys can [1908] guess what the last one is, but very [1910] quickly make sure you do make sure you [1912] know u postcript. Now if we open up this [1915] thing in the bigger example window, [1917] you'll see the email says, "Hi Amy, I [1919] know you've been leading creative web [1920] solutions and net directives. Been [1921] following innovative marketing [1922] strategies for a while, so I figured it [1923] made sense to chat. The TLDDR, I think I [1924] can add 5K a month to your client [1926] focused internet marketing efforts with [1927] a few automated systems. I just did this [1928] for and even if we just chat, I'd love [1930] to hear about what you're doing with [1931] video marketing." I guess I actually [1933] need to add a PS sign here. And it looks [1934] like none of these have periods. [1936] Actually, I think this last one has a [1937] period, but not all of these do. So, [1939] just because I was a little bit um fast [1941] in kind of designing this and I didn't [1943] put periods over, I'm actually just [1944] going to add the periods directly into [1945] the expression editor. I'm going go PS [1948] here. Okay. And now, if we open it up, [1950] this is what it looks like. We got [1952] periods everywhere. Cool. Wonderful. And [1954] then we have a little PS sign here. Even [1956] if we just chat, I'd love to hear what [1957] we were doing with video marketing. [1958] Very, very cool. Awesome. Awesome. So, [1960] now that we have that pinned data, um, [1962] why don't we just draft these emails? [1964] So, I'm going to, uh, create a draft. [1965] I'm not actually going to send this cuz [1966] I don't just want to spam a bunch of [1968] these people. I've also changed the [1969] email addresses and stuff, so I'd get a [1970] bunch of bounces. We're just going to [1972] test step. It's executing. We just [1975] executed four nodes. So, now if I go [1976] over here, go to [1978] drafts, you'll see here that we have, [1981] "Hey, Susan, think I have something for [1982] you. Red digital dentistry." Oh, gez, [1984] I'm realizing I didn't put the um email [1985] address in actually. Yeah, I did not put [1988] the email address in. I just did the [1990] draft. U in options, you have to go to [1992] email. And then what we want to do is we [1993] just want to drag that back here. JSON [1995] email to get that address. Let's create [1997] four more drafts just for shits and [1999] gigs. Why don't I just delete the ones [2001] that I just generated uh right over [2005] here. Going to just discard [2007] these. And then you see that the four [2010] that I just did now have just popped up. [2011] And they also have the email addresses [2014] there. So yeah, that's that with that [2016] example. Um, I think at this point you [2018] guys probably have an intuitive [2019] understanding of how these fields work. [2021] And hopefully I've made a case for why [2023] you should just always use expression. [2024] Like there's no real need to do fixed [2026] because if you think about it, like you [2027] could just write the same fixed thing. [2029] Like if I wanted to type, hey, think I [2030] have something for you regarding [2031] marketing strategies. And I just wanted [2032] to send the same thing every time. I [2034] could do so with the expression view of [2036] the field, right? Like same thing. It's [2038] just here I also have the ability to u [2041] modify uh code a little bit and like do [2043] something if I wanted to. So, I [2046] personally am always going to be using [2047] this moving forward. And the reason why, [2050] sorry, it can be kind of a lot to see if [2052] you muck around with. Just always put a [2053] dollar sign first if you're referencing [2054] data from the previous node. Uh, and the [2056] reason why is it's just going to be the [2058] easiest for me. Um, you know, you get [2060] all the variables up here anyway. It's [2061] no big deal. So, we're doing subject. [2063] Stick that in there. We got the subject [2064] line. We are good to [2066] go. So, uh, I think we probably learned [2068] a fair amount about the fixed fields and [2070] expression fields at this point. Um, the [2072] last thing I wanted to cover, I say [2073] mapping different field inputs here. [2074] Last thing I wanted to cover was uh if [2077] we go back to Gmail [2079] here and if we scroll down to actually [2083] this is a bad example. Why don't we go [2085] back to open [2086] AI? You see here how um I selected the [2090] RO field and it was fixed and then I [2092] selected from a dropown user assistant [2094] system whatever. Well, I can actually [2095] just go expression and what you see here [2097] is this is just text that we are feeding [2100] this API the uh the node. We're actually [2102] just writing user. So instead of writing [2104] users, you could also write a system. [2105] This fix stuff. This is just made to [2107] make our life a little bit easier. But [2108] anytime you want to get the actual data [2110] representation, just move over to [2111] expression. So what are some examples of [2113] that? Well, like you see these simplify [2115] output and output content is JSON [2116] fields. We go to expression. You'll see [2118] that what we're actually passing is [2120] we're passing this true value. We're [2122] literally just writing true. Um output [2125] content is JS. If we move it to [2126] expression, you can see we're actually [2127] just passing true here for output [2129] content is JSON. The point that I'm [2131] making is um all of this is basically [2133] just um you know if we just strip away [2135] all of the basic simple stuff. You can [2137] start getting into what's actually going [2139] on behind the scenes. How we're actually [2141] communicating with these nodes. The way [2142] that we're actually communicating with [2143] these nodes in practice is we're sending [2145] the term true. Now the reason why this [2147] one has quotes around it I believe is [2150] because um true is a special case. It's [2152] called a boolean which I'm I'm about to [2154] cover right now. Um so I believe you [2155] need these quotes just for NAN to like [2157] not bug out at you. um just one of those [2159] unfortunate peculiarities of the [2161] platform. But that's that for fixed [2163] fields and expression fields. Okay, next [2165] up, let's talk more about JavaScript [2167] object notation. And if you guys already [2169] know JSON, if you've already [2170] experimented and and understand the [2172] various formatting types available here, [2174] feel free to skip on until we move on to [2176] how data in N8 is represented. Um should [2178] be about 15ish minutes or so. Uh but for [2180] everybody in the audience that doesn't [2181] understand JavaScript object notation, I [2183] just want to go real deep into it and I [2185] want to make sure you understand [2186] everything about JSON because ultimately [2188] as opposed to a lot of other no code [2190] platforms, NAD it doesn't ignore code or [2193] try and shove code away. It actually [2195] embraces code. So understanding a little [2196] bit of some of the um code types like [2199] JSON for instance makes you way more [2201] powerful. This is really what like [2202] everybody that makes money with this [2204] platform uses. We just use JSON to send [2206] data back and forth. Um, and you know, [2208] if you don't know JSON, everything's [2209] going to be a little bit trickier for [2210] you. Okay. So, what's the best way to um [2214] intuitively understand JSON? Well, what [2216] I'm going to do next is I'm going to [2217] walk you through the various data types [2218] in JSON. Uh, I'm going to give you just [2220] like a a brief little um structure and [2222] format, and then we can actually just [2223] walk through JSON kind of step by step [2226] depending on different variables and [2227] stuff like that. So, I'm just going to [2228] go and type in JSON formatter. This is [2230] just the simplest and [2233] freesting platform I found online. As [2235] you can see, we got tons of ads in the [2236] middle here. you don't pay anything to [2237] use it. But basically what's happening [2239] under the scenes is behind the scenes is [2241] it's running um with every time you [2243] press a keystroke it's just double [2245] checking to see if it's a valid JSON. [2246] This is actually pretty useful for us [2248] because we can we can verify if [2249] something is indeed JSON or not just by [2251] looking at it. This isn't the only way [2252] to do it. Obviously we could do a ton of [2254] different things. We could I could open [2255] up like a code platform like VS Code or [2257] something and do the same thing. But I [2258] just wanted to keep this thing [2259] accessible for all of us. All right. All [2261] right. So, zooming way in here, um, just [2264] so I don't get ads in my face 24/7. So, [2267] what is JavaScript object notation? [2269] Basically, JSON um is just a way to [2274] represent data in a structured and [2278] standardized [2279] format that minimizes the number of [2282] characters and it also minimizes the [2284] ambiguity so that when we send data to [2287] and from some API or something, we could [2289] do so as efficiently as possible. [2292] So the way that JSON works, the way that [2295] you send and receive data is based off [2297] of two um two concepts. The first [2300] concept is a key. So I'm going to write [2302] a key here. This key is going to involve [2304] my name. The first name is going to be [2307] sorry um the the key name is going to be [2308] called first name. So the key is just [2311] you can think of it as like the name of [2312] a variable. So the variable is called [2315] first name, but what the variable equals [2318] is a whole different matter. And that's [2320] where the value comes [2322] in. So first name I'm going to set to [2326] Nick. So this here is proper or well [2329] formatted JSON. It's not yelling at us [2331] or anything like that. It's it's it's [2333] actually good, which is nice. So this is [2334] an example of one of the simplest [2336] JavaScript objects that you could build. [2339] It is a onekey uh one value object. The [2342] key being first name and the value being [2344] neck. You've undoubtedly seen examples [2347] of this before if you tried working with [2348] any noode or coding platform um you know [2352] nadn included. The thing is in JSON [2356] there are a few simple but consistent [2358] formatting quirks that you just have to [2360] pay attention to. So the first is there [2363] are variety of different data types. Now [2365] as you can see here what I've done is I [2367] have this open curly bracket and then [2368] close curly bracket. I have the key name [2371] over here, a a colon, that's just these [2373] two dots, and then I have the [2375] value, but what I've done is I've [2377] wrapped everything in these double quote [2379] signs here. So, first name, double [2381] quote, Nick, double quote. The reason [2383] why is because the data type that I'm [2385] going with here is called a string. It's [2387] actually a particular data type. A [2388] string is just like written text. Okay? [2392] So, this is if if instead of first name, [2394] I say ID. This here, this is a string [2397] data type, but it's not like you don't [2400] only have strings available to you. [2401] Although a lot of platforms prefer [2402] strings, you also have a variety of [2403] other data types. Here's another data [2405] type we have access to. This is a number [2408] data type. It's numeric. So, in order to [2411] um you know send and receive numbers, [2413] you don't actually have to wrap them in [2414] quotes. This red here just corresponds [2417] to it being linted or formatted or [2419] whatever by this JSON formatter as a [2421] number data type. So this is still valid [2423] JSON even though we don't have the [2424] quotes around this. Okay, this is not [2428] valid JSON, right? This does not mean [2431] anything because we're using string [2433] characters uh and we're inserting it in [2435] something that the software that we're [2437] going to be using NN is going to be [2439] expecting to be a number. So basic rules [2442] of thumb are uh you can't just write a [2444] string without wrapping it in [2446] quotes. And the unfortunate reality is [2449] numbers can be both numbers and strings. [2452] So three ways to do X. Maybe we call [2455] this titles, right? The three here, this [2456] is a number, right? But we are still [2458] wrapping this within the quotes of a [2460] string. However, this is different from [2464] this. And so in practice, the reason I [2466] harp on this is because in practice, [2469] this usually doesn't matter that much. [2470] No code platforms will take care of like [2472] the type conversion for you between [2473] number to string. Um, if you're using a [2475] number, if you're sending it as like [2477] just the three without the quotes around [2478] it, um, for the most part, that's that's [2480] okay. you'll be able to use this as a [2481] string later on. But in like pure [2483] JavaScript and a couple of programming [2485] languages, you can't actually just like [2486] if you wanted to, I don't know, run a [2488] function after this that added a number. [2491] Um, you know, maybe it was like here, [2494] let me show you number of things, then [2498] title template. [2500] Let's say I had some function where I [2502] wanted to add the number of things to [2504] the beginning of the title template so [2505] that it said three ways to create NAN [2508] flows, five ways to create N inflows, 15 [2510] ways to create NAN flows. Some [2512] programming languages wouldn't let you [2514] do that in which case you'd have to [2515] convert this to um you know a string and [2517] then you could just go number of things [2518] plus title template equals 15 ways to [2520] create NAN [2521] flows. Okay, great. So we've covered [2524] numbers. We've also covered uh and [2526] numbers I believe they have some fancy [2527] name int or or technically they could be [2529] floats. It could be a number of things, [2530] but um in our case, we're just going to [2532] go numbers. Next up, I want to cover a [2534] couple of additional data types. So, one [2537] of the data types is called bool. So, a [2540] bool stands for boolean. Boolean just [2542] means zero or one, true or false. So, [2545] true. See how this just turned into [2546] orange instead of gray. Um true is an [2549] accepted bool. And you don't actually [2550] need to wrap uh quotes around this true [2552] in order for it to technically be valid [2554] JSON. Now, for the most part, I will [2556] always just wrap quotes around all this [2557] stuff anyway because, as I mentioned, [2558] they do type conversions and it doesn't [2559] really matter to me too much. But I just [2561] wanted you guys to sort of explain why [2563] sometimes you see stuff that is not [2565] wrapped in quotes. And that's one of [2566] them. You also have a few higher level [2568] data types. And one of the higher level [2570] data types um that I'm going to show you [2571] guys, I'm going to show you two. The [2573] first is I'm going to show you an array. [2574] An array looks like this. It's with [2575] square brackets. So, you have a left [2577] square bracket and then a right square [2578] bracket. And the other is another [2581] JavaScript object. And the really cool [2583] part about JSON is you can infinitely ne [2586] nest different data types within the [2588] values of uh of a key. So I could [2593] theoretically wrap an array which is [2596] just a number of things and then inside [2598] of that [2599] array I could wrap a number of other [2603] JavaScript objects that go infinitely [2605] deep. And I'll show you guys how to do [2607] this in practice, but maybe we'll just [2609] go items. Then here we'll go first name [2612] Nick. Here we'll go first name and we'll [2615] go Sally. Then here uh let's just do two [2617] so I don't run off the page. So now what [2620] we've done is we've created JSON where [2622] we have a key called items. Then inside [2626] of said key we have an array and inside [2629] of set array we have two more objects. [2632] Both objects have the key called first [2635] name. And then they have different [2636] values. The first has a value of Nick. [2638] The second has a value of Sally. Now, to [2641] make people's lives easy, usually the [2642] way that this works is you will do some [2644] level of uh formatting like this string [2648] formatting just to make your life really [2650] really easy. You'll be able to [2652] see like where the item starts and then [2655] there's usually like a fair amount of [2656] indentation and I don't know the exact [2657] amount of indentation, but usually it [2659] looks something like this. Now, at a [2660] glance, you can kind of see the [2662] structure of this. It's sort of nested. [2663] You have um this top level array, and [2665] inside of the array, you have two [2667] objects. first name Nick, first name [2669] Sally. Okay, great. So, let's create a [2672] hypothetical JSON object. And just [2674] because I know the most about myself, [2675] I'm going to be creating this for [2676] myself. Let's hypothetically just create [2678] a JSON object. And let's just do like a [2680] user object. Okay. So, what I'm going to [2683] do is I'm going to go user. That's going [2685] to be the key name. Then I'm going to go [2687] uh colon. And then I'm going to create [2690] another object. [2694] Inside of my user object, I'm gonna have [2695] first [2696] name. First name is Nick. I'm gonna have [2699] a last name. My last name is [2702] Sarafh. Um, I'll have city. My city for [2706] the time being is Calgary. I'll have [2709] um foods he enjoys or foods. Let's just [2715] call it food preferences, right? Because [2716] if you say foods he enjoys, now you're [2719] um insinuating that has to be a he. And [2720] then what if you add a user in the [2722] future that is a woman? Do you want to [2723] change the key name? No, obviously not. [2725] So, food preferences. I'm just going to [2726] add an array. And inside of my array are [2728] going to be a bunch of strings. So, one [2729] of my food preferences is um I don't [2731] know, [2732] Thai. I'm going to have another one that [2735] is uh I don't know, like Japanese. Okay. [2738] So, I like Thai food and I like Japanese [2739] food. Apparently, I like absolutely [2741] nothing else. I have a very strict diet. [2743] Okay, cool. And then why don't we add [2746] um let's just add one more. And then I'm [2749] just going to add one called friends [2750] hypothetically. Um, but because as we [2752] all know, I have absolutely no friends. [2754] Um, and then inside of friends, we're [2755] going to add a another object. We're [2758] going to add an array. And inside of [2760] that, we're going to have first name. [2762] We're going to have Peter, my uh dearest [2764] and longest friend, of course. Thank [2766] you, Peter. Then underneath that, we're [2768] going to have um last [2772] name Griffin because I am now [2776] uh love and family guy. And that's one [2779] of my friends. And then I'm just going [2780] to copy this over. I'm going to add a a [2783] comma because you need a comma in [2784] between all items in an array and also [2785] all items in an object. So we have our [2788] object here. It's a pretty intense user [2791] um object. We have a first name, last [2793] name, the city the person lives in, the [2794] food preferences. We have a list of [2796] friends, right? The reason why I go into [2799] this much uh detail here to create this [2801] object is just because I want to impress [2802] upon you that you can make an object [2803] arbitrarily detailed. You can make it as [2806] detailed as a human being could ever [2807] possibly want. And a lot of the time [2809] you'll see that these APIs that you're [2810] accessing, these these calls that you're [2812] making to these different nodes that [2813] return you data about a particular [2815] software platform, they will be really [2817] really deep and they will have nested [2818] data like six or seven things uh levels [2821] deep essentially. So the easiest ones to [2824] use in my experience are just the ones [2826] that are all um you know surface level. [2829] You just have like a user object and [2830] then a first name and then a last name, [2831] a city and then maybe some food [2832] preferences. But in practice, you know, [2834] we need to be a little bit more capable. [2836] And understanding how data is structured [2838] in JavaScript object notation is uh [2840] probably like half the battle to be [2841] completely honest. So, I believe I've [2844] covered everything I wanted to cover. [2845] The last thing I'll mention is um you [2847] can't have a comma, I believe, be the [2849] last. Yeah, it doesn't allow you to have [2851] a comma for the last item in an object [2855] or an array. So, notice here how we have [2856] a curly bracket, then we have the key [2858] name user, then we have another object [2860] sign, and then we have the key name, and [2862] then the value. the key name and the val [2864] the key name and then the value. Between [2866] each of these, we have a comma, but just [2868] know that at the last item in an array [2871] or the last item in an object, you can't [2873] have a comma. So, you just need to [2875] remove that. If I press format or [2876] beautify, which is just my button that [2877] tells me everything's okay. Um, then you [2879] see that it is indeed formatted and [2880] beautified. Everything's everything's [2882] all right. Okay, cool. So, that's the [2884] meandering um you know, that's sort of [2886] how to understand this stuff from a [2887] bird's eye view. Moving forward, what [2889] I'm going to be doing is just to make [2890] our lives a little bit easier. I'm going [2891] to be showing you guys in every module [2893] or every node I should say on what the [2895] JSON is of the input and the output. The [2897] reason why is it's just going to make it [2898] a lot easier for us to ultimately, you [2901] know, reference stuff and then do cool [2902] things with the data. So, I go back to [2904] our Google Sheets example from earlier. [2906] I'm just going to move the input, sorry, [2908] I'm going to have the output be JSON. [2910] And you'll see that in this case, what [2912] we have is we have an open JSON curly [2914] bracket. Then we have a bunch of top [2917] level keys. So row number over here, [2920] well that's a key. And you can see that [2922] it's represented as a two. Very similar [2924] to what we talked about earlier, right? [2925] You'll notice that the formatting here [2927] is a little bit different. Notice that [2928] this one has an underscore and then [2929] these other ones are all camelc case. [2931] And some of these are capitalized [2932] because these are within quotes. None of [2934] this stuff really matters. But just [2935] showing you guys that there's a there's [2937] a variety of like conventions that [2938] people do. Some people like capitalizing [2941] things, some people don't. [2943] So my recommendation to you just to keep [2944] everything really clean and and expected [2946] is just to pick one format and stick [2947] with it. If you like the underscores, [2948] use the underscores for everything. If [2950] you like the camel case like me, use the [2951] camel case for everything. But anyway, [2953] civility is Mrs. First name Amy. First [2955] name suggestion, it's empty. You know, [2957] when something is empty in JSON, you [2959] just use these quotes. Notice that every [2961] item here has a comma in between it. [2964] Last name, comma, full name, comma, [2966] right? Just going all the way down. And [2968] then if I zoom out, I scroll, you'll see [2971] that what do we have here? This was just [2972] one item. So, if I just click on this [2974] little blue left curly bracket, it'll [2976] actually nest the item for me. And [2978] you'll see that inside of this item are [2980] 38 other items. But, it'll just nest it [2981] for me. And then I can see the next one. [2983] Now, I can see the next one. Now, I can [2984] see the next one. Right? We only have [2986] five. So, that'll be it. But now, I want [2988] to show you guys a little bit about how [2990] an format stuff because it's a little [2992] bit different than Jason I just showed [2993] you. But once you understand this, [2994] basically everything from here on will [2995] be child's play. Notice how the very [2999] first character that you see on the [3001] output page on the JSON is a square [3004] bracket. Well, if you think back to the [3005] example that I gave you earlier, if we [3007] click out of this um Pizza Hut ad, as [3009] much as I love Pizza Hut, this array [3012] here starts with these square brackets. [3015] And so we see over here we have a square [3016] bracket as well, that means that this is [3017] an array basically. So the way that data [3021] is represented in NADN is all data on [3023] the platform is represented as an array [3026] of objects. Okay. So if I scroll down [3029] here to how data in NAN is represented. [3031] All of it is an array of objects. All of [3033] it will basically be those two square [3036] brackets on the outside of a number of [3038] items. And you could have as many items [3040] as you want. As we saw, we had four back [3042] over there. And inside of those four [3044] items, we had an additional 38 items [3046] nestled inside. But all data is an array [3048] of objects. Meaning that that's how you [3050] send and receive multiple objects. [3053] Remember at the beginning we had one [3054] item. We just outputed a single variable [3056] there. Well, now after this Google [3057] Sheets call, we're doing four items. [3059] Those four items are represented in our [3061] JSON as an array inside of which is [3064] another object that has the key name row [3066] underscore number, civility, first name, [3068] first name, suggestion, and so on and so [3070] on and so forth. So all data in NAD is [3072] an array of objects. The number one [3074] gotcha that I always see when beginners [3076] start out with this is they end up not [3079] fully understanding how many objects the [3081] previous node is sending or the current [3082] node is receiving. And so then when they [3084] try and reference a particular item [3086] inside of the data structure, they find [3088] that it just doesn't exist or they need [3090] to like index it, they need to slice in [3091] to find a specific item inside of the [3093] array of items or some other problem. [3095] But this is the number one problem that [3097] I see in practice just running through [3099] reading like N8 and help threads and [3100] stuff like that that people struggle [3101] with on this platform. So if you [3104] understand this the fact that all inputs [3106] and all outputs are an array of items [3108] represented as follows and now if you [3110] understand how to format JSON what JSON [3112] looks like and now further if you just [3114] make it so that you look at the JSON and [3116] not necessarily the table or the schema [3118] format every time you're sending and [3119] receiving data you will solve the [3120] biggest gotcha that people have in their [3122] net it's just going to be a lot easier [3123] for you moving forward to you know [3125] create flows you're you're basically [3126] going to take so much of the load off [3128] that most other people spend like hours [3130] and hours and hours trying to debugging [3132] um right from the get- go, which is [3133] ultimately what I wanted to do here. [3135] Okay, great. So, now we know that data [3137] in NAN is represented as an array of [3138] objects. So, how do you actually [3140] reference that data? You guys remember [3141] earlier in that example here where we [3143] were using this Google sheet module, [3145] sorry, this Google sheet node, I should [3147] say. And if we scroll down here, we were [3150] updating a field using data not from the [3153] previous node, but from a few nodes [3155] back. Well, basically if I go back to [3157] JSON here, what you can see is we can go [3160] one node back to open ad, two nodes back [3162] to Google sheets, three nodes back to [3163] when clicking test workflow. Okay, let's [3166] just go to this Google sheet. In order [3168] to reference data, actually in this [3169] case, we will use the schema cuz you can [3171] actually see sort of them logically top [3173] to bottom. In order to reference data [3175] more than one node back, what we have to [3176] do if we just want to redo this email [3178] one, we go curly bracket curly bracket [3180] dollar sign. Then what we want to do is [3182] we go this left round bracket. Then we [3186] have access to all of our earlier nodes. [3187] We can select the current node open a [3189] but we can also select Google sheets and [3191] we can also select when clicking test [3192] workflow we want is the Google sheets. [3194] And then if you just dotindex if you put [3195] a period then you'll get an [3198] item. And the reason why I bring up this [3200] item is because basically all of this [3203] stuff is buried under this dot item [3208] syntax. And it's kind of annoying but in [3210] order to reference I don't know the row [3212] number what we have to do is we have to [3213] reference the Google sheet. Then we have [3215] to reference the item. Then we have to [3216] reference JSON. Then we have to [3218] reference the row number. Why? Because [3220] NAN actually hides some of this [3222] information from us. We don't actually [3223] see the nested data structure. All we [3226] see is the nice representation of it. [3227] Okay. So this isn't actually represented [3230] this way despite the fact that it looks [3232] kind of like it is the way that this [3234] actually looks kind of underneath the [3236] scenes behind what NAD is showing us is [3239] it looks like this. And if you [3240] understand this, you'll understand how [3241] to reference basically any item in NAN. [3244] So this is equivalent to what we're [3246] seeing here. What we actually have is [3247] there's an additional two layers between [3249] us accessing the data through the dot [3251] thing. It's actually [3252] item.json and then we have the row [3254] number stability, first name, first [3255] name, suggestion, stuff like that. Okay, [3257] so that means that when we want to [3258] access it kind of just just looking over [3259] here, the very first thing we have to do [3261] is we have to reference the Google [3263] sheet. Then think about it logically. [3265] Then we have to reference the item. So [3267] go [3268] item. Then we have to reference the [3270] JSON.js. [3272] And then we have to reference the row [3273] underscore number if we want to like [3275] that. And then we get that data. Okay. [3278] So big issue, big misunderstanding I [3280] would say with Naden. Um unfortunately [3282] their documentation in my experience is [3284] not clear enough to really elucidate [3286] what's going on here unless you have a [3287] programming background. Um but just want [3289] you guys to know that this is how it's [3290] done when you reference nodes that are [3292] more than one module back. If you wanted [3293] to just reference something in the [3294] previous node, it's a lot easier. You go [3296] dollar sign and then you go jso n. then [3300] you can just go immediately into the [3301] variables. Message content or something [3304] like that dot subject line for instance. [3307] All right, so let's start looking at [3308] some of these foundational nodes over [3309] here because I think at this point we've [3311] done four different workflows and I [3313] think you guys probably have a [3314] reasonable understanding of how to put a [3315] workflow together now as well. Some of [3317] the more nuanced portions of NAN like [3319] the way that they do their JSON, some of [3321] the the nuances behind burying names [3324] inside of various keys and how to do [3326] arrays of objects and backtrack and all [3328] that fun stuff. Let's actually cover [3330] like nodes because nodes are ultimately [3331] what you guys are going to be using on a [3333] daily basis. After we're done that, then [3334] I'll I'll rebuild this flow up here and [3336] I'll show you guys how all that stuff [3337] works under the hood. This will allow us [3340] to use some of the more um I guess code [3344] oriented features of N&N. Then I think [3346] after this point like you guys have a [3348] reasonable enough understanding to build [3349] most things. It's just a matter of like [3351] what can you build and how exactly do [3352] you put the various Lego blocks I've [3354] shown you together. That's what the [3355] subsequent videos in this course are [3357] going to are going to ultimately just [3358] show you. just going to be non-stop [3359] building 24/7, baby. Anyway, so let's [3363] cover these foundational nodes. The [3364] first thing is we're going to cover [3366] nodes for doing things. So, HTTP [3367] requests, web hooks, and open AI nodes. [3369] And we'll cover nodes that modify flows. [3371] So, if filter, merge, split into a [3372] batches. There are a couple of other [3373] ones, but these are the ones that we're [3374] going to be focusing on, at least for [3376] today. So, you know, in terms of nodes [3378] that do things, um, if you guys aren't [3379] familiar with, um, HTTP request, this [3382] stands for hypertext, I don't know, [3384] hypertext transfer protocol. And what [3387] we're doing when we do an HTTP request [3389] is we're doing the same thing that your [3391] browser does when it goes to a website. [3393] So just like when I go to google.com, [3396] I'm sending a request to Google, [3398] receiving a bunch of information what [3399] this web page looks like, and then I'm [3401] using my browser Chrome to render it [3403] into the beautiful, wonderful image you [3405] have in front of me. The HTTP request [3407] does the same thing. It just it just [3408] returns the thing to you in in the code. [3410] You don't have that rendering portion. [3412] So I'm going to do a get request here. [3414] And the get request is just the simplest [3416] and most basic request. And this is [3418] ultimately what you're probably going to [3419] be using for for most cases. And the URL [3421] I'm going to be doing is just my own. [3423] Leftclick.ai. So leftclick.ai just for [3425] the purposes of this discussion. Looks [3427] like this. We build hands-off growth [3429] systems for B2B founders. There's a [3430] bunch of information about what our [3431] clients get, our leads. The lovely Joe [3433] Davies left me a testimonial. I should [3435] probably touch this website up at this [3436] point. It's been the same for a while. [3437] But anyway, I'm just doing an HTTP [3439] request using a method get to [3442] leftclick.ai AI with no authentication, [3444] no nothing. We're just going to see what [3445] happens. So, let me click that test [3446] step. And the response that we've [3448] received is again an array of objects. [3451] Our one object has a key name data. Then [3454] inside of that key name, you'll see that [3457] there is a ton of code, HTML it's [3460] called. Okay. And just because this is [3462] not the easiest to see here, I'm just [3463] going to go to schema view so you can [3465] see a little bit more of it. But [3466] basically, this here is the code of my [3468] website. This is what my website looks [3470] like to the browsers. um you know and [3472] like what ultimately my browser uses to [3474] render it. You can see it says leftclick [3476] space vertical carrot space AI and [3479] amperand. This is just a symbol that um [3481] allows it not to break any characters [3483] process optimization. Left click is an [3485] AIdriven performance optimization agency [3487] is cutting edge tech to scale your [3488] company. This is all the code right it's [3490] pretty badass. If I were to go to [3491] leftclick and then I were to go to [3494] inspect. If I were to open this up this [3497] is like the Chrome dev tool which allows [3498] you to see the code of the website. It's [3500] the exact same thing that's over here in [3503] the bottom lefthand corner, right? [3504] Literally no differences whatsoever. You [3506] built your agency, we'll scale it. The [3508] only difference is some symbols like the [3509] amperand or maybe the at sign, they just [3511] have like little replacements here or [3513] there so they don't break any um string [3514] formatting. So that's the HTTP request. [3516] Why why does an HTTP request matter and [3518] why would we want to do an HTTP request? [3520] Well, the reason why is cuz you can do [3522] pretty cool stuff with this. Like if I [3525] go um HTML and then I say extract HTML [3528] content. What we can do is we could use [3531] the code of the page to pull out all of [3533] the text. Okay. So why don't I just go [3535] text? I'll go P. Uh let's just do H1, [3537] H2, H3, H4, H5, H6. Let's do P and [3541] return this value as text. And then I'm [3543] going to return uh let's just test this [3544] and see what happens. [3546] What we're doing is we're basically [3548] feeding in the HTML and then we're using [3550] various CSS selectors they're called to [3553] extract a bunch of text for us. And it [3554] looks like I didn't do this right [3555] because we're not actually retrieving [3557] anything. Let's just try P for [3559] now. We'll do this. You're seeing [3562] already that we've extracted a bunch of [3564] P text. We've extracted basically like a [3567] specific type of [3568] tag inside this website that starts with [3572] a P. Okay. Now, we can do the same thing [3574] with a variety of other tags. Let's say [3576] I want to do H1. This is going to return [3577] all of the um top level selectors [3580] basically. So, let's do H1 [3583] test. We build we build hands-off growth [3585] systems for B2B founders. That's pretty [3587] cool. If I return an array, let's return [3589] all of them. We build hands-off growth [3591] systems for B2B founders. A better way [3592] to build ops. What our clients get. If I [3594] do uh I think if I want to select [3596] multiple, I just would I just do P like [3598] this. H1 and P. Yeah, there we go. Okay. [3602] So now I'm getting all the text of the [3604] website. We build hands-off growth [3605] systems for B2B founders. Find the [3606] perfect offer. Automate your lead [3607] acquisition. Solve your project [3608] management. A better way to build ops. [3610] This is all the text of the website. And [3612] all I needed to do in order to feed this [3614] in was I basically went through and then [3616] I fed in a bunch of elements which I [3617] know just correspond to text like this. [3620] And then I pressed test step. It went [3622] through and it extracted all of them [3624] into this big fat array which is really [3626] cool. Now like if you think about it, I [3628] could actually do some pretty cool stuff [3629] with this. I could have AI tell me [3632] something about the site very easily. [3634] You're a helpful intelligent uh website [3636] scraping [3637] assistant. We'll go got to add my [3640] credential first. We'll go down here and [3643] I'm just going to have [3644] AI tell me a little bit about this [3646] website. Return in JSON just some data. [3649] I'll do that as my system prompt. And [3651] then here, your task is to take as input [3654] a bunch of scraped website text and [3658] return as output a JSON that follows [3661] this [3663] format. I'm going to say summary. I'm [3667] going to say three unique [3670] points. We'll do an array. We'll do um [3674] probable customer demographic. Okay, I'm [3677] going to have it return an object. we'll [3680] see contact [3682] information if any and then we'll do I [3685] don't know some sort of like array of [3687] objects. Okay. And then that's that's [3690] what we're going to have it return. [3690] We're going to output the content as [3692] JSON and then as input you add a [3694] message. What we want to do is we just [3696] want to join this is um being output as [3698] an array right now. Right? Arrays as we [3700] see are many options or many different [3702] um things on various lines. What we want [3705] to do is we want to take all of this [3706] output data. We just want to turn it [3708] into one big long string. The way you do [3710] that here is I would use the expression [3712] tab. And then I'm just going to add some [3714] lines so the AI knows that this is my [3716] input. Then I'm just going to go [3718] JSON.ext and then dot we'll just go [3721] join. Join is just a way to convert an [3723] array of items into just one big long [3726] string. And the thing you put inside of [3727] the join is you just put what you want [3730] to separate it by. So in my case, I'll [3732] just separate it all with a new line. If [3734] I enter the detailed editor here, you [3736] can see that now I've just turned all of [3737] this into one giant long string. I'm [3740] going to feed this into AI and I'm going [3741] to have it just tell me something about [3742] the [3743] website. So, this took us just a few [3745] seconds and we already have a scraper [3747] that's basically capable of coming up [3749] with and then outputting a summary of [3751] what I do, three unique points that [3754] separate me from the competition, [3756] probable customer demographic [3757] information maybe I can use to do [3759] something, then contact information if [3761] any. And it looks like it separated that [3763] into a subobject that says method, book [3764] a call, details, get started today, [3766] platform, website. As I'm sure you guys [3768] could imagine, I spent 15 seconds [3769] putting this puppy together. If you guys [3771] wanted to maybe scrape emails or do [3772] something like that, you could put [3774] something together that does this pretty [3775] easily. So that's the HTTP request node. [3778] Pretty simple, pretty straightforward. [3780] The next thing I want to show you is I [3781] want to show you basically the inverse [3783] of the HTTP request node. Instead of us [3785] sending data, I want to show you a quick [3787] and easy way that we can receive a [3789] little bit of data if necessary. And [3791] it's nowhere near as hard as you think. [3792] There are a variety of different ways [3793] that you could do this, but I'm going to [3794] show you guys a really simple and easy [3796] one that I personally use all the time. [3798] It's called the web hook. So, I'm going [3800] to go over here. Then, I'm going to type [3802] in web hook. Starts the workflow when a [3805] web hook is called. Basically, what a [3807] web hook is is it's just a server URL [3809] that you spin up, almost like my website [3811] leftclick. And every time that server [3813] gets a request to it, it'll show up here [3816] with all of the data. Why is this so [3818] valuable? Well, it allows us to do a [3820] million things. Connect workflow to [3822] workflow, add up and create our own API [3824] integrations, do a variety of things [3826] that otherwise we wouldn't really be [3827] able to do without them. This is [3829] basically the glue that holds the [3830] internet together. And this is a quick [3831] and easy way for you to make your own [3833] piece of that. So, this is what the web [3834] hook fields look like. We have a test [3835] URL, production URL. Don't worry about [3837] the distinction there for now. We'll [3838] just use test URL. HTTP method we want [3841] to allow to access our service. Think we [3843] might actually allow multiple. One of [3844] these I think allows us to do multiple, [3846] but we're just going to go with get for [3848] now. The path, we're going to leave the [3850] path as fixed. The path is just this URL [3852] string. Authentication, we're going to [3854] turn this off. We don't want any [3855] authentication. They recommend that you [3856] have authentication, but for simplicity [3858] sake, I'm just not going to have any [3859] because otherwise it might be a little [3860] bit too much at once. Then we're going [3862] to do respond immediately. What I'm [3864] going to do is I'm going to set up a [3865] test event for this URL. Okay. Actually, [3867] I don't know if I can do this with the [3868] same workflow. Actually, no, I can't [3870] because the workflow is already running. [3871] So, I'm actually going to make another [3872] workflow really quickly. And I'm going [3874] to use that to call this web hook to get [3876] some cool data. So why don't I create a [3879] workflow. We'll just call this three NAN [3882] concepts. And then we'll go web hooks [3884] HTTP [3885] requests. I'm going to make a new HTTP [3889] request here. It's going to get this [3891] long thing that I've done over here. [3893] Okay, I'm going to test it. Then over [3895] here, I'm going to grab that data. And [3897] as you can see, like what just happened [3899] if you were paying close attention is [3900] this just ran the second I sent the data [3902] from this node which is in another [3904] workflow over to this node which is on [3906] the current workflow. We received a ton [3908] of info and the info that we received [3910] was received a big object one item [3912] inside of our array of objects here. So [3914] a single object with a key name headers [3917] which had a bunch of other data [3919] underneath params query body web hook [3922] URL execution mode test. So this might [3925] look a little bit dry and a little bit [3926] boring to us right now. But what's the [3928] value here? The value is you can run [3930] something from one workflow, send it to [3931] another workflow really easily. So in [3933] our our first example, we sent no data. [3935] But what if I go back to my other [3937] workflow? Okay, that's number three [3939] here. And then I send some query [3940] parameters and I say first name and I [3943] say Nick. Then I go here a last name [3947] surive. Then here maybe I go UU ID. [3950] That's just like user ID. And then I [3952] type something like this. Now, if I go [3954] back here and I listen for a test event, [3957] I go back here and then I send the test [3959] event. Now, when I receive it, not only [3961] do I get the headers, sorry, the headers [3964] over here, not only do I get the params [3966] inside of our query are the variables [3969] that I just sent over inside of JSON. [3971] First name, last name, UU ID. So, man, I [3974] can do so many cool things with this. [3975] It's crazy. I could connect this to any [3979] web service out there. just give this [3981] URL as the URL where the events are sent [3983] and then voila, I basically have like an [3985] infinite machine. I'll show you guys a [3988] quick example right now using [3990] ClickUp, but you guys can extend this [3992] example and do whatever the hell you [3993] want with it. So, ClickUp is just this [3996] project management platform that I have [3998] that allows you to send out web hooks. [4000] And most services that are good will [4002] allow you to do stuff like this. But you [4004] see there's a call web hook feature [4006] here. I'm going to go back to my web [4008] hook and I'm going to copy this URL. [4010] Now, this is for get only. I don't [4012] actually remember if ClickUp sends a get [4014] or a post. So, we're going to see what [4015] happens here. And then what I'm going to [4017] do is I'll just have status change. [4021] We're going to say from specifically [4024] hook to specifically [4028] outline. And we're going to create this. [4030] And basically what this means is when I [4031] change a field called status inside of [4033] my my project manager, it sends a web [4035] hook over to this [4037] address. So hook to outline finds [4039] something that's hook. Maybe this one [4040] here. Now what I'm going to do is I'm [4042] going to go over here, listen for a test [4043] event. Then I'm going to change this to [4045] outline. And I don't remember if it's a [4047] get or a post request. So we might have [4049] to wait and try two or three. This [4052] unfortunately does not respond to the [4053] methods that are not the same. methods [4056] are, you know, kind of a deeper story, [4057] but basically there are variety of ways [4059] you can query a website or a web [4061] service. HTTP, most commonly, you'll do [4063] either a get or a post. Um, in the [4067] specific instance of ClickUp, it looks [4068] to me like they're probably using post. [4069] So, I'll go HTTP method. I'll go [4071] post. Now, I'll listen for this test [4073] event. I'll change this back to [4076] hook. Then, I'm going to change this [4078] back to outline. And now that it's [4080] outline, um, we're waiting for this this [4082] post request. Let's see if we we are [4084] receiving it from ClickUp. Okay, great. [4086] Looks like we received it. Now, what did [4089] we receive in reality? Well, excuse me. [4091] I'm like really close to sneezing, but [4093] I've decided not to, so I won't. Uh, [4096] before we updated the query field, now [4098] we're updating the body field. We see [4099] it's built into ClickUp. What we did, [4101] ClickUp has a number of default things [4103] that they send over when you do this web [4104] hook integration. One of them is the ID [4106] of the record. Now there's the trigger [4108] ID ID the trigger payload ID the name of [4111] the thing which was three chat GBT [4113] prompt engineering hacks you need to [4114] start using next some hooks some order [4118] in text some information about the [4119] person that created it the point that [4121] I'm making is we just created our own [4122] integration with ClickUp and it took me [4124] like 30 seconds realistically after I [4125] got off the HTTP method hump so in [4128] practice sometimes APIs like ClickUp I'm [4131] sure they have API documentation [4132] somewhere but sometimes they just don't [4133] tell you right at the point of creating [4135] the web hook whether it's going to be a [4136] get or a post request. So if your get [4138] request doesn't come in, just change the [4139] HTTP method to post and then rerun it [4142] with the post uh example and then one of [4144] those will work, which is pretty cool. [4146] Okay, so that's how you do it as a test [4148] URL. Ultimately though, we don't just [4150] care about having this workflow be sort [4152] of a test. We want it to be live. And so [4153] when your workflow moves to production, [4156] aka you publish it and you make it live [4158] to actually interact with the internet, [4159] you're going to want to go over to this [4160] production URL and then copy this URL [4162] and update all of your web hooks to send [4164] here. This will enable you to activate [4166] this. If it's in test mode, you actually [4167] won't be able to activate this. Um, just [4169] I guess for safety or security purposes. [4172] It just makes the transition to publish [4173] it unfortunately involve an additional [4175] step, but it also makes your workflows a [4177] little bit more secure. So, that's how [4179] you do web hooks. The last thing I'll [4181] mention are these OpenAI and AI nodes. [4183] Now, I'm going to have many, many videos [4185] after this one be all about AI agents [4187] since that's obviously the big thing [4188] that's blowing up right now. What I'm [4190] going to do here is I'm just going to [4192] cover them super super briefly. I'm not [4194] even going to like run anything, but I [4195] just wanted to show you guys that NAN is [4197] very AI native. And so whereas I've been [4200] doing some very basic um OpenAI calls [4202] with this OpenAI module, there's a [4204] variety of things you could do. You [4205] could create an AI agent which generates [4207] an action plan and executes it. Uses [4209] external tools. You can have OpenAI [4211] message an assistant or GPT. This is [4213] what we've been using. Some basic LLM [4215] chains and a bunch of like specific [4217] tools that are used to do things like [4219] categorize information, summarize [4221] information, and so on and so forth. AI [4223] agent. Just to give you guys a very [4225] brief example, probably is one of the [4227] most intimidating looking modules or [4228] nodes, but it's actually one of the [4230] simplest in practice. When you create an [4232] AI agent, it'll automatically open up [4234] this when chat message receive node on [4236] the side. And then you'll see that down [4237] at the bottom of my screen, there's an [4238] additional button that allows me to chat [4240] with my with my model. But in order to [4242] make this work, what we need to do is we [4244] need to hook this up. Notice how there's [4245] this little um warning here. What we [4247] need to do is we need to go down to chat [4249] model. We actually need to select the AI [4251] module or AI node that we want the AI [4254] service I should say that we want to [4255] use. For most intents and purposes, I [4258] use OpenAI. This is just the best to me. [4260] But you could use O Lama, Mistral, [4262] Google, Gemini, Anthropic. Feel free to [4264] play around with this for whatever your [4265] use case is or whatever your data [4266] privacy security requirements are. So, [4269] I'm going go down to my OpenAI chat [4270] model. The model I'm going to be using [4271] for this is going to be GBD40. I just [4273] find it has better answers. And then now [4276] you'll see that the warning sign is [4277] gone. Now we have an additional node I [4279] can drag and drop here. And now I can go [4281] to chat and I could say, "Hey, how are [4282] you doing?" We've essentially opened up [4284] our own chat window. Hey, I'm just a [4286] computer program, but I don't have [4288] feelings, but I'm here and ready to [4289] assist you. Thanks, Chat GPT. And on the [4291] right hand side, probably the most [4292] valuable part about this is you could [4293] see a log of what is happening and how [4295] many nodes were called in order to get [4298] you the result. This is important [4299] because the whole point of AI agents is [4301] their ability to call other tools to do [4303] things for you. So this says system, [4305] you're a helpful assistant. human, hey, [4307] how are you doing? This is just their [4309] prompt setup. So, the input to OpenAI [4312] was this right here. And because we just [4314] asked how it's doing and so on and so [4316] forth, um, you know, it didn't it didn't [4317] really do anything special. There were [4318] no additional tools. This is the same [4320] thing as you just sending a message to [4321] chat GBT essentially. Now, in order to [4324] make an AI agent like really work, [4326] you're going to want to add two things. [4327] The first thing you're going to want to [4328] add is you're going to want some sort of [4329] memory. If an AI agent doesn't have [4331] memory, then basically if I go back here [4334] to chat and then say, "What did I say in [4337] my last [4338] message, it will have no context or no [4341] idea. I don't have any access to past [4343] messages or personal data. Each session [4345] is independent." Basically, this is like [4346] a one it's like it's like a send a [4349] question, receive an answer sort of [4350] window. But we don't want that. We want [4352] this to actually have access to our chat [4353] history. We want it to see what we've [4354] been talking about over the course of [4355] the last like 20 or 30 minutes and be [4357] able to reference those. So, there are a [4359] variety of ways to do this. Basically, [4360] you need to implement some sort of [4361] database. I'll show you guys how to [4362] implement some more complex databases in [4364] the future, but the simplest one, the [4365] one that Naden provides right out the [4366] gate, the one that most people on [4367] YouTube are going to be talking about is [4369] this window buffer memory. Window buffer [4371] memory basically just allows you to [4373] store it here inside of the test window, [4375] which is the easiest to do. And the [4377] default is five messages. So, u [4380] basically every time you send it a [4381] message, it will send up to five pass [4383] messages. But just for the purpose of [4385] this discussion, I'm going to go 10. So [4386] now what I'm going to do is I'll go to [4388] chat and then I'll say hey how are you [4391] doing and I'm going to say what did I [4394] ask you in my previous message and [4396] you'll see that it's asking how it's [4398] doing right so we're actually now [4400] accessing the previous message using [4403] this buffer memory and on the right hand [4405] side you'll see here that the log has [4407] gotten a little bit more intense too so [4408] basically we called the AI agent up at [4410] the top the next thing that happened was [4412] we went through the buffer memory we fed [4415] this in and basically ally added this to [4417] some big long stack of message history. [4420] Then we fed that in plus the previous [4422] message. Then we said, "Hey, what did I [4425] ask you in my previous message?" This is [4426] the input that is currently being fed [4428] into the model on that second call. And [4431] then we went down into buffer memory. We [4433] saved all of this again. And then uh we [4435] kind of came up and then and sent the [4436] answer. How about [4439] now? Cool. So now we're three levels [4442] deep. And as you can see, this is just a [4443] quick and easy way to load the memory. [4445] make sure that we're always having some [4446] sort of topical contextual conversation, [4448] which is pretty cool. Now, the real [4450] juice in AI agents, the reason why [4452] they've gained so much popularity is [4454] just because of this tool section here [4456] where you can essentially call an action [4458] just like we were doing before [4459] procedurally, but you can call it using [4461] AI and you can automatically format and [4463] get information from different tools. [4465] So, there are variety of tools that are [4466] sort of set up for you. Air table, base [4469] row, calculator, Gmail, Google calendar, [4471] Google Docs, Google Drive, all this [4472] stuff. [4474] What I'm going to do in this example, [4475] just because I don't want to spend all [4476] day on it, um, before I do my more [4478] detailed AI agent tutorials, is I'm just [4480] going to select Google Calendar. I'm [4482] going to create a new credential, sign [4483] in with my Gmail [4486] account, and then I'll go over [4488] here. I'll close this window. Now that [4492] I've uh I've connected my Google [4493] calendar agent, what I'm going to do is [4495] I'm going to select my specific [4496] calendar, which is Nick [4498] leftclick.ai. And then now that it's [4500] connected to my AI agent, this is the [4502] create event. I don't want to create. I [4504] just want to get so get all of my events [4506] basically from my calendar. Okay. And [4507] then in addition to that, what we have [4508] to do is we have to use this dollar sign [4510] from AI feature here. And we just have [4512] to paste that into the expression field. [4514] Um what this does is this just tells AI, [4516] hey, I want you to provide uh you know [4518] your own details for the value of a [4521] field. In our case, I wanted to feed in [4523] some options that say, hey, you know, I [4525] want you to grab data that is after this [4527] date but before this date. So, if I'm [4529] asking [4530] AI like, "Hey, what's going on? Can you [4534] tell me what I'm doing tomorrow?" And [4536] I'll just say, "Jan 28, 2025." The whole [4538] idea here is AI now has access to my [4540] calendar. It also has the ability to [4542] call that API. Then it can actually go [4544] and retrieve specific events from my [4546] calendar and then return them here. So, [4548] as you can see, I have this call uh me [4550] and my my buddy Zach, and then it just [4551] has all of this information. Okay, [4553] great. How are you more generally? you [4555] know, I can also just chat with it like [4557] I'm chatting to chat GBT or something [4559] like that. So, I don't always have to [4560] use like the tool that I'm I'm calling. [4562] And the idea is you basically stack on [4564] three, four, 5, 10, 15, 20 of these [4566] tools. Although, I find in practice when [4568] you get um past maybe six or seven, [4570] instead of calling a tool, what you want [4571] to do is you want to call another agent [4572] which then decides to call a tool. It's [4574] basically like a big almost like a [4575] search tree or something. But anyway, [4577] that's more or less the AI side of [4579] things. The last thing I'll mention here [4581] is uh this OpenAI note doesn't just have [4583] the message a model text action like [4585] we've been doing before. There's a [4586] variety of other things you could do. [4587] You can create an assistant, delete an [4589] assistant, list assistance, message [4590] assistance, update assistance, analyze [4592] images, you can generate images, [4594] generate audio. Like you have a ton that [4595] you could do here, which is pretty [4596] sweet. I go down to generate audio and [4599] I'll say um I don't know, Nick is [4602] awesome and very pretty and I generate [4604] it using the Nova voice. Click this test [4607] step. Not only can I generate text and [4610] stuff like that, but I can also have [4611] this generate me an audio output I can [4613] then listen to. Variety of cool things [4615] you could do with this. Nick is awesome [4617] and very pretty. You're damn right I am. [4620] Um variety of cool things you can do [4621] with this, but definitely don't sleep on [4623] the AI nodes. Uh you know, don't just [4625] like stick to the one that I've shown [4626] you guys so far. Okay, great. So, those [4628] are the foundational ones. In practice [4629] with NAN, you're probably going to be [4631] using these quite often. What I'll do [4632] next is talk about some nodes that [4633] modify flow. And here a bunch more that [4635] like you're going to want to read their [4637] docs and add them to your toolkit [4638] because this is like an everyday sort of [4639] thing. The first is an if. The second is [4642] filter. The third is merge. And the [4643] fourth is split into batches. So let me [4646] show you guys a very quick and simple [4648] example of the if. If I go [4650] here and then I add my own trigger. Uh [4653] and I just want to trigger manually. Oh, [4655] sorry. It looks like I already have one [4656] somewhere in here. Right. So let's just [4658] repurpose this um manual trigger for an [4661] example workflow that I'm going to build [4663] down below. [4664] this example trigger. I'm going to click [4666] it. And then what we're going to do is [4668] we're going to use the edit [4670] fields. We're going to go down to JSON. [4673] This is just a handy dandy tool that [4674] allows you to set your own inputs and [4676] outputs. So I can now set my own um [4678] output. And I could say first name Nick, [4682] last name uh Sarif. And if I if I test [4685] this, if I test my whole workflow, [4686] you'll see this broke because um Sarif [4688] was not in quotes there. Got to make [4690] sure that all of your strings are in [4691] quotes. If I check out the JSON, you see [4693] the output of this module is now first [4694] name, Nick, last name, survive. Okay, [4696] I'm just going to pin this. Now, let's [4698] say I want to do something else, you [4699] know, if [4700] the if the input is Nick, I want to do [4704] something really cool. I want to provide [4707] prize. I don't know, um, [4710] $100. If the input is Nick, I want to go [4713] through my my sequence and then I want [4714] to generate another variable called [4716] prize, and I want to I want to have it [4717] be $100. Okay. But I only want to do [4720] that if the input is Nick. If the output [4722] is something else, then I want to have [4726] my prize be just $5. So Nick gets all [4730] the prizes here. He's very greedy. Okay. [4732] So how do you actually implement this [4733] sort of logic? Well, the simplest way is [4734] if I click this plus button and I just [4736] type if, you'll see I'll have this node [4738] pop up that says if wrote items to [4740] different branches, true or false. So [4741] I'm going to add that in there. And what [4743] I'm going to say is if first name, which [4745] by the way, we could still just drag if [4746] we wanted to. You can say if first name [4748] is equal to Nick, then proceed through [4751] the true node, which is up here. And if [4755] not, we're going to want to proceed [4756] through this false node. Isn't that [4759] cool? So now we basically have two [4761] things that are occurring. Okay, prize [4764] up here was 100. Prize down here was [4767] five. I'm going to click test workflow. [4769] This is now going to run. And I just [4771] want you guys to see what's happening. I [4772] clicked test workflow. We then edited [4775] our fields. We added Nick as the first [4777] name. We then went to the if and then as [4779] we saw here, first name was equal to [4782] Nick, meaning oops, if I double click [4784] this again, the output is now only going [4787] down the true branch with one [4790] item. And then the uh upper branch was [4793] illuminated. It's green. And then that's [4794] how we get to edit fields with the prize [4796] equal to $100. Now, if I change this, [4798] instead of Nick, if it's like Sally or [4801] something, and if we run this again, [4804] what you'll see is the [4806] data is flowing through here cuz I [4808] didn't unpin it. So, let's unpin it. If [4810] we if we test this now, uh what you'll [4812] see is the data didn't go through the [4813] top uh route anymore. Went through the [4815] bottom route. Okay, great. So, now with [4816] this example here, why don't we just [4818] pretend like we're emailing somebody. [4820] So, I'll go draft an email. [4823] create my thing here and we'll say [4825] congrats you won good expression. Then [4829] what I want is dollar sign [4831] Jason.prise right over here. So like [4834] congrats you won $5. How cool is that? C [4838] title [4840] loser. Uh okay, great. And then I'm [4842] going to go here and I'm going to create [4843] a [4844] draft. Voila. I have it. Now if I go [4846] back here to my SOS media queries page, [4849] see it says, "Congrats, you won $5." [4851] There's nobody to because we didn't set [4852] the email to. But pretty neat, huh? We [4855] gave the same thing with this $100 [4859] field. Go over here. You'll see that I [4861] just copied like all of the same logic. [4863] It says, "Congrats, you won Jason. [4865] Prize." It's grayed out right now [4866] because there's no data coming in. But [4868] you'll see that it'll work if I change [4869] the um input back to Nick. Then if I [4872] test this, I'll see it'll follow the top [4874] route and then also send me an email. [4876] Okay, great. So now let's look to use [4877] the filter node. Um, what I have here is [4879] I have my little first name Nick here. [4882] Um, what I'd like to do instead is I'd [4883] like to just change this a little bit. [4885] So, instead we'll create an array of [4888] names. And inside of this, we'll have [4890] Sally, John, and then Nick. Okay. And so [4894] now, if we test this, we see three [4896] entries in an array called names. We [4897] have our top level array, which contains [4899] an array of objects, and we have our [4901] object. And inside of that, we have key [4903] whose value equals a list of other [4905] objects and array of other objects. I [4906] know the terminology can be kind of a [4908] lot and unfortunately there are many [4910] ways to refer to the same thing. So if [4912] something doesn't make sense just bear [4913] with me here and we'll in a moment. [4914] Okay, great. So let's say what we want [4916] to do if this names array includes Nick [4920] then um I want to continue with the [4922] flow. So I'll go array. Then what I want [4925] is I want to see if this array of of [4927] names feed that in here contains and I [4931] just want to say Nick. I'm going to test [4933] this out. [4935] What you'll see is that we've kept it [4936] because it does in fact contain Nick, [4938] which is pretty cool. If instead we [4940] wanted to see if it contains Peter, we [4942] test this. You'll notice that we are now [4944] following the discarded route. Okay, [4946] there's kept and then there's discarded. [4948] The thing is um it just goes down the [4949] same flow. Whereas if sort of split into [4952] two, there's a true and a false route. [4953] Uh this one actually just like continues [4954] and proceeds down the same flow. If [4956] something matches the filter, it will [4958] continue. Something doesn't match or the [4960] fil match the filter, then it won't. So [4962] what we could do if I just paste in this [4964] Gmail node. So we could basically build [4967] uh a very similar flow but what we could [4970] do is if it is kept then we could send [4972] the prize of $100 instead. We could [4974] hardcode that $100 in. So I'm going to [4976] do is I'm going to check to see if it's [4977] kept. Okay. So right now name contains [4979] Peter. It's probably not going to be [4980] kept, right? So test workflow. It's [4981] going to stop right here. Does not [4983] proceed any further. If instead I change [4985] the filter so that it contains Nick, [4986] then we test it. we see is we're going [4988] to move on and we're actually going to [4990] like proceed with the rest of our flow. [4992] So, this filter here just allows us to [4993] kind of stop if it doesn't match our [4995] condition or or continue. And you can [4997] add as many conditions as you want. You [4998] can go and or or um you can add whatever [5000] sort of logic you'd like. I used array [5003] logic here too, but there's also a lot. [5004] There's like string. You can check to [5006] see if something exists or matches array [5007] X, number, date and time, boolean, [5010] array, and then there's also a bunch of [5011] object ones as well. So, that's filter. [5014] Pretty straightforward, I would say. The [5016] last thing is two more. There's one [5018] called merge and then there's split into [5020] batches. What I'm going to do here is [5022] I'm going to have two routes or two [5024] outputs of a module and then I'm going [5026] to combine them back into one. And I'll [5027] show you guys what I mean with this. [5029] Remember earlier how we had some HTTP [5031] requests. What I'm going to do is I'll [5033] go first name [5037] Sally and I'm going to [5040] have let's just say second name. [5043] Actually, let's [5045] go person one. Go person two. Just for [5049] the purpose of this example, we're going [5050] to have two people. Person one, Sally. [5052] Person two is Nick. Okay. Next, what [5054] we're going to do is we're going to add [5055] an AI node. You know, down to open AI, [5058] and I'm just going to message a model. [5060] Then here, I'm going to say write a [5063] detailed fun story about what I'm going [5066] to do is I'll go I don't know, person [5069] one. So, JSON.person one. This example [5072] is sort of silly if I'm honest because [5074] we could just hardcode the names in [5076] there. But I just wanted to do this to [5077] show you guys how this logic of the [5079] merge node would work. I'm going to [5081] select [5083] GPT40. And then I'm, you know, because [5085] this is just a very quick and easy [5086] example. I'm actually going to add a [5087] user [5089] prompt. Okay. It's now going to go and [5091] it's going to write me a fun story about [5092] Jason. One. Person one was Sally. So, [5095] we're going to see it in a [5097] second. Very fun. Thank you very much [5099] for the detailed story. [5103] Q Jeopardy [5105] music. Q other elevator [5108] music. All right, it's taking its sweet [5110] ass time. Could be for a variety of [5111] reasons. I might have like a little bit [5112] of rate limit action going on on my end [5114] just because of all the examples that I [5115] provided, but could also be something [5117] else. I don't [5119] know. Let's see [5122] here. Okay, cool. Looks like it did. [5124] Once upon a time in the vibrant city of [5126] Elmssworth, where the streets hummed [5128] with the rhythm of hopeful dreams and [5129] endless possibilities. Okay, so we just [5131] uh you know we just wrote a cool story [5133] about Sally. What what you can do in N8 [5135] is you can actually connect the same [5137] output to multiple um multiple future [5140] nodes. So what I've done is I've you [5142] know I have one over here which I'm [5143] going to rename write story about uh [5147] Sally. Then I have another one over here [5149] which I'm going to say write story about [5152] Nick. [5154] Then down over here, I'm going to say [5156] write a story about person two instead [5159] of person one, which is, you know, now [5160] going to equate to neck, right? If I [5162] test the step, same thing's going to [5163] happen. It's going to call GPT40. It's [5166] going to write me a cool [5167] story. The issue is if you think about [5169] it logically, we now have two routes. We [5172] have one top route that writes a story [5173] about Sally, another bottom route that [5174] writes a story about Neck. Um, so if we [5176] wanted to do something with these [5178] stories, like I'd kind of have to repeat [5179] the same logic up here. Let's say I [5180] wanted to email this to somebody. Well, [5182] I'd have to Gmail up here. and I'll set [5183] to Gmail down here, right? I have to [5185] duplicate it. And it then provides a [5187] pretty simple and easy built-in way to [5188] avoid that. It's called the merge node. [5190] So, you can merge data of multiple [5191] streams once data from both is [5193] available. So, if you just click on it, [5195] you'll see that there's a mode append or [5197] combine or SQL query. I'm just going to [5200] stick with append for now. I'm just [5202] going to feed in these [5205] inputs. And in this way, what I can do [5207] is I could actually just write, you [5209] know, one Gmail node here instead of [5211] two. Um, and maybe I could like append [5212] both of these stories or something. But [5215] let me actually show you um what this [5217] looks like. Now, I'm actually going to [5218] test this workflow from end to end. So, [5220] you see it first does the top route and [5222] you can see this is orange because it's [5223] like filling out the um story about [5226] Sally right now. This is currently [5227] active. It's waiting to fill in the [5229] merge the second this is finished. And I [5231] think I probably should have set some [5232] character limit to the story cuz now I'm [5233] thinking about it's probably writing a [5235] lot. RIP my [5237] tokens. And then after it's done with [5240] the story about Sally, it's gonna go and [5243] just gonna do the same thing. Write a [5244] story about Nick. Um, hopefully this [5246] finishes before the next ice age. Okay, [5247] that took way too long, but uh, just [5249] make sure you put in some sort of limits [5251] next time you do one of these calls. [5252] Otherwise, you'll be waiting here until [5253] the end of time. However, what we see as [5256] our final product is the top route [5258] completed and then populated the merge [5260] and the bottom route also completed and [5261] populated the merge. Now we had one item [5264] from a top route, one item from the [5265] bottom route. Then we also carried [5267] forward one end from the top route, one [5268] item from the bottom route. But what [5270] you'll see is the output of this merge [5271] is now two items instead of one. The [5273] reason why it's two items is because we [5275] use the the append. So now we have uh [5278] you know the story number one and we [5279] have the story number two. Basically we [5282] don't actually have to just output two [5283] things. We could actually just output [5284] like one item instead. Um but because in [5286] N8 um outputs are arrays of items, you [5290] kind of have a choice there. Now, since [5291] we output two items, what we could do is [5293] we could add our little Gmail node. [5295] Stick that down here. Connect [5298] it. Then I'm just going to pin this. And [5302] what I could do is I could email myself [5304] this [5306] story. I could say story about just cuz [5308] I back myself into a corner here. I need [5310] to write kind of like a little bit more [5311] difficult of a line of code. But I don't [5314] have access [5315] to Nick here, right? Like I don't have [5317] access to a single variable that [5318] contains the value that I'm looking for. [5320] This is person one, Sally. Person two, [5322] Nick. So, I mean, I could select person [5324] one, but then my second run would also [5328] say Nick, right? So, both of these would [5329] say story about Sally, story about [5331] Sally, even though they'd have different [5332] stories. So, what I'm going to do is I'm [5333] going to say I'll look at the actual [5336] story. So, I'll go [5340] uh sorry, I'm going to go to the merge. [5341] I'll look at the actual story here, [5345] which now that I think about it is [5346] actually just JSON. Then I'll go [5348] message. I'll go content. Then if it [5350] includes the term [5353] Nick, then I'm just going to return [5355] Nick. Otherwise, I'm going to return [5357] Sally. That's how that works. So if this [5360] contains Nick, I'll return Nick. If not, [5362] I'll return the ter I'll ret I'll return [5364] the term Sally. This is just a kind of a [5366] shorthand way to use the if um else [5369] logic. Same as what we had before. So, [5371] I'm just going to pop this puppy [5374] open. Um, and let me take a look at the [5377] data. Story about Nick. Nick was an [5379] ordinary guy with an extraordinary [5381] dream. I wanted to become the first [5382] person to ride a unicycle all the way [5384] across the United States. Then Sally, [5386] uh, Once Upon a Time, the quaint town of [5388] Lavender Hill, I think. Uh, this was the [5390] one where I timed out or something [5392] because of the rate limit, [5393] unfortunately. So, it doesn't look like [5394] it generated me anything more than Once [5396] Upon a Time, the quaint town of Lavender [5397] Hill. But, I'm sure we could. Yeah, like [5400] I could rerun this. Let me just make [5401] sure that the prompt is a little bit [5404] shorter. Less than 100 words. Let's just [5407] do [5409] that. And then good. Uh, awesome. We [5412] should be good now to actually produce [5414] this puppy. Let me just go over here and [5417] delete [5418] these examples that I don't need in [5421] preparation for the next run. And cool. [5424] We we warmed up two [5426] Gmails. Now we have a story about Sally, [5428] who's a curious hamster. And then I am a [5430] curious inventor. Lovely. Wonder why uh [5433] they use the term curious both times. [5436] But anyway, I hope you guys see now that [5437] like basically the merge connects two [5438] things together. The if statement sort [5440] of does the opposite. It kind of creates [5441] two routes, [5443] right? Yeah. This is kind of neat when [5445] you contrast and compare them like that. [5448] So I believe now uh we have everything [5450] we need except for the split into [5452] batches run. Split into batches is kind [5454] of a a little trickier of a thing to [5456] conceptualize. So I'm going to show you [5457] a real example from a source that I used [5459] to extract a bunch of data. So let me [5462] take a quick peek here at [5464] um I think I was doing depersonalization [5467] system. Yeah. So I created a video on a [5469] depersonalization system a while ago and [5471] as part of it um what I'm doing is I'm [5474] waiting over here for data to come in [5475] through a web hook. I send in data to [5478] this web hook and then I use it to call [5480] an API that gets a bunch of data set [5483] items. The data set items are pretty [5485] big, right? As you can see over here, [5486] it's a bunch of data about specific [5487] leads. But notice how it says 128 items [5490] above, right? Anytime you output more [5492] than one item in N8N, what you can do is [5495] you could loop over every item. Then you [5497] could perform something individually on [5499] just that item. And then once you're [5502] done with that, you could go back to the [5504] loop over and over and over and over [5505] again until you're completed. So in my [5507] case, I had a lot of items in this. I [5511] had 128 for Christ's sake, right? And [5513] what I wanted to do is I wanted to run [5515] my five column personalization flow [5516] similar to what we saw earlier. And then [5517] I also wanted to add a row to my [5519] spreadsheet. Now unfortunately every [5521] time I did that I consumed one API uh [5524] call and a lot of these platforms have [5526] pretty intense rate limits. So instead [5529] of me um one issue I always found I [5531] found very frequently was I just kept on [5533] getting timed out. It would say 400 [5534] error or 403 error or whatever. [5537] Basically, the gist of that is that, you [5539] know, I'm over the rate limit and [5541] they're not going to allow me to make [5541] any more requests for a certain amount [5542] of time. So, what I did instead is [5544] instead of me just submitting all of [5546] those requests simultaneously, I added [5548] this to a loop over items and then I [5549] added a designated weight node. The [5552] weight node is a simple node in N that [5554] allows you to wait for a certain number [5555] of seconds. In my case, five. And in [5557] this way, I was able to basically take [5559] one item, go from start to finish, wait [5562] 5 seconds, and then loop back and then [5564] proceed with my next item. And I [5566] basically just went, you know, one after [5568] the other after the other after the [5570] other over and over and over and over [5572] again. So that's just to give you guys [5574] some context on on what that actually [5575] might look like. If I go down [5577] here and I set um my items here, I'm [5581] just going to use a future a feature in [5582] NAN that allows you to automatically set [5584] like your own test data. So I'm going to [5586] say, you know, there's there's first [5588] item and then there's second [5590] item and my data for that. Where is the [5593] edit fields? Right over here. [5596] If I zoom way in, you'll see that I'm [5599] now outputting two items, right? So, [5601] what I can do is I can go loop over [5602] items, split in batches. You set the [5605] batch size to one. What it'll do now is [5608] it will go first item and then second [5610] item. What I'll do is when you add a [5613] loop over items, it immediately adds a [5614] replace me node. And this is what you're [5616] supposed to basically replace with the [5617] thing you want to do. So, in my case, I [5618] just want to wait 5 seconds. So, I'm [5620] just going to go over here and go wait. [5623] wait exactly 5 seconds. What I want to [5626] do is for the loop route, for the route [5628] that is going to be looping over my [5629] items. So basically for every item, you [5632] can think of this as I want to wait and [5635] I want to wait 5 seconds. Very cool. [5639] Then the output of this needs to feed [5640] back into the input. This is kind of [5642] like the tricky [5644] part. So when you go through a loop, I'm [5646] going to click a test workflow. I'm [5647] going to generate two items and then I'm [5649] just going to pull one item out of that [5650] and I'm going to wait 5 seconds. I'm [5652] going to go to the second item and I'm [5653] going to wait 5 seconds. Is this going [5655] to do anything? No. But notice that [5657] there is both a loop route and then [5658] there's a done route. Basically in NAND [5660] once you're done with the loop route, it [5662] just automatically goes to the done [5663] route. So I could do something like this [5664] and maybe I send myself an email. Let's [5666] just [5668] draft. And then let's say um you [5672] know done [5675] looping. You successfully waited 10 [5678] seconds. [5681] Awesome. So, we're going to wait 5 [5684] seconds and then 5 seconds. Then we're [5685] going to Gmail. Okay. So, that's that. [5688] I'm going to test this workflow. That's [5690] the first 5 seconds [5693] here. And that's the second 5 seconds [5697] here. And once this is done, we can now [5700] send over an email draft or queue up an [5702] email draft, I should say, which is [5704] right over here. I should note that I [5706] may have ran this twice. I feel like I [5708] just ran this twice. Looks like it's [5710] carrying all of these here. Oh, yeah. [5712] Sorry. It'll it'll output all of the [5714] records that you feed it in basically. [5716] So, I fed it in two records and then the [5718] third run it went and then fed both of [5719] those records in as input to my Gmail [5721] branch. Um, what I could do is I could [5723] take these two items and I could convert [5724] into just one item by combining them. [5726] Um, and then I wouldn't have to deal [5727] with this, which is kind of neat. So, [5729] that's probably what I would do in [5730] practice. I wouldn't actually proceed [5732] here with two items. I would just do [5734] one. There's a really cool built-in way [5736] to do this in NAN just called execute [5738] once. So if you just go to the settings [5740] page of any node and then just click [5742] execute once, you basically stop the [5744] multiple executions regardless of the [5746] number of elements that precede it. So I [5748] just clicked execute once and instead of [5750] me sending two emails, now it's only [5751] going to send one. That's run number [5754] one. That's run number two. Then it'll [5757] go and it'll feed one item as an output. [5761] So if I refresh this now, instead of [5763] two, I'm only going to have one. Quick [5765] and easy hack. Um, and yeah, you know, [5767] because we're building stuff live, [5768] hopefully you guys get to see the [5769] applications of this in real time as we [5771] put something together. All right, so [5773] now I think we are at the point where we [5774] can realistically build out [5775] substantially more complicated flows. [5777] What I'm going to do now is basically [5778] run almost like a test of sorts where [5781] we're going to take all the information [5782] that I just tried to shove into your [5784] brain and we're going to use it to build [5785] out a flow that actually does something [5787] business worthwhile, a flow that I've [5788] sold many times before and a flow that's [5790] made people a fair amount of money. So [5792] this is what the flow looks like right [5794] now. I'm actually going to simplify it. [5795] I've decided to do it a little bit [5796] simpler just over the course of the last [5798] like 20 minutes thinking about it. But [5799] basically, just to keep things make a [5801] long story short, there's this service [5802] out there called SOS. Um, and I [5804] mentioned this at the beginning of the [5805] video, they send out like a a query [5807] every day from journalists uh where the [5809] journalists are looking for people that [5811] match their criteria to answer [5813] questions. So, uh, for instance, you [5816] know, this one up here is from Jordan [5817] Rosenfeld who's saying, "Seeking [5819] healthcare Medicare specialist weigh on [5820] how RFK Junior and Dr. Medat Oz might [5822] affect benefits or healthcare if [5824] appointed. know that this is usually [5825] like US specific. I think they have kind [5827] of like a like a global arm sometimes [5829] too, but most of this is going to be USD [5831] uh US specific. And then it says, "Hey, [5834] um I'm looking to speak to people in a [5836] nonpartisan way, but the possible [5837] changes, things like Medicare, [5838] healthcare, insurance, these are two [5840] stories. Specify what you're commenting [5841] on can be both robust and longer answers [5843] are prioritized. You must have the [5844] relevant experience. We'll link back to [5845] your site. Please include pronouns." [5847] There's a lot going on here, right? [5848] Basically what we want to do is we just [5849] want to take this whole long email and [5853] we just want to extract all of these. So [5857] this would be [5859] one, this would be one, this would be [5864] two, this would be three, and so on and [5867] so forth. And we want to feed this into [5869] AI. And we just want AI to give us a [5870] very simple answer. Hey, is this [5872] relevant to me based off of some [5873] characteristics I'm going to give you? [5875] and two, if it is, can you like [5877] pre-draft an email for me? So, pretty [5879] pretty simple, pretty straightforward [5880] stuff, right? Let me show you how [5882] straightforward this flow can be given [5884] what you now know. And I want you to [5885] treat this as like a test, basically. [5887] Like, you've made it this far. Let's [5889] actually see if you could build [5890] something out that's business [5891] worthwhile. If something that I'm saying [5893] doesn't make sense, uh, pause the video [5894] and look for the specific part that I've [5896] covered the concept in, cuz that's [5898] that's basically the purpose here. I [5899] just want you guys to be able to [5900] reaffirm your knowledge and show you how [5901] now you can do something pretty cool. [5903] Okay. is the first thing I'm going to do [5904] is I'm just looking for a Gmail trigger [5905] there. I'm going to select my [5907] credential. Sorry, not create a new [5909] credential. I'm going to select my [5911] credential, Gmail account 3. And the way [5913] that this module or node works is it [5915] extracts emails from my inbox that match [5917] my specified filters. And it does so in [5919] the timing that I give it. So every [5921] minute, hour, day, week, month, x, [5922] custom, whatever. I'm just going to say [5924] once a day for now. It's going to be [5926] zeroth hour, zeroth minute, simple [5928] stuff. The event I'm looking for is [5930] message received. Then what I need to do [5932] is I I need to add a filter down here. [5934] And there's one called search where I [5935] basically just look for emails from SOS. [5939] Luckily for me, they're all formatted in [5940] very similar ways. SOS media queries. So [5942] if I want to get all the emails from [5943] SOS, this is just what I do. Now I don't [5945] just want to get any email. I just want [5946] to get the specific email just to show [5948] you guys what I'm working with. Later [5950] on, we'll then um we'll separate it. So [5951] it's just SOS media queries. It'll work [5953] with any of them. But for now, I just [5954] want to grab this one. Here's what you [5956] do. You just go [5958] subject and then you'd feed this in. [5961] This is a Gmail operator, so just use [5963] whatever same filtering mechanism you do [5964] for your own emails in Gmail. Uh, and [5966] just feed it in over here and it'll work [5968] fine. Okay, now let's test this out. [5970] Let's grab the data. We've received a [5973] ton of data. Uh, this is an object with [5975] 11 items inside, but this simplify is [5979] sort of working against us here. The [5981] Gmail trigger just natively always has [5983] simplify on. We actually want to get rid [5985] of this. So, I'm going to go to [5985] expression just like we know how and [5987] press and and type in false. This is the [5989] same by the way as just turning this [5990] off. I just wanted to be clear that I [5992] always use the expression field. And now [5994] I'm going to get the actual data of the [5996] email which is way more as you can see [5998] here. Instead of whatever it was 12 or [6000] something, now it's or six, now it's 13. [6002] And uh the headers object has 27 items [6006] buried in it just in and of itself. The [6008] thing we're looking for is this text [6009] variable, which is the same as what we [6011] had before. Tell friends to join source [6012] of sources. It's always free. want to [6014] know how to strengthen your relationship [6015] with journalists blah blah blah. We're [6017] then going to pin this. So now we have [6019] access to all of this JSON in future [6021] nodes. And I think I got lost here with [6024] my Gmail [6025] trigger. And now uh let's actually go [6028] ahead and let's let's split this data. [6029] Let's basically get our data so that [6031] it's just a bunch of these. How are we [6033] going to do this? Just think about this. [6034] We got a bunch of text processing [6036] features available to us. We know a [6037] little bit about the JSON JavaScript and [6040] stuff like that, but what are some ways [6041] we might actually realistically be able [6043] to do this? [6044] Well, the way that I see it is the great [6046] news about source of sources and the [6048] previous uh service called Haro is that [6050] they just have the same like characters [6052] everywhere. So, they have a bunch of [6054] stars here. Then between every story is [6056] basically just like these underscores. [6059] So, underscores there, underscores [6062] there, underscores there. So when you [6065] see a similar pattern like this, it [6069] becomes very easy for you to like [6070] process this in a noode tool using a [6072] term or a function called split where [6074] you basically just feed in a whole big [6076] string and then you just split it based [6077] off something that you want. So I'm [6079] probably I'm going to probably need to [6081] split this twice. The first thing I'm [6082] going to do is I'm going to split based [6082] off this up here and then is you know [6086] there's like this top section and then [6087] there's going to be this whole bottom [6088] section. Then after that I'll grab the [6090] bottom section. I'll split it based off [6092] of uh this probably. then I'll just be [6094] able to get like the individual [6095] sections. If that sounds like rocket [6096] science to you right now, don't worry. [6098] We're going to go over here, press edit [6100] fields. And what I'm going to want to do [6103] is for now I'm just going to go manual [6104] mapping. Click add field. This allows me [6106] to create my own variable basically [6108] based off of um you know the the [6110] previous module. So I'm going to type [6112] above. Uh [6115] actually yeah, let's let's just call [6117] this [6119] below. And then what I'm going to do is [6122] I'm going to feed in where is this text. [6125] Ah, it's right over here. We'll go to [6126] the expression field. Then I'm just [6128] going to type dollar sign JSON dot. And [6131] what I want is I want text. Okay. So now [6134] if we open up this big fat editor here, [6135] we got all the text right here. Pretty [6137] sweet, right? We don't want all the [6138] text. We only want the stuff that is uh [6141] below this line. So I'm going to copy [6143] this. And then I'm just going to go over [6145] here and press dot. Now we have a bunch [6146] of functions. And I haven't covered all [6148] these functions yet. I will in the [6149] future videos. Um, but one of the [6151] functions that I use all the time is [6153] called split. Just press split. And all [6155] we need to do now is we just need to [6156] feed in the thing that we want to split [6157] it by. So I'm going to feed in what I [6159] just copied a moment ago. Okay. And now [6162] instead of just seeing the string, we [6165] actually see an array. And this is what [6166] arrays look like when they're output in [6168] um naden. It says bracket array and then [6171] colon space. And then we actually have [6173] the whole array here. And this array is [6175] split based off of wherever this was. So [6179] I think it's going to be split right [6181] over here. The last character before it [6182] will say information week. Okay. So we [6185] go information week. I'm going zoom way [6188] in. And yeah, that's what the array [6191] looks like. We have a comma. So this [6192] whole thing was a string. Then we have [6194] um quotes and then a comma, a space, and [6196] then we have another quote. And this is [6197] the beginning of everything underneath [6198] it, which is awesome for us. Okay, so [6201] this is basically what we get. Um, and [6203] now the really cool thing that allows us [6205] to do is it allows you to pull objects [6207] out of an array. So this is an array [6209] with two items inside of it. The one [6212] string that's everything above those [6213] lines, this little star line, then [6215] another string that's everything below [6216] the star line. We can just go dotlast. [6219] And now we'll just pull out the actual [6221] string itself, which is this. All of [6224] this. How cool. Now what else we could [6228] do is theoretically we could just split [6229] this again. We could split this again [6231] and then extract everything split based [6235] off of these characters. So I go [6237] dotsplit feed this in. Now we have [6240] another array, right? How many items are [6242] in here? I don't know. Let's find out. [6244] So I'm going to test the step. You click [6246] on test step. And now we have a bunch of [6247] different items. So yeah, just make sure [6249] you like set the array um here anytime [6252] you're screwing around with data. [6254] Otherwise, I believe they have a field [6255] like autotype convert or something. Um I [6257] haven't used that one before. type [6258] conversion errors or something. I [6260] actually just set the specific uh data [6262] type that I want. In this case, I'm [6264] creating an array. I'm splitting stuff [6265] to turn it into array. So, uh I'm going [6268] to be doing so with this array drop [6270] down. Okay. But anyway, now we have a [6271] big array. Pretty cool, [6273] right? And it looks like we have 19 [6276] items in total. What I want to do with [6278] this is first of all, I'm going to pin [6280] this. Second of all, I'm going to go [6282] over here to extract titles. And I'm [6283] just going to copy this because I don't [6284] want to have to rewrite the whole [6285] prompt. I think that would probably take [6287] like 15ish minutes or so once when all [6289] is said and done. Um, what I want to do [6291] is I want to um grab this data which [6294] looks just like this. And all I want to [6296] do is I just want to feed this into AI [6298] now. And I just want to have AI tell me, [6300] hey, am I good? You know, if I'm good, [6302] then go ahead and like draft an email. [6304] If I'm not good, then um then don't. And [6307] I know just from experience that this is [6308] sort of split into two parts [6311] here. So, I'm just going to copy this [6315] over. I'm going to use it to create my [6317] prompt. Okay. What does this prompt look [6320] like? You're a helpful intelligent [6321] administrative assistant. Very on brand [6322] for me. That's a system prompt. Then, [6324] hey, I'm a business owner specializing [6326] in AI, automation, marketing, and [6327] software. Then what I'm going to say is [6329] below is an email requesting a [6335] uh below is an email requesting let's do [6338] an email request from a [6341] journalist looking for a [6345] story about sorry information about [6349] their [6350] story. Then just going to paste a bunch [6352] of data in [6358] Your task is to determine whether it is [6361] relevant to me and if so pre-draft an [6364] email that answers their questions using [6367] my tone of voice and I'll say casual [6369] Spartan. Some [6372] information about me. I own one second [6374] copy. Here are my [6378] links. Then I will say [6383] uh sorry I just got a lot going on here [6385] because I'm piecing this together [6387] between two different [6388] um prompts. But anyway, some information [6391] about me. I own one second copy a [6393] successful AI marketing company that [6394] doesn't came up. My name is Nick Raf [6395] here. My links don't use unless asked [6397] links. And then um below is a request by [6402] a journalist for outreach. Write a [6403] sinking spartan email responding to each [6405] query. [6406] says Spartan email be concise. Use the [6410] following [6413] format. [6415] Okay. Then I will [6420] say if it is relevant return a JSON [6424] object as [6427] follows. [6429] True. Email body. Email body goes here. [6437] If it is not [6442] relevant, return false for relevance and [6445] leave email body [6449] blank. Some information about me. [6454] Good. Use the following email format. [6457] Email template when responding to [6459] relevant inquiries. Cool. [6465] Make sure to respond in [6468] JSON. Very sweet. Okay, great. And now [6471] all I'm going to do is I'm going to [6474] provide as input [6479] um the specific item that I am [6482] referencing. So what you'll find is when [6485] you're referencing a an array like this, [6487] what it'll do is it'll grab the specific [6489] item of the array. So JSON.blow zero. I [6492] don't actually want that. Um what I want [6493] to do is I I basically want to loop [6495] through this array and then for every [6496] item I want to feed this in as input. Um [6499] this is selecting the first item here [6500] with the zero. Um everything is zeroth [6502] indexed. So this is 0 1 2 3 4 and so on [6505] and so forth. Um so in order to do that [6507] we're going to have to take our data and [6508] do just a little bit of pre-processing [6515] first. Um we're going to want to combine [6518] a field from many items. Sorry. uh turn [6521] a list inside items. So you're using the [6523] split out node. Don't believe I talked [6525] about split out, but rest assured all [6528] this does is it turns an array into a [6529] bunch of items. So you can run them one [6531] by one. Okay, great. So below no other [6533] fields, and now we have uh 20 items on [6535] the right hand side. And now basically [6537] we can feed in every one of those 20 [6538] items to [6540] AI. So all I'm going to do now is I'm [6543] just going to feed in uh this below [6545] field. And now instead of me having to [6547] go JSON items.below below zero, below [6550] one, below two because we are now [6552] splitting this into a top level array [6554] instead of before how it was an array [6557] and then the curly bracket below and [6559] then another um array with like 20 [6562] records. Now it's just below below below [6563] below below. It's going to run basically [6565] once for every item that we've received. [6568] So yeah, that's that. Um we should be [6570] able to get some JSON here. Uh I don't [6572] want to run it on all 20 as a test [6574] though because all we're doing is [6575] testing. So, what I'm actually going to [6576] do is I'm going to go in between these [6577] and type in limit. Limit allows us to [6580] restrict the number of items. So, I [6582] actually only want to run this twice to [6583] start, and I want to see what happens. [6585] So, I'm actually going to do this on two [6587] items. Then, we're going to see what [6589] those two item outputs are. And if [6590] they're good, then we'll continue. We'll [6591] pin them and then move on. And if not, [6593] then we won't. We'll be able to modify [6594] them before we actually waste 20 uh [6597] tokens worth of data. And I'm just going [6599] to pin all the data moving forward. And [6601] then I'm going to go over here to limit. [6602] And then I'm just going to press test [6603] step. [6605] Okay, I'm going to pin this now. So now [6607] we have the two items. So I'm going to [6608] go over here and then I'm going to test [6609] this [6611] step. Looks like we are now producing. [6614] And it looks like both of these were [6615] false. So I'm going to want to up this [6617] limit just a little bit. Maybe we'll try [6620] three last items instead. We'll [6622] overwrite the data that's pinned. We'll [6624] pin it again. I'll go back to extract [6626] titles. And now we're feeding in the [6627] last three enterprise genai users. Yeah, [6629] this is probably me. [6634] edge AI and stuff. Looks like they kept [6635] their AI entries at the end, so that [6637] makes [6640] sense. And we're now doing three API [6644] calls. It looks like uh there were two [6647] TRS. So, true up here, true up here. [6649] This looks like it was just junk data. [6650] So, we could actually cut that out. Show [6652] you how to do that later. Um, but now we [6654] actually have like emails drafted. Hey [6655] Pam, I own one second copy accessible [6657] blah blah blah. Here's a big answer to [6659] all of these questions. That's pretty [6661] cool. All we need to do now is we just [6663] go Gmail. We draft. Oh, you know [6666] what? Uh, we need to grab the email, [6668] don't we? Yeah, I don't think I actually [6671] grabbed the email address of the [6673] person. Yes, I did not. So, let's [6675] actually change our prompt a little bit [6676] and let's edit it so that we actually [6678] output the email, [6679] too. So, I'm going to go back here. I'm [6682] actually go [6688] um email address [6693] um discovered or let's just go their [6700] email. Okay, there you go. That should [6704] probably be [6707] sufficient. Let's actually test this one [6709] more time. So now we should actually [6710] extract their email address as well, [6711] assuming the AI does what I what it's [6714] silly human overlord tells it to [6718] do. And now that we have the the email [6721] um address, we'll actually be able to [6722] like use that to feed into a draft. [6724] Yeah, I kind of forgot about that. So [6725] we'll go back to Gmail. I'm going to go [6728] draft create a draft credential Gmail [6731] account 3 resource draft operation [6734] create. Then I'll say [6736] re and then I'll say SOS inquiry. I'm go [6741] message and then all I'm going to do is [6743] I'll go back to my schema. Just going to [6745] drag my email body in here. Then I'm [6747] going to add an option called uh now [6751] we'll go to email and then we're [6752] actually just going to feed that puppy [6754] in there. And now we can actually test [6756] this out on three. So let's go one, two, [6759] three. So you should have three items. [6761] All of them just wrapped up. We go back [6763] to my email inbox, go down to [6766] drafts, we'll see that uh I created one [6769] for each. It looks like I created an [6771] additional one, but anyway, I'll cover [6772] that in a second. The first was this one [6774] to this lovely Pam lady. Very nice. [6777] Second was this other one to this lovely [6779] John [6781] fella. Very cool. Uh, everybody followed [6784] my email template. No issues. And then, [6786] yeah, looks like we just used one [6787] additional um [6789] email. I think the reason why we sent [6791] that additional email is because we [6792] technically outputed an item. So, I [6795] wonder if we could just not output an [6796] item. That would be one way to do [6798] [Music] [6800] it. Yeah, we could just not output the [6802] item. Or, you know, we could just add a [6805] filter like I uh was showing us how to [6807] do so [6809] before. So, if uh let's just go down [6813] here. Let's go JSON dot [6820] Let's go item [6823] three. We'll go down to [6825] [Music] [6827] JSON.relevance [6831] message.content.relevance. So basically [6833] if this is equal to true then we'll [6834] continue and then if not we won't. So we [6837] should get two, right? Yeah, there you [6839] go. We uh kept two items and now we're [6841] only going to be sending emails on the [6842] two items that passed our filter. So, [6845] just because I always like to do an end [6847] toend flow, I'm just going to discard [6849] some old drafts here, delete everything, [6850] and then run this one final [6853] time just to show you guys what all this [6855] looks like. We will use the Gmail [6857] trigger, edit the fields, split them [6859] out. I'm going to have the limit be [6860] three items just for now because I don't [6862] want to like draft a bunch of emails. [6864] Extract the titles, add a filter, and [6865] then create three drafts. Let's run this [6867] from start to finish. We're now [6869] extracting the titles. And by sorry [6871] extracting the titles I mean we are um [6874] filtering and creating an email. And [6876] then the end result is we have two [6877] drafts in our inbox which is kind of [6879] neat. And if we wanted to take this even [6881] further what we could do is we go down [6882] to Gmail and then we could add a label [6884] to this message. Just to make it [6886] abundantly clear if I select the message [6889] ID that we just created. It's going to [6891] be right over [6892] here. Uh I could just call this public [6896] relations or something. And [6899] now basically it'll just automatically [6901] apply a label to these drafts inside of [6902] my inbox that I just know that these [6904] are, you know, these are public [6905] relations inquiries basically. Um these [6908] are not, you know, other email drafts [6910] for some purpose. And that's kind of [6912] cool of a flow, but I'm actually just [6914] going to stick that right over there. [6915] And then because I'm already getting [6917] mixed up with the extract titles, I'm [6918] just going to say filter and respond to [6921] email or maybe create email body. There [6925] you go. A little bit simpler. So yeah, [6927] we used a ton of new functions here. Um, [6930] we use the split. I then use the split [6932] out. Uh, I don't actually use all of [6934] these super often. We did use the [6936] filter, which I talked about and [6937] covered. And then the limit is just [6939] basically like an internal tool that I [6940] like to use to uh make sure that I'm not [6942] screwing around with token usage or [6944] spending a ton of like executions or [6946] anything like that. Um, I think this [6948] system is a lot cleaner than that other [6949] system that I was going to build with [6950] you guys before. It's also a little bit [6952] more simple. Here I have just a ton of [6953] code unfortunately, but we'll get rid of [6955] that. We'll use this as the two [6959] templates for us. Then I'll also just [6963] make this nice and easy to see. And [6966] yeah, I hope you guys appreciated this. [6967] Um, just so that we could do a quick [6969] recap and because in my experience doing [6972] a recap of the stuff is sort of how you [6974] remember it. Um, we started off by [6976] talking a little bit about fields [6977] specifically two types of fields. There [6978] were fixed fields and then there were [6980] um, expressionbased fields. I sort of [6983] made a case for you as to why you should [6984] probably favor expressionbased fields [6986] over fixed fields wherever possible [6988] because you could do the exact same [6989] thing anyway and you also just get like [6991] a ton of code options. So I always just [6993] toggle little expression. I then showed [6994] you how all of these different field [6996] inputs even like the little toggle [6997] buttons these really are just [6999] expressions at the end of the day. You [7001] know if it's a toggle button it's true [7002] or false. If you're selecting a Google [7004] sheet or something and there's actually [7005] an ID behind it and so now you know a [7007] lot more about sort of the underlying [7009] data and the way that nad structure [7010] stuff. I then covered JSON JavaScript [7012] object notation in probably pretty [7014] excruciating detail. Hopefully that [7016] wasn't too boring. But we covered a [7017] bunch of different variable types. Just [7019] to recap them, there was a string, there [7021] was a number, there was a bool or [7023] boolean, true or false. There was an [7025] array, and then there was also another [7026] object. So you could bury JavaScript [7028] objects inside of JavaScript objects. [7030] There were key names, values. We learned [7032] a little bit about the formatting with [7034] quotes, um, as well as commas and and [7036] brackets and that sort of stuff. But the [7037] reality is if you just like stare at [7039] JSON long enough, kind of give it a good [7040] squint or two, eventually it'll start [7042] making sense. And that's why I've now [7044] changed all of the input and outputs [7046] inside of our NAN course tutorial to to [7048] favor a JSON JavaScript object just so [7050] you guys could see it and kind of get [7051] used to it. From there, we covered a [7053] little bit about how data is represented [7055] in NAN. So specifically, all data, all [7058] inputs and outputs in NAD are structured [7060] as an array of objects. So there's some [7063] top level square bracket and inside [7064] there's just a bunch of those JavaScript [7066] objects nestled in it. And if you want [7068] to reference the most previous node, [7070] then all you need to do is just use this [7072] little dollar sign JS O N syntax. If you [7075] want to reference nodes from 2, 3, 4, or [7078] nodes back, n standing for whatever [7080] number, then you would do the dollar [7082] sign, but then you'd have to like [7083] specifically reference the name of the [7085] node. No big deal. Naden actually does a [7087] lot of that selection for you. And [7088] there's usually a little drop down or [7090] toggle button that you can just click to [7091] get there. We talked about how to [7092] reference earlier fields, how to do some [7094] backtracking with like dot notation and [7096] square bracket notation. Then I also [7097] covered some common gotchas. The most [7099] common gotcha in Naden, just to be [7100] clear, is people don't understand that [7102] it is an array of objects that you're [7103] referring to. And so NAD will run once [7105] per item in the array. If you're trying [7107] to reference one item, but you're really [7109] referencing all of them, obviously [7110] you're going to get an error message. [7111] It's not going to work. Likewise, if [7113] you're trying to reference a number of [7114] items, but you only reference some [7116] subset of them, you're going to have [7117] some error, a message, and you know, [7118] you're going to get that dreadful red [7120] text that I think we all hate so much. [7121] So, understanding that everything is [7123] just an array of items and array of [7124] objects. This goes a long way towards [7126] insulating you against that. Finally, we [7127] covered some foundational notes. We [7129] started off with the HTTP request node, [7131] which allows us to basically request or [7134] do the same thing that your browser is [7135] doing when you access a website, pull [7137] all of the code, and then I also showed [7139] you guys how to do cool stuff with AI, [7141] where you take the extracted or parsed [7144] components of that node, like my [7146] leftclick website, and then turn that [7147] into some sort of AI structured data, [7149] like a summary, like some interesting [7151] tidbits about that website, maybe the [7153] contact details if you could find it. I [7154] then covered a little bit about web [7155] hooks. If you guys are familiar, if you [7157] guys remember, web hooks are just like [7158] the glue that holds so much of the [7159] internet together. I showed you guys how [7161] to send a request from one workflow and [7163] receive it in another workflow. And I [7165] also showed you guys how to use a third [7166] party platform, in this case, ClickUp, [7168] but you can really use whatever the hell [7170] you want to send a request upon some [7172] triggers. So that now I'm like [7173] connecting NAND and ClickUp with my own [7175] native integration without even [7176] necessarily having to know too much [7178] code. And then at the tail end there, I [7179] covered OpenAI and AI agent nodes. The [7183] real value of N8N in comparison to most [7185] other noode tools in addition to its [7187] ability to self-host is their AI agent [7189] functionality that just works fresh out [7190] of the box. So rest assured, we're going [7192] to be covering a lot more of that moving [7193] forward. But we built a very simple [7195] example where I essentially asked my AI [7197] agent what was going on for the day and [7199] then it pulled data from my calendar [7200] intelligently while also still being [7202] able to like talk back and forth in [7204] natural language. We covered some nodes [7205] that modify flows as well, including the [7207] if, the filter, the merge, the split [7209] into batches or bundles. We covered the [7212] split out and then finally we also [7213] covered while I was building that last [7215] example the limit. And then from there I [7217] showed you guys how to build a super [7218] simple and easy essentially email [7220] autoresponder type flow but one that [7223] does a very high leverage highv value [7225] business purpose which is parsing out [7227] defining whether a journalist inquiry is [7229] relevant to us or not than if it is [7231] actually writing out an example based [7232] off of a template. Awesome. You guys now [7234] have a solid understanding of NAND [7235] fundamentals, including how nodes [7237] connect, how data flows through [7238] workflows, and the core concepts that [7240] power more or less every automation that [7241] I'm going to build. Hopefully, you've [7242] moved from a complete beginner to [7244] somebody that now understands the NADM [7246] platform at at least somewhat a [7247] technical level. So, it's time to put [7249] those foundations to work and build our [7250] very first high-v value system. We're [7252] now going to be building an assetbased [7253] AI lead genen system. An assetbased [7256] system just means we're going to scrape [7257] prospect data. We're then going to use [7259] that to create customized lead magnets [7260] like a personalized newsletter or report [7262] and we're going to deliver them via an [7264] automated email campaign. The reason why [7266] this approach is so valuable is it [7267] generates 5 to 15% reply rates cuz [7269] you're giving value before you ask for [7271] anything. Let's dive [7274] in. So today I want to build an [7276] automated asset generator. I don't [7278] entirely know exactly where I'm going to [7280] start or how I'm going to do it, but [7282] this is a road map of my tenative [7283] thoughts. I built enough of these [7284] systems at this point to have a pretty [7286] good understanding of what I think I'm [7287] going to do, but as I've mentioned, I'm [7288] going to leave in the detours and any [7290] stumbling blocks along the way so you [7291] guys could see what an actual build [7292] process looks like. So, here is what I'm [7294] thinking is going to be the road map. [7296] And you know, in case you guys don't [7297] know, when I say asset here, I really [7298] mean like anything. You could generate [7300] like PDF slide decks, you could generate [7302] onboarding documents, you could generate [7304] newsletters. That's what we're going to [7306] be generating today. You could generate [7307] cold email sequences. Like the value of [7309] an automated asset generator is it just [7311] like gives a ton of value to somebody [7312] right off the bat. And you can also use [7314] it in your own business to generate [7315] stuff you want. Here's the mindset. So [7316] we're going to start by getting LinkedIn [7318] data. Now LinkedIn for those of you guys [7319] that don't know is what's called UGC. [7321] It's user generated content. So this is [7323] my own LinkedIn profile. All of the data [7324] on this page is data that I have written [7327] essentially most of the data. Anyway, [7328] the value here is that means that I've [7330] written most of this in my own tone of [7332] voice. So if somebody does something [7334] with it, if it uses if they use it to [7335] create an asset or something, I'm a lot [7337] more likely to find it valuable. Okay, [7339] so that's where all of this rests on. [7341] We're going to start by scraping [7342] LinkedIn data. The idea after that is, [7345] let me just skip ahead. I'm also going [7347] to scrape their company website and [7348] we're going to get the data of their [7349] website from LinkedIn. Like we're going [7350] to get the URL and stuff like that. Once [7352] we have the LinkedIn data and the [7354] website, we're going to feed this into [7355] AI and we're just going to generate a [7357] summary. Then with this summary, what [7358] we're going to do is we're going to [7359] generate a customized newsletter using [7362] that data, convert it into an HTML. Then [7365] we're going to create a Google doc with [7366] it. And then ultimately, you can do [7368] whatever you want with you. You could [7368] send it to your prospects through email. [7370] You could fax it to their address. You [7372] could print it out and literally send it [7374] to their place of business. You could do [7375] whatever you want with what I'm about to [7376] show you. That's what's really cool [7377] about it. And because cold outreach, for [7379] those of you that aren't aware, reaching [7381] out to people that haven't opted into [7382] some sort of marketing communications [7383] with you, because cold outreach is [7385] getting more and more saturated, this is [7386] a very high value way of raising the bar [7389] and making it seem as if you spent a ton [7391] of time and effort creating something [7392] valuable for your prospect before you've [7394] even talked to them, which they tend to [7395] really like. So, all of this is just in [7397] pursuit of really high reply rates on an [7401] email. And let me yeah, let me walk you [7402] through um how all that works. So yeah, [7404] we're going to use LinkedIn to be the [7406] primary data source along with the [7407] website of the prospect. So this is my [7409] own website. Then I want to combine [7410] these, pump these into Apollo. Apollo is [7413] a way that we could scrape mass lists of [7415] LinkedIn profiles. And then instead of [7417] me paying for Apollo, I'm probably going [7418] to use this Apify scraper, which allows [7420] me to scrape Apollo, which scrapes [7422] LinkedIn. This just allows me to get it [7424] for a lot cheaper. So $120 instead of [7425] whatever the heck Apollo is charging me. [7427] The end result is going to be something [7428] like this. This is a newsletter that I [7430] generated using a similar approach a [7431] while ago. Design meets real estate. the [7433] Evermore approach to bespoke living. The [7435] idea is that we created a newsletter for [7437] them called the Evermore edit. You know, [7438] we created topics. We wrote said topics [7441] and, you know, we talked about the [7442] founder of the business and the realtors [7444] and and anyway, it's just super [7445] customized. It's super perfect for them. [7447] And in our case, maybe we're like, hey, [7448] you know, I want to write you customized [7450] newsletters, super high quality. Um, you [7452] know, so I actually just went ahead and [7453] I wrote one for you. So, here it is. [7454] Okay. Hopefully everybody here's on the [7456] same page. Let's now get into actually [7458] building the system with an [7461] AD. So, the very first thing we need to [7463] do is we need to grab a LinkedIn data [7465] and we need to feed that search into a [7466] scraper. I'm going to be using Apify for [7468] it. So, what I've done is I've already [7469] assembled a giant list of people that [7471] I'm interested in working with um [7472] through Apollo. The way I did this was I [7474] added some filters up here at the very [7476] top. I wrote creative agency. Then under [7479] job titles, I wrote founder, partner, [7480] and co-founder. And then you can also [7482] add some additional filters to like [7484] constrain the location. In my case, I [7485] just wanted to get this up and running [7486] quick and dirty, so I didn't constrain [7488] the location. What we get now is we get [7489] a URL up at the top of the page. What [7491] I'm going to do is I'm going to go to my [7492] Appify scraper by Code Pioneer. I'm just [7495] going to paste in the URL and then I'm [7496] just going to click save and start. The [7498] reason why is I just want to verify that [7499] this works on Appify first before I try [7501] putting it in NAN. Okay, sweet. So, [7503] we're now done with this. If I go to the [7505] output, you'll see there's a bunch of [7506] information here from our search. So, [7508] this includes the person's location, um [7510] some email addresses, there's also names [7513] and so on and so forth. So, we basically [7515] have all of that LinkedIn data including [7517] like the title and then the industry and [7519] and so on and so forth. What I want to [7520] do now is I want to get that inside of [7522] NAND. So what I did is I just went over [7524] to their API and then I found this [7526] endpoint called run after synchronously [7527] with input and return output. What's [7529] really cool about this is in NADN. You [7531] can just copy over the curl of any API [7533] request and then you can paste it in. So [7535] that's what I'm going to do. HTTP [7536] request here. I'll go import curl. Paste [7539] it. And then what this will do now is [7541] it'll actually map all of the fields for [7543] me. So I don't actually have to do a ton [7544] of work. There are a few fields [7545] obviously I still have to put in. So [7546] bearer token over here. I see some body [7549] content type stuff. So, uh, let's sort [7551] that out. Now, actor ID, that's just [7553] going to be the URL ID up here. So, that [7556] is my actor ID. I'm just going to copy [7557] and paste that in here. And then [7560] underneath that, I see accept [7561] application JSON. Oh, authorization [7563] bearer token. In order to get that on [7565] Appify, I'm just going to open up a new [7567] Appify tab. And then I'll go right over [7570] here. API [7572] integrations. Create a new token example [7575] for N8N asset [7578] generator. And then let me see. I'll [7581] click create. So now all I do is I copy [7583] this. I go back here. And then I need to [7586] feed in one more thing. If I go back to [7588] my actor and then I go here. If I go [7592] click JSON here, I actually have access [7594] now to the the input that I fed in in [7597] JSON notation. And it looks like I'm not [7599] entirely sure, but I think in order to [7602] feed this in, I just need to feed this [7603] in that whole JSON string in somewhere [7606] here. So, I don't actually know. We're [7607] going to find out. I think body content [7610] types JSON. Specify body using JSON. I [7612] think I just paste this in. I don't know [7613] for sure. We're going to give it a try. [7615] We're doing this live. And then, yeah, I [7618] just click execute step. So, what we did [7621] a moment ago is we just verify that we [7623] can actually get the data we want from [7624] LinkedIn on Appify, right? Well, now [7626] what we want to do is we want to verify [7627] that we can execute that appy scraper [7630] inside of nana and then retrieve the [7631] data. The reason why that's important to [7633] me is because I just always like to [7634] verify like at every step that what I'm [7636] doing is directionally correct. So what [7638] I'll do is I'll just test every node one [7639] at a time until the end and then [7641] assuming that I can get this data then [7643] you know I can sort of check mark the [7645] first step in our road map. So a quick [7647] and easy way I can verify whether or not [7649] that is actually running because it [7650] looks like it's running. I haven't [7651] received an error code. I just want to [7652] verify. I can actually go back to [7653] Apollo, go to runs. You can see that [7656] there's actually a run that is currently [7657] occurring. How cool is that? So, this is [7659] actually now outputting email addresses [7661] and stuff like that, which is crazy. [7662] This is the input that I fed it. So, [7664] that looks fine to me. And yeah, you [7665] know, more or less this is now currently [7667] executing. And once it is done [7669] executing, we will hopefully receive all [7671] of the data here. Okay. So, I just [7673] pinned this and executed it. Then I [7676] renamed it as well. And just taking a [7678] peek at the output here, you see we get [7680] JSON with the first name, last name, [7682] LinkedIn. We get all the data that we [7683] need. The reason why I'm pinning this, [7685] aka I like selected it and then I [7686] pressed P. Um, you can also rightclick [7689] and and press that button as well, is [7691] just because it's going to allow me to [7692] execute future runs much faster. I don't [7695] actually have to wait that whole long [7696] process, which I think was like four or [7698] five minutes for 500 items ever again. [7700] But anyway, so moving on, we verified [7702] that we can do that first section that [7703] we want. So where's my road map? Right [7705] over here. We can get the LinkedIn data [7707] and we can feed it into a scraper appi. [7709] The next step we need to do is we need [7710] to scrape the company website, right? [7711] How am I going to do this? Let's just [7712] move this over here so it's right by my [7714] notes and I can just jump back and forth [7715] really easily. How are we going to do [7716] that? Well, a quick and easy way is [7718] obviously just using the HTTP request [7720] node in NAN and then just feeding in the [7723] website. So, if I go to website, see [7725] there is a website URL and it looks like [7727] this is the same lead that I scraped [7728] when I did this. So, the Apollo search [7731] must just be the exact same one over and [7732] over and over again. But anyway, let me [7734] paste that in. What I want to do now is [7735] I just want to like call the website [7736] with an HTTP request. If you guys are [7738] unfamiliar like what an HTTP request to [7740] a website is, is this website here, [7743] leftclick.ai, I could actually just run [7745] this independently using this by like [7748] hard coding. Okay, if I just delete all [7751] of these and then execute this one [7753] manually here, what happens when I click [7755] execute workflow is this is actually [7757] outputting all of the HTML data from my [7760] site. Now, this may not seem like it [7762] means anything to us, but check this [7763] out. growth systems for B2B companies. [7765] Let me command F growth systems. Do you [7767] guys see how the exact same thing is [7769] written both on my website and then [7771] represented inside of the code of my [7773] website too? So all of this HTML, this [7775] is just my whole website. It's just [7776] written for machines, not people. So all [7778] we need to do if you think about it [7779] logically is we just need to convert [7780] this from something that is machine [7781] readable into something that's more [7782] human readable or I guess AI readable I [7785] should say, which is a machine. The [7786] lines are blurring every day if you guys [7788] couldn't tell. The issue is um notice [7790] how like here I'm outputting 500 items. [7793] Do you guys see how it says 500 there? [7795] If I were to just run this, I'd [7796] basically have to run 500 HTTP requests [7798] until I see the final result. I don't [7800] want to do that. What I want to do is I [7801] just want to run it like one at a time. [7802] One at a time, one at a time. And then I [7804] want to see what the output is. And I [7805] want to verify that things are okay. I [7806] think a lot of beginners make this [7807] mistake. They try and run off of full [7809] data sets. Don't do that. Instead, just [7811] let's think to start like some of these [7813] aren't going to have a website, right? [7814] So, why don't we filter these and we'll [7815] just make sure that like we're only [7816] going to operate off of things that have [7818] websites. So, let's go down to website. [7820] Let's say website URL has to exist. And [7823] let's also say, you know, I don't know, [7825] maybe I only want to do this for people [7826] that have email addresses. So, email [7828] address also has to exist. And now what [7830] I want to do is now I'm going to execute [7832] this. Uh, hold on. Just going to delete [7835] this here because I only want to run [7836] this uh last one filter. Let me just [7838] execute this and let's see how many of [7840] the 500 are we actually going to get [7841] that have both websites and emails. 247. [7843] Okay. So, I'm going to pin this. And now [7844] what I want to do is I actually just [7846] want to test. So, I'm just going to use [7847] a limit node. And I always use limit [7848] nodes. And I'll just do two. The reason [7850] why I always do two is because if you do [7852] one, sometimes you can't fully figure [7854] out like array logic. So, you need to do [7855] more than one. But if I do more than [7856] one, then I'm just doing a bunch of HTTP [7858] requests unnecessarily. Okay. Now, I'm [7860] going to feed this in. And what's the [7861] output of this limit node? You know, [7862] it's the first two leads basically. [7864] Okay. So, actually, maybe we should do [7866] last two so I'm not just regenerating [7867] the same thing I showed you guys [7868] earlier. Let's do that. Let's unpin [7870] this. Let's execute this workflow. [7873] This is now going to output the last [7875] two. Okay, cool. And then I'm going to [7876] feed it into my HTB RES. And I'm just [7877] pinning every node as I run it one at a [7879] time. And this is really valuable for me [7880] because um again, it just allows me to [7882] test really quickly. So now what I want [7884] to do is I want to feed in the website [7885] URL. Just going to feed that in. Um I [7887] don't think I'm going to make any [7888] changes. I think that's probably fine. [7889] Now I'm just going to click execute [7890] workflow and let's see what we get as a [7892] result. Going to give this a click. [7895] Yeah, let's display the data. This is a [7896] fair amount of data, so it doesn't want [7898] to display it for me if it doesn't have [7899] to. But it looks like we're now scraping [7901] this website. Um, [7904] showandtell.co.cza, which is cool. So, [7906] showandell.co.ca. Let's see what it [7908] looks like. This is really clean. [7910] They're a premium content partner, Cape [7912] Town, South Africa based. Wow. Very [7915] cool. This is a fantastic example. So, [7917] I'm glad that we're scraping them. Cool. [7918] So, now that we have the data, if you [7920] think about it right now, this is an [7921] HTML format. It's really long. Do I want [7923] to load 2.2 megabytes of data every time [7924] I'm doing this? Probably not. So, what [7926] I'm thinking of doing is now that we've [7928] scraped the company website, we have to [7930] feed into AI, but it's just so big. I [7932] don't really want to spend all this [7933] money on tokens. So, what I'm thinking [7934] I'm going to do is I'm going to go [7934] markdown. And there's an HTML to [7936] markdown here. So, I'm just going to [7937] feed in the HTML. What this is going to [7939] do is you see all the tags, you know, [7941] the less than symbol, exclamation point, [7943] doc type HTML, back slash. I can [7945] actually just remove all these with this [7946] markdown node. And then it'll only [7947] output text in this format called [7949] markdown, which is a lot easier and [7950] simpler. So, this is no longer 2.2 [7952] megabytes. This is actually pretty [7954] simple. And what's cool is I think [7955] there's email addresses on this page. [7956] Yeah. So, we could actually scrape the [7958] hell out of this ourselves if we wanted [7959] to. Okay. But anyway, so now if you [7961] think about it, what is the output of [7962] this? It is a bunch of data about the [7963] specific website. It's just like this. [7965] And now we have it in a format where we [7967] can feed it into AI and have it tell us [7969] something about this website so we can [7970] customize the hell out of our outreach. [7972] So, let me just double check. How far [7974] are we down the road map? Yeah. Okay. [7976] So, it's time to feed into AI to [7977] summarize leads. So, how are we going to [7978] do that? Well, it's pretty simple. Now [7981] that we're done with all these damn HTTP [7982] requests, we just go to OpenAI and I'm [7986] going to do message a model. And first [7988] we have to do our authorization. So give [7989] this a click. What you have to do is you [7991] have to head over to the OpenAI API site [7993] and then you have to grab your API key. [7995] Now I'm not going to share my API key [7996] with you guys, but I want you to know [7997] it's really easy and ADA has awesome [7999] documentation for this. It actually [8000] shows you how to do this. You just go to [8002] the API keys page here and you see at [8004] the bottom lefthand corner of my URL [8005] says http [8008] platform.open.com/appi-keys. That's what [8010] you feed in here. You don't need to do [8011] the organization ID, at least not as the [8012] time of this recording. Once you make [8014] your connection, now you actually have [8016] access to the open AI API. So, hello, [8018] how's it going? Let's ask. I'm going to [8021] click execute step. Now, this is [8023] actually going to ask the model. Hello, [8024] how's it going? Uh, what's the issue [8028] here? I don't actually know what the [8030] issue is. Oh, sorry. We haven't picked a [8032] model. My bad. My bad. We got to pick [8033] the model first. Let's do chatb 4.1. [8035] That's the current model that I'm going [8036] to use. And now I'm going to execute the [8038] step. [8039] and we should get something should tell [8041] us hello I'm doing well hello I'm here [8043] and ready to help. So we ran this twice [8044] for two items and it gave us two [8045] different um outputs, right? So now what [8048] we have to do if you think about it [8049] logically, if we want to make this [8050] output like something that's relevant to [8052] us, we have to take all of that website [8053] data, we have to give it to AI, but we [8054] also have to give it some instructions. [8056] So what I'm going to do next is I'm [8056] going to write a a quick and simple set [8058] of instructions that you guys could use [8060] in order to have AI convert things into [8061] a format that you want. Make sure to [8063] output content as JSON. There are a [8064] million ways to do this. Um what I'm [8066] going to do is I'm going to basically [8067] say, hey, at least I think I'm going to [8069] do this. Hey, can you summarize what the [8071] website is about? give me some unique [8073] information. From there, [8075] maybe I'll combine it with the profile [8078] history as well. So, what I always do is [8080] I always start with a system prompt that [8081] says you are a helpful intelligent [8083] assistant. I just do this because I [8085] think the model ends up smarter as a [8087] result of this. Next, I do a user [8089] prompt. Now, user prompts are where you [8091] basically tell the model exactly what [8092] you want it to do. So let's say your [8094] task is to take as input a bunch of [8101] unstructured [8102] information about the client's website [8105] and linked in profile and convert it [8109] into a JavaScript object notation a JSON [8113] output. I may adjust this wording a JSON [8115] output of the [8117] following format. Let's do one called [8121] website context. [8123] Let's do one called person context. And [8126] let's do one called, I don't know, [8128] unique angles. I'll just go with unique [8130] angles for now. And what's the idea [8132] here? I just want to take this massive [8134] string of both the LinkedIn profile [8135] data, which I'll show you guys in a [8136] second, and then the website data and [8138] just turn it into something simple for [8139] me so that I could feed it into the [8141] newsletter generator, which I'll feed in [8142] after this, and then have it like do [8144] something with. Okay. So, I've also just [8145] written a bunch more instructions. So, [8147] you receive all the data. You need an [8148] unstructured string. You're ask to parse [8149] that out, turn that into the above [8150] object. uh go deep into detail for [8152] website contexts. Write at least two [8153] paragraphs for person context where use [8155] all the data available and for unique [8156] angles. Use all the website and [8157] information about the provided person to [8158] create three interesting points that we [8160] could write about in a later article. [8162] Return any new lines as back slashn. [8163] Okay, that seems pretty simple. Um what [8165] I got to do now is I obviously have to [8166] feed in the data. So I'm just going to [8168] go to my user prompt here and then I'm [8169] going to start like adding variables. So [8171] let's start with the website scrape. [8174] Website scrape is just going to be this [8175] markdown data. So, let's just do that. [8178] And then let's go personal data scrape. [8183] And then here, I'm just going to start [8184] feeding in a bunch of information from [8185] the LinkedIn profile. So, where am I [8186] going to get that? Probably from the [8187] limit node. So, I'm going to go like [8189] name here. Let's just work our way down, [8192] right? Like title. That seems pretty [8194] valuable for the AI to have. Let's do [8196] headline. So, maybe we know that we're [8197] addressing the person. Okay. And I just [8199] added a bunch more. Email, state, city, [8201] country, whatever. So, um, that should [8204] now be everything that we need in order [8205] to actually have this run. So let's [8206] execute this now and let's see what [8207] happens. Just double checking my data is [8209] the same. Let's do temperature also and [8212] let's go 0.6. I just like to have like [8215] lower temperature in general. And let's [8216] execute this. Let's see what happens [8217] now. Okay. So we're now feeding it in [8220] that data from the markdown node. It's [8222] running which is great sign. Let's go [8224] open AI. Nice. Okay. Great. And let's [8226] see what do we get. Website contact. [8228] Showand tell Creative is a premium [8229] content partner based in Cape Town, [8230] South Africa specializing in stills. The [8232] company position solves as broader [8233] impactful. Wow. This is really cool. So, [8236] it gives us all of the data. It gives us [8238] a ton of data [8239] actually. Gives us some context about [8241] the specific person. Then it gives us [8243] unique angles. This is what I was most [8244] interested in about because I want to [8245] use these in order to generate the [8246] newsletter. The impact of running a full [8248] service content production agency is [8249] solo founder. How Kevin Sawyer manages [8250] every aspect. How he does this, how he [8252] does that. Okay, cool. This seems pretty [8253] valuable. You can see we did the same [8255] for another agency called Craft and [8257] Slate. These always have such [8258] interesting names, but then again, [8259] that's creative agencies for you. Um, [8261] now let's take this data and use it to [8263] generate something. So, I'm just going [8264] to duplicate this. Paste this in. And [8266] you'll have to bear with me here. Um, my [8268] prompt [8269] engineering a little bit rusty. I [8271] haven't designed a system in a couple of [8272] weeks here. But I think what I'm going [8274] to do is I'm going to have it generate a [8275] newsletter. So, your task is to take as [8279] input information about a website and a [8287] person and then return. Let's do [8290] customize [8292] newsletter. a customized newsletter that [8296] contains maybe we'll say customized [8298] newsletter that will act as a lead [8301] magnet to get them to want to purchase [8304] my stuff. Let's just go with that. Okay, [8307] this looks pretty good to me. Now, I [8309] want to give it an example of a [8311] newsletter. So, the reason main reason I [8313] picked this example is cuz I knew it'd [8315] be easy for me. But um I used to write a [8317] newsletter back in the day called the [8319] cusp where I basically had AI helped me [8322] write this stuff way back in 2022, but [8324] it was just a whole newsletter all about [8326] like AI and automation and how AI is [8328] changing the economy and stuff like [8329] that. So what I'm going to do is I'm [8330] actually just going to copy my own [8331] newsletter format like verbatim. And I'm [8332] just going to paste it [8334] in. Let's go back here. Let's paste it [8337] in. That looks pretty good. And I'm just [8339] going to use this as like the format. [8341] I'm going to say return the entire [8342] newsletter in markdown using this JSON. [8345] And then okay cool we should now return [8346] it in title subheading and newsletter [8349] body format. I did some minor adjusting [8351] to this. Um but anyway this is what this [8353] looks like now. This is the prompt that [8355] we are now giving it. So what do we [8356] actually want to do now? We just want to [8357] feed in that object that we gave a [8358] moment ago. Website context person [8360] context unique angles. Okay. So let's [8362] delete that and let's just [8364] say website [8367] context person [8369] context and then unique angles. [8374] And then what I'm going to do is I'm [8374] just going to go expression and I'm just [8376] going to drag this in. Website context [8378] here, person context here, then unique [8381] angles here. Awesome. So now I'm [8384] actually feeding in all the data. [8385] Outputting content as JSON 0.6 again. [8387] And this is just happening cuz I [8388] duplicated this. So all the settings are [8390] going to be the same. I'm thinking we [8391] should probably rename this. So this [8392] will just be like generate website [8395] context or generate context, let's say. [8397] And then this here will be like generate [8399] newsletter. That seems smart to me. And [8401] then yeah, I have everything I need to [8402] actually just test this again. So let's [8404] click execute workflow. Let's see how it [8409] works. Execute and workflow. Cool, cool, [8412] cool. Okay, cool. Now let's take a look [8414] at the output. Content that gets [8416] remembered. The show and tell creative [8417] approach inside the solar journey of [8418] Kevin Surin and how Cape Town's boutique [8420] agency is reshaping media production. [8422] Then we have the newsletter body. Wow, [8424] this is great. Well, I actually don't [8427] know how great it is, but we're going to [8429] see in a second. Um, now the rest of [8431] what I want to do here hinges on Google [8434] Docs cuz n Google Docs is kind of hard. [8436] But to make a long story short, what I'm [8437] thinking of doing is we're going to take [8439] this output and we're going to convert [8441] it into HTML because HTML is the format [8443] that Google Docs natively uses. And then [8444] we're going to try generating a Google [8445] Doc with it. This may require a little [8446] bit of finagling with like the Google [8448] Docs API spec, but I'm confident I can [8450] make it work. I've done it before. [8451] Basically, so yeah, like the markdown [8453] stuff is cool, but I want it to be in [8455] like a sexy format like this, right? So, [8457] you can't get a sexy format like this [8459] through markdown. Unfortunately, you [8460] have to do HTML. So, what I'm going to [8461] do is I will take this and then I'm [8464] going to output another markdown [8466] converter. We'll go HTML to markdown. [8468] Now, we're going to go markdown to HTML. [8469] Feed that in. Now, this should give me [8472] just a bunch of markdown that I could [8473] use, which is what we want. Come on, [8475] little markdown node. I believe in you. [8478] Okay, where is this data? As you guys [8480] can see, I use the JSON. Okay, so here [8482] it is. It's in a data object. So H1, [8485] they even add some ids which is really [8486] interesting. Very cool. Okay. And then [8489] now now I want to do a Google Docs. So [8490] Google Docs [8492] here create a document right over here. [8496] Now I already have a Google Docs [8497] credential. If you guys don't, you just [8498] click create new credential ooth 2. Then [8501] there is one additional step you have to [8503] make you have to take which um you guys [8505] might not have already. What you have to [8507] do is you have to go to your cloud [8509] console Google account and you have to [8510] pump in the client ID and the client [8511] secret. if you've never done this before [8513] and it has awesome guides and breakdowns [8515] that will help you do that. There also a [8516] bunch of videos that other people have [8518] actually posted going through this whole [8519] process. I've already created a Google [8521] Cloud Console project, so unless I make [8522] an entirely new one for a new Workspace [8524] account, it's not going to be the [8525] cleanest. I don't really want to just [8527] make a bunch every time. But what you [8528] can do is you can create a Google Cloud [8530] Console project by logging in and then [8533] selecting a new project, adding a [8535] location, and then once you've created [8536] it, you just enable Google Docs as an [8539] API. Then you request API access and [8542] then get your little um OOTH token. Um [8545] the really cool thing about NN is they [8546] just walk you through how all this this [8547] stuff works which uh makes it [8549] significantly simpler for beginners. [8550] What I've done obviously is I've already [8552] created one. So now that I've created [8554] one, all I have to do is I have to like [8556] add some location. Then what I want to [8558] do is I just want the title to be [8560] something really simple. Let's just go [8562] for let's add the person's name. So for [8564] Kevin. So I'm gonna say hey this is for [8567] Kevin. Maybe like newsletter for Kevin. [8569] That sounds pretty cool. Okay, so um [8572] what I want to do is I now want to [8573] create these. So I'm just going to pin [8574] this previous output. I'm going to [8576] create it. And the really annoying thing [8578] that you can't do natively in Nadens's [8580] Google Docs nodes is I don't believe you [8582] can like create documents with HTML. So [8585] what we have to do is we have to split [8586] into two steps. We have to create the [8587] document first. Now we have a document [8588] called newsletter for Malcolm and [8590] newsletter for Kevin. I'm just going to [8591] pin these. And now what we have to do is [8593] we actually have to update that document [8594] with HTML. So if you've never done this [8596] before, HTTP request node and then what [8598] you have to do is under authentication [8599] go predefined credential type. All [8601] right, the credential type is going to [8603] be what you just created a moment ago. [8605] Google Docs O2 API and it'll [8607] automatically populate. Then we want to [8610] send [8611] headers. I'll go JSON. I think it's [8613] content [8615] type text HTML. I'm not entirely sure. [8618] And what we need is we need a very [8620] specific API [8621] endpoint which I think is this one here. [8624] It says upload file data. [8628] googleis.com/upload/drivev3/files upload [8630] type equals media. So I think this is [8632] the endpoint. I'm not entirely sure. [8634] We're going to give it a try in a [8635] second. The last thing I have to do is [8636] go patch. Then we got to send the [8638] body. We're just going to go raw and [8641] then text HTML probably. Then under body [8645] we're going to feed in I guess the HTML [8647] that we just generated which will be [8649] here. Oh, okay. Right over here. And I [8652] think this is probably it. I'm not [8654] entirely sure, but let's just give it a [8655] go. Screw it. Okay, so I got the data. [8658] Don't know if this is right. So, what am [8660] I going to [8661] do? I'll just go Google Docs and see if [8663] there's newsletter. Oh, there is. So, [8665] let's watch the one for Kevin. Ah, nice. [8667] And now we have our newsletter. [8668] Beautiful. Okay, let's actually read [8670] some of this. Welcome to the insiders [8671] lens. That's what we're calling the [8673] newsletter. A fresh look at how [8674] impactful content is made and the people [8675] behind the camera are redefining what it [8676] means to be seen and remembered. In this [8678] issue, running a full-ervice content [8680] agency as a solo founder, Kevin's [8681] Playbook: The Art and Science of [8683] Unforgettable Content and Navigating the [8684] South African Media Scene. Meet Kevin, [8686] the founder and driving force behind [8688] Show and Tell Creative based in Cape [8689] Town. Kevin wears every hat. Creative, [8691] director, producer, liaison, and [8693] post-production specialist. Do you guys [8694] know notice how like I knew none of this [8696] in generating the newsletter. None of [8698] this data was known to me. We just [8699] pumped it all into the system. Pumped [8701] way too much data into the system, I [8702] should say, and then just let AI figure [8704] it all out. And now AI actually has all [8706] this information. like the fact that [8707] Kevin is a creative director, producer, [8709] client leazison, post-production [8710] specialist, end to end ownership, right? [8713] Um, you know, you could see this being [8714] pretty valuable as like an internal [8716] newsletter. We even have like the email [8717] address. We have everything. So, I mean, [8719] you know, obviously some ways you can [8721] make this sexier. We could add some [8723] spacing. We could add some more, I don't [8726] know, we could add images. We could add [8727] links here. As you can see, it already [8728] hyperl in an email. But, um, you can [8730] take this into a million different [8731] directions. My goal was just to show you [8733] guys how simple it is to get up and [8735] running with an actual asset generator. [8737] Okay, so what I want to do now is yeah, [8739] like if you wanted this to run [8740] completely autonomously, it'd probably [8742] be difficult without adding some [8743] weights. So you see this like limit node [8745] here. We're just doing two at a time. [8747] What you can do instead just to make it [8749] like run kind of a lot more autonomously [8751] is you use a loop over items node and [8754] you just set the batch size in like [8756] this. The replace me loop. This isn't [8759] going to be [8760] done. What a loop and batches does is [8762] actually allows you to run instead of [8764] like right now we're running kind of [8765] like all of these simultaneously. What [8767] the loop and batches node is is going to [8768] do is just going to run like one at a [8770] time and then you could add like a [8771] weight. I don't know, let's say you do [8773] this uh and then for every person you [8775] wait like 5 seconds and then you loop [8776] back. This is a pretty simple and easy [8778] way that I've seen people get around [8779] rate limits and and whatnot. So maybe [8781] I'm going to add that in. The thing is [8782] once you're done obviously then um you [8785] know you would attach this top route. [8787] So, I'm just not going to attach [8788] anything in the top route and I'm just [8789] going to use the loop and batches node [8790] to like give me some peace of mind. Then [8792] I'm going to increase the limit here to [8793] let's say 10 [8795] items. Going to unpin this. And then I [8798] think we can probably just execute the [8800] workflow. No. Yeah, it looks good. And [8802] now we're waiting and we're just going [8803] to do the same thing over and over and [8804] over and over again. Oh, I think I'm [8806] realizing now I've just pinned all [8808] these. So, it's just generating the same [8809] thing one more time. Let's just undo [8810] this. Uh, unpin. We're going to have a [8814] bunch of data issues because I don't [8815] think it's actually been filled [8817] in. Okay, there we go. Now it's actually [8819] generating the context. And notice how [8821] it's going to do two API calls. It's [8823] going to do, sorry, it's going to do a [8824] couple API calls, but two API calls to [8825] open AI. This one here, this one here. [8827] Then we're going to do an API call here [8829] to the website. Well, I guess this is [8831] just an HTTP request. And then two [8833] Google Docs API calls. It's going to be [8835] two to [8837] OpenAI, two to Google Docs, and then [8840] we're going to wait 5 seconds. And I [8842] think the 5-second wait is going to give [8844] us enough time to like never have to [8846] worry about hitting rate limits. But [8847] obviously it depends on like the the [8848] frequency that you hit and also your [8850] tier. And this one you should be you [8852] should be totally fine cuz just an HTTP [8854] request. And then yeah, we're just going [8855] to cycle over and over and over again. [8857] Wait 5 seconds and just do it until the [8858] end of time. You can increase the batch [8860] size however you want. I've just done [8861] one here, but you could do two. And then [8863] yeah, let's see what this next one was. [8864] Newsletter for Adam. Let's just go back [8867] to my other account. [8872] Let's see this one. The bright age [8874] advantage creative campaigns, measurable [8876] results inside the agency where data [8878] meets design and clients come first. [8880] Now, I mean like if I were to actually [8881] make one of these things, as in actually [8884] send this to clients, I would probably [8886] ask the model to do this in slightly [8888] less of a syopantic tone. Like the way [8890] that it's written right now is sort of [8891] like, hey, look how great our agency is. [8893] Uh, you know, obviously it depends on [8895] the agency. There are a lot of like big [8896] PR companies that actually want to write [8897] in a way where it's like hey here's [8899] what's what's going on at you know [8901] Bright Age dispatch or something like [8903] that like here's Bright Age dispatch or [8905] weekly newsletter talking about what our [8906] company's up to. In my case you know I I [8908] think that it's it's better to write a [8910] newsletter just like hey here's a bunch [8911] offormational value that you get from [8913] people and know how to do the thing. But [8915] you know if you wanted to adjust that [8916] you would just adjust the prompt that we [8917] used right and then if you wanted to [8919] change like the output format. So maybe [8920] instead of like a Google doc newsletter [8922] you did some sort of like slide deck or [8924] something. Well, you know, instead of [8926] doing the Google Doc generation, what do [8927] you do instead? You just do the Google [8928] Slides generation. You create a template [8930] with variables in it and then just like [8932] have it automatically generate that. I [8933] basically tried to take as simple as an [8935] approach as humanly possible here with [8937] the website context and the person [8939] context. But I want you guys to know you [8940] can scale this up to whatever the hell [8941] you could do. Website context, company [8943] context, lead deal context, person [8947] context, you know, boss context, uh, [8949] subordinate context. You could get so [8951] much information about anybody that you [8953] want inside of the company using this [8954] sort of approach and then weave it all [8956] together into a huge thing. Hell, maybe [8958] you're generating or charts. I don't [8959] know. Okay, so hopefully everything here [8961] I've said makes sense. Hopefully you [8962] guys see how this works. I'm obviously [8964] going to be including the blueprint or I [8965] guess NAN template down below so you [8966] guys have that as well. But yeah, uh [8968] really had it fun putting the system [8969] together for you and uh looking forward [8971] to seeing all the cool things that you [8972] guys generate with this as well. What [8974] we're going to be doing next is we're [8974] going to be building an AI proposal [8976] generation system that creates [8977] professional proposals on demand during [8979] sales calls. This system takes basic [8981] client information from a form. Then [8983] we're going to generate fully customized [8984] proposals with problem statements, [8986] solutions, timelines, and pricing. It's [8988] all going to be in real time and it's [8989] all going to seem very personalized. A [8991] automation agencies typically charge [8992] $1,500 to $5,000 for this system because [8995] it dramatically improves close rates and [8996] it also makes them look incredibly [8997] professional. Let's dive in. So from a [8999] bird's eye view, system is going to look [9002] like this. We're going to start by [9005] filling out a form. Okay, this is going [9007] to be called our trigger. Obviously, I'm [9010] doing this just on a whiteboard here [9011] because I want to be able to, you know, [9013] kind of express my thoughts a little bit [9014] better, play around with some ideas. I'm [9016] going to be building this with you guys [9017] as if I was a builder, not necessarily a [9019] teacher. So, I'm going to be showing you [9020] guys the various detours that I might go [9022] down. I'll show you guys my own thought [9024] process as I put a system like this [9025] together. You know, really the emphasis [9026] of this channel is obviously learning by [9028] doing. So, that's what I want to do [9029] here. But, we're going to start with [9029] this form fill trigger. From there, [9031] we're going to use AI to generate JSON. [9036] If you guys remember, JSON stands for [9038] JavaScript object notation. These JSON [9041] fields are going to be there going to be [9042] a lot of these JSON fields. Okay, but [9044] just to give you guys a quick example [9046] what this might look like, it might look [9047] like proposal title. Okay, and we'd [9049] obviously use this to fill in the [9050] proposal title segment of our proposal [9052] template. We might have, I don't know, [9054] problem statement. [9056] You know, I'm using camel case here, [9058] hence why the second word in a variable [9061] name is always capitalized. Feel free to [9062] call them whatever the hell you want. [9063] We'll do stuff like cost. You know, we [9065] might need to do some really quick [9066] formatting. AI is just a quick and easy [9068] way to like add commas in the right [9069] place, dollar signs, that sort of stuff. [9071] And then we might do things like [9073] timeline. And I'll show you kind of how [9075] all this works in a moment. But the [9076] important thing that I'm putting across [9078] from you is we're going to grab data [9079] from a form, but that's going to be sort [9081] of a simple like a dumb form. And what [9083] we're going to do is it's AI that's [9085] going to convert this simple dumb data [9086] into this super hyperpersonalized stuff [9088] that that makes it seem as if you wrote [9090] it yourself, you know, and then sent it [9091] within a few seconds. So that's really [9093] where the value is, and that's what I'm [9094] going to show you guys how to do. After [9095] that, we're going to do API calls or [9098] built-in nodes, you know, whatever it [9101] ends up being. And I'll show you how to [9103] do this with slides to start. And then [9105] afterwards, I'll show you how to do so [9106] using a platform called Tandoc, which I [9108] like to use for basically every business [9110] that I work with. It's the business [9111] proposal platform that I recommend [9112] anytime I start doing consulting with a [9114] new company or automation for a new [9115] company. And the value of me showing you [9116] how to do this is I want to give [9117] everybody here a free option to do this [9119] system. But I also want to show you guys [9120] if you guys just, you know, pour [9121] gasoline on it, what the system can look [9123] like. Panadoc's great because you can [9124] actually send like an invoice alongside [9126] your document, which is just super [9128] valuable. You know, you cut down like [9129] three or four steps of proposal, [9131] agreement, invoice, right? All that [9134] bureaucratic jumble you can cut down to [9136] just one where you send the proposal, [9137] which includes a built-in agreement and [9138] includes a built-in invoice. And then [9140] finally, we're going to weave it [9141] together with, you know, NAD. And I [9143] mean, I'm going to be doing all the [9143] building in NAN here. Uh, let me just [9145] show you guys where I'm at right here. I [9147] was just verifying that some of these [9148] API endpoints connected and worked. But [9150] yeah, let's uh let's get started. So, [9152] I'm just going to call this thing AI [9153] proposal generator system. I've done [9156] this build multiple times across various [9158] uh noode platforms. Like I did this same [9160] build in make.com for people here that [9162] have been with me since the uh the [9163] make.com days. This is a super high-rise [9165] system, but I want to impress upon you [9167] right now that it's not necessarily like [9168] a complicated system. You know, one big [9170] trend I see a lot of people do on [9171] YouTube nowadays is they'll they'll put [9172] together these [9174] extraordinarily complex looking things. [9176] Okay? Um, you know, like their system [9178] will will kind of look like this. [9180] There'll be like some start node here [9181] and then maybe there'll be like some AI [9183] agent node and then there'll be like 5 [9185] million sub aents and every one of those [9188] sub agents will call like another 5 [9190] million sub sub aents and so on and so [9193] on and so forth until a meteor comes and [9195] and obliterates us for the second time. [9196] These systems, you know, they look [9198] really pretty, but I'll be real, they [9199] don't actually most the time drive a [9201] business outcome because they're a [9202] little too flexible. Most of the time if [9204] you want to drive money using no code [9206] platforms, you have to be a little bit [9207] more rigid. And this is uh at least in [9209] my experience the the perfect mixture of [9211] the two. Okay. So for now I'm just going [9213] to add a manual trigger node. And we're [9215] just doing that because obviously we [9216] want to be able to test this. I'm just [9218] going to call this test. Kind of a [9220] couple options here. I'm going to start [9221] with the Google Slides approach. But you [9223] know we'll quickly segue into Panda do. [9225] Let me give you guys a quick example of [9226] what like a good Google Slides template [9229] might be. There's this one over here [9230] just called your big idea made to stick. [9232] So I'm just going to take a quick peek [9233] at that. And basically what I'm going to [9234] do is I'm just going to touch up a [9236] template like this. probably this exact [9237] one to be honest. Make a few changes to [9239] it. And then what I'm going to do is I'm [9240] going to replace this stuff with [9242] variables. If we jump into Google [9244] Slides, there's this one node called [9245] replace text in a presentation. So we're [9247] actually going to use that to like [9248] replace the various text fields. And so [9250] we want them to be very unique. I'm just [9251] going to wrap them in these double [9252] quotes which we're all used to for JSON [9254] formatting for convenience purposes. And [9255] these are the variables I'm going to be [9256] replacing with text. So yeah, you know, [9258] I have the proposal template over here. [9260] Let me touch this up really quickly and [9261] then I'll show you guys basically my ID [9262] and what this is going to look like. [9264] Okay, great. Just touch this up. give [9265] you guys an example of what a proposal [9266] like this might look like. So you can [9268] see they're pretty high quality. They [9269] look pretty sexy. I wrote one for my own [9271] content writing copy on Second Copy. So [9272] this is a hypothetical proposal for a [9274] lead genen system for one second copy. [9276] As you can see, we're going to customize [9277] the hell out of it. All of this is going [9278] to be AI generated. There's going to be [9279] nothing here that's human written aside [9281] from just some templated bits. I'll show [9282] you in a second, but lead genen system [9283] for 1 second copy is simple, scalable [9285] lead generation system built to help [9286] grow your content efforts and connect [9287] you with the right people. The problem [9289] right now, 1 second copy is struggling [9290] with an inability to generate qualified [9292] leads. The majority of our new clients [9294] are referral-based, which while always [9295] nice to have, is not scalable, nor is it [9296] reliable. Building an alternative [9298] strategy, one that allows you to take [9299] leads from cold to close, is vital to [9301] the health longevity of the company, and [9302] it's what we're going to help you with. [9304] The solution, after thinking deeply on [9305] things, here's what we've come up with. [9307] Number one, cold outbound lead genen. [9309] We'll put in place a robust cold email [9310] based system for you based on best [9312] practices. Let me just change that for [9314] you using best practices. Client [9316] reactivation system will build a simple [9317] but high ROI reactivation system to let [9319] you extract value from pre-existing [9320] clients. Best-in-class sales training [9322] will train your team with world-class [9323] setting and closing mechanisms. This is [9325] pretty similar, honestly, to a proposal [9327] that I would send when I'm selling cold [9328] email. Obviously, I do it in Panda [9330] because I can collect payment. But yeah, [9331] I'm not going to touch on everything for [9333] you. Just note that there's a scope [9334] section where we discuss specifically [9336] what the client's going to get. There's [9337] a timeline section over here where they [9338] could actually see the progress of the [9340] project. These are all going to be AI [9341] generated. And there's even like a [9343] little cost section over here as well as [9344] like a little thank you page and, you [9346] know, next steps, instructions, [9347] kickoffs, and so on so forth. So, what [9349] if I told you um by the end of this [9350] video, we'll be able to generate this [9351] whole system in like 5 seconds. We'll [9353] fill out a quick form. Form's going to [9355] include, you know, maybe 30 seconds of [9356] questions, a couple bullet points, then [9358] at the end of it, we're going to have [9359] this whole thing basically good to go. [9360] The value here is you could literally [9362] whip up a proposal while you're on the [9364] phone with somebody. And before you're [9366] even done the call, you can send them [9367] the proposal. It'll look [9369] extraordinarily smooth and sleek and [9372] really high-end. And this is just, you [9373] know, it's it's a great closing [9374] mechanism, but moreover, it's just a [9376] great way to learn an 8N, I'd say. So [9378] this is what it looks like actually [9379] instantiated. This is what it looks like [9381] when we don't. As you see, I've used a [9382] bunch of variables here like proposal [9384] title, description name, one paragraph [9386] problem summary, solution heading one, [9388] solution heading two, solution heading [9389] three, short scope title one, short [9392] scope title 2, short scope title 3. [9394] Basically, what we're going to have to [9395] do is we're going to have to replace all [9396] these. Okay? And I just realized this is [9398] 2024, uh, I don't know, 2014 here. I'm [9400] just going to go 2025 for simplicity. [9402] But, you know, we're basically just [9403] going to have to replace everything [9404] within these little double brackets. And [9405] I'm using double brackets here cuz these [9407] are pretty unique, right? This is that [9408] Google Slides node from a moment ago. If [9410] we wanted to replace text in one of [9412] these, what's the likelihood we'd run [9413] into what's called a collision where [9415] we're replacing text in a variable that [9417] we didn't want? Pretty dang low, right? [9419] Okay, so here's the example proposal. [9420] This is what I'm going to be using. And [9421] let me just change the name to make it [9423] even more immediately obvious. Let's [9425] call it example proposal template. And [9426] let me just zoom out here and make sure [9428] we're on the same page. What I'm going [9429] to do is I'm going to just call this [9431] replace text. And you can see it's [9434] already called replace text. But I [9435] personally like to do this whenever I [9437] add a new module whenever I'm actually [9439] doing a live build because it reminds me [9440] okay like what is the flow? What is the [9442] sequence here? Otherwise I end up with [9444] 30 or 40 nodes I should say. That's the [9446] terminology and then you know like it's [9449] Google slides one, Google slides 2, [9450] Google slides 3. It just gets really [9452] annoying and complicated. So the first [9454] thing we got to do is we got to connect [9455] our Google Slides account. So I'm going [9456] to head over to create new credential. [9457] It's going to open up OOTH redirect URL [9459] in my case because I'm using the cloud [9461] hosted offering of Naden. But if you're [9463] unsure of how to do this, just open the [9465] docs. They're going to open a page over [9466] here and then go down to slides. Just [9469] command F finding it. Basically, what [9472] you have to do is you have to create a [9474] Google Cloud Console account. Go to API [9476] and services library and then you have [9478] to copy and paste like a like a like a [9480] scope code or something. So, I'm just [9482] going to go over to my other email [9485] address over here. And basically, in [9488] order to do this, I actually need to go [9489] and I need to create a new project. I'm [9490] going to create a new project here. I'm [9492] going to call this NAN. Let's just call [9494] it YouTube. I'll create. And as you can [9497] see, I already have some OOTH 2 client [9499] IDs for my new project. What I'm going [9500] to have to do is I'm going to have to [9501] create new credentials. I believe it's a [9503] web application at least as of the time [9505] of this writing. Call it NN for YouTube. [9509] What we're going to have to do is you [9510] see where it says authorized redirect [9511] URIs and stuff. We're going to have to [9513] fill that in with information from NAN. [9515] So you see it says OOTH redirect URL. So [9518] we're going to go down here and then [9519] I'll go authorized redirect URIs. Paste [9521] that in. And then we got to click on [9522] that button. Okay, great. So now we have [9525] OOTH uh NN for YouTube, I should say. So [9528] what do we have here? We have a client [9529] ID. We have a client secret. So I'm [9530] going to copy this. I'm going go back [9532] and then paste it where it says client [9534] ID. Then client secret. I'm going to [9536] copy that. paste it where it says client [9538] secret. Now it'll ask me to sign in with [9540] Google. So I'm just going to open up a [9542] new little tab here. We'll allow NAN to [9545] do all this fun [9547] stuff. And the window can now be closed. [9549] Beautiful. We are now connected. I'm [9551] just going to change this to YouTube so [9553] that I know later when I'm building, [9554] hey, this is a this is a YouTube [9556] credential. And voila, we are now [9558] connected. We're basically good to go. [9559] So the next step is we need to feed in [9560] what's called the presentation ID. The [9562] presentation ID in Google Slides is [9564] always just going to be this long string [9565] after back slash D slash and then before [9568] slashedit. So I'm just going to double [9570] click on this, copy it, then paste it in [9572] here. Okay, now I just want to test [9575] anytime I'm building a new flow, right? [9577] Just thinking out loud here. I always [9579] want to test and make sure that the node [9581] that I am operating on does what I [9583] expect it to do. So I expect this node [9585] to replace some text. But why don't I [9587] why don't I actually be sure? There's a [9589] match case button, page names or ids [9591] button, replace text button. I don't [9593] actually know how any of this works [9594] hypothetically. So, why don't I just try [9596] feeding in one of these variables. [9598] Clicking on this button and then uh I [9600] don't know, replacing it with [9601] something. Let's click test [9604] step. And it looks like something [9606] happened. If I go back to my example [9607] proposal, you did I change anything? No, [9610] it doesn't look like it. So, uh you know [9612] what what happened here basically? Well, [9614] clearly there's some sort of gap between [9616] what I want to do and then what [9617] ultimately ended up occurring. So, let [9619] me refresh this puppy. Um, I don't [9623] actually know why that didn't happen. [9624] So, I'm actually going to do a little [9625] bit of debugging right now. Uh, this [9627] should just say hey. Oh, actually, oh, [9630] my bad. I've actually mixed these two [9631] up. Replace text should go over here. [9634] And then this should be hey. Okay, [9635] great. Let's test this step. Let's head [9638] back over here. Okay. Well, voila. Looks [9640] like I figured out the problem. Um, as [9643] you guys could see, you know, any buddy [9645] that tries to build things on a no code [9647] tool will inevitably run into issues. [9648] What's important is that you uh I don't [9651] know, you you maintain a good attitude. [9653] So, it seems pretty simple. We have like [9655] a pretty good pattern here. All I'm [9656] going to be doing is I'm going to be [9657] pasting in the variables and then I'm [9658] going to be replacing the text, right? [9660] Cool. So, I've sort of verified now that [9662] the main function of my flow, which is [9663] the text replacement, that works. So, in [9666] my head now, I'm like, okay, let's [9667] actually work backward. Now that I've [9668] verified I can do the thing at the end, [9669] which is the important thing. I can like [9671] create a template. Logically, the next [9673] thing I do working backwards is I have [9674] to generate all of the AI stuff, right? [9676] So, that's sort of what I'm going to do [9678] in the middle section. So, what I'm [9679] going to do first is I'm going to look [9680] up uh open AI and then the specific node [9684] I'm going to want is just the message a [9688] model under text actions. Now, under [9690] credential, if you haven't connected a [9691] credential before, you have to click [9692] create new credential. Then, you have to [9694] go over to open AI's um API. You need to [9699] create an account if you haven't already [9700] done so. But you're going to have to go [9701] over to your OpenAI account, create an [9703] account, open your API keys page, create [9706] a new secret key, and you're going to [9708] have to add two things. You're going to [9710] have to add what's called a [9712] uh well, we're going to have to add a [9713] name. So, I already have YouTube, but [9715] I'm just going to go YouTube nad and [9717] we'll just go Feb 4. It's important for [9719] me to show you guys how to actually [9720] create these keys, right? And then we [9722] just copy this. We head over here back [9725] to API key. Paste that in. And you don't [9727] need to paste in the organization I ad [9728] anymore. You you used to have to, but [9730] you no longer have to. Just going to [9732] call this YouTube Feb 4. Save [9734] that. And then voila. We now have our [9737] second connection. Open it. The resource [9739] we're going to be asking for is text. [9740] Operation is going to be message model. [9742] The model we're going to have to choose. [9743] My recommendation for you is at the time [9744] of this recording would be GPT40. Um [9747] February the 4th, 2025. This just [9749] happens to be like the best combination [9751] of cost effectiveness and then quality. [9753] If you use something dumber than this, I [9754] find the quality of the writing will not [9755] be as anywhere near as good. Okay, now [9758] let's just kind of take a couple steps [9759] back here. Um, what I wanted to do is I [9761] wanted to do basically this, but [9764] obviously we're going to have to like, [9765] you know, we're going to have to feed it [9766] some information how to do this, right? [9768] So, keep in mind I haven't actually [9770] created the form that I'm going to be [9771] filling out yet, but I want it to be [9773] able to generate a bunch of this this [9775] text. I want it to do so with like my [9777] tone of voice and so on and so forth. [9778] You know, logically, the simplest way [9781] that I can get it to produce the stuff [9782] that I want it to is by giving it an [9784] example of me producing exactly what it [9786] is that I want it to. And because I had [9788] the foresight to actually write out a [9790] flow proposal, I actually have all of [9791] the data that I want in order to train [9793] this model or, you know, in context [9795] train it's called. Um, which is where [9796] you just provide a bunch of examples to [9798] it. Okay. So, basically what I'm going [9800] to do is I'm going to use I'm going to [9802] have it output stuff in JSON. I'm going [9803] to use this as the variable name and [9805] then I'll just use this as the value in [9806] a training run and then I'll just ask it [9808] to do it again. And uh yeah, we're going [9810] to build the prompt that way uh pretty [9812] intelligently. And then at the end, you [9813] know, instead of it being super variable [9815] and like I don't know, having its own [9817] opinions on stuff and answering us with [9819] like I'd love to help you, it's not [9820] going to be like an agent per se. What [9823] this model is going to be is it's going [9824] to be almost like an API endpoint that [9826] we call or some service that we request [9829] and it's just going to send us back a [9830] beautifully formatted proposal or the [9832] data for a beautifully formatted [9833] proposal. So let me show you guys how to [9835] actually do that in practice. Um first [9837] thing we're going to want to do is we're [9838] going to want to create a system prompt. [9839] So I'll say you are a helpful [9841] intelligent writing assistant. This is [9843] just how the the model identifies for [9844] the most part. I'm going to want to [9846] output the content as JSON and click add [9848] message. And next up we're going to want [9850] to add a user prompt. Now, the user [9852] prompt is basically we just say, "Hey, [9854] here's what I want you to do." Okay? And [9857] that's all that the first user prompt [9859] does. What we do after is we add a [9861] second user prompt where we actually [9862] give it an example of one input. Then we [9864] have an assistant prompt come and give [9866] us an example of one output. And then [9868] finally, we actually feed it in our real [9870] live data and we actually ask it to like [9872] create something for us. So, let me show [9874] you guys what this looks like in [9875] practice. I haven't pre-written this or [9877] anything. I'm just going to show you [9878] exactly how I would write it if I were [9879] in the situation. And the first thing I [9880] want to do is I just want to give it the [9882] instructions. So your task is to [9883] generate a [9886] proposal using input data from a form. [9889] This proposal should be highly [9892] customized to the [9895] prospect considering we're going to be [9898] sending [9901] prospects. We go highly customized, [9904] specific, and high quality. Considering [9906] we're going to be sending it immediately [9909] after you are done, the proposal [9912] template we're using has many fields. [9915] You must return these fields in one JSON [9920] object. Use this format. Okay. Now, I'm [9923] going to give it a big list of all of [9925] the fields that I want. So, the first [9926] one is proposal title. So, let's go back [9928] here. Let's go proposal. [9931] Oops. We'll go proposal title. [9936] The next one up is going to be a [9938] description name. So I'll go description [9941] name. And again, this is exactly what I [9943] would do if I were actually building [9944] this out. The next would be one [9946] paragraph problem summary. One paragraph [9949] problem summary. Solution heading two, [9952] we go like this. Solution description [9953] two, we go like this. And we'll also do [9955] milestone description one. So milestone [9957] description one. Okay. So we now have [9960] all of the fields in our JSON template. [9962] Beautiful. We've given it quite a lot. [9965] So, just to make my life a little bit [9966] simpler, I'm just going to go over to [9968] jasonformmatterater.org, paste this in, [9970] format this. This way, it's just going [9971] to be a lot easier for me to keep track [9972] of. And then paste it like with this [9974] nice new line format here. The value in [9977] this is now um I don't know, it just [9978] it's it's a lot simpler for me to see at [9980] a glance. It's a lot more maintainable. [9982] Um and and yeah, the next thing I'm [9984] always doing or I started always doing [9986] about six months ago is I started just [9988] providing it a list of rules. So, use a [9990] Spartan casual tone of voice. [9993] I will say [9996] um yeah, I mean that's pretty much [9998] it. Use a Spartan casual tone of voice. [10002] Be to the [10004] point and professional, but professional [10007] you're [10009] writing. Assume you're writing to a [10013] sophisticated audience. There we go. [10016] Okay, great. So, this is these are going [10018] to be my instructions. Your task is to [10019] generate a proposal using input data [10021] from a form. This proposal should be [10022] highly customized, specific, and high [10024] quality. Considering we're going to be [10025] sending it immediately after you're [10026] done. Proposal template we're using is [10028] many fields. You must return these [10029] fields in one JS object. Use this [10032] format. This looks very clean. Oh, you [10036] I'm finally going to say ensure that all [10038] fields are filled out. Do not miss a [10042] field or leave [10044] any variables empty. Cool. So, that is [10048] our main user prompt. What we're going [10050] to do now is we're going to feed in an [10051] example of the form data and then feed [10053] in an example of the output. So I'm [10055] actually lucky I already have an example [10057] of the output. If you think about it, [10059] the output [10060] is over [10064] here. And then I just need to go back [10066] in. I need to copy and paste all the [10068] output from the real proposal. So I'm [10070] just going to do that really quickly. [10071] Okay, just gave it a quick example of [10073] all of the data from that finished [10075] product. And now we just have to kind of [10076] think a little bit and figure out what [10078] sort of fields we want on our form. Uh [10080] because the way that this is going to [10082] work is we're going to trigger this [10083] based off of a form um input, right? I'm [10086] just going to use an NAND form for now, [10088] but you can use really any form that has [10089] a web hook. But if you think about it, [10091] like in order to get this information, [10092] in order to you know um and I'm always [10094] starting with the end result here. I [10095] always start with the form and I figure [10096] out exactly what information, sorry, I [10098] always start with the proposal and I [10099] figure out what information I need. I'm [10101] moving backwards from that because I [10103] care more about what the customer sees [10104] than anything else. That's what a lot of [10105] people I think sort of mess up. They [10108] start with like the data they think [10109] would be nice to have and they're like, [10110] "Okay, what can I do with this data?" [10112] It's like, "No, no, don't do that. Start [10114] with the end product, the thing that [10115] like you know is going to make a [10116] customer want to buy from you and then [10117] work your way backward from that and [10118] then ask yourself, okay, what do I need [10119] to ask the customer?" So, uh, here's [10122] some things that I need to ask the [10123] customer. Obviously, I need another [10124] company name, right? Like, duh. So, I'm [10126] going to go company name. Let me see [10130] what other information do we need. we [10131] need like a project description, but [10133] probably the simplest way to do it is [10135] with a problem and then a [10138] solution. So, what I'm actually going to [10140] do is I'm going to have the form have [10143] like a problem statement where basically [10144] it's like, "Hey, so what's the problem [10145] they're suffering from?" "Hey, so what [10146] are the solutions you're going to [10147] pitch?" And then we'll just go bullet [10149] points. Cold email lead genen client [10150] reactivation system, best-in-class sales [10152] training, [10153] easy. Okay? Like, what sort of like line [10155] item scope are we talking? [10159] and then you know like how soon [10162] basically and then it's just going to [10164] take the date and then work this out and [10166] then we'll also have like a little cost [10168] and I'll just use cost as like a string [10169] for now but you know feel free to do it [10171] as a number if you have some formatting [10172] requirements so this is the data that [10174] we're going to be feeding in with the [10174] form input okay so we're going to be [10176] feeding the company name problem the [10177] solution the scope how soon and the cost [10180] so the example as we see let's just go [10182] deposit cost and we can just multiply [10183] that by two to get the total cost we'll [10185] go 15 that multiplied by two is what [10188] 3,69 90 something like that. How soon? [10190] Well, let's see. What did I put as my [10192] example here for my training? Uh, [10193] February the 8th to April the 1st, 2025. [10196] So, it's two months. Okay. So, we'll go [10198] two months. And I'm going to write in [10200] lowercase and I'm not going to use [10202] formatting and be very dumb and simple [10203] because I want to mirror what I think I [10206] and the sales team that is going to be [10207] using this form is going to use. What's [10210] the scope? I'll show you exactly how I [10211] do this. [10213] 1k per day cold [10215] email [10218] infra, 30k [10221] leads, and then four [10224] weekly Zoom sessions for sales training. [10228] That's what they're going to get. As I'm [10230] sure you guys can imagine, this is [10231] totally something that you could just [10233] really quickly scribble as notes during [10235] a call, right? Prospect says something, [10237] you're like, "Okay, yeah, we're going to [10238] get this done." And you know, I mean, [10240] the how long did this take to do? This [10241] is like what 50 characters or something [10243] like that. You could realistically type [10244] that in like 10 seconds while you're [10246] talking to the customer. Um from there, [10249] let's think about the solution. So [10250] solution uh cold email legion [10255] system, client reactivation [10258] system, and best-in-class sales training [10262] for closing. And then the problem they [10264] suffer [10266] from, they can't generate leads. [10268] Everything is referral-based right now. [10270] Cool. done. So, this is the input that [10273] I'm going to be feeding in the model. [10275] And then I'm going to say, hey, if I [10276] were to feed you in an input like this, [10278] I want you to feed me an output that [10279] looks kind of like this. Okay, now that [10281] we have that relationship in place, what [10283] that means is I can feed in an an actual [10286] like real um piece of data. And I'll [10289] fill all these variables in later. Um, [10291] but uh well, I guess I'm going to fill [10293] them in right now. I'll fill them in [10295] right now with like an example uh that's [10297] a little bit different. So instead of [10298] they can't generate leads, let's say [10300] they're struggling making YouTube [10303] videos, everything is [10305] really time inensive right now, mostly [10308] because they don't have scripts [10311] solution. Let's do like AI script [10314] system. [10316] AI script writing system scrapes um [10322] competitor YouTube vids for ideas and [10324] rephrases best performing [10327] titles then writes [10330] outlines the scope um we're going to get [10334] a form you can fill out to [10337] generate form you can fill out with [10339] competitors that adds them to a [10343] DB once per day DB is scraped [10347] And you get um however many people are [10351] in the [10352] sheet times however many people posted [10357] videos worth of [10362] outlines. Max, let's just say max uh 200 [10365] per [10368] month. How soon? Let's say two weeks. [10371] And let me make the deposit cost [10374] $3,525. Okay, so now I have everything [10377] that I need to actually test this out on [10379] my little example here. And I'll, you [10380] know, I'm just using this as a training [10382] example, but let's run this through and [10384] let's see what [10386] happens. So, this is pretty intensive. [10389] You know, we got a lot of variables [10390] here. We want to make sure it doesn't [10391] screw up. So, it's going to take its [10392] sweet ass time for [10394] sure. You could also do things like um [10397] add uh frequency penalties, presence [10399] penalties, and so on and so forth if you [10401] wanted to be a little clearer about [10402] what's going on. But basically, I'm [10404] going to take all the variables from [10405] here and I'm just going to feed them [10406] into our Google Slide. There's one more [10409] thing that I believe we're going to have [10410] to do. If you think about it, like this [10412] Google Slide here, when I um ran it the [10415] first time, I replace proposal title [10416] with the word hey, right? So, we can't [10418] actually do that because this is like [10420] one proposal template. So, [10421] realistically, before we do this, we're [10423] actually going to have to generate a new [10424] proposal template every time. Um, but [10426] that's uh probably pretty easy to do. [10427] We're going to walk through it together. [10428] Okay, great. So, we just got the [10430] execution. Let's jump through and let's [10431] see what's going on. Just going to move [10433] over to JSON view because it's a lot [10435] easier for me just to make sure that we [10436] have everything formatted correctly. [10438] Looks good. We do have all the [10439] variables. YouTube content efficient [10441] efficiency boost for left click. So, one [10443] thing that I'm seeing here is just [10445] um yeah, we're going to need to provide [10447] it some information that we are a system [10450] basically context. We are an automation [10453] no code agency that develops [10458] uh that [10459] develops systems [10463] revolving around growth revenue ops UTC. [10466] There you go. That'll make it a little [10467] bit simpler and probably a little bit [10469] more accurate for me. But okay, cool. [10472] This looks Oh, uh, one more thing is we [10474] need to feed in the current date, right? [10475] Because November the 20th, 2023, that [10476] doesn't really [10477] matter. Okay, so why don't we do that [10479] one more [10481] time? We'll go over here and we'll say [10484] um current date. There we go. cuz you [10488] know how soon 2 months like that doesn't [10490] really provide any context on its own. [10493] So I'm just going to go Feb 4 2025. Then [10496] we'll go 2 months. Then over here we're [10500] same thing. We're going to say current [10502] date for 2025. How soon? 2 weeks. [10505] Deposit cost $3,525. This should fix the [10507] milestone stuff. Let's test it out. I [10510] hope you guys see the value in me doing [10512] this live. Um this is very much more [10514] similar to what your actual build [10515] process would be like. like you're not [10517] going to get all this in one shot, [10518] right? It's not like you're going to [10519] know, hm, I guess I'm going to have [10520] these fields. You're going to map it out [10522] perfectly, send it, and see the results. [10524] Realistically, you're going to have like [10525] back and forth where you you test the [10526] output and you're like, that's kind of [10528] missing this context. I don't really [10529] know about that. Um, and then, you know, [10531] go go go back and forth in that [10533] way. Okay, great. Yeah, it looks pretty [10535] solid to me. Um, I'm not seeing any [10537] major issues here. So, uh, you know, I [10539] could just feed this forward. Like, we [10540] could just pin this output and I could [10542] just feed this forward into the replace [10544] node, right? But if you think about it, [10546] if I do that, I'm actually going to be [10547] replacing this. So, I don't actually [10548] want to do that. Like, I don't want to [10549] replace the main template. What I want [10551] to do is I want to replace a copy of the [10552] template. So, logically, we should copy [10554] this. Um, I don't see I didn't I didn't [10558] see anything in Google Slides where we [10559] could just like generate a new one. So, [10562] I imagine we'll probably be able to do [10564] this with Google Drive instead. Yeah. [10566] With a copy a file tool. So, I'm going [10568] to do the copy a file tool and I'm [10569] actually going to copy the proposal, [10571] duplicate it, and then I'm going to [10572] update the the the new copy instead of [10575] the old one. So, in order to connect to [10577] this, you have to create a new [10578] credential. Then, you're just going to [10579] have to go through the same flow that we [10580] did before where you go into your Google [10582] Cl console cloud account, you create a [10583] new account, um you you add a credential [10586] for NADN, then you have a client ID [10588] client secret, and you got to put in the [10589] redirect URL there. I already have one, [10591] so I'm just going to exit out of that [10592] and just use my own Google Drive [10593] account. What I'm going to want to do is [10595] I'm going to want to um resource file [10597] operation copy. And if you think about [10598] it, what I want is I just want that I [10600] want that proposal template, right? So I [10602] could select it manually or I could just [10604] copy in the ID and that's what I prefer [10606] to do. Just a little bit easier. Okay, [10610] great. And then the file name. Um I'm [10611] just going to feed in the proposal title [10613] as the file name. And for now, we'll [10615] just copy this in the same folder. Let [10617] me see if there are any cool um options. [10619] Copies. Copy requires writer permission. [10623] That's pretty interesting. Uh I don't [10625] think I'm going to do that. No, I just [10626] want them to have all of it. Then I'm [10628] going to test this. So we've just [10630] created a new system which looks like uh [10632] it's sorry a new proposal called [10633] automated YouTube script system for left [10634] click. Nice. Um so what I'm going to do [10636] here is I'm actually just going to pin [10637] this. Then I'm going to replace the [10639] text, but I'm going to do so using the [10642] ID from that. So that's my presentation [10645] ID. Now I should be replacing the new [10646] one. And if you think about it, um what [10648] we just did is now we have a new ID. So [10650] I can actually go and this is going to [10652] be my main example proposal template, [10654] right? So let me just actually paste in [10656] the ID of the new one that we just [10657] generated. And as you can see, it's just [10659] a it's a duplicate of the same one. The [10661] only difference is we have um automated [10663] YouTube script system for left click [10665] written up here. Okay. So now I'm just [10667] going to go back here and all I have to [10669] do is I basically just have to go [10670] through um and then enumerate across the [10674] variable names like this um and then [10676] replace them with the text from this [10678] open AI node. So, like a quick example [10680] of what I'll be doing is I'll be going [10682] proposal title and then I'll just be [10683] feeding in um you know, proposal title [10685] here, right? Not exactly rocket science. [10688] Um but, you know, it's going to be a [10689] little bit annoying cuz we got to go [10690] through and do this a bunch of times. [10692] Okay. And then for now, I'm just going [10693] to feed in um cost and I'll just make it [10695] 1850 hypothetically because we've stored [10699] we've hardcoded some variables in there [10700] earlier. Um but yeah, I just finished [10702] mapping all them. We should be good to [10703] go. I'm going to click test step. We're [10704] going to see what happens. We have a [10707] bunch of occurrences changed. one. The [10709] only difference is this last one which [10710] was cost says two. That seems reasonable [10712] to me. Uh and where would be? We we be [10715] right over here. Okay. So, automated [10717] YouTube script system for left click [10719] streamline YouTube content production [10720] with AI powered script writing. That [10721] looks reasonable. I don't really like [10722] that this is all like capital case [10724] though to be honest. So, probably going [10725] to tell the model not to do [10727] that. That looks good. Um these are [10730] looking a little too long. So, I'm just [10731] going to uh like go in and I'll tell it [10734] that the description should be shorter. [10735] So, you know, aim for like two lines or [10737] something. Actually, hold on a second. I [10740] think I might have Did I change the size [10741] of these? I feel like I changed the size [10743] of [10744] these. You know, I might have just used [10746] a slightly larger size for the template [10749] um to beh for for this to be honest. I [10751] don't know. I'll have to double check. [10753] Um okay, let's go back here. Let's see [10755] what's going on. So, this looks good. [10756] This one looks a little long, so I'm [10757] just going to have to make sure it [10758] writes shorter. That's fine. You know, [10760] it was about 2 weeks. Total turnaround [10762] times 10 days, right? That's fine. 1850 [10765] today, 1850 when it's finished. Got the [10767] thank you. Okay, awesome. So, of this [10769] whole thing, the only two things I [10770] didn't really like now that I'm I'm [10771] testing this and seeing it are I'm down [10773] here bottom rightand corner, it just had [10775] a bunch of capital case um words. So, [10778] streamline YouTube content production. I [10780] don't want this to be a title. I just [10781] want this to be like a description, [10783] right? And then over here, it's just a [10784] little bit too long. Uh there probably [10786] ways that we could like dynamically [10788] change this. There might be like a way [10789] to like automatically resize the the [10792] thing like ourselves instead of um [10794] having [10795] this having to sort of like do it [10797] manually. That's fine. I don't really [10799] care too much about that. We could also [10800] like reduce the size of all these [10802] elements and reduce the line height and [10803] stuff just for safety. So, you know, I [10805] mean, this is more proposal template [10807] stuff, but I'm just going to do it um [10808] just in case. When we go down to 10 [10811] here, we'll go 10 here. We'll go 10 [10814] here. [10816] You know, I'm not like a designer or [10818] anything, so I'm sure designer [10820] uh a designer would have yelled at me by [10822] now. Why would you change that to size [10824] 10? How dare you? I think it still looks [10827] pretty good. Um, and then I'm going to [10829] go back over to our model and then, you [10832] know, just as like an input, I'm going [10833] to make it a little bit shorter. [10836] rule. I'll say if a field is a [10842] description field contains the [10845] term description, it should be no more [10849] than two lines. [10851] Cool. That looks uh well, I mean, how's [10854] it going to conceptualize a line, right? [10855] Let's see how many words was [10857] this. I'm going to go word [10862] counter. This was 91. Uh, sorry, 14 [10865] words. So maybe we'll go [10867] like no more than 10 words. If we go 10 [10870] words each, [10872] then I guess if I make them smaller, [10875] like that's fine. Maybe we'll go no more [10877] than 14 words. That's quite the [10880] constraint. Okay, cool. Uh so just [10883] because we've run this like we've we've [10885] copied the file, but it's a different [10887] file now, like I'm going to want to copy [10888] it again. So I'm going to unpin this [10889] data. I'm just going to test the step. [10891] We're now going to copy it to a new [10893] duplicate. Now, that's been copied over [10895] as a new duplicate. Um, oh, you know [10897] what? There's one more thing I got to [10898] do, right? I got to change the uh scope [10900] so it doesn't include the [10903] um you know, if it is a description [10908] name, do not use [10911] capital. Uh do not use title [10914] case. Okay, cool. So now that now that [10917] we have that uh we should be able to you [10919] know like assuming that we fixed that um [10922] we've now copied it. We can pin this as [10923] an output. We are going to be using the [10926] old open output but that's okay. We're [10929] mapping this now. So I'm just going to [10931] copy this over use that to open up my [10934] second example which going to be right [10936] over [10937] here. And then I'm going to test this. [10941] It's going to go in and replace [10942] everything. [10945] Let me just see if it looks a little [10946] better with the smaller text. It does. [10948] Beautiful. So, actually, this is this is [10949] fine. We actually didn't need to shorten [10950] it at all um now that the text is [10952] smaller, which is good. And yeah. Yeah, [10954] we're basically good to go on that [10956] front. Um I'll leave it there for now. [10958] Uh so, the question is, you know, where [10960] do we go from here? Well, my [10961] recommendation to you guys is uh this is [10963] this is a free option. So, I'm going to [10964] show you guys how to basically do [10965] everything I just did except in Panadoc [10967] instead and include like a payment [10968] module. But my recommendation at this [10970] point is if you guys want to stick with [10971] the free option, then just send them an [10973] email and have a link over to the uh [10975] proposal and then you know in your email [10977] just ask them if they want to pay um or [10980] you know maybe even be prevent uh pre [10982] proactive actually send them an invoice [10984] along with the proposal. If they have [10985] their thumbs up and they're ready to [10986] move forward then just send them an [10988] invoice on your invoice. Maybe you have [10989] some like little legal ease by uh paying [10992] this thing. You accept our terms and [10993] conditions. Terms and conditions goes to [10994] some page in your website that just has [10996] like some very very basic stuff. uh you [10998] know, I've never really been super [10999] worried about agreements and so on and [11001] so forth. So, uh like personally, I [11003] probably wouldn't. And the best news is [11004] we can do that together. So, I'm [11005] actually going to show you what that [11006] would look like or how I would build it [11007] out if I were working for my own company [11010] or a client. I just head over to the [11012] Gmail node. Um what I would do is you [11014] could send directly or you could draft. [11015] Like, feel free to do either. Um I'm [11017] just going to send for simplicity. [11019] You're going to have to connect yourself [11020] a credential. Same idea as before. I [11022] think Gmail's a little bit easier [11023] because you can just sign in. Um, but [11025] yeah, you just click sign in with Google [11026] if you're on the cloud console account. [11029] That'll automatically just connect to [11030] you. Sorry, I'm a little out of breath [11031] cuz I had to run downstairs in between [11033] cuts and grab my groceries. I'm just [11035] going to use Gmail account 3. And then [11038] uh, you know, if you think about it, [11038] like you also do need an email address [11040] in the form, right? So, I'm going to [11042] assume that this form input that we put [11043] together has an email address and we can [11045] fix it all up later. But for now, I'm [11046] just going to go uh [11049] nicholas@gmail.com. And then I'm just [11051] going to paste [11053] in reproposal 4. Then I'll just include [11057] the company name. Uh, which I [11060] think was just going to be leftclick. [11064] Yes. Then I'll say, hey, you know, [11066] whatever the first name is. So maybe [11069] we'll go Nick. I don't like how this is [11070] not multi-line. Can I make this [11072] multi-line? Yes. Um, hey [11076] Nick, thanks for the great call [11079] earlier. I had a moment after our chat [11083] to put together a detailed [11085] proposal for you. Please take a look at [11089] your earliest convenience and let me [11091] know your [11093] thoughts. You can you'll find it here [11096] and then I can just put in like the [11098] link. Now, if you think about it, this [11099] link is always going to be formatted the [11101] same. It's just going to be this right [11104] here. And then we'll be feeding in the [11107] presentation ID right over here. So, [11109] what can we do? We can source the [11111] variable. And I'll just go JSON [11113] presentation ID. Now, we'll be filling [11116] it in like this. And then voila. You [11117] know, we have like the the link in the [11119] email. There are better ways to do this, [11121] of course. We could do HTML. If you have [11123] any questions, let me [11126] know. I've also sent over an invoice for [11129] the amount [11131] um just to keep things [11135] convenient. Thanks, Nick. [11140] Okay, I think I'm just going to leave it [11142] at that. Um, and then this is this is [11145] plain text, right? You can actually do [11146] HTML as well. If you do HTML, um, you'll [11148] actually be able to like add it as a [11150] link link in the email. I'm not going to [11151] do that. Um, just for simplicity, but [11154] yeah. Okay, let me just turn a pen and [11156] attribution off cuz you already know [11158] they're trying to sneak their marketing [11160] in here. Okay, and I'm going to go over [11163] to my personal email here and I see a [11165] link right right there. Hey Nick, thanks [11167] for the great call. I had a moment after [11168] I tried to put together a detailed [11169] proposal for you. Please take a look at [11170] your list convenience. Let me your [11171] thoughts. You'll find it here. If you [11172] have any questions, let me know. I've [11173] also sent over uh I guess I've said let [11176] me know twice. I've also sent over an [11177] invoice for the amount just to keep [11178] things convenient. Um docs, so let me [11181] just change the let me know invoice for [11183] the project just to keep things [11184] convenient. Can get started anytime [11187] that's sorted. Let's just go anytime [11189] that's sorted to make it abundantly [11191] clear. You got to pay. Cool. So you give [11193] it a click. What do you get? Voila. you [11195] get your customized proposal, right? [11197] Very clear, very clean, not at all [11200] complicated. Um, and you know, although [11202] the fact, you know, despite the fact [11204] that this doesn't really have like a way [11205] to sign, um, like you usually sign [11207] proposals, uh, it's free, 100% free, [11209] doesn't cost you a scent, and, uh, you [11211] still get like a very high quality [11212] impression on the client end, which is [11214] valuable. So, if I were just to run this [11216] whole thing from start to finish and [11217] just like kind of [11218] eliminate all of these pins just to show [11221] you guys how it would work. Imagine I [11222] just, you know, we just had a [11223] conversation or something. Um, I just [11225] click test [11226] workflow and, you know, I'll fill out [11229] the form in a sec. But now the Open AI [11230] model is like generating a bunch of [11232] text. Then the Google Drive is going to [11234] be copying it. We're going to be [11235] replacing it and then it's going to send [11236] over [11237] Gmail. If I just kind of back it up a [11241] bit and just refresh my inbox and [11243] actually just check these Walmart [11246] deliveries. Um voila, we have the same [11248] sort of email. Seems reasonably [11250] customized. And then as you see, you [11252] know, we have like the title, we have [11253] like the nicely fitting um uh sections [11256] here. Same over here. We got like the [11259] sexy timeline. We got the cost. Uh and [11262] you know, I click this in one button, [11263] right? Pretty simple, pretty [11265] straightforward. And this is good [11266] verification that this doesn't just work [11267] on like old data. This works on new [11269] data, too. Okay, great. So, let's just [11271] do let's do one thing before we move it [11272] over to Panadoc. Let's um let's add a [11274] form and then let's just replace all the [11276] data here with like actual live data [11277] with the form. And then we're also just [11278] going to want like a couple more pieces [11279] of information. We're going to need like [11280] an email address to send it to [11281] obviously. Uh and if there's anything [11284] else that comes up, I'll I'll deal with [11285] it. But yeah, we're just going to want [11286] to delete this trigger. And then what [11288] we're going to do is we're just going to [11288] go N8 form on new NAN form event. We're [11291] going to trigger the flow. So, let me [11293] connect this. What I want to do is um I [11296] want to actually go and I want to create [11298] um you know I want to create this whole [11300] thing. So what I usually call this I [11301] call this like a discovery call logging [11303] form or like a sale let's just go sales [11305] call logging [11307] form and this call logs a or sorry this [11310] form logs a sales call and automatically [11314] generates a [11316] proposal and now we can actually go [11318] through and just ask a bunch of [11319] questions. So um you know let's [11322] say prospect [11326] First name, we'll go last name. This is [11329] just useful information to have. Company [11332] name. Website. All useful information to [11335] have. Um, and let's actually get into [11337] what we were generating, right? If you [11339] think about it, we generated a problem. [11341] We generated a solution. These are both [11342] questions. So, [11344] problem, solution, [11347] uh, cost, and was there anything else? [11350] Let me check out the open AI node really [11353] quickly and check out the prompt. [11354] Company name, problem, solution, scope. [11357] There was a scope question. And then how [11360] soon? Okay, so we're going to go back [11362] here. We'll go scope. And then finally, [11367] we'll go how [11369] soon. I'm going to make them all [11371] required for simplicity because I don't [11373] want anybody on my team or somebody [11375] else's team to um have the possibility [11378] not to fill this information out. Like [11379] you should get the first name and the [11381] last name, the company name, and the [11382] website um you know at minimum. I don't [11386] see a URL text area thing here, which is [11388] unfortunate. That's okay though. Anyway, [11390] and then we're going to respond when the [11392] form is submitted. Um and then let me [11394] just check if there are any options we [11395] want. I want to take off the animated [11397] attribution obviously and then we should [11399] be good. Okay, great. So now if I click [11401] test step, what's going to happen? I'm [11403] actually going to go get a form that I [11405] can fill all this data out with. So for [11407] the purposes of this, I'm going to say [11409] Peter Sarif [11412] leftclick go left click I problem. I'm [11415] just actually going to go I'm going to [11417] paste in the problem statement that I [11419] hardcoded over [11421] here. So let's do this [11424] one. Paste in the problem. This should [11426] probably be a text area now that I'm [11428] thinking about, but it's okay. Paste in [11430] the problem. Paste in the solution. [11433] Paste in the cost of 3525, [11436] right? We should also paste in the [11439] scope. And I should readjust where the [11441] scope is just so that it's like a little [11442] simpler. Then how soon? I think it was [11444] two weeks, right? Okay, cool. So now I'm [11446] going to fill this out. We're now going [11448] to get all these events, right? So now [11449] we have access to this. And now we can [11450] just go down the the list. We could just [11452] you know replace these variables with [11454] um replace these this JSON I should say [11457] with the variables. So it was the [11458] company name right over here. Um problem [11462] statement was you know dollar sign JSON [11466] uh and it looks like we are now using [11468] brackets but you don't have to you could [11470] use uh whatever you want. So the problem [11472] statement here was just [11474] problem and oh this is company name [11476] because we split it right we had a space [11478] in between. That makes sense. Then we [11480] have a [11482] solution. We're going to have a [11487] scope. We're going to have a current [11489] date. That's just going to be [11490] automatically filled in with [11493] now. Uh we should also format that. Now [11496] that I'm thinking about it, let's just [11498] format it as [11502] uh for common formats till string may be [11505] easier. We might just go like toal [11506] string. I think we might have an error [11507] function in here. Is that why? No, I [11510] have no idea why. But anyway, um, now we [11512] get the current date. Same format. How [11514] soon was JSON how soon? Wonderful. And [11518] then the cost just going to be [11522] JSON.cost. Perfect. Cool. So, we've now [11524] mapped all the variables in, right? We [11526] have all the real variables, like actual [11527] live variables coming in with data. So [11530] now I can actually run a test step and [11532] it's it's going to go through it's going [11533] to generate all the data for me. Similar [11534] to how was doing before, but now it's [11536] being triggered off of a form input as [11538] opposed to just like my own whims and [11539] desires. And as amazing as my whims and [11541] desires are, ladies and gentlemen, form [11543] outputs are way better. Okay, cool. This [11546] is already mapping a variable. This is [11548] going to be fixed. So that makes sense. [11550] Replacing this text. This looks good to [11553] me. It says there's some error fetching [11555] options from Google Slides. That's just [11556] because the presentation ID isn't [11557] hardcoded. Then I'll have a Gmail. Let's [11559] just make sure this Gmail um actually [11561] uses the, you know, everything that I [11564] want it to use. So, let me actually just [11566] go through test everything up to and [11567] including [11569] this. So, it'll take the OpenAI text and [11572] then map it in here. I'm just going to [11573] pin this. Make my life a little bit [11575] easier. And then over here in Gmail, uh [11577] you know, I can just go down to on form [11579] submission and I can just grab the I did [11581] not ask for the email address, did I? [11583] That is so funny. [11585] Okay, so you're going to want to ask for [11586] the email address. Despite the fact I [11588] don't have an email address, I could [11589] still technically map this. I'm just [11591] going to go it is [11592] item.json email. I'll capitalize it as [11595] well. And then even though I don't have [11597] this, I know that it's going to work [11599] when I go over here and then I add a new [11600] field called, you know, email, right? [11603] Because it's just, you know, it's just [11604] code we're mapping at the end of the [11606] day. Uh like, you know, it's it's not [11608] necessarily going to work work until we [11610] fill out the form with the same output. [11612] But for now, we can [11615] um just modify this with uh email. We'll [11619] go Nick. Uh let's go [11624] Nicholas@gmail.com. There you go. I'm [11625] just going to save this. Make sure it's [11626] good. Jason [11628] good. We will pin that as well. I just [11632] like when I pin stuff, I like pinning [11633] everything. Sue me. Okay. And we're not [11636] going to have access to this right now, [11637] I don't believe. Uh if I test this, what [11640] happens? [11642] Yeah, we don't have access to this right [11643] now [11645] unfortunately. Even there's item.json [11647] email on the for Well, maybe we do [11654] actually. Maybe we do. No, it doesn't [11657] look like we do. I think we have to [11658] rerun the whole flow if we want it. [11660] Unfortunate, but is what it is. Um, [11662] cool. Uh, I'm just going to rerun this [11664] one more time, uh, just on my end. Make [11666] sure that everything checks out. But [11667] then from here on out, we're just going [11668] to add the we're going to swap this over [11670] to Panda for anybody interested in like [11671] leveling this up even more. And then [11673] we're going to call it a day. And as you [11674] can see, this is not a complicated flow. [11675] There's like 1 2 3 4 five realistically, [11679] maybe six if you count like the invoice [11681] step. There like six elements to this u [11684] from start to finish. This one is just [11685] duplicating a duplicate, which should [11687] honestly have some functionality built [11688] in, which it doesn't. So five if you [11690] want to call it that. Um, but you know, [11692] it's it's something that's really high [11693] ROI, something that you can actually [11694] slot into a real business as opposed to [11696] just like looking cool and not actually [11697] doing anything for you. So, yeah, let's [11699] test out this puppy one more time. Okay, [11702] looks good. We're going to [11704] submit. Nice. We got the data. Let me [11707] just see if the website field is a text [11709] area. It is. It's okay. Well, we should [11711] have just gotten the form. Cool. We did. [11713] We got the email address and everything. [11715] Awesome. Cool. If I go over here now, do [11717] we still have access to this? No. I [11718] think I need to rerun all this stuff, [11720] right? Oh, we do [11726] apparently unpin replace text to [11728] execute. We're going to have to unpin [11731] the old data unfortunately. So, I'm just [11733] going to unpin some of the old data [11735] here. And I should unpin because we're [11737] just replacing the [11740] replacement. And then we'll pin [11743] this. Go. Now, we'll test it. Cool. [11746] Looks good. We automatically got the [11747] email and then we have our, you know, [11749] proposal and so on and so forth. You [11751] might want to decrease the line height [11752] if you just copy my template verbatim, [11754] but feel free to do whatever makes you [11755] happy. From here on out, you know, we're [11757] going to shift gears. Instead of [11759] replacing text in a Google slide, we're [11761] going to do in Panda doc for people that [11762] are unfamiliar. Panda doc's a really [11764] cool platform that allows you to, you [11766] know, take care of a lot of stuff that [11768] otherwise you'd sort of have to do [11769] manually. Panda do open here. Panda doc, [11772] as you can see, is a little bit more [11773] professional looking than uh slides and [11774] so forth. There's a lot of stuff that we [11776] can add. We can add, you know, text [11777] blocks, video blocks, image tables, [11779] quotes, uh, page breaks, table of [11781] contents, stuff like that. This is just [11783] an example uh proposal that I generated [11785] for a fictional company that I put [11786] together during my Maker School [11788] training. If you guys want to see how I [11789] put this together, um, you can find it [11791] all under Maker School in classroom. I [11793] do it all in month one. But basically, [11795] there's like a big proposal template [11797] that I do. And this proposal template, I [11799] run through the entire building process [11800] for people that might be interested. [11802] Anyway, this is my proposal template. As [11804] you can see here, very similar idea. [11805] Anything in yellow is just a variable. [11807] So what I'm doing is I'm like weaving in [11808] my own procedural logic with like [11810] templated text and stuff like that and [11812] then with AI generated text. The reason [11814] why I'm doing this is cuz I just want to [11815] make sure that like the parts that are [11817] very valuable um I wrote myself. I [11819] didn't have AI right. This the parts [11821] that are really valuable I want to just [11822] be clean and powerful. Um anyway top to [11825] bottom everything works basically the [11827] same until we get to this section where [11828] it says your investment intelligent lead [11831] management system for leftclick. Right. [11832] And then we have a we have a price. The [11834] way that this works is in Panodoc, you [11836] actually hook this up to a payment [11838] button. And what happens is after the [11840] proposal is sent, uh, you basically, [11842] sorry, after you sign the proposal, uh, [11844] you have the option to pay immediately. [11846] So, it's great for collecting. Um, I use [11848] this in order to scale my agency to 72K [11851] a month. Um, I use this with one second [11853] copy where I scaled to 92K a month as [11854] well. This is just like a much cleaner [11856] way of going about things than the way [11858] that most people handle agreements and [11859] stuff. And I have a video on that. um [11861] you know providing logic around my [11863] proposals and stuff like that if you [11864] want to check it out in Maker School as [11865] well. I'll stop soft pitching that I [11867] think we're we're all adults here. Join [11869] my program if you want to get better at [11871] this sort of stuff. But yeah, let me [11872] actually run you through what this looks [11873] like. So in order to do this, basically [11875] we need to make a request to the API. [11877] Okay, it's not enough for us to do a [11879] request to like a panda dooc node [11880] because there is no panda dooc node, [11882] right? I just checked out panda dooc. [11884] You didn't find anything. But you know, [11886] you can do it with the HTTP request and [11887] they're 100% right on that. Now, in [11889] order to get this done, what we need to [11890] do is we need to feed in this giant [11892] super scary block of text that looks [11894] like this. And it's basically just a ton [11896] of JSON that we formatted to be um you [11900] know like curtailed to this particular [11902] template. So, this template's a little [11904] bit different, right? We have tokens, a [11906] value called client email, sender email, [11908] client scope one, client scope 2, client [11909] scope 3. As you can see, we're actually [11911] generating multiple client scopes as [11912] opposed to just one. And the reason why [11914] is because we are doing it like this, [11916] right? One, two, three, four, five. So I [11919] believe I'm I'm feeding in five in [11921] total. Yeah, looks like I'm feeding in [11922] five different scope items, right? How [11924] crazy is that? Then we have client [11925] company, center company, client last [11926] name, sender last name, client timeline [11928] 1, timeline 2, timeline 3. These are all [11931] just takes on the same idea. So really, [11933] in order to modify the system that we [11934] previously had into a system that's [11935] capable of operating with this, all we [11938] need to do is we just need to output [11939] slightly different objects. And that [11940] will require us to just once adjust our [11943] AI generated copy so that you know the [11946] objects look like what this is [11947] expecting. And then two, we just need to [11949] update those. There's a place for us to [11950] put price and everything like that. So [11952] I'm just going to go ahead and like do [11953] most of the grunt work, but I'm going to [11954] show you while I do it. I like cut at [11956] several points just so you can see [11958] exactly what that looks like. Okay, [11959] first things first. I'm going to jump [11961] into the expression editor here. And if [11963] you think about it, I actually have like [11964] a title variable already. So I'm just [11966] going to go proposal title right here. [11968] And then there's client scope one, [11970] client scope 2, client scope 3, client [11971] scope four, client scope 5. So there are [11973] five different client scopes. So I need [11974] to make sure that my object that I'm [11975] opening open actually has five scopes [11977] instead of just one. Just delete all of [11979] the scopes descriptions. We'll just [11980] change them all so that it's just the [11982] titles, right? Make sure they're inside [11984] of the string. Okay. And I just ran it [11986] using this API format. This is a very [11990] long and kind of scary object for most. [11992] So don't sweat the specifics too much. [11994] If you guys want to learn how to make [11995] something like this for yourself, I will [11997] be covering how to do API connections in [11998] the next video. But the end result is we [12001] end up with a proposal that looks [12002] something like this. AI powered script [12003] writing system for leftclick. You know, [12005] here's some information about what the [12006] core problems are. Here are, you know, [12009] some pieces about the solution. Right? [12012] As you can see, my proposed solution to [12014] the problem above is as follows. Tack [12016] these challenges. We propose an advanced [12017] AI script writing system that automates [12019] your content creation workflow. The [12020] system will script compared to YouTube [12021] channels for content ideas, analyze in [12022] the best performing titles. Use AI to [12024] rephrase these titles and generate [12025] detailed outlines. It could be with [12027] ready to use scripts to streamline your [12028] video production process. I consider [12030] this reasonably straightforward and I'm [12031] confident I can do an outstanding job [12033] here for you. If I wasn't, I wouldn't [12035] have put together this proposal. Right? [12037] We got all the scope stuff here. We got [12039] the timeline. Uh and then over here, [12041] this probably the most important part. [12042] We have the price. The way the price [12043] works, we actually have 50% due up [12045] front, 50% due in signing. we check our [12048] little payment note. Essentially, what's [12050] going to happen is when we send this, [12051] they're just going to receive an invoice [12053] um the moment that they sign for that [12055] amount of money. And I'm seeing here [12057] that I think I used an extra capital L. [12059] But, you know, we all can't be perfect. [12062] Uh yeah, that's that's more or less it [12064] in a nutshell. So, you can take the same [12066] approach that I just showed you guys how [12067] to do today to virtually any proposal [12069] platform or virtually not even just a [12070] proposal platform, but virtually any [12072] asset that you create. Cuz you know, [12074] creating a Google slide, if you think [12075] about it, that's creating an asset. [12077] That's basically creating like a lead [12078] magnet. It's creating a PDF. You could [12080] export that in a number of different [12081] formats. You could give it to somebody. [12082] You could print freaking books with [12083] that, right? If you take this core idea [12086] here and then extend it, you could do uh [12088] a number of things. But I hope at this [12089] point I've at least just given you guys [12091] the knowledge to be able to build a [12092] simple AI powered flow without [12094] necessarily overwhelming yourself with, [12096] you know, talk about AI agents and stuff [12097] like that. Nice job. You know, have an [12098] AI proposal system that creates [12100] professional customized proposals in [12101] real time during sales calls. We built [12103] that all out live and hopefully you guys [12104] understand what an actual proposal [12106] generation build process looks like. The [12108] whole idea is to give you guys a massive [12109] edge when closing automation deals and [12111] then also give you another product in [12112] your toolkit that you can sell. We're [12114] now going to be building a website AI [12116] agent that handles visitor [12118] conversations, answers questions about [12119] your services, and also allows you to [12121] book meetings directly into your [12122] calendar. This is not just a chatbot. It [12124] is a lead qualification and booking [12125] system that works around the clock. a [12127] automation agencies regularly to charge [12129] anywhere from$1 to $2,000 to implement [12131] these systems because these automate the [12133] entire lead qualification process. It's [12134] also a great introduction into agents [12136] and how they work more generally. Let's [12137] dive [12139] in. So, here's the AI agent right here. [12142] As you can see, it's very simple. We [12143] have a simple AI agent flow with a chat [12145] message that goes into this decision [12147] maker which calls the Open AI chat [12150] model, stores contacts in the window [12151] buffer memory, and then we have a few [12152] tools that we're calling the Google [12153] calendar create event, Google calendar [12155] get all event. That's actually not very [12156] important. There's a million and one [12157] ways to set up agents. The thing I want [12159] to impress upon you is this looks [12160] simple, but in reality, when you use AI [12163] agents in business, they tend to be very [12165] simple because businesses in practice [12168] don't really use these massive waterfall [12170] AI agents that you guys are probably [12171] seeing with like a million in one nodes [12173] where an AI agent calls another AI agent [12175] and that Agent calls another AI agent. [12177] And the reason why is because the output [12179] tends to be a lot less predictable and a [12181] lot less consistent. And if you're a [12183] business, your revenue is driven by [12185] consistency. You want to constrain the [12187] total realm of outputs down to something [12190] manageable. So this in practice is [12192] typically what automations that make [12193] money look like at least the AI agent [12195] forms. So set your timer. Let me show [12197] you how to build an actual AI agent just [12198] like you saw in the intro in just a few [12202] seconds. First things first, open up a [12204] new NAND workflow. Click add first step. [12207] Type the term agent, then open it. [12209] You're good to go. Next up, select a [12212] chat model. In our case, we're going to [12213] be using the Open AI chat model. And I'm [12215] just going to be using the default [12216] functionality to get you up and running [12217] as quickly as possible. Going from 0 to [12219] one really is the most important thing. [12221] Then under memory, select window buffer [12224] memory. Set contacts window length to [12227] 10. You can actually get away with [12228] substantially longer because of a trick [12230] I'm about to show you. Now, you can chat [12231] with this just like you chat with any [12232] model. Click the chat button. Hey, how's [12234] it going? And you'll see that GPT4 Mini [12237] will give you a response. But the really [12238] cool thing is if you go to when chat [12240] message received over here and you [12241] select make chat publicly available to [12243] on what you have here is you have a chat [12246] URL that you can actually just link to [12248] directly. Now you have a hosted instance [12250] where you can talk to the [12253] model. Now the question is how do we [12256] take this hosted instance and then put [12257] it on our website. I have a website [12259] available over here. This is my content [12261] writing company called 1 second copy [12263] before chat GBT came out and you know [12265] rose rose to prominence. Um, this was my [12267] primary income source and this is sort [12268] of how I paid the bills. We had a team [12271] of very high quality journalists. We [12272] used some GPT2 and GPT3 uh much older [12276] models to basically help pre-draft a lot [12277] of the content and yeah, it was a pretty [12279] solid business. What I want is I want in [12280] the bottom right hand corner there'd be [12282] a little chat widget that pops up like [12283] you guys saw. So, in order to do this, [12285] if we go back to our anen chat agent, [12288] what you'll see is there are a couple of [12289] settings on your mode. Just change [12290] hosted chat to embedded chat. Okay? and [12293] then head over to this link. You scroll [12296] down a bit, you'll see that there's an [12298] option for installation called CDN [12300] embed. That stands for content delivery [12302] network. And basically what it gives you [12303] is it gives you a snippet of code that [12305] you can add to any website, whether it's [12307] customcoded site, a WordPress site, a [12309] web flow site, a Wix site, Squarepace [12311] site, whatever the hell you have. And [12313] all you need to do is copy and paste [12314] this in and then replace the web hook [12316] URL and you'll actually have a little [12318] chat widget built to spec that runs the [12322] rest of your flows. If we go back over [12323] to my actual website config, which I'm [12326] doing in something called netlifi, if I [12328] go to site configuration and then scroll [12329] down to postprocessing, there's actually [12331] a setting for me to add a snippet of [12333] text over here. So, what I'm going to do [12334] is I'll call this nadn chat agent. Paste [12337] in the HTML and all I need to do is go [12340] back here and get this web hook URL. [12343] and then paste it here where it says [12345] your production web hook [12347] URL. Okay. Now, the way that you do this [12350] is going to depend on the service that [12351] you're running. I mean, I'm running this [12352] custom website on Netlifi, so it's [12354] pretty easy for me. All I do is I just [12356] refresh the site. And now, what you'll [12358] see is in the bottom right hand corner, [12359] you have your little chat widget. Hi [12361] there, my name is Nathan. How can I [12362] assist you today? So, what's really cool [12366] about this is this is now running. I [12368] mean, you know, it's asking me the same [12369] thing because it doesn't have access to [12370] this, but this is now pinging the same [12373] AI agent flow that we just set up. We [12376] actually have two-way communication. And [12377] so, you can actually test this. You can [12379] run this. It's live. And the changes [12380] that you make over here are going to be [12382] reflected back over there. Now, a couple [12384] of other minor changes that we want in [12386] order to actually have this thing be [12387] useful for us. The first thing I'm going [12389] to want to do is I'm going to want to [12390] adjust the prompt a little bit because [12391] the way that AI agent prompts work, it's [12393] kind of unfortunate in N. If you use the [12395] default prompting behavior, what you're [12397] doing is you're always taking the prompt [12398] from the previous node and just [12400] recycling it over and over and over and [12401] over again. There's also sort of a [12403] hidden prompt that you don't really see, [12404] which can muck up the quality of what it [12406] is that you're trying to do. So, what I [12407] recommend is to use this template that [12409] I'm about to show you to define what's [12411] called a system message instead, which [12413] is a static fixed prompt the model will [12415] always have access to and then having it [12418] take the input from the previous node [12420] automatically and recycling it. This is [12422] the best of both worlds. I've seen a lot [12424] of people try to use the define below [12426] section. Um, just my my understanding of [12428] the way that these technologies work [12429] under the hood make me feel like this is [12431] not the ideal way to do it. So, I've [12433] saved a prompt over here which I'll run [12434] you through in a [12435] moment. And if you want to set this up [12438] for yourself, I highly recommend just [12439] using some variant of this prompt. Now, [12441] it's dynamic. So, you're going to have [12442] to go to [12443] expression. We're going to need to [12445] reopen this. And basically the way it [12447] works is we say you're a helpful [12449] intelligent website chatbot for 1second [12451] copy a content writing company. The [12453] current date is now format y mmdd. This [12457] is just an naden javascript function [12459] that converts the current date into ISO [12464] 8601 format. It's just a very simple and [12466] easily interpretable um current date. [12468] You are in the Edmonton MT time zone. [12470] You're male and your name is Nick. So [12471] we're going to have to change the [12472] chatbot so it doesn't say my name is [12473] Nathan. I'll show you guys how to do [12474] that in a second. Here's a bunch of [12476] context about the business. We offer [12477] extremely fast turnaround times, 4 to 6 [12479] hours at affordable rates, 10 cents a [12481] word. Our work has been published in [12482] Forbes, BI, TechCrunch, and most major [12484] magazines. We've worked with some pretty [12486] big names like CO, Wise, Upwork, [12487] NordVPN, HP, and more. Our team is [12489] composed of award-winning journalists, [12490] writers from all over the world. We use [12492] AI for factecking, citation generation [12494] while striving to keep AI scores at [12495] under 10%. Okay, so the way that I'd [12498] recommend it is you have that first [12499] section here where you just basically [12501] have the model define what it is and and [12502] how you want it to operate and identify. [12504] Then you want to have some context about [12506] the business. You can absolutely use rag [12508] for this, retrieve augmented generation. [12510] If you guys want me to show you how to [12511] build a website chatbot with rag as [12513] well, just let me know. To be frank with [12515] you, there's a little less value in rag [12518] than most people seem to think at the [12519] moment. So, usually just sticking a [12521] bunch of context about what your [12523] business is in the prompt can do just as [12525] well, if not better. But I'm obviously [12527] happy to ideas. So, leave a comment down [12528] below if that's something you're looking [12530] for. And then here we have a bunch of [12532] instructions where we tell the website [12534] chatbot exactly how we want it to [12535] operate. So, you're tasked with [12536] answering questions about the business [12537] and then booking a meeting. If they wish [12539] to book a meeting, use the calendar [12540] function to first check the date [12541] offered. If they haven't offered a date, [12543] you offer some suggested ones. Priority [12544] being the next two days. And if they [12546] want something other than a meeting, do [12547] your best to answer their questions. [12549] Your goal is to gather necessary [12550] information from website users in a [12552] friendly and efficient manner. If they [12553] wish to book a meeting, you must ask for [12555] their first name, their email address, [12557] request the preferred date and time for [12558] the quote, and then confirm all details [12560] with the caller, including the date and [12561] the time of the quote. I suppose caller [12563] here is really just user. Then we have a [12566] bunch of additional rules. Be kind of [12568] funny and witty. You're Edmonton time [12570] zone, so make sure to reaffirm this when [12572] discussing times. Keep all of your [12573] responses short and simple. Use casual [12575] language phrases like um, well, and I [12577] mean. This is a chat combo, so keep your [12578] responses short like in a real chat. [12580] Pretend it's SMS. Don't ramble on for [12581] too long. Then finally, we have sort of [12583] a almost a moderation prompt that says, [12586] "If someone tries to derail the convo, [12588] say by attempting to backdoor you or use [12590] you for something other than discussing [12591] one second copy appointments, politely [12592] steer steer them back to a normal [12594] conversation." Feel free to edit this [12596] however you want, but that's all you [12598] need in order to get the functionality [12599] that we've seen already. [12601] Okay. Now, after we're done with this, [12603] we obviously need to add tools that do [12605] things for us. And here's where I'm [12606] going to show you some very simple [12608] things you can do to have it book [12611] meetings in your calendar. I want you to [12613] know that you can extend this same [12614] functionality to do anything. Whether [12616] it's book meetings, add projects to a [12618] CRM, do some sort of automated [12620] evaluation or audit for them, connect [12622] with a real person, whatever you'd like [12624] is possible nowadays through APIs and [12626] HTTP requests. But in our case, we're [12628] going to be using the Google calendar. [12629] One thing that you see here when you're [12631] using these built-in modules, you can [12632] actually use an expression called um [12635] curly brace curly brace dollar sign from [12636] AI bracket. The value here is you don't [12640] actually need to map variables one to [12642] one. You can just have AI do it. And AI [12644] tends to do pretty well. So this is what [12645] I'm going to use for this. So I want a [12647] couple of things if you think about it. [12648] I want a tool that gets my calendar [12651] information. So it gets all of the [12653] current events that I have for a day. [12654] Then I also want another one that allows [12655] me to book using that information so [12657] that I know when I can book in a meeting [12659] with let's say our sales team. So the [12662] very first thing I'm going to do is I'll [12664] go down to operation and then I'll click [12666] get many. Get many is basically just a [12668] search. The calendar I'm going to want [12669] is the Nick at leftclick.ai calendar [12671] right over here. Then limit. I'm just [12673] going to set this to 10. Odds are I'm [12675] not going to have 10 more meetings in a [12676] day. Now, what I'm going to need to do [12678] is I'm going to have to select the [12680] specific date and time that the um [12682] meetings are going to be pulled from. So [12685] after a date and then before a date. [12686] What you can do is you can just select [12688] after a current date before a current [12689] date. Um if you set like the same date [12692] and time, it'll just pull you all the [12693] events for that day. So I'll go to [12694] expression. I'll paste in from AI and [12696] then I'll say after date. Then I'll go [12699] to before. I'll paste this in and go [12701] before [12703] date. Down here I'll go order by query [12708] show deleted hidden invitations. Oh, [12709] time zone. Sorry. And then what I'm [12712] going to select is just my own time zone [12714] for simplicity. So remember how I [12715] mentioned there we were Edmonton time [12717] zone. I'm Edmonton or America Edmonton [12719] which I think is GMT minus 7. It's [12721] important to have your time zone [12722] configured exactly or you're going to [12723] have some issues with the workflow [12725] obviously because the times that you [12726] tell people are going to be different [12727] from the times that obviously people [12729] tell you. And then we're going to add [12731] one more calendar tool. That's going to [12732] be the create. I'm going to be creating [12735] in the same calendar I'm checking. The [12737] start date is going to [12739] be from AI start date. The end date is [12742] going to be from AI end date. And [12745] there's there's one more thing I'm going [12747] to want to do. Let's move down here to [12749] summary. [12751] and then go expression meeting [12756] summary. That way when the AI creates [12758] the event, we're going to have some sort [12760] of meeting summary associated with it. [12763] Oh, and there's actually one more. We'll [12765] do attendees, which is right over here. [12767] Now, I'm always going to be the [12769] attendee, and we're always going to have [12770] some other attendee, which is going to [12773] be the user email. [12777] Okay, AI is coming up with all this [12780] stuff based off of the context of our [12782] conversation, which is pretty cool. [12784] Okay, sweet. So, given everything that [12786] we know now and given how it's set up, [12788] first I'm going to test this right over [12790] here. And I'm actually going to move [12791] over after making some changes and test [12792] it in the 1 second copy website. [12795] Anybody's on my website right now, that [12797] means they're currently seeing it, which [12798] is pretty neat. So, let me let me [12800] actually just delete all this. Let me [12802] pretend I'm interacting with an agent as [12804] if I want to do something. [12806] Hello, thanks for this. I'm interested [12809] in 1 second copy. Tell me a bit about [12811] it. It's now going to be pulling in data [12814] from the context. Because it's pulling [12816] in data from the context, aka the [12818] samples that we provided directly in the [12819] prompt. It's going to operate very [12820] quickly. Now, in my case, it's just [12822] pulling data directly from there and [12824] just listing them line item by line [12825] item. You can have it respond to these [12827] sorts of queries in a specific way if [12829] you want. The context window is big [12830] enough that you can write whatever the [12831] hell in that system message. [12835] Let's see how it works with the calendar [12836] functionality. Do you want to set up a [12838] meeting to discuss details? If so, I can [12840] help you book that. Sure thing. You got [12842] 30 [12843] minutes sometime in the next few days. [12847] What's your time [12849] zone? I'm in Edmonton. I can check our [12852] calendar for the next couple of days to [12853] find a 30-minut slot. Just give me your [12854] first name, email. Let me know your [12855] preferred date and time. Sure thing, [12857] Nick. Let's do my main email here. [12862] And sometime after 300 [12866] PM tomorrow or the next day when I call [12870] this, what's it going to be doing? It's [12872] obviously checking my calendar [12873] availability and responding through the [12874] model. Looks like tomorrow after 3 p.m. [12877] is booked up for our team. However, I do [12878] have a spot available the day after [12880] tomorrow, March 2nd at 3:30 p.m. Does [12882] that work for you? Now, it's checking my [12884] current calendar and I do indeed have a [12886] spot there. Um, does that work for you? [12888] Sure thing. Could you [12889] book? And now it'll go through and it'll [12892] actually complete the booking. Well, [12894] before it does that, it's going to [12895] confirm with me. Great. Just to confirm [12897] Nick nicholas arrive atgmail.com date [12898] and time. Shall I go ahead and book [12899] that? Absolutely. Thank you. Now, if we [12902] enter that out, it's now going to be [12904] pulling the Google calendar event and [12905] actually going and creating it in my [12907] calendar. What's really cool is it's [12909] going to offer me a meeting link that I [12911] can then take a look at. So, in order [12912] for me to do this, I do need to open up [12914] the specific account that I'm [12915] in. And voila, we now have it right over [12919] here. meeting with one second copy. Now, [12921] in my case, it's getting nicks arrive [12923] twice because my other email address was [12926] nicholas@gmail.com. I fed that details [12928] in and then it got my picture from [12930] Google. But, um, yeah, as you can see, [12932] it's that easy to set up an AI agent [12933] that actually does something. [12934] Realistically, all this takes is a few [12936] minutes. Now, there are a couple changes [12938] that we're probably going to want to [12939] make to the AI agent on our live [12940] website. Obviously, we're going to want [12942] to brand it a little bit differently. [12943] And the agent says that his name is [12945] Nathan. How can it assist you today? [12946] Now, if you want to change the default [12948] messages and all of that, what you can [12949] do is you can actually just add this [12951] directly in that code snippet that I [12952] showed you guys a moment ago. And so, [12954] you can do things like have some initial [12956] messages in an array. You can do things [12958] like add some metadata, the mode, and [12960] and so on and so on and so forth. If I [12962] go back in my case to this, you can see [12964] the create chat function right over [12966] here. So, this is basically what I'd be [12967] editing. Now, unfortunately, I don't [12970] believe I can access the like I don't [12973] think I can edit this. I think I [12974] actually just create a new snippet. [12975] Okay. Okay, so I just went back in and [12976] pasted in initial messages array being, [12979] "Hi Nick here, let me know if you have [12980] any cues." And then if we go back here, [12982] what you see is we've now changed the [12984] text in the chatbot. Very simple and [12986] straightforward. Super easy to do. If [12988] you want adjust to adjust more [12989] configuration settings, just check it [12991] out over here. You can do things like [12993] change the text, add an input [12994] placeholder. Believe you should also be [12996] able to change the color. Yeah, right [12998] over here with some customization using [12999] CSS variables. You can make this window [13001] look however the hell you want. You can [13002] brand it entirely on your own. And I [13004] think you can also remove that little [13006] pesky NAD message, although I don't know [13008] exactly where that would be. Anywh who, [13010] I hope in this video I've at least shown [13011] you how to get started with the simplest [13013] version of an NADN AI agent website [13016] chatbot. It's nowhere near as hard as [13018] most people make it out to be. If you're [13019] smart about how you put this stuff [13020] together, you know, you can take this [13022] approach that I just showed you and you [13023] can make a couple of minor adjustments [13024] to it, but within 13 minutes or so, you [13027] can actually have something on a website [13029] that you could charge money for. You can [13030] run custom functionality for you can [13032] actually have access a calendar or [13034] adjust a CRM or actually do something [13036] with tools. Cool. You've now built a [13038] website a agent that qualifies prospects [13039] and books meetings automatically. [13041] Hopefully, your lead genen or the lead [13042] genen of your clients now working on [13044] autopilot. Next up is we're going to be [13046] building an AI content repurposing [13048] engine to take any YouTube video or [13050] podcast and automatically generate [13051] Instagram posts, LinkedIn content, and [13053] Facebook posts as well, all formatted [13055] and beautiful and ready to publish. This [13056] system is pretty valuable for coaches [13058] and consultants as well as content [13059] creators. Basically, anybody who needs [13061] to maintain an active social media [13062] presence and agencies typically charge [13064] anywhere from one to two,000 bucks for [13065] this automation because it solves a [13066] major time sync problem which is [13068] repurposing long form content. Okay, so [13070] now let's build that system to turn, you [13072] know, 1 hour of content into days or [13074] weeks of social media posts completely [13077] autonomously. So the way that this works [13079] is we start with a form submission where [13081] I put in the URL of a podcast. I then [13084] get the transcript via a thirdparty [13086] service which costs 1 cent per [13088] transcript something like a hundred [13090] podcasts per dollar. Then we will use [13092] OpenAI to get a bunch of data spin [13095] different transcript sections and do [13098] different things which I'll run through [13099] in a moment. We'll then split that out, [13101] loop over each item and then here we [13102] will generate Instagram posts, LinkedIn [13104] posts, Facebook posts before finally [13106] generating the the conccomment images as [13108] well. We'll then do some data processing [13111] then we'll add it to a database. Then [13113] finally we'll just do some merge and [13114] then update a form. And what happens on [13117] the back end is once we've done all this [13118] posting what we're doing is we're [13120] essentially updating a database looks [13121] something like this. Okay, very simple [13123] and easy to manage four column database [13125] called date added post body post image [13127] posted on with the platforms that we [13129] want to post to down below. And our [13131] system is essentially once a day going [13134] to set this to run every morning at 7 [13136] checking through this database to see [13137] what new additions we've made. So in [13140] this way, our system is entirely dynamic [13142] and um it never overwhelms the service [13144] that we're posting on. We can generate [13146] 10 or 20 or 50 new posts across all [13148] these platforms and then we can just [13149] drip them out according to some schedule [13150] that we predefined. After we've checked [13153] the Instagram posts, I then upload to [13154] Instagram using their graph API, which [13156] I'll run you guys through before [13158] updating the Google Sheets database. And [13159] we do the exact same thing with the [13161] LinkedIn posts. It's just we need to do [13162] an HTTP request for that. And then the [13164] Facebook posts as well. In terms of what [13166] this looks like live, let me actually [13168] test this puppy out. Let's test this [13170] workflow. See a new form that just [13172] opened. I'm just going to feed in a [13173] podcast right over here to this insert a [13175] podcast get content [13176] endpoint. Second, that's done. As we see [13179] in the background, we are now getting [13180] the transcript via a third party web [13182] service, one of my favorite web [13183] services, Ampify, which I'll cover over [13185] the course of the video. This transcript [13188] is going to come to us very nice and [13189] perfectly manicured. And then after [13191] that, we feed that to this OpenAI [13193] module. This open module's job is [13195] basically outputting a very big um JSON [13201] that contains an index with the number, [13203] the paragraph transcript, some context [13205] and feedback, and then a deep [13206] explanation of what the section that I'm [13208] talking about is along with an image [13210] description that we can use to generate [13211] some JPEGs, and I have some rules down [13213] here. Because we're feeding in a [13215] relatively long transcript to a model [13216] that has a context of 128,000 tokens, [13219] takes a fair amount of time to do this [13220] run. It's usually about 30 seconds or [13222] so. Uh but after that we're we're going [13224] to split it out and continue. And then [13225] as you can see we are now generating the [13227] posts and then adding them. So we just [13228] did Instagram, now we're doing LinkedIn [13231] and finally we'll do Facebook as well. [13234] If we go back to our [13235] database, you can see that we're [13237] actually adding these as we [13238] speak. And so this is populating that [13241] sort of middle ground database which I [13242] like. Now on the back end, now that [13245] we've added these, what we can do is we [13246] can test this workflow pretty easily. So [13248] we're going to upload to Instagram [13250] first. [13251] We're going to post on Instagram and [13254] we're also going to update the Google [13255] Sheets database to tell us that it's [13258] posted. We're going to do the same thing [13259] with [13260] LinkedIn. And LinkedIn, we need an HTTP [13263] request to do. And we're going to add [13264] that there as well. And we can actually [13266] see these live. We'll just wait for this [13268] to finish posting. But if I refresh my [13270] LinkedIn company page, you can see the [13271] post has actually been made. Actually, [13273] I've done two cuz I just did one other [13275] test. But I chose like a pretty friendly [13277] kind of style here. I figured that I [13279] would I don't know some company that did [13280] watercolor styles. Obviously, my actual [13283] brand Leftclick is not like that at all. [13284] But, uh, yeah, just wanted to give you [13286] guys some freedom here. You guys can [13287] generate these images however you want. [13288] Alex Ramos is doing a lot of this stuff [13290] recently, which I find interesting. [13291] He's, um, applying a specific style to a [13293] specific type of content. And then, [13294] yeah, we've now posted them across all, [13296] you know, Instagram, Facebook, and [13298] LinkedIn, which is pretty cool. And then [13299] if we go back to our database back over [13302] here, you'll see that we now have the [13304] posted on fields as done. Um, which [13306] means that we have essentially just ran [13308] through our database and, you know, [13309] posted and dripped these out over time [13311] as opposed to all at [13313] once. Okay, so I've yet to actually [13315] build the system at this point in the [13317] video, but first thing I always like to [13319] cover before I actually do the system is [13320] why am I doing the system? Is the system [13322] important? Does this solve a problem? [13324] Ideally, you would start with the [13325] problem and then you build a system that [13327] solves that problem, not the other way [13328] around. I think a lot of people are kind [13330] of putting the cart before the horse and [13331] they're building the the system before [13333] actually having a need for it. So, I [13334] know for sure that the system is [13336] worthwhile and solves problems because I [13338] talk with people all the time that have [13339] these exact customer problems and you [13341] can sell the system or you could build [13343] the system yourself to solve those [13344] problems in your own business. What are [13346] some issues? Well, AI podcast [13348] repurposing engine solves the content [13350] need. So, it allows us to generate a [13351] large amount of content from just one [13352] long form episode. Allows us to reach a [13354] much larger audience with the same [13357] marginal amount of effort. Zero [13358] additional recording time, which is [13360] cool. We get to maximize the content [13361] investment. And then if you wanted to [13363] sell this, it's why we put this in a [13364] different color here. Um, you know, you [13366] could do so for a$1,000 to maybe $2,000 [13369] service, I would say, just because it's [13370] very simple. It runs in the background. [13372] I'll show you guys a simple input method [13373] to like make all this stuff work and [13374] look hunky dory. And yeah, very [13376] straightforward, not at all difficult. [13377] So that gets us to the more important [13379] question, which is how. And the how is [13380] what we are going to be dealing with in [13382] this video. What I'm thinking of doing, [13383] and I, you know, I got like two or three [13385] nodes in for I was like, you should [13386] probably record a video on this, is [13387] we're going to start with some YouTube [13388] podcast URL input. Okay. So, what I'm [13390] thinking is we're going to have some [13391] form or something, probably a form where [13393] I can fill in the URL of the podcast [13396] that I want to generate content for. And [13398] this is the simplest way I can think of [13399] doing this. Sure, you could do this [13400] automatically. You could track podcast [13402] posts on a YouTube channel, whatever. [13404] But I'm just going to do a form. So, [13405] we'll we'll trigger it manually. Then, [13407] from there, we're going to grab the [13408] transcript somehow. So, there variety of [13410] different ways you can grab transcripts [13411] in actuality of videos. Um, the simplest [13413] is Ampify, but you could also do [13415] something like OpenAI's Whisper. I mean, [13417] to be honest, there's like 500 of these, [13419] so I'm not going to go super in-depth [13420] there. But, um, what I'm going to do is [13421] I'm going to I'm going to grab the [13422] transcript of the YouTube video, and [13423] then I'm going to feed it into a big [13425] content router. And this is where the [13427] rest of my system is sort of going to [13428] come into play from. So, what I'm [13430] thinking is we're going to start. We're [13431] basically going to need like some sort [13432] of GPT call, some AI call. Let's just [13434] call it like a large language model [13436] call. Probably use GPT4 or maybe 4.5. [13439] And then this is going to generate me [13441] some specific like Instagram content. [13443] Okay. I'm going to do the same thing [13445] with, you know, another GPT4 call. And [13448] then I'm going to generate probably like [13450] some Facebook content. As of the time of [13452] this recording, the Twitter API or the X [13455] API, I should say, is uh like 200 bucks [13457] a month or something like that. So, I'm [13458] not going to pay for that um for this [13459] video, and I don't think a lot of people [13461] will either. So, we're just going to [13462] skip Twitter or X for now. But then [13464] we're going to do like some LinkedIn [13466] content. And also, what I think would be [13468] really cool is if we um if I give you [13470] guys everything you need to actually [13471] like clip. So, there's a couple of [13473] platforms out there. One's called Opus [13474] Clip, and there are a few other ones [13476] where basically you can feed in a longer [13478] video. Then you can actually generate [13480] clips from that video um using AI [13483] timestamping and stuff. Now, [13484] unfortunately, these guys don't have an [13485] open API, so you can't actually just [13486] like have your API call and then use [13489] that to generate, but um I'm going to [13490] give you everything you guys need in [13491] order to do so. And I'll actually walk [13492] through the API most likely. So, what [13494] I'm thinking is we're going to use a GPT [13496] and then maybe we'll like generate [13498] timestamps. And for now, we're just [13499] going to like have all those timestamps [13501] be generated with all the rest of the [13503] content you need, maybe like some [13504] hashtags and everything. And then, you [13507] know, you can either feed this into some [13508] sort of flow for an editor or whatever, [13510] and then have it generate a bunch of [13511] stuff. Okay? So, there's nothing really [13513] magic here. I mean, I'm just recombining [13515] components of different things that I've [13516] built before in the past, but I just [13518] wanted to run you guys through what my [13519] thought process is at this point in the [13520] process. This is what I think it's going [13521] to look like. Okay? And everything [13523] sounds nice before you actually get into [13525] the building, but uh yeah, let's start [13527] there. Okay, so I'm just going to use [13529] this as our road map. And then for now, [13531] we're actually just going to jump back [13532] over here to NADN. I have a little NAND [13535] workflow set up called AI podcast [13536] repurposing engine. And so really, if [13538] you think about it, like what is the [13539] first step? Well, what a lot of people [13540] like to do is they like to start at the [13542] beginning and then work their way [13543] forward, but I actually kind of like to [13544] start at the end and then work my way [13545] backward. Now, the end is relative in [13547] this case, but I just I actually want to [13548] go scrape the thing with Apify first. [13550] Like I I want to scrape the YouTube [13551] video and I want to verify or guarantee [13553] that I can actually generate the [13554] transcript. That's kind of the first [13555] thing that comes to mind. like maybe [13556] it's intuition or just because I've [13557] dealt with a lot of these projects but [13558] that usually is the rate limiting step. [13560] It's like, hey, can we get the data that [13562] we are planning on doing all this fun [13564] stuff with? Because if you can't get the [13565] data, you can't really do anything else, [13567] right? So, let's first of all verify we [13568] can actually get the data. So, in order [13570] to do so, I'm on this platform called [13571] Appify. Basically, this is just like a [13573] big marketplace for scrapers that other [13574] people purpose-built that allow you to [13576] do things like get YouTube transcripts, [13578] and they build out all the logic for [13579] you. You don't have to do any of the [13580] math yourself. Um, what I'm going to do [13581] is I'll just type YouTube transcript. [13583] And then there are a variety of uh [13584] scrapers that come up here that say that [13586] they could do our job what we're looking [13587] for. But I'm just going to go to pricing [13588] models, go pay per result, just cuz you [13590] could rent scrapers. You could pay for [13593] usage, but in my case, I like to pay for [13594] the end result. I care most about the [13595] deliverable. So, how much money am I [13597] going to spend per transcript? And [13598] usually what I do at this point is I [13599] just open up two or three of these and [13601] then I just very quickly compare them. [13602] So, that's what we're doing now. Let's [13604] see. Um, this one allows us to extract [13607] one or thousands of YouTube transcripts [13608] fast. Save time and effort. Okay. JSON [13611] XML HTML. The reviews are pretty low, [13613] but this is $750 per thousand. That [13615] seems okay. Let's check out this one. [13617] Same idea, $10 per thousand. All right. [13620] This one, $7 per thousand. All right. [13622] Well, I mean, to be honest, seems like [13623] kind of a wash. They're all about the [13624] same. I mean, they all have one or two [13626] reviews. So, let's just scroll down a [13628] bit and see if I can get some [13629] information on what I get. Looks like [13632] they will return me a big list of all of [13635] the captions. So, that's cool. Um, is [13639] there one that just gives me the whole [13640] thing in one big block? Like that would [13641] be [13642] nice. This would be pretty nice. Yeah. [13644] Yeah. So, include timestamps. No. And [13646] then I just get a giant list. Let's do [13648] that. Yeah. Yeah. Clean transcript. [13650] Okay. I like this one more now. And then [13652] do I just get one big transcript here? [13654] No, I get the time stamps and stuff. [13655] Listen, I think the time stamps are [13657] valuable, but I think that the first run [13658] I'm not going to use that. I'm just [13659] going to use the without the time [13660] stamps. So, let's give these guys a go. [13662] $10 per thousand results. I don't know [13664] if this is going to work, so I'm [13664] actually just going to try it out on a [13666] YouTube video. Why don't I do it on one [13667] of mine? Let's just go to Nick Sarif. [13669] Yeah, let's do the prompt engineering [13671] video. And that's 53 minutes. This one's [13674] 40. I mean, like the longer the video is [13676] probably the longer the transcripts are [13677] going to take, but whatever. For testing [13679] purposes, this is probably fine. So, I'm [13681] going to paste in my own here. No [13683] timestamps. So, I'm just going to get [13684] like the whole thing in one big block [13686] hopefully. And then I'm just going to [13687] click save and start. And so, Appify uh [13689] the way that it works is it'll spin up a [13690] server actually in the background. So, [13692] this is now like a server somewhere on [13693] the internet that has been spun up that [13695] is now running this scraping script that [13696] this other person put together. And I'm [13698] basically going to be charged uh what I [13700] think is 1 cent if my math is is [13702] correct. Um per video that I get the [13704] transcript for. So, obviously very [13705] economical for testing purposes. And [13707] then uh you just pay either a monthly [13709] amount or something else and then um [13710] they bill you. So, in my case, I use a [13712] lot which is why it's at 100 bucks so [13714] far. But yeah, let's see if this one [13716] works. And and of course, sometimes it [13718] doesn't work. I mean, these are scrapers [13719] other people build, right? I mean, this [13721] looks pretty good. All right. Now, yeah, [13722] this looks pretty good to me. So, now [13724] that I have this, let's just export this [13725] result. Let me just see what this looks [13727] like with all fields in a Google sheet [13729] first. Again, my whole goal is I just [13731] want to verify, hey, you know, can I get [13733] the data that I'm looking for? If I can [13734] get the data I'm looking for, everything [13735] else is really easy. So, now I'm going [13737] upload and I'm just going to drag and [13738] drop this. And I'm doing it manually [13740] first and then we'll worry about the [13741] automating part later. We're probably [13742] going have to call some APIs, right? [13744] Okay. So, it looks like it returns the [13746] URL, returns the video title. Okay, [13747] that's cool. And then boom, we have the [13749] whole transcript. How many words is [13751] this? Really? Now I'm starting to think, [13753] okay, there's a lot of words. 8,000 [13754] words. Okay, so let me think about this. [13756] Usually people speak at about like 200 [13758] words a minute, approximately, 150, 200 [13760] words a minute. So if I were to feed in [13764] an hourong podcast, which is pretty [13766] standard. My content's kind of like [13767] that. I'd probably have like 10,000 or [13770] so words. That's a lot of words. Is AI [13772] going to actually be able to deal with [13773] this? So, I'm starting to think, all [13775] right, there are probably some edge [13776] cases here where I might feed in like a [13778] 2-hour long podcast and there's going to [13780] be too many words, too many tokens for [13781] the context window. So, I'm kind of [13783] keeping that in mind. But anyway, I'll [13784] kind of shelf that for now and we'll [13786] cross that bridge if and when we get to [13787] it. Um, obviously, I've shown that this [13788] works. So, what do we actually do now? [13790] Well, um, the way that Appify works is [13792] you can actually just get a web hook [13793] call like when the actor is completed, [13796] you will get a notification. There's [13798] also an API. Um, and I don't think that [13800] Naden has a built-in appy node yet, [13802] right? Okay. So, I'm just going to go to [13803] the Appify API. I'll go Appy API. And [13806] then, you know, API stands for [13808] application programming interface. [13809] Obviously, um if you guys are unfamiliar [13811] with how to use APIs and stuff like [13812] that, I got a bunch of videos where I [13813] walk you guys through what that looks [13814] like. But essentially, what I'm looking [13816] for, so I think I'm looking for run task [13819] synchronously and get data set items. I [13821] think I'm not 100% sure. This looks good [13824] to me. I mean, there's so many dang um [13826] endpoints on the lefth hand side that's [13828] honestly pretty difficult for me to say [13830] for sure what's what. I see a couple [13832] that look similar. Actor tasks, run [13835] tasks synchronously, and then there's [13836] run actor [13838] synchronously. Huh. Not really sure what [13840] the difference is here. Return output or [13843] get data set items. I feel like it's [13846] probably going to be get data set items, [13847] right? All right. Anyway, I I think I [13848] think I'm going to do this now. Um that [13850] I have the API call here. What's really [13851] cool is in NAN, you can just copy all of [13853] this, right? So, I see there's this [13855] little copy button. I'm just going to [13856] click that. I'll go back here and then [13858] I'll go um HTTP request. I'll go import [13861] curl, feed this in. Okay. And it'll [13863] actually map the whole API request for [13865] me. So, it's already done all the work. [13867] All I need to do is I need to swap in my [13869] authorization token. And then I think I [13871] need to do one more thing. I need to [13873] feed in an input right over here. Okay. [13875] So, first things first, I'm going to get [13877] my authorization token. Now, how do I do [13878] that? Well, Appify probably has an API [13881] key thing somewhere, right? So, I'll go [13883] settings, I guess. Yep. API and [13885] integrations right over here. Let's [13887] create a new token. Let's just call this [13888] YouTube temporary cuz I'm just going to [13890] delete it [13891] afterwards. Do I want to limit the [13893] permissions? No, I don't think so. I'm [13894] just going to click create and see what [13895] happens. Uh, okay. YouTube temporary [13897] right over here. Let's copy this. Let's [13899] um let's delete a couple of these cuz [13902] odds are I probably totally forgotten to [13904] delete them on previous videos. So, I [13905] have so many. Anyway, uh I'll paste the [13907] the token right over here. That looks [13909] good. And then if you think about it, [13911] like what do I need? Looks like I need [13913] an actor ID here. [13917] So, where is that going to be? That's [13919] probably, you know, most of the time [13921] actors will put the ID up here. Yeah, I [13924] think so. So, that's probably the ID. [13926] That's usually the ID for most of these [13928] services. So, I'm just going to grab [13929] this, paste this in, and then I need to [13931] feed in the actual website that I'm [13933] going to use, right? So, I don't know [13934] how that looks, but usually on Appify, [13936] they'll show you if you go to JSON, [13937] they'll show you what the data looks [13939] like. Okay, so check this out. Include [13940] timestamps, no start URLs website. So, [13942] what I'm actually going to do is just [13943] copy this. Then I'll go back to my N8 [13945] endflow. Sorry, been jumping around a [13947] lot. And then under body content type, [13949] I'll go using JSON. And then I'll just [13951] paste this in. Okay. Okay. So, this is [13953] fixed right now, right? I'm just feeding [13954] in one URL, but um I'm okay with that. I [13956] just want to test and see if this works. [13957] Let's see if there's any issue with my [13959] syntax or something. Let's see. And if [13961] there are any bugs, I keep all of them [13962] in the video so you guys could see what [13963] my thought process is. Uh it's taking [13965] quite a while to do, which I think is [13966] positive. If I go back to Appify, we go [13969] to runs. Okay, looks like it's starting [13971] the crawler. So, I've actually initiated [13972] the crawler using my API call. Looks [13975] like it is now done. Okay. If I go back [13977] here. Oh, nice. Looks like I got the [13978] data. Awesome. So, I have the transcript [13980] done. All right. So, I mean, that was [13981] really easy, right? Super super easy. [13983] Very straightforward. Why don't I rename [13984] this and then I'll just call it get [13986] transcript via ampify. There you go. And [13990] now I can go back here and if you think [13991] about it, I could actually kind of like [13993] just check this first box. Okay. So, or [13996] check both of these box. Uh, actually, [13997] I'm not done that. I'm just done this. [13999] Let's make this really thick. There you [14001] go. So that step is done. So the YouTube [14004] podcast URL input step now. So if you [14006] think about it now, what do I need to [14007] do? I need to verify that I could [14008] actually get input in. Right? So in NAN, [14010] as you guys know, there there a bunch of [14011] different triggers I could do. This [14012] one's just a test workflow trigger. What [14014] I'm going to do is I'll go back here and [14015] then what I want is I want um just a [14016] form. So N form and I'll go on a new [14019] form event. So what I'll say is insert a [14023] podcast get content. [14027] Hey, this is a AI podcast repurposing [14031] engine. If you insert a YouTube link to [14034] a [14036] podcast, we'll generate a bunch of [14038] formatted content for you and post to [14042] relevant social media platforms. Okay, [14044] what here I will say is YouTube, maybe [14047] podcast. Uh, let's just go YouTube URL, [14049] right? Field type will be what do we [14052] got? I guess we'll just do [14054] text. And then I'll say it's required. [14057] And then I think that should be good. [14060] Yeah. Let's now test [14062] this. Let's uh where was that URL a [14065] moment ago? Oh, here we [14066] go. Let's copy this link. I got it right [14069] over here. So, I'm going to paste this [14072] in now. Insert a podcast. Get content. [14074] Very cool. Going to submit it. Okay, [14076] cool. So, I can get the content, which [14078] is nice. So, now I'm just going to feed [14080] this in as my variable. Uh, I should [14082] probably keep the one clicking test [14083] workflow actually because that'll just [14085] allow me to test the flow really easily. [14086] But anyway, um, as you can see, I got [14087] the form submission. So, what do I have [14088] to do now? Well, now I'm just going to [14089] make this dynamic. I'll go expression. [14091] Then I'll open up this big thing in an [14093] editor. And then right over here where [14094] it says start URLs, I'm actually just [14096] going to feed in one start URL. It's [14098] going to be this YouTube URL. So, this [14100] is the result. This is what it's going [14101] to look like. That looks good to me. [14102] Cool. Automation is mapped. We are good [14104] to go, baby. Everything should be fine. [14106] Awesome. And I think what I'll do here [14108] is I'll probably pin the output as well [14109] just so I can always run this on the [14111] exact same um video. Okay, cool. All [14114] right. So now what we have done is we [14117] have submitted our form and we've also [14120] gotten the transcript. Now the next [14122] question is how are we going to generate [14125] content for Instagram, Facebook, [14128] LinkedIn? Then also maybe some [14130] timestamps or some hashtags or something [14132] like we just need some way to generate [14134] uh video ideas. Maybe we could even use [14136] h genen. That might be pretty cool, [14137] actually. That' be pretty interesting. [14139] Maybe I'll maybe I'll screw around with [14141] that. If you guys have seen the demo [14142] already, you guys are like, "Well, [14143] obviously he's going to use Hey Gen, [14144] right?" But I I'm not at that point yet. [14146] Um, okay. Uh, Instagram content here. [14149] Let's think about this. So, I I need to [14151] now create um I need to have some sort [14154] of way to spin up three or four [14156] different model calls. Then for each [14157] route, I need to produce something. So, [14158] I need to produce some Instagram [14159] content, some Facebook content, some [14161] LinkedIn content, some timestamps, [14162] hashtags, whatever. [14163] I guess what I'll do here is uh do they [14165] have a router here? No, they don't [14168] really have a router. So, I think I have [14169] to use a merge node. Yeah, I think I'm [14171] going to have to do this. I don't know [14172] for sure, but whatever. Let's do um [14175] OpenAI. So, go to OpenAI and then I'm [14178] going to message a model right over [14180] here. Then I have all my credentials [14182] already connected, so I'll just use the [14183] YouTube February 4th one. But, um you [14185] know, if you don't know how to do this, [14186] it's pretty easy. You just go like to [14187] your OpenAI dashboard and then you grab [14191] the API key and then you don't need the [14193] organization ID anymore which is nice [14195] and then just do the connection. So once [14197] I have this, let's think resource text [14199] message model. Okay, I'm just going to [14201] select a model right now and I'm going [14202] to make it like let me check model [14204] context [14205] windows. Um, open a do we have a list? I [14209] just want the one with the biggest [14210] context window right now to be [14212] honest. Okay, we got a we got a couple. [14215] Let's just check. Let's just check all [14217] of [14220] them. Let's just compare all [14224] these context. Okay, there you go. So, I [14227] can see it says context window. So, [14229] 128,000 128,000 [14231] 200,000 128,000 128,000. All right. [14234] Well, I mean, if you think about it, [14235] they're all 128,000. How many tokens is [14237] uh 10,000 [14238] words? 7,000. So, we should actually be [14241] good. I maybe I was a little bit ahead [14242] of myself here. We should be good. I'm [14244] going to use the GPT40 for now and then [14245] I'll figure the rest out later. So, um, [14249] yeah, let's go to that. So, I'm going to [14250] use GPT 40. This is the one. Let's go [14252] back to my init flow and let's just go [14254] 40. Zoom in a bit for all [14258] y'all. What I think makes the most sense [14260] at this point is we should probably have [14263] one model generate a bunch of things to [14266] talk about first based off the [14268] transcript. Then we feed those things to [14270] talk about to other models and then [14272] they'll take those items and then [14274] they'll use them to generate stuff. I [14275] think that makes the most sense. So you [14277] are a helpful intelligent um let's say [14278] content writing assistant that works [14280] with transcripts. What I always do is I [14283] start with a system prompt. Okay, system [14285] is just how the model identifies. And I [14287] find that when you make the model [14288] identify really good at something, it's [14290] very, you know, you're helpful and [14291] intelligent and you work with [14293] transcripts, it's just more likely to do [14294] a slightly better job working with those [14296] things. Next up, I add a user prompt. [14298] So, here's where I actually define the [14299] task. So, you take as input a long [14302] meandering transcript and you identify [14304] the most [14307] interesting, let's say, um, the 10 most [14310] interesting, engaging points. You then [14313] generate a JSON containing those [14316] interesting, engaging points in this [14319] structure. Let's do this. So, now we're [14321] going to go JavaScript object notation. [14324] And what I want to do is I want to give [14326] it um a good structure. So the first [14329] thing I'm going to do is I will say [14331] sections. Let's do that. Now I'm going [14333] to generate an array. Okay, we're going [14336] to start with this array over here. And [14338] I know this isn't like actually proper [14339] proper formatting, but that's okay. Now [14342] what I want is I want another [14345] object inside of [14347] that. Uh I'm sorry I was wrong where [14351] basically I generate this. We're going [14354] to have number and then I'm just going [14356] to put [14358] one. Then over here I'm going to [14363] say [14365] paragraph transcript. [14371] paragraph [14374] of the relevant part of the transcript [14378] goes here. Okay, this is actually [14380] getting really annoying. I thought I [14382] could like make this look nice, but I [14384] can't. So, I'm just going to go to JSON [14385] formatter. It's a lot easier. Just [14387] format it. It'll automatically take care [14388] of this for you. Okay. Uh, cool, cool, [14391] cool. Let's just copy this and we can [14392] paste this back as the intro. So, number [14394] one, paragraph transcript paragraph the [14396] relevant part of the transcript goes [14396] here. So, basically, I wanted to clip a [14398] part of the transcript. Then I also [14399] wanted to like generate some something [14401] else. Description of [14404] section, a description of why this point [14408] is [14409] interesting and some direct and some [14411] ways to make it even better. And then in [14415] addition, I also I love um having AI do [14417] this sort of like meta stuff where you [14419] give it a piece of content and then it [14420] actually takes the piece of content and [14421] does something with it like it provides [14423] critique. It comes up with some new way [14424] to do it better or something. And then I [14425] also want one other thing. I want like [14427] deep explanation and I'll [14430] say a one paragraph write up based on [14435] the transcript section that expands upon [14439] its [14441] points, clarifies any [14445] ambiguities, generally fills in the [14449] blanks. Okay, let's just run with that. [14452] I think this is going to work pretty [14453] well. So, this is going to be the JSON [14454] structure that it's going to generate, [14456] right? something like this. Is this an [14458] optimal or ideal prompt? No, not really. [14460] It's pretty lengthy to be honest, but [14462] that's [14464] okay. Generate 10 [14467] points. The transcript, [14470] okay, is below. I'm going to add another [14473] message. And here's going to be the [14475] user. And what I'm going to do here is [14476] I'm actually just going to feed in the [14477] transcript. So, we can't get it out. So, [14479] we actually have to run it one more [14480] time. So, let me just test this while [14482] this is testing. Uh, basically what I'm [14484] going to do is I'm going to put the [14485] actual transcript right over here. Then [14487] I'm going to have the assistant return [14488] the message afterwards. Let's go. Output [14490] content is JSON. Let me see if there's [14492] anything else I need. Temperature I [14493] always like to set a little bit lower. I [14494] just find it gets kind of too [14497] interesting. And then let's actually add [14499] some Let's put some rules down [14502] here. Write in a [14505] Spartan Conic tone of voice. [14509] Copy the transcript sections exactly as [14512] they [14516] are. Look for unorthodox or interesting [14521] ways to [14532] make. Let's change this to context and [14534] feedback um to make the content better [14536] in the context and [14540] feedback object. Cool. Now, what I'm [14543] going to do is I'm just going to feed in [14544] the transcript right over [14547] here. Let's actually feed in the video [14549] title, too. That'll provide even more [14551] context. Cool. And then, uh let's just [14554] run this and see what happens. This is a [14556] very long transcript, right? It's a long [14557] ass transcript. So, we want to make sure [14559] that the content that it generates is is [14561] good. So because of this, you know, [14563] think about it from my perspective. I'm [14564] at the point where I'm trying to do [14565] this. I need to make sure that I [14567] understand what the video is about if [14569] I'm using it as a test and that I can [14571] meaningfully evaluate the output to see [14573] that it's good and not just like total [14575] make believe stuff. Now, this is very [14577] long. Because it's very long, it's [14578] obviously going to take a while to do. [14579] It's also going to cost a fair number of [14581] um input tokens. So, let's actually [14583] figure out how much this would cost [14585] realistically. Inputs $2.50 per what is [14589] this? per million per million tokens. [14592] All right. Well, that's really not that [14592] big of a deal. I just fed in like uh [14594] 12,000 tokens or something. So, one [14598] 12,000 is 1 uh 10,000 is 1/100th of 1 [14601] million. So, 1/100th of this is 2.5 [14604] cents, I believe. So, it cost me 2.5 [14605] cents a that's not a big deal at [14611] all. Okay, we got the [14617] output. Very interesting. [14621] Very cool. Very cool. I want it way [14623] longer. I don't like how long the um the [14625] the section is right now. I think that [14628] we could do a lot better if it was [14635] longer. Yeah. I mean, these are just [14637] this is just like five [14642] words. Okay. Well, it's very interesting [14645] because I've uh I'm the one that created [14647] this content so I understand what I was [14648] talking about and uh it actually [14650] basically went through top to bottom and [14651] just extracted the various points I was [14653] making. It's like okay point one this [14654] point two that point three that. Make [14656] sure your paragraph [14659] transcript string is [14661] long longer than just one [14663] sentence. Try and capture at least one [14666] whole [14667] paragraph of the transcript. Okay. So, [14670] I'm just going to test this again. And [14672] while it's running, which is going to [14673] take a little bit of time, I'm going to [14675] um go next. And now that I have this, I [14678] think what we can do is we just have [14679] another three or four depending on the [14681] content. And then I'll just I'll paste a [14685] bunch in. So, this might be like [14687] Facebook, this might be Instagram, this [14689] might be LinkedIn, this might be another [14691] one. Then I'll combine them all with a [14693] merge node just into like one big [14695] object. Or hold on a second. Actually, [14697] what I think I'll do, we should probably [14698] add these to a Google sheet or something [14700] instead of just post them, right? Like, [14702] it'd be silly to post all these [14704] immediately. So, we should probably just [14705] add them to a Google sheet. What are you [14706] going to do? Post 10 pieces of content [14708] immediately on all [14710] platforms. You you'd need some some [14712] serious nuts to do that. So, it's [14715] probably not the best move. Um, okay. [14716] Well, let me cross our bridge when I get [14718] to it. I guess for now, what I'm going [14719] to do is I'm just going to generate a [14720] bunch of content. So yeah, you can [14721] actually have multiple routes like this [14723] pretty easily that just stretch and then [14725] as long as you have a merge node at the [14726] end that combines the outputs, it'll [14727] it'll just run them all. So I guess we [14729] could do this. We could post post or we [14732] could just add all these to a Google [14734] sheet or something afterwards. Anyway, [14737] this looks good. Yeah, this is a lot [14741] longer. Cool. Nick introduced the first [14744] major hack. Okay, Chad GBT to write a [14746] story about peanuts. Cool. Cool. Cool. [14747] Um, all right. So where we at right now? [14749] We just generated the transcript that [14751] we've just generated something which we [14753] can use to route the content later. So [14755] that's good. So now we just need to go [14757] through our routes. So I'm just going to [14758] do an Instagram content route first, [14760] then a Facebook content route, then a [14761] LinkedIn content route, and then finally [14762] um yeah, we'll figure that out [14764] afterwards. So why don't I go over here [14766] and I'll click [14767] rename Instagram post generator. Now the [14771] first thing I'm going to want to do is [14772] I'm just going to want to figure out [14773] what the guidelines are for this. So, [14775] what are Instagram post length [14778] restrictions or [14780] something? Looks like we can write 2200 [14783] characters. We caption, we truncate the [14785] caption at 125. We have 30 hashtags. [14788] That seems pretty reasonable. So, [14790] basically what I need to do is I just [14791] need to shorten it and then say write [14792] under 2200 characters. How many words is [14795] that? 300 words. So, I'll just have it [14798] generate me like a short snippet like a [14799] like a paragraph basically. Two [14800] paragraphs or something. That sounds [14802] good. I'm back over here. So, Instagram [14804] post generator. Uh, what I'll do is I'm [14806] going to write a new prompt. Your [14808] helpful, intelligent content writing [14809] assistant that generates Instagram [14812] posts. You take as [14816] input information about a point. I just [14818] realized I'm going to have to change the [14819] structure here because we can't just [14820] feed in all this, right? a section of a [14823] transcript along with some [14825] observations about that section and some [14829] points of [14831] feedback and use it to [14834] generate clean, beautifully formatted [14837] Instagram posts in this [14842] format. We will do Instagram post. We [14846] will then do uh we're only going to do [14848] one [14850] post a clean beauty format Instagram [14853] post in this format. We'll do Instagram [14855] post and then since it's just [14857] one I think we can actually just go [14860] Instagram post [14862] copy then we'll go copy goes here. Then [14865] what I'll do is I will take this and [14867] maybe we'll we'll generate an image with [14868] this as well and then feed that back. So [14870] write in Spartan Lonics and a voice. [14871] Copy any transcript sections. Uh no [14874] let's not do that. [14877] Instagram posts truncate after a [14883] paragraph write an engaging first [14886] paragraph and then context around the [14888] rest of the point underneath that [14892] paragraph. At the end of the post, add [14897] hashtags. Let's say five relevant [14901] hashtags. And then yeah, that should be [14903] pretty good. Just leave that [14906] there. Then I'll [14910] say right over here. Oh yeah. So I can't [14914] actually map this until I figure out the [14915] structure. Right. So basically what [14917] we're going to have to do um if you [14919] think about it is we just need to we [14920] need to loop over all these. So a [14922] variety of different ways you could do [14923] the looping. You could [14925] um uh we're going to have to aggregate [14929] this I [14930] think because it outputs one item as you [14934] see up here and we needed to output like [14936] a more than one item if we wanted to do [14938] the loop automatically. Also just in um [14941] historically uh if we hit all these up [14944] immediately and we just try and do 10 [14946] API calls uh simultaneously it usually [14949] just breaks the NAN flow because we hit [14950] rate limits and stuff. N doesn't have [14952] very good like built-in rate limits. So, [14954] I'll probably do the loop over item [14955] split in batches. If you've never used [14957] this before, the way this works is you [14958] feed in the item, and then what it'll do [14961] is it'll loop over all of that data over [14964] and over and over and over again until [14965] you reach the last item, and then it'll [14967] go down the route. So, yeah. Um, I think [14972] what I'm going to do is this replace me [14976] thing is about to be a replaced. [14979] So, I just want to make sure I can [14980] actually feed multiple routes into this. [14983] Can I? Does it work? Yeah. Okay, I [14986] should be able to do this. Cool. This is [14987] going to be a very complicated looking [14989] um system. Sure, it's going to sell well [14992] uh on YouTube anyway. So, I'm going to [14994] loop over now. And what I need to do in [14996] the loop over items uh node is I need to [14999] feed in just this array. So, how do I [15002] feed in just the array? Uh well, as [15004] input to this loop over items node, I'm [15006] going to use the the split out. Yes, we [15008] need this. So, the fields that we're [15010] going to split out are going to be this [15012] sections array. We feed in the sections [15015] array. If we test this now, we should [15017] get 10 items. 1 2 3 4. Perfect. Now that [15021] we have these 10 items, we can actually [15022] feed that output into the loop over [15023] items. So, we're going to split out [15025] these 10 items. And then we're going to [15026] go one at a time, basically calling all [15028] of these APIs. Okay. Now that we've kind [15031] of figured all that stuff out, awesome. [15032] We can actually get going with the [15034] Instagram post generator. Let's click on [15036] this again. And then well we need to [15037] execute the previous nodes if we want to [15039] get all the data. So we have those 10 [15041] items. Now what am I going to do? Well [15043] I'm just going to feed in the specific [15045] item. So I will say transcript going to [15048] feed this [15049] in. Um oh we need to index the item now. [15052] Uh the reason why we have to index the [15053] item is this just doesn't know which [15054] item we're specifically referring to. [15057] What we're going to have to do is we're [15058] going to have [15060] to going to grab this first. [15065] It's not able to get the [15068] specific one, is [15070] it? I don't know. I guess we'll find [15072] out. Way that Naden does their items is [15077] um always sort of interesting. I did [15080] execute the previous node, so I'm not [15081] getting this preview, which is annoying. [15083] Let me go back over [15088] here. Yeah. [15091] Okay. Yeah. So you can uh it's just when [15094] you use the split in batches sometimes [15097] there's a problem with um the way that [15098] it's rendered. Anyway, uh cool. So we're [15101] just feeding in these variables directly [15103] one at a time, right? Because we only [15105] receive one item as an output. Cool, [15107] cool, cool. So uh awesome. Well, let's [15109] just give this a try and let's see what [15110] happens. All right. I don't want to feed [15111] in all 10 items. So what I'm going to do [15113] is I will just test this out on one [15116] item. So, I think if I just click test [15117] tab, we're only going to run this once, [15118] not 10 times, which is [15121] nice. Okay. Unlock the full potential of [15123] GBD models. My top three prompt [15124] engineering hacks from my journey since [15126] 2019 with GBD2. Leveraging these tools [15127] in every business. I've gathered [15128] insights that will transform your [15129] approach ready from your tool to [15131] autonomous team player. Let's dive in. [15132] No, I do not like this. I think this is [15134] written pretty poorly. [15138] So, and [15140] points, no leading [15143] questions, [15146] emojis. Write like [15149] a business professor talking bluntly to [15154] his students. Let's try this one more [15156] time. [15162] except [15163] simpler. Favor words with fewer [15169] syllables. Cool. Let's try that one more [15175] time. Okay. I mean, this looks [15177] substantially better already, which is [15178] nice. Cool. Um, now we've generated an [15180] Instagram post. We can do uh a couple [15182] things with this if you think about it. [15184] We could also like generate an image [15186] with this. So, I don't believe we're at [15188] the point where the image generator that [15190] is being used is the new GPT4 image [15192] generator. I think we're still using [15194] Dolly. What I'm going to do though is [15196] I'll see if I could feed in the previous [15200] description, an image that represents [15202] the [15203] concept. Let's see if we generate an [15205] image. What's going to [15208] happen? See how trash this [15211] is. There are a variety of other things [15213] that we could do as well. Or we could [15215] like generate some branded stuff. Cute [15217] little kawaii anime like cartoon [15220] characters or something. That'd be [15222] sweet. Um, unfortunately I can't just [15224] use the I can't use the um OpenAI API [15227] like the awesome one. Yeah, I'm not I'm [15229] not a fan of this stuff. It's kind of [15232] trashy. Um, an [15235] image handdrawn cartoon [15239] style should have one character in the [15242] middle. [15244] That's all. Let's just try that. My [15247] prompt engineering has gotten [15250] substantially simpler over the course of [15252] the last few months. Let's put it that [15254] way. Uh unfortunately getting spoiled [15257] talking to these extraordinarily smart [15258] models. So when you talk to a dumber [15260] one, uh takes a little bit of time to [15262] get up and [15265] running. Okay, let's view this puppy. [15268] What are we looking at here? hip H [15270] Spanishpanic [15273] speakers. Um [15276] h handdrawn cartoon [15281] style. Let's just say handdrawn [15285] um [15288] cartoon. And let's go over here and have [15290] this just generate one additional [15292] object. [15299] Short image [15305] description. A one-s sentence [15310] description of an [15313] image that illustrates the concept. The [15316] description must have one simple [15319] character like a [15321] bunny or an animal. [15326] and B be catered [15329] to kids audience to a younger [15332] audience. Let's do that. Looks good to [15335] me. So now I'm just going to have to [15337] test this and I'm actually going to have [15338] to produce the outputs here because I'm [15342] then going to need to split them out and [15343] then loop them over the items and then [15344] do my my post generation, which is nice. [15346] Give that a try. [15349] And this done route I'll probably end up [15351] putting underneath to be honest because [15354] this is going to be pretty chunky. Uh [15356] maybe I should just do all of this here. [15358] Yeah, you know what? I'll probably do it [15360] all over here actually. We'll have an [15361] Instagram post [15363] generator, open AI image. Or maybe we [15366] should just generate the open AI image [15367] before the Instagram post generator now [15369] that I'm thinking about it because then [15370] we can just use the Instagram post and [15372] all the other stuff that we need to [15374] do. H anyway, let's see how that goes. [15378] Just testing these one by one [15380] here. And then let's now test this. Oh, [15385] sorry. I used the wrong one here. What [15386] we want is we want um loop over items. [15389] And we [15390] want Oh, yeah. Sorry. I I need one more [15393] piece of instruction. No [15397] text. Description should should never [15400] talk about text. [15403] Okay. All right. Uh so what are we going [15406] to do here? We are going to handdrawn [15408] cartoon [15409] style. Then we're going to feed this [15412] in. Maybe we'll [15415] go colorful [15420] watercolor. Colorful soft watercolor [15424] of a bunny stacking colorful blocks. [15427] This isn't going to be ideal because [15428] it's going to say a bunny um with text [15431] in it. That's not really what we want [15433] the image to do. [15436] Let's turn on respond with image URLs. [15438] By the [15439] way, can we go [15441] style hyperreal and dramatic? No, we [15443] want [15445] natural. I just made some changes. So, [15448] um, that looks pretty cute. Yeah, I [15450] think we could probably do [15452] that. And then what we want for [15455] quality, standard or HD? H, no, we'll [15457] probably go with standard. And then we [15459] want resolution. Got a couple of [15461] different options here. Let's go [15462] Instagram post [15463] resolution 1080 x 1080. So 1024 x 1024 [15467] is reasonable. Like it's not going to be [15469] uh as pretty, but I think it's going to [15470] be pretty good. And yeah, this one has [15471] text in it, but like imagine we're just [15473] going to get rid of most that text in [15474] future ones. So that should actually be [15476] pretty fine. Maybe you have some branded [15478] channel that does something like this or [15480] I don't know. Uh like if you think about [15482] it, there's like three or four major [15483] styles that you could have AI generate, [15484] right? You could do like some sort of [15485] handdrawn stuff if you want to be [15486] serious. You could do if you just check [15488] out like Alex [15489] Hormos's Let's check this out here. Hold [15492] on. Hold [15495] on. Yeah. Stuff like this. Right now, [15498] he's using GPT40 image to do that. But [15500] as as I'm sure you can imagine, if you [15502] just have some style like this and it's [15504] like a standardized style, then you can [15506] generate like an almost infinite amount [15507] of content with a podcast clip. There's [15509] another one in Simpson style. I think [15512] he's publishing a ridiculous amount of [15513] content. I mean, this is like a week ago [15515] and he is like 50, right? So, that that [15517] would probably be my thoughts. That's [15518] probably how I'd do it. Since we're [15519] using Dolly, it's not going to be as [15522] clean, but I imagine we're probably [15524] going to have access to that API pretty [15525] soon. Okay, so Instagram post generator. [15527] And then here, we will call this [15529] generate image. Now, this will also [15531] return an image link. So, if I generate [15534] this new one now, we should have an [15535] image URL, right? The image URL we can [15537] just feed directly into the Instagram [15539] post node. We're feeding in some [15541] additional parameters here. So, it's [15542] going to change how long it takes to [15544] generate. Looks like it did some [15546] revisions. Oh, that's cute. I like this. [15549] Yeah, nice. Okay, we have everything. We [15551] can actually go to I think what we need [15553] is the Facebook graph API. Could be [15557] where we make a post. Yeah, most likely. [15560] So, okay. I'm probably going to have to [15562] muck around with this for a bit before I [15563] can figure out [15566] exactly. And I think in order to do [15569] this, the credential that we set up, we [15571] have to get an access token which we [15572] generate from something else. So it's [15574] going to take me a minute to figure that [15576] out. And I'm just gonna I'm just gonna [15577] allow that to be the last thing that I [15580] do. From here though, as you can see, we [15581] have a pipeline that we can use to [15582] generate everything else. So now I just [15584] duplicate these. Right. So Instagram [15586] post generator. Very cool. Let's go over [15589] here and then let's go LinkedIn post [15592] generator. Then down over here, let's go [15594] uh what else did we have? Facebook post [15596] generator. [15598] Now we just have to like very lightly [15599] change the parameters [15601] um the prompt [15604] basically. So instead of Instagram post, [15606] but we'll say Facebook [15609] postcopy, Facebook [15611] post, then no [15614] hashtags, Facebook post. Let's say [15616] Facebook postcopy [15627] guidelines. Okay, this is what looks [15629] like a landscape photo. So we're going [15631] to have to generate a slightly different [15632] image size for that. [15634] Okay. And then I don't really think [15635] there's any text restrictions. You [15637] probably go pretty long. Um, this one is [15639] not wired up right now, which is why [15641] we're getting that. So, let's go [15642] here. Oh, sorry. Was this the LinkedIn? [15645] Was I just editing that on the LinkedIn [15646] one? Probably. Oh, yeah. My bad. Uh, [15650] well, let's go LinkedIn post. [15653] Copy. LinkedIn [15657] post. And then this one here is [15659] LinkedIn. Anything Anything else here [15661] say Instagram? I don't think anything [15662] else here says Instagram. We're probably [15664] good. LinkedIn post. Uh, okay. Well, [15667] what's the LinkedIn post guidelines? So, [15668] LinkedIn post. First of all, let's check [15671] the dimensions. So, it's widescreen as [15674] well. Let's see when it [15676] truncates. All right. So, honestly, this [15678] is very similar to Instagram. [15680] Realistically, I'm just not going to [15681] make any adjustments to this. This is [15682] going to be a good nugget that anybody [15684] could use to build out like more nuanced [15685] or higher quality systems, I would say, [15687] by mucking around with the prompt, [15688] making it a little bit better. And then [15690] here, we're going to generate a LinkedIn [15692] image. [15693] Um, just because this doesn't allow you [15695] to change the [15697] uh have multiple of the same titles, I'm [15700] just going to like add some acronyms [15702] here like Facebook image and stuff just [15703] so that we can have different um titles [15705] on them. This LinkedIn image is not [15707] going to be at 1024. Uh, we're going to [15709] have to make it like wider screen, [15710] right? So, sorry, I've already forgotten [15712] this one. LinkedIn post [15715] resolution. This [15718] is Well, actually, we can we can do [15720] both. We can do 1080 x 1080 pixels. So, [15722] actually, I'm just going to do 1080. So, [15723] yeah, I'm just going to do square. I [15725] think Facebook was the one that was [15726] wider screen, [15728] right? Yeah. So, I'm going to go 1024 x [15730] 1024. That looks fine to me. It was the [15732] Facebook one that I think was different. [15736] It was [15737] 1792. So, this is about as wide as we [15740] can get. It's not the best, but I think [15741] we'll just deal with it for now. Okay, [15744] I'm going to do that here. Okay, cool. [15746] So, now we're basically going to be [15747] generating three. And then we need to [15750] change this. Go LinkedIn. Do this. [15753] Create a post. Very cool. We got to add [15755] credentials and stuff. I'll deal with [15756] all that stuff afterwards. Um, I think [15758] that's I think that's basically good, [15760] honestly. And so, if you think about it, [15762] what we're going to do is one, two, [15765] three. We're going to have to do after [15767] this, we're going to have to merge all [15768] the outputs of the stuff together. By [15771] merging the outputs of all the stuff [15772] together, um, we're going to get stuff [15775] that we could put in like a Google [15776] sheet, for instance. Actually, maybe [15777] maybe instead of us um doing the posting [15780] directly in here, we should add them to [15781] a queue. Hey, because if you think about [15783] it, like yeah, what are we going to do? [15784] Post all 10 posts immediately? No, we [15786] should we should just add them to the [15787] queue. So maybe we should do the posting [15789] and stuff like that in a different [15790] scenario or a module or workflow, I [15792] should say. Maybe for now what we [15795] do so we just merge all [15798] these merge all these outputs. We'll do [15801] three [15803] inputs. Thank you kindly. And this is [15806] number three. And now that we're merging [15808] these, basically what I'm thinking is we [15810] make a database of posts for all these [15812] different platforms and then every day [15814] or whatever, just go through and post. [15816] That way they'll be relevant to the [15817] previous podcast. And that logic is [15819] pretty simple to put in place and [15820] probably makes the system a lot more [15822] valuable cuz if you just have a fragile [15823] system where you put a form thing in and [15825] then it just forces you to post 10 [15826] times, I think that'd be kind of dumb. [15827] No, no other way to like verify that the [15829] posts will always be different. Yeah, I [15831] think this is what people want. Okay. [15832] Anyway, there's a variety of different [15833] ways you could do things here. We could [15834] just we could just append. Oh, is it [15835] going to have to execute all the [15836] previous ones? Right, it will cuz we [15838] haven't generated the images yet. So, [15840] let's generate image three. That one's [15841] going to take longer cuz it's bigger if [15843] you think about it. The other ones [15844] were,024 by,024. This one was like 17 [15847] something. So, I think that's like [15848] mathematically it's not like a 1.7 [15851] times, it's like a three times or [15852] something. Um, just because there's so [15854] many more like total pixels in the [15856] image. Okay, that's the LinkedIn post [15858] generator. Let's see what an example of [15859] this appending looks like. We should [15861] just get an object with like all of the [15864] LinkedIn, Instagram, Facebook, [15867] right? Okay. So, the output is we get [15870] three items. Yeah. I don't like the [15871] three items being all here because if [15874] you think about it, what am I going to [15875] do with these three items? I got one [15876] item here, one item here, one item here. [15878] Well, I don't want three items. I just [15879] want one item as an output. And then I [15880] want the one item to be like Facebook [15882] post, Instagram post, whatever. And then [15883] I can map them a lot easier, right? So, [15885] I'm pretty sure we're going to have to [15886] do the combine. I think I just want to [15887] combine all of them. [15890] Oh, can I only do [15893] two? I don't know what this last item is [15897] here. Yeah, it doesn't look like I can [15899] actually do three, unfortunately. Yeah, [15901] sorry. We could just use a set. That'd [15903] be way easier. Let's go set here. We're [15906] going to take in the previous image. [15908] Okay, I'm just going to do it all in [15910] JSON. So, I'll say image [15914] URL. Image URL is going to be right over [15916] here. Then right over here in the [15919] middle, um, we'll have the post body. It [15923] looks like I'm still outputting an [15924] object called Instagram post copy. [15927] Trash. That's not very good. Should [15929] probably go back here and then adjust [15931] that, [15933] eh? [15935] Yeah. Oh, you know what? I just left it [15937] as Instagram [15940] everywhere. My bad. You guys probably [15943] all saw that and were like, man, Nick is [15944] such a [15948] Um, it's true. I am. But the best part [15952] of it all is you can make [15954] mistakes. Just a little happy accident. [15956] Then you can go back here and you can [15957] fix it. I think I need to change the [15959] LinkedIn um object as well, right? Okay. [15962] No, I did. All right. Anyway, that's my [15964] happy accident. Cool. So, now that we [15965] are editing the fields, what are we [15966] going to do? We're going to have this [15969] actually be Instagram post [15972] copy. So, I'm going to feed that in. If [15974] you guys aren't sure why I'm doing this, [15976] um, basically I need a way that I could [15978] reference this later [15980] on. Just going to call Facebook post [15983] copy. It's not going to do anything [15984] right now, but that's okay. And then [15986] here we'll say [15988] um [15990] platform and here we'll go like [15993] Facebook. Okay. So I'm basically [15996] remapping stuff here so that I have the [15998] copy, the image URL, the post body, and [16000] then the platform. So now I'm just going [16003] to copy this [16004] Well, I guess I can't copy just yet. I [16006] have to copy the whole uh node. Then [16008] right over here, I'm just going to [16009] delete this. And then I'll connect this [16011] to my edit [16012] fields. Then now what I'll have [16015] is I just deactivated that, but um it's [16019] okay. We're going to go platform [16021] LinkedIn. That should say LinkedIn post [16025] generator, right? LinkedIn postcopy. [16030] Doesn't look like I can get that path [16032] back to the node cuz it's under Oh, [16033] right. There you go. Okay. So, we'll [16036] have the image URL, the post body, the [16038] platform here. That's good. Let's uh [16040] reactivate that. Then up top, let's copy [16043] this. Paste this over [16046] here. Feed this in. And then, if you [16049] think about it now, what are we going to [16051] get? We're going to get [16052] [Music] [16053] um the ability [16056] to [16059] automatically determine in subsequent [16063] nodes why [16065] uh sorry which platform the data is [16067] coming from. So, I'm just going to call [16070] this set [16073] Facebook. And here, I'll call this [16077] set LinkedIn JSON. And here, I'll call [16080] this set IG JSON. Okay. So, now what's [16084] going to happen if we append these [16085] together? Oh, I think I need to do one [16087] thing. Um, invalid JSON. Odd. H. Well, [16092] let's do a little bit of [16093] debugging. Okay. Uh, we're getting [16095] invalid JSON because the new lines. [16097] Yeah. So basically what we're going to [16099] have to do is we're going to have to [16099] remove new lines. So we could just [16103] replace all [16106] instances. Can we just do new [16108] line like a reg x with a new line or [16111] whatever? Or we could just have it not [16112] generate any new lines in the initial [16114] data. Yeah, that probably makes more [16116] sense, [16117] right? Like one, it'll be easier, but [16120] two, uh, it'll make sure that our source [16122] data is as clean as possible. So, why [16124] don't I go over here and then under [16126] rules, we'll [16128] say generate your new lines as back [16131] slashn characters instead of full line [16135] breaks. There should be no actual line [16139] breaks, only n [16143] characters. Cool. This will work 90 [16145] whatever% of the time. It's not going to [16148] be perfect. Sometimes the model will [16149] probably misinterpret it. Maybe one out [16151] of 100 or something like that. or maybe [16153] one out of a thousand. Realistically, [16154] these models are getting pretty smart. [16156] So, [16159] still. Okay. So, now if I go over here [16162] and I'm I'm just going to retest this [16164] step because I want it to output the [16165] thing with the known new line. Let's [16167] just see what it looks like. Cool. We do [16169] have the Awesome. Awesome. All right. We [16172] should be good just to test this now. [16173] So, it's going to run three [16174] simultaneously and then it's going to [16176] run these. I guess not simultaneously, [16178] iteratively, which is nice. So, we're [16179] going to minimize the likelihood of us [16181] calling one of the APIs and then [16182] screwing it all up. Then from there, we [16184] should be able to do our node. Uh, looks [16187] like we were not able to service the [16189] request. Why would that be? [16191] H could it be an API [16194] call? Maybe it got rate limited. [16197] Probably got rate [16199] limited. Images take way more of your [16201] rate limit than um anything else. So [16204] generally good just to the second that [16205] you have a working thing pin the [16207] response so you just never have to do [16209] this again. Also if you think about it [16210] how much more time is it taking when I [16212] do it? It's taking a lot more [16214] time. So looks like it had an error [16217] while processing my request. H not [16219] entirely sure where that error is coming [16220] from. It probably is a rate [16223] limit. Let's go open AI E3 rate limits. [16227] See how many of these puppies I can [16229] generate. Do I have coins or tokens? [16234] and I go doll [16237] E. Go images [16244] maybe. Let's go per model. Let's just [16248] see. Dolly 3 [16254] here. No, I should be good across the [16257] board. That's way more images than I [16259] need. I can do 10,000 images a minute, [16261] right? That's a lot. So, I don't know. [16263] Maybe I'm misformatting the data. Maybe [16266] I can't feed new lines in or something [16267] like that. Let's see. What is this? A [16270] bunny stacking colorful blocks labeled [16271] markdown CSV, XML, and JSON. No, that [16273] looks good to [16274] me. [16276] H. Too big. Could be too [16279] big. Or it could also just be a service [16284] outage. That's how I um typically do my [16286] debugging. [16289] Yeah, looks like there are some issues [16291] recently with Sora. I don't know if [16293] those issues extend back to me. Okay. [16296] Well, let's just try another module or [16298] another node then and let's see if it's [16299] the dolly or if it's just um my current [16302] approach with the Facebook node because [16304] the Facebook node is the only one that's [16305] had the issue that I've seen so far. So, [16306] I'm starting to think, hm, is it the [16308] Facebook node or is it just um Dolly in [16312] general? Fact that I haven't got an [16314] error yet, it's a pretty good sign that [16317] it's just the Facebook node. If it is [16319] the Facebook node, just got to ask [16320] ourselves why. Okay, no, it's not. It's [16322] actually just all of these dollies. Um, [16324] interesting. So, I'm not really sure [16325] what's going on with the image there. We [16327] saw that it was working a moment ago. [16329] Unfortunately, when you are working with [16330] the microservices economy, there are [16332] going to be situations like this with [16334] pretty inexplicable errors. Let me [16336] think. How do we proceed with this build [16337] regardless of the fact that there's some [16339] issue with Dolly? Well, I think what [16341] we'd probably want to do, hold on, let [16345] me change my API [16347] key just before I proceed. Really [16350] just throw it away. What we probably [16353] want to do is we probably want to go [16354] through the execution history and then [16355] we can just pin the outputs and that'll [16356] allow us to continue regardless of the [16359] fact that one of the APIs that we're [16360] using might not be working. That's [16362] typically what I do. So, we just changed [16364] my credential. Haven't got an issue yet. [16367] Spoke too soon. So what I'm going to do [16370] is I will go to my execution history. [16372] Let's see the last good [16378] execution. Looks like the last good [16380] execution was not here. Let's do this [16383] one. What is the output of this? Looks [16386] like we have JSON that looks like that. [16388] So I'm actually just going to copy this. [16390] Okay. I just want everything. Can I just [16392] copy [16395] everything? Yeah, that looks good. Now [16397] that I have this, um, why am I doing it? [16399] Because I can actually go here. Uh, [16402] uh, can I just, oh jeez, I don't [16404] actually believe I can pin the output of [16406] a broken node. Okay, so realistically, [16409] what I have to do is delete this. Go [16411] back here, pin this like this. There you [16414] go. Then go over here, pin this like [16417] that. And go over here, pin this like [16420] that. Okay, I'm now believe I could set [16424] everything else except for that pinned [16428] output. So I've just deleted the entire [16430] thing. So I I have to go through the [16431] whole generation again unfortunately. [16433] But just part and parcel. And now um [16437] that we will have dealt with that we [16438] could actually merge the outputs and [16440] continue. [16442] I think when debugging it's important [16444] just to like keep a level head and note [16446] that um you know most of the time it's [16449] your fault you've done something wrong [16450] but there are some situations that are [16452] just pretty inexplicable and I wouldn't [16453] allow that to slow down the rest of your [16455] build. Like I'm kind of in my head I'm [16457] thinking there's a probability that this [16458] is some inexplicable issue that I have [16461] no control over. I could if you think [16464] about it just stop developing and then [16465] be like well I'm done with the system. [16467] This sucks. I'm not going to work on it [16468] and get really frustrated, but uh I'd [16470] rather continue [16472] developing a different part of the [16474] system and then I can always circle back [16476] to that at the end. I think that's an [16478] important principle of just systems in [16479] general. If something isn't working, [16481] take a breather and then focus on a [16483] different section for a little bit. Then [16484] you can always double back to that [16486] initial section that was causing you [16487] problems after you've sorted out the [16489] rest of [16490] it. Okay, so transcript is currently [16492] being pulled. I'm going to go back to [16495] YouTube transcript ninja. Looks like [16497] that will have just wrapped up. Cool. [16499] Looks like it did. We're now feeding it [16500] into OpenAI. The [16503] transcript currently being [16505] generated. Maybe it's just an OpenAI [16508] problem though. The entirety of OpenAI [16510] is down. That would be pretty rough. We [16511] may maybe we've been hacked. Got some [16514] spyware competitor that's come in and [16516] just destroyed the servers. No, they [16519] didn't destroy the servers. Okay. Uh All [16522] right. What in item zero contains valid [16524] JSON? Exactly. [16528] I'm not seeing [16529] anything. Looking pretty good to me, my [16532] man. So, looks like we have some issue [16534] here where we do not have valid JSON and [16537] JavaScript object notation. Just opening [16540] this up here. And this [16542] looks right. It's a new line thing [16544] again. Uh, why are we getting new lines [16548] here? It's not giving me any new lines. [16550] Oh, what's [16552] this? We have a quote. [16556] No, we don't have a [16559] quote. [16561] Odd. All right. Uh, well, I guess I am [16564] going to have to replace all Can we just [16567] replace all special curs? No, that [16570] doesn't count. [16571] Um, could replace all [16579] uh I don't know if I could just [16584] do a [16586] backslash. Could I? Let's see. So, [16590] uppercase any occurrences of blue or [16592] car. So, what do we have to [16595] do? I think we got to use the G flag, [16598] right? [16605] back [16608] slashn. [16610] Then could I just go [16613] space? Is that going to work? I don't [16616] actually know this going to work. [16617] Probably not. Oh, yeah, it did work. All [16618] right. So, I just replaced back [16621] slashn with a [16624] space. So, basically, instead of these [16626] new lines, um, we just have a space. All [16628] right. Well, that's fine. I guess I'm [16629] just going to have to do this for [16631] everything. Oh [16634] well. Glad that you just throw some [16636] stuff at the wall and have it stick, [16638] huh? Me, too. Okay, so let's do that. [16640] Let's do that. Let's do that. So, this [16643] test is [16644] done. Let's just see this [16647] test. Oh, and I realize I should [16649] probably not be doing this line by line [16650] by line. I should probably be doing this [16652] all um at once. Okay, looks like we got [16655] the same issue here. So, what's going on [16659] now? The fact that we just can't get [16661] good JSON is worrying to [16663] me. Okay, it's simple. We just didn't [16665] have a comma [16668] here. Cool. We got that. And then what [16671] about over here? Do we not have a comma? [16672] No, we have a comma. Awesome. So, I'm [16673] just going to test the merge node now. [16674] We should be good. I mean, we we we're [16676] pinning the outputs of these three, [16677] right? So, it's just going to skip over [16678] this and then set the JSON. I'm going to [16681] run this. Skip over this. Set the JSON. [16683] Cool. All right. So, what does this [16684] actually look like in practice? We have [16685] three. We have image URL, postbody, [16688] platform, Instagram. Then we have [16690] another one that says platform LinkedIn, [16691] another one that says platform Facebook. [16693] So now you're probably wondering why the [16694] hell why the hell are you doing all [16695] this? Well, now hopefully it makes [16696] sense. Um because we have these three [16698] items and they all have different types, [16699] we can actually match the column based [16701] off the type, and then we can add it to [16702] a Google sheet. So I'm going to go [16704] sheets and I'll go add row to or append [16707] row to [16708] sheet. Um, air table is actually better [16710] to use um for stuff like this just cuz [16714] uh otherwise um rate limits and stuff [16717] can be pretty rough. Let's just go new [16720] sheet over here. What I'm going to do is [16722] I'll call this uh my AI podcast [16725] repurposing [16727] engine content calendar. Maybe we'll [16730] just call this our content. Ah, let's [16731] just do that. Okay. And then what am I [16734] going to do? Uh well, if you think about [16738] it, we can actually map this, [16741] right, with an expression. Yes, we can. [16746] Perfect. So, so now what I'm going to do [16748] is um inside of my Google sheet, right, [16750] which we've now done this, done that, [16752] done that. We haven't done that last [16753] part yet, but I've done this, done this, [16755] done this. We're now just combining all [16757] these. Um if you think about it, what I [16760] need now is I just want like content. [16762] So, what I'm going to want is um I'm [16764] going to need some sort of [16768] like date added. Then I'm going to need [16771] post body. And then I will go post [16773] image. This isn't going to be perfect [16776] because sometimes you're going to have [16777] to download the image first, but we can [16779] deal with the downloading um on some [16780] platforms later. And then I'm going to [16782] go Facebook. I'm going to add another [16784] sheet which is going to be called [16786] Instagram. [16790] And then finally, we'll have one called [16792] LinkedIn. Okay, we'll paste all these [16794] three in. All right, so now uh if you [16797] think about it, the document, sorry, the [16799] document that I'm going to do is fine. [16801] Uh the document is just going to be this [16803] document. So I can actually just grab [16805] the ID in the document, which is [16806] positioned up here. And then I can just [16808] pop that in. The sheet though, the sheet [16810] is what's going to change depending on [16811] the platform. Okay, so the sheet, if [16814] it's [16815] Facebook, we'll feed in Facebook. If [16817] it's Instagram, we'll feed in Instagram. [16819] if uh it's LinkedIn will feed in [16822] LinkedIn and then it'll automatically [16823] find the specific one to do. Now there [16826] are three columns. There's date added, [16827] post body, post image. Post image post [16830] body is right over there. Post image is [16832] the image URL. Okay. Then the date added [16835] uh is just going to be date. So we [16837] should just be able to go Can we go [16839] dollar sign now? Yeah. I don't really [16841] like the way that that's formatted, [16842] though. So can we format this [16844] differently? Uh let me see. [16852] Hm. Let's see here. [16858] Um, how should we format [16861] this? Can we do day day month year year [16865] or should we go year year year month day [16867] day? We do that. Oh. Oh, the formatting [16871] is a lot easier than I thought already. [16873] April 9th, though. Do we just [16876] go DD, I [16880] guess? Yeah, we'll just go DD. That [16882] looks good. Cool. Um H. Yeah, that [16885] should be okay. So, let's test this [16888] now. Oh, boy. That's a fat ass [16891] transcript. Wrong one. My bad. Uh, what [16894] did we have there? We had Instagram. [16895] Okay, cool. So, we just had three [16897] Instagram posts. [16899] And should we have three Instagram [16901] posts? I don't think we should have [16902] three Instagram [16904] posts. All right. So, I feel like some [16906] some error occurred there, right? [16909] Because we should have three items each [16911] with their different platforms. But what [16913] ended up happening? Looks like we fed [16917] all of these just to [16919] Instagram. So, this is Instagram right [16921] now, but it should be dynamic, right? It [16924] should change depending on what we are [16925] putting [16926] in. Um, well, that's annoying. All [16929] right. So, slight issue with the [16930] recording there. Um what ended up [16932] happening was for whatever reason when I [16934] was pumping the data through that [16936] dynamic remapping flow with the merge uh [16938] just it just didn't work. I think it has [16940] to do with the underlying way that the [16942] nadn node functions. So anyway [16945] completely unrelated issue but my [16946] recording just stopped so I had to [16947] restart this. Basically what I ended up [16949] doing was I just hardcoded the logic in [16950] the sheets. So if I go to the first [16952] sheet for Instagram so you can see here [16954] it is hard coding the sheet of [16956] Instagram. Okay. If I go to the second [16958] one here for LinkedIn, it's hard coding [16960] the sheet for LinkedIn. And for the [16962] third, if I do Facebook, then it's hard [16964] coding the sheet for Facebook. Is this [16965] his most elegant solution? No, not [16967] really. I'm kind of annoyed that I have [16968] to do this to be honest, but is what it [16970] is. And I don't really care too much [16971] about the elegance of a solution. I care [16972] more about just like whether or not it [16973] works. So, testing this now. Going to my [16976] sheet, which is over here. If I go to [16977] the Facebook post, um, as you see that [16979] one populated, then Instagram and [16981] LinkedIn, because this is happening [16983] sequentially, not all at once, you know, [16984] we got to wait a little bit. LinkedIn [16985] there. Then finally, Instagram over [16987] here. And uh yeah. Yeah, this is more or [16989] less how I how I went through and I [16990] solved the flow. And then at the end [16992] here, let me just recreate this for you [16994] guys. Now that I'm done it, I I want [16996] some sort of user input. I want some [16998] sort of, you know, experience where the [17000] person that submitted the form knows [17002] that the form is good to go, right? So [17003] in NAN, you can actually add this over [17007] here as a form ending. So you can [17010] actually generate a form ending. You [17012] could say, "Congratulations, your [17014] content has been produced." Then I'll [17016] say, "Check your content calendar for [17020] the specific posts." Then maybe I'll [17022] even link the content calendar [17025] here. You know, you can imagine a client [17027] experience that'd be a lot simpler and [17029] easier for them to see. Okay, cool. So, [17031] yeah, that's the flow in a nutshell. Um, [17033] the thing is this is just the first part [17034] of the flow. He was like, "Are you [17036] serious, Nick? You're an hour and is the [17038] first part of your flow?" Uh, yeah, but [17039] the second part of the flow is really [17040] simple. But we just actually do the [17041] posting. So now that we have like our [17043] asset, which is basically just a list of [17045] posts, what we have to do is we just [17047] need some sort of logic that checks all [17048] of these once per day. Then it basically [17050] sees, hey, has this thing been posted [17051] yet? So I've added a posted on column to [17053] double check for that. Then if it hasn't [17055] been posted yet, it'll just go and it'll [17056] add a posted on column. It'll say, hey, [17058] uh, this was added on the n posted on [17059] the 10th. If you think about it, if we [17061] have a bunch of these and you know we [17064] have some columns, let's say 9th, 9th, [17066] 9th, 9th, but then this one's empty, um [17069] what we're going to do is we're just [17070] going to filter to only look for the [17071] ones with empty and then those are the [17073] ones that we're going to fill in the [17074] next day and actually go through and [17075] post. So in this way, we're going to [17076] have like a dynamic um a dynamic tracker [17078] basically. Uh that doesn't make much [17080] sense to you right now, don't sweat it [17081] too much. Let's actually go ahead and uh [17082] let's just build out the second half of [17083] this. Okay. So, I'm going to click um [17086] back to my home and then I'm going to [17088] add AI content repurposing engine 2. [17091] Just change the title to two. And then [17095] what do I need to be the um start of [17098] this? Well, if you think about it, I'm [17100] probably just going to do a test for [17101] now. Well, actually, I should do a [17102] schedule trigger. Let's just run this [17104] once every day. Okay. Do I want to post [17106] this at midnight? Probably not. Let's do [17108] 7 a.m. or something at minute [17110] zero. So, we got a bunch of data in [17112] here. Okay, which is nice. And then that [17114] supposedly is going to initiate our [17116] flow. What do we do next? Uh let me just [17117] pin this. What do we do next? Well, now [17120] we got to uh look through the Google [17121] sheet. So we got to filter and we got to [17123] post a [17123] bunch. And so the way I'm going to do [17126] that is I'm going to get rows in [17130] sheet. Okay. So I'm going to connect my [17132] credential. What is the document I'm [17135] going to be using? Uh well, AI podcast [17137] repurposing calendar. And we have three. [17139] We have Instagram, LinkedIn, Facebook. [17141] Okay. So I'm just going to go the first [17143] first. The filter I'm looking for, if [17145] you think about it, is I want to see if [17146] this column posted on is empty. If this [17149] is empty, then I want to return the [17152] value. Okay, so let's just test this [17153] really quickly. Doing a call, we've [17156] returned one because posted on is empty. [17157] But what if I said x is posted on x? If [17159] I click test, I'll say, oh no, no output [17162] data is returned because there's no um [17164] content with posted on equal to x. So I [17166] just verified that my filter worked [17167] right there, right? Easy peasy lemon [17169] squeezy. [17170] Okay. Now, another thing we have to [17172] think about is, well, we've just done [17173] that once with um the Instagram stuff, [17175] but we're going to have to do this again [17176] with the Facebook and LinkedIn as well. [17179] So, I'll say check Instagram posts. This [17182] one will be check LinkedIn [17186] posts. This last one here will be [17189] check Facebook posts. [17195] And here, this one has to be [17199] LinkedIn. Here, this one has to be [17202] Facebook. The column logic should be the [17204] same for each. Let me just make sure. [17205] Post it on. Good. This one should be [17207] posted on. Yeah, good. Okay. So, now [17211] that we have this, we have everything [17213] that we need in order to go and and do [17215] the posting. So, if you think about it, [17216] what we're going to have to do now is [17217] we're going to implement posting logic. [17218] Post on Instagram, post on LinkedIn, [17220] post on Facebook. Simplest way is [17221] obviously 1x per day, but you can change [17223] this to be whatever you want. That's [17224] what I get for not using my pen. And [17226] then um after the post, what are we [17228] going to do? We're just going to mark it [17230] as done inside of our Instagram post and [17233] then LinkedIn post and then Facebook [17235] post, Google Sheets. And then at the [17237] end, I'm probably just going to merge [17239] them together again. And then that's it. [17242] So the question is, how do we actually [17243] go about posting on these platforms? And [17244] that's a great question. Let's uh let's [17246] go through and let's figure this out. [17247] Okay, so I just did a bunch of [17248] authentication. Now, this authentication [17250] in NAND is non-trivial. It is honestly [17253] pretty involved to get through. Let me [17254] walk you guys through what I did. I just [17256] don't obviously have the ability to [17258] share all my access tokens and stuff [17259] like that, but I'll still run you guys [17260] through what I did and walk you guys [17261] through the workflow. So, essentially, I [17264] mentioned earlier we have that schedule [17265] trigger, right? And we're checking the [17267] Instagram, LinkedIn, and Facebook posts. [17268] And then we sort of have three routes [17270] here. The first is Instagram. And so, [17273] the way that the Instagram route works [17274] is what we need to do first is connect [17276] to a graph account. The graph account is [17278] just the way that Facebook deals with [17280] all their API calls. I'll talk about [17282] that specifically, but first, if you [17283] guys wanted to set this up alongside me, [17285] if you guys didn't have the template, [17286] which you guys can obviously get in [17287] Maker School, you would have to go [17288] through the following. The host URL [17289] would just be default. HTTP request [17291] method would be post. Graph API version [17293] would be 17. The node would depend on [17296] your Facebook or your Instagram account [17298] ID. I'll cover that in a moment. The [17301] edge would be media. I set ignore SSL [17304] issues to false. Then underneath this, [17306] we'd have two options. There'd be a [17307] caption option with the body of the [17309] post. there would be an image URL option [17312] which I actually just hardcoded here um [17314] as like a uh I don't know a silly image [17317] because I just cuz I wanted to test it [17318] out a couple of times in my account to [17319] make sure that it worked first. But I [17321] can actually go through it and I can fix [17322] it um afterwards. Okay, great. So yeah, [17324] that's all of the stuff that you need. [17326] The node the way you get that is you go [17328] to [17329] business.fas.com. Obviously I'm posting [17330] this on a business account. Then you go [17333] down to settings and then you have to do [17335] is go to Instagram accounts. Right next [17337] to Instagram accounts you have the ID of [17339] the Instagram. Okay, so that's that's [17340] where you would go. That's the very [17342] first place that you would go to get the [17343] ID of the node and yeah, just make sure [17345] the edge is media and so on and so [17346] forth. To actually connect this to a [17348] graphic account to actually create a [17349] credentials, as I mentioned, quite an [17350] involved process. What you have to do if [17352] I go to the documentation here. So you [17354] have to first make a meta app with the [17357] products that you need to access and my [17358] recommendation is just do all products. [17361] Okay, so I'm just going to open up a [17363] bunch of tabs here as naden guides me. [17365] What I ended up doing was I made one [17366] called [17368] nick_rive_na_post machine, but I'm just [17369] going to create a new one [17371] here just to show you guys where it's [17373] at. This is where your I don't know um [17377] app name is going to be. Then your use [17380] cases. What I always uh what I do is I [17382] just do um [17384] other. And then it'll ask which business [17387] specifically you want to work with. I [17388] have no idea why it's in Spanish, but [17390] it's in Spanish. [17393] and then your app name and then the app [17395] contact email and then your business [17396] portfolio. You would just select the [17398] business portfolio that has access to [17400] all the other stuff. Now, I mean, I'm [17402] pretty good at all this stuff and the [17404] way that Meta and Facebook does all of [17407] their different business portfolios and [17408] ad accounts and ad managers and stuff, [17410] that's still like really really crazy um [17413] to me. And you know, I'm somebody that [17415] works with technology like this on a [17416] daily basis. So, don't feel out of the [17419] loop or don't feel incapable if you guys [17422] don't know what that means. Um, it took [17424] me a very long time to figure this out. [17426] An embarrassingly long time, I should [17428] say. Uh, I'm authenticated through SMS, [17431] so I just had to get myself a text [17433] message. And I just confirm this. After [17436] you're done with this, you will have an [17438] an app. It's going to take a second. Um, [17440] and they're going to verify the hell out [17442] of you. Okay, great. So once you're done [17444] with that, um you need to So I'm going [17445] to set up both Facebook and Instagram at [17447] the same time, but then you need to set [17448] up um obviously the the Instagram. So [17450] click setup here. Oh, sorry. Before we [17452] do all this, actually, we need to do two [17454] things. Go over to app settings basic. [17456] Then what you need to do is you need to [17457] enter a privacy policy. So I just [17459] entered this as my privacy policy. Okay, [17461] so that's number one. Next, go to [17464] tools, then go to graph API explorer. [17468] Then what you need to do, okay, is you [17469] need to generate you need to go to the [17471] specific app that you just did. So, in [17472] my case, NAN access. Then, under [17475] permissions, you have to add, go to [17477] other. Um, I mean, I just added all of [17479] the permissions. I think you would be [17481] smarter than me and maybe just add the [17483] ones that are specific to Instagram, but [17485] the way that I typically do these things [17487] is, um, I just scroll through and then I [17490] find anything related to Facebook or [17491] Instagram. Then I click okay. So, as you [17494] see here, this very helpful bright red [17495] bubble, it's assisting [17498] me. Um, I don't do any of that. and I [17501] don't do any of that. Okay. So, now once [17503] I have all these and you click this um [17505] generate access token button, you're [17508] going to have to sign in to your account [17510] again. You can opt into the current [17513] applications. So, I'm just going to do [17514] all of them. Going to do all of them. [17517] I'm going to do all of them. I'm going [17518] to do all of [17521] them. Then the application that you just [17524] created is going to uh request centrally [17526] access to your account. Once you have [17528] that, you will have your your access [17530] token up here. Then you're also going to [17531] have a bunch of Instagram permissions. [17532] So access token is what you want to [17533] copy. Okay? And that's what you go and [17536] paste in here. That access [17538] token is that big fat beautiful access [17542] token. Um, and I just realized this [17545] probably isn't going to work now because [17546] I'm I have a bunch of different settings [17548] with my other access token. So I'm [17549] actually going to go back and I'm going [17550] to I'm going to put in my previous [17551] access token. Uh, where am I here? Let's [17555] go back to this one. [17558] I'm going just copy that. Go back here [17561] and then paste that in. Let's save that. [17563] Okay. Anyway, once you have the access [17565] token for the specific thing you want. [17567] So, in my case, oops, I'm doing it [17569] again. It says nadn access. Go back to [17575] developers.fas.com/apps and then go back [17577] here to the main app. For whatever [17580] reason, it duplicates your apps if you [17581] add a portfolio like I did. Then uh down [17584] where it says Instagram, you can go to [17586] settings and then where it says API [17588] setup with Instagram login. This is when [17591] you would add your Instagram [17597] account. We've now just given it access [17599] to everything. Still getting [17600] insufficient developer role. H why is [17603] that? Not entirely sure. It might be [17605] because of [17611] this. Yeah. So, you need to make it [17613] live. Then you click [17614] allow. The app will now have access to [17617] your Instagram. Beautiful. And once [17619] that's done, you just take that GraphQL [17621] or Graph um API token, access token, I [17624] should say, feed it in here, connect it, [17626] then you're good to go. [17628] Okay. So, after that, what you do is you [17630] feed in the post body and then you feed [17631] in the image URL as I mentioned earlier. [17633] Now, um I'm actually going to fix this [17635] right now. So, I'm just going to test [17637] this. Pull some Instagram [17639] posts. Okay. Now, as you can see, we [17642] have the image URL, which I will feed in [17645] right over here. Let me just make sure I [17649] can actually see this. Uh, no, we can't. [17651] Right. Right. The reason why is because [17653] um, OpenI will automatically time these [17655] out after a while. So, I can't actually [17657] see that image, which is unfortunate. [17658] What we need to do is we need to [17659] download it and upload it um, again. [17661] Okay. So, I'm just running the new image [17664] generator just so that I have access to [17666] all of the um, new images. Otherwise, [17669] OpenAI will time out the images if you [17671] haven't opened them or accessed them in [17673] a while. Looking pretty good to me. And [17676] it looks like now this is working as [17677] opposed to before where I wasn't. So, [17679] that's just a good example. Focus on [17680] solving the problems that you can solve [17682] at the time of the development. Um, you [17685] know, I just went and took my attention [17687] elsewhere and then whatever problem that [17688] the API had is now resolved. Okay, so [17690] now we're adding stuff to the sheet. [17693] There's the Instagram one, LinkedIn one, [17694] and the Facebook one. Let's just access [17696] the image here. [17698] Look at that. That's really [17700] interesting. Fascinating. Here's the [17703] post image. Thank you, rabbit. Here is [17706] the other post image. Wow, that rabbit [17709] is having a go. I really like that. [17710] That's cute as hell. Little little [17712] tongue is out. Okay, great. Um, so now [17714] we've added that to the sheet. So now if [17716] we go over here to the other uh [17718] scenario, what do I want to do? I just [17719] wanted to test this. So I'm just going [17720] to test the Instagram post. Pull in the [17722] new Instagram post here. Looks like we [17724] got that one post image. Beautiful. [17726] Let's now upload that one to the [17727] Instagram. [17728] [Music] [17729] So, let me just feed in post image here [17731] to image URL. There we go. [17734] Oops. So, do not [17736] delete do not delete the image URL. [17739] That's not what you want to do. All [17740] right. Should be good. I'm going to test [17742] this step. It's now executing the node, [17744] meaning it's uploading. And what [17746] happens? It returns an ID. What does the [17748] ID do? The ID is actually what allows [17750] you to take something that you uploaded [17752] and then post it afterwards. Okay. Now [17754] on the post on IG node, what you need to [17756] do is you need to reference the specific [17758] page that you're using, okay? Which is [17761] 1784144. That's uh the data that we got [17764] previously. And then yeah, the rest of [17766] these settings, I'll just leave you guys [17767] here to uh to take them. But the main [17769] one in consideration is creation ID [17771] where you paste in this ID here. So I'm [17774] going to post this. We're going to get [17776] good output, which is nice. Uh guess I [17779] need to like go to that, right? [17782] Yeah, let's view this on Instagram now. [17785] So, I just posted my little bunny rabbit [17787] live. Be the first to like this. I'm [17789] just going to delete it because that's [17790] on my actual uh account. But hopefully [17793] you guys can see what that flow looks [17794] like from start to finish. Pretty easy. [17796] Lemon squeezy. Uh then we're going to [17798] check the LinkedIn posts. HTTP request [17800] and then publish to LinkedIn. Now, [17801] you're probably wondering, why do you [17802] have to do that? Well, the reason why [17804] you need to do this in the LinkedIn row [17805] is because uh LinkedIn actually needs [17806] the the image file itself. Uh so let me [17810] test the im the LinkedIn route now. So [17812] I'm click [17813] test. It's not enough to get the URL [17815] like we had before. Okay. What we need [17817] to do is we actually need to get the [17818] image file. Now just because I don't [17820] want to go through a bunch of annoying [17821] stuff. Um what I'm doing is I'm just [17822] getting the image file from post image [17824] right over here. No authentication. I [17826] click test step. Now it's actually going [17828] to go and it's going to redownload the [17829] image. So I know it's a fair amount of [17831] bandwidth going back and forth, but now [17832] the image is in nad. Then the LinkedIn [17835] module works pretty easily. All you need [17837] to do to create a connection is you just [17838] click on this button and then uh if you [17841] wanted to create a new one. Let me [17842] create a new one. Just go to standard [17844] and then click connect my account. It'll [17846] actually just log into your LinkedIn for [17847] you. Okay. So you just accept that [17849] LinkedIn and then you're good to go. So [17851] I'm just going to close this and go back [17852] to my first account which I think was [17854] this one hopefully. And then the [17856] resources post operations create post is [17858] organization. The organization you are [17860] in. This is interesting. But basically, [17861] if you go to your LinkedIn account and [17864] then you go to the pages that you have [17865] control over right over here. Give that [17867] a [17868] click. The URL is going to be the ID of [17870] the page. Basic. You see that up there? [17873] That's what you're going to want to [17874] paste down here. The text in my case is [17876] just the post body, the image category [17878] here, and then the input binary field [17880] will just automatically pull from the [17881] previous one. So, if I now map this to [17883] my LinkedIn, if I drag this over here, [17886] you'll see I now get a URN li. So, if I [17889] then refresh this, I will have my little [17891] bunny [17891] rabbit having been posted with my [17894] content, which is cool. All righty. All [17896] righty. And then, uh, what's that last [17898] one here? The last one is the Facebook [17900] route. So, let's test this [17901] out. So, I'm just going to pull all the [17904] data. I have the post image as per [17906] usual. If I want to publish this to [17908] Facebook, same flow that I had before. [17910] Okay, we connect the Facebook graph [17911] account, but here are the details [17913] instead of the node ID. So first of all, [17915] HTTP request is a method. Graph API [17917] version is 17. The node is me instead of [17920] the node. Um, and then edges photos. [17923] This is false. Message post body then [17927] post image. Okay. When I post this, [17929] what's going to happen is it'll go on my [17931] Facebook account. It'll go and it'll [17934] create the post ID. So, uh, where the [17937] heck is that Facebook [17939] account? I don't really want that to be [17941] posting. Let's view this on Facebook. [17946] see that new little bunny post I made [17948] and then uh oh, how do I actually get [17950] rid of that? That is the question. Think [17952] of all my fans. They're going to see the [17953] bunny. They're going to be like, "Nick, [17955] what the hell's this bunny all about?" [17956] All right, we just click on this and [17958] then should be able to delete it. I [17960] think it's Yeah, there you go. Cool. So, [17963] I've just proven that this works [17965] essentially. Um, feel free to trust me. [17968] Uh, what's better than trusting me is [17970] actually going out there and doing it. [17971] Now that we publish in all three, what [17972] do we want to do? Well, if you think [17973] about it, we now want to update that [17975] last uh that last record that we just [17977] gotten. And then we want to just write [17979] posted on. Then we want to have that [17981] date. Since we're doing this once per [17983] day, what I'm going to do is the [17984] operation is going to be update a row. [17987] This one [17988] here, the one we are going to [17991] update column that we're going to match [17993] on is going to [17996] be let's do post image. I'm going to [18000] do is I'll go back to check Facebook [18003] post. I'm just going to match the post [18005] image to the same post image that we [18007] had. The only difference I'm going to do [18009] here, everything else will be the same. [18012] Okay. Only thing that I'm going to [18014] actually meaningfully change is posted [18016] on. So, I'll just I'm just going to map [18017] the rest of these fields in. And what [18019] I'm going to do is I'm only going to [18020] update a postit on so that it doesn't [18021] show up in the next search. How do I do [18022] that? I'm just going to go back to the [18024] formula where I got the exact formula [18025] for posted on. There you go. change that [18028] to an expression. All right. And then [18030] instead of check Facebook post, this is [18032] update uh update Google Sheets DB. Okay. [18037] Oh, I should probably do that one more [18038] thing here. I should call it [18040] Facebook. Facebook. There we go. All [18042] right. So, that's the Facebook one. [18045] We'll go over here now. Connect this to [18047] the LinkedIn [18049] one. We got to change this to [18052] LI. And all of this data is going to be [18055] different as well. Um, I'll change that [18056] in a sec. [18059] Just I really like being able to quickly [18062] and easily map this stuff out by copying [18064] and pasting it. So, just now going to [18066] move this to [18067] Instagram. Then I just want to rename [18070] this to Instagram. Cool. And I basically [18074] just have to go, you know, unfortunately [18075] I have to go through this um this [18076] rigomeroll [18079] again. So, let's test this. Let's pull [18082] that out over here. Yeah, I can't, you [18085] know, actually need to execute the [18086] previous node. It's kind of annoying. [18087] Whatever. Let's give it a [18090] try. Look like all my LinkedIn fans are [18093] going to have to [18094] wait. All right. Uh, post image was [18096] right over [18097] here. Date added was right over [18101] here. One more [18103] time. Then post body was right over [18106] here. Looks good. And then posted on [18109] format looks good. That's fine. And [18112] then let's test this [18115] now. Should update good for this [18119] one. Just test everything first. This is [18121] going to error out, but it's okay. I'm [18123] going to get the Facebook [18126] post. Then we can now update the post [18130] image. [18134] One thing I don't like about N&N's [18136] interface is that [18137] uh the expression field covers the [18142] subsequent field that you're working on, [18143] which is [18145] unfortunate. Anyway, give that a [18147] go. Cool. And then this one here, I've [18151] already verified that works, I believe. [18153] Cool. And then now, if you think about [18155] it, if we go back to our Google sheet, [18156] we now have a fully kind of like self [18159] annealing system. The system just checks [18161] to see when the posted on date was last [18164] and then it'll just go through once a [18165] morning and check to see which one to [18167] post next. So you can generate 10 new AI [18170] podcast posts and then you can go [18172] through and just check these off one by [18173] one automatically which is pretty neat. [18175] All right, you now have a content [18176] repurposing engine again that transforms [18177] long form content into multiple social [18179] media posts automatically. We're now [18181] building a YouTube trend detector that [18182] automatically monitors channels in any [18184] niche. It identifies videos that are [18185] going to be performing way above [18186] average. Then we're also going to hook [18188] that up to an email system to send daily [18189] digest emails with trending [18191] opportunities. The whole idea is to give [18192] content creators and agencies the [18194] ability to jump on trends early, then [18195] ride the wave of viral content. You can [18197] easily charge over a,000 bucks a pop for [18199] this system because it provides genuine [18201] competitive intelligence. And it also [18203] replaces a couple of very popular [18204] services out there like Vid IQ and one [18206] of 10. We're just rebuilding all of that [18207] in our run back end. Okay, let's dive [18211] in. All right, so this is future me [18213] doing a demo of the system. I've gone [18215] through a bunch of rigomeroll in order [18217] to get this put together and you guys [18219] are going to see all of that. In a [18220] nutshell, this is going to be two [18222] separate workflows. One to add or update [18225] new trending videos and the other to [18228] take everything that you've added and [18230] updated and then to send it in a nicely [18232] formatted email that I'm calling the [18234] daily digest. So, if I click test [18237] workflow, the first thing that's going [18238] to happen is it's going to pull from a [18240] Google Sheet database of channel IDs. [18243] It's then going to grab YouTube videos [18246] from the YouTube API before dumping [18248] those into the Google sheet. And then [18250] what we're going to end up having is [18252] just a list of new videos here alongside [18254] view counts. Now, I'm doing this for a [18257] couple of channels, but essentially [18258] after we're done with this, this YouTube [18260] trend detector can then turn on. And [18263] when this happens, what we're doing is [18265] we are then subsequently reading through [18266] this on a schedule, maybe once every [18268] couple of days or something. If I go to [18270] my Gmail, you'll then see that we now [18273] have a list of high quality videos over [18276] certain multiples that are then [18278] organized really, really nicely for us. [18280] And you know, we put in the channels [18282] that we want to track ahead of time and [18283] so on and so forth. But yeah, this is [18284] more or less like a simple and easy way [18286] to do things. I'm going to run you [18287] through exactly what the logic for this [18289] looks like. Maybe if you wanted to [18290] extend it, I don't know, build a website [18291] doing this, recreate one of 10 or [18293] whatever. Okay, so let's do the live [18296] build. [18298] Okay, so let's start with the live [18299] build. Here's the current road map and [18301] what I'm thinking about how to get [18302] started and then finish this. What I'm [18304] thinking is we're actually going to [18305] divide this into two separate flows. The [18307] first flow is going to be the ad and the [18309] update flow where we're actually going [18310] to grab the data directly from YouTube. [18312] And then the second flow is going to be [18313] the daily digest flow where we basically [18315] just send a summarized version of all of [18317] the trending content. And in this case, [18320] I'll just use an email, but in reality, [18321] you can think of this as being [18322] deliverable through more or less any [18324] means that you want. You could do like a [18325] Slack update. You could do SMS. You [18326] could spin up a beautiful user [18328] interface. You could have a website. And [18330] I'll run you through each of these in [18331] kind, but I just wanted to mention that [18333] I got the initial idea from Leonardo [18335] Gregorio. He showed me a trend detector [18337] that he was using to identify AI and [18339] automation related content to find [18340] trends that he could, you know, jump on [18342] trends. And he's taken a very sniper [18343] rifle approach to all this stuff. The [18345] guy's grown from basically zero subs all [18347] the way up to 20K extraordinarily [18348] quickly, much quicker than I did when I [18350] started. So, um, he developed this idea [18353] of a YouTube outlier detector based off [18355] multiples. Um, and I believe he got the [18358] his idea from this website here, one of [18360] 10, which basically does all this stuff [18362] in the background. And it's like a SAS [18363] product. And the idea is what we're [18365] going to do is we're going to rebuild or [18366] recreate a lot of the same functionality [18368] of this app. And then Leonardo's, except [18370] instead of using, in his specific case, [18372] he used I think it was like SQL. I'm [18374] just going to do it all inside of a [18375] Google sheet just cuz I think SQL is [18376] kind of scary and intimidating to a lot [18377] of beginners. And I just want everybody [18378] to like I want everybody to have as [18380] simple and as easy and as [18381] straightforward a time as humanly [18382] possible with this stuff. I personally [18384] don't really think we need to use SQL [18385] for it. So with all that said, here is [18387] more or less what I'm thinking. For the [18389] add or update flow, we're going to start [18390] by getting all of the videos for a [18392] specific channel. So basically, we're [18394] going to have to add a list of channels [18396] that we're monitoring. From there, we're [18398] going to grab the individual video data [18399] using the YouTube API. And that's just [18401] how the YouTube API works. You can get [18403] all videos in one call, but then you [18405] don't get a lot of information about [18406] each video in that call. you just get a [18408] list of IDs. The second step here [18410] requires us then to ping each individual [18412] video to grab data like views. What I'm [18414] going to do next is I'm going to filter [18415] all long form videos. So you know how [18417] YouTube you can do shorts or you can do [18419] like longer videos like my style. Well, [18421] you know, we kind of need to compare [18422] them apples to apples. So I'm just going [18423] to filter out shorts. Unfortunately, [18424] there's no built-in way using the [18426] YouTube API to do this. So I'm going to [18428] do a heruristic or sort of like a proxy [18430] for shorts. And I'll run you guys [18431] through what all that looks like later. [18432] Then I'm going to check if it exists in [18434] the database. Database being the Google [18435] sheet here. And that's just a fancy term [18437] for that. If it doesn't exist, we're [18439] obviously going to add it. If it does [18440] exist, we're going to update the metrics [18441] and stuff like that with the new view [18442] count because presumably views change. [18445] And then once we have our little [18446] database set up like our Google sheet, [18447] what I'm going to do is, you know, once [18449] a day or once an hour or I guess just [18451] however often we want, we're going to [18452] send over some sort of digest. And a [18454] digest again can be anything. In my [18456] case, I'll just do a quick little email [18457] just cuz I think that's the straightest [18459] line path. So what's that going to look [18460] like? Well, because I'm using a Google [18462] sheet, I'm going to store all this data [18463] on different sheets. So, I'm going to [18464] grab all the sheets. Then I'll grab the [18465] videos in each sheet. And then for each [18467] video list, I'm going to calculate the [18469] average number of views. This is sort of [18471] how you determine the multiple or how [18473] trending a piece of content is. You [18475] compare the view count of a specific [18478] video against the average view count of [18481] all of the videos. Then for each video, [18483] we're going to determine the multiple on [18484] that. And then if the multiple is over [18485] the threshold, we're going to include in [18487] the email. So, I like this idea because [18488] if we combine these two systems, right, [18490] we have something on the left here [18491] that's automatically updating the [18493] metrics and then something on the right [18494] here that automatically checks to see if [18495] a multiple is below some threshold. [18497] Presumably, these two things are going [18498] to make the system evolve and be [18500] dynamic. The videos that come in on day [18501] one aren't necessarily the videos that [18503] are going to come in on day two. And far [18504] from being like a negative of the [18506] system, I think that's actually a [18507] positive cuz sometimes videos get [18509] rediscovered later on. And I think that [18510] if you want to really assess the [18512] performance of a video, you can't just [18514] look at everything static like, you [18515] know, today or tomorrow. You actually [18516] have to look at it as it evolves over [18518] time. All right, so that is the whole [18519] idea here. Let's actually jump in and [18521] build this puppy. So, I got my little [18522] YouTube trend detector here. I was just [18524] doing a little bit of um wireframing [18526] beforehand to make sure that like the [18527] YouTube API worked and like logically I [18529] could actually hook up my credentials. [18531] But aside from that, this is going to be [18532] entirely lively build. So, I'm going to [18534] create a new Google sheet here and I'll [18536] run you through how to do all the [18537] connections and everything like that you [18538] need as well. Let's uh remove that. I'm [18541] just going to call this like YouTube [18543] trend tech. Let's just say database. [18546] Okay. All right. That seems pretty solid [18548] to me. Uh what I have to do is I have to [18550] connect this database now. So what I'm [18551] thinking I'm going to do is you know how [18553] I mentioned we're going to have a list [18554] of channels that we're monitoring. So [18555] the very first thing is I'm going to [18556] make a table called channels. And over [18558] here I'll just have it say channel ID on [18561] YouTube. What you do in order to get all [18563] the data about a channel is you need you [18564] need their ID. And if you're unfamiliar [18566] with how that works, I'm going to go [18567] over to my channel here. You can grab [18570] the ID of Sorry about that. You can grab [18572] the ID of a YouTube channel just by [18573] going uh I think more and then all the [18576] way down to the bottom share channel, [18578] copy channel ID. Okay, most people now [18580] use like little acronym versions like I [18582] do at Nixxive as opposed to channel ID. [18584] So you can't grab that through the URL [18585] for a lot of channels, but if you find [18586] yourself in that situation, you can get [18587] it from there. Okay, so what I'm going [18589] to do is I'm just going to test all this [18590] stuff out on one channel because, you [18592] know, that's really all that matters to [18594] me to start and then once I've tested it [18596] on one channel, then I can worry about [18597] dealing with all the other channels and [18599] I'm just going to brainstorm everything [18600] that I'm thinking about live. so that [18601] even when I do end up in a detour in [18603] some sort of crappy hole, you know, you [18605] guys will see how I do the debugging of [18607] this as well. So, first thing I'm going [18608] to do is add a trigger where when I [18610] click this test workflow button, it runs [18612] the flow and that's pretty simple. [18613] Second, I'm going to use a Google Sheets [18615] node. And what I want is I just want [18616] some way to grab the data. So, I'm going [18618] to use the get rows in sheet node. Here, [18621] I have the ability to add my [18622] credentials. Now, if you haven't added [18623] credentials before, I'm going to show [18624] you how to do it for YouTube in a [18625] second. In Google Sheets, all you do is [18627] you click oath 2 and then click sign in [18629] with Google. Okay, very straightforward, [18630] very simple. I've already done this, so [18632] I'm just going to close this out and [18633] then select the credential that I have, [18635] which I'm just calling YouTube. The [18636] resource is going to be sheet within [18637] document operation get rows. And then [18639] the document that I want, it's going to [18641] be this one I just created, YouTube [18642] trend detector database. The sheet that [18644] I want, if you think about it, is [18645] channels because I'm just going to [18646] select from this list of channels that [18647] I'm monitoring. And that's how we're [18648] going to build the flow. Okay, then I [18650] click test step. Okay, what am I doing? [18652] I actually now have got the data from [18654] the Google sheet into NAD. So, we are [18656] good. Next, I'm just going to pin the [18658] data. And the reason why I'm pinning the [18659] data and I always recommend pinning [18661] Google Sheets steps is just because you [18662] know when you turn it from green to [18664] purple um instead of having to do the [18665] API call to the Google Sheets API again [18668] what you can do by pinning it is just [18669] like cache or persist the data directly [18671] in NAN which means that for all future [18673] runs of this like if I want to test the [18674] workflow it actually just automatically [18676] grabs that data and then runs it [18678] through. I don't actually have to like [18678] physically make a request to Google. The [18680] reason why this is valuable is because [18682] they tend to be very fragile these APIs. [18684] So, if you always test every 3 seconds [18686] like I normally do, I'm very um [18687] incremental with my testing for good [18689] reason, which I'll tell you about in a [18690] minute. You know, sometimes the API gets [18691] overwhelmed and then you end up just [18692] having to like wait like 5 minutes. Who [18694] the hell wants to wait 5 minutes, right? [18696] Okay. So, next up, now that I have the [18698] channel ID, if you think about it, I [18699] kind of want to grab the video. So, I'm [18700] going to go YouTube right here. And uh [18701] there are a lot of different functions I [18703] grab a channel, get many channels, [18704] updated channel uploaded, channel [18706] banner, playlists here, playlist items. [18708] Okay, so what I want is the get many [18710] videos. Now you see it'll say credential [18712] to connect with YouTube account. So I've [18714] already done this but I'm going to [18715] pretend that I have an set it up from [18716] scratch for you. Okay. So when you click [18718] add connection it'll say oath redirect [18720] URL and then you'll grab the URL here [18722] and it'll have this little callback [18723] thing. Don't worry too much about this. [18725] This is just like a way that it opens [18726] the window up in NAN. What you need to [18728] fill is you need to fill this client ID [18730] and then this client secret section. If [18732] you don't know how to do any of this [18733] stuff, just click open docs. Naden [18734] actually has pretty good docs on how to [18736] get up and running with like service [18737] accounts and whatnot. I'll run you [18738] through what this actually looks like. [18739] What you have to do is you have to go [18740] like [18741] console.cloud.google.com just like this. [18743] And then what you have to do is you have [18744] to make a project. Now I've already made [18746] a project. So I'm at my first project [18748] here. Okay. But what making a project [18750] does is you basically just give it a [18751] name. So as you see my website here's [18752] leftclick. I basically just gave it a [18754] name and now it says my first project. [18756] What you have to do next is you have to [18756] go to APIs and services. Then what you [18759] have to do is you have to go YouTube. [18760] And when you go to YouTube you'll find [18762] the YouTube data API. In my case it's [18763] V3. Maybe you're watching this video in [18765] 2027 after the robots have won. So uh [18767] maybe you are a robot. in which case, [18769] please spare me and my family. Those [18770] will be a this might be a V something [18773] else. Okay. Uh you're going to want to [18774] click like I forget what the verbage is, [18776] but I think it's like, you know, add or [18778] enable or something. Once you're done [18779] with that, if you go to manage, then [18782] you'll go down to credentials over here [18784] on the right hand side. And then what [18787] you what you'll have is you'll have two [18788] sections. You'll have like um API keys [18789] and OOTH 2.0 client IDs. Now, I've [18791] actually already created my own [18792] credentials here quite a while ago for [18794] uh for YouTube and whatnot. What you can [18796] do is you can go ooth client ID and then [18798] here you actually create your own. So [18800] what I'm going to do [18801] is was it web application? There we go. [18804] And then the name will be whatever you [18805] want. Whatever I [18807] want. Okay. Um under authorized [18810] JavaScript origins and authorized [18812] redirect URIs. We're going to go back to [18815] here. Go back to the YouTube or other [18819] Google specs. And then what we want is [18822] we want this OOTH single service. So now [18825] it's going to walk us through all these [18826] steps. Figure out OOTH consent screen. [18829] Let me see. Let me see. From your NAN [18831] credential, copy the OOTH redirect URL. [18834] Paste into the authorized redirect URIs [18836] in Google console. Okay, great. So what [18837] that means is we go back here. You see [18839] how it says OOTH redirect? You got to [18840] give that a copy and then go back over [18842] here to where it says authorized [18843] redirect URIs. We have actually to paste [18845] that in. Okay, once you're done, click [18848] create. Now you're going to have two [18849] things. You have a client ID up here at [18851] the top, which we're going to copy. And [18852] then I also have a client secret. So [18854] what I'm going to do is I'm going to [18855] paste in the client ID here and go over [18857] here and I'll paste in the client secret [18859] here as well. And you'll get this signin [18860] with Google box. Now after you're done [18862] with that, this will now open up a [18864] Google signin window. Then click the [18866] email that's associated with the account [18867] that you just created. Go down to allow. [18870] All [18871] right. From here it is now connected. [18873] You can close your window and you've [18874] actually now done the connection. [18876] Remember that first step where you have [18878] to set up that cloud account. What you [18880] have to do is you I think they give you [18881] like 300 bucks in free credits or [18883] something like that. You functionally [18884] will not run out of credits. I mean you [18885] know your free trial is over but your [18886] cloud platform journey doesn't have to [18888] be. I think you can like continue doing [18890] your API calls below a certain limit or [18891] something like that. Anywh who uh from [18893] there credential to connect with is [18894] YouTube account 2 resource video [18896] operation get many return all. I'm just [18898] going to have the limit be like three [18899] videos for now. Filters we'll leave [18902] channel ID. And then what I want to do [18904] is just feed in the channel ID directly [18905] in here. So, what this is is this is [18907] just like hooking me up to a specific [18908] channel as we see. I'm just going to [18910] click test step and we're going to see [18911] what happens. Okay, awesome. And it [18913] looks like we've now received a bunch of [18915] data. That's pretty cool, right? So, [18917] we've now verified that we can do a fair [18918] amount here. And if I just go back to my [18921] little road map here, we've now verified [18923] that we can actually get all the videos [18925] for a channel, which is great. Okay. All [18927] right. So, now that we've gotten all the [18928] videos for the channel, what I want to [18929] do, well, not all of them, but three of [18930] them. I'm just going to pin this data [18931] again. So, now I have access to these [18934] three items. And now what I'm going to [18935] do is I'll go back to YouTube and [18937] logically what I'm going to do next is [18938] we're going to get a video just like [18940] this. Now you'll already have the [18941] credential that we added. So this is the [18943] second one, the one that I just created. [18944] So I'll go there. And then you see where [18946] it says video operation get. Well, now [18947] we need to feed in the specific video [18949] from the giant list of videos that we [18950] just got. And you'll find this I think [18953] here at least. Yeah, I'm pretty sure [18955] that looks to me like a video ID, right? [18957] Okay. So now if I click test step, it's [18960] actually going to run on all three of [18961] these items. But to be honest, when I [18963] test APIs, I only really like to run it [18965] at one at a time. So I'm going to click [18966] on this button in between. I'll just [18967] type limit. And what this does is this [18969] basically just limits it. So if there [18970] were three items initially, now there's [18971] only one item. So we're only grabbing [18973] the first in this case. You can also go [18974] last if you want. I just go first. Okay. [18977] So now what I'm doing is you see how on [18979] the purple it said three items up here [18981] and then over here it says one item. [18983] Well, basically that's what this limit [18984] node did. It just like took those three [18986] and then it like just converted it all [18988] into into just one. It didn't merge them [18990] or anything. I guess what I'm trying to [18991] say is it just like deleted the last [18992] two. So now that there's just one item [18994] as input, when I run this this video ID, [18996] it should only run once. So click test [18998] out. So I'm going to grab a specific [19000] video. And that's what it did. It just [19002] ran once for one item. Now what's [19004] interesting, I'm going to go to see [19005] schema view here. It's probably easiest [19006] for you guys to understand. So we go [19008] back to schema view. What we see now is [19010] we're getting a ton more data about the [19011] specific video. Like on the left hand [19013] side, do you see how there's like no [19014] data about the specific video views or [19016] anything that I could use to determine [19017] if it's an outlier? Well, on the right [19019] hand side, we get that data. So, there's [19020] a bunch of thumbnail BS. I'm just going [19022] to close that. Tags, which is fine. [19024] Category localized. This is the title [19026] and [19027] description. Content details. Okay, so [19029] this is um this over here is going to be [19031] important for us. PT32s. This is [19033] interesting. Uh this is like a timestamp [19036] string basically showing how long the [19038] video is. In this case, this is 32 [19039] seconds. So, I don't know what P stands [19042] for. I think T stands for time and then [19044] 32 is obviously the number of seconds. [19046] Uh, but this could also be like PT 5 [19048] minutes, PT3 [19050] hours. This is just like the specific [19052] timestamp formula that uh for whatever [19055] reason YouTube uses. I don't know why [19056] they didn't just do the number of [19057] seconds. That make everybody's life so [19058] much easier, but they use a five um [19061] character string for seconds, which is [19062] annoying. But the thing is, if you think [19064] about it logically, like I don't want to [19065] grab shorts, right? So, I'm going to [19066] have to do a little bit of math here to [19067] uncouple this. And I'll run you through [19068] what the math looks like later. But [19069] anyway, the statistics are what we want, [19071] right? See how it says 12,690 and this [19073] one says 382 likes. So you can run out [19075] liar detection in a number of ways. [19077] Probably the simplest way is just views. [19078] But if you think about it, you could [19080] also run it on like views and likes. You [19081] could run it on just likes. You could [19082] run it on some multiplicative number [19085] here. You could like I don't know maybe [19087] mathematically you think that one like [19089] is worth 10 views just in terms of like [19091] its viral power. So what you do is you [19093] actually take likes, you multiply them [19094] by 10, and then you add them to views. [19096] And that's what you do to score them, [19097] right? This is totally for free. This is [19100] up for grabs. You can do whatever the [19101] heck you think based off of your [19102] knowledge determines whether a thing is [19104] more viral than something else. In my [19106] case, you know, I just want to give you [19107] guys a simple nugget system. I'm just [19109] going to use the view count. But anyway, [19110] so yeah. Okay, we we get a ton of data [19112] here. So, what I'm going to do is I'm [19113] going to pin this output. And what I [19114] want to do now is I actually want to [19115] filter out all the shorts cuz I hate [19116] shorts. I think shorts are not [19118] representative of this stuff at all, [19120] right? Like you could have two systems, [19122] one that operates off shorts and one [19123] that operates off long form, but you [19125] can't compare them apples to apples. [19126] They're so different. There's so many [19127] like discoverability issues and stuff [19128] like that. So, what does that mean? Uh, [19129] basically that means I have to filter [19130] out the shorts. There's nothing in the [19132] YouTube API, which is really annoying, [19134] that says whether something's a short or [19135] not, blows, but they they don't just [19137] have like a simple type short. So, what [19140] you have to do is you just have to infer [19141] it based off of the logic. So, [19143] realistically, if something's less than [19144] 60 seconds, I'm going to call it a [19146] short. And then if something is over 60 [19147] seconds, I'm going to call like a [19148] regular, you know, normal video for [19150] welladjusted human beings. So under [19153] content details duration PT32s, I need [19155] to somehow take this string and I need [19157] to use it to determine whether or not [19159] it's a short. Well, the way that this [19160] works, I know for a fact S means second [19163] and then if it's a minute, it'll be like [19166] PT5 minute 32 seconds. So this here, [19169] this string would mean the video is 5 [19171] minutes and 32 seconds. I think if it's [19173] like 3 hours, it would be 3 hours 5 [19175] minutes and 32 seconds. What does that [19176] mean? I can actually just use the length [19178] of this thing. If this thing is like [19179] five characters and then the last letter [19181] is S, odds are this is a short to be [19183] honest cuz the second you get over 60 [19185] seconds it just changes to minute, [19186] right? So I think that's the logic I'm [19188] going to use. I don't know if it's 100% [19189] but we'll give it a try. So how do you [19191] actually do this? I'm just going to use [19192] the the filter node and then I'm going [19194] to feed in [19195] the scrolling all the way down here. The [19198] duration I'm just going to go.length [19200] length here and I'll say if this is [19203] equal to five and the last [19208] letter. So let's go to [19210] expression if this ends with [19214] um [19216] s then I know that it's not a short uh [19221] then I know that it is a short. [19225] Okay. So logically I'm actually looking [19227] for the inverse of this. Can I do the [19229] inverse of this? How the hell do I do [19231] the inverse of this? I guess I say is [19233] not equal [19235] to. So this has to be not equal to [19240] five. Sorry, I'm using string here, but [19242] I should be using number. There we go. [19244] So this has to not be equal to five. And [19246] then this last [19247] thing has to not end with s. Okay, that [19252] makes sense. So assuming that these two [19254] are true, odds are it's probably not [19257] going to be short. So I just ran it and [19259] uh it says kept zero, discarded one. So [19261] that means that basically this node [19264] returned nothing, right? Because there [19266] was one item here and then it hit my [19268] beautiful sexy filter, my anti-short [19270] terminator and then you know there was [19272] nothing that wasn't a short to remain. [19274] So if I want to continue testing this [19275] flow logically, what do I have to do? [19277] Well, I kind of have to fill it with [19278] like real data, right? So I'm just going [19280] to change the limit node and then just [19282] cross my fingers and hope that I can [19283] return more than just a short. Let's go [19285] three this time. I'm going to unpin [19287] it. I'm just going to go where's the PT? [19291] Right. PT. Get all videos. Three items. [19295] Now we're returning three items. Now for [19296] each of these, I'm just going to test [19297] three [19298] times. Bang. Bang. Bang. Okay, now we've [19301] done three. And um underneath this [19304] duration, this one's PT32s. If I go to [19307] JSON, I should be able to get all them, [19308] right? So PT32S. Where is that? Where is [19311] that? Okay, so this is that short. [19312] That's what number one. [19315] This next one is 38 [19318] seconds. This last one's 59 seconds. Oh [19321] jeez. You know what I'm realizing? I [19322] think this is like This actually sorts [19324] all of my videos by shortest to longest. [19327] So obviously the first three are going [19328] to be [19329] shorts. Uh that's brutal. Can I like not [19332] do this? Hm. Is there some way to get [19334] all videos and then sort it [19337] by what do I order it by? Relevance. [19340] Date. You know, screw it. Let's just do [19341] date. This is This should fix it because [19342] I haven't posted shorts in a while. [19343] Let's test this again. [19345] Okay. All right. Yes, this is uh [19348] relevant. He quit his job after his age. [19350] You see, I just I just published this [19351] one. So cool. We can now pin this. So I [19353] just clicking the node, pressing P. Then [19355] I'm going to do [19356] limit. And now I know for a fact that [19358] the first item is going to be good. So [19360] I'm just going to change that to one. [19362] All right, I'm liking this. I'm going to [19364] go over here. I'm going to test this [19365] now. Should run once. Cool. And let's [19367] see the duration. You guys see where [19369] it's 39 M26s, right? So this should [19372] work. I'm not going to pin this. And now [19375] when I run my wonderful filter [19377] test. Oh, hold on. It's still discarding [19380] it. Why is it discarding [19382] it? Um h something to do with my math [19386] here. So conditions is not equal to [19389] five. So that's good. And it does not [19391] end with [19394] us. Oh. Oh yeah, obviously it ends with [19396] us. [19398] Duh. Oh, okay. Sorry. I think I can [19400] actually just get rid of this. [19402] My bad. My bad. My bad on the S stuff, [19404] guys. Yeah, don't do the S stuff, right? [19406] That makes sense. Cool. Well, I said I'd [19408] keep in dumbass detour. So, there's one. [19411] Uh, yeah, obviously all of them are [19413] going to end with S because that's how [19414] they do it. They go like [19417] PT39M26s, right? Well, actually, if you [19419] think about it, if something's like 4 [19420] seconds, it's probably going to put in [19421] here, right? So, instead of is not equal [19424] to, what I should do is I should say it [19426] needs to be greater than five because [19428] then it'll be at least 1 minute, right? [19430] That makes more sense. That's more [19431] logical. [19432] Okay. Yeah, that's way [19434] smarter. Cool. So, now that we have the [19437] video, question is, what do we do next? [19439] Say, I'm just going to go back to my [19441] thing. We now grab the individual video [19443] data. We've now filtered out long form. [19445] Now, we need to check if it exists in [19446] the database. Now, here's the thing. We [19447] don't actually have the database set up. [19448] So, it's kind of like uh chicken or the [19451] egg, right? So, first of all, I'm going [19453] to change this to one, and then I'll [19455] call this add update. Then later on I'll [19459] change um I'll add the other workflow [19460] and that'll be like daily [19462] digest. So if I go back to my little [19465] database over here my fledgling DB. Uh [19467] what is it that we have to do [19470] logically? Well I think what you should [19473] probably [19476] do [19478] is we have to check to see okay so [19481] here's here's how we can do this. you [19482] know this channel [19484] ID what we could do is we can make this [19486] the [19487] title in here we'd store all of the data [19490] of the video right right um I don't know [19494] even multiple and stuff like that but we [19496] need some way to like add the channel ID [19499] automatically so I'm just going to go to [19500] sheets I don't actually know if you can [19501] do this can you just like get all the [19504] sheets or [19506] something looks like you can create a [19509] sheet so that's interesting [19512] You can also get rows in a sheet, delete [19513] rows or columns in a sheet. Is there [19515] some way that I could like check to see [19516] the [19518] sheets? Logically, that would make [19519] sense, right? Can I just get rows in [19521] sheet check this out for me? Yeah, I'm [19524] not seeing a way to, which kind of [19525] blows. [19527] H I think what we'd have to do [19533] realistically. So we have to do one or [19534] two is [19536] one we rebuild the whole database every [19539] single time that we run this which would [19542] be very computationally expensive. It [19544] would hit the API a lot. It would just [19545] not be smart. Or two, we need like an [19549] initialization thing where every time we [19552] initialize it, like we feed it in a list [19554] of channels, then it initializes the [19555] whole sheet for us. And then we do that [19557] anytime we want to update it. Or what we [19559] do is we just have a simple SOP where [19560] anytime I want to duplicate this, I I [19562] grab the sheet like this. Okay? And what [19565] I do is I just duplicate this and then I [19568] change the ID to, you know, new channel [19571] ID. That makes sense to me because then [19574] the system would automatically just [19575] start dumping into the new one. Okay, [19576] cool. I think that's probably what we're [19577] going to do for simplicity. I want you [19579] guys to know there's a million one [19580] different ways to do this and I am a [19581] very hacky human being so I prefer the [19583] hacky approach. Okay, so what am I going [19584] to do with the Google sheet? Well, now [19586] that we've identified that it's not [19587] short. Obviously, we need to add it, [19588] right? So, I'm going to go sheets. I'll [19590] go append or update row and sheet. I'll [19592] go YouTube resource operation. Okay, [19596] document from the list. I'm going to go [19597] pick my YouTube trend detector database. [19600] The sheet I'm I'm curious about. Notice [19601] how I have the channel right here. [19603] Right? This is where it's going to get a [19605] little trickier and this where I'm going [19606] to need to go back and update my logic [19607] probably, but I'm going to need to use [19609] the ID connected to the specific channel [19614] where I'm adding the video. Okay, the [19617] thing is we don't currently have any [19618] columns yet. So, we have to do now is we [19621] have to map all of this data or all the [19624] data that we're actually interested in [19625] that is. So, what data am I actually [19627] interested in? Well, I'm obviously I'm [19629] interested in a couple things. So the ID [19631] of the video, right? So I'm going to add [19632] ID here. This is going to be probably [19635] like my unique identifier, right? Like [19637] this is the one thing on all videos [19638] that's always going to stay the same per [19639] video cuz if you think about it, people [19641] can change their title. People can also [19642] change their description. Like this is [19643] the thing that I have to like use as my [19645] unique thing. And all databases need [19647] some sort of unique thing. So I'm going [19649] to do the ID for sure. What I want as [19651] well. Published at that sounds like it's [19652] good to keep track of. Channel ID. I [19655] mean like I kind of have it here, but I [19656] I don't know. I'll just I'll add my [19658] channel ID. Maybe it's just going to be [19659] easier for me. Also, I'm realizing that [19661] I'm changing my conventions. There's two [19663] major conventions in programming. [19664] There's um camel case, which is where [19665] you [19667] go something like that. And then there's [19669] I think it's called snake case, which is [19671] like [19672] this. Uh and I'm changing my conventions [19674] right now. Like I'm going from camel [19675] case to the other thing. I think most [19678] things in nad use [19680] um snake case, so I'm going to do that. [19682] That seems simpler. Okay. So, next up, [19685] what do we need? We obviously need the [19686] title. That seems good. Description. I [19688] mean, I feel like the description is [19689] good to keep track of. Let's see the [19690] description. Screw it. Thumbnails. Hm. [19692] Looks like there's three types of [19693] thumbnails. There's like small [19695] thumbnails, medium thumbnails, high, and [19697] then standard. So, why don't I [19699] do Why don't I just do it like this? [19701] Small thumbs, medium, uh, sorry, there I [19705] go again. Small [19707] thumb, medium thumb, large thumb, [19711] standard thumb. This is just going to be [19713] the URLs. I don't really care about the [19714] heights or whatever. [19717] Channel title. Is that [19719] necessary? Yeah, I might as well. Right. [19723] We'll go channel [19725] title. Okay. What else do I want? Uh [19729] tags. I could theoretically just dump [19731] all the tags. So, I should probably do [19733] that. I'm so lazy. I'm like, do we need [19736] the tags? Yeah, we kind of need the [19738] tags. All right. Category ID. I don't [19740] know what the heck that is. I don't [19741] really think it's that valuable. I'm [19742] sure, you know, you can imagine a world [19744] where category ID is valuable, but I [19745] don't, you know, I don't really know [19747] what that means, so I'm going to leave [19748] it [19749] up. Okay. Content details, duration. [19751] That's gonna be important. So, we'll go [19754] duration, dimension, definition. I could [19757] see you running some stats on that [19758] stuff, right? Like maybe in the future, [19761] like you notice that most multiples are [19762] HD or something that might give you some [19766] data. Okay. And then ultimately, the [19768] stats are what we actually care about. [19770] So, good god, look how far off this is. [19772] Okay, the way that I like to organize my [19774] databases is I just like to have like [19775] the most important information first and [19777] then I stick all the less important [19779] information later. So, to be honest, [19780] we're going to need to rearrange this. [19781] Like, are are you going to care about [19783] the thumbnails for most of these? No, [19784] obviously not. So, we're just going to [19786] dump these all the way to the right. [19788] What are we actually going to care [19789] about? If you think about the view [19790] count, like count, favorite count, and [19791] comment count. I don't know what the [19792] favorite count is, and I don't know why [19794] nobody favored that video. Granted, I [19795] did publish it yesterday, but can y'all [19798] please favorite my video? I would love [19800] you a long [19802] time. Okay, so [19805] views. Just go views, we'll go likes, [19808] we'll go favorites, and then we'll go [19813] comments. Now, depending on whether this [19817] is normal, maybe we'll go title, views, [19818] likes, comments, favorites, and then if [19820] you think about it, like channel ID, [19821] channel title. Yeah, we don't need these [19822] either cuz it's kind of self-evident. [19824] Like it's good data to have just because [19826] it'll make my life easier when I build [19827] out the rest of the stuff, but it's not [19829] necessary. And then embed HTML. That [19830] sounds fun. Let's go embedd HTML. Cool. [19832] So, I'm pretty sure now we have [19833] everything that we need, right? I'm just [19835] going to rearrange this by selecting [19836] everything and then double clicking on [19838] the um column tag. So, we have the ID, [19840] publish at, it'll say title, then it'll [19841] say number of views, likes, comments, [19843] and it'll say favorites. Then it'll say [19844] the description, tags, duration, [19847] definition. Cool. Looks like a pretty [19849] good database to me. This is going to be [19850] our template DB from now on, right? So I [19852] just wanted to make it perfect or as [19854] perfect as possible. So now what we have [19855] to do is we actually have to add it to [19856] the sheet. Actually first thing we have [19857] to check if it exists in the database. [19859] My bad. My bad. After that though we'll [19860] add it. So let's actually just implement [19862] the adding functionality right now and [19863] then we'll do the checking if it exists [19865] functionality afterwards. So we need to [19866] map it manually. So I'm just going to [19868] fetch the columns by refreshing this. [19870] It's not finding it. Why? Uh, I think we [19873] might have to [19875] go I think I might have to refresh this [19877] or [19880] something. Kind of [19883] annoying. So, I think I got to feed in [19886] the channel ID [19891] here. Okay, so the way that the append [19894] or update row works is there's an ID [19896] column that you actually match incoming [19898] queries in. So, that's actually cool. We [19900] don't actually need to do the logic. I [19902] just talked about because it'll just [19903] automatically find old entries and [19905] update them using the ID column which is [19907] incredible. So fantastic. Boy is NAN fun [19910] sometimes. Now what we have to do is we [19912] have to do this annoying laborious [19914] process of just mapping everything. So [19915] I'm going to map the title over here. Uh [19918] now I'm going to go down to the views [19919] cuz I was a little presumptuous and I [19922] wanted the views to be first. I wanted [19925] all my viral videos to be first, baby. [19927] Okay. Favorite. Cool. Now we'll go all [19930] the way up to description. [19932] Uh tags is going to be interesting if [19934] you think about it logically. Like look, [19935] there's a bunch of tags here, right? So [19936] how do you actually like get a specific [19938] tag in there? Um you got to use string [19940] logic. So just going to put tags in. And [19942] then you see how it's an array right [19944] now. You just join the array um with [19945] some sort of delimiter. And now we have [19947] all the tags here. I like adding a [19949] delimiter and a space. I don't know why. [19951] I just I think it like works and looks [19953] better. It works better with more [19954] platforms. So I'm just going to do tags [19955] like that. The duration. That was pretty [19957] interesting, right? So where's the [19958] duration again? Okay. Okay. right over [19961] here. [19964] PT39M26S. So, h [19969] uh okay, I'm just trying to think in my [19971] head, what's the simplest way for us to [19972] do this that works on arbitrary strings? [19974] Let's just open up the expression [19976] handler. So, if I split this based off [19980] the presence of an H, what do we have? [19981] The whole thing, right? If I split this [19983] off the presence of an M, what do we [19985] get? Is it always going to be PT? Let's [19988] just do GBD40 [19991] [Music] [19992] PT3926S [19994] 39M26S. What is this format called? [19997] Let's see if we can get an answer from [19999] the lovely Galaxy Brain. ISO 8601 [20002] duration format. I want to parse [20006] this functions and turn it into the [20010] number of seconds. Simplest way. Let's [20013] see what it tells me. Paris, duration. [20015] It matches this PT whatever. Oh, I get [20018] it. So, it's actually extracting three [20020] types of data. The number of hours, the [20022] number of minutes, and the number of [20024] seconds. Uh, could I just match this [20026] inside of here? Let's see. So, this is [20030] reject. No, match. Okay. So, yeah. Yeah, [20032] we got a match over here. Can I just [20033] copy this? This would be sick if I could [20035] just copy this. Maybe I [20037] can. This is going to look like magic if [20039] you don't know what reax is, but it's [20040] actually pretty cool. Yeah. So, it just [20042] did that. How neat is that? [20044] Okay. So now if I want to get the [20047] duration, what I have to [20049] do, is this matching globally? I think [20052] it [20053] is. What I want to do is it looks like [20057] this array will always have four [20058] elements. Okay, it's always going to [20060] have pt what? It's going to have the [20062] full string first, then it's going to [20063] have null, then it's going to have the [20064] number of minutes, and it's going to [20065] have the number of seconds. If you think [20066] about it, I just multiply the number of [20068] minutes by 60 to get the number of [20070] seconds times minutes. Uh, right? So 39 [20073] * 60 would be the number of seconds and [20074] then 26 I just add that. So I'm pretty [20078] sure what I have to do is I think I have [20082] to add this is going to be tough. What's [20085] the simplest way for me to do this in [20087] such a way that [20088] like isn't super complicated. I mean I [20091] could just use a code node. I'm just [20092] trying to stay away from code nodes [20094] because I want to keep this really [20095] simple. Okay. So in an array you can [20097] index it with square brackets. So zero [20099] would actually select the first element. [20102] One would select the second element, two [20104] would select the third, and then three [20105] would select the fourth. It's zero [20107] indexed, right? So, it actually goes [20108] like there's only four elements. So, if [20109] I put four, it's selecting the fifth. We [20111] can't see it, but three, we can. So, [20112] what does this mean? If we want to get [20113] the total duration in seconds, I [20116] basically grab the total number of [20118] seconds, right? And [20121] then let's just actually, yeah, we kind [20124] of have to do code here, but anyway, I'm [20126] going to grab the number of seconds. I'm [20127] going to add [20128] it. Oh, it's not allowing me to add it [20131] because it's a [20133] string. I think we have to go probably [20136] two number here. Then we'll go two [20139] number. Now it should be 52. Okay, cool. [20141] So, what we do next [20143] is we go [20146] two, we multiply this by 60. That's the [20149] total number of seconds in the video. [20150] 2366. [20152] If you think about it, you kind of need [20153] to do the same thing [20155] for [20157] 1 * 60 * [20161] 60. And voila, we should have a [20164] relatively consistent way to always get [20166] the number of seconds the video. Sanity [20168] check here. Let me go back here. [20169] 3926. 39 * 60 + 26 is 2366, which looks [20174] pretty good. Okay, so we did end up [20177] doing a little bit of code, and I'll be [20178] honest, it's not very pretty. This is um [20181] probably one of the uglier expression [20182] fields that I think I've made in my [20185] life. It's not very maintainable either. [20187] But what this is doing logically is this [20189] is using a regular expression to parse [20190] out three fields. The number of hours, [20194] the number of minutes, the number of [20195] seconds, and then it's just saying we're [20196] adding up seconds plus 60 * the number [20199] of minutes plus 60 * 60 * the number of [20202] hours. Okay. All right. Now, everything [20204] else here should be pretty easy. So, [20205] we're going to go definition. That seems [20206] good. It's for small thumbnail. [20210] I'm just going to feed in [20212] the default URL here, medium URL here, [20217] large URL here, and then standard URL, [20219] which I guess is the biggest. Oops. Um, [20222] I think I just deleted a field by [20224] accident. Channel ID was next. My bad. [20227] Channel [20228] title. So, channel ID was uh what? Right [20232] over here. Channel title was right over [20236] here. and all the way at the end. Embed [20238] HTML is over here. Okay. Good god, that [20240] took forever. Should now have everything [20242] we need, [20243] right? I think so. So, let us cross our [20247] fingers and add. Going to go over here, [20249] click test step, it's not adding. So, [20252] okay, it did end up adding. Very cool. [20253] Very cool. I don't like how it bumped it [20255] and made it really big, though. That's [20256] uh going to make looking at my database [20258] a pain in the ass. So, what I'm going to [20259] do here is I'll select all. I'm just [20261] going to drag this column to approximate [20263] what I think the normal size of a column [20264] is. That's a little short. There you go. [20267] So now all future columns will look like [20269] that. Also, uh I'm going to rearrange [20272] this. I just double tapped on it again. [20274] It's a little big. I don't like the [20277] description being that big, but I do [20279] think it's important that I can like [20280] read it at a glance. So I'm just going [20282] to rearrange the [20284] description. Rearrange the tags as [20290] well. That looks fine to me. Duration [20293] looks good. Small thumb, large thumb. If [20294] I just copy this, paste this, am I going [20296] to get the thumbnail? I will. Wonderful. [20297] Got the iframe as well. This is just [20299] something you can embed in your website, [20300] which is kind of neat. But yeah, I don't [20301] need the whole thing. So, I'm just going [20303] to make this a lot smaller. Okay. So, [20305] yeah, now we have the database template. [20306] And if you think about it logically, [20307] what we can do is we can just duplicate [20308] this, right? Just duplicate this over [20310] and over and over and over again for [20311] every video. So, if I go back here, uh, [20314] we've now done two things in one shot. [20316] We've actually automatically checked if [20317] it exists in the database with the [20319] append logic. And then if it does exist [20320] in the database, then we don't add it. [20322] We update it. And then if it does, it [20323] Yeah. So, we've actually finished this [20325] first system a lot faster than I thought [20326] we would. Very cool. Very cool. All [20327] right. So, what I want to do now that [20328] I've tested this on one item. Um, [20331] basically anytime you're you're building [20333] any sort of NAD system or really any [20335] automated system, test on one item first [20338] and then once you're done testing on one [20340] item, test on basically like two plus [20342] systems. This is sort of like your I [20344] don't know if you want to call it like [20345] your order of operations, but one is [20348] simple, right? Because it's very easy to [20349] get up and running with one example like [20351] we did a moment ago. Now, we need to [20352] test it on two examples. Odds are if [20354] something works on two examples, it's [20355] going to work on like n examples where n [20357] is the total number of examples that [20358] we're feeding it in. Like if it works on [20360] two, it's probably going to work on [20361] eight. If it works on eight, it's [20362] probably going to work on 3,894. Like [20364] that's just, you know, a programming [20365] thing. Logically, when you go from one [20367] to two, what you do now is you implement [20368] loop functionality. And that's one thing [20369] we have to verify. So we figured it out [20372] for one. Why don't we now try running [20373] this like on an actual practical test [20375] for two? Notice how everything right now [20377] is pinned, though, right? So I'm going [20379] to do is I'll go all the way back here, [20381] unpin. So, I just pressed [20383] P. And then this Google sheet here. [20387] Should I delete this? Yeah, I'm just [20388] going to delete it. Okay. And then I'm [20390] just going to save this now. Always [20392] save. And then where it says limit, just [20395] going to do the limit to two. And [20397] actually, I'm realizing that I think we [20398] can just set the limit here, right? No, [20400] we can just set the limit here. There's [20401] no need to do this. That was silly. So, [20402] what I'll do now is I'm actually just [20404] going to um do the limiting directly in [20407] the YouTube node here. Do two. Okay. And [20411] I'm not just going to test one. And I'm [20412] going to test all because um this is [20414] where the looping logic comes into [20417] play. Now it's adding or appending. And [20420] it looks like we got two. Cool. So let's [20423] just verify everything here worked fine. [20425] What is the duration of this video? [20426] That's like one pretty complicated piece [20428] of logic I implemented. So let me just [20429] double check. It's actually [20431] 1,628. I pretty sure it [20434] is. So 27 * [20438] 60 and then 08. Yeah, that's true. That [20441] is actually it. Cool. Yeah. I mean, you [20443] know, I think we did it now. We've we've [20444] verified the test. Uh I guess there's [20445] one more test that we need to do. If you [20447] think about it logically, like we've [20448] tested that it works on one [20450] channel. So now let's test that it works [20452] on multiple channels. Okay. So I'm going [20455] to do now is I'm going to copy the ID [20456] that I have over [20459] here. And then I'm just going to do it [20462] for another channel. And then if I run [20463] into issues there, I'll I'll, you know, [20465] figure out the issues. So, who whose [20466] other channel I want to do Leonardo [20469] Gregarios just cuz this guy's one of the [20472] nicest. Okay, there we go. Okay, so [20474] copying this now. What am I going to do [20476] next? Well, I'm just going to add it to [20477] my channels thing. Paste it in. If you [20480] think about it, I have my SOP, right? [20481] Like for all the channels I paste in, [20483] I'm just going to duplicate this now. [20485] And I'm just going to go over here. I'm [20487] just going to paste in the new ID. And [20490] I'm just going to like delete both of [20491] these. Let's delete this. Now when I [20495] rerun this um what I should do is if you [20497] think about it logically I should grab [20499] both of the rows from both of the rows I [20502] should then get all the videos for the [20504] person then I should get all the [20506] specific videos of the all the videos [20509] ids and I should filter out all shorts [20511] and then I should add or append to the [20512] sheet and it should go logically newest [20515] to oldest. Okay, I think this is his ID. [20517] We're going to give it a [20519] go. So it's reading the sheets 2 44. I [20523] mean, mathematically looks good to me. [20524] Now it's updating all [20526] four. No, it didn't end up working. And [20529] why? It looks like we just dumped all of [20531] Leo's videos into my channel. [20534] H, ain't that a metaphor for life? [20539] Uh, okay. I think I know where this [20542] happened. The appender update right now [20544] is probably hard- coding me, [20546] right? I'm feeding in [20549] JSON.nippet. ID. What I think I need to [20551] be [20552] doing is I need to be changing this [20555] dynamically, [20556] right? So, right now we are feeding in [20559] this channel ID here. No, this should [20562] logically be working. This channel ID [20564] should change, right? Should change. So, [20567] let me just check the JSON now. I'm [20568] checking the JSON of the entries. [20570] Channel ID here was UCBO. Whatever. [20572] Okay, cool. That's fine. This other one [20575] should probably be UCBO as well, cuz [20576] that's me. Okay, now for this one, that [20578] should be not be mine. Should be UC8. [20582] Yeah, UC OB. So that looks good. Is it [20585] not finding mine? [20587] Maybe [20589] H. Maybe I just copy this [20592] now. Paste this in. Is this the same [20595] thing? Yeah, this is the same thing as [20597] this thing. Not really sure where this [20599] issue is arising from. [20603] Well, there may be like some builtin [20606] logic, a built-in that prevents it from [20613] iterating. I've seen this happen before. [20616] I feel like this has actually happened [20617] to me before where NAN does not have the [20619] ability to do this, believe it or not. [20624] So, what I the way that I saw this [20626] before was I added a bunch I created a [20628] bunch of new Google Sheets, one for [20630] channel. That's not going to work now. [20632] That's not going to work at all. So, I'm [20634] going to have to find a new solution to [20635] this and I'll have to do a live. [20639] So, what I'm going to [20642] try is naden has an additional piece of [20644] functional. This is a bug to be [20646] abundantly clear. This should not occur. [20648] Logically speaking, we're feeding in new [20650] channel IDs to a sheet and that variable [20652] should persist should not persist. It [20654] should reset at the beginning of every [20656] uh loop. But for whatever reason, it's [20658] not. So, we have to do [20661] is we have to feed we we have to take a [20664] fundamentally different approach. I'm [20665] going to do this approach using the loop [20666] over items um note. Okay? I want you [20669] know that stuff like this is going to [20670] happen. What's important is that you [20672] just don't freak out get super emotional [20674] about your system just not [20676] working cuz if you do you know the [20679] likelihood that it will continue to not [20680] work is much higher than if you don't. [20683] So what I'm thinking we're going to do [20685] is for every item that comes in we're [20686] actually going to loop over every [20688] individual item. Okay. The loop over [20690] items batches is basically a place uh a [20692] node that where you can add a loop route [20693] and then you can add a done route. The [20695] loop route just is whatever you're [20698] planning on doing. And then the output [20699] feeds back in. And then basically for [20701] the number of items you feed, in this [20702] case two, as we see, um it'll run once [20705] and then a loop and then it'll run twice [20706] and it'll loop again. So what I want to [20708] do is I want to see if me adding a loop [20710] over items node changes anything here [20713] materially. So I'm going to go back [20715] here. I'm going to delete all four of [20718] these. [20719] Then I'm going to see if I might need to [20721] update the the logic. So I'm going to [20723] test this first. Then I'm going to see [20724] if maybe there's some way we could reset [20725] the data because this, you know, it [20727] seems logical to me that we should be [20728] able [20729] to. Okay, so we're still dumping this [20732] in. We're still dumping everything, [20733] which is [20734] unfortunate. So let's see why. At least [20736] now we can actually logically run [20738] through both the items that are fed in. [20740] Okay, so this was run one, which will [20743] have two items, which is for me. This is [20746] run two, which will have two items for [20747] Leo. [20750] So the input should be the channel [20753] ID. Oh. Oh, I'm actually hard coding [20756] this now. My bad. My bad. Uh, we should [20757] actually be able to dynamically encode [20759] this now, right? So maybe maybe I [20761] actually screwed up here. Maybe I wasn't [20762] using a variable here. It's not over. [20764] It's not over just yet. We might have [20766] already fixed this. Okay. Now, what I [20768] don't like doing is I don't like doing [20770] what I'm showing you guys here where I'm [20771] constantly hitting the APIs over and [20772] over and over again. So, my [20773] recommendation is don't get yourself in [20775] this position to begin with because if [20777] you're constantly hitting these APIs, [20778] it's just a matter of time before one of [20779] them rate limits you and says, "Hey, you [20780] know, you've done this way too many uh [20782] way too many times." If you think about [20783] it, we're doing two API calls to this, [20785] another two API calls to this per API [20787] call, right? It's like four API calls [20789] total. Okay, I'm seeing um a missing [20791] parameter here now. This is good. It [20793] means that we're actually moving [20795] forward. Oh, what the hell's going on [20798] here? We got to re do I have to remap [20801] all [20803] this. I don't really know what's [20805] happening there. I think what happened [20807] is when I changed this out for the [20809] snippet [20811] variable, it momentarily pulled it off [20815] and then when it pulled it off, the [20817] variables here just stopped. They like [20820] disappeared. So that's not good. I [20822] wonder if that's going to happen every [20823] time. This took me a quite frankly [20826] stupid amount of time. So that's [20827] annoying. Um, but I'm just going to cut [20829] through this to save yall a little bit [20832] of time. Okay, I just ran this with a [20834] subset of the data so that I didn't have [20836] to remap it all if and when it [20838] inevitably broke and it worked. So, we [20840] actually got it. As you see, we have one [20841] here and then another here. So, what [20843] I'll do now is I'm just going to fill [20844] out the rest of this. Pretty stoked [20845] about it, though. I knew there'd be some [20848] issue and I'm glad that we got to work [20849] through it live. Okay, this has taken me [20852] a fair amount of time to do. So as [20854] opposed to trying to work it out [20855] logically, I'm actually just going to [20856] paste the code that I'm currently [20857] working on to try and uh recreate that [20859] duration match directly into chatbt and [20862] then say building this inside of N8 [20865] TLDDR. I'm processing an ISO [20869] 8601 duration code and trying to turn it [20873] into a number of seconds. Here's what I [20876] have above. Debug why it isn't working. [20879] also need it to work even if there are [20883] no elements found. Let's try that. H I [20886] see. Well, that's very [20889] good. They're giving me a little snippet [20891] of code here. I don't know if this is [20893] true. H does look very good. Yeah, that [20897] is the number of seconds that I was [20898] looking [20900] for wrapped in this little function [20903] execution thing. So, it can be used [20904] directly inside of NAD. It's not as good [20906] as a code block, but this allows me to [20908] not have to use a code block. So, okay, [20910] I think I'll leave it there. This seems [20911] somewhat robust. I don't know for sure. [20912] Sometimes AI code just blows, but this [20915] is enough for me to actually run the [20916] test, which is what I care about. And [20918] then instead of me worrying about like [20919] whether or not it's perfect or complete, [20921] I'm actually just going to run the test [20922] and I'll let the test tell me. Okay, so [20924] let's test it. And you know, in reality, [20926] your systems won't cover all edge cases. [20928] The idea is that they just cover most [20929] edge cases. That's number one. That's my [20931] channel. And this should be Leo's [20932] channel now. Yes, looks good. I'm not [20934] seeing any tags on his videos. Why is [20936] that? Oh, wow. He must just not add [20938] tags. Oh, dude, you got to add some [20939] tags. Just make a note to text him. Bro, [20941] you got to add [20944] tags. All [20947] right. I'm sure he's going to find that [20949] pretty funny. Let's close this up and [20951] then Yeah. Okay, cool. So, we've now [20953] done that first section. And if you [20955] think about it, that's actually all we [20956] need to do because we just tested that [20957] it works on one. Uh then we tested that [20959] it works on two. So, we should now be [20960] able to do this on basically an infinite [20962] number, assuming that we don't rate [20963] limit out and stuff like that. It's a [20965] problem that some people will have. Next [20966] up, what we have to do is we have to do [20967] a daily digest. What this daily digest [20969] was going to do is it's going to grab [20971] all the data inside of that database of [20973] ours. Okay? So, it's going to list all [20974] of them. Then, for every sheet inside of [20976] our database, it's going to go through [20978] then it's going to get us all the [20980] videos. And then what we want to do is [20983] for every video, we want to calculate [20985] the average. So, for every list of [20986] videos, like this is a list of videos [20987] here, right? We want to calculate the [20989] average number of views and then we're [20991] going to use that to determine the [20993] multiple of the new video. And then if [20995] the multiple is over some threshold, aka [20997] the threshold that we define, which I [20999] think I'm just going to do like 2x like [21001] you know in multiple detection if you [21002] think about it logically, there are a [21003] variety of different ways you can do [21004] this. You use like 2x like 5x like 10x [21007] 2.5x. You could have it like change with [21009] time. You can define it somewhere else [21010] and you can do anything that you want [21011] really. I'm just probably going to do 2x [21013] cuz that seems simple to me. and then [21015] I'm going to include it in some sort of [21016] like daily email digest. Sounds fun. [21018] Okay, so let's build out the logic for [21020] that. That's going to be another NAN [21023] function or workflow. So I'm going to go [21026] back here. The way that I like to [21027] organize these is I like to tag them [21029] one. So Nad course and then also I like [21032] to do them same way I used to do them [21034] way back in the day on make.com. I used [21036] to go title YouTube trend detector ad [21038] update and then I'd go to YouTube trend [21041] detector. This would be daily digest. [21044] All right. So, these two are separate, [21046] right? And I'm running this manually [21047] right now, but if you think about it, [21048] realistically, you should be running [21049] this on some sort of schedule. So, we [21052] should add the schedule trigger to this [21054] instead. And then at you, you could add [21056] multiple triggers. So, now it's [21058] scheduled technically if I turn it on. [21059] Schedule I'm going to add is let's just [21061] do one. Let's trigger at I don't know 6 [21063] a.m. or something like that at minute [21065] zero. So basically now every morning at [21067] 6, assuming that I turn this on, this is [21069] going to run and then it's going to [21070] proceed through the rest of my flow and [21071] just, you know, get get that first bit [21073] of work done, which is nice. And just [21075] because there's nothing on the done [21076] loop, I'm just going to add this here. [21078] This isn't the prettiest, but I Well, [21080] yeah, I think that looks okay. Notice [21083] how this was completely unnecessary if [21085] there were not bugs in NAN. There were [21086] bugs in NAN, which prevented us from [21088] doing this just cuz some of the data [21090] persisted when it probably shouldn't [21091] have, but you don't actually need this [21092] loop over items. Maybe future versions [21094] will solve this automatically. Okay, so [21096] let's do the daily digest. First thing [21098] we need to do is we just need to grab [21099] all of the data in all the sheets, [21100] right? So, this is going to be kind of [21102] tough to do. I don't actually know how [21103] we're going to do it. [21106] Um, what are we going to do? What are we [21110] going to do, ladies and gentlemen? All [21111] right, first thing we're going to do is [21112] we're going to grab all of the rows in [21114] the sheet. So, I'm going to go over here [21115] to channels. Just grab all the channel [21117] IDs. That makes sense, right? Talking to [21120] myself here, right? [21123] Okay, we're going to grab this. I'm [21125] going to test this. We're going to grab [21127] channels. Very cool. All right, I'm [21129] going to pin this. So, now we're going [21131] to have some pinned outputs here. Now [21133] that for every channel, what do we have [21134] to do? Well, we want to get all of the [21137] uh rows in the sheet for the sub [21140] channels. [21141] So, what am I going to do? I'm going to [21143] add my credential. And we may run into [21145] the same issue that we just ran into, by [21146] the way. So, YouTube trend detector [21147] database right over here. The sheet that [21149] I'm going to feed in is I'm going to use [21151] the name and then I'm actually just [21153] going to drag this in. Now this is going [21155] to be the expression node. So now what [21157] we should get logically, okay, is we [21159] should now ping this twice and then [21161] return four items in total. We're [21163] feeding into we should get four because [21166] um every uh sheet currently has two. So [21169] one, two for me, one, two for Leo, [21170] right? So I'm going to test the step and [21172] we'll see if we get it. As always, I'm [21174] I'm like expecting to get a certain [21176] output and I'm actually just rating what [21178] I'm expecting to get against what I [21179] actually get. Okay. So, the way that I [21180] like to see the data is using JSON. It's [21182] just easiest. So, he quit his job. [21184] That's good. Fix 90%. That's good. He [21185] quit his job. Fix 90%. Notice how this [21188] is run twice now on the same um ID. [21191] Okay. So, this is the same problem that [21193] we were running into before. Logically, [21194] we're going to have to find a way to [21195] solve it. So, let me think. Where are we [21197] going to add this? We're probably going [21198] to add the loop [21199] here. Delete the replace me. And then [21201] I'll delete this little route. And I [21203] think probably going to have to do is [21204] probably going to have to loop over [21206] this. So what I'm going to have to do [21207] actually is first I'm just going to run [21208] this so I can grab the data from the [21210] loop over items node. Okay, let's just [21212] test this workflow. Let's see what we [21214] get from here. We got a loop branch with [21215] one item with the channel ID. Okay. [21217] Okay. Very good. Very good. Now that we [21219] have this, I can actually map this [21220] individually. Now what I'm going to do [21223] is I'm going to let this loop over this. [21225] And now I'm going to let this go. And [21226] let's see if this fixes it. Do once, [21230] twice. Okay. Okay. And now we have two [21232] runs. So first run was me. Second run is [21236] Leo. Very cool. So we've actually gotten [21237] everything that we need. How cool is [21238] that? All right. So where we at now? So [21240] we got all sheets. We got videos in each [21242] sheet. Now for each list of videos, what [21244] we need to do is we need to calculate [21245] the average. How do we calculate the [21246] average? Well, in NAN, we're returning a [21248] list, an array. Okay. And in this array, [21250] we have views right over here. So we [21252] should very easily be able to determine [21254] the views mathematically just by doing a [21257] little calculation. I don't know. Is [21259] there like a calculate node? I don't [21261] think [21262] so. Do we need like a set node? Probably [21265] a set node, right? So, I'm going to add [21267] a few fields. I'll add views here. No, [21268] we can't actually do this. What we need [21269] to do first, sorry guys, is we need to [21271] aggregate this, I think, cuz this is [21273] currently many items. What we need to do [21275] is we need to put it into one item. So, [21277] I'm going to aggregate [21280] H. It'd be really nice if we could just [21283] get the average. Okay. I think we might [21286] need a code node just to make it. [21288] There's a million in one ways to do [21289] this. I think the code notes is probably [21290] the [21292] easiest because what we [21294] do is we're going to just aggregate all [21297] of this stuff. Now, so for con item of [21300] input.all, input.all just gets all of [21302] the items that are being fed into [21306] it. I think what I'll probably do here, [21311] first of all, I'm going to pin this pin [21313] this output right here. Okay. Second of [21316] all, I'm going to go const, let's just [21320] say array equals [21322] input.all. I'm going to return array. [21325] We're going to uh I don't actually think [21327] this is going to [21328] work. Okay. No, it it did [21331] work. Once we have an array, we're going [21334] to need to perform a mathematical [21335] function on that array. You know what? [21338] Why don't I just have AI do it as per [21339] usual? It's funny. Every time I'm like, [21340] I'm just going to code this myself. I'm [21342] like, well, I could do it myself. Or I [21346] could just have AI do it. [21348] So each entry includes a views [21352] parameter. I want [21355] to get the average each item in [21359] the input includes a views parameter. I [21361] want to get the average of each item's [21365] views and then filter so that I only [21370] output items who have view counts [21375] views over 2x the [21379] average. Okay, we're going to generate [21382] new code here. You could also ask [21385] anything else. You don't have to ask [21386] this model specifically. Just wanted to [21388] see if I could do this easily. So [21390] logically this is grabbing all of the [21391] input items. It's then mapping [21393] them. It's grabbing the item. It's [21396] getting the JSON. Then it's getting the [21398] average views. So it's doing what's [21399] called a reduce function to get the [21402] average. This is unnecessary to be [21404] honest, but it does it anyway. This is [21406] very proper filtered items. Cool. This [21409] is the multiple that I'm going to be [21410] using two. And it looks like it looks [21412] pretty good to me. I'm going to return [21413] this now. See what happens. No output [21415] data returned. Well, that doesn't make [21417] any sense logically, right? it has to [21419] return some sort of output data. The [21421] reason why is because logically [21424] speaking, if you have an average of two [21426] items, the average has to be higher than [21427] one item and then lower than the second [21428] item, right? It kind of makes sense. So, [21431] we should definitely have some sort of [21432] data here. It might just be because I [21434] need to reloop this. I'm just going to [21436] test this workflow out and just see if I [21438] dump it like this, what [21441] happens. No, it looks like we're feeding [21443] in the items and then it's not really [21446] calculating the code, which blows. [21451] your current code doesn't work. Come up [21454] with a [21456] simpler way to determine the average of [21459] all of the [21462] items and match it against that average. [21464] Let's try this. And then if that doesn't [21466] work, then I'm just going to ask Chat [21470] GBT. Consulting the guy that made all [21472] this stuff up. That's [21474] funny. Going to test this. I'm still not [21476] getting any output data. So I think [21478] logically there's just like [21481] some silly issue here. I'm going to run [21485] this through chatbt. What did I do for [21497] aski? Okay, it's giving me interesting [21500] idea. [21505] Um, I just got to copy the code [21514] here. Okay, so we're now going to add a [21516] little bit of debugging logic, it looks [21522] like. Now I'm going to open up my code [21526] editor, go to [21528] console, then I'm going to test this one [21530] more time. [21534] says, "The average uses 4,456." Oh, no. [21537] That actually looks okay. Oh, you know [21538] what it is? I think we're running this [21540] just [21542] once. Uh, let's see here. Feed in two [21548] items. Feeding in both of my items. Then [21550] we're calculating the average fees. Now, [21551] what are we calculating? We're [21552] calculating my average fees. So, 3,999 [21555] for the first [21558] item. Then 4,913. So, the average to [21562] this [21564] logically 4,456. Cool. But no, it's not [21567] returning the it's not returning the [21568] items that have [21569] more. That's annoying. There must be [21572] some some other problem here. I don't [21574] like it. [21590] Okay, so it looks like we are feeding in [21592] two raw [21596] items. Looks like all view counts are [21599] here. Total views, average [21601] views. Okay, looks like it's adding up [21603] the views. [21615] H it still seems to be doing it weird. I [21617] really don't like using the code blocks. [21619] So I'm just going to cut that out. Use [21621] the filter [21622] here. What I want to do is say [21626] views is greater [21631] than. Okay. I ended up solving this with [21634] a simple filter node instead of a code [21639] block. And then I fed in this [21642] expression, which probably seems pretty [21644] intimidating to you, but let me walk you [21645] through it. So we grab the previous [21647] node, this Google Sheets node here. Then [21650] we get all of the items. In nad, you can [21653] get an individual item using the dollar [21655] sign JSON syntax or you can grab all of [21657] the items by referencing the name [21659] explicitly and then using a doall. Then [21661] I'm using a function called reduce. Now [21663] what reduce does is it's just a simple [21665] well it's a unfortunately complicated [21666] way of just calculating the average. [21668] It'd be really cool if there was just [21669] like an average function or something [21670] like that. Maybe there is maybe I'm just [21672] making this all way too [21674] complicated. H I don't think so [21678] though. Yeah. No, I think you have to do [21681] unfortunate code. But um what this is [21683] doing is this is reducing then it's [21685] grabbing the sum and the item and then [21687] it uses this arrow function to just like [21688] add it up. So this this basically just [21690] grabs the average and I'm dividing it by [21692] um the total number of items here. So so [21695] this sorry this gets the total number of [21696] views. This divides them up. For [21698] instance, if there's 10,000 total views [21699] and that's across two videos, the [21701] average is 5,000, which is actually [21702] pretty close to what it is. And then [21704] what we do is we just feed that into a [21705] filter block and we say, "Hey, is the [21707] number of views of this individual [21708] element greater than the average number [21709] of views of all?" Pretty [21710] straightforward, right? Pretty simple. [21712] If so, and we return this, which is [21713] cool. And then after I'm done returning [21715] this, if you think about it logically, [21716] what do we have to do? Well, we want to [21717] accumulate all of these and then we want [21719] to send them out in an email, right? So, [21720] I don't just want to add the email here. [21722] I actually just want to like run through [21723] my whole thing. I'm going to add my [21724] email over here instead. But just for my [21727] own sanity, what I want to do now is I [21728] just want to test this filter out on all [21730] of the data. So, I'll go test workflow. [21732] Grabbing the data from the Google sheet, [21733] doing the filtering steps. Cool, cool, [21735] cool. And it looks like on run one there [21737] was one item kept. That makes sense [21738] because out of two items, obviously, one [21740] and an average will be kept. And run [21742] two, one item was kept as well. These [21744] would be our outliers, for instance. And [21746] now we have those two items accessible [21748] to us in the done branch as we see here. [21750] And what we want to do now is we just [21751] want to make an email delivering these. [21753] Again, there's a million in one ways to [21754] do this sort of delivery. I'm just going [21755] to do a Gmail. So I'm going to do is [21758] I'll say send a [21760] message. And we don't need to loop the [21762] done. Just leave that over here. We do [21765] need to loop this [21766] though. Okay. So then I'm going to move [21769] this lower right here. This right over [21772] here. Simplest way I found of organizing [21774] this stuff. Maybe that's annoying that [21776] we can't do one [21778] [Music] [21779] more. Oh, na. Why must you do this to [21782] me? Then we're going to add our [21784] credential. So, this is the same idea as [21786] before. You just click create new [21787] credentials. Sign in with Google. So, [21788] I've already created a bunch of [21789] credentials here. So, I'm going to close [21790] this. Then, I'm just going to use my [21792] Gmail account number four. And [21794] hypothetically, I'm just going to um [21795] send this over to my personal email. And [21799] then I'll say daily [21800] digest trending YouTube videos. email [21804] type HTML over here. Um, you don't have [21807] to do HTML. I'm just going to copy all [21810] this and feed this in AI. So, let me see [21813] if I could just go from here all the way [21815] down to here. I'll say above is a bunch [21819] of data on trending YouTube videos. [21822] Format this into a simple HTML email I [21825] can send. It's part of a daily [21828] digest. Oh, sorry. All I care about are [21834] uh let's see here. We want the the [21838] title, the [21840] channel, the [21843] thumbnail, the video [21849] duration, the video duration, and the [21852] multiple. Right. Right. We should [21854] totally do the multiple. Uh okay. Well, [21858] let's just keep this for now and then [21860] I'll add the multiple afterwards. [21861] Multiple is really cool to have. Now, [21862] it's going to format this as an email. [21865] Hopefully, I'm just getting network [21867] connection loss. I'm not entirely sure. [21869] It might just be my hotel [21871] internet. Okay. Okay. Okay. Here we go. [21874] Here we [21875] go. I don't know what this is. What is [21877] this supposed to [21879] be? [21884] H. This is hardcoded, [21888] right? I don't like why this is how this [21891] is laid [21892] out. Okay. Daily AI video digest. Cool. [21896] All right. So, missing title. We'll put [21897] the title here. Channel title. Duration [21899] over here. Okay. Okay. Cool. We'll do [21901] the thumbnail here. Okay. Uh, hold on. [21905] This is just [21906] one. I should [21912] say meant to [21915] say include the variables [21919] as let's do [21921] that. That way I can just very quickly [21924] find and replace all the variables in a [21927] moment. Cool. Going to copy this now. [21930] Paste this [21931] in. Oh no. I don't want the each man. [21935] Ridiculous. [21937] Ridiculous. Yeah. Yeah, we don't want [21939] each. That [21942] sucks. I don't Can we actually do that? [21944] Maybe we [21946] can. Fascinating. That would be pretty [21948] cool if we could. I don't know if we can [21950] or else we don't know. We could uh I [21953] could do the logic here, but actually, [21954] let's just send one to [21956] start and then I'll worry about [21958] everything else later. Okay, we'll just [21960] send one to start. We'll go [21962] expression. Let's do this. Uh image [21966] source, we'll just [21968] do large thumb [21971] here. Title of the video will be I just [21975] want to um get something on on the page. [21978] Basically, I just want to have an email [21979] sent so that I can very quickly and [21980] easily identify whether or not it's like [21983] a trash template. I don't actually care [21985] about all of this data too much. [21988] Duration, this kind of sucks, but [21990] seconds, I guess. And I'm just going to [21993] remove this each thing. So we should [21995] just pump out one of these now. Okay. [21997] And then I only want this to run. This [22000] is running twice now. Why is this [22001] running twice? H. We need to aggregate [22003] these is what we need to do. That's my [22006] problem [22007] here. I'm just going to aggregate all [22010] item data into a single [22012] list. Uh it's unfortunate because we [22015] have to actually run should have to run [22017] everything here. So let's just do this [22019] um test workflow aggregate. That should [22022] now be my output. [22024] Cool. Very cool. Very cool. And then [22028] now probably going to have to remap [22030] this. Yes, I will. It kind of sucks. Oh [22032] well, that's what it [22034] does. Let's just do the first. Okay. So, [22037] we'll go source and then I'll go large [22042] thumb. Then here under [22046] title data zero.title. [22053] title, channel title. Cool. And [22056] duration. Awesome. Now, if I test this, [22059] should send an email. So, I can go to my [22062] email and just see how bad the [22063] formatting is. Usually, the formatting [22064] is like not the [22067] best. Okay, looks pretty good. Couple [22070] things that I don't like here. I don't [22071] like the size of this. Can I make this [22072] smaller? Probably. We can probably make [22074] this smaller just by changing the Yeah, [22076] we're using the large thumb here. I'm [22078] going to try using the small thumb for [22080] one. What else don't I like? I don't [22082] like the fact that it says this email [22083] was sent automatically with NAN. So in [22085] NAN, you can change that. Just go to [22086] append NAN attribution. Turn that off. [22089] Looks pretty okay, [22090] honestly. Fix 90% of your AI agency [22093] problems in 30 days. Okay, let's try it [22095] again. We go [22098] here. H Oh, nope. That's pretty blurry. [22102] That's pretty blurry. I don't like that. [22105] Yep, that is a little small. Can we [22107] change the image image source class [22110] thumb? Oh, you know what? That's the [22112] problem here. That's the problem. Let's [22113] just change 240 pixels and then we'll [22116] still use the large thumb, but we're [22117] only going to be at 240 pixels. Okay. [22119] And then what else do we really want? I [22121] guess we just want all of them. So [22122] logically, how do we do that? What we [22124] have to do is basically for every item [22126] inside of aggregate, we just have to [22128] generate this. Why don't I just paste [22130] this in again and see if two emails look [22134] okay. This looks fine now because it's [22136] in 240 pixels, right? Yeah, it's not the [22138] best just to have them all laid out like [22139] this. Kind of wish we can go like uh [22142] like [22144] lengthwise. If I feed this in [22147] here and then I [22151] say just feed this into AI, let's do [22155] GBD4.5. And I'll [22158] say this is an HTML template that's [22161] supposed to [22163] return a nice looking [22167] minimalistic list of higherforming [22170] YouTube videos. I put two as an example, [22175] but it should scale to infinitely many. [22178] Right now, this looks poor. This looks [22180] bad because they're stacked on top of [22183] each other there. And I don't like the [22186] formatting [22187] etc. fix this so it looks nice and clean [22191] and [22192] the videos are side by side in some sort [22197] of clean uh uh [22199] minimalistic but sleek grid pattern. [22205] Okay, there you go. We're going to see [22208] how that performs. We'll keep the two [22210] and then after I'll deal with the logic [22212] on generating multiple little video grid [22215] things. The thing is like emails just [22218] inherently lack like the ability to do [22220] some cool formatting which sucks. So, oh [22222] sorry I didn't mention this. Sorry, [22224] sorry, [22225] sorry, sorry. This is an HTML email so [22229] it needs to be formatted in light of [22232] that. Right. Emails are formatted a [22234] little bit differently than um websites. [22237] So, it needs to be um tables instead. [22240] And it doesn't look like it's a table. [22242] Okay, cool. Anyway, it's going through [22244] and it's now creating me this little [22245] digest, which is nice. Okay, let's [22248] expand this little code block now. Hide [22250] this [22251] sidebar. And then what I want to do Oh, [22254] we can actually preview the output. No [22255] way. Got a little um HTML thing in [22258] here. Doesn't look very good, not going [22260] to lie. Oh, don't tell me it's using [22262] each. Please don't use each. Damn it. [22264] It's totally using each, isn't it? [22267] We just said no each. Yeah, it's doing [22271] each. That [22274] sucks. We just need to go TR [22279] now. I [22286] think is this. Okay, cool. That looks [22288] much better. Um, so now we have [22291] basically this nice infinite layout. So [22294] if I added more, we'd be able to do [22295] more. Now I just have to generate the [22309] code. 1.7. My [22312] bad. Where does it do the 1.9? Does it [22315] have a 1.9? [22324] That'd be much [22349] Yeah. 140. Uh, what's the width here? [22364] It's kind of like 170 [22366] probably maybe [22373] 180 need 20 on both sides [22378] right try [22383] And then I'm also going to change this a [22386] little bit. [22388] So we'll say [22425] Cool. Looks [22428] fine. Nice. All right. Cool. Cool, man. [22432] Nice. I'm liking this. [22436] Uh, this [22438] array. Um, why is the array the same [22440]  though? Oh, that's a problem, man. [22442] Why is the array the same This [22444] array should not be the same [22447] We should have different items [22463] here. I mean, it looks it feels a lot [22466] better for sure. Let's test this now. [22478] This like still a really weird cut off [22480] here, [22481] man. That's not right. Thumb container [22483] object fit [22487] cover. Dimensions. What are dimensions? [22489] I don't understand. What are my [22493] dimensions? Height and [22496] width. Width. It is 100%. [22514] Um, so where is this being applied? Can [22517] I do like 160? Oh, 170 [22521] 180 [22525] 160. I feel like it's 155. Okay. You [22528] know, it's probably 155. [22531] probably 155. So where is [22535] this go back here and then instead [22538] of [22543] 155 send this now that way it's not [22546] going to be super skinny [22549] again. Nice. Oh yeah, that's perfect. [22551] Got the whole thumb, baby. That's what [22552] I'm talking about. Okay, we can just set [22554] Nixar and duration whatever on the same [22556] line, can't we? [22560] Mhm. Okay. So, let's just uh get a list [22563] of things we want to do [22564] now. Is there padding over here? I don't [22567] know why there's padding over here. Just [22569] remove the [22574] padding. Okay. So, we've now verified [22576] that this works on two. I was just [22578] feeding in examples of the exact same [22580] code snippet, um aka like the the same [22582] thumbnail and stuff, but now I want to [22583] make it so that it works with different [22585] thumbnails. So, I'm just going to jump [22586] in and actually make a little do a [22587] little snippet of code to handle this [22589] for me. First, I'm just going to trust [22591] that this runs on data. At least that's [22593] what I'm doing right now that I'm [22595] pinning, but I actually want to like [22596] have it run on live data. So, I'm [22597] actually just going to test this [22598] workflow and see what's going [22603] on. Okay, looks like we've now sent one [22606] email and I believe it's going to be the [22608] same thing twice, right? Okay. No, no, [22611] no. We're actually getting um we're [22612] getting data directly from So, that's [22614] actually fine. Uh, looks like the sizing [22616] is a little bit off. I don't really know [22617] entirely what's going on with that to be [22618] honest, but uh, yeah, these are actually [22620] the Yeah, these are actually the trends. [22622] So, to be honest, like it kind of kind [22624] of already works. Um, one big thing that [22625] I want that we don't currently have is [22627] we just I just want the multiple. So, [22630] that's one thing that I have to do. So, [22632] how am I going to do the multiple? [22635] H, well, I guess I could just put the [22637] multiple right next to the title, right? [22639] So, I think that's what I'm going to do. [22640] I'm going to go into the HTML template [22642] here. [22644] And then where I have the title, which [22647] is right over [22649] here, I'll add a span for the [22653] title. Then I'll also add a span for the [22656] multiple. And for the span, I'm just [22659] going to go style equals font weight. [22662] And then I'm just going to go bold. Then [22665] over here, I should have be able to come [22667] up with like a little multiple. Now, [22670] what is the multiple? Uh well the [22672] multiple is going to depend on this. [22675] So guess I can just copy all of this. [22677] This is not at all clean. I'm going to [22679] be doing calculating like directly [22680] inside of the template which most people [22682] do not recommend. Okay. But [22685] still f it we [22687] ball. Try not to swear as much. Let's [22690] think about this. What are we doing? [22692] What are we [22695] doing? I know what I'm going to do if [22697] you think about it logically. [22702] What we need is we need this filter to [22706] open an additional [22712] field. We need to drag all of [22717] these in. Can it just automatically [22722] map? No, I can't. [22730] Okay. So, yes, I can. That makes sense. [22732] What we want is we want that average, [22733] right? So, I'm going to go to filter and [22735] I'm going to calculate the average. Then [22738] here, I'm also going to say [22741] average, feed that in as an expression. [22744] So, now we're going to get the average [22745] and we're going to get this. So, what [22746] this means is when we actually feed back [22748] to the loop over items, it's going to [22749] have everything that we need. I'm just [22751] going to undo this and test it for [22754] myself. It's going to include the [22755] average, which we can then use to find [22757] out the [22757] multiplier. We get everything we need [22760] plus the average. Plus the average. [22762] Wonderful. Now we connect this to the [22763] aggregator node. Now I can use this [22766] average to Well, sorry. I guess I need [22768] to run this. [22770] Um, kind of annoying, but it's what it [22773] is. We actually have to run all this [22774] with the aggregator. My bad. So, we're [22776] going to hit the APIs a bunch more [22777] times. Let's see if we get a rate limit [22779] issue. Nope. [22782] I'm just too crazy with it. We get the [22785] average. Wonderful. We're going to pin [22786] this. Now, we're going to connect this. [22788] And now that we have this, we can [22789] actually go through the HTML template [22791] somewhere over here. Establish that [22794] average. So, let's do the [22796] math. What I'm going to want is [22814] this going to [22819] work? Does that work? I don't [22823] know. I don't know what I've been [22829] told. Yeah, I don't think we have the [22831] ability to do each. This doesn't really [22833] solve my [22836] problem. [22838] Oh. Oh, it does. It does. It does. [22841] does. Okay. Okay. Okay. Wait. Uh I'm [22843] aggregating here. I aggregate up there, [22845] right? [22856] Wait. What happens if I feed multiple [22858] items into this HTML node here? What [22863] happens? [22871] I don't know. Let's give it a try, man. [22874] Why the hell not? [22876] Um, We're not getting the data [22878] anymore. Are we getting the data [22880] anymore? Jason data one title, [22884] right? Oh, yeah. Yeah, we can just do [22888] this, [22890] right? Delete that. Delete [22893] that. Cool. Let's delete the [22896] [Music] [22898] TDS. [22900] No, we just get rid of that, [22903] too. Okay. So, where's this video [22910] table? I doing a table per video or [22916] what? I think we just deleted this [22918] Let me delete all that [22921]  Delete that for sure. [22926] It says [22929] TR. We can probably just output them [22932] bunch of these, [22936] right? Let's kind of do that [22940] again. [22949] Um, why is it doing the same thing? [22952] because I'm returning the same [22955] thing. Well, I mean, this is this is [22957] what I wanted. So, now I just [22958] concatenate them, [22960] right? [22968] Yeah. So, I just go [22970] here to the video table. Cut out of [22975] this. Now, what I do is I do this [22983] No, I do Yes. [23036] Right. That's what I'm talking about, [23038] baby. We mapped the hell out of that [23040] man. Then [23043] um [23046] split. [23049] Wait. Then join. Then split with [23053] nothing. Oh, That's all I do. [23064] That looks That looks good to me, right? [23067] I don't know why we're getting two of [23068] the same outputs, but like it should be [23077] okay. Oh, We sent it twice. [23086] Um, maybe we just run it once. Probably [23090] enough. Execute [23091] once. Yeah. Sorry about [23094] that. Oh Where the hell's the [23096] thumbnail now, [23102] man? Why are we getting the thumbnail? [23118] Yeah, there's the there's the data right [23119] there. [23140] Yeah, it's not [23143] rendering. That [23146] sucks. Why is it not rendering? [23181] Nope, that doesn't [23183] work. Why the doesn't that [23187] work? Isn't that the whole idea, man? [23189] that you can insert freaking variables [23192] like [23225] Holy this is [23227] brutal. I really want to do the HTML [23230] template thing if I could just do code [23231] to do it. See, we may have to just like [23233] fix all this man. I got all the [23235] stuff [23257] out. We need to delete [23260] this, right? [23291] Well, it's now inputting the URL, which [23293] is cool with uh the X at the end of it. [23296] So, could I [23301] concatenate? Nice. That's [23307] cool. Source is this. Then I want to [23311] concat [23313] One more. Is that going to work now? Oh, [23316] for sakes. Come on. Chop. Chop. [23319] Nice. That actually did work. [23321] Cool. Very cool. Very cool. Uh, all [23324] right. So, what what are we doing over [23327] here? Video table thumb container thumb. [23329] So, let's use a class of [23332] thumb. We'll go [23336] source class equals [23339] this thumb. [23342] Okay. Oh [23345] yeah. Okay. And then now that we're all [23350] done with that, what are we doing [23358] here? [23360] Okay, we now send one item. Hello [23365] email. my [23368] life. What the hell's going on? [23373] I think I know what it [23375] is. Had like a good thing going here for [23378] a [23379] bit like 15 minutes [23385] ago. Give me that email template, [23389] man. What were we feeding in [23392] here? Image source large thumb thumb [23396] container on the outside. Are we still [23398] doing that? [23402] image [23407] source im uh thumb container on the [23410] outside. [23414] Right? It's image source equals [23418] thumb [23420] concat class [23423] thumb. That's good. I don't see any [23426] issues with that. So, why is the email [23428] coming out all [23430]  A quick tip checker online. [23434] Please go over here to Yes. [23467] [Music] [23471] Mhm. Oh, that's [23477] useful. Come on, [23480] man. That's just not That's just not [23483] nice at all. Why would you break on me? [23485] Um [23489] h container [23492] right video table [23496] right remember earlier when this is [23498] working fine not that one [23504] okay table tab body [23508] tr thumb [23512] container so it's trd [23515] dev TR TD [23519] dev, right? Looks good to [23523] me. But for whatever reason, when we're [23527] turning these on, they break. And also, [23529] we're running the same data over and [23531] over and over again. Why is [23533] that? We should have new data, right? [23540] Like not seeing any output data on this [23543] branch. [23547] So why is this going two get four filter [23552] in [23553] two and for the first round it's 90% 90% [23558] so I don't fully understand what's going [23560] wrong [23561] here something is [23567] though we pumped out two channels good [23571] for both channels what we do is we loop [23573] through the Google [23580] sheet. Looks good. Then I'll put a [23583] filter. Filter keeps one, discards one. [23588] So now we have two items left. The two [23591] items on the left side. That looks [23593] good. Two items on the right side. That [23596] also looks [23598] good. Loop one. [23608] Yes, we are actually getting them now. [23610] Wonder. We're now just going to create a [23612] new chat GBT template entirely. One that [23614] is much much better looking than this. [23616] Let's go [23618] chat. Go over here. Change this to [23628] 04. First string is my HTML template. [23632] I am creating a simple daily digest app [23635] that includes trending videos [23643] from [23648] HTML. Above our HTML templates that are [23651] sent via email wrapper HTML in the [23655] second [23687] Still looks like Come on, man. [23690] What is going on with these black [23693] bars? Okay, just crop the images [23697] in point on both sides. Height should [23702] be what is the height right now? [23711] Grab the height of [23714] this. Grab the height. Where's the [23738] height? Care for the [23742] demo? Probably. Sorry. [23755] You would have thought that San [23756] Francisco would have better open [23759] AI access, [23761] huh? Apparently not. [23777] Oh my goodness. It's It's good, but [23779] that's too that's too much. Okay, so [23781] here's what we're going to do. I'm going [23784] to find the specific snippet of code [23786] where it actually cuts into my freaking [23788] things. Okay, so height 155 pix. So [23792] that's way too [23794] small. We're going to do we're going to [23797] say double. We're going to double it [23801] 310. Boom. Is there anything else that's [23804] 155 here? [23808] No, this is good. Supposed to be good, [23810] but yeah, it's too much. Okay, multiple [23813] undefined. So, we also need the [23814] multiple. Where's the multiple average? [23818] So where we get the [23821] multiple we're going to do is concat [23829] uh JSON dot [23832] um JSON [23834] dot views divided by JSON average. Okay. [23839] All right. This going to be it. [23859] Oh yeah, sorry. We need to round it. Uh, [23861] how do we round this? [23881] probably. Okay, I'm going to run this [23883] one more time just in one second and [23885] then we should be [23891] good. Then instead of two or three, why [23894] don't I [23896] add Well, we should probably do like [23899] five or something, right? Should [23901] probably run this once before [23903] I start saying stuff. Have it screw up [23907] on me during the [23911] demo. Let me just make sure that Can I [23914] still see my mic and stuff? [23915] Yep. No issues there. Looks good. Looks [23919] good. We'll run it now [23926] once. Clean as hell. [23930] Nice. That's perfect. Multiple one. Oh [23935] god. One [23938] more. Y'all ever done [23943] this? Okay. Anything [23952] around decimal places. Okay. We just [23954] need two. You now built a trend [23956] detection system that automatically [23957] identifies viral content opportunities. [23959] And that's pretty cool to me. Next, [23961] we're going to build a sophisticated [23962] LinkedIn AI outreach system that creates [23964] targeted Apollo searches using natural [23965] language. We're also going to enrich [23967] prospects with detailed profile data. [23969] We're going to generate personalized [23970] icebreers. And we're also safely going [23971] to send connection requests through [23972] automation. Lots of agencies, including [23974] LinkedIn lead genen agencies, AI [23976] automation agencies, content agencies, [23978] they depend on LinkedIn. And being able [23980] to automate that process saves hundreds, [23982] if not thousands of dollars per month. [23983] So, the system's going to handle the [23984] entire LinkedIn lead generation flow [23986] from prospecting all the way to [23987] outreach. You can charge $2 to $5,000 [23990] for the system depending on volume and [23991] the number of accounts you have because [23992] it technically automates what used to [23994] require a full-time [23996] position. Okay, so here's a demo of the [23999] system from start to finish. We start [24000] with a form that I fill out which I'll [24002] show you in a second. That form [24004] basically asks for us to define the [24006] search parameters in natural language. [24008] So I am going to get to say I'm looking [24009] for creative agencies between one and a [24011] thousand people that are in the United [24013] States. And it will actually create an [24014] Apollo search URL for me completely [24016] autonomously. We're then going to [24017] generate a search URL here. Then run an [24020] ampify actor. Um I'm setting a limit [24023] node here. For those of you that don't [24024] know, limit node is just sort of a [24025] testing node. Allows me to set lower [24027] limits so I don't overwhelm an API. [24029] We're then doing a personalization step [24030] right over here. Um then I'm adding this [24032] to a Google Sheet database. You can find [24034] this Google Sheet database um right over [24038] here. This Google sheet database is very [24040] simple. We're just logging the ID of the [24042] LinkedIn account, the first name, the [24043] last name, the full name. Sometimes I [24045] like to have that the LinkedIn URL, the [24047] title, the email status, the photo URL, [24049] and then the icebreaker. And then [24051] finally, we are aggregating all of that [24052] data so that I could send an API call to [24054] a tool called Phantom Buster. And I'm [24056] going to cover all this stuff in a [24057] second, but for now, let me just show [24058] you guys what this looks like in [24060] practice and what the end result is. I'm [24061] going to test workflow. It's going to [24064] ask me to define my audience type in [24065] plain English. So, I'm going to say um [24068] I'm looking for creative [24070] agencies around one to um let's say [24075] 100 people staff across the United [24080] States. I want the decision makers. So, [24085] come up with a [24087] bunch. Then I'm going to click submit. [24089] Now that I've done this, what's [24091] happening is it's going through and it's [24092] generating a search URL. Now, the way [24095] that this works is the service that I'm [24096] using basically takes as input a giant [24099] search string. And so, I'm having AI [24101] generate the search string. The search [24102] string is ultimately what is going to um [24104] allow us to do said [24106] search that looks just like this. I'm [24108] going to copy this over. If I paste this [24110] in, um what this will do is it'll [24112] actually go through and then get [24113] decision makers that are within my [24115] custom audience, in my case, 967 people [24117] across the United States. If we proceed [24120] with this, it will then um run uh what's [24123] called an appy actor. It's a service [24125] that we're going to be using to scrape [24126] this group of people. That appy actor I [24129] can find back over [24132] here. What this is doing is it's going [24134] and it's identifying who these people [24136] are. It's extracting their email [24138] addresses completely autonomously and [24139] then it's also getting me a bunch of [24141] additional data on them. Okay. After [24144] we're done with that, we then pass [24145] through a limit node. We have an AI [24147] model here, GPT4, that actually goes and [24149] creates customized ice breakers for the [24151] connection requests. And then what we do [24153] is we'll actually dump that into a [24154] Google sheet before aggregating that and [24156] then triggering a Phantom Buster agent. [24158] Phantom Buster is the tool that we're [24159] going to be using to grab the data from [24161] this Google sheet right over here and [24163] then actually physically produce our [24166] LinkedIn connection request over here. [24168] Okay. And what that looks like on um [24171] their end is we are now running this [24173] Phantom Buster auto icebreaker connect [24176] and it's actually going through and it's [24178] simulating real human activity in order [24179] to send the message essentially and the [24182] connection request. Finally, as this [24184] proceeds down the list, we will have the [24186] actual data right over here alongside [24188] the specific status whether or not this [24190] has been sent. Um, and so we have [24192] actually gone through and we've sent a [24193] bunch of connection requests at various [24195] times of the day to these various people [24197] using the system. And it was all done [24199] 100% [24202] automatically. So I want to make [24204] something super clear. As of this [24206] moment, I've not actually built the [24207] system yet. I wanted to show you guys [24209] what a live real build process looks [24211] like from start to finish by somebody [24212] that actually does this for uh for for a [24215] living on a daily basis. I think right [24217] now on YouTube it's really fancy and [24218] popular to like put a finished product [24220] in front of people and be like here's a [24222] system here's how to put it together but [24224] that people don't actually show what [24225] like the live development process looks [24226] like. In reality the live development [24228] process is filled with a lot of detours, [24229] a lot of ups and downs, a lot of um [24231] guesses that you know don't actually end [24233] up panning out. And you know I want to [24235] show people how to actually build [24237] systems that make people money. I don't [24238] just want to show people like a finished [24240] kind of sanitized version of it. Um, so [24242] that's why you guys are going to see me [24243] do it all from scratch and that's why, [24245] you know, I'm I'm structuring this video [24246] in this way. It's very important to me [24248] not just to like show somebody a picture [24250] of the Eiffel Tower and then be like, [24252] "Hey, now that you've seen the picture, [24253] you know how to build it, right?" It's [24254] like, "No, I actually want to I want to [24256] show people the building process. I want [24257] to show people the schematics and the [24258] diagrams, if that makes sense." Cuz uh, [24260] for the most part, that's my audience. [24261] So, yeah, uh, this is the road map at [24264] this point in time. Basically, what I'm [24266] thinking I'm going to do is I'm going to [24267] start by scraping Apollo leads using [24268] Apify. Then I'm going to enrich leads [24270] with personalizations and I'm going to [24272] send a Phantom Buster for LinkedIn DMs. [24274] Now, if you don't know what any of these [24275] platforms mean, I'll explain them to you [24276] right now. Apollo is basically a big [24278] database that allows us to get a bunch [24281] of information based off search filters [24282] like dentists in the United States with [24285] 1 to 50 staff members. Okay, the issue [24288] with Apollo is it's a very expensive [24291] database. And so instead of me just [24293] getting leads directly from Apollo, what [24295] I'm going to do is I'm going to use this [24296] tool called Ampify, which is kind of a [24298] scraper, which allows us to plug in an [24300] Apollo URL, and then it goes in, it [24302] actually like scrapes the HTML of the [24304] page to find us the leads. Okay, so it's [24306] kind of a hack, but this is basically [24307] what everybody's doing right now to [24308] scrape um scrape Apollo. And the reason [24310] why, you know, everybody's saying that [24311] that's okay is because Apollo is just [24313] scraping LinkedIn Sales Navigator. So [24315] it's kind of like, you know, scraping [24316] the thing that scrapes the place that [24318] scrapes, you know. Um anyway, so this is [24320] our scraper. I'll show I'll show you all [24322] these platforms in a second. Then OpenAI [24323] is obviously like our AI tool. And the [24325] reason why we're using an AI tool here [24326] is because um we need to personalize the [24329] messages that we're going to be sending [24330] to people. You know, after we find the [24332] people, we're also going to get a bunch [24333] of information about them. We're going [24335] to figure out where they live. We're [24336] going to figure out their interests. [24337] We're going to figure out their job [24338] titles and stuff. Well, if you actually [24340] just feed all that stuff into um AI, you [24342] can have AI write something that seems [24343] pretty customized. Like it's not like, [24345] "Hello, dear person. I would like to [24347] sell you stuff." It's like, "Hey, Peter, [24349] you know, saw that you went to, I don't [24351] know, like the U of A. Um, that's super [24353] cool. I love that you did X, Y, and Z, [24354] and this may be totally out of left [24356] field, but I thought we should connect." [24357] It's something like that, right? It's [24358] obviously I'm going to write it way [24359] better. Um, but just to give you guys [24361] like give you guys some insight into [24362] that process, that's basically what [24363] everybody is doing right now in any sort [24365] of cold air outreach. Anyway, after we [24367] have the personalization and all the [24369] lead data and the LinkedIn profile URL, [24371] and basically after we've done these [24372] first three steps, okay, what we need to [24373] do is we need to send the outreach. And [24375] so I'm going to be using a tool called [24376] Phantom Buster to do [24378] that. And finally, we need to do it, you [24381] know, on LinkedIn. So I threw in [24382] LinkedIn over here. Um, but let me make [24384] this clear. Uh, this is a very short [24385] moment of time in which you can use all [24387] of these tools together in the way that [24388] I'm about to show you. So, you know, [24390] because we have access and availability [24392] to these tools, we can do the really [24393] cool thing that I'm that I'm about to [24395] do. Um, if these tools didn't exist, you [24397] could still do it. It' just be like way [24398] harder and it'd be a lot more difficult. [24400] So, I prefer to use pre-made tools [24401] wherever possible just to expedite my [24403] workflow. That's sort of like my guiding [24405] principle here as somebody that does AI [24406] and automation. Okay. All right. So, [24409] Apollo kind of looks like this. As you [24411] can see, it's literally just a database [24413] on the lefth hand side of people. Okay. [24416] So, hypothetically, let's say I want [24419] creative agencies. I'm just going to [24420] type in creative agency as a keyword. [24422] This is not the most effective way to do [24423] this, by the way, but I just wanted to [24424] show you guys what it looks like. And [24426] then, um, under job titles, maybe I'll [24427] go owner, CEO, I'll go [24430] founder. I'll go partner. So, and I'm [24433] just typing in like titles of the people [24434] that I'm looking for, right? Um, okay. [24437] Anyway, I'm just going to leave it at [24438] that. And what do I end up with? I end [24439] up with 844 creative agencies um in I [24443] think I put United States here [24445] somewhere. Maybe I didn't. Oh, yeah. [24447] Location, United States. Cool. So, [24449] that's all Apollo released for. I mean, [24451] I could go into more detail about it. [24452] I'm not going to just for the purposes [24453] of this, but essentially, we can we can [24455] generate a list of people. Okay. And so [24458] once I have this list of people, the [24459] question becomes, all right, like how do [24460] I actually extract something meaningful [24462] from this? How do I actually like get, I [24463] don't know, an email address? How do I [24464] get like a LinkedIn profile URL? How do [24466] I actually, you know, get their phone [24467] number or whatever? So normally, you [24469] know, I would export this in Apollo, but [24471] it costs a ton of money. And so instead, [24472] what we're doing is we're going on a [24473] tool called Appify, which is basically a [24475] big library of scrapers that people have [24477] put together. And we're going to find a [24479] tool that allows us to scrape all these. [24481] So I'm just going to run a proof of [24482] concept first before I even build [24484] automated systems. And I'm just going to [24485] run through this whole thing manually. [24486] Um, so let's do it. Let's do [24489] Apollo. Pump that in there. And I'm just [24492] going to use this one here. I think I've [24493] used this one many times before. So I [24496] just want to verify that I have access [24497] to it. Yes, I do. Okay. All right. So [24500] I'm just going to paste this search URL [24501] in here. This is just how the tool [24502] works. It costs a$120 per thousand [24504] leads. So if we want to scrape a,000 [24506] leads, cost you $120. I should note that [24508] you can only do a few um like a 100 or [24510] 150 LinkedIn connection requests totally [24513] cold per week per account. So, like you [24515] can think of this as basically $1.20 [24517] will give you enough money to run this [24519] LinkedIn campaign for a whole month. Um, [24521] at least in terms of leads. You [24522] obviously still need to pay for the rest [24523] of software platforms. But anyway, uh, [24525] here we pump in some search records. So, [24527] 500 search records, get work emails, get [24529] personal emails, find, whatever. I'm [24530] going to click save and start and let's [24531] just see what happens. Okay, we're [24532] running this manually. We're not doing [24533] any sort of API yet. Uh, I will I will [24536] put the system together in N8 after, but [24539] okay, cool. So, as we see, it's saying [24540] it's found 100 results. That's cool. [24543] Now it's getting some more. If I go to [24545] this output tab, you can see the actual [24547] results. Pretty neat, huh? We're getting [24549] all these people's data. And oh man, are [24552] there a ton of fields, right? There are [24554] a lot of fields. I'm not going to go [24555] into detail on all the fields, but I'll [24556] just show you that, you know, you can [24557] just you can just run these searches um [24560] basically free. Uh which is pretty cool. [24563] And yeah, we just live in a we live in a [24564] pretty specific point in time where you [24566] can actually do that. Okay. Anyway, I'm [24567] just going to manually export this. I'm [24570] going to do it as a CSV. Why? because I [24571] would just want to visualize this in [24572] Google Sheets. And now I'm thinking, [24574] okay, like once I visualize it, I can [24576] actually go through and I can use AI to [24577] do some stuff. So this is my thought [24580] process. Just trying to narrate it live [24581] so we see what's going on. I built out [24583] many similar systems like this. So [24585] obviously because I built similar [24586] systems like this, I kind of I kind of [24588] have a feel for like where things are [24589] going. But uh I'm just going to import [24591] now and then I'm going to go to upload [24593] and then drag and drop this file that I [24595] just exported. And I the reason why is I [24597] just want to visualize it. And I'm going [24598] to go append to current sheet. That's [24599] just going to allow me to, you know, I [24600] just change the title. I don't want to [24602] have to redo it all. Okay, cool. So, I'm [24604] going to hide these so I don't expose [24606] every single person's email address. [24607] But, um, as we see here, we now have a [24610] big list. We have city, country, [24612] departments, department, email domain, [24613] email status, employment, um, [24616] employment, you know, creative agencies. [24618] Obviously, all of these companies have [24619] the term creative agency in their title, [24621] which is great because I'm looking for [24622] creative agencies in this hypothetical. [24624] Um, founder and CEO, right? Then we got [24626] a ton of other ones, too. I think um [24628] Apollo just exports all of the fields [24630] about their job history, which is why [24632] it's so long. So if people have had like [24634] 10 jobs, it'll actually like export all [24635] of them. Good god. Okay. But the one we [24638] really the one we really want is we want [24640] LinkedIn [24641] URL, which is this one right here. Okay. [24644] And as we see, we don't get the LinkedIn [24646] URL for everybody. But how long is this [24650] list? [24652] Um this list is 101. Okay, it's 101 [24656] long. I'm just going to scroll up and [24657] then select all these. It looks like we [24659] got [24661] 60 six uh I guess we're counting that [24663] one, too. So, 60 I think it's like 66 [24666] out of [24667] 100. So, we get about 66% of these as [24670] LinkedIn profiles, which is great. Um, [24672] you know, if I go down to email, I bet [24673] you we probably get a ton of emails as [24675] well. You always got to check the source [24677] data, which is why I'm doing what I'm [24680] doing. Um, we got 77. So, we actually [24682] got more email addresses than we did [24684] LinkedIn profiles. That's really [24685] interesting. But anyway, whatever. So, [24687] I'm sure you guys can imagine any sort [24688] of outreach campaign that you guys run, [24690] you guys could send emails and do [24692] LinkedIn DMs, right? And that's kind of [24693] like the golden um the golden egg, the [24697] golden goose. That's kind of like the [24698] golden goose egg. You know, if you hit a [24700] person on more than one platform, then [24702] that's obviously ideal. Um today, I'm [24703] just going to be building a LinkedIn [24704] system that does that outreach. But I [24706] want you guys to know that I've built [24708] the omni channel supposedly, that's what [24710] they're called, omni channel scrapers [24712] and systems and stuff like that a ton of [24713] times. um it's it's no major issues at [24716] all and um if there's demand for it then [24717] I could show you guys how you like kind [24718] of combine these two but okay so now we [24721] have a lot of stuff right we have [24723] profile fields we we we have everything [24725] it's great um so the question is where [24726] do we go from here well what I want to [24728] do now if we go back to our little road [24729] map is now that I've verified we can [24731] actually scrape Apollo leads using [24732] Ampify manually this little blue check [24735] mark is going to mean manually the green [24736] one will be after I'm done it um [24737] automatically we need to enrich the [24739] leads with personalization okay what is [24741] personalization well we basically need [24743] to write like a really small little [24744] snippet that we could stick at the very [24746] top of our LinkedIn, okay? So that when [24749] somebody gets a connection request, you [24751] know, it's it's just going to be a short [24752] little message that says like, "Hey, [24753] Peter, how's it going? Love your stuff [24755] and really want to connect with you." [24756] Okay? And that's what we're looking for. [24758] We're looking for for something over [24759] here. Hello, Fahhem Bernard and Anna. [24761] Hopefully you guys appreciate the views. [24763] Um, so actually, can I just going to [24766] show a little bit more here so I could [24767] see if I get an example? You see this [24769] from this lovely dude, Enel, who I think [24770] is in my Yeah, he's in Maker School. um [24772] I think I recognize him. He said, "Hey [24773] Nick, I just joined your community at [24774] school. I'm excited to start this [24775] journey." Okay, so we we basically want [24777] to personalize this just like Enel did. [24779] Um although obviously you're not going [24780] to be able to say that you joined my [24781] community, but by doing this, there'll [24783] be a much higher conversion rate on the [24784] back end. People are going to be a lot [24785] more likely to actually click the accept [24787] button if they see a message. Like you [24788] know, a lot of these other guys have [24789] joined my communities and stuff like [24790] that. And that's fine. Um but like you [24793] know, how much more likely am I to [24794] accept enels because I see that he's [24795] written me that message, right? A ton. [24797] That's the same logic we're going to be [24798] using. All right. All right. So, uh [24800] where are we? So, we just need to [24802] determine that we can personalize this. [24804] But, um, I know that LinkedIn has [24805] specific limits around how long we can [24807] do this. So, LinkedIn connection [24810] requests character limit. I'm just going [24812] to Google this really [24813] quickly. And it looks like we have a [24815] character limit of about 300 characters. [24817] That's actually pretty that's pretty [24818] small, eh? So, okay. So, 300 characters [24822] to words. Let's see how long that is in [24825] words. So, it's between 42 and 75. So, [24828] it's probably about 50 words or so. So, [24829] we actually got to make sure that our [24830] personalization snippet is super super [24832] short. Okay. Um, anyway, let me go to [24835] GPT40 here and let me just define a [24837] little prompt. Um, you are a helpful [24840] intelligent writing assistant. I'll say [24842] your task is to take as input. You guys [24845] might not be able to see all of this [24846] here just because I have my my face sort [24849] of covering it. Wonder if I can make [24851] this smaller. No, I [24853] can't. Anyway, trust me when I say this [24855] is going to be the most banger prompt of [24858] all time. Your task is to take us input [24860] a [24861] um bunch of LinkedIn profile [24865] information of a [24867] user and then generate a very short, [24871] very [24873] punchy icebreaker that I can use as a [24876] variable in the introduction in my [24879] connection [24880] request. So, I'm just asking it to do [24883] stuff like I'd ask a staff member. To be [24885] honest, AI is at that point now where [24887] it's intelligent enough to basically [24888] fully understand the context. Uh, if you [24890] go back to my previous videos from like [24892] a year ago, things have changed a lot, [24893] but now you can just ask like you would [24895] ask for anything from [24897] anybody. So, um, return results in this [24901] format. I'm going to have it return it [24902] in JSON JavaScript object notation. I [24904] know this may seem complicated to some [24906] people, but um, this just allows me to [24908] automate it later and I just want to [24909] verify I can do this. So, return um, [24912] your results in this format. Let's say [24915] icebreaker. Icebreaker goes [24919] here. Um, in order to ensure ice [24922] breakers are punchy and high quality, [24925] make them follow this [24930] template. Hey X. Hey [24936] name. Love seeing thing about them. [24944] I'm also into [24947] other [24949] thing plausible tie [24954] in thought [24957] I'd connect. Okay, so now I'm just going [24960] to see the length of this. I'm going to [24962] go to a website called word counter. So [24963] this one's 12 words, right? That's easy. [24965] And I think it's actually going to be [24966] even better because if I just scroll [24968] down here, you see how um yeah, you see [24971] how this message is like basically also [24973] about 12 words or so. So this is going [24974] to appear right before the see more [24976] badge. I think it's going to be great. [24977] This is going to be super super [24978] valuable. So um yeah, that's what I'm [24981] going to do. Um so I'm going to I'm [24983] going to add this [24984] in and then I'm going to say [24989] LinkedIn fields. Now I'm actually going [24991] to give it like an example of the data [24992] that I want it to personalize based off [24994] of. And then I'm going to see how it [24996] performs. And then assuming all the [24997] stuff is good, then I'm just going to [24998] pump it into NAND like one shot and it's [25000] going to be perfect. And by the way, um [25002] this kind of this is a good opportunity [25003] for me to talk a little bit about why [25004] I'm doing all this stuff like manually [25006] as opposed to going in Nad. And the [25007] reason why is because um I'm sure I [25009] could make it look really sexy and clean [25011] if I just did it all in N. But I don't [25013] normally actually build systems like [25014] this. I will start by just doing it [25015] manually at least once and just [25016] verifying that it kind of looks the way [25018] that I think it's going to look and [25019] works the way that I want it to look, [25021] works the way I want it to work. And [25022] assuming that it does, then I pump it [25024] into NAN and then you know I actually [25025] work through the the automation bits [25027] because the way I see it there's the use [25028] case and then there's the automation of [25030] the use case. Okay, so that might [25033] provide a little bit more context and [25034] hopefully that uh makes things clear. [25036] But okay, so we just need to feed in a [25038] bunch of fields here that'd be relevant. [25040] So what are we going to do? Obviously [25042] we're going to need the name, right? So [25043] I'm just going to grab Danielle [25046] um who is row number four. [25051] Um, just go Morgan [25054] here. Then I'm just going to dump it all [25056] in in plain text. [25059] Okay, let's just [25062] go Fort [25065] Lauderdale. [25067] Okay, like this. Um, that's probably [25071] pretty relevant. DM Creative Agency, [25074] it's probably pretty relevant. Founder [25076] and CEO. Oh, so maybe I'll go founder [25078] and CEO at DM Creative Agency. [25081] Cool. What else is like interesting and [25084] unique about [25085] her? Employment [25088] history. Um, I guess I could include it, [25090] but let me just see if there's anything [25091] else that might be a little bit better [25092] than employment history. I'm just going [25094] to drag this all the way to the [25096] right. Florida H. Okay. So, I mean, [25100] really, I don't have too much [25101] information here. I really only have [25102] like the company name. [25105] Um though it looks like a bunch of [25107] interests about the or sorry keywords [25109] about the organization. I might be able [25110] to feed that in [25116] there. Okay. Well, I think in that case [25118] like I'm going to have to feed in some [25119] of the past employment history, right? [25121] That makes sense. [25122] Um, in that way my um, you know, my [25126] outreach can talk about like, you know, [25129] it's I like that you went from doing [25132] like sales at whatever [25134] to being a founder of your own company. [25136] That must be interesting or or I did [25138] something similar or whatever, right? [25139] Like that's basically the vibe I want to [25141] go [25142] for. Previous [25146] experience. Um, and then I'm just going [25148] to say Outlast [25150] Eyewear. And then, sorry, I know I'm [25153] jumping around a lot here, but then I [25154] will say account [25156] director [25158] at Man, I cannot get these all tabs [25160] right at Red Ancy. Okay. And then I'm [25164] going to have it generate me the [25165] icebreaker now. Hey Danielle, love [25167] seeing your journey from regional sales [25168] director to founder and CEO. I'm also a [25170] creative leadership. Thought I'd [25171] connect. That's that's okay. That's [25172] okay. I don't really like the usage of [25174] the keywords here. Regional sales [25176] director. I want um I don't want to use [25178] the variables exactly because I want to [25180] imply that I've actually like read [25182] through it. So either I will lowercase [25183] them or I'm going to paraphrase [25187] them. [25189] Okay. Make sure to follow this template. [25191] So what I'm going to do here is I'm just [25192] going to zoom out a bit. I'm going to go [25194] over here and edit the [25198] prompt for thing about [25201] them and [25204] plausible plausible tie in. Never use [25207] the exact [25210] variable. Um, never use the exact [25213] information provided in a linked field. [25216] Instead, always paraphrase. [25219] This makes it seem human written instead [25222] of just an AI or an automated message. [25225] Let's do that. Okay. I'm going to delete [25227] this and we'll just run it one more [25230] time. Okay. And I'm also going to [25232] provide a little bit more context now [25233] because I don't like the result. What we [25236] had is, "Hey Danielle, love seeing your [25237] entrepreneurial journey with DM Creative [25238] Agency. I'm also passionate about [25239] turning vision." It's funny. DM Creative [25241] Agency. I guess it's her name, but like [25243] I'm I'm about to DM the hell out of this [25245] person. I'm also passionate about [25247] turning vision into reality. Thought I [25248] connect. That seems kind of weird. I [25250] don't like that. So, what I'm going to [25251] do is I'm just going to like make it [25252] super incredibly [25256] punchy. Also, make it super short. Don't [25260] say stuff [25265] like or anything like that. Be extremely [25269] laconic. Laconic and Spartan. Okay, [25273] let's try that one more time. Well, [25275] let's try that a couple more times till [25276] we figure it out. [25279] Cool. Yeah, this this looks pretty good, [25280] right? Spotting your creative agency [25282] journey. I'm also into entrepreneurial [25284] ventures. Thought I'd connect. I mean, [25285] you know, it's not like the best in the [25286] whole wide world, but that's much better [25287] than before. Diving into brand [25289] innovation. Thought I'd connect. Cool. [25291] That's pretty good. Let's run this [25293] again. Startup life. That's great. See, [25295] that's a pretty good [25297] icebreaker. Building brands. Thought I'd [25299] connect. Cool. That seems pretty [25300] reasonable. All right. Cool. So, I think [25302] like four out of the five so far have [25304] been all right. Fascinated by startups. [25305] All right. I think like four out of the [25306] five are pretty So, I'm just going to [25307] leave it at that. That seems to me like [25308] a pretty good prompt. Um, which means [25310] like my next kind of major task in this [25312] system is done, right? Um, the last [25315] thing I'm going to do is I'm going to [25316] send this to Phantom Buster for LinkedIn [25317] DMs. Now, this is this is kind of [25318] interesting, a little bit more nuanced, [25320] but basically what we have to do now is [25322] we have to take all of this data and we [25323] have to like send it to the platform [25324] that we're going to be using to actually [25325] like trigger the outreach. Now, that [25327] platform is called Phantom Buster. The [25329] way the Phantom Buster works is you [25330] basically pay for um some execution [25332] time. just a fancy way of saying that [25334] you're paying for like the amount of [25336] time it takes for the servers to run. [25338] I'm going to go over here to this um [25340] specific one that I've put together [25342] called LinkedIn autoconnect. And when I [25343] build out the whole NN system in a [25345] second, I'll um you know, I'll rename it [25346] and I'll make it nice and sexy. But [25348] basically way that it works is I go to [25349] setup and then what I have to do is I [25351] have to define a a Google sheet and I'll [25353] actually have it go down my Google [25354] sheet. Okay. So I'm going to do that and [25357] then I'm just going to add a column here [25359] called icebreaker. Okay. Then I'm just [25362] going to make this like one one person. [25364] It's just going to be this person that I [25366] was just doing the testing on, which I [25367] think was here, right? So I'm going to [25369] delete these two. Then I'm actually just [25372] going to delete all the rest of these as [25374] well because I just wanted to pull [25376] literally one record. Okay, so that's [25379] cool. I know I have a ton of redundant [25381] fields and whatever, but that's fine. [25383] Um, and then under icebreaker, what I'm [25384] going to do is I'm just going to feed in [25386] this um the data that it just generated [25389] for me. [25390] Then I'm going to paste that in here. [25393] And then voila. Okay, great. So now we [25394] have an icebreaker. Now the reason why [25395] I'm doing this is because I can now grab [25397] this Google [25399] sheet and I can feed it in here. [25402] Okay. And now I can actually run this [25407] using just feed that in. I can actually [25409] run like I can actually go and I can do [25411] um some LinkedIn outreach. Basically, [25413] the way that Phantom Buster works is you [25415] will connect your LinkedIn account using [25417] a um little Phantom Buster Chrome [25419] extension, which they will ask you to [25420] download when you actually get up and [25422] running with the service. Um, and then [25423] from there, you know, I'll just click [25425] save. And then here is the message that [25427] I will write. Now, I'm just going to [25428] write um they allow you to write a bunch [25431] of things. I mean, you could say, hey, [25432] first name, right? Then it'll pull the [25434] first name variable, but you know, I've [25436] actually just had AI write me a whole [25438] thing, right? So, I'm just going to use [25439] that whole thing, which is called [25440] Icebreaker. Okay. All right. So, now I'm [25443] going to click save. Uh, I'm not going [25445] to do anything for email discovery. I [25446] don't care about that. They just try and [25447] upsell you on stuff. Invitations to send [25449] per launch. Maximum 10 per launch, then [25452] save. Then launch manually whenever I [25455] click on it. And now I'm I, you know, [25456] again, I'm starting at the end. Just [25457] want to make sure I can actually do the [25459] thing that I'm asking for. So, I'm going [25460] to click this start button. And once we [25462] verified that, we can worry about um, [25466] you know, running it completely [25467] automatically. So, what are we seeing? [25469] We're seeing that I am indeed connecting [25471] to the LinkedIn. I'm connected as Nick [25474] Sar. I'm going through the whole [25476] rigomear roll [25477] here. Signing up, opening, sending the [25480] DM and stuff like [25483] that. It's going to take a while because [25485] it wants to um basically like simulate [25488] real profile activity. Doesn't want to [25490] think doesn't want to make LinkedIn [25492] think that I'm like a like a bot or [25494] whatever. So, it's going to take I think [25495] it's like a minute or two per profile. [25497] Okay. And as we can see, it just updated [25498] to one invitation already. Still [25500] pending. That means that the [25501] invitation's actually gone out. Um, so [25503] we are now 100% good to go. We verified [25505] that all of this system or all of what I [25507] wanted to do with the system works. Now [25510] I'm actually going to go through and I'm [25511] going to build it live in NAN. How fun [25513] and exciting is that? Never forget this [25515] step. When you're actually building out [25516] systems, make sure you can do the thing [25518] manually before you do it automatically. [25520] Otherwise, you're putting the cart [25521] before the horse. I've seen a ton of [25523] people do this and just really waste all [25525] their time with it. So I have an edit on [25527] canvas here called LinkedIn connection [25528] request system. If you think about it, [25530] what do we have to do? Okay, we have to [25532] start the [25533] system by scraping Apollo leads using [25536] ampify. Okay. Um, one thing that I think [25539] is really fun that I think I I'm going [25540] to do today just for fits and Google's [25543] is um this URL here, this actually [25547] includes all the information of the of [25549] the search, right? So what I think I'm [25551] gonna do is I'm actually just gonna have [25552] AI generate this URL for me. Like that [25554] would be pretty sweet, right? I'm seeing [25556] owner person titles equal CEO, person [25558] titles equal founder. I'm just going to [25560] go um what can you tell me about this [25562] URL? Feed this whole thing in here and [25565] let's see if we could just extract all [25566] the [25568] data. Yeah. So, are located in the US, [25570] owner, CEO, founder, partner, creative [25573] agency. Cool. Cool. So, I mean like I'm [25575] just going to have AI do this. I mean, [25576] how cool would it be if you could just [25577] say, "Hey, I want you to find me a list [25578] of all the creative agency owners in [25580] Texas and California or something." That [25582] would be sweet, right? and then we just [25583] like have it done for us. Hell yeah. So, [25585] I'm going to go over here and I'm [25587] actually going to start it with an NAN [25589] form input. Okay. And that's how this is [25590] going to work. When a new NAN form input [25592] is done, let's call this lead finder uh [25596] LinkedIn lead outreach [25600] trigger. Insert a an audience for your [25605] LinkedIn lead outreach. Let's say [25608] LinkedIn outreach campaign here. Then [25611] here I'm just going to do like text area [25613] and I'm going to [25615] say describe your audience in plain [25620] English. I'll make it required. And then [25622] what I want is a [25625] placeholder audience type. Uh I don't [25629] know [25633] company. Let's do [25636] like company [25638] type location [25641] etc. That should be good. Okay, let's [25643] test this stuff now. And I'll say I want [25647] all creative agencies in the United [25650] States with company sizes between 1 to [25654] 1,00. That's what I want. Okay, I'll [25656] click [25657] submit. And now that I have this, I'm [25660] actually going to feed this into AI just [25661] right off the bat. So go open AI. We'll [25663] go message an assistant credential I'm [25665] going to use is February 4th YouTube [25667] from the list. Uh I think I'll just use [25670] Oh, sorry. I think I'm messaging an [25671] assistant. I don't actually want to do [25672] that. I just want to do text. My bad. [25674] So, message a model. I think what I'm [25676] going to do here is I'll just do GPT4.5. [25678] I just want to see how like smart it is. [25680] Um you're a helpful [25683] intelligent sales assistant. So, I'm [25685] defining a system prompt start. That's [25687] where I tell the model what I think it [25689] is identifying as what I'd like it to [25690] identify as. Then underneath I'm going [25692] to say your task is to take as input [25696] a a natural language description of [25702] an of a prospect audience. Turn that [25706] into an [25707] Apollo search URL. Here's an example of [25712] an Apollo search [25714] URL. Okay. And then I'm going to go back [25717] to [25719] this and I'll say this URL. Oh jeez, I [25724] don't like [25726] that. This URL describes [25729] a search for people that [25732] are Let's do located. So I'm just [25735] telling it now that um this is an [25738] example of the formatting basically. [25745] You can [25747] change those fields and only those [25751] fields. Return your response in JSON [25755] using this format. Let's do Apollo. [25758] Let's just call it search URL. Then I'll [25761] go search URL goes here. Nice. Then down [25764] at the very bottom of this output [25765] content is JSON. I'm not going to add [25767] another message. [25769] And let's just pin this now. Oh, 99. So, [25772] we could do some testing with [25776] it. Go right over [25779] here and let's see what it pops up when [25781] I when I paste this in. And let's see if [25783] this is a valid Apollo search URL. I [25784] mean, you know, it's kind of like the [25786] first thing that you got to figure out, [25794] right? I paste this into [25798] Apollo. Yeah, this has Wow. Oh, this [25801] even broke down like the search size. [25802] That's very cool. Um, United States. Uh, [25805] I'm not seeing any keywords, though. [25807] That's an issue. So, I think like the [25809] way that I I always do these searches [25811] with a keyword like creative agency. [25814] Um, I think there's something broken [25818] here. Just want to make sure if I delete [25820] all these. Yeah, we're still not getting [25822] hide filters, show filters. Okay. So, [25824] there's some something broken about the [25826] way that I did this list a moment ago. [25828] So, let me just do this one more time. [25835] Um, let's do [25839] this. Let's just define my search a [25842] little bit more over here because I want [25843] to give it more [25846] examples. We'll go one to [25850] 200. And then we're going to go creative [25852] agency. And I'm going to tell it can [25854] only [25862] These are the fields you can change. Um, [25865] and I'm going to say organization [25870] locations. [25871] Um, [25873] keywords, associated keywords. Sorry, [25875] one sec. [25879] Keywords and person titles. [25888] Cool. Do not add or change any other [25891] fields. Return your Okay, let's test [25893] this now and let's see if that maybe is [25894] a valid [25898] search. Uh, no, no, no. Do not add or [25900] change any other fields. Use the above [25902] template. Well, actually, maybe this is [25904] good. Let me [25908] try. All right. Yeah, that did work. [25911] location. Number of employees seem a [25913] little bit off [25914] though. Oh yeah, sorry. I think I need [25916] to add number of employees here. Um, one [25920] more. Let's go back to where it says [25922] number of employees up at the top. So, [25925] organization numbum employees ranges. [25927] There we go. That was the secret [25930] sauce. Person titles and organization [25934] num employees ranges. [25937] Let's just go back to my [25941] search. Just copy this in [25944] here. I'll paste that in too. Okay, now [25946] I'm going to run a test and I think I [25948] should be able to get most of what the [25949] information is that I [25951] want. Um, if I just copy this now and [25954] paste this [25955] in. Okay, this search correctly had the [25957] 1 to 1000. Correctly had the United [25959] States correctly had the term creative [25960] agency. Looks good to me, man. Cool. So, [25962] we now have a system that can basically [25963] you just put in a search term for what [25965] you want. it'll come out with an Apollo [25967] search URL. That's sick. Okay, so now [25969] what do we have to do? Um, we have to [25971] scrape the leads using ampify. So, two [25973] components to this, right? The first is [25975] we need [25976] to well, we need to call an appy actor. [25980] So, we basically need to replicate what [25981] I just did over here with ampify, but we [25983] need to do it in naden. So, how are we [25986] going to do that? Well, apply has an [25988] API. So, I should be able to run this [25990] using an API. [25993] So, if I want to trigger a [25999] run, I'm going to have [26001] to view the API reference [26004] first. So, how do we get a run actor? [26007] Run actor synchronously with input and [26010] return output. Okay, so this looks to me [26012] like basically what I want. Cool thing [26013] about NAND is it allows me to just [26015] create a uh a request using an HTTP [26019] call. So, sorry, a curl call. So, that's [26021] what I'm going to do is see it says curl [26022] over here. I'm just going to copy this [26023] whole thing. But actually, before I do [26024] that, I'm actually going to put in the [26025] the data. So, I need an HTT um I need a [26029] key. It looks like an API key. So, I'm [26030] need to put that in there. Then, I'm [26032] going to need an actor. Okay? So, see [26034] this? This is where I'm going to put an [26035] actor in. So, I'm going to go back here [26038] and you see where it says actors and [26040] then JJ, whatever. This is the actor ID. [26043] Um, you'll always find the actor ID up [26045] at the top [26047] um, between the term actors and then [26050] input on Ampify. Uh, there's probably [26053] another way that I get this as well, but [26054] that's just kind of the hack that I use. [26056] So, I'm going to go sorry, I'm going to [26058] go back over here. And now what I'm [26060] going to do is under parameters, I'm [26061] going to feed in the actor ID. Okay. [26063] Then the bearer token. I basically need [26065] an API key. So, I don't know where I get [26067] my API key on app. I've already [26068] forgotten. I'll probably get it in [26069] settings API and integrations. Yeah. [26071] Okay. So, I'm going to create a new [26072] token. I'll call this YouTube and [26074] create. I now have a new token. So, I'm [26076] going to copy this and I'm going to go [26078] back to the API specification which was [26081] just [26082] docs.appify.com. Then I'm going to paste [26084] in the bearer [26085] token. Okay, that looks pretty good. It [26088] looks like I need a body. Okay, it says [26090] example from schema or example. So, I [26092] don't really know what that means. [26095] Um, just body required as an object. So, [26098] what is what is this supposed to mean? [26100] Just looking for the term body here [26103] now. Well, it's telling me that it's [26111] required. [26115] So, I'm just going to give this a try [26117] and see what happens, I [26119] guess. So, let me just Yeah, let me just [26121] copy over all the [26122] curl. Go back here and go to HTTP [26126] request. Import curl. Paste this in. [26131] It should now map this. So, it maps it [26133] to the specific actor. That's [26134] cool. Um, I don't actually have my token [26137] in here, so apologies. I kind of wasted [26140] our time. I'm just going to copy this [26141] now and feed it directly in. So, this is [26144] where the API key token would go. Go [26145] authorization. And then there's this [26146] format like bearer token format, which [26149] is what most um services use. So, just [26151] make sure the bearer starts with a B, [26153] capital, and then there's a space, and [26154] then there's your actual [26156] token. Okay. Okay, so we need to do a [26158] post request. Good. Uh JSON body [26162] parameters are foo and bar. I don't [26163] really know we're going to feed in the [26164] body to be honest. I don't really know [26166] about this follow redirects thing [26168] either. So I'm just going to take that [26169] out. I think what we need are we need [26171] some query parameters, [26173] right? I [26175] think maybe we don't. I don't know. [26179] Anyway, in situations like this where I [26180] don't know, what I do is I just run it [26181] and I see what happens. And then [26183] sometimes it'll tell me what the issue [26184] is. So input URL is required. Okay. So [26188] we need in the body probably we need [26192] input. [26196] Um I'm just going to do this in [26198] JSON. I'm going to go [26201] input and then I'm going to go [26204] URL. [26206] Okay. So then I'm going to go over to my [26208] sales navigator search [26210] URL which is right over here. [26215] Uh, nope. That kind of stuck at the very [26217] bottom. Just take that back in. Paste [26219] this in here. Okay. So, that should now [26222] have the URL. Uh, field input. Now, it's [26225] still saying that it's required. So, [26226] there's probably something that I'm um [26228] persistently messing up here with the [26229] format. So, let me go back to my actor [26230] run. Okay. Go back here. And then, [26234] sorry, where it says JSON. Let me just [26236] get all this. Okay. This this might be [26238] all I need. I don't know for sure. We're [26239] going to give it a try, though. [26242] We're going to test [26244] this. Yeah. So that is so the JSON here [26246] is just the input because you know it's [26249] executing. It's taking time now. So now [26251] I don't actually know if it's running [26252] right. So let me just exit out of this [26254] stuff. I'm going to go to runs. Okay, [26256] cool. So it is running. So now verify [26257] that I've I've just triggered it inside [26259] of uh inside of N8 and now it's running [26261] in Apify. Fantastic. So basically what I [26264] need to do is you see this big URL here. [26266] Well, we don't need that. What we need [26267] is we need this, right? So, I'm going to [26268] feed this in. And total records. Uh, I [26271] mean, you know, you can put however many [26272] you want. I'm just going to do a [26273] thousand. If you leave that blank, I [26275] think you get all of them. Personal [26277] emails, work emails. I think this just [26278] means it takes a little bit longer. [26280] Then, while this is working, let me just [26281] do some renaming. So, I'll say run [26284] ampify actor and get results. A little [26287] bit longer than usual. Uh, I think [26290] I might have just broken [26291] this. Yeah, I think I just broke this by [26294] renaming it. Okay, maybe you don't [26296] rename this live. That might be bad. [26299] Anyway, um I'm then going to call this [26302] person uh not personalize. I'm generate [26304] search [26306] URL. Okay. I'm going to save this whole [26309] thing. I'm obviously going to have to [26310] rerun this now because I've just broken [26312] my whole thing. Kind of [26315] unfortunate, but it is what it is. [26320] Um let's just test the step again. And [26322] I'm just going to pin the output next [26324] time. [26326] So, let's just make sure this [26328] works. Feed that in again. Yeah, [26331] persistently working, which is nice. Can [26333] pin this now. Let's feed that in right [26336] over here. Test this again. So, my [26338] memory limit may be an issue. We'll see. [26342] It's executing. So, yeah, we're running [26343] a separate we're running a separate [26344] query. I'm going to abort the first one. [26346] I'm not going to give it 30 seconds. I [26348] don't care. I'm aborting [26349] you. Um, cool. And now we just have to [26353] wait until this finishes basically until [26355] we get all the results. And then when we [26356] get the results, it should populate on [26357] the right hand side of this. Okay, looks [26359] like this did output but it returned [26361] something empty. Looks like the reason [26363] why is I probably used the wrong um [26365] actor. I used run actor synchronously [26368] and return output. I didn't do run actor [26370] synchronously with input and get data [26372] set items. That's the one that you want. [26373] So woe is me. Um but I'll basically have [26377] to rerun that puppy is what it is. Um, I [26380] have the actor ID hardcoded here. So, [26382] I'm just going to paste this in my URL [26383] bar. Copy this over here. Paste this in [26387] here and go back that way. And then just [26390] for records, I got to do 500 cuz I just [26392] waited like 5 minutes to do a th00and. [26395] And I don't really want to wait that [26396] long. So, let's test this [26399] again. I'm seeing that it is indeed [26402] executing. Going back over here to [26405] runs. And, you know, we are we are now [26407] doing a run, which is nice. [26409] Um, yeah, looks like the run is running. [26413] Okay, great. And that looks like it just [26414] wrapped up. We got 500 items because I [26417] went back and I changed the number of [26419] total items to 500. Um, and now we [26422] basically have everything that we need [26423] in order to proceed with and then [26425] complete this whole flow. And as you can [26427] see, not super complicated. We had one [26430] form submission, one uh module or node [26433] to generate a search URL, and one module [26435] node to run an Appify actor and then get [26437] the results. And because I never ever [26438] want to have to do that again, I'm just [26439] going to pin this. And what I'm thinking [26441] is by me pinning this, I'm just not [26443] going to have to run that same actor [26445] over and over and over again. I'm not [26446] going to have to like have those crazy [26447] weight times. That's an important point [26449] for me to make more generally. Like um I [26450] find a lot of people, they will um test [26454] stuff using like repeat manual inputs [26456] over and over and over again. So if [26458] they're testing a form or something, [26459] they'll actually fill out the form every [26460] time. And it doesn't seem like that adds [26462] a lot to the process, but consider I [26464] might test a flow 20 times over the [26465] course of my development. If I test 20 [26467] times and every time takes me additional [26469] minute to fill out the form, I've [26470] basically like added 20 minutes to my [26472] whole workflow, right? And as you see, I [26474] build these pretty simple but very high [26475] ROI systems like over the course of an [26477] hour or so in a video. Um, if I were to [26479] do that, I would materially improve [26480] increase my production times um, [26482] impacting them like 20 30 maybe even [26484] 40%. So, I just like to pin data [26486] wherever possible. Helps avoid like a [26488] lot of the BS. Okay, now that I have [26491] this Ampify actor um, output, we we've [26493] got a bunch of items here. I'm going to [26495] go back to my road map. What do we [26497] really need to do? Well, next up is we [26499] need to enrich these leads with [26501] personalization. So, that's going to be [26502] pretty easy. You know why? Because we've [26504] already done most of the [26505] work. I'm going to go to OpenAI and then [26508] I'll go message a model. Okay. And then, [26510] if you guys remember, I already I [26511] already wrote most of this prompt. So, [26512] I'm just going to copy and paste this [26514] prompt right over here. So, I'm going to [26517] select my own credential. If you don't [26518] have a credential, make sure to set it [26520] up. You need to just copy over your um [26522] OpenAI API key. I'll select [26526] GPT4.5. I'll paste this in as my system [26529] prompt. And then I'll just move [26532] down and copy all of this as my user [26535] prompt. Okay, I'll make a couple of [26538] changes. Why? Because I don't actually [26540] need these lines and [26543] stuff. What I can do is I can actually [26545] just take this and feed this in as an [26546] additional user prompt instead. [26549] And here I can feed in an assistant [26550] prompt, have it give me an [26553] example, right? Because I wanted [26556] to. Then I can go back here, feed in [26559] another user prompt, and then this is [26561] going to be my actual live data, right? [26563] So what information did I put in? I put [26564] first [26567] name. So I will do first name here. Oh, [26570] that's ugly. One sec. I'm going to go to [26573] expression, paste this in, then I'm [26576] going to call this linked in field. You [26579] can, you know, actually add all of the [26581] information in [26583] um like in JSON if you want, but it it [26586] doesn't really make any difference, [26587] right? And in doing this, I get to save [26589] a couple of uh tokens, which may not [26591] make that big of a difference in [26594] isolation, but it does definitely make a [26596] big difference. Um, if you zoom out a [26598] little bit and like look at it over the [26600] course of, I don't know, a month of [26601] running this, a year of running the [26603] system. So, I need to find the city. Is [26605] it city? I think it's city. Yes, city is [26607] Grand Rapids. So, I'm just going to grab [26609] this here. Paste this in right there. [26614] Then, what I need next, I need job [26617] title and go title, creative director. [26619] That's [26621] cool. At and then the company [26625] name. What is the current company name? [26628] Headwind agency. It looks like the um [26631] employer employment history zero is [26632] always that. Then previous [26635] experience and I'm going to [26638] go co-founder [26641] COO at mission 3 media. That's cool. [26647] Um, let's do one [26649] more. We'll [26652] say producer at self-employed at least [26655] for this [26656] guy. Um, feed that in. Okay, great. So, [26659] what does this look like now? LinkedIn [26661] fields grand whatever Grand Rapids. [26663] Okay, nice. Self-employed. Beautiful. [26665] Beautiful. I'm then going to output my [26667] content as JSON. Go test step. And from [26671] here, our output should generate some [26673] cool personalization that we can then [26675] also map directly because it'll be um [26678] JSON variable. Should note that I'm [26680] using 4.5 preview for this. You don't [26681] need to be using 4.5 preview. I just [26683] like to use the best models for stuff. [26686] Why? I don't know. It's a flex. I like [26688] flexing. See these muscles just screwing [26690] around. This one's taking a little bit [26692] longer than usual. Uh might be because [26693] of token usage or something on my [26695] account. I'm not entirely sure. So, when [26698] I run into issues like [26700] this, just going to see if I could stop [26703] this. Doesn't look like I can. Okay, [26706] cool. I did end up stopping this. Maybe [26708] I'm just going to use Okay, let me just [26710] try rer runninging this now with that [26712] test [26714] data. Okay, once that's done, we've [26716] leads personalizations. Then we just [26717] have to send to Phantom Buster. And the [26719] way that we're going to do the the [26720] sending to Phantom Buster is I'm going [26722] to um just connect to their API and I'll [26724] send like an API request trigger with [26726] the uh with the Google sheet that I'm [26728] dumping to. So actually there's an [26729] intermediary step here where I need to [26730] dump stuff to Google sheet which I [26732] haven't really put together. Um but [26733] we'll we'll talk about that. Maybe [26735] actually I guess what I should do then I [26738] should probably dump leads to Google [26740] sheet, right? Then four should be send [26743] to Phantom Buster. Send sheet to Phantom [26745] Buster for LinkedIn DMs. I trigger [26748] Phantom Buster for LinkedIn DMs. That's [26751] probably what I'm gonna do. And I mean, [26753] this now looks kind of weird, but copy [26755] and paste that everywhere. Yeah, this is [26757] taking its sweet ass time. So, I'm not [26759] really sure what's going on with that, [26760] but as I'm sure you guys know, um, a lot [26763] of the time when you make an automation, [26766] there will be platform bugs or some [26768] minor issue with the nodes or the [26770] modules. I'm going to just change this [26771] model and see if that makes it snap out [26773] of it. [26775] So, we're just going to go [26777] GPT40 and then I'm going to test this. [26780] Uh, actually, looks like I have a bunch [26782] of additional new lines here. I don't [26784] know why. Should probably remove [26787] that. Check this out here as well. No, [26790] that's fine. How about this one? Does [26792] this one have any additional new [26794] lines? Can't really drag it open, which [26796] is unfortunate. I guess I have to give [26797] it a [26798] click. Well, looks pretty good. Yeah, no [26802] problems there. [26804] Oh man. I'm so stupid. It's cuz [26806] I'm doing 500 items. Duh. Oh my god. I'm [26810] probably racking up my Man, that's [26812] crazy. Okay, so what I need to do is I [26813] put a put a max items here. Just set max [26815] items to one. That way it's only going [26817] to generate one icebreaker. I was trying [26820] to erroneously generate 500 ice [26822] breakers. Don't be silly or stupid like [26824] me. Anyway, now that that's done, [26828] uh, we verify that this does in fact [26829] work. I can go back over here now and I [26831] could go and I could check Enrich leads [26834] with personalizations. Duh. Okay. Next [26836] up, we need to dump this to a Google [26838] sheet. So, what am I going to do? I'm [26839] going to go to sheets right over here. [26843] Going to [26844] um append row and sheet. I'm going to [26847] select my credential. I already have one [26849] called YouTube, but in your case, you [26850] might have to like connect it and do [26852] your OOTH and stuff. Then the operation [26853] is just going to be append row. I'm just [26855] going to be adding these to a new sheet, [26856] right? Append or update a row. Sorry. [26859] I'm going to make a new sheet. So, we'll [26861] go sheets.google. google.com. And then [26863] what I'm going to do is I'm just going [26864] to go to my account, which I know has a [26866] connection, which is this one here. Then [26868] I'm going to create a new one. This is [26870] just going to be called leads. Um I'm [26873] going to go to [26874] document. Look up leads. See if we can [26877] find something. I can. The sheet I'm [26880] going to choose from is just going to be [26881] sheet one. We're going to map each [26883] column manually. Now, can we just map [26884] automatically? That'd be great. Just [26887] dump literally Oh, no. No, we can't [26890] because we're only going to dump in this [26892] stuff then, right? [26895] H I wonder can I just [26903] grab I would like to have all of this [26906] information automatically in the Google [26907] sheet without me having to manually add [26909] every [26912] um manually add everything. Otherwise, [26915] I'm going to have to manually add [26916] everything. That'd be brutal. [26921] Yeah, that'd be kind of kind of [26925] crazy. The columns in Google Sheets. Oh, [26927] I get it. I get it. I need to set column [26930] names [26931] here. Okay. So, what I'm going to do is [26933] I'm just going to set these column [26937] names. Create a [26940] CSV of these header [26944] names. Let's see string. These are names [26946] that I can paste into Google Sheets. [26948] Just going to paste this in. And then [26950] what I want is I want LinkedIn [26953] URL. And then I also want [26955] icebreaker. And I mean you can put in as [26957] much of this information as you want. [26959] All of this additional information. I [26960] don't really want to. I just want to [26961] just, you know, get this up and running. [26963] So that's what I'm going to be using as [26964] an [26966] example. So this now has all of the [26969] sheets. It's telling me that one of the [26970] headers is twice. So, I'm just going to [26972] go to data and then I'll go split text [26973] to columns. So, I have two, yeah, I do [26976] have two instances of LinkedIn URL. [26977] That's okay. I'm going to go over here [26979] and now I have my leads sheet, which is [26981] nice. I'm going to go back and now I'm [26983] going to go map each column [26986] manually. And then it's going to match [26988] on [26990] ID. What I want to do is can I just [26993] actually maybe I can just go map each [26994] automatically. I don't [26997] know. I don't know if this is right. So, [27000] let's just get this test. see what [27003] happens. Just supposed to be adding a [27005] single row in [27008] here. And it's not. Um, and the reason [27012] why is [27013] because it's grabbing data from the open [27017] AI node instead of the previous uh limit [27019] node, which is what I want. So, I'm [27020] actually going to map each column [27021] manually. It's going to find all the [27023] ones for me. Then, what I want is um [27026] under this, I'm going to use ID for ID. [27028] First name is obviously going to be [27030] prank. Last name is going to be [27031] whatever. Um, name is going to be full [27034] name, I guess. Let me [27035] see. First, name. Then LinkedIn URL. So, [27038] I need to find the LinkedIn URL [27043] somewhere. Should be right over here. [27045] Then, what else did we have? [27048] Title. Let's go. [27051] Title email status. I don't really know [27054] why I put that in there, but whatever. [27057] basically just mapping a bunch of [27058] irrelevant fields right now just to show [27060] you guys what the process would look [27061] like. Then finally, icebreaker. The [27063] icebreaker would be the um message from [27065] the open AI node, right? Okay. So now [27067] we're going to test [27069] this. Giving it a go. You can see the [27072] icons changed here. And voila, right? [27073] We've now dumped in the records. That's [27075] nice. So now that we have this Google [27076] sheet, what does this mean for us? Well, [27077] we can actually just take this Google [27079] sheet. I'm going to go editor. Maybe [27081] I'll change it to viewer. Actually, I [27083] don't really want you to uh somebody [27086] always on from my YouTube, somebody will [27088] always find some of my sheets and then [27090] like come in and then just like draw [27091] dicks on them or something. It's It's [27092] hilarious. Whoever you are or whatever [27094] group of people you are, keep fighting [27096] the good fight. I'm just going to uh I'm [27098] going to start locking these down a [27099] little bit more. Okay, so that's that. [27102] Now that I have this Google sheet, what [27103] I do is I just go into Phantom Buster. [27105] Okay, right over here. I'm going to, you [27109] know, I go to LinkedIn solutions [27111] LinkedIn and then down here I go [27114] connection request or [27117] auto. It'll be an auto connection sender [27121] essentially. So I don't know where this [27125] is somewhere [27128] here. Might be connect [27130] request auto invitation maybe. [27138] autoconnect. There we go. This one here. [27139] So, I'm going to use [27141] this. What I'm going to do is I'll [27143] change the input into a spreadsheet URL. [27145] So, now I'm going to paste the [27146] spreadsheet URL in. Okay. The value of [27149] this is it's publicly accessible. Then [27151] from here, the name of the column [27152] containing profile URLs is going to be [27154] this LinkedIn URL one. I'm going to keep [27156] all of these columns in my output file [27159] because I'm I'm going to want [27161] them. Now, I then select my LinkedIn [27164] account. So, in my case, I'm going to [27165] select this one here. And I should note [27166] that if you want to send the LinkedIn um [27169] messages with like the um customized [27171] connection requests, uh I think to [27173] anybody that's not like um a second [27175] connection or something, you need a you [27176] need a LinkedIn sales navigator [27178] subscription now. I have everything that [27180] I need. I can just go icebreaker. Right. [27183] So, that's what I'm going to be sending [27184] people. I go back to [27187] save. I'm going to click none for this [27190] behavior. I'm going to do 10 per launch. [27194] Then I'll just leave this at [27196] manual and I'm going to rename this [27200] now auto icebreaker connect. And voila. [27205] Now what I'm going to do is I'm going to [27206] grab the ID of the Phantom which is [27207] going to be up here. Okay. And now I [27209] have to do an API call basically to [27210] trigger this. So we need to go to [27212] Phantom Buster and check their [27214] API. How do we do [27217] this? Uh we go up here. Sorry, up here. [27220] There we go. [27222] And I think the and I don't I don't know [27224] for sure. I'm thinking it's [27225] probably agent and it looks like they [27228] have a V2 APS. That's what I'm going to [27230] use. I'll go to [27231] agent. Agent launch probably. Yeah. [27235] Yeah, this is the [27236] one. Then I'm going to grab a curl. Is [27239] there a curl? Yeah, there's a curl right [27240] over here. So, I'm going to copy this [27243] over. If I just try this, am I going to [27246] run? Cannot validate data. Should have [27248] required property ID. Oh, yeah. ID of [27250] the agent to launch. There we go. If I [27251] feed this. Oh, yeah. Okay. So, what I'm [27253] going to do is I'm going to go to my [27255] LinkedIn agent, and then I'm going to [27256] grab the um the Phantom ID, which is up [27259] here. I'm going to paste it in. And [27260] that's going to now include that data. [27261] If I click try now, should be at 200. [27264] And then if I go back here, it's [27265] probably running now, right? Yeah, it's [27267] running. Sick. Cool. So, we just verify [27269] that we can actually now run [27270] this. Now, is it possible to abort this [27273] midrun because I don't actually want to [27275] connect to LinkedIn and do all that fun [27276] stuff? Uh, it is. Cool. So, what I'm [27279] going to do now is I'm going [27281] to just recreate my HTTP curl request. [27285] I'm going to go back to the API, copy [27288] this curl request, go back to NAN, [27291] import curl, paste this in. It's now [27293] going to automatically map all of these [27296] fields. Then, if I scroll down, I have [27298] my Phantom Buster key. On Phantom [27300] Buster, you need to create an API key. [27301] So, you just go over here to API keys, [27303] you click create API key, and then [27305] voila, you have another one. And then, [27306] I'm just going to delete the one [27307] afterwards. But you can only copy it [27309] once u basically. So make sure to copy [27311] it when you can then feed it in as an [27314] x-vantobuster- key API key up here. The [27317] ID of the specific agent is right over [27319] here. I mean it's just mapped all [27320] correctly. And now I'm just going to [27321] click test [27323] step. And it's executing. Now Phantom [27326] Buster won't return um a note saying [27328] that like you're good to go. It's just [27329] going to return a 200 and say container [27331] ID. The reason why is because they allow [27333] you to check on your container ID later. [27335] So what you realistically could do, [27338] okay, is you could have a container [27341] ID. You could have a web hook sent to [27345] another scenario or another node, [27347] another workflow. You could check that [27349] and you could use that to update this [27351] record saying sent question mark and [27353] then we could go down one by one. So [27354] that's what I'm going to do. So I'm just [27357] going to rename this now to trigger [27359] phantom [27360] buster agent just so I have this. So [27363] then over here it's going to be add to [27366] Google sheet. Wonderful. This here was [27370] um personalize [27371] outreach. And now that we have [27373] everything, all we need now is we need a [27375] web hook trigger that basically triggers [27377] another portion of this flow. So a [27379] variety of different things we could do. [27382] Um what I'm going to do is I'm just [27384] going to add a separate node or a [27386] separate workflow. I'll say trigger [27388] phantom buster agent. [27393] So I'm going to go number one. Then I'm [27396] going to have another number two. And [27398] the number two is going to basically [27399] watch for the completed [27401] run. I'm going start with a web hook. [27405] I'm going to paste the title in. I'll [27406] call this two. And then instead of [27409] trigger phantom buster agent, it's going [27411] to be update Google sheet with phantom [27414] buster connect requests. These are [27417] getting pretty long. So you can call [27419] this stuff whatever the hell you want. [27421] But now what I have to do is I have to [27422] figure out how to send a web hook. I [27423] know that you could send a web hook [27424] somehow. So I'm going to go back to [27427] dashboard. Go back here. And there's got [27429] to be a way to send a web hook, [27431] right? Advanced settings probably. Yes, [27434] there it is. Web hook. Cool. Custom web [27435] hook URL. So now I'm going to go into [27438] NAN. I have a little web hook set up. [27441] And what I'm going to do is [27443] um looks like web hooks will post a [27446] payload. when they post a payload, that [27448] just means that in order for you to [27450] receive it in N to change the HTTP [27452] method to post. Okay, if it's get, [27454] you're not going to get anything. It's [27455] just going to hang forever. So, we're [27457] posting the payload. It's going to have [27458] everything [27459] here with a container ID. This is [27461] probably what we're going to use to um [27464] to get the data now that I'm thinking [27466] about [27467] it. So, that's what it's going to look [27469] like. So, we have the container ID and [27470] we're going to do something else. All [27471] right, that's fine. So, um let's listen [27474] for a test event. [27476] And let's just [27480] uh well, is this done yet? I think I [27484] aborted this, right? Okay. Well, let's [27486] just let's just trigger this then one [27488] more [27489] time. Trigger me, baby, one more time. [27493] Should get a container ID. Cool. And now [27496] just while while we're listening for [27498] this, because this is listening right [27499] now, um I believe I can just continue [27501] building this. And if you think about it [27503] like what I need to do is once I have [27504] the web hook I need to get the data from [27506] the container ID right so I'm go back to [27509] my API reference and then [27512] containers let's just [27514] fetch output fetch the output of a [27517] container right so that's what I want so [27520] now I'm just going to copy over this [27525] um go back here do an HTTP request [27528] import this [27530] curl we're going to map it including the [27532] ID and everything that I need. And we're [27535] hard coding the container ID, right? I [27537] think. Let me just go back to wherever [27539] that container ID was. Yeah, I think [27541] we're I think we're hard coding the [27542] container ID. I'm pretty sure. And [27544] that's going to include the output. Now, [27545] the output is going to include a list of [27546] all of the records that we've actually [27548] sent the request to, which is nice. So, [27550] from there, I should essentially be able [27552] to do everything that I need to do. [27554] Okay. So, I mean, the trigger event's [27556] taking forever. Let me just see if I [27557] could run this as [27559] is. Oh, sorry. All right, it's going to [27561] be executing the web hook node. So, let [27563] me just add a manual trigger first and [27565] then let's connect this. [27568] Now, let's exit out of this and I'll [27570] click test workflow. Nope, just this. [27574] Thank [27575] you. It's saying the resource I'm [27577] requesting could not be found. So, why [27578] is that? Um, there must not be any [27583] data. There's probably no [27587] data. So, I'm just going to see if we [27588] can get the container ID. Is there [27590] container ID? I'm not seeing any [27592] container ID. Identity, maybe identity [27594] ID might be container ID. Not really [27596] sure. I don't know if that's what that [27599] means. Um, well, it did work. It [27602] actually went and it sent the request. [27604] That's pretty [27606] badass. So, what are we going to call I [27608] think it might be this identity ID. [27610] Unfortunately, it doesn't look like I [27612] can copy it. Doesn't let [27614] me. So, that sucks. Um h how am I going [27618] to get the container ID of the [27628] thing? I guess I [27631] could just [27635] uh grab a different [27641] container. This this one [27644] maybe. Let's just Let's try this. Okay. [27648] Oh, what the heck's this? I don't know [27650] what this [27652] means. This looks like a [27656] dust. Huh? That's the That's the output. [27661] Huh. [27664] Weird. So, I don't actually know if [27666] that's what we want. Do we want the [27667] container ID then? [27670] No, we want [27672] um agents fetch output. Get the output [27675] of the most recent container of an [27677] agent. Maybe we just need this. Okay. [27679] It's designed so it's easy to get [27680] incremental data from an agent. Output [27682] of the most recent container. Okay. [27684] Well, I'm just going to I'm just going [27685] to call this then like right. Yeah, [27687] let's just do that. Um let's not even [27690] worry about all this stuff. Let's just [27692] get the ID of the [27695] agent. Okay. Should be right over here. [27698] Now, let's do an HTTP request, but this [27701] time we'll do it to fetch output. Okay, [27704] so I'm going to copy this over, paste [27706] this in the test [27708] field. Try it. And now, we did get a [27711] weird We did get a really weird output. [27713] I'm not really sure what that [27718] means. Process finished. Spreadsheet is [27721] empty or everyone has already been [27722] added. Okay. Okay. Yeah. No, we did we [27723] did actually get [27725] the we did actually get the output. [27729] Um, maybe there's something that I'm [27731] missing here because it looks like I'm [27734] fetching I'm not fetching what I want. [27737] Um, I'm fetching something different. [27743] Okay, so let me see if I could feed [27747] in the right container. [27757] H. Basically, what we want is we just [27759] want the big list, right? So, how am I [27762] going to do [27763] that? [27765] H if omitted or set to Okay, you know [27768] what? Maybe maybe it's actually this. [27770] Maybe we go to agents um fetch [27776] output. Then we feed this in. Let me try [27779] it. Oh, sorry. I'm feeding in a [27781] container ID to something that wants [27783] something called an Asian [27785] ID. That's kind of killing me a little [27788] bit. Uh, all right. That's fine. Let's [27791] just kind of circle back. Um, I was [27794] using a post request or a get [27799] request. I don't remember. Let me paste [27802] this in [27803] now. Now, let me test this. Says it's a [27807] bad request. I need to check my [27808] parameters. So, why is that? [27811] could be that the um ID is not the ID of [27816] an agent. So, I'm going to go back here [27817] to where I define the ID of my agent and [27819] I'll go back here and I'll paste the ID [27821] of my agent [27822] in. And no, we do get just this weird [27826] output file which doesn't actually have [27828] anything. So, that makes me think that [27830] in order for me to do this, I should [27832] probably test with another lead. So, not [27834] just one lead, but two leads. So, why [27836] don't we just test with with another [27837] lead? Now, I'll go over here. [27840] Let me just delete [27841] Frank. And [27843] [Music] [27844] then actually, why don't I just test [27846] this on my on my real data? That'd be [27849] interesting. Let's go back here. And [27851] then instead of a limit of [27853] one, why don't I just do a limit of [27858] three. That'll allow three things to [27860] move, which will [27862] allow us to generate two more rows. [27867] basically those two rows should dump [27871] here. So just um testing all this [27873] iteratively right [27875] now. So we should have two more. Okay, [27878] now we do with the ice breakers, right? [27880] So the rest of the system works fine. [27882] And now we just need to send that to [27883] this Phantom Buster agent. Okay, so um [27887] let's do it. I'm going to send to Okay, [27889] actually this is a good opportunity for [27890] me to test my [27891] um uh my web hook, right? So, why don't [27896] I grab this listen for this test [27900] event? Then over here, I'm going to test [27902] sending all of these results to my web [27905] hook. Looks like it's already running, [27908] which is a problem. H, it is [27912] running. [27915] Interesting. I get it. I know why it's [27917] running. It's running because we're just [27918] doing we just sent three results over. [27921] We need to aggregate the results in [27924] between these two. So I'm going to use [27925] aggregate. [27927] Okay, I don't think I need any field [27929] name at all. I think I can just [27930] aggregate these so that these three [27932] items become one item. Let's see. No, I [27935] guess we do need a field to aggregate. [27936] We'll aggregate them based off of [27939] ID. No, I just want to aggregate all of [27941] them really. [27943] Um, let me just see if maybe there's [27945] another field that I need to use that's [27946] not [27948] aggregate. Um, could I just combine [27950] these all into one item? No, I think I [27952] do need to use aggregate. Just going to [27953] aggregate all item data into a single [27955] list. Put it inside of this object [27956] called [27957] data. And then from here, I'm now going [27960] to have one item. And then I can just [27961] trigger this once instead of, you know, [27962] however many times I've done so. All [27964] right. Well, I'm glad that I spotted [27966] that. That otherwise would have been a [27967] catastrophic error. Um, let's see how [27970] our agent's [27972] doing. Looks like we're processing two [27974] new records, which is nice. So, this [27976] obviously understands and is capable of [27979] like kind of mediating, modulating, [27981] whatever the hell you want to call it. [27982] Um, the output. Let me just make sure [27985] this web hook is set. Oh the web [27987] hook URL is not set. Oops. Save. Save. [27990] Save. Save and close. Yeah, this [27993] probably ran without that web hook URL. [27995] So, that that that makes sense. I'm kind [27997] of silly. Okay, looks like we did indeed [28000] finish that run. Two invitations were [28002] sent. I'm not getting a web hook here, [28003] unfortunately, which is kind of [28005] annoying. So, I'm just going to um leave [28008] that for at the end of the video when I [28010] do a demo. For now, I'm just going to [28011] pretend like I did get the web hook and [28013] then I'll just continue manually [28014] triggering the rest of this flow. So, um [28017] yeah, because we triggered that flow [28018] right at the very end there. And then if [28021] I go to my execution history, I should [28022] see a record [28024] of the flow at the very end where the [28028] error [28029] was. Uh I don't know why. Oh, that looks [28033] okay. That looks kind of weird. I don't [28034] remember doing that. It's probably this [28035] one [28040] here. Something is weird happening here. [28043] This is like mcking around with the [28046] Okay, that might be a bug of some kind. [28048] Um, anyway, I should be able to grab the [28050] ID of the agent, [28052] right? So, I should then just be able to [28054] feed this directly in, which is the same [28056] as before. We should be able to test it. [28059] Should be able to get the the data. But [28062] no, I'm not really getting the data. Not [28063] really wondering. I'm really wondering [28065] why I'm not getting the data here. Looks [28066] like this is [28070] good. I mean, I sent it out, but why are [28072] we sending it in this format? I don't [28074] want it in whatever the hell this is. I [28076] want in JSON, right? I'm just getting [28078] this all as one big text string. [28082] So, could I get [28086] this agents fetch [28091] output? [28095] Hm. Yeah, that's kind of annoying. You [28097] know what? We might not actually be able [28098] to do it. It kind of sucks. I think [28101] instead what we're going to have to do. [28104] So, we're just going to have to go like [28106] when it is sent, we're going to have to [28108] mark this as xxx basically. [28111] Um, yeah. I mean, there's no other way [28114] of doing so. I mean, it's not ideal and [28115] it's not technically one, but looks like [28118] the only alternative to that would be [28119] madness. we'd have to parse out all of [28121] those people using AI and this would not [28123] be [28124] reliable. And then um it also cost way [28128] too much in order to do it. So I guess [28131] we're going to scrap that. What we're [28132] going to do is we're just going to keep [28133] keep on with this one scenario that [28135] triggers the Phantom Buster agent. And [28137] then after the Phantom Buster agent, [28141] uh well, we're not even going to have a [28142] scent column really. It's just anybody [28143] that's here will obviously have just [28145] made it through the Phantom Buster [28146] agent. So that's what we're going to [28147] that's what we're going to say. [28149] And [28151] then yeah, the Phantom Muster agent, [28153] we'll just run it um every time we add [28156] new people to this [28158] list. And then I think we can also [28160] probably just run it once a day or [28161] something, once every couple of days [28164] because it actually automatically has [28165] the dduplication functionality inside of [28167] it, right? So yeah, I guess there's no [28168] real reason to have like a like a done [28169] column [28171] anyway. It's not that that was a silly [28173] thought. Ideally, you should track this, [28175] but there is there is really no need to [28177] split it in two, I suppose. [28180] because if it is on the sheet, Phantom [28182] Buster will automatically ddup it. And [28184] so we just basically anything that goes [28186] in the sheet will eventually be taken [28187] care of, I suppose. And if you want to [28189] see how far down you are, you just go to [28192] results and you basically just have a [28194] list of everybody that you sent to. So [28197] yeah, we do have that taken care of [28198] automatically. And as we can see, you've [28199] already sent some of these DMs. So I'm [28201] probably going to get like some actual [28202] connection requests from these people, [28204] which is nice. Looking forward to [28206] meeting you, Frank, Greg, and Atina. So, [28208] let me just think. Is there anything [28209] else that we need to do in order to make [28210] this work? I don't really think so. I [28212] think that's about it. Just do that with [28214] creative agencies. So, now we're just [28216] going to trigger the Phantom Buster and [28217] have that go. Yeah, looks pretty good. [28219] Awesome. You now have a LinkedIn [28221] outreach system that automates [28222] personalized prospecting and also [28223] automates connection requests. You're [28224] already generating a steady stream of [28226] LinkedIn connections and conversations. [28227] Plus, you're selling the same system to [28229] others for over $2,000. We're now going [28231] to be building a multi-line icebreaker [28233] generator that uses deep website [28234] scraping to create extraordinarily [28236] personalized cold email openers. This is [28238] the exact system that routinely [28239] generates 5 to 10% reply rates and helps [28241] scale any agency to six figures through [28243] cold email. And here's what makes the [28244] system so valuable. Instead of sending [28245] generic low-v value cold emails with [28248] templated variables that get ignored. [28249] This workflow is going to scrape [28250] prospects websites. It's going to [28252] analyze their content with AI, and it's [28254] going to use AI and a little bit of [28255] prompting magic to generate a few [28257] multi-line icebreers that are so [28258] personalized that a lot of recipients [28260] actually think that you've spent hours [28261] researching them individually. The [28263] result is a cold email campaigns that [28265] actually gets responses and actually [28266] book meetings. By the way, if you're [28268] serious about turning your NAD skills [28269] into actual income, please do check out [28271] Maker School. Many of our members use [28272] systems exactly like this one to land [28274] their first $3,000 AI automation clients [28276] within two to three weeks of joining. [28277] All right, let's dive into building this [28278] cold email system. Again, we're going to [28280] turn website data into highconverting [28281] personalized [28283] outreach. To make a long story short, [28285] what we're going to do is we're going to [28286] start with an Apollo.io search. Apollo [28289] is just a lead aggregator and lead [28290] database. Fortunately, it's very [28292] expensive to purchase leads directly [28294] through Apollo. So, what most people do [28295] nowadays is they scrape it using a third [28297] party service. For that, I'm going to be [28298] using Ampify. And then I'm going to pump [28300] all of that through a pretty complicated [28302] N8 flow just to show you guys how at the [28304] end of it all we can generate [28306] highquality leads. So, first things [28307] first, let me give you guys a demo of [28309] the system. What I've done here is I [28310] built a Google sheet called multi-line [28312] icebreaker generator. There's a URL [28314] column over here on the left and a sheet [28315] called search URLs down at the bottom. [28317] Then under leads, we get a bunch of [28319] information. First name, last name, [28320] email, website, URL, headline, location, [28322] phone number, and multi-line icebreaker. [28323] This is sort of the juice. What I'm [28325] going to do is I'm going to feed in the [28326] URL to the Apollo search that I showed [28328] you guys a moment ago. Okay. Then I'm [28330] going to go and start my flow. What's [28333] occurring when I click test workflow is [28335] it's grabbing the URL that I just added. [28337] So that's that big long Apollo search. [28339] It's now scraping that Apollo list on [28341] Apify. What it's doing is it's spinning [28343] up a cloud instance of the actor. That's [28345] what they're called on Apify that's [28347] going out and it's actually getting me a [28348] ton of that lead data. Then we're doing [28350] a bunch of data processing to filter for [28352] only websites and emails. And then what [28354] we're doing is once we have all those [28355] websites, we're actually scraping the [28356] hell out of them. We're extracting the [28358] HTML content and then we're editing the [28359] fields. Now, there's a couple more steps [28362] here, but ultimately what ends up [28363] happening is we summarize the website [28365] pages, then feed that into AI. And the [28368] end result, if I go over to my leads [28369] page here, is as you'll see, we're [28371] filling in this multi-line icebreaker [28373] column. What this multi-line icebreaker [28376] is is it's a extraordinarily highquality [28378] personalized pitch where you add this to [28381] the beginning of a cold email and it's [28383] so customized that the person on the [28385] other end of the line is going to assume [28386] that you've actually read through all of [28388] their website and done a bunch of [28389] personal searching yourself. So this is [28391] the sort of thing that routinely gets me [28392] 5 to 10% reply rates on my cold email [28394] campaigns. And it's one of the ways that [28395] I scaled my own AI and automation agency [28398] to $72,000 per month. So So you can see, [28400] hey Cali, love how L2 makes it easy to [28402] filter by acreage. also a fan of your [28404] property update email option. Wanted to [28405] run something by you. If I was Cali and [28408] I received all of this is like the first [28409] two lines of my email. I'm obviously [28411] going to assume that I've done my [28413] research in my pitch. Okay. So, in a [28415] nutshell, what we do from here is we [28416] just take this data and we feed it into [28418] a campaign like on instantly. Instantly [28421] is a cold email service, one that I [28422] personally use for most of my emailing. [28424] What we'll do then if I go to campaigns [28426] here, you can see an example one that I [28427] set up for website agencies is we pump [28429] it directly into a sequence and our end [28432] email will look something like this. So [28434] in this case, this is for a website [28435] design agency. Hey Katie, love KT also [28437] graphics. I wanted to run something by [28438] you. I'm new to this so please bear with [28440] me but insert customized information or [28442] icebreaker over here. And this specific [28444] pitch has already got me a 4% reply rate [28446] and something like over 30 qualified [28448] leads that have wanted to book calls or [28450] meetings with me. I show you guys all [28451] this back end just to make it abundantly [28453] clear that the actual work that goes [28454] into building out a cold email campaign. [28456] If you really want it to crush, it's a [28457] little bit more complicated than just [28458] scraping a bunch of leads off Apollo and [28460] then sending. You know, a lot of the [28461] time you need some sort of way to [28462] paraphrase or make the content that you [28465] are sending to people seem a lot more [28467] customized. So that's in a nutshell how [28469] the system works. I'm going to do now is [28470] I'm going to build it for [28473] you. Okay. So I'm going to open up a new [28475] NAND panel over here and I'm going to [28477] call this deep multi-line icebreaker. We [28479] got our canvas right over here. First [28481] thing I'm going to do is I'm just going [28482] to do a manual trigger. This is just the [28483] simplest and easiest thing for me to do [28485] and I do it for all of the flows that [28487] I'm testing. I'm then going to head over [28488] to Google Sheets. What I'm going to want [28490] is I'm going to want a get rows in [28492] sheet. What we're going to do is we're [28493] going to hook this up to that multi-line [28494] icebreaker generator Google sheet. And [28496] so in order to do that, you need first [28497] to add credentials. I've already added [28499] credentials, but if you haven't done so, [28500] all you need to do is click on that [28502] little pen icon and then click sign in [28504] with Google. From there, what I'm going [28505] to do is I'm going to find the specific [28506] document that I'm looking for. So that's [28508] multi-line icebreaker generator. Then I [28510] also need to select not just the [28511] document but the sheet as well. You guys [28513] notice either search URLs and leads. [28515] What that is is that's this tab or this [28516] tab. So what I want to do is I want to [28518] grab this search URL and actually not [28519] just this one but any search URL that I [28521] list just so that I can also scale this [28522] up. What I'm going to do is I'm going to [28524] head over search URLs. Then once I have [28526] all of that in, if I just click test [28527] step, what this will do is it'll [28528] actually grab me the URL as well as the [28531] row number which is handy. In N8 I [28533] always pin my data. This just allows me [28534] to test my flows a lot faster because I [28536] don't have to rerun things and it also [28538] spares me some API usage. The Google [28540] Sheets API is notoriously low rate limit [28542] which can be annoying. Okay, so from [28544] there we now have the search. What I [28545] need to do next is I need to call my [28547] scraping service. And what I'm going to [28548] call in this video is Appify. So I've [28550] already preconfigured this Appify [28552] scraper module here. And I'm doing it [28554] because if you want to converse with the [28555] Appify API, you do have to know a little [28557] bit about how it works. But to make a [28559] long story short, what we're doing is [28560] I'm sending a post request to a URL. The [28563] URL looks like this. Okay. And if I make [28566] this bigger, you guys will see it. It's [28568] https back/appi.appify.com/v2x [28574] um [28578] colactor-id-sync-gets. Now, you may be [28579] wondering, Nick, where the hell did you [28580] get this? Well, if I just look up Apify [28584] API, this is the backend for the service [28586] that I'm using. If I scroll down to this [28589] right over here, this exact same URL. So [28592] you guys could see and this gives you [28594] all the specs on how to use this [28595] specific API endpoint. But to make a [28597] long story short, what I did was I [28598] copied in this curl request. I made a [28600] couple of changes and then I ended up [28602] with this here. I imported my curl. So [28605] API requests are sort of beyond the [28606] scope of this video, but basically you [28608] have to put an accept application JSON [28609] header and authorization bearer and then [28611] apply API token. If you guys like this [28613] sort of stuff, I've recorded a lot of [28615] detailed documentation walkthroughs and [28617] how to actually like practically read [28619] APIs for beginners. So, I'll link that [28621] video above. Okay. What this is going to [28623] be doing is this is going to be running [28624] our search. So, if I click test step [28626] over here, this is going to do now is [28628] it's actually going to push this to [28629] ampify. And the way that you check this [28632] out in Apify is you have to go to their [28633] console. But if I go to runs, you [28636] actually see there's a live run that is [28637] currently now happening because I've [28639] sent this request. Now, I should be [28641] getting something like 100 or I guess 96 [28643] leads. You can see here I demoed this a [28644] couple of times. And once we're done, [28646] what we get is we get a bunch of first [28648] names, last names, email addresses, [28650] LinkedIn URLs, and so on and so on and [28652] so forth. Pretty cool, huh? Now, in [28654] addition, we also get a ton of other [28655] fields here, which I'm not going to go [28656] through all of them because there are [28657] quite a lot, but that includes stuff [28658] like the organization name, the URL of [28661] their websites, and so on and so forth. [28662] And what we want to do here is we want [28664] to take the URL of the websites. First, [28665] we need to verify that they have a URL, [28667] and we also need to verify that they [28668] have an email. But once we've done that, [28670] we want to take the website URL that [28671] we're generating and then we want to [28673] pump it through some sort of scraper and [28674] then we want to throw it into AI to have [28676] it tell us something about it. Okay. So [28677] the next thing I'm going to do is I'll [28678] go over here and I'll pick the filter [28680] node. What the filter node allows us to [28682] do is allows us to look specifically to [28684] see if we have an email address present. [28686] So if I just go command F email, you'll [28688] see that some of these fields are null. [28690] So what I want to do is I want to check [28691] to see whether or not an email exists. [28694] Okay, if the email exists, then I'll [28695] continue. If not, I won't. In addition, [28698] I also want to check and whether or not [28700] the website URL exists. So I I'm just [28703] searching for website URL. I'm going to [28704] stick that here and I'll say this has to [28707] exist. Now in this case, it's not [28709] existing because this particular example [28710] just does not include a website URL. [28712] What I'm going to do is I'm just going [28713] to click test step now. Carry the data [28715] forward and we're going to see what sort [28716] of output we got. If we feed in 96 [28718] items, we keep 28 items. That means that [28721] of the 96, we are filtering out 68. And [28724] that's okay for us. That's just how [28725] Apollo works. You're going to feed in, [28727] you know, about 100 or so and you're [28728] going to get about 30. Just math. From [28729] here on, what we're going to do is we're [28731] actually going to feed this into an HTTP [28733] request node. Now, the reason why I'm [28734] doing this is I basically want to feed [28735] that website in that I got a moment ago [28737] directly into an HTTP request node. I [28739] want to make a request to this website. [28741] I want to search for it. In order for [28742] this to work though, what we're going to [28743] have to do is we're going to have to add [28744] redirects and then click follow [28746] redirects with max redirects of 21. If [28748] you don't do this, I find that uh in [28750] practice, a lot of the websites are [28751] going to error out because most of them [28753] redirect. If I click test step, what [28755] we're doing now is we're actually [28755] scraping this web page right here, [28759] assetrealtyindia.com. In addition, what [28760] we're going to need to do is add one [28761] other option here. And that is we'll go [28763] to settings over here. And then on [28765] error, what I want to do is I want to [28767] continue using the error output. [28769] Basically, I just want this to continue [28770] executing even if there is an error. And [28772] if there is an error, we're just going [28773] to do nothing. And the reason why is [28774] because not all websites scrapes work. [28776] Some websites have protections built in [28777] that stop us from being able to do this [28779] easily. So realistically, if we feed in, [28781] I don't know, like 28 or 30, we'll [28782] probably get like 15 or 20 websites that [28784] are actually able to be scraped. And it [28786] looks like we did. We have 21 items that [28788] successfully worked and then seven that [28790] didn't. Now, when you add those error [28791] branches, you're going to get a success [28793] and an error branch. You know, I'm just [28794] going to do nothing with the error, but [28795] you can certainly do things with the air [28797] if you wanted to recoup your costs. In [28798] my case, I usually do these things [28800] pretty quick and scrappy, so I don't [28801] really worry about doing that recouping. [28802] For me, if I could do this for 20 out of [28804] 100 leads fed in, well, in Apollo, I'm [28806] just going to make sure that my audience [28807] size is really big, like 10,000. [28809] Therefore, I'm going to get about 2,000 [28811] of those. So, that's okay for me. After [28812] that, what we need to do is we actually [28813] need to scrape this data or uh rather [28816] extract links from this data. If I click [28820] on show data over here, what you'll see [28823] is we're getting a ton of HTML. Do you [28824] guys see this? In this case, this is a [28827] WordPress website, but what we want is [28829] we just want to extract all the links on [28830] this website. So what we want is we [28832] basically want a tags with this href [28835] equals to. So you see this this is [28838] actually a link on the page. In this [28840] case, this is kind of an empty link. But [28841] if I keep on searching this, we should [28842] get [28843] stuff. Okay, see this [28847] hath.com/authoradmin. Well, that [28848] actually is going to take me to a blog [28849] page on the website that might actually [28851] be pretty important for me to customize. [28853] This is a contact page. It might be [28854] important for us. Basically, what I'm [28856] going to do is I'm just going to extract [28857] all of these links. And the way you do [28858] this in NAND in a really simple and easy [28860] way. So we go to success. Just go HTML [28862] extractor here. Now what we need to do [28865] is we need to stick the links that we're [28867] finding into a key. I'm just going to [28868] use the term links. The CSS selector is [28870] going to be a the value we're going to [28872] return is going to be an attribute. And [28874] in my case, I'll just go href. I'm going [28875] to return an array and then under [28877] options, I'll trim values and I'm going [28878] to clean up the text. What this does, to [28880] make a long story short, is it just [28882] gives us a nicely formatted list of [28884] links from the HTML that we're feeding [28885] in. So the links are going to look [28887] something like this. What we've done now [28889] is we've pushed in a homepage to the [28891] HTTP request node. And then what it's [28893] doing is it's outputting us all of the [28894] links on that page. Now, why would we [28897] want to do this? Well, logically, the [28898] reason why is because if you really [28899] wanted to understand a website deeply, [28901] you wouldn't just scrape one page like [28902] most other people are doing. You'd [28904] actually scrape all the pages on the [28905] website and then you'd feed it into some [28906] sort of intelligence, in our case AI, to [28908] have it tell us something about each [28909] page before combining all of that into [28911] some big summary, using that to generate [28913] some sort of custom asset. Next up, what [28914] I'm going to do is I'm just going to [28915] rearrange all of this data. If we go to [28917] this HTML tag now, what we have is we [28918] have 21 items. Every one of these items [28920] is a big array of links. Now, this is a [28923] ton of information, but if you think [28924] about it, we also want to make sure that [28926] we're grabbing the lead data, too. Like, [28928] we want to make sure we get Joshua's [28929] information, for instance, here. So, [28931] what I'm going to do here is I'm just [28932] going to clean this up by adding an edit [28933] fields node right over here. Now, what [28935] edit fields node does is it basically [28938] allows us to add fields and then rename [28940] them according to some spec. So if I [28941] drag this first name here and then if I [28943] do the last name and so on and so forth, [28946] then what I'm going to do is I'm just [28948] going to output a much simpler version [28949] of all this data. I'm basically going to [28951] remove all the fields that I don't find [28952] important. Now in our case, we're [28953] getting a ton of these does not exist or [28955] unpin node HTML and execute. So because [28958] nadn isn't sure of exactly which record [28961] means which thing, what we need to do is [28963] we need to unpin them all. And now we [28964] need to test this. What it's going to do [28966] is it's going to run through that Google [28967] sheet again. It's going to grab the [28969] Apollo URL. It's then going to feed that [28971] into our Apify scraper over here. After [28974] it outputs, I think it was 96 or 98 [28976] items or something. We're then going to [28977] filter out a lot of them. It's going to [28978] bring us down to I think like 28. It's [28980] going to filter us down to I think like [28981] 21 or something. Then out of the 21, [28983] we're going to extract all the HTML [28985] content. Then finally, we're going to be [28986] left with 21 nicely formatted items. And [28989] if you are curious what these look like, [28991] it looks like this. We have first name, [28993] last name, website, headline if they [28994] have a headline, location, phone number. [28996] In this case, this is empty. And then [28997] just a big list of links. Okay. From [28999] here, if you think about it, what we [29000] need to do is we need to find a way to [29002] iterate over this list of links because [29003] we have technically what like 22 items [29006] here. But basically what I want to do is [29008] I want to process David first and then [29009] after I'm done processing David, process [29011] Zayn. And after I'm done processing [29012] Zayn, process Michael. And the best way [29014] to do that in NAD is using what's called [29016] a loop over items or split in batches [29018] node. This can be pretty intimidating [29020] and annoying to deal with if you haven't [29022] ever run one of these before, but I'm [29023] just going to delete the replace me node [29025] and run you guys through how this works. [29026] Basically, there are two routes here. [29028] There's a done route and then there's a [29029] loop route. What the loop route does is [29031] anything that you put in here will [29032] basically proceed until you connect the [29036] loop route back to the input. So [29038] basically for every one of these 21 [29040] items, we're going to do something. If [29042] you think about it logically, what do we [29043] want to do? Well, we want to go into [29044] these 21 items and then we just want to [29046] take all these links and we want to do [29047] some processing on these links. [29048] Basically, we want to like run HTTP [29049] requests for each, right? So that's what [29051] we're going to I'm going to go to loop [29052] and then I'm just going to type in well [29054] first of all if you think about it these [29056] right now are all buried inside of an [29057] array right so we have to expand these [29059] or split these away from the array. So [29061] what I'm going to do is I'll go split [29062] out and I'm going to feed in the loop [29064] directly into the input and I'm just [29065] going to put this down here a little [29066] lower so it's nicer. Now unfortunately [29068] we can't see previous nodes because [29070] that's just how the split in loop node [29071] works. Um the fields from the left that [29073] I want to split out are called links. So [29075] that's just what I'm going to use. And [29076] then this done route this is going to [29078] trigger after we're done our loop. Okay. [29080] So, for now, I'm just going to loop this [29081] back in. Just make this super simple. [29083] Show you guys what this looks like. And [29085] just to make my life a little bit [29086] easier, I'm just going to go through and [29086] I'm actually going to pin all the rest [29088] of these outputs. Okay? That way when I [29090] start, it's just going to run [29092] immediately over to the loop over items [29093] and then just split out all of these. [29095] And you'll see what I mean by uh [29096] splitting them. Okay? So, we just fed in [29098] 21 items. Okay? And now for every one of [29100] those items, I want to show you guys [29102] what the links look like. Just go down [29104] to number one. Notice how now what we're [29106] doing is for every run, okay? For all [29108] 21, we're outputting a massive list of [29110] links. So this massive list of links, [29111] which is pretty long, I think it's 30 [29113] something. This is for run one. This [29115] massive list of links is for run two. [29117] This massive list of links is for run [29119] three. This massive list of links is for [29121] run four. So basically, each of these [29122] runs are just a different person and [29124] their website. Okay. So now, what do you [29126] think we're going to do? Well, for each [29127] person and their website, what we're [29129] going to want to do is we're going to [29130] want to process these links a little. I [29131] mean, like, check this out. This stuff [29133] is crazy. Most of these are basically [29134] exact duplicates for Christ's sake. [29136] Also, these are um absolute URLs, not [29138] relative URLs. What we want to make a [29140] long story short is we want a bunch of [29141] links that look like this. [29142] Home-valuation [29144] y-list-with- us communities leewood real [29147] estate. Stuff like this just makes it a [29148] lot easier to process using HTTP [29150] requests later. So, we're going to have [29151] a bunch of relative links. And then [29153] we're going to add the initial website [29155] URL. So, then in this case, it' be troy [29157] homes [29160] sky-lists-with-. So, I'm going to go [29162] over here and I'm going to click add [29163] filter. And what I'm going to do, okay, [29165] it's unfortunate we we don't have access [29167] to that data, but what I'm going to do [29168] is I'm just going to make sure that the [29170] string starts with an a slash. Okay, and [29174] the way that this data is being output, [29176] it is being output under links. So I [29179] actually know how to reference this. I'm [29180] just going to go [29183] expression. I'm going to go dollar sign [29187] JSON. Okay. Now, if I take this, I pin [29192] this and I test this. Okay. And so, what [29195] ended up happening is we fed in 270 [29197] items here. We looped over all of these [29199] links. Then, for all of them, we [29201] filtered them out and we ended up with [29202] just 121 items. Okay. So, basically what [29206] we did is we just discarded a bunch of [29207] the links that, you know, didn't have [29208] anything. So, these, for instance, are [29210] all absolute URLs. We just wanted all [29212] the relative ones in the website. Is [29214] this the perfect and best way to do it? [29215] No, not really. Like, theoretically, we [29216] could extract these. I'm just not doing [29218] it because I'm a little lazy and I find [29220] that most websites just have relative [29222] links to begin with. In reality, we [29224] don't actually scrape every page on [29225] every website. That just be a ton more [29227] work than is necessary, especially for [29228] those really heavy SEO pages. So, I'm [29230] just going to go with like my proxy. [29232] Proxy just means like my thing that's [29234] close to the right answer, which is [29236] just, hey, you know, if a website has [29237] any relative links on it, that's what [29238] we're going to scrape. Sure, some [29239] websites aren't going to have relative [29240] links on it, and you can totally adjust [29242] the logic to fix that on your own end if [29244] you'd like. Okay, one thing I'm noticing [29245] now is there's a bunch of duplicates. [29246] So, I'm just going to go to remove [29248] duplicates. I'll go remove items [29249] repeated within current input. Okay, [29251] this is going to immediately remove all [29253] of the duplicates in the flow. Now, I [29254] know how this works. I'm pretty [29255] confident it's good. So, I'm just going [29256] to move forward. And now, to be honest, [29258] we're basically ready to do our HTTP [29260] request. So, for all of those that are [29262] remaining, what I'm going to do is I'm [29263] going to get the URL. Now, I know what [29266] this expression already looks like. It's [29268] going to be loop over items item.json [29269] website URL and then JSON.links. What [29272] this is going to do is this is basically [29273] going to concatenate the website URL [29276] with the relative URLs that I'm pulling [29277] here. So for instance, if my website was [29280] leftclick.ai, this would be the base URL [29283] and then this would be the relative URL. [29285] That's what I'm doing right over here. [29286] I'm just concatenating. I'm just [29287] sticking them together just because [29289] sometimes there are redirects. I'll go [29291] down to redirects as well. And now what [29292] I'm going to do is I'm just going to [29293] test it on all of these links. Okay, [29295] it's going to be a lot of HTTP requests, [29296] but it's important that we give this a [29298] try. Okay, and what we ended up with was [29300] 39 items. So I scraped 39 pages here and [29304] the result of these 39 pages are all [29306] HTML. What I want to do is I want to [29308] convert this into like some sort of [29309] language that I understand. And the [29310] simplest and best way to do that is [29312] using an HTML to markdown node. So I'm [29313] just going to drag in HTML. It's going [29315] to get the HTML data inside of this [29317] node. And then uh yeah, to make a long [29320] story short, this is just going to [29320] convert this into some sort of workable [29322] text that I can actually use. After [29325] that, we now have a bunch of markdown [29327] data. If you've never seen markdown [29328] data, it's pretty straightforward. Just [29330] scrolling through here, what we end up [29331] with is we end up with just a bunch of [29333] links again and then just a bunch of [29334] plain text. So this just basically makes [29336] the token cost a little bit lower. For [29338] those of you that don't know how HTML [29339] works, it usually I mean it looks kind [29341] of like this, right? So to write the [29342] word renter experience, you can't just [29343] write renter experience. You need to go [29345] less than symbol title greater than [29346] symbol renter space experience less than [29348] symbol/title greater than experience uh [29350] greater than symbol. This is just way [29352] more to uh tokens than you need. And [29354] since we're about to feed all this stuff [29355] in AI, we want to minimize the token [29357] cost wherever possible. And next up, [29358] what we have to do is we just have to [29359] feed this into AI. So you do so by going [29361] to open AI and then click messaging a [29363] model. I've actually already created [29364] this message node. So I'm just going to [29366] paste it in here just to make our lives [29367] a little bit easier. But if I feed this [29370] in, I'll run you guys through what this [29372] is doing. First of all, we need to [29374] connect our credential. So I connected [29375] to one. If you haven't done this [29376] already, just head over here and get [29377] your API key from OpenAI. It'll actually [29380] walk you through all of this stuff. Um, [29381] it's very straightforward, luckily. [29383] Although if you are at the beginning or [29385] a rate limit, just note that this may [29386] actually push you over the rate limit [29388] just because we're going to be sending a [29389] lot of requests very quickly. The model [29390] I'm going to be using is GPT4.1. The [29393] first prompt I'm going to use is a [29394] system prompt that says you're a helpful [29395] intelligent website scraping assistant. [29397] And then over here is the actual prompt. [29399] Okay. And this is kind of like where the [29400] AI magic comes in. So you're provided a [29403] markdown scrape of a website page. Your [29405] task is to provide a two paragraph [29406] abstract of what this page is about. [29408] Return in this JSON format. Abstract. [29410] Your abstract goes here. Rules. Your [29412] extract should be comprehensive, similar [29414] level of details and abstract to a [29416] published paper. That's very important. [29417] Use a straightforward spartan tone of [29419] voice. And if it's empty, just say no [29420] content. This is necessary because some [29423] of these scrapes that we're going to do [29424] are going to turn up empty. And we just [29425] want a simple and easy way to handle [29427] them. Okay. So, from there, what we're [29429] going to do is we're going to feed in [29430] all of this directly into AI and just [29432] have it tell us something about it. It [29434] doesn't have to be super complicated, as [29435] I'm hopefully you guys can tell. All we [29437] need to do is just ask it to do this for [29439] us. And what I'm going to do here, [29442] sorry, I just I I ran this one [29443] individually. Give this a click. What we [29445] see is we get an output that looks like [29447] this. This web page serves as a contact [29449] page for Hayan Company, Inc., a real [29451] estate firm located in Overland Park, [29452] Kansas. It provides organizational [29454] contact information, including the [29455] physical address, commercial phone, and [29456] facts numbers, and a link to the [29457] company's website. It also invites users [29459] to reach out with assistance. So, this [29460] just basically gives us some context [29462] about what that specific page is. And [29463] since we're going to be doing this for [29464] all of the pages, you know, I'm sure you [29466] guys could tell, we're going to rack up [29467] a ton of data. What we need to do now is [29469] we need a simple and easy way to get all [29470] the data. It's funny cuz I'm saying data [29472] and data different like every time I do [29474] it. Um anyway, what I'm going to do here [29477] is I'm going to get the data and then [29479] I'm going to aggregate it into an array [29481] and then I'm just going to feed all of [29482] that aggregated array into another AI [29484] module that says, "Hey, here is a ton of [29486] information about a website. What I want [29487] you to do is I want you to customize a [29488] piece of outreach based off that." So [29490] the simplest way to do that here is to [29491] go aggregate. And what you're going to [29492] want to do is the specific field that [29495] you're going to aggregate is going to be [29496] this abstract. So I'm just going to grab [29498] the input field name here. I'm not going [29499] to rename the field. That's okay. Okay. [29501] And now I'm just going to run this end [29502] to end from left to right. Make sure [29504] that I have all the data laid out not [29506] with pinned nodes if that makes sense. [29508] Because if you pin all the nodes and [29509] only test off of pin nodes sometimes and [29511] it bugs out just because you are [29513] sometimes expecting more or fewer [29515] records than a later node actually gets. [29518] So we're just going to run this end to [29520] end now on new data. Give that a try. [29524] Colonify scraper over here. Okay, we now [29526] have a bunch of items. We're then doing [29528] tons of HTTP requests. So, you can see [29530] we've gotten a slightly different number [29532] of items here. Okay, and it's running [29535] and it's just kind of doubling up. What [29537] I did is I connected the end to the [29538] beginning here. I'm just looping over [29541] and as you can see, the summarized [29542] website page is taking a little bit [29543] longer because it's probably a pretty [29545] long page. Okay, and it looks like this [29547] is hanging. And I think the reason why [29549] is because what we're doing is we're [29550] feeding in just a boatload of tokens. It [29553] looks like some of the website scrapes [29554] just a lot longer than I was [29556] anticipating. So, what I'm going to do [29557] is I'm actually going to check to see [29561] the length of the data here is okay. [29565] This is 18,000 characters to [29567] tokens. One token is around four [29569] characters. So, 18 898 divided by four. [29572] That's quite a few words, right? Why [29574] don't I cap this out at 10,000? Let's [29578] say then if it's greater than 10,000 [29582] then I want to do JSON. Sorry, let me go [29585] to the expression field to make it [29586] easier for you [29587] guys. Then if not, I want to do [29592] this. Well, slice it from 0 to [29596] 10,000. All right, that should be good. [29598] And now we're always going to be working [29600] with reasonably simple and small data. [29603] Let's actually do this even less. Let's [29604] just go like 5,000. [29607] We don't need much more than that [29609] realistically. Okay, let's just touch [29611] that formula up. I just added length [29613] there by accident. Now let's run this [29616] one more time. Okay, and then if we [29618] click on this little aggregate button [29619] here, what we see is we have multiple [29621] runs. And every time that there are [29623] multiple links, what we do is we [29624] actually aggregate them together. Now, [29626] in this case, we haven't actually [29627] aggregated any because it looks like the [29628] first two people that have run through [29630] the system are both working for Hath and [29631] Company Incorporated, which is just like [29633] the, you know, obviously there's like [29635] the same number of like links for each, [29637] right? This one did though. Notice how [29640] we had one page here, another page over [29642] here, another page over here, another [29644] page over here. And what it did is it [29646] just aggregated all of those fields [29647] together. In this case, it's pretty [29648] long, right? It's 23. That's why it took [29649] so long for us to finish. But anyway, [29651] what I'm trying to say is now that we've [29652] aggregated all the data, what we have to [29653] do next, we we kind of have to pass that [29655] through another AI node, right? What I'm [29657] going to do is I'm going to feed this [29659] through a second one here called [29661] generate multi-line icebreaker where now [29664] what we're going to do is we're going to [29664] feed in all these independent website [29666] summaries into said multi-line [29668] icebreaker. Okay. Going to give this a [29670] double click now. And the way that this [29671] is set up is the same as before up here. [29674] And the text is we just scraped a series [29676] of web pages for a business called Oh, [29677] sorry about that. We don't actually have [29679] the text on the [29680] business. Your task is to take their [29682] summaries, turn them into catchy [29683] personalized openers for a cold email [29684] campaign to imply that the rest of the [29686] campaign is personalized. We actually [29687] just tell it what we want and return [29688] your icebreers in the following JSON [29689] format. Now, what I've done is I've [29691] actually written out a custom icebreaker [29692] that I know works pretty well. Hey, name [29695] love thing also doing/like/ a fan of [29698] other thing. Wanted to run something by [29699] you. I hope you'll forgive me, but I [29701] creeped you and your site quite a bit [29702] and I know that another thing is [29703] important to you guys or at least I'm [29704] assuming this given the focus on fourth [29706] thing. I put something together a few [29708] months ago that I think could help. To [29709] make a long story short, it's insert [29711] thing you're selling over here. Okay. [29713] And I think it's in line with some [29714] implied belief they have. I guess the [29716] point I'm making, and you guys can do [29717] this however the heck you want, but I [29718] just have AI like kind of fill in the [29720] blanks for me, but I don't do it like [29722] with simple templated variables. What I [29724] do is I will make it flexible. Like I'll [29727] use a variable and I'll like tell AI, [29728] hey, fill this in with something, right? [29730] Where thing is the thing that I wanted [29731] to fill in. This is in contrast to like [29733] using actual variables which are [29735] procedural and always fixed. If you tell [29737] AI like, "Hey, I want you to write this [29738] casually in short form." What it can do [29740] is it can paraphrase those things and [29741] then it seems a lot more like realistic [29743] to a customer which I find. So use [29745] whatever the heck you want here. This is [29746] just my template. Then I have a ton of [29747] rules. Write in a Spartan lonic tone of [29749] voice. Make sure to use the above format [29750] when constructing your icebreers. You [29751] write out this way on purpose. Shorten [29753] the company name wherever possible to [29754] say XYZ instead of XYZ agency. Love AMS [29757] instead of love AMS professional [29759] services. Love Mayo instead of Love Mayo [29760] Inc. Do the same with locations. Then f [29763] for variables focus on small non-obvious [29765] things to paraphrase. The idea is to [29766] make people think we really dove deep [29768] into their website. So don't use [29769] something obvious. Do not say cookie [29770] cutter stuff like love your website or [29772] love your take on marketing. So all of [29774] these things are important. This here [29775] just makes it seem more humanwritten [29777] because humans tend not to write the [29778] whole company name. If you write the [29780] whole company name, if you say hello, I [29781] love Mayo Incorporated. Odds are you [29784] scrape Mayo Incorporated somewhere from [29786] the internet. you do, hey, love San [29788] Fran, then odds are you did not scrape [29790] San Francisco somewhere from the [29792] internet. Odds are if you say for your [29794] variables, focus on small non-obvious [29795] things to paraphrase, then you did not, [29797] you know, do all of that stuff. I guess [29798] all of this stuff just makes it seem a [29800] little bit more human written. Then what [29801] I do is I give it some examples of [29803] profiles and then websites. Okay, so [29805] what I did is I basically ran this exact [29806] same flow on a couple of test demo [29809] websites. Then I got the profile and [29810] then I got a bunch of different website [29812] scrapes. Okay, so exact same thing here. [29813] I'm just feeding this in as like an [29815] example. [29816] Then I basically instead of me just [29818] telling it what I wanted to do, I fed it [29820] an example of the perfect outline for an [29823] icebreaker. And then what I'm doing now [29825] at the end is I'm actually feeding it on [29826] real data. Okay. So just to make a long [29828] story short, I'm doing a system prompt [29830] first, then a user prompt where I give [29832] it instructions, then a user prompt [29834] where I give it an example of an input, [29836] then an assistant prompt where I give it [29838] an example of an output, then finally I [29840] give it the actual user prompt with the [29841] actual input and output. Once this is [29844] generated, if you think about it, our [29845] job here is basically done. All we need [29846] to do now is we just need to update or [29848] add a section to the Google sheet that [29850] we had before. So, I'm just going to [29851] delete all of these. Go to Google Sheets [29852] first, then click append row. Mixing up [29856] my platforms here. Just going to use the [29858] YouTube credential. What I want is I [29860] want to select the document obviously. [29861] So, multi-line icebreaker generator. The [29863] sheet I'm going to be pulling data from [29864] is or I'm adding data to is going to be [29866] leads. Then, what I'm going to have to [29868] do is I'm going to have to map all these [29868] fields. And I can't actually hold this [29870] data yet. So, I'm just going to give it [29871] a quick run and then do it in a second. [29872] Okay. From here, what I've done is I've [29874] now mapped all the correct fields. So, [29876] the first name field is going to fill in [29879] this column. The last name field is [29882] going to fill in this column. The email [29884] field is going to fill in this column. [29886] Website, headline, location, phone [29888] number, and then multi-line icebreaker. [29889] Okay, this icebreaker is the new field [29892] that I can't access. So, we are now just [29894] going to give it a run. And because I [29896] need to loop this, obviously I have to [29897] grab the output of this and move this [29898] all the way here to the input of the [29899] loop. And then when it's done, I don't [29901] need to do anything. Okay, so let's give [29903] this a try now on some real live data. [29905] I'm going to click test workflow. First [29906] thing it's going to do is it's going to [29907] split it all out like we did before. [29910] Then it's going to filter it out, remove [29911] all the duplicates, and then start my [29913] HTTP requests, format it as markdown, [29916] summarize individual pages, aggregate [29918] all those individual pages into one [29919] array, feed that whole array into the [29921] multi-line icebreaker, then it'll add [29922] the row, and then it's just going to [29924] proceed line by line by line, and do the [29926] same thing. Now, the first two leads in [29928] this list were obviously um the same [29929] company, Hen Co., You know, you can [29931] filter out duplicates in the company [29933] website if you want. Didn't do that in [29934] this case because I actually think that [29935] it makes sense to pitch two people on an [29937] individual business. A cool thing there [29939] that you could do, which I'm not doing [29940] here, is you could also reference like, [29941] "Hey, David, I just reached out to Zayn [29943] and I wanted to follow up with you as [29944] well." If you do stuff like that, people [29946] are a lot more likely to believe that [29947] you are a real human being do this [29949] outreach, not some automated super cool [29951] robot. Okay, looks like we just added [29953] another one that says, "Love how you got [29954] the Casey trusted partners list dialed [29956] in. Also a fan of that local lender [29958] vetting approach." Very [29960] nice. We're just about wrapping up our [29962] test set [29963] here. Okay, so hopefully you guys [29966] appreciated seeing me put that system [29967] together in real time. I hope it's [29969] abundantly clear, but that system is [29970] just like a nugget. It's a stem. You can [29972] add onto that system, make it [29973] arbitrarily complicated if you want. I [29975] use some very simple filtering logic [29977] here because I just wanted to let you [29978] guys do whatever the heck you wanted [29979] with it. I also just tend to be kind of [29981] hacky in the way that I put things [29982] together. So, I will focus on the 80/20 [29984] thing that does 80% of what I want, even [29986] if it's a little less cost-effective or [29988] even if I end up wasting some of the [29989] leads. To me, the leads are never the [29991] bottleneck here, just because we have [29992] platforms like Apollo and Ampify and [29993] stuff that let us get an almost infinite [29995] number of them. Uh, aside from that [29996] though, yeah, like you can squeeze a lot [29998] of juice out of the system. You could do [29999] a lot more than I did here. You could do [30000] a number of things. Instead of just [30001] scraping all of the website pages and [30003] putting it into an icebreaker, you'd [30004] actually like use it to generate an [30005] asset. You could build a big dossier on [30007] the client. You could have this be like [30009] a person research machine where you [30010] build up some massive list of [30012] information and extract everything about [30013] them and then feed that into a big [30015] database and then use that database to [30016] pitch people in a lot more detailed of a [30018] manner than I am. You could generate [30020] multiple different types of icebreers. [30021] You could test different icebreers [30022] against each other. You could blast out [30024] to everybody in the same domain and then [30026] use other people's information to [30028] reference those people in those emails. [30030] You could say, "Hey, David, I was [30031] looking through Zayn's profile. pretty [30033] sure he's one of your colleagues and I [30035] noticed X Y andZ really unique cool [30036] thing that only a human being would [30038] notice. Just wanted to say great work [30040] and I had a proposition for you. When [30042] you say stuff like that, people again [30043] just assume that you're a real human [30044] being that sat down and is doing this [30046] manually. And whether or not you know [30048] your pitch is even that incredible. [30049] Usually when you can imply that you're a [30050] real human being and you can convince [30052] someone of that, they're a lot more [30053] likely to take the rest of your pitch [30054] seriously. You're crushing it. You just [30055] built a cold email system that now [30056] generates 5 to 10% reply rates through [30058] deep website personalization. Assuming [30060] of course the rest of your copy is up to [30062] snuff. The idea is now you or the person [30063] that you are selling the system to has [30065] prospects that are reaching out and [30066] showing genuine interest in automation [30068] services. Congratulations if you guys [30069] are still here. You've completed the [30071] most comprehensive NAND master class on [30073] the internet that features live [30075] building. You went from someone that has [30076] no idea how to put together an [30077] automation to somebody who now has a [30079] complete arsenal of both [30080] professional-grade AI workflows that [30082] businesses are willing to pay thousands [30083] for and also the knowledge to build [30085] these things from scratch. At this [30086] point, you're no longer just a beginner [30088] watching an automation tutorial. You are [30089] hopefully equipped with eight proven [30091] systems to solve real business problems. [30092] You understand n foundations. You can [30094] build complex multi-step workflows. And [30097] you also have some systems that [30098] typically sell for 3 to 15,000 bucks in [30100] implementation. You can reference any [30101] part of this master class just using the [30103] timestamps below. So please bookmark [30105] this video. Come back anytime you want [30106] to brush up on a specific workflow or a [30108] specific technique. Now in reality [30110] having technical skills is just the [30111] beginning. The gap between people who [30113] understand nod and people who actually [30115] make money with it is not really the [30116] technical knowledge. It's execution. [30118] It's accountability and it's staying [30120] consistent with the daily activities [30121] that generate clients. That's exactly [30123] what Maker School solves. That is my [30124] 90-day accountability program that [30126] guarantees you your very first a [30127] automation client or your money back. [30129] Instead of wondering what to focus on [30131] every day, Maker School gives you a [30132] clear daily action plan. The whole idea [30134] is to eliminate the decision fatigue so [30136] inherent in stuff like this. And it just [30138] keeps you moving towards your goal in as [30139] effective a method as possible. Many [30141] members start selling the exact same [30142] systems that we just built together [30144] within a couple of weeks of joining. and [30145] they build revenue streams that deliver [30146] consistent monthly income. If you're [30148] serious about turning these skills into [30150] actual income, I would encourage you to [30151] at least consider joining Maker School. [30153] Aside from that, thanks for completing [30155] this master class and I'll catch you all [30156] in the next video. Peace out.

Video: https://www.youtube.com/watch?v=F0bUCu6pZlI
Title: Answering The Questions Every AI Automation Beginner Asks
[0] Hey everybody, Nick here with something [1] you guys have been wanting me to do for [2] a while. Many of you may not know this, [4] but over on my daily updates channel, I [5] spend about an hour every week answering [7] detailed questions about building AI [8] automation businesses. Everything from [10] cold outreach strategies to finding [11] ideal clients. And today, I've taken [13] some recent valuable questions from [15] those sessions and then just brought [16] them here to the main channel. We'll [17] cover mainly whether cold calling still [19] works in 2025, how to identify your [21] perfect client profile, especially when [22] you're just starting out, as well as a [24] bunch of other questions, all with [25] actionable steps you guys can implement [26] immediately. If you guys are wondering [28] about something specific that doesn't [29] get covered today, I do read and respond [31] to every single comment on my daily [32] updates channel. You guys can find the [33] link right down here in the description. [35] So, let's dive into these questions and [37] get you guys all the answers you've been [38] looking for. The first question while I [40] eat my beef jerky is from Grant. He [41] says, "I'm launching my SAS soon. [42] Starting off by acquiring customers [43] through cold calling because it requires [45] the least amount of time and money to [46] get some revenue coming in. I like to [47] transition into a more scalable [48] acquisition channel as early as [50] possible." And he also says, "Do you [51] recommend cold email or paid ads and [53] why?" So, I think this is a great [55] question. I wouldn't actually recommend [56] any sort of cold calling today. So, cold [58] calling. Cold calling, like the pros of [60] cold calling are very few and the cons [62] of cold calling are very, very long [64] nowadays. Didn't used to be that way. [65] This is coming from somebody that used [66] to cold call 50 to 80 businesses per [68] day. I'd either go door knock on them or [70] I'd hook them up to an auto dialer with [71] my business partner at the time. We [72] actually went off Facebook Marketplace, [74] bought this really old janky like old PC [77] tower and then I set up an auto dialer [79] and we use that to do our calls. It was [81] very very janky. But anyway, the pros of [83] this wonderful threedimensional thing of [85] cold calling are requires $0 startup [87] cost, right? Like all you really need is [90] a phone. I mean, it's not $0, but it's [91] about as close to $0 as you can get. [93] Then all you need is your [95] voice, basically. You know what the cons [98] are, man? It's they're crazy. The cons, [100] the biggest one that nobody talks about [101] is the fact that it's synchronous. What [103] does synchronous mean? That means that [104] you have to be available at the same [105] time as the person that you're calling. [107] What is the statistical likelihood that [108] that's going to happen right off the [110] get- go? Okay, right off the get- go, [112] you're eliminating like over 50% of [114] leads. Cuz the cold hard truth is more [118] than 50% of all the leads on the planet [119] are not going to be available by the [120] time that you call them. They're not [122] going to be available. It's either going [123] to be an inconvenient time for them, [124] they're not going to be willing. The [126] point that I'm making is literally the [128] fact that they are not available is [129] going to make more than half of your [131] time. Like like if your efficiency [132] started off as 100, right off the bat, [134] you're you're at like 50%. Man, right [136] off the get- go. We haven't even [138] subtracted the rest of the stuff. So, [139] it's synchronous. Okay. If you contrast [142] this with lead generation methods that I [143] recommend, which for the record are [145] stuff like Loom videos where you [146] customize a Loom video, very similar to [148] a cold call, you just do it on camera [149] instead and then send it to them solving [150] some need that maybe they didn't even [152] know that they had. Ideally, they'd know [153] that they had it. But the benefit there [154] is like you lose none of this because [156] people only really look at it when they [158] have the time to, right? Like if they're [159] looking through their email inbox or DMs [161] on LinkedIn or whatever, they have the [163] time. That's why they're looking through [164] the thing. So, you never have to like [166] knock 50% off right off the bat. Okay. [168] But anyway, so the big con is that it's [170] synchronous. It also is way harder for [171] you to get started when it's synchronous [173] because now you have to schedule like [174] cold calling blocks. Contrast that with [176] like my 0 to1 Loom video approach where [178] you just send them out like when you [179] have a minute. It's like, oh, I got 3 [181] minutes. All right, I can record a quick [182] Loom video. Like, do you know how many [183] little windows of your day there are [184] just talking productivity wise that you [186] can squeeze a couple of videos in? When [188] I was doing, you know, 10 to 20 Upwork [189] apps per day. I mean, like everybody [191] talks about how hard it is and how much [192] time it is in maker school, right? But I [194] didn't even like like sense what I was [196] doing to be honest because it was like, [198] you know, I'd be doing some client task [199] and I have like 15 minutes between this [201] stuff for a call. So I' be like, "Oh, [202] great. You know, I have a couple [203] minutes. Let's record two or three Loom [204] videos." Like, if you think about it [206] that way, you always have time for some [208] sort of asynchronous activity. But [209] because it's synchronous, you don't have [210] the time. So that's number one. The con [213] obviously is, sorry, I have to eat this [215] beef jerky cuz I haven't eaten anything [216] all day. And if I don't eat now, I'm not [217] going to be able to record my video. [219] It's like spam pattern match. So, I [222] don't know about you, I don't pick up my [224] phone anymore. I haven't picked up my [225] phone unless it's like a contact that I [227] know and love in like months probably [230] cuz every time I do, it is invariably [232] some spam or the line is quiet or it's [234] waiting to connect me with some auto [235] dialer or it's some robo thing or it's [238] like Chinese tea scammers or whatever, [241] right? So, I don't know about you, but [242] like my phone is no longer a trusted [244] method of getting in touch with me. [246] Okay, for the most part, people's DM [249] channels like LinkedIn, Twitter, stuff [251] like that, for the most part at this [252] moment in time as of the recording of [253] this video, they are still trusted [255] channels. They're trusted mainline [256] channels that go directly to you. So, [259] when you cold call, you spam pattern [261] match. I guess the point I'm making is [262] you have to be really good at cold [263] calling to make it work. And don't get [264] me wrong, you can be amazing at cold [266] calling and you can make a living with [267] it. You can make, you know, 300, 500, a [269] million dollars a year, but you have to [271] get really good. And that it's still [272] really hard. Why? Because the majority [275] of the day you're talking with people [277] that just don't want your service to be [278] honest, unless you have the most [279] qualified list in the world, for the [281] majority of your day, you're going to be [282] talking to people that don't want your [283] stuff. And it's so much better from like [286] a motivational perspective, productivity [287] perspective, all that stuff. If you just [289] like if you deal with people that like [290] are sort of pre-selected or [291] pre-qualified. This is in small part why [293] I shifted from primarily even like cold [296] email to warm [299] inbound because you know I scaled two [302] agencies you know first agency to 92k a [304] month with cold email cold email and [306] upwork I should say sorry and then [310] 72k [311] okay I mean this is yeah I mean it's not [314] all cold email and I shouldn't have said [315] that I don't know maybe like half of it [317] or something like that realistically but [318] this one was predominantly cold email so [320] I've scaled a couple agencies and one [322] thing that I realized pretty quick is [323] like when you do this the people that [325] get on the call with you they aren't [326] always qualified and so they're not [327] always sort of people that are looking [328] for solutions. So actually a big chunk [329] of the time you spend just on a call on [331] a sale is you convincing people that [333] like you're credible convincing people [334] that you're worth it and stuff like that [336] and honestly I just much prefer like the [337] cadence of a sales call when they come [339] to me because they need something so [341] much easier. It's so much warmer. It's [342] like funner you know so like just just [345] from all of these perspectives. I know [346] you're just talking about going from [347] zero to one but man it you know it's [350] it's synchronous. That's old school [351] stuff, right? Spam pattern matching. You [354] don't want to be associated with spam. [356] Uh you have to be really good. And you [358] know how long it takes to get We're [359] talking years here. And don't get me [360] wrong, it's a great training ground, but [362] it's it's really hard to get good in the [364] first place to stick around long enough [366] for you to be able to stand out from the [367] spam pattern match. Like if the pro is [370] that it's basically zero dollars and [372] then like, you know, you can technically [373] get started now. The cons are 100 times [375] that. You know what I'd recommend for [376] you instead? Do Loom videos. Okay? [380] Instead of having 50% of people like [382] just fall off right off the bat, you'll [384] get 100%. And then if you do Loom [387] videos, okay, so aka you record a [389] customized high-quality video answering [391] a problem that the customer has or [393] offering some sort of solution, but you [395] make it abundantly clear that you are [396] tailoring your pitch just to them. [398] Customize the hell of it. You scroll [399] through their website. You you go on [401] their Facebook. By the way, I saw you [402] had a Yorkshshire Terrier. That's crazy. [404] My uncle Samantha had one. Right. If if [406] if you go through all of this stuff, the [407] amount of time it'll take per lead is [409] about the same amount of time it would [410] have taken you to do a cold call anyway, [412] assuming you got connected with them. [413] So, you're not actually like any [414] pound-for-pound losing any time. But now [417] you have an asset, okay? You have a [419] link. With this link, you can now send [421] it not just once through a through the [423] phone where, you know, 50% of people are [425] just going to look at that and think [426] it's spam anyway. You can send it [427] through email, okay? You can send it [430] through LinkedIn. You can send it [432] through Twitter or X. You could send it [434] through Instagram. You could send [436] through Facebook. Okay, assuming you get [438] all of the personal information of all [439] these people. Do you know what that [440] means? Let's say there's just a 20% [442] chance that they look through all of [444] these platforms. Okay, 20% chance they [446] check their LinkedIn, 20% chance they [447] check their Twitter, 20% chance they [449] check their Instagram, 20% chance they [452] check their Facebook. Okay, you know [454] what this means mathematically? It's 0.8 [456] raised to the five. And if you subtract [458] one by this, all of these collectively [461] mean that there's something like a 67% [463] chance they will see the thing. If your [465] thing's really good and it's hyper [466] customized, well, that means that two [468] out of three people, and realistically, [470] you know, some people are going to look [471] at your stuff and not like it. Maybe [472] half of people can actually respond to [474] you. You can literally get reply rates [477] like 50%. Everybody that I work with [479] today, everybody on my team, which I'm [482] just building now, reached out to me [484] with some variant of this. either they [486] recorded a video for me that was super [487] customized. They talked about, you know, [489] who they were and and why they thought [491] that they could help me and what mistake [492] I was making, what value they could [493] drive for me, or they went and actually [495] created some other asset for me, like, [497] you know, they they went and they edited [498] a video for me or created some [499] thumbnails for me or something like [500] that. This stuff works. It works really [502] well. So, if you do, you know, 10 of [504] those a [505] day, even assuming it takes you like two [508] or three minutes to get the LinkedIn and [510] the Twitter, whatever, you'd have some [512] research stuff and assuming you do it [513] yourself. [514] If it takes like five minutes each, [516] right? Hell, let's say six minutes, you [519] have some pitch, dude, you're spending [521] an hour a [523] day and you have a reusable asset, [526] repurposable asset, you can an hour a [529] day to get like 50% reply rates [531] realistically. Not everybody's going to [533] get this, but if you are very good at [535] offering a ton of value, if you're [537] reasonable on camera, if you have all [538] the skills that would have made you a [539] good cold caller anyway, then this [540] number is going to be very high. You [542] spend an hour a day and then you're [543] going to do probably like 5 to 10x the [546] results of what you'd get of a cold [548] call. Now, I am pulling numbers out of [550] my ass, so don't hold me on the 5 to 10x [552] here. I didn't do a big study on it, but [554] that's my gut feeling. And you know, [556] this is coming from somebody that used [557] to do tons of cold calls. So, I hope [558] that helps. Thanks for sharing, Nick. [559] Have a lot of fun watching you do all [560] this stuff, experiment, play around with [562] ideas. Thanks, man. Quick question. I'm [563] currently building an AI automation [564] agency center around content automation [566] and repurposing. Nice. I want to tackle [568] founders as my ICP. This stands for [570] ideal customer persona. And I've been [571] having a bit of success with that. I [572] figured I'd reach out to you and ask if [574] you had some insights. What do you think [574] is the ideal customer for an agency like [576] mine that repurposes content, [578] distributes it to other platforms. And [579] how did you get their services or find [580] them besides the obvious LinkedIn and [582] Upwork? Well, I think your ideal [583] customer is probably somebody like me. [585] Well, not somebody like me, but somebody [587] around a similar level to me that is [588] just starting to standardize their [590] content creation. maybe between 10k like [593] like 10k to 100k followers on some [595] social media platform because they're [596] just at the beginning of their you know [598] hopefully exponential climb upwards. [600] They're just the part where they're [601] probably starting to outsource or work [603] with a team to help standardize the [605] delivery and they're just looking for [607] like much cheaper ways to do that. You [608] know, if instead of you having to hire a [611] team to manage your real strategy like [613] I'm doing, I could just take a [614] transcript and use that transcript to [616] automatically generate posts for 10 [617] social media platforms, cue them up to [619] be published and either do that [620] automatically or have, you know, like a [622] person do it depending on whether you [624] want to risk being soft throttled for [625] reach. Like that's a very simple and [627] easy problem that you could solve. How [629] to scrape these leads or how to get [630] them? There are variety of ways. I guess [631] I would just get like maybe three [633] platforms to start. So maybe Instagram, [635] Twitter, and YouTube. And then what [637] you're looking for is you're just [638] looking for channels or pages that have [640] maybe between 10 to 100K, 10 to 50 or 10 [643] to 100K. I mean, I'm pulling these [644] numbers out of my ass, but like my gut [646] tells me that's probably right. And then [647] pump them into Apify. So, get yourself a [650] scraper, okay? Like like a YouTube [652] scraper, let's say. Pump in like 50 [654] search terms. Have AI come up with a [656] bunch of search terms. Pump those search [658] terms into something like the YouTube [659] scraper. And it looks like this. Some [661] paste per result, which is nice. You're [663] going to return a thousand videos for [665] $5. Okay, those thousand videos are [667] probably going to be made by like 600 [669] people cuz some people are going to [670] repeat. Okay, so mathematically, this is [673] what it's going to look like. 1 th000 [675] videos maybe. Okay, let's just be easy [676] and say there's 500 creators. And what [678] you do is you just take the top 10% of [680] those. So when you scrape data using [683] something like this, you'll usually get [685] channel name, right? Social media links, [687] comments, video title, stuff like that. [690] So you actually get the number of [691] subscribers, right? So just sort them. [692] Just sort the sort the subscribers that [694] come in. sort the channels by subscriber [696] count. Okay, so Nick Raf's obviously [699] going to be in top with 53K or whatever, [702] 54K, I don't know. Then another person [704] here with 28K. Then another person here [707] with 27K and you know all the way down [711] to 12K or something. And now you have [713] the channels. You have 10 channels. [715] Well, you can do more if you want, [716] right? You don't just have to do 10. You [718] can do like 100 of the 500. I said top [720] 10% here, so maybe do 50. Okay, so now [722] you have 50 channels, right? Now that [723] you have 50 channels, you know, you have [725] their YouTube, so on their YouTube [726] channel, a lot of the time, you can [728] either run another scraper [729] automatically, like a YouTube channel [730] scraper. And then when you do that, [732] you're actually going to get the links [733] in the video descriptions, and you're [734] also going to get like the links that [737] people put right over here. Check this [739] out. You see where it says three more [742] links? You know, you're going to get [744] their Instagram channel. You're going to [745] get their website and stuff like that. [746] Now, you're going to have a bunch of [746] contact details about them, basically. [748] And then from here you could get like [749] their IG, their Facebook, their X or [752] Twitter, their LinkedIn. Right now that [755] you have all this, what you could do is [757] you could take one of their long form [758] pieces of content, assuming that you [759] know YouTube is the main source that [761] you're using. Then you could [762] automatically create content for all [763] these using your system, which the [765] marginal cost of that should be like [766] less than a few cents, right? 2 cents or [769] something. And then just do this. Do [771] this outreach approach that I talked [773] about up here where you customize your [774] outreach based off some video [776] hypothetically. Or, you know, if you [777] don't want to do a video, you could just [779] make the asset be this stuff, but just [780] make sure that there's some level of [781] customization to it. And then send that [783] out. I think that did pretty well. In [784] fact, this is like a funnel that I know [785] a lot of people in my community do right [787] now. Not the exact same funnel. This is [789] how I would set it up. Some people set [790] it up differently, but yeah. From study [792] motivation 6838. They ask, "Nick, [795] question. Can you walk through cold [796] email personalization? I've been running [798] my campaign and my reply rates are [800] really thin, like 1 to 2% at volume [803] 5,400 per month. And I haven't done [804] emailing before, so I expected better [806] results from the personalized emails. [808] Can you quickly share how you'd go about [809] personalizing writing the copy to get [810] more than a 2% reply rate? Target [812] audience, marketing agencies, lead [813] source, sales navigator. Yeah, for sure. [815] Well, first of all, 2% reply rates [818] aren't bad. Okay, so let me just scroll [820] all the way down here. Let's just like [823] take stock of the facts first and [824] foremost. Now, somebody that's run [826] campaigns that have achieved higher than [828] 20% reply rates. I know for a fact, [831] let's say you have a 2% reply rate. [833] Let's say you're also going after [834] marketing campaigns, uh, sorry, [836] marketing, um, companies, and then what [838] was the other thing that you mentioned [839] back there? You're sourcing them through [841] sales nav, [844] right? So, yeah, I'm happy to help with [846] that, but I want you to know that like [849] just personalizing emails now is not [850] enough. Uh, it's not enough just like [851] personalize the first line of an email [853] because everybody's now personalizing [855] the first line of an email, right? I [856] want you to think about this stuff as [859] strategy, foundational [862] strategy is much much more important [865] than the day-to-day tactics that you use [867] to, you know, acquire leads or make [869] money. The reason why is because tactics [872] are a constantly shifting goalpost. like [874] the I don't know let's say like you're [876] here and you're in this hypothetical [879] barrel basically the water line is [882] always going up over time right and so [884] if you want to stay afloat it's not [886] enough just to stay where you are you [887] need to like actually learn how to swim [889] and get yourself out right so in our [892] case what do we know well we know that [894] like cold email personalization was [896] awesome over the course of the last like [899] you know 6 to 12 months and it was [901] sufficient for you to write an [904] icebreaker [906] variable, stick that at the front of [908] your email and do, you know, get really [911] good results with it. Okay? Nowadays, if [914] you want to achieve really high quality [916] response rates and stuff, you usually [917] have to do more. So, we're going to take [918] the strategy of the icebreaker and we're [921] going to apply it across the email. And [923] I'm not going to focus as much on [924] tactics. I'm just going to focus on like [925] the wider principles that, you know, are [927] ultimately responsible for what I [928] consider a good email. So, typically the [930] way that like a high performing email [931] works or has worked over the last little [933] bit is you have some sort of icebreaker. [935] In the icebreaker, it says like, "Hey, [940] Nick." Then it'll say something like, [943] and this is very important, by the way. [944] If your reply rates are shitty, it might [946] just be that your personalization sucks. [947] So, definitely go through every row, [950] test out 20, and ask yourself for all of [954] these, if I read the email, would this [957] turn me off before I've even clicked on [958] it? If the answer to more than I don't [960] know, two out of those 20, 10% is yes, [962] then you're going to need to fix that. [964] So, typically the ones that I find [965] perform the best is something like, [966] "Hey, Nick, deeply [970] respect." So, if you're targeting like [972] influencers, something like that, deeply [974] respect your [976] work, [979] especially [981] paraphrased [982] post. Okay, what do I mean by [985] paraphrased post? I mean, you go and you [987] get some social media information on [989] them, something that they post on [990] LinkedIn or Facebook or some information [992] that is only accessible on their website [994] or something. Then you pass that in AI [995] and you paraphrase it. Because you're [996] doing this, the person is now going to [998] be under the impression that you've [999] actually gone through the extra step and [1001] hassle of getting to know them and their [1002] approach. But because you also just have [1004] like a couple of templated sections [1005] like, "Hey, deeply respect your work and [1006] stuff." You can take advantage of like [1008] good copyrightiting principles. If you [1009] template out the whole icebreaker [1010] nowadays, I find it typically devolves [1012] into, "Hello, Peter. I love that your [1015] combined emphasis and focus on X Y and Z [1018] has yielded fantastic results and I [1021] believe strongly in the same things that [1022] you do or something. I don't know. You [1024] just tend to lose a little bit of [1025] punchiness. So typically, you know, you [1027] have to constrain the icebreaker quite a [1028] bit. You have to provide it a template [1030] like hey name deeply respect your work [1032] especially paraphrase thing. Then you [1034] just have to have the AI generate the [1035] paraphrase thing. Okay. Next up you need [1038] some sort of like identification. So [1041] this is the first part of a good email. [1042] You need to like ID yourself. So what I [1044] usually do is let's say I'm reaching out [1047] to marketing people. Hey Nick, deeply [1048] respect your work, especially your last [1051] post on I don't know using AI in [1054] marketing or something, right? Don't [1055] don't just copy the title of the post. [1057] Especially your last post on 13 ways why [1060] AI is better than XYZ cuz then the [1061] person will know that you just scrape [1062] them, right? The whole idea is the [1064] strategic part here is you want to show [1067] the person right off the bat that this [1069] is personalized outreach or you want to [1070] at least make it seem as personalized as [1072] humanly possible right off the bat. But [1073] then the question is obviously okay so [1074] who the hell is this person and why the [1076] hell are they reaching out to me? So you [1077] have to answer those questions [1077] immediately. So, typically the way that [1080] I do it is I'll do something [1082] like I work with X [1087] or I do Y or I'm a Z. And each of these [1094] are just like oneline things. So, when I [1096] was running PR campaigns, I was getting [1098] 20% reply rates, reaching out to [1099] journalists, basically looking for spots [1101] for my clients. We're talking like [1102] Forbes and and Techrunch and so on and [1104] so forth. I would say I work with insert [1107] client name here. Okay, he does insert a [1110] really cool thing here. So my like they, [1114] he, she typically you want to make this [1116] as personalized as possible. So you want [1117] to like stay away from plural pronouns [1119] like they like the company does, right? [1121] You want it to be like oh this is like [1123] Sam and he asked me to reach out to you. [1124] That's the vibe you [1125] want. It does really cool thing. Okay. [1132] Alternatively, you know, you could say, [1133] "I do Y," where Y is some amazing badass [1138] thing that you know is is fantastic and [1140] that only you can do. So, I add [1145] $15,336 per month brackets average [1149] marketing to Sydney marketing [1153] companies between 50 to 100K with some [1156] super specific thing. So, I let me just [1160] erase this and actually write that I [1163] add [1166] $15,372 per month in [1170] Rev [1171] average [1174] to [1176] Sydney [1179] marketing companies. And a marketing [1181] company is a very vague term. So ideally [1184] like the way that companies like this [1185] tend to brand themselves is like some [1186] variant of that like a creative agency [1188] or PPC ads agencies or some specialty [1192] within this. So marketing companies is [1193] not the best term to use here to Sydney [1195] marketing companies that I don't know [1197] they have some special angle or [1198] something. This is where you put the [1199] special angle. Are you scraping [1200] companies that have the term AI [1202] somewhere on their company page? Well, [1203] that's where you'd put it. Okay, this is [1204] like your little unique thing. Or you [1207] could also just be blunt and say, "I'm a [1211] freelancer [1213] who [1215] builds, I don't know, X [1219] systems that do [1221] Y. Why are there so many choices here?" [1224] Because human behavior is not fixed. I [1226] can't just tell you exactly what the [1228] perfect line is that'll work for your [1229] particular situation, right? So, I [1230] actually just recommend testing all of [1231] these approaches against each other. [1233] write 10 of these ID lines and then just [1236] pit them against each other. Okay, but [1237] now our email is starting to take shape, [1239] right? We have this which is like two [1240] lines and then we have another thing [1241] which is hopefully one line. And what [1243] you want to do next is you basically you [1245] need some sort of social proof. So you [1247] need some reason why the person should [1251] listen to you and actually believe what [1252] you have to say. Cuz like think about it [1254] from the customer psychology point of [1255] view, right? They see an email in their [1257] inbox. What's the very first thing [1258] they're trying to determine? Is this [1259] spam or is this a real person? That's [1262] what this solves, right? It's like, "Oh, [1264] okay. This is a real person. They've [1264] clearly done some reading and research." [1266] Click. Now, they read this and they're [1268] like, "Okay, what's the next question [1270] that comes to mind psychologically? [1271] Okay, so who is this person? Why is this [1273] relevant to me?" You've solve that. Now, [1276] what's the next question? Okay, but how [1278] do I know this person actually knows [1279] their Right? So, we're just [1281] proceeding logically, strategically down [1283] like what a human being looks for [1285] information-wise. And when you construct [1287] information in this way, people tend to [1289] respect you a lot more because you're [1291] showing that you respect them. You [1292] respect their time. You know that you're [1293] just some random dude in an inbox. [1294] You're constructing your outreach in [1296] such a way to minimize the amount of [1297] work they have to do to get to the point [1298] where they can make a decision. So now [1299] you have some social proof. So I work [1300] with blah blah blah. Usually the way [1302] that social proof works best is when you [1303] say last day, week, month. Like you you [1305] specify, you get super specific with [1307] when you deliver this thing. So last I [1310] don't know [1311] X I did [1314] Y for a Z company. Okay. So I basically [1319] delivered the exact same thing that I'm [1320] trying to do here. Last [1322] Tuesday, you know, I wrapped up a [1325] campaign that delivered [1327] $108,372 in revenue in just two months [1331] for another Sydney marketing company [1334] very similar to yours. [1337] And then you have your offer. Okay? [1341] Because now obviously what's the [1343] question? It's like, oh, okay. Well, [1344] this person's saying that they all [1345] stuff. So like now we're going to get a [1347] brass tax. So what do you want from me [1348] then? Right. Now it's like I'm really [1352] confident I can do the same for you or [1355] better usually is what I say. The same [1356] or better. It' be, you know, you can [1359] like fluff this up. It'd be the exact [1361] same approach and I'd copy and paste the [1363] playbook. Usually when I write stuff [1365] like this, people like it because [1366] they're like, "Okay, like this is [1367] they're just going to copy and paste [1368] what work for that [1369] company." And I'll copy [1373] paste the playbook. If you guys want to [1376] take this whole thing, you don't have to [1378] pause the video. This is in the link in [1379] the description, by the way. So, [1381] basically, I'm saying I'm confident I [1382] can do the same or better for you. It'd [1383] be the same approach. So, I'd copy and [1385] paste this playbook. If here's like the [1387] real risk reversal part. If you didn't [1390] make at [1392] least insert really cool thing here in Y [1398] time, I do it all for [1401] free. Although you should avoid the term [1403] free in emails. So that's why I say [1405] stuff like at least X in Y time you [1408] wouldn't [1409] pay. And I always say something like you [1411] wouldn't pay a dime, you wouldn't pay a [1413] scent or something. Okay. Then finally, [1415] now that you've sort of slapped your [1417]  on the table, um, or other parts [1420] depending on who you are, now you [1422] basically just do like a CTA. So you [1425] ask, and the ask is like, is this worth [1427] your [1428] time? Is this worth like 15 minutes [1432] later today? And if you get really [1435] specific with times, I can do [1439] 3:30 p.m. If you get really specific [1441] with times, people are a lot more likely [1443] to say yes. Just shoot me your number [1446] and I'll call on the dot. I don't [1448] actually usually recommend phone, but I [1450] just wanted to show you guys some some [1452] formats that you could do. Thanks, Nick. [1454] Okay, this is what I consider a pretty [1455] high converting email today, but you can [1458] actually go even further. Okay, we have [1461] all the parts here. The strategy. Okay. [1463] And the strategy is just like, you know, [1464] look at human psychology. What does a [1466] human being care about? Okay. What do [1469] they care about? And how do we deliver [1472] the information that they care about in [1473] the right sequence so that they can, you [1475] know, make the decision as quickly as [1476] possible. Here's like the higher level [1478] thing. You see how we personalize the [1479] icebreaker here? What you can do is you [1482] can actually use AI to personalize all [1483] of this stuff, too. Okay. So, [1486] hypothetically, let's say you have a [1487] bunch of case studies and those case [1489] studies are all for different types of [1490] companies. What you can do is you could [1492] feed in this lead and then have AI tell [1493] you what sort of case study you should [1496] pull to be as relevant as possible for [1497] this person. Okay, so maybe now your [1500] social proof is actually just social [1502] proof like a social proof [1504] variable. Okay, instead of this maybe [1507] your offer, okay, maybe you have [1510] different offers depending on what AI [1514] identified as the most likely issue that [1515] the company is struggling with based off [1517] of some social media stuff. Maybe that's [1518] a little 50/50, but I've been doing this [1521] stuff, exactly what I'm talking here, [1522] for the better part of four years. My [1523] business partner actually got me on to [1525] um using customized case studies based [1527] off of how relevant they are to the [1528] customer. That has been very [1529] interesting. Okay, you could use liquid [1531] syntax variables and instantly. If [1534] you're unfamiliar with what this looks [1535] like, you can actually [1538] mathematically determine what times to [1541] pitch based off of a variable. Okay, so [1544] you could create a variable called time [1546] age, equate that to now, fill that in [1550] with a date. Then if the current time is [1553] less than 1200, then insert the term [1555] morning. If it's after 1500, insert [1558] afternoon. If it's after both of these, [1561] then insert evening. You could adjust [1562] this logic pretty simply to offer [1564] specific days and times based off of [1566] your calendar availability or just what [1568] time it is, right? And like, sure, do [1570] you really care if this isn't perfect? [1571] Like what happens if you double book [1572] somebody? Oh, no. I have two meetings [1573] instead of one. Yeah, it's not ideal, [1574] but at least you're like actually [1575] booking, right? So, just get up and [1577] running. Break stuff. Head down to the [1578] description and feel free to like go [1580] through this Excala draw. You know, if I [1581] were you, I probably wouldn't like try [1582] rewriting it all. I just take a [1583] screenshot and then paste it into chat [1585] GBT with something like extract all this [1587] text. For the most part, it'll turn it [1589] into just a snippet that you can copy [1591] and paste. Sacha says, "I know you made [1592] a long ass video about make versus end, [1594] but which one do you prefer going [1595] forward, Nick, cuz t for me, I really [1597] love how looks." Well, that was kind of [1598] the point of the video. [1600] The whole point of the video is that [1601] like if you're at the start line to make [1603] a long story short, if you're at the [1604] start line of your business, you're [1605] going to want to use make, but if you [1607] know how automation works and you've [1608] been making some money off of it, so [1610] maybe 5 10 or 15,000 bucks a month, n [1612] certainly has more ability. Like the [1614] tool itself is it's more polished, uh [1617] has a lot of like built-in AI [1618] functionality. Like moving forward, N is [1620] the tool for sure, but it just depends [1622] on where you are in your journey. So, [1624] don't let this decision stop you from [1626] doing daily lead generation activities [1628] for make.com if you've already learned a [1630] lot of Make. And there you have it. I [1631] hope these answers helped clear up some [1632] of the questions you've been having [1633] about starting and scaling your AI [1634] automation business. If you guys enjoyed [1636] this format and you guys want more [1637] direct answers to your questions, as [1639] mentioned, I literally check every [1640] single comment on my daily updates [1641] channel. I've never skipped one yet, and [1642] I don't plan on doing that. Just head [1644] over to the second link in the [1645] description, subscribe there, and then [1646] drop your question below, and I promise [1648] I'll address them in upcoming videos. [1650] For those of you that are serious about [1651] accelerating your journey and you guys [1652] want to join a community of people [1654] actually making real money with AI and [1655] automation, check out Maker School. We [1657] got almost 3,000 members who typically [1658] get their first clients within just a [1659] few weeks of joining thanks to a 90-day [1661] accountability program. Also, hit that [1663] subscribe button if you haven't already, [1664] and I'll see you all in the next video [1666] or over on Daily Updates. bikes.

Video: https://www.youtube.com/watch?v=itA4M364nd8
Title: How Productizing My AI Services 10X'd My Revenue (Copy Me)
[0] Today I'm going to show you the exact [1] productization framework that allowed me [2] to double my AI automation agency [4] revenue while also cutting my workload [6] by 80%. This is a tested system that [8] transforms custom and very [10] time-intensive AI services into [12] streamlined and much more scalable [14] offerings that I like to think [15] practically sell themselves. If you're [17] new here, I'm Nick. I scaled my own AI [18] and automation agency to 72K per month. [21] In using this exact framework, I've also [22] helped thousands of people in Maker [24] School, my day-by-day AI automation [25] agency accountability roadmap, transform [28] their chaotic custom services into [30] productized machines that generate [32] consistent income without also requiring [34] you scaling your attention. Without [36] further ado, let's dive in. So, [38] productization may seem kind of [39] intimidating, a lot of syllables, big [41] scary word, but it's really not. All [43] productization is is it's basically [44] where you transform a custom [47] timeintensive AI service like a custom [50] CRM build or a custom lead genen system [52] build or hell one of the million custom [55] builds you guys have probably already [56] done into a standardized repeatable [58] offering by giving it clear deliverables [61] fixed pricing and then a defined scope. [63] Okay, that is the definition that we're [65] going to be rolling with. I'm going to [67] show you exactly how to do it in a few [69] moments. We're actually going to take an [70] example system and I'm going to walk you [71] through the whole process. Now the [72] fundamental shift in productization [74] happens when you move from this I'll [76] build whatever automation you need where [78] you're basically like an AI automation [80] service provider as like an identity [82] like that's almost your product into hey [85] here are three specific AI service [87] packages with exact deliverables and [89] timelines and then if the customer needs [91] changes or they want minor alterations [93] to the system what you do is you take [95] that thing that package they just make [97] some minor adjustments to it okay you [99] don't actually start from scratch what [101] you do is instead of going from zero to [104] 100% every single time you start a [106] system. No, no, no. We start at [111] 80%. And then we go to 100%. If you [114] think about it, this is a distance of [116] 20. This is a distance of 100. [118] Therefore, our productized approach is [120] about five times the leverage. So, why [123] do productization? It eliminates what I [125] call the three silent killers in AI [127] service. The first is scope creep, which [129] is where clients continuously add [131] requirements to a fixedpric project. Uh [133] for those of you that don't know, [134] there's kind of two major ways to price. [135] There's hourly, where you charge based [137] off of the hour time that it takes for [139] you to do the work. And then the other [140] is fixed price where you basically just [142] give them a price. Usually guarantee [144] project delivery within a time frame at [146] that price and then the client either [148] pays you a deposit or do some sort of [150] milestone trunch system. But when you do [152] a fixed price system, which is where all [153] the money is, a big issue is scopes tend [155] to creep. Customers want additional [157] things added. Hey, do you mind adding [158] this? Hey, do you mind adjusting this? [160] Hey, I changed my mind about this. Could [161] we redo this? Now, clients continuously [164] adding requirements obviously means more [165] work for you. And this is a major [167] problem that a lot of people have that [168] productization solves. Another big issue [170] is variable delivery times. Like, let's [172] be real, we are dealing with a technical [174] service here. As untenical or [176] non-technical as I try to make it out to [177] be, obviously AI and automation, you [179] know, these are technical things. And [180] with technical things, you can't always [182] be 100% sure that the custom service [184] that you're going to deliver is going to [185] work out the way you envision it. APIs [187] aren't going to work. You'll have weird [189] bugs and one-off errors. They're always [190] just some sort of bumps in the road that [193] you might not be anticipating. And [195] finally, inconsistent pricing. Like [196] pricing is one of the biggest issues [198] that I've come across in my time in AI [200] and automation as well as coaching and [201] helping other people do it. You know, [203] there's a lot to be said about pricing, [204] and I've talked about it for many, many [206] hours on several other videos, which [208] I'll make sure to link right around now. [209] But to make a long story short, rather [211] than having to price every single time [213] you get a new deal, which is a fixed [215] cost to you in terms of your time and [217] energy that you have to do every single [218] time you have an opportunity, [220] productization just allows you to do it [221] all automatically. So, how do I think [223] about productization? Productization is [226] almost like automating automation. It's [229] almost like meta automation, okay? It's [231] automating automation as a service. And [235] what you're doing is you're taking [237] automation as a service and you're [239] almost moving it down here to automation [241] as a product [243] instead. And when automation is a [245] product, then you can do the same things [247] that most people do with products. They [249] scale them up. They optimize them. They [251] iterate them. And then ultimately they [252] make them better over time. So here's [254] what not to do. Most AI service [256] providers operate reactively. They take [257] whatever requests come in and then they [259] create custom solutions each time. That [260] just means they're essentially [261] rebuilding the same system repeatedly [263] with minor variations. Instead, when you [265] productize correctly, you will get to [267] maintain the appearance of providing [268] customized services, but you're actually [270] going to deliver very standardized [272] solutions because you're focusing on [273] outcomes rather than the implementation. [274] If that sounds like witchcraft to you, [276] stay tuned. I'm going to explain it all [277] in a second. So, some personal tips just [280] right off the bat. Use client language [282] in your package descriptions. Do not use [283] technical jargon. Start by productizing [286] your most commonly requested services [288] first. Include specific metrics or [291] outcomes clients will achieve. Then [293] finally, bundle services that naturally [295] complement each other. Let me give you [296] an example of productization. A lot of [298] people in automation or other industries [301] sell a lead genen services. And so this [304] is where we'll start. Okay? Throughout [307] the rest of this video, we're going to [307] be productizing this. And then this is [309] where we're going to end. instead of a [311] lead genen services which is vague and [312] variable pricing and it leaves so much [314] open to interpretation. Instead, what [316] we're going to do is we're going to [317] build a retainer service with full [319] campaign setup, copywriting, around the [320] clock management and appointment setting [322] that includes 10,000 high-quality leads [324] scraped per month, one 45minute weekly [326] strategy session, daily Slack Q&A [328] availability and team training Monday to [330] Friday 12 till 2, then a monthly report [331] on leads generated meetings booked [333] outcomes and actionables for [335] $3,770 per month. This is sort of the [338] dividing line between a service and a [341] product. And when you sell a service [344] provider mentality over here versus like [347] a product creator mentality over here, [350] when you transition from this to this um [352] this is how you this is how you scale [354] explosively. And this is what basically [355] any major service business that does [357] over maybe 20 or $30,000 a month um um [360] has to do. Okay? And the reason why is [362] because think about this. This is your [364] return. return just means like I don't [366] know money or or whatever. And then this [368] is time the service that you're selling [370] right now. Odds are if you're doing a [371] custom service like most people are and [372] and that's okay. I recommend doing a [373] custom service if like you're just [375] getting the ball rolling on an [376] automation agency. If you're a total [377] beginner, selling a custom service is [378] really easy and it's it's fine to do for [381] your first couple of gigs. Don't like [382] let that stop you from getting started. [383] Okay? Cuz that's the real issue here, [385] like not getting started. But if you're [387] selling a custom service, typically what [389] ends up happening is you put in one unit [392] of work here and you get one unit of [395] return here. Then you put in another [397] unit, another another, another another. [399] And so what I'm trying to say is there's [400] like a one to one relationship between [402] the amount of time that you spend and [403] then the return that you get. Now this [405] is fine because you know if the slope of [407] this line is like really really really [408] crazy like this, then that's all right. [410] But here's what productization allows [412] you to do. Instead of having to do this [413] sort of super linear flow, what we can [416] do instead, and I'm just going to put [418] our productized solution here in blue. [420] Oh, nope. I'm going to put it in blue [423] for Christ sake. Okay. Nope. I guess I'm [424] drawing my own line. What we do is we [428] put time in initially to do the [430] productization and we get very little [432] return. And then what ends up happening? [434] Well, right after we productize, our [437] revenue, our return scales significantly [439] better per unit time. And so initially [442] there there's kind of going to be this [443] difference here where just getting up [445] and running with custom services is [446] going to make more money than [447] productizing but very shortly I mean [450] this might be I don't know like 2 weeks [451] or something very shortly after product [454] dies is going to make way more money [455] over the long term and that gap is just [457] going to continue to grow on and on and [459] on as your agency gets bigger and bigger [461] and better. So hopefully now I've sold [463] you on why to product dies. Let's now [464] chat a little bit about how to actually [466] go about doing the productization. Okay, [469] this is more or less the process. You [471] identify your most common service [473] requests. You define the deliverables. [475] You set fixed pricing tiers and then you [477] create a standardized process with scope [478] boundaries before systematizing [480] delivery. Once you're done with that, [481] you basically have a money printer, [482] assuming that obviously you can take [483] care of the client um acquisition side [485] of things, which is very big. And this [486] is what we're going to be talking about [487] for the rest of the video. Okay, so let [489] me share with you guys a quick story. [491] before I productized and I productized [493] pretty early, God bless, but my AI [495] business was plagued by this custom trap [498] where, you know, I'd hunt and I was very [500] good at it. I'd hunt for clients and I'd [502] try and acquire clients, put a lot of [504] effort towards it and it was successful. [506] But I found that, you know, while my [507] revenue would spike quickly, it would [509] also then quickly level off because the [511] distance between here to here was me [513] getting a client, but then, you know, [514] basically between here to here, what I [516] what was I doing was fulfilling that [517] client. And so fulfillment ended up [520] being the main bottleneck. Most people [522] as lead genen, I solved lead genen, [523] ended up being fulfillment. And the [525] reason why is because I was creating [526] these bespoke solutions. Bespoke just [528] means custom. Because of that, you know, [530] every time I take on a new job, the [532] amount of work that I have to do is kind [533] of non-standard. Sometimes it actually [534] takes way longer. Other times it's way [535] shorter. And because I was [536] unstandardized, I spent about 70% of my [538] time on non-revenue generating [540] activities. This was bunch of discovery [541] calls, scope revisions, custom proposals [544] that were basically educated guesses. [546] And then client expectations were also [547] constantly out of alignment because [549] every project that I did with people was [551] treated as a totally unique project and [552] then you know there was obviously like a [554] big revision cycle where I would do [556] something and then they would have to [557] Q&A it and then you know I would just go [560] over and over and over and over and over [562] again. What that meant is successful [564] projects couldn't easily be replicated [565] because every solution was super custom. [567] That hurt my ability to leverage past [569] work for future clients which is a great [571] benefit of productization. Then my [572] margins were also unpredictable. [573] Sometimes I made like 80% on a deal and [576] that's awesome. I gave 80% gross profit. [578] Hell yeah. But actually I had a couple [579] of situations where, you know, the scope [582] creeps so much and I was doing so much [583] work that I actually lost money on [585] deals. Okay? And that's not even taking [587] into account the amount of money it took [588] me to acquire them in the first place. [590] So rather than swinging back and forth [593] between this super crazy, you know, [595] upswing and then that super crazy [596] downswing, I decided to productize. And [599] so if you're in this situation, I [601] recommend it. If you can't confidently [602] state how long it's going to take to do [603] something, you should productize. If you [605] work weekends to complete projects cuz [606] sometimes they go over, not every [607] weekend, but some weekends, you should [609] productize. If pricing is basically [610] guesswork for you, just throwing stuff [612] at the wall, you should productize. And [613] if you find yourself recreating similar [615] solutions with minor variations, you [616] should definitely productize. This is [618] like the custom approach, which [620] everybody is doing, where they receive [621] an inquiry, create a custom proposal, [622] negotiate the scope and price, begin [624] development, then there's scope changes. [626] Usually there's some sort of scope creep [628] and then you just continuously go [630] through the cycle over and over and over [632] and over again until your hair turns [634] much grayer than mine. So how do we [636] solve this? Here is a productization [638] framework for AI services. What I want [640] to do is I want to take this lead genen [641] idea that I shared with you guys [643] initially. You know I do a lead genen [645] and I just want to convert it into uh [647] that sort of productized package that we [650] saw earlier. And you know, I'm doing [652] this in kind of like a hopefully you [654] guys could tell the production value of [655] this video is not super crazy. I'm doing [656] this as sort of like a brainstormy way [658] because I think that there's actually [659] like five or six different ways to [660] productize your service. And I'm not [662] going to make a video going over each. [663] But I I just wanted to narrate my [664] thoughts out loud while I do this. [666] Hopefully that'll give you guys some [667] insight. Like I don't just want to tell [668] you stuff. I'd rather also show you cuz [670] I think that's just as instructive if [671] not more. So yeah, how do we actually do [673] it? So we start by deconstructing your [675] deliverables into specific tasks. What [677] we do is we break the big promises. I'm [679] going to generate leads for your [680] business. I'm going to make you money [681] into some sort of actionable component [682] that can be systematically executed. [684] This sounds scary, but let's run through [686] it. Okay, another thing I'll mention is [687] we should approach this step by working [689] backwards from each deliverable. We [690] shouldn't actually work forwards. And [692] then what we should do is we should [694] identify discrete tasks alongside that. [696] So let's actually run through what this [697] looks like. If my you know service over [699] here is lead [704] genen, what are the [706] deliverables that come from lead genen? [710] Now, to be clear here, a deliverable is [712] something the client sees. It's [713] something the client touches. It's [714] something the client can interact with. [715] Obviously, we're on the internet, so [717] seeing and touching and feeling, these [718] are um sort of approximations of the [721] truth, but you know, there there's [723] something tangible. Okay, lead genen is [726] pretty intangible. But you know what's [727] tangible? Leads. Leads are tangible as [730] hell. But what is a lead really? Like to [733] a client, what is a lead? If you think [735] about it from I mean the client [737] perspective. When you generate a lead [738] for a client, how are you notifying them [741] of the lead? Let me give you some [742] examples here. An [745] email is the deliverable upon which your [748] lead is packaged. So that's one example [750] of a deliverable. Maybe every time that [752] you generate a lead for your client, you [754] send them a quick little email saying, [756] "Hey Pete, new lead uh generated. This [758] person is super interested in your [760] service. Here's a quick breakdown or [761] description of of whatever that is." [763] Actually, if you think about it, this is [764] the service. This is the kind of like [767] more deliverable version and then this [769] is like the hyperd deliverable version, [771] the thing they actually see in touch. [772] Um, what's another thing? Maybe like a [774] Slack notification, right? A lot of [776] people use Slack here. Maybe we use [777] Microsoft Teams, Discord, whatever. This [778] is just like some service. What else? [781] This is like a meeting in your calendar. [785] These are all like basically, how do we [788] say instantiations of the idea of you [791] generating leads. And this is all, [793] believe it or not, that the customer is [795] going to judge you on. The customer [796] isn't going to judge you based off your [798] lead gen. They're going to judge you [800] based off how many emails with new lead [801] notifications they got in 60 days. [803] They're going to judge you based off how [804] many Slack notifications they got with [806] new leads in 60 days. They're going to [807] judge you based off the number of [808] meetings in their calendar. and then [810] subsequently you know actually like the [812] calls that they actually have with like [814] physical real people. So this is what [816] like the actual lead generation side of [818] things includes. Okay. And I guess [820] there's one more thing that I'll mention [822] over here. There sort of like reporting. [824] In addition, you also have things like [826] the configuration of a workspace or [829] something. Basically you have some sort [830] of like asset config. So what does asset [833] config actually look like? Well, in [835] order to do cold email a lot of the time [837] you have to set up on a platform like [838] instantly. If you guys don't know what [839] Instantly is, check out the um affiliate [841] link in my description. I will love you [842] long time. Basically, this is a cold [844] email service that allows you to spin up [846] multiple mailboxes and and and get going [848] with it. Okay, there's value to the [850] client in having a nicely, beautifully [851] configured instantly workspace because [853] that's an asset that they can click [854] through and then go into okay, how about [857] something like a CRM? That stands for [859] customer relationship management system. [860] This is again something that they see on [862] the page that they go into. [864] Okay, if you think about it from this, [865] you know, this one service, lead genen, [867] has actually led to, I mean, gez, more [869] than a half dozen products here. We have [871] emails, Slack notifications, meetings in [873] a calendar, we have actual calls, we [875] have reporting, we have CRM, we have an [877] instantly configuration. How about like [879] uh I don't know, some sort of like [880] meeting [882] recorder. Okay, these are all just [884] various assets that you can configure to [886] add additional levels to your product. [889] And so that's what we've what we've done [890] here. We basically taken this service [892] and we've converted it into actionable [894] things that clients actually see, not [896] just stuff that's important to us. And [898] this is what you need to do if you want [900] to convert your service into a product. [902] So now once we have these, what we do is [904] we go through all of the services, the [907] lead genen services that we've delivered [908] to clients before. And you know, if [910] you're at the point where you're [911] considering productizing, odds are you [913] probably done this for two or three [914] clients. So you have some experience. [915] And what you do is you just go through [917] each of these. And you'll notice is that [919] 80% of the time from one client to the [921] next, these are actually very similar. [923] Well, now you have all of the things, [925] all of the deliverables basically that [927] you're forced to deliver from client to [930] client. And then once you have this [931] list, what you can do is you can just [932] start creating assets that you can copy [934] and paste from one client to another. [936] This is sort of the templated aspect of [937] productization. Okay, so this is sort of [940] the end result here. And if we just, you [941] know, go top to bottom, let's just write [943] this. We have an email notification. [946] Then we had some sort of Slack [949] notification. Then we had I'm already [951] forgetting this. We had uh calendar [954] event. These are all the deliverables [956] that the client can see or touch. Then [957] we have the um actual calls like aka the [960] meetings. Then we have the reporting. I [962] should say reporting here, but why don't [964] we make it uh very very concrete? Why [965] don't we do like a Looker Studio report? [968] That's just a database visualization um [971] service. Okay. Why don't we do some sort [973] of CRM? Why don't we make it really [974] concrete? We'll go ClickUp setup. Maybe [976] this is where we store the leads after [978] we've notified them. Then we have [980] instantly set [983] up. And then on top of that, we also [986] have some sort of like meeting recorder [987] setup. These are all things that I [989] actually include in my own lead genen [991] service, by the way. That's why I'm [992] rattling these all off. All right. Okay. [994] So now what we have is we have the [997] deliverables and now what we do is we [999] work backwards from there. So we start [1001] with the email notice kind of at the end [1002] here. What we do is we work backwards. [1004] You say, "Hey, for the email notif, how [1006] do we actually set up a system that [1007] delivers an email notif?" Well, if you [1009] think about it, in order to set up a [1010] system that delivers an email notif, you [1012] might have some sort of, I don't know, [1014] make.com [1015] automation that [1018] you enter a [1021] lead outline into and it creates some [1025] sort of nicely formatted email. For the [1027] Slack notifications, maybe you have some [1029] sort of make.com automation template. [1031] for the cal event maybe I don't know you [1033] configure cal.com or whatever service to [1037] like format the cal [1040] events for the calls where are they [1042] actually going to be having the calls [1044] where they're going to be having them I [1045] don't know let's see zoom okay how do [1046] you set up a looker studio dashboard [1048] well if you think about it you got to [1049] duplicate the [1051] template all right well the template's [1053] one thing how do we get the template [1054] well I don't know we have to build at [1057] least once um some sort of dashboard [1060] okay how about click up well we have to [1061] duplicate the template as well and then [1063] over here we have to like build our [1065] CRM how about instantly you know maybe [1068] we I don't know we follow some SOP SOP [1072] means standard operating procedures just [1074] a list of steps a checklist basically [1076] and then maybe the same thing for the [1077] meeting setup so we've done now is we've [1079] taken the deliverables which the client [1080] cares about that we want to maximize the [1083] quality of and we've turned them into [1084] tasks which at the end of the day we [1086] need to do in order to fulfill our end [1088] of the deliverables now we I haven't [1090] quantified any of this stuff, but [1092] obviously quantification is an important [1093] part of the process. All I'm trying to [1095] do here is just conceptually show you [1096] guys how to think about productization [1098] from sort of like from an end to [1100] beginning approach. Once we have all of [1102] these things, what we do is we start [1104] creating reusable components for each of [1106] these. So common automation functions, [1109] well, what's an example of a common [1110] automation function? Some sort of [1111] automation template that immediately [1113] instantiates notifications in email and [1116] then Slack. Okay, that's a very good [1118] example of it. you can start adding your [1119] own formatting. And the cool thing is [1121] now it's like formatting that's [1123] companywide. It's always the same thing. [1125] Your formatting looks really pretty. So [1126] every time you deliver a project, you [1128] can just make that formatting 1% better [1130] today. Or maybe you have some sort of [1133] report standardization or something like [1135] that. Well, your reports the first time [1136] you deliver to a class probably not [1137] going to be perfect, but then the next [1138] time you're going to make it a little [1139] bit better, and they're going to make a [1140] little bit better. So now your entire [1142] product is getting better over time. And [1143] the only way you can get something [1144] better is if you first standardize it. [1147] After that, you build some sort of [1149] testing protocol for all [1150] implementations. This is super simple. [1152] In reality, this is just like an SOP [1154] for, I don't know, end to-end testing of [1156] the automation before you're done [1157] implementing it. You develop some sort [1160] of transition templates for moving [1161] between service modules. Now, you know, [1163] we don't just have to use ClickUp here. [1165] We could also, I don't know, use [1166] monday.com or something like that. And [1169] so when you develop your core standard [1172] product, once again you've standardized [1174] things, you can start adding extensions [1176] and and package uh plugins and so on and [1179] so forth. So maybe this is hot [1181] swappable, which allows you to maybe [1183] apply not only to monday.com or ClickUp [1186] jobs, but also monday.com jobs. It [1188] allows you when you're pitching people [1189] to say CRM, hey, what kind of CRM are [1191] you using? When they say ClickUp, then [1192] you say one thing. When they say Monday, [1194] you say another thing. This is basically [1195] a systematized approach to an AI and [1199] automation agency. And you know, you [1200] don't need to do this stuff right away [1202] for sure. Like you're much better served [1204] just getting up and running and selling [1205] stuff. If you haven't gotten your first [1207] customer before implementing the steps [1208] in this video, definitely like get [1210] customer number one and then come back [1211] to this after. But if you can get in the [1213] habit of being systematic with your [1214] business, you'll be much much better [1215] off. Okay, cool. So, next up, now that [1218] we've done all that, now that we have [1219] that giant list, which I'm just going to [1221] copy over here for [1224] simplicity, now the question is, okay, [1227] great. How about if we wanted to scale [1228] our agency? Cuz it's fine if you do this [1230] thing over and over and over again, but [1231] in reality, like, you're not building an [1233] agency for the most part just because [1234] you want to buy yourself a job. You're [1236] building yourself an agency because you [1238] want it to be immense leverage and you [1239] want to like free up some of your time [1240] or something. So this is where you start [1242] getting into the mindset of not like the [1244] person doing the work, but the person [1245] that's managing and organizing the work. [1248] So after you have your giant list, what [1250] you have to do is you have to take all [1253] of these tasks over [1256] here and these ones as well. And you [1259] just have to group them by roll. The [1262] idea is at this point we're now going to [1264] be handing off these tasks to somebody [1267] to fulfill for us. And that's kind of [1269] this next step. So, we're going to focus [1271] on strategically grouping tasks by role [1273] or function. This is critical for [1274] efficiently allocating resources and [1276] also scaling without hiring an army of [1278] people that can only do one thing. What [1280] do I mean by this? Well, like do you [1281] really want to hire a make.com [1283] automation template builder that only [1285] knows how to make email notifications? [1287] No, obviously not. You want to hire like [1288] a make.com person that can just do any [1290] of your notifications, right? Likewise, [1292] do you want to hire, I don't know, let's [1294] say hypothetically the service actually [1295] involves you managing the calls and like [1297] jumping on the calls and qualifying and [1298] I don't know, maybe setting or maybe [1299] even closing. Like you're going to hire [1301] a salesperson for that, right? Why? [1302] Because this is just a logical grouping [1304] of all the activities that sales people [1305] tend to be good at. A salesperson tends [1307] to be good at talking to people. People [1308] that are good at talking to people also [1310] tend to be good at convincing people. [1311] The skills are all correlated, I [1312] suppose. So, what do we do then? We [1314] group things. Now, in my case, I was [1316] mixing a lot of technical and then [1317] creative tasks. And I wasn't just doing [1319] this at left click, by the way. Taking a [1320] lot of inspiration from the [1322] productization of 1second copy which is [1323] my company before this. This caused a [1325] lot of context switching. It involved [1327] like massive productivity impacts and [1329] decreases. Well, what we ended up doing [1331] I should say my partner and I is we [1333] grouped together common tasks. Instead [1336] of breaking things down by let's say [1338] like writer and editor or whatever, we [1341] had combined full stack writers. We [1343] found that full stack writers were [1344] significantly more economical for the [1346] most part for some types of content. [1348] Then we also found that having low cost [1350] of living country writers like people [1352] from the Philippines or let's say [1353] Bangladesh to do the rough drafting side [1356] along with AI allowed us to arbitrage [1358] that cost of living difference and then [1359] make multiples on selling that content [1362] to people in maybe more affluent regions [1365] and then we hired people from more [1367] affluent regions to just do like a once [1369] over and sort of Q&A. So now we're not [1371] paying a person from a more affluent [1372] region for the entire project. What [1374] we're doing is we're paying a person [1375] from a more affluent region for like 5% [1377] of the project. Then we're paying people [1378] from very low cost of living countries [1380] 95% of the project and we're having them [1382] use AI to do a lot of like the [1383] preliminary editing and stuff. This is [1385] all examples of process optimization. I [1387] did this in the writing company. [1389] Obviously I did this in automation as [1390] well. But basically I guess the point [1392] I'm making is like you know let's say [1394] instead of all this your service is ads. [1398] There is creative, which is the images, [1400] and then there's copy, which is the [1402] writing. You know, better to have people [1404] that are really good at creative do [1406] creative stuff. Better to have people [1407] that are really good at copy do copy [1408] stuff. This isn't always necessarily [1410] true. I've actually done this exact [1413] system for advertising where I had a [1414] combined creative and copywriter. But [1416] just wanting to let everybody know here [1418] that people just tend to be good at [1419] different specific things, right? [1421] Copywriters tend to be better at words. [1423] Creative people tend to be better at [1424] designs and so on and so forth. Okay, [1426] cool. And yeah, you know, I'm not saying [1427] you need to hire people here. I'm just [1428] trying to give you guys an example. [1429] Anyway, in a nutshell, what you're doing [1431] is you're establishing a production line [1433] approach with standardized handoffs. You [1435] know, like Henry Ford and the whole like [1437] assembly line thing. When I learned [1439] about this, if you guys haven't, just [1440] Google it. When I learned about Henry [1442] Ford and how him introducing the [1444] assembly line was like revolutionary in [1446] business, I like kind of scoffed as a [1448] kid. I was just like, really? That's the [1449] big discovery? An assembly line? Wow. So [1452] revolutionary, right? Jeez. I got to be [1455] honest, this stuff really is [1456] revolutionary. It is revolutionary to [1459] take the magic out of a process and then [1462] turn it into concrete, hard, [1464] step-by-step, deliverable tasks, that is [1467] incredible. And the second that you [1469] start doing that, like Henry Ford did [1470] with this artistic vision of creating an [1472] automobile and turning it into something [1474] that's sequenced and standardized and [1475] repeatable, obviously he started [1477] printing freaking money hot off the [1479] press, so you can take advantage of that [1480] as well. Okay, now let's learn how to [1482] calculate costs. We've gone through this [1484] process starting from the generalized [1486] service that just said leads and then we [1488] turned that into a more concrete list of [1490] deliverables aka things that the client [1491] is going to be playing with. We then [1492] turn that into a bunch of tasks and then [1495] we considered grouping it based off of [1497] RO. What we do now is we calculate the [1499] cost of our product. The reason why we [1501] calculate the cost of our product is [1502] because when you start with the cost of [1505] your product in mind, you basically get [1507] to make your margins whatever the hell [1508] you want. Like for instance, if I know [1510] that the cost of my product is $1,000 [1512] for me to make, what I can do is I could [1513] just sell that for $10,000 and then I [1515] could make 90% on gross and that would [1517] be incredible and that would be a highly [1518] scalable business. The question [1520] obviously is can you get people to buy [1522] the product that you are internally [1523] spending $1,000 on that they have to [1525] spend $10,000 on. But I mean like have [1527] you guys ever bought a mattress before? [1529] I mean mattresses are products, right? [1530] There are products that have certain [1532] things that go into them. But I mean [1533] like a a $1,500 mattress like I just [1535] bought one for my new apartment is [1537] realistically like $500ish dollars to [1539] prepare. That's like 66% 70% margin on [1542] that mattress. What you're doing is you [1544] are in essence taking all of these tasks [1546] and you're figuring out what is the cost [1547] of goods or cost of services that need [1549] to go into that so that later on you can [1552] charge those big ticket, you know, big [1553] sticker prices of $1,500 for a mattress. [1555] What I've actually done is I've created [1557] an example here um for productizing a PR [1559] service. Okay, so I'll walk you guys [1562] through that example in a second, but [1563] anyway, before I productized, um, I was [1565] basically just guessing at my cost for [1566] every project, which led to wildly [1568] inconsistent profit margins. As I [1569] mentioned, sometimes I'd have 80% and [1571] then other times I had a negative 20%. I [1573] tried to stay away from losing money, [1575] but sometimes in business, you have to [1576] take a risk, and that involves you [1577] losing a little bit of money. Now, for [1579] AS services specifically, the technical [1581] side consumed about 40% of the project [1582] time. My documentation, I had a special [1584] documentation procedure where I recorded [1586] a Loom video at the end of every deal. [1588] Um, I walked people through how their [1589] system worked and stuff like that and I [1590] found that they just really loved it. So [1592] I spent about a quarter of my time on [1593] that. I spent about 20% on client comms [1596] and then you know quality assurance and [1597] stuff like that was about [1599] 15%. Now the most valuable outcome was [1602] always my ability to confidently set [1603] profit margins based on actual data. And [1606] that's what I'm going to talk about [1607] here. Like my ability to set my profit [1609] margins and just say hey I'm going to [1611] make 90% on this deal is one of the [1613] reasons why I think I was able to grow [1615] two agencies as successfully as I have [1616] today. One of the reasons why profit's [1618] so good is because the second that you [1620] fix your margins, you can start knowing [1622] how much money you have to invest. I [1624] know it sounds kind of silly and it [1625] sounds kind of trit. Obviously, if [1626] you're making $10,000 a month at 90% [1628] margins, you know you're making $9,000. [1630] But you'd be very surprised at how many [1631] people that I ask on a day-to-day basis, [1633] hey, what are your margins over over the [1635] last 30 days? And it just takes some [1637] like 15 minutes to answer. Ideally, you [1639] would know all this stuff right off the [1640] top of your head. And I knew my margins [1642] down to the percentage point. So I'd [1644] recommend that anybody that wants to do [1645] this sort of thing do the same. Okay. [1647] Anyway, so how do you actually [1648] productize let's say a PR service? So PR [1650] stands for public relations. Public [1651] relations people in a nutshell if you [1653] are unaware basically take their clients [1655] and then they list them in popular [1657] magazines and in popular newsletters and [1659] journals. So if you were to take me and [1662] then I were to work with a PR person, [1663] maybe I'd say, "Hey PR person, I'd love [1665] it if you could get me on Forbes or [1666] something like that or maybe make me a [1668] Wikipedia article." The PR person's job [1670] is now to take that request and then [1672] turn that into, as you can expect, a [1674] bunch of deliverables. Take those [1675] deliverables, turn those into tasks, [1677] take those tasks, turn those into roles, [1679] and then assign them to the relevant [1680] people in their company to go and [1682] actually do the thing. And how do they [1683] typically do it? Well, it's actually a [1684] lot simpler than you think. I used to [1686] own a quarter of a PR company and uh in [1688] a nutshell, you just send a bunch of [1689] emails to people and you typically have [1690] a network of journalists that are at [1692] various things and you say, "Hey, here's [1693] a really interesting guy, Nick. He's got [1695] cool hair and a super handsome smile. [1698] you know, I want to rank him on [1699] Wikipedia, you know, can we do this? And [1700] if I'm interesting enough, then [1702] obviously they'll do it pretty easily. [1704] Okay, so now that you know how that is, [1705] let's actually go through the process of [1706] productizing this. So instead of just, [1708] hey, I'm going to offer you PR, what [1710] we're going to do is we're going to turn [1710] this into a very quantifiable list of [1712] things that they're going to get and [1714] then we're also going to turn it into a [1715] cost. We're going to get that cost [1717] that's going to be internal and then [1718] we're going to turn it around, fix a [1720] margin, and then make it our external [1721] cost. All of that sounds like jargon to [1723] you, don't worry. Let's say we start [1725] with the end result. How many earned [1726] media spots do we actually want to give [1727] clients per month? Let's say five. Let's [1729] split into some packages. There'll be [1730] five, there'll be 15, maybe there'll be [1731] 25. So, the very first thing we have to [1733] do is we have to identify the conversion [1734] rate on emails. So, you know, as I [1736] mentioned, this is basically just a cold [1737] email campaign. So, if it's a cold email [1738] campaign, what is the typical conversion [1740] rate? If I email a,000 journalists, how [1742] many of them are actually going to [1743] respond with some sort of positive [1744] thing? Well, let's say 0.5% to be [1747] conservative. So, if we want five media [1749] spots, what do we have to do? Well, we [1750] have to send a,000 emails times.5% to [1752] get five spots. So logically what [1755] follows is let's just calculate the [1756] cost. What do we need in order to email [1758] a thousand journalists per month? Well, [1760] we need an email platform of some kind. [1762] We need a lead source of some kind and [1763] we need a system to scrape them. So 100 [1765] bucks plus 100 bucks plus 100 bucks is [1767] how much? $300 a month for [1770] software. Now I should note that these [1772] are collective software costs. You don't [1774] always have to like pay for new software [1775] costs for new clients. So I'm not going [1777] to include this in the end cost, but I [1778] just wanted to start chatting numbers [1779] here. You know, there are a lot of [1781] software subscriptions that you can use [1782] to fulfill a service that you can just [1783] bundle on with a bunch of other people. [1785] And those ones are actually really good. [1786] Anyway, we're already spending 300 bucks [1787] a month for software, but how about the [1789] actual tasks that are involved? Well, [1791] let's say you need somebody to set up a [1792] campaign. Then you need somebody to [1793] write the campaign. Then you need [1794] somebody to manage response to the [1795] campaign on an ongoing basis. So, what's [1797] this role that I'm grouping them under? [1799] PR specialist. This is a real role. [1801] People actually do this on a daily [1803] basis. I employed many of them. How much [1805] time and money would it cost for a PR [1806] specialist to do this? Well, I search up [1808] some publicly available data. Shows this [1810] role about 30 bucks an hour. If it takes [1812] 5 hours to start building that list, [1814] that sort of initial section, that's 30 [1816] bucks times 5 hours is 150 bucks. Then [1819] if it takes half an hour a day to manage [1820] the responses, 20 days per month, that's [1822] 30 bucks an hour times 0.5, half an hour [1826] a day times 20 days per month, 300 [1829] bucks. That means that our total cost to [1831] deliver on a fixed basis is 150 plus [1834] 300, $450 a month. Then we also have a [1837] $300 a month software cost. The reason [1839] I'm adding the software cost in brackets [1841] here is because the software cost is not [1842] variable. Okay? You know, one client [1845] means that we're going to pay 450 a [1848] month. 10 [1851] clients means we're going to pay 4500 a [1854] month. But notice how the software cost [1856] is the same in both cases. You know, [1858] hypothetically, I mean, yeah, I guess it [1860] depends on what service you're using. [1861] The point I'm making is this one is u [1862] this one's variable. This one scales, [1864] and then this one is flat. This one's [1865] just always the same. Okay. Anyway, [1867] let's now say I fix my desired profit [1869] margins at 80%. I want to make 80% on [1872] deals because I think 80%'s healthy and [1874] I like the idea of making, you know, 80% [1876] on all of the money. So, mathematically, [1878] what is that? That's 450 divided by 1 [1882] minus 0.8. That's the math. So, this is [1884] 0.2. And 450 divided by 0.2 is basically [1887] just 450 * 5, which is equal to 2,250 a [1890] month. What does that mean? We have now [1892] basically like [1894] mathematically priced. We're not just [1896] pulling numbers out of our ass anymore. [1898] We're not just doing our perception of [1900] valuebased pricing. We're actually [1901] mathematically pricing our product. And [1904] now, you know, this is $2,250 a month [1906] for, I don't know, your five package. [1909] What you can do is you could do [1911] 2.25K for five spots. You know, you're [1915] going to have 80% there. And what do you [1917] do for 15 spots? We just multiply the [1920] internal cost by three approximately, [1922] right? So, you know that this internal [1923] cost of 450 a month is going to be 1,350 [1927] a month. 1,350 a month times 5 is 6,750 [1931] a month. So, you know, I guess we just [1933] multiply that by three now I'm thinking [1934] about [1935] it. So, now you get into the part where, [1937] you know, you charge 6.75k for 15 spots. [1940] And now maybe you can do something like [1941] now that you've, you know, built out [1942] this table, you can offer some sort of [1944] 10% discount for people that go to the [1947] 15 spot as opposed to just the five. And [1950] you can actually make this a little bit [1952] more cost effective. Now it's 605k, [1955] right? And now you're kind of upselling [1956] this. You're saying, "Hey, this is [1957] actually like more cost efficient." If [1959] all you care about is how many spots you [1960] get per dollar or how many dollars you [1963] get per spots or whatever the heck, this [1964] is the more optimal one for you. All [1966] right. Hopefully I'm running you guys [1967] through what the process looks like in [1969] order to calculate costs. But at the end [1970] of it now, what you have is you have a [1973] list of packages and deals. So let's run [1976] through this really quickly with that [1977] other example that I provided you guys [1979] earlier, the one about lead genen. So if [1982] you think about it, this lead genen [1984] service that was before where every time [1986] you get a new client, it's like, hm, how [1988] much is this going to cost? Uh, it's [1989] going to cost 1,500 bucks. Um, I don't [1991] know. It's going to cost uh 2,200 bucks, [1993] right? Ooh, it depends on the value. [1995] it's going to cost 3,900 bucks. You [1996] know, this is stuff that is fine if [1998] you're a beginner, but if you want to [1999] move past the beginner stage, you need [2001] to learn how to productize your service. [2003] Instead of providing this vague thing, [2004] you're going to provide all of these [2006] concrete deliverables. And now you can [2008] see how we got at the super concrete [2010] price. What did we do? We actually [2011] calculated the cost of scraping 10,000 [2013] highquality leads per month. This might [2015] have cost me $12. Okay, approximately. [2018] This the internal cost of having [2020] somebody at my level offering a 45minute [2022] weekly strategy session might be $500. [2025] So this is now $12 a month. This is $500 [2027] a month daily Slack availability. Having [2030] somebody to manage and train their team [2032] 2 hours a day that's 40 hours a month. [2034] Maybe I'm getting somebody at like a [2036] reasonably low rate. I don't know. Uh I [2038] get that for 600 a month. And then maybe [2040] this monthly report cost me like I don't [2041] know 50 bucks to generate or something. [2043] If we add up all these costs now you'll [2045] see that we're actually at like a pretty [2047] reasonable price. This is 600 + 500 [2050] that's 1100. So that's going to be [2053] 1,62. Okay. And then if we take that [2056] into account [2058] 3,770. We work the math out on 1162 [2063] 3770 we have just about a 70% margin [2067] which is not as healthy as the 80% [2068] before but hopefully you guys are seeing [2070] um how all of these prices actually come [2072] to be. There's some internal cost then [2075] you fix your margin. You multiply that [2077] out and then you end up with the price [2078] that you make customerf facing. And [2080] also, I'm not saying you have to charge [2082] everybody this price. You really don't. [2083] Okay? You can start offering, let's say, [2085] a 10% discount or something like that to [2087] this service to make this, you know, [2088] $3,300 or something. But the point is, [2090] you know, have something to anchor. [2091] You're not just pulling numbers out of [2092] your ass every single time somebody asks [2094] you how much it's going to cost. [2095] Hopefully, you guys enjoyed this video. [2096] Had a lot of fun making it. To [2097] summarize, the difference between people [2099] who struggle to scale and those who [2101] consistently make 20, 50, or 75K a month [2104] isn't just technical skills. It's having [2106] systems that scale without requiring [2107] more of your time. Productization does [2109] this. It creates this leverage by [2111] transforming a vague service offering [2112] into a very concrete package which [2114] eliminates scope creep. It also [2116] standardizes your processes and [2117] automates your delivery. The result is [2119] significantly more predictable income. [2121] It's much more consistency and [2122] ultimately has dramatically reduced [2124] workload, which I think we're all going [2125] for here. The most successful AI [2126] automation specialists don't implement [2128] this framework overnight. They start [2129] with one service, then they apply these [2131] five steps methodically, then they [2133] expand slowly once the systems are [2134] dialed in. So, I recommend you do that [2135] as well. Lastly, if you guys are serious [2137] about scaling your a agency, definitely [2139] consider checking out Maker School. It's [2140] my day-by-day accountability roadmap [2142] where I provide step-by-step guidance on [2143] how to implement this exact framework, [2145] as well as many others with templates, [2147] scripts, and personalized feedback to [2148] help you guys get results faster. In [2150] addition to weekly community exclusives, [2152] you guys get support, access from me and [2154] almost 3,000 other AI entrepreneurs [2155] growing together, as well as a whole [2157] host of other things. Check the link in [2158] the description. Aside from that, like, [2160] subscribe, do all that fun YouTube stuff [2161] that bumps me to the top of the algo.

Video: https://www.youtube.com/watch?v=r0c7RhMFcww
Title: Build Your First AI Business in 6 Hours (Ultimate Beginner Guide)
[0] Hey, welcome to the most comprehensive [1] AI agency business master class ever [3] created. It's absolutely free and if you [4] want to start an AI business or begin [6] freelancing with automation, you are in [7] the right place. My name is Nick. I've [9] scaled my own AI automation agency at [10] over 72 grand per month. And I've also [12] consulted with many seven and 8 [13] figureure companies you're probably [15] familiar with. Right now, I work with [16] nearly 3,000 a entrepreneurs on lead [18] generation and scaling in my private [20] community called Maker School, where I [21] actually guarantee your first paying [23] client in 90 days or your money back. [24] So, I'm pretty confident about this [25] stuff. Anyway, while everybody's talking [27] about AI replacing jobs, intelligent [29] entrepreneurs are seeing it less as [31] something to be feared and more as an [33] opportunity, and they're building new [34] businesses around it right now. This [36] isn't some trend. I hope it's clear. AI [38] is very obviously the future. And it's [39] abundantly clear that the people that [40] position themselves right today are [42] going to be dominating the marketplaces [43] of tomorrow. The way that I see it, the [44] window is still open as of right now, [46] but it is closing quickly, as all market [47] opportunities do. So, you might as well [49] jump on it now. This video will take you [51] from complete beginner to somebody that [53] is capable of building not only [54] automations but profitable AI automation [56] systems and then selling those systems [57] to companies that are desperate for [59] solutions. It's primarily about the [61] business side of AI and automation. But [62] if you guys want to deep dive into the [64] technical side as well, I have almost [65] 100 hours of pure building on my channel [67] that you guys can find. And I've made [68] sure to add timestamps for every section [70] down in the description. So if you guys [71] want to come back to a specific part, [73] feel free to jump around. And also make [74] sure you bookmark this video right now [75] so you can come back to it later. I do [77] not expect you to watch it all in one [78] shot. So here's what we're going to [79] cover. First, the 8020 technical [81] foundations behind AN automation. Then, [83] how to find paying clients. Then, we'll [85] discuss proven sales processes, pricing [87] strategies that actually work, client [89] delivery systems, and then ultimately [90] how to scale to six figures or more [92] without hiring anybody. This is your [94] complete road map to building a [95] futureproofed AI automation agency [97] business in 2025. So, let's dive into [100] the foundations and get going. Starting [101] with the core concepts you need to [102] master. So, before we actually jump into [104] finding clients and building your [105] business, we do need to establish the [106] foundations. So, this first whole [107] section is going to cover what I call [108] the AT20 of the technical and business [111] essentials behind AI and automation. [112] That means we're going to chat briefly [113] about things like APIs. We're going to [115] talk web hooks. We're going to talk a [116] little bit of like um AI prompting. And [118] then we're also going to get into the [119] business fundamentals that I find a lot [121] of people actually miss. By the end of [122] it, you guys are going to understand why [123] focusing on business skills matters more [125] than being a technical wizard. You're [126] also going to know how to approach [127] automation as a real business model and [129] then some of the core concepts that [130] everything else in this master class [132] depends on. Once you have the [133] foundations locked down, the clan [134] acquisition and sales processes and [136] scaling strategies that we're going to [137] cover next are going to make total [138] sense. Though without them, you'll be [139] building on shaky ground. So, I do [140] highly recommend that you make it at [141] least to the end of this initial video. [143] Let's dive into the essentials. Why [144] don't we jump right into the very first [146] point, and it is the most boring point [148] ever. And you're probably like, Nick, [149] why did you start with this point? Well, [150] it's because I think a lot of people see [152] AI automation as this hype train and [154] this big bubble. And I want to push back [156] against that. AI automation is not [158] really all of that. It is just like any [160] other business. Don't get caught up in [161] the hype. Don't get caught up in the [163] shiny objects. The skills that make you [165] a successful AI automation business [168] owner are the exact same skills that [170] make you a successful plumber. They're [172] the exact same skills that make you a [173] successful recruitment agency owner. [175] They're the exact same skills that make [177] you a successful e-commerce business [178] owner. I'm going to draw a business [180] model on the right hand side here, and I [182] just want you guys to kind of like see [184] which business models this matches. [186] Okay, we start with our lead genen. And [188] there's a variety of things that we do [189] for lead genen. We could do cold email, [191] okay? Maybe we do PPC. That's [194] pay-per-click ads. Maybe we do [195] referrals. These are all ways of getting [197] people interested in your business. And [199] what do you do with all these lead genen [200] mechanisms? Well, you then shuttle them [203] to some sort of [204] conversion. So, usually this is a sales [208] call. Okay. What happens on the sales [210] call? Usually, you'll send a proposal of [213] some kind, also known as a quote or an [217] estimate. After that point the person [219] becomes a client. When they become a [221] client you then fulfill and ideally at [224] the very end of this there would be some [225] sort of retention mechanism that you [227] know gets them back in through some [228] other call and then you just repeat and [230] this is really what makes you money. [231] Okay. So I just drew that and that is [233] how all AI automation businesses work. [235] But kind of just like zoom out a little [237] bit. If you squint what you'll notice is [239] this doesn't just apply to a automation [241] businesses. That exact funnel that I [242] drew literally applies to like 90% of [245] B2B businesses all over the world. And [247] so I say this to mean the only [249] difference between an AI automation [251] business and the vast majority of other [253] businesses that you may or may not have [254] experience with. The only difference is [257] this section right here. It's that [258] little fulfillment section. Okay? So, [261] you know, in a plumbing business or [262] whatever, that might be, I don't know, [265] repairs. That might be, you know, new [268] pipes. In a recruitment business, that [270] might be a candidate being placed. in a [273] PPC agency that might be some ad [275] creatives being developed or something. [277] The point is the fulfillment is the [279] different part. Okay, that's the AI [281] automation part. But everything else, [283] your ability to drive leads, your [285] ability to close those leads, your [287] ability to impress the hell out of those [289] leads, whatever, all of this stuff is [291] foundational and is shared with [293] literally every other major digital [295] business model today. So, the reason why [297] I say all this is because don't focus [300] 90% of your energy on that tiny little [303] bit at the end that just happens to be [304] AI automation. If you guys really want [306] to crush it at this business model, [308] focus the vast majority of your energy [310] on the same foundational concepts that [312] you'd have to learn in any business. [313] Focus on your ability to drive leads. [316] Focus on your ability to sell to those [317] leads. Focus on your ability to retain [320] customers after they've made it through [321] your pipeline. If you guys are [323] incredible at that, and even if you [324] happen to be second rate at AI [326] automation, you guys will make way more [328] money than if it was the other way [329] around. Okay? So, the fundamentals are [333] always what make your automation agency [334] or business successful. It's never fancy [337] fancy tech. It's never your [338] implementation. Um, don't overthink the [340] technical aspects like I see a lot of [342] people coming from, you know, [343] programming or development or [344] engineering backgrounds do. And [346] certainly don't underthink the business [347] side of things because the number one [349] thing that I see when people enter my [351] communities and my groups and my [352] products, they're always like, "Hey, [353] Nick, I'm an engineer and I'm great at [355] building products, but I'm not very good [356] at marketing." And then I'm like, "All [357] right, well then you're not very good at [358] being a business owner. So, we need to [359] fix that first." Right? Your development [361] and engineering skills, those things can [362] wait. We need to make sure that you're a [364] good marketer. We need to make sure [365] you're a good salesperson. And [366] ultimately, we need to make sure that [367] you're good at business development if [368] we are to develop a business. Cool. So, [372] I mean, you know, understated hopefully, [374] but uh yeah, I think that's probably one [376] of the most important parts. Now that [378] I've covered that, we can actually start [379] getting into some technicals. Okay, so I [381] think a lot of people that are watching [382] this are probably at the start line of [384] their AI automation business. I mean, if [385] you weren't, likelihood of you watching [387] content like this is probably lower. So, [388] I know real Sherlock Holmes over here, [390] but one of the core foundational parts [392] of AI automation agency fulfillment is [395] your ability to use an API. So, an API [397] just stands for application programming [399] interface. All that really means is [401] essentially for our purposes it is a [403] server URL somewhere in the internet [405] that we can send a request to and then [406] we can get things back. And the cool [408] part about APIs for us is you know those [410] AI automation tools that we tend to [411] really know and love. Stuff like [413] make.com stuff like nadn stuff like [415] zapier stuff like lindy all these drag [418] and drop no code platforms which are [419] really what most people think about when [420] they think AI automation. Well these [422] don't have built-in integrations with [424] every platform that you might want to [425] connect them to for business purposes. [427] Okay, in those situations, we need to [429] use an API or an application programming [431] interface to build our own connection to [433] those services to allow us to get a job [435] done. I want to say that if you only use [438] built-in integrations, not only is your [440] ability to do anything actually really [441] cool for the client severely limited, a [443] lot of the time the client scales just [444] do that stuff themselves by dragging and [446] dropping modules across the screen. But [448] not only is it super limited, you can't [449] really drive as much value as you [451] realistically could out of any platform [453] because a lot of the time the simple [455] endpoints that are exposed by make.com [457] or Zapier or any event or whatever um [459] you know they're just a lot more [460] parameters. There are a lot more options [463] uh in the API versus just the the drag [464] and drop. So what I'm going to do here [466] is I'm actually going to run through how [467] to connect to an API and I'm going to do [469] it using two tools that are really [470] popular right now, make.com and naden. [472] And hopefully this is going to give you [473] guys a walkthrough what I look for when [475] I connect to an API. Um, as we see the [478] number one thing that I always do [479] immediately is I look for Oth. Then I [481] look for a way to copy and paste a [483] simple example and then from there I [484] basically build a minimum viable API [486] call that just works. The second I have [488] something that works which usually [489] involves some method endpoint and header [491] shenanigans. The second I have something [493] that works everything else is so much [494] easier. So um yeah, let me show you one [496] example in make.com and then I'll show [498] you another example in uh N8N as well. [501] What's the API we're going to be [502] connecting to? It's this really cool one [503] called Fire Call. I've been using [504] Firecol a lot more recently. Essentially [506] what firecrawl is is just a way to [508] scrape like any website and then return [510] the results in what's called markdown. [512] So this is my website right over here. [513] Okay, leftclick.ai growth systems for [515] B2B companies. Got a handsome photo of [518] myself in the top right hand corner. [519] Then a bunch of other BS. I'll save you [520] guys the time. Essentially what we do is [523] um you know they have this little [524] playground here so you guys can visually [525] see what's going on. But let's say I [527] want to run a scraper for a [531] leftclick.AI. Essentially what's [532] happening is on the back end it's [534] spinning up its own server and then it's [536] calling my website and then it's [537] extracting all the data for me and then [539] what I end up getting in return is I end [540] up getting this markdown here and [542] markdown is just a compressed version of [544] the HTML on the website. So I have like [546] access to formatting with these headers. [548] I have access to the links. I have [550] access to basically everything I'd need. [551] What's the value in scraping websites [553] and stuff like this? Well, I talk about [554] scraping a lot. Most of the examples in [556] this video are going to be all scraping [557] based. Um, just because I think there's [558] like tremendous um kind of strategic [561] sales value. Uh, but you know, the vast [564] majority of the time anytime you're [565] whipping up an email campaign for [567] somebody or you're sending any sort of [568] outreach or you're doing any sort of [570] marketing that really matters, you're [572] going to be doing some sort of scraping [573] in Aon Automation. So, I just wanted to [574] make sure this is hyper relevant. Okay, [576] cool. So, um, that's more or less the [578] the playground. So, what I want to do [579] now is I want to run this through API. [581] I'm going to open up my make.com [582] scenario over here. Uh, I just have it [584] called API call example. The first thing [586] I'm going to do is I'm just going to [587] open up an HTTP request. And then what I [589] always start with is the make a request [591] module right over here. Okay. So now I'm [593] going to head over to firecol. And what [594] do I want to do? I want to use their [595] API, right? So I'm going to go firecrawl [598] API. I always just Google the API that [600] I'm looking for. And I see there's an [601] API reference here. Awesome. Looks good. [604] Now I'm confronted with kind of an [606] intimidating page. SDKs, APIs, like what [609] are all these threeletter acronyms? [611] Well, the good news is this specific API [612] is actually pretty upto-date and it's [614] pretty clean. Um, not all APIs are like [616] this, but essentially the very first and [617] most important thing that I'm looking [618] for is always the authentication. I [621] think I might have called it [621] authorization back here, but really what [624] I meant was authentication. Okay, so we [626] need to authenticate. Now, the way that [628] authentication typically works is there [629] there are two or three primary methods [631] nowadays. Um, the simplest one is what [633] we see over here, which is why I picked [635] this API and it's called authorization [637] bearer. Now, authorization bearer is [639] super simple and it's super [640] straightforward. And essentially all [641] this means is we need to add a header in [643] our HTTP request that includes the term [646] authorization and then the value of that [648] needs to say bearer and then a space and [650] then we need to have our API key. Okay, [652] I think this nuance is lost on a lot of [653] people. At least it certainly was for me [655] when I got start started with all this [656] stuff. So, I'm just going to show you [657] guys what this actually looks like step [658] by step with this real API and then I'm [661] just going to um change my API key [662] afterwards so you guys don't all run up [664] my fire crawl dev. Uh okay, cool. So, [667] let me just see here. Um, what endpoint [669] do we really want to call? I guess let's [671] find an endpoint. So, I'm going to find [673] the simplest possible endpoint. I'm just [674] going to try recreating the playground [675] request. So, I think it's a scrape, [677] right? I'm just going to click scrape. [678] And what do we see here? Post scrape. [680] Okay, cool. The very um important thing [683] is on the right hand side, you see how [684] there's this curl request. And usually [686] most APIs nowadays will have a big [688] snippet of code. Well, this is where I [690] basically go to copy and paste a a code [694] block with everything I need as quickly [696] as humanly possible. Now, what we see is [698] if I go back to my [701] um Excala draw here, we start with the [702] authorization and we figured out how to [704] do that. That's fine. Now, we're going [705] to look for a copy paste example and [706] then we're going to put together a [707] minimum viable API call. So, we've done [709] this. Okay, we've done this and now we [711] just need to put together this minimum [712] viable API call inside of make. So, I'm [714] just going to drag these docs all the [715] way over to the left side so I could [716] just very quickly and easily [718] accessmake.com. And then what I'm going [719] to do is I'm just going to copy all the [721] fields that are relevant. Now, the [723] fields that are always relevant are [724] always going to be the URL. So, I just [726] grabbed the URL directly from here. I'm [727] going to copy and I'm going to paste it [728] inside of my URL bar. The method, which [731] if you guys remember said post over [732] here, it's usually going to be get or [735] post. And then the headers. So, [738] authorization bearer token. This is [739] where we put our API key. Okay. So, in [741] make I'm going to go down to headers. go [743] authorization. Then I need to type [745] bearer. And now I need my API key. So [747] where am I going to get that? Top right [748] hand corner. I'm going to go to my um [749] firecrawl. Then I'm going to go down API [752] keys. Obviously every platform that [753] you're using is going to have a [754] different UX for API keys and stuff, but [757] this is what firecalls looks like. Okay. [759] And then I'm going to go to API key. And [760] I'm just going to copy this API key. [762] I'll go back to make and I'm just going [763] to paste that in. Okay. So now we have [765] the authorization taken care of, which [767] is really cool. The next thing we need [769] is if we go back to this doc, you see [771] how um there's a uh content type [773] application JSON header. Well, in make [775] it's really easy to do. You just go body [777] type and then you go raw and then [779] content type you just set to JSON [781] application/json and then uh under [783] request content. That's where this data [785] flag is going to come in. And it's [786] always a data flag in a post request. So [788] what I'm going to do is I'm actually [790] just going to copy this entire [791] thing. Okay, I'm going to go back into [794] my make and then I'm going to paste it [796] in. And all I want is I want my URL, [800] which in this case is being covered with [802] a string. So I'm just going to paste in [804] leftclick.ai. Now you see there are a [806] ton of options here. Include tags, [807] exclude tags. Usually in APIs like this, [809] anytime you see these strings with this, [811] it's kind of like this code. This is [812] just like a standin or like a template [814] or like a placeholder. So I'm just going [816] to get rid of all of these. And to be [817] honest, do I do I even need any of [818] these? I don't really think so. It looks [820] like the only thing I actually need is [821] just the body, right? I'm just going to [822] remove all other options but this URL. [824] Maybe I'll leave the markdown, too. [826] Okay, get that out. Going to make sure [827] that everything is still formatted in [829] JavaScript object notation. That's [830] definitely a good skill to learn if you [832] guys are using APIs. And then I'm going [833] to rightclick this and press run this [835] module only. I see it's taking some [837] time. It's a pretty good sign. Usually [839] when things take time and on make.com [841] side, that means you're not getting an [842] instant error. And what do I see if I go [844] down to the bottom of the screen? [846] Metadata markdown. I have all my [848] markdown in this variable over here. If [851] I scroll even further down, I have my [854] entire website. And then I also have a [855] bunch of other fields like source URL, [856] scrape ID, description, title for my [858] meta, all that stuff. So what have I [861] done here, guys? I've successfully built [863] an API request, inmake.com. As you see, [865] it only took maybe 2 or 3 minutes as [868] long as you know where to look and where [869] to start. I'm going to do the exact same [870] thing now in naden. And you'll see it's [872] actually even simpler because, you know, [873] the solutions usually do a fair job of [875] giving you what's called a curl request. [877] And you can actually just copy and paste [878] a curl request directly into NAD. Does [880] most of the work for you. So now I'm [882] going to open up an NAND workflow over [884] here. And then I'm just going to type an [884] HTTP request. Same thing as before. Then [887] you see in the top rightand corner it [888] says import curl. Well, what you can do [889] is you can actually just grab this curl, [891] copy all of it. Okay, curl is just a way [893] that you send a request using your [895] terminal. Then I'm going to click import [897] curl. Paste it all over here. Import. [899] And then now we've actually [900] automatically filled out all of that [903] data. Okay. By just copying and pasting [906] a curl request. This is why a lot of [907] people like NAN. and it ends a little [909] bit more developer friendly and geared [911] towards people doing API integrations [913] and stuff like that. I need an API [915] token. So, I'm just going to copy this [916] over, go back over here, paste this in. [918] Super easy. Now, what else did we have? [920] We just had a URL, right? So, I'm just [921] going to go [923] httpsleftclick.ai and then I'll leave [925] the formats part and just delete [926] everything else. This to me looks like [928] pretty good JSON. If you're ever unsure [930] whether something's good JSON, just go [931] to [932] jsonformmatterater.com, paste in your [934] JSON, then click format or beautify. If [936] it works, you're going to get something [937] like that. If it doesn't work, let's say [939] we have an extra comma, it's going to [940] tell you where the error is. And usually [942] you'll be able to look at the fifth line [944] and then be like, "Oh, okay. I have an [945] extra comma there." Anyway, now that we [947] know that that's good, I'm just going to [948] go back over here and I'm going to click [949] test [950] step. Same as before. We do not get an [953] instant error. What we do get is we get [954] the data on the website scraped ready [957] for us basically instantly. Okay, so [960] yeah, API calls are not magic. They're [961] actually pretty easy and pretty simple [963] and pretty straightforward. You just [964] have to be smart about how you use them. [966] So next up, let's talk a little bit [967] about the other side of the equation. We [970] just talked about sending data. Well, [971] let's now talk about receiving data. And [973] the best way to receive data is using [976] something called a web hook. A web hook, [978] to make a long story short, is just like [980] an API call is a way to connect [981] something that doesn't have a connector [983] built into your note platform. Uh it's a [985] way to create your own connection um [987] sending data out. A web hook is just a [989] way to do that for sending data in. So [990] web hook is just a custom URL basically [993] that you are creating that enables you [995] to point other services to you and then [998] when you do something like maybe you [999] change a record or you update a status [1001] or uh some new email comes in or [1003] whatever you can actually trigger a web [1005] hook on the make.com or the nadn or [1008] whatever your no code tool is end to [1010] start some flow. Okay so highly [1013] encourage you guys to figure this out [1014] because if you do figure it will make [1015] you unstoppable. Learning web hooks and [1017] learning APIs are probably like the two [1020] I don't know I'd say they're probably [1021] like the two highest leverage things to [1022] learn in the actual AI automation [1024] fulfillment side of things aside from [1026] you know those business skills we talked [1027] about earlier. So how exactly would you [1028] do that? Well in make it's pretty easy. [1029] All you do so you just go to this web [1031] hook node or module what you want is [1034] custom web hook. Okay then you create a [1036] custom web hook and I'll just say my [1038] example web hook. And now what you have [1041] is you have a server essentially that is [1043] willing to receive a request. All you [1046] need to do is send a request to this [1048] server and then you are going to trigger [1049] your make.com flow. So if I click run [1051] once, you'll see it's waiting. Okay, the [1053] simplest request you could send with a [1055] web hook is actually just you trying to [1056] access a website. So if I just take the [1058] URL, which was this one up here, and [1060] then I paste it in, what do you think is [1062] going to happen if I press enter? Well, [1063] my browser is going to send a request [1065] over to this web hook URL, which is [1066] going to trigger my flow. So I just [1068] press the button. As you see, it says [1070] accepted. And then if I go back here, [1072] this make.com operation, it actually got [1074] triggered, which is pretty crazy. Now, [1076] there's some built-in logic with web [1077] hooks that they don't really teach you [1078] about, but because web hooks are just a [1080] server request, you can also do things [1081] like pass query parameter uh query [1083] parameters over. So, um, if I were to [1086] put a question mark and then say query [1088] parameters equal example, then press [1089] enter. What you see is I now have access [1091] to a variable called query parameters. [1093] Now, I'm doing this with a browser, but [1095] you can actually do this with any [1096] service you want. You can do this with u [1098] monday.com. You can do this with [1099] ClickUp. There are a variety of [1100] different ways to do this. If I go over [1102] to app.clickup.com, which is just a [1105] simple project management tool that I [1106] really like, then I click on their [1109] automations uh feature. You'll see here [1111] that if I click manage all automations, [1113] I have the ability to set up an [1115] automation where when I do something, [1117] basically I can fire off a web hook [1120] request. Now, if I fire off a web hook [1122] request, if I paste this URL in here, [1124] then I just say, I don't know, task [1126] created. So, every time I create a task, [1127] I'm going to call a web hook. I do this. [1130] Okay. Then I go back to my make [1132] scenario, run this, go back to my [1134] ClickUp, and again, ClickUp can be [1135] whatever the hell you want. It doesn't [1136] have to be ClickUp. It could be [1137] monday.com. It could be pandadoc. [1139] Basically, every one of these tools has [1141] a web hook feature. Then, if I say this [1143] is an example record, I press enter. [1146] Then I go back here. What you'll see is [1148] ClickUp just triggered that web hook and [1150] then sent it over to the address that I [1152] listed, which has now enabled me to [1153] start a flow in my no code tool. So it's [1156] as simple as that. Does not have to get [1157] more complicated. So I'm sure you guys [1158] can imagine NADN is basically the exact [1160] same thing. There is a web hook [1163] node. The only difference between um uh [1166] make.com web hooks and then NADN web [1168] hooks are there's a test URL and [1169] production URL. Um and generally when [1172] you are testing something you need to [1173] have this web hook- test in the URL. [1175] When it is live and it's ready for [1177] production and your your workflow is on, [1179] it needs to just say web hook. You also [1181] need to specify the method. It needs to [1182] be either a get or a post. But I'll [1184] leave all that to specific programming [1186] videos. Um, it's more or less the exact [1188] same flow here. So, if you know how web [1190] hooks work, you're already 90% of the [1192] way to being what I would call a good [1194] automator. Um, you know, web hooks, API [1196] requests, these are basically like the [1198] tools of the trade. And to be honest, [1200] anytime you're using a built-in [1201] automation or, you know, a drag and drop [1203] node anyway, all you're doing is you're [1204] you're you're using web hooks. They're [1206] just not telling you that you're using [1207] web hooks or you're using API calls, [1208] they're just not telling you that you're [1209] using API calls. All right. Okay, cool. [1212] Next up, I want to talk how to prompt AI [1214] models effectively. As the AI and AI [1216] automation probably implies, most of our [1218] work involves weaving in artificial [1220] intelligence into some sort of business [1222] process. So, I have the simplest [1224] possible way to think of this and I'm [1226] going to give it to you right now. There [1227] are basically three types of prompts and [1230] these three types of prompts are present [1231] across more or less all of the current [1233] at large language model tools. There is [1235] a system prompt. Okay, there is a user [1238] prompt and then there is a assistant [1241] prompt. These are the three types. Now, [1243] the way to prompt an AI and to [1245] consistently achieve pretty good [1247] results, you know, you got to go a lot [1248] deeper if you want to get amazing [1249] results, but if you want pretty good [1250] results, results that are enough for you [1252] to whip up a flow in a few seconds and [1253] then impress a business [1255] owner. What you need to know is that the [1258] system prompt is how the model [1261] identifies. So this is where you [1263] say you are a data [1269] entry professional or something or you [1273] say you are a skilled recruiter. You are [1277] the president of the United States. I [1278] don't know whatever the heck you wanted [1279] to roleplay as. This is the identity [1281] that you're giving the model. Okay. The [1283] user is where you give it a task where [1287] you say your [1290] task is to do a thing. Then the [1295] assistant prompt, okay, is what the AI [1298] gives you back. And usually the way that [1301] I like to do things is I like to have [1303] the assistant give me back my stuff as a [1308] JavaScript object notation um JSON uh [1311] string. So it's going to look like this [1313] with curly braces with a key and a [1314] value. And the reason why I do that is [1316] because when you get in the habit of [1317] doing this, you can then very easily [1319] integrate this with any tool on planet [1321] Earth. You're using what's called [1322] structured data. And once you have [1324] structure to your data, you can [1325] obviously um you know forward that over [1327] to some software platform, parse out the [1329] keys, add the values to to other [1331] variables and stuff. It's pretty cool. [1333] Okay, so that's more or less what this [1334] looks like. just to run you guys through [1336] it very quickly with an N8 flow that I [1338] built to personalize um real client or [1341] real lead data. I've since sold this [1344] system many times. I've also put this up [1346] on Maker School and make [1347] moneywithmake.com, my two automation [1349] communities. We've had many many people [1351] sell this. This is exactly what a real [1353] functional system that you guys can [1354] charge money for looks like. Um the AI [1357] model for this system essentially has a [1360] system prompt where we say you're a [1362] helpful intelligent writing assistant. [1363] That's its identity. And then we have a [1366] user prompt where we give it the task. [1368] Your task is to personalize an email. [1369] You'll do this by taking a prospect [1371] LinkedIn profile and then editing five [1373] templates for different sections of the [1375] email. Subject line, icebreaker, [1376] elevator pitch, call to action, and a PS [1378] field. Your templates are below. Then I [1380] give it some templates. Then I give it [1382] some guidelines. Then finally, to make a [1384] long story short, I say respond in JSON [1387] using this format. Okay. Then what do I [1390] have? Well, this is where things get a [1392] little bit more complicated and where [1393] most people kind of lose me, but [1395] essentially after um the system prompt, [1397] you put a user prompt. After the user [1398] prompt, you put a second user prompt [1400] where you actually give it the data that [1401] you want it to operate off of. And then [1403] finally, when you're done, the AI will [1405] return essentially an assistant prompt. [1408] So, this is sort of the behind the [1409] scenes sort of, you know, the the best [1411] way to think about using this sort of [1412] stuff um live. And it's what I follow [1414] every single time that I build a system [1416] that prints money. I mean, I I follow [1418] this cart blanch. I'm going to have this [1420] Excala draw in the uh description so you [1422] guys can just click the link, look at [1423] this exact structure and use it in your [1425] own platform. Um I'm using uh just NAM [1428] for that example, but keep in mind you [1429] can do the exact same thing in make.com, [1431] exact same thing in Zapier. That's why I [1432] drew this out just so you guys had [1434] something that's platform agnostic. [1436] Okay, number five is to use what's [1438] called testdriven development. Now, I [1440] don't think a lot of people fully [1440] understand what this means, but usually [1442] the way that people will build out [1443] workflows is they will try and in their [1446] head map out what the whole thing looks [1447] like. And then they'll drag and drop [1449] like 50 modules together and then click [1451] run or test. Then obviously there'll be [1454] an error at some point during the flow [1456] and then when the error occurs, they're [1457] not entirely sure where they need to go [1459] to fix it or why it happened in the [1461] first place. Don't do that. Instead, do [1463] what's called testdriven development. [1465] when you start building stuff, okay, [1467] start by dropping the first module in. [1469] Okay, then test to make sure the first [1472] module works. Test to make sure that [1474] with the inputs that you provide that [1475] module, everything the outputs are as [1477] expected. Once you're done with that, [1479] then and only then do you drop module 2 [1481] down. Then you test module 2. Then and [1484] only then do you move on to module 3. [1486] And so on and so on and so forth. The [1487] reason why is because if something in [1489] your flow breaks, okay, and you know [1492] that everything up until here was [1494] perfect and then all of a sudden there [1497] started being a break right over here, [1499] where do you think your error is? [1501] Obviously, the error is right over here. [1503] So, this is where you're going to look. [1506] The reason why this is valuable is [1507] because when you're building systems, [1509] debugging, the process of going through [1510] and trying to figure out what the [1512] problem is is a massive time sync. It's [1514] like a binary search tree in technical [1516] terms. It's super freaking expensive [1519] time-wise. But then if you test driven [1522] develop like I'm doing here, every time [1524] you test a module after you put it in, [1525] it actually just it's a fixed time cost. [1527] It takes like 30 seconds every time you [1529] do that. Your flow has 10 modules. What [1531] are you doing? You're testing for 5 [1532] minutes total and you know the whole [1533] thing works and you know exactly where [1535] the debug um is, right? So instead of [1538] your uh debugging kind of looking like [1540] this, if this is time and this is um I [1544] don't know let's say debug time and this [1546] is like your step in [1549] process basically your debug time looks [1552] like this which is a lot more consistent [1555] uh like this a lot more consistent a lot [1558] more measurable and a lot more reliable. [1560] Okay, so just a much simpler and easier [1562] way to think about it when you guys [1564] create something. Okay, just like I [1565] tested the web hook, test the web hook [1567] first before putting down uh the next [1569] module. Okay, when you're done with uh [1572] whatever you're testing, actually test [1574] the whole flow again. Okay, right click [1576] on it, click run this module only and [1578] say, hm, you know, did the uh value y [1581] come out like I expected? Yes, it did. [1583] Okay, great. Now I can move on. The [1584] second you get in the habit of this, [1585] your builds are going to be a lot [1586] faster. [1588] Okay. And then the last thing I wanted [1589] to cover is anytime you're building [1591] something, start at the end. Don't start [1593] at the beginning. So, you know how [1594] earlier I was talking test driven [1596] development, start with module one, [1597] start with module 2. Well, actually, I [1598] was kind of being tongue and cheek. What [1599] you should really do is, let's say you [1600] have 10 modules in your in your desired [1602] flow. What you want to do is you [1603] actually want to start with module 10. [1605] You want to test to make sure module 10 [1606] works, and then you want to work [1607] backwards to module 9. You want to test [1608] to make sure module 9 works. Then you [1610] want to work backwards to module 8. Now, [1612] I know you're probably thinking this is [1613] silly, but let me give you a quick [1614] example flow. Let's say you have a very [1616] simple proposal generator. Okay, this is [1619] a proposal generator flow that I've [1620] built and shown on my channel many [1622] times. The way that this works is [1624] usually you will have some form. You [1626] will have the salesperson full [1628] information about the prospect in this [1630] form during a sales call. You'll then [1632] have AI to generate content, whether [1635] that's a copy for a proposal, maybe [1637] you're customizing an email to send out [1639] or something. Then you will customize an [1640] asset, so either a Google Slides or a [1642] Panda doc. Then finally, you'll send an [1644] email with the Google Slides proposal. [1646] How would I actually build this thing? I [1648] actually wouldn't build it left to [1649] right. What I would do is I would start [1650] with the last module. Okay, this is [1652] where I'd start. I'd actually put down a [1654] module that sends the email that I want [1656] that contains a link to the Google [1658] Slides proposal. You know, if my flow [1660] starting left to right is supposed to [1662] start with a type form or something, I [1665] wouldn't actually start with the type [1666] form. What I would do is I'd go all the [1667] way on the right here and I start with [1668] the email. Okay? I would have send an [1671] email all the way on the right. I would [1672] then add an [1674] example of the data that I [1679] want along with the attachment type that [1682] I want. I would do all of this and then [1684] I would test it. I would make sure it [1685] lands. And only when I make sure that it [1687] lands. Only when I make sure that the [1688] end does what I want to do would I then [1691] work backwards, which in this case might [1693] be a Google Slides module or something. [1695] Okay. So maybe now um I would do Google [1699] Slides and then I would go create [1701] presentation from a template. Now this [1703] is a little bit backwards. So I'd stick [1704] it right over here. Then you know after [1707] that what would I do? I would go and I [1708] would add an open AI node. Okay. I would [1710] test to make sure that OpenAI node works [1712] and then I would we're doing create a [1715] completion and make sure that's all good [1717] to go. Okay. Then maybe before that I [1718] have some other data processing stuff. [1720] But the point that I'm making is I would [1721] actually this entire time work this way, [1724] not this way. And there are a couple [1725] reasons for this, but to make a long [1727] story short, when you work backwards, [1729] what you're doing is you're eliminating [1731] wasted time on all of those paths that [1733] lead nowhere. So if this is the flow at [1738] the end of it, okay, it's four modules [1741] or nodes. In order to create it, what [1743] you actually had to do is you had to [1745] make this and then you had to try this [1746] and then that didn't work. And then you [1748] had to go back here and you had to try [1749] this and maybe that worked, but then you [1751] tried this and that didn't work. You [1752] tried that and then you got back here. [1755] Okay. And then finally you got over [1756] here. So like this is the the the actual [1759] flow. And I think I drew an extra one [1761] here, didn't I? Yeah, I did. That's all [1762] right. But during the building process, [1764] you experimented with all these weird [1766] ass paths. It didn't actually lead [1767] anywhere. These are all wasted time. [1769] Okay. It's kind of like how you have [1771] like a million in one ways, okay, to [1774] make it to X over here. [1778] So, these are all the ways that you [1780] could go. If you just started at X and [1782] then picked one of these, let's say, [1785] let's make this blue. Let's say this one [1786] here. You'd actually only ever spend [1788] that time building it backwards and [1791] traversing that one path. You don't [1793] actually have to try all the all the [1794] candidate paths it's called. So, yeah, [1797] start at the end, not at the beginning. [1798] Easily the simplest and most [1800] straightforward way to getting this [1801] done. If your goal is to send an AI [1803] written email, have the AI write the [1804] email first and then send it. Don't [1806] actually like start with the trigger. [1808] Don't start with all the introductory [1809] logic. Don't do any of that. All right, [1811] hopefully that makes sense. Now that you [1812] guys understand the core foundations, [1814] both technical and business, it is time [1815] to get practical. You know what [1817] automation is and why it works as a [1818] business model, but how do you actually [1819] get going with your first few steps? The [1821] next section is your complete dayby-day [1823] roadmap to building a profitable AI [1825] automation business from scratch. We're [1826] going to cover everything from how to [1828] choose your niche to setting up your [1829] business infrastructure to the specific [1831] tools and systems you need to start [1832] landing clients. This is where [1834] ultimately theory meets reality and you [1835] guys can get going. So, by the end of [1837] the section, you'll have everything you [1838] need to actually launch your business [1839] and start generating real revenue with [1841] AI automation. And by the way, if you [1842] guys are serious about turning the [1843] concepts that I'm talking about now and [1845] going to continue talking about [1846] throughout this course into real income, [1848] definitely check out Maker School. It's [1849] my AI automation community with a 90-day [1851] built-in accountability program that [1853] shows you guys step by step exactly what [1855] you have to do so you guys can minimize [1857] your overhead. All you have to do is [1858] just show up and then get going. We have [1860] almost 3,000 members as of the time of [1861] this recording who regularly close [1863] thousands of dollars of deals every week [1865] and I consider it the straight line path [1866] from a beginner to running a thriving AI [1868] and automation business. Anyway, let's [1870] dive in. Very first thing right off the [1872] bat, this was not around when I started [1873] my A and automation agency, but it is [1875] for you. And what I'm calling this is [1877] clientless money. There are a lot of [1879] very low-hanging fruit where if you just [1881] take advantage of some of these at the [1882] very beginning of your AN automation [1883] business, you will essentially instantly [1885] be making 10ish% more margins than all [1888] other competing AI and automation [1889] businesses. And what I'm going to do in [1891] the next few minutes is I'm just going [1892] to guide you through what these [1893] strategies, tools, and techniques are. [1895] They work as of the time of this [1896] recording. If you're watching this in [1897] like 5 years or something, likelihood is [1899] these tools will have changed the way [1900] that they do their business. But yeah, [1901] let me just give you guys all the secret [1902] sauce. And if you watch this within a [1904] few months of this video going live, [1905] this will probably work for you. Okay, [1906] so just before I show you guys the [1908] pipeline, basically the way that this is [1910] going to work is we are going to sign up [1911] to a bunch of affiliate platforms. Now, [1913] a big chunk of this business model is [1915] you basically getting clients to sign up [1916] to software platforms on your behalf. A [1918] lot of these software platforms can cost [1920] money, $100 a month, $200 a month, some [1922] even cost $300 a month or beyond. Now, [1924] if you're driving a very large return on [1926] investment for a client, the money that [1928] they're spending on the platform doesn't [1929] really matter too much to them. You're [1930] usually delivering multiples on it. that [1932] if they're spending that money to the [1933] platform and then there are affiliate [1935] platforms or affiliate techniques that [1936] allow you to take advantage and kind of [1938] recoup some of that, why don't we do it? [1939] We should probably do it anyway and then [1941] we can make a percentage of the money [1942] that the client is spending on the [1943] platform and just divert a few [1945] percentage points to us. In practice, [1946] these percentage points can be quite [1947] hefty. I want to say a lot of the [1949] platforms I'm going to show you in this [1950] video are going to have 30 to 40% [1952] affiliate payouts. So essentially what [1954] we're going to do is we're going to sign [1955] up for affiliate platforms for all major [1957] tools. So make.com's obviously a big [1959] one, nadn's obviously a big one. [1961] instantly is obviously a big one and so [1962] on and so forth. And this is going to [1963] create a passive revenue about 5 to 10% [1965] on all the tools that your clients ends [1966] up using. There is a step-by-step [1968] process to get quickly approved for all [1970] these programs. I'm going to walk you [1971] through what some of those look like and [1972] then I'm also going to cover some other [1973] ways that you can save a ton of money [1975] right off the bat using what are called [1976] coupon aggregators. So, first things [1979] first, you want to make some client list [1980] money. We're going to start with the [1982] affiliate program. So, I listed three [1984] here. Make n and instantly. Let me just [1986] walk you through all of them. There are [1988] 20% commission payouts if you sign up to [1990] make. You just go to [1991] make.com/yen/affiliate for that. There [1993] are 30% affiliate program referrals on [1997] NADN and that lasts for a full 12 [1998] months. Just go to [2002] wwwv2.naden.io/affiliates. There are 40% [2005] recurring commissions for instantly. [2006] Just head over to [2007] instantly./affiliate. This is a quick [2009] little pick of my own dashboard for [2011] Instantly Affiliates. I'm making [2012] anywhere between 4 and $5,000 a month US [2015] off of this. Now, obviously, I'm now in [2016] the creator space and the coach space. [2018] So, the numbers of people that I get [2019] signing up to these platforms is a lot [2020] higher. But even when I was running my [2022] AI automation agency, I was making a [2024] good additional 1% margin literally just [2026] from this one tool. So, you guys have 10 [2028] tools. I'm sure you guys could see how [2029] you'd make a bunch more. Let's just [2031] blitz fire through a bunch of other [2032] ones. Any MailFinder, this is an email [2034] finder service. 30% commission on every [2036] referral right over here for 12 months. [2038] Appify, this is easily one of the best [2040] scrapers out there. And hey Jay, what's [2041] going on big guy? Hope you're doing [2042] well. Um 30% recurring commission up to [2045] 2.5K per customer. Smart Lead, which is [2047] sort of Instantly's main competitor [2048] right now. 35% recurring monthly [2050] commissions for life. And then there are [2051] a variety of other ones. Okay. Now, I [2054] have an exhaustive list of every [2055] affiliate program, which you guys can [2057] find in my school community. Uh if you [2059] guys just head over to Maker School, and [2060] then you go over to classroom right over [2062] here, month two, and then we click on [2066] setup five software affiliate links. [2068] Down at the bottom, I have this giant [2069] list of basically all of the affiliates [2071] that I found that work for this business [2073] model. So, if you guys want to jump into [2074] Maker School and get that for yourself, [2076] feel free. Aside from that though, there [2078] are a couple of other ways you can make [2079] a ton of money with this. The first is [2081] coupon aggregators. There are two main [2083] ones that I like to talk about. The [2084] first is called Secret. Other one's [2086] called AppSumo. I think most people have [2087] heard of this. I don't think a lot of [2088] people have heard of this, but maybe [2089] that's cuz it's technically a secret. [2091] The way that Secret works is essentially [2092] they negotiate a bunch of deals with [2094] popular software platforms. Considering [2096] the whole job of an automation uh [2097] service provider is to be like, you [2099] know, somebody that glues together a [2100] bunch of different software platforms. I [2102] think you guys can see the leverage [2103] here. So, you know, you could claim up [2105] to $6,000 for notion. You can get 6 [2108] months free on the plus plan. Wave [2110] $20,000 in payment processing for [2111] Stripe, which saves up to 500 if you do [2113] the math. Uh you get a bunch of free [2115] perplexity credits. Uh obviously, there [2117] are no code platforms like Make where [2119] you get, you know, 20 240,000 operations [2122] for free. Google Workspace for our [2123] emails, Web Flow, right? I'll let you [2126] guys be the judge of this. Um I'm [2128] affiliated with join Secret. I should [2129] let you guys know. So, if you guys [2130] choose to use the referral link in the [2132] description, just know that I'm going to [2132] be making a little bit of money off of [2134] that, but essentially, you pay one bulk [2136] sum to this platform. I think it's like [2138] $150 or something like that. Uh, [2140] apologies that I don't have the price [2141] off the top of my head, and you um just [2144] get access to this giant like coupon [2146] library. And then before you even start [2148] your business, you're kind of in the [2149] black, if that makes sense. You've [2150] already made a tiny bit of money off of [2152] all of the rest of these software [2153] subscriptions. Some of these have signup [2155] processes, so you don't actually just [2156] receive the coupon immediately. Just [2157] make sure to note that. But you can [2159] usually sign up multiple times or repeat [2161] your signups with just different email [2162] addresses or something if you need to. [2164] So a lot of people in Maker School and [2166] Make Money with Make have taken [2168] advantage of the Make.com one. So [2169] they've gotten 240,000 operations. [2172] That's what the 12 months free um [2173] equates to. They've also done a lot of [2174] like Air Table stuff and there's Apollo [2176] stuff as well. Uh so I'll I'll leave you [2178] guys to that. Aside from that, AppSumo [2180] is another big deal aggregator. And [2182] basically the way that these guys work [2184] is they will give you lifetime um access [2186] to a platform instead of a monthly [2190] recurring SAS cost you just pay like [2191] upfront $69 for a certain um you know [2194] lead aggregator or whatever and then in [2197] this way you just get to arbitrage you [2198] get to like pay now and then save for [2200] the rest of your AI and automation [2202] career. I personally don't use AppSumo a [2204] ton but you know you can also get a [2206] bunch of deals and stuff like that here. [2208] Not affiliated with AppSumo whatsoever. [2209] I just wanted to point that out because [2210] I see a lot of people using it. The way [2212] that I set up my AN automation business [2213] actually was I created an American [2215] company using a service called Stripe [2217] Atlas which normally costs um $500. Now [2220] I then redeemed a join secret credit for [2223] $250. So if you think about it, I also [2225] had to spend an additional I think it [2227] was $125 at the time. So I spent $125, [2230] then I spent $500 to set up my business [2232] and then I saved $250. If we do the math [2234] on that, that's 625 divided by 250. Uh [2237] why can't I do that in my head? It's [2239] 375. There we go. After I did the $375, [2242] I redeemed $500 worth of Stripe credits. [2244] So, I basically made $500 in all the [2246] money that I made later. After that, I [2248] also redeemed I think it was something [2249] like $5,000 in various platforms that I [2252] would have had to sign up. And then on [2253] top of that, I even signed up to a [2254] partner bank for Stripe Atlas. It's [2256] called Mercury. And then they ended up [2257] giving me an additional $500 after I [2259] deposited 10,000. So, okay, I don't I [2262] really don't think I'm going to be able [2263] to do the math now. This is 375 minus [2266] 6,000. So, you can kind of think of me [2268] as being in the black by [2271] $5,625, I think. Yeah. So, I was in the [2274] black [2275] $5,625 before I even got started with my [2277] business. How cool is that? So, yeah. [2279] Just wanted to show you guys that this [2280] is like what I would do if I could start [2282] again. I didn't get to take advantage of [2283] all of these, and I really, in [2284] hindsight, wish I had set up all my [2286] affiliates earlier, but this is the very [2287] first thing I would do if I wanted to [2288] get up and running with one of these [2289] businesses. You guys can get links to a [2290] lot of the stuff in the description, so [2292] feel free to check that out. But okay, [2293] I'm assuming that you've actually gone [2295] through all of this rigomearroll and [2296] you've actually signed up and you've got [2297] yourself this optimized thing which you [2299] know is saving money for people that are [2300] complete beginners as I've mentioned and [2302] now you guys are ready to actually go [2303] out and like do something with the [2304] automation knowledge. We have the big [2305] trampoline. We're basically just waiting [2307] for that that double bounce. So uh how [2309] do you actually do it? Well, what I do [2310] is I build a minimum viable business. [2312] You know how everybody talks about MVPs? [2314] It's like minimum viable product. Well, [2316] I call this my minimum viable business [2319] MV. So this is the MVB Chad right over [2322] here. Okay? And this is everybody else [2324] that does all this market research and [2326] all this analysis and they spend five [2328] years getting a business plan together [2330] before they actually go and acquire [2331] their first customer. In this video, I'm [2332] going to run you through literally my [2334] entire minimum viable business strategy [2336] for A and automation. I'll even walk [2338] through the specific steps that you guys [2339] need in order to get out there and scale [2341] up your business. This is working today. [2343] This is what people are doing today. [2344] This is what I teach today. This is what [2345] I talk about all day. So let's get [2348] through it together. The very first [2350] thing I do if I'm setting up a minimum [2352] viable business, in our case, AI and [2353] automation, is I will define a niche. [2356] Okay? If you do everything for [2358] everybody, you technically do nothing [2360] for nobody. I believe that was Alex [2362] Herozy's famous quote a couple years [2363] ago, and it's true. If you are just a [2365] general services provider, you will [2366] never really get very far. People want [2368] to work with companies that understand [2370] specific and highly nuanced needs. And [2372] if you brand yourself as an AI [2373] automation agency that does everything, [2375] then the likelihood is you will not be [2377] perceived as such. So you can make a ton [2379] of progress right off the bat simply by [2381] defining a niche. But you have to make [2382] sure you define a niche right. A lot of [2384] people, they'll pick a niche that kind [2385] of sucks, okay? Like a really, really [2387] crappy niche. And then they'll waste, [2389] you know, 90 days or so of their life. I [2391] don't know why that's blue. They waste [2392] 90 days or so of their life just kind of [2394] muddling around in mediocrity because [2395] their niche itself is bad. I'll run you [2397] through some rules for a good niche. [2398] First, the way that I actually go about [2400] defining my niche is I actually have a [2401] niche discovery exercise essentially [2403] where I just walk through a ton of [2405] different example niches, example [2407] service lines, and then I I concatenate [2409] them together to make example [2410] positioning statements. So, what I've [2412] done is I've literally just had uh what [2414] is this like a list of 42 or 41 [2416] different niches or something? I guess [2417] 37 in total. And these are all niches [2419] that work. They're not the best niches [2420] in the whole wide world, but if you [2421] combine them with various service lines, [2423] so let's say you sell sales systems to [2425] website developers, well then your [2426] positioning statement, your actual niche [2428] is very narrow. You know, there are a [2429] lot of AI and automation agencies, but [2430] there are very few people selling sales [2432] systems specifically to website [2433] developers. Okay, there are very few [2435] people selling finance systems for IT [2437] consultants or product development [2439] systems for mobile app developers or CRO [2441] systems for cyber security people. Okay, [2443] if you pick three niches instead of just [2446] one, you also get the ability to try and [2449] test multiple of these simultaneously [2451] with basically no additional sunk cost [2452] because when you start one of these [2454] niches, you build all the infrastructure [2455] to do it. All you need to do to do it to [2456] other niches is usually just need to [2457] duplicate the process a little bit. [2459] Okay, so anyway, I define my niche and [2462] really instead of just one niche here, I [2464] should have said define three niches. [2466] That will make things a lot simpler. So [2468] after this, you're going to have three [2469] niches, okay? You're going to have niche [2470] A, you're going to have niche B, you're [2472] going to have niche C. Everything that [2473] you're going to do in the program, it's [2474] just going to set up one of these [2475] niches, okay? But you don't need to do [2477] three times the work in order to set it [2479] up for B and [2481] C. In reality, what it is is it's kind [2483] of like 1.5 times the work because [2485] you've already done all the hard work [2486] setting up the email systems, setting up [2488] your profiles, and doing all the [2490] outreach and stuff for niche A. In order [2491] to replicate that across B and C, you [2493] just need to like do a tiny bit more. So [2495] 50% more work for three times the result [2497] is definitely free money. I'm I'm always [2499] going to take free money when it's [2500] offered to me. And this is a really good [2501] example of doing so. So, what I would do [2503] in your shoes is I would go through this [2505] niche discovery exercise top to bottom. [2507] Add in a bunch of other niches that you [2509] think may work based off of principles [2511] that I've talked about in previous [2512] videos. They tend to be digital first. [2514] They tend to have high ticket projects [2515] and they tend to be low regulation. So, [2517] if you guys find niches or industries [2519] that satisfy those constraints, then [2521] fantastic. Pick three of them and then [2523] all you do is you commit to them for at [2524] least a three-month period and promise [2526] yourself you're not going to change this [2527] niche before you've explored it fully. [2529] Okay, so that is literally step one. [2531] This is what I teach people all the [2532] time. This is exactly what I would do if [2533] I were at the start line of my business [2535] again. I pick three niches, check. We [2536] are now done with that. Second thing I [2538] do is I determine a business name. Now a [2541] lot of people make this out to be way [2542] more difficult than it really is. I [2543] actually set a fiveminut [2545] timer and I pick as many business names [2548] as I can in a 5minute period. I'll use [2550] simple tools like namelics for instance [2553] where I will basically put in a couple [2555] of terms and then I will have this [2558] service combine them in eight [2559] quadrillion different ways as a free [2561] service at least as of the time of this [2563] recording I've used this for years I [2565] just get a bunch of business names agile [2567] fusion stream pipelines headway code [2569] reduction influence process drive [2571] transform hub flow ship some of these [2574] sound incredible right what I would do [2576] is I would pick 10 that I like okay just [2577] 10 you don't need to do any more than [2579] that and then pump these into some sort [2580] of domain name finder, something like [2582] pork bun or namecheep or something along [2584] those lines. I'll show you what that [2586] looks like in a second. From there, you [2587] can verify whether or not the.com is [2589] available and then you can proceed with [2590] the next step. But yeah, I literally set [2591] a 5minute timer, find a business name, [2593] whatever your business name is does not [2595] really matter. There's like a [2597] 00001% of business names will matter and [2600] then 99% of business names won't matter. [2602] Then like 1% of business names will just [2603] be terrible and you never want your [2604] business to be named that. But odds are [2606] you're going to be in the 99%. Don't [2608] sweat it too much. It's not that [2609] important of a decision. Okay. All [2611] right. After this, you need to find five [2613] pieces of social proof or five case [2616] studies. Now, if you don't know what I [2617] mean by this, I mean you need pieces of [2621] your history, of your corporate [2622] experience, of your past that [2624] demonstrate that you have done something [2626] valuable for somebody at some point in [2628] your life. If you don't have this, it's [2630] going to be very difficult to get up and [2631] running with all the cold email, um, the [2633] Upwork, and then the community posting [2634] and just the general setting up of all [2635] the profiles I'm going to talk about [2637] after this. So my recommendation for you [2638] is literally itemize your entire [2641] corporate history. A lot of you guys [2642] have worked with various jobs. Some of [2644] you guys have worked with very big [2645] companies. A lot of you guys have [2646] freelance experience. Go through every [2648] single one of those. Like I'm talking [2650] month by month. Open up your email, [2651] okay? And just search what did I send [2653] back in January 2022? How about February [2656] 2022? What was I talking about? Who was [2658] I talking to? And essentially just [2659] itemize a giant list of all of the [2661] biggest hell yeah look at me that you [2664] can find. Okay, I did this for myself [2666] just earlier and I came up with a list [2668] of five. I decided I wasn't going to use [2670] my YouTube well, you know, aside from [2672] tangentially the 70,000. I'm not going [2673] to use like any monetary things relating [2674] to myself. This is what mine looks like. [2676] I scaled my own content marketing agency [2677] to 92k using AI. I've worked with global [2680] names like HP and then I put in brackets [2682] the market cap, which is 36 billion, and [2684] Fujitsu, 38 billion. I run a a YouTube [2686] channel on Make.com with 70,000 [2688] subscribers. That's obviously very big. [2689] I've written for insert really big [2691] company names over here, which are [2692] obviously big. that have been featured [2694] in some high-profile publications like [2695] Popular Mechanics and Apple News. Now, [2697] you're probably looking at this and [2698] you're like, "Well, Nick, I'm a [2699] beginner. I thought that was the whole [2700] point. I don't really have great [2701] experience like this." And that's fine. [2703] Odds are you guys are going to have some [2704] sort of experience. It's not going to be [2706] as what's not going to get me banned on [2708] YouTube. Ah, screw it. You're not going [2709] to have really big dick experience if [2710] you're just right off the bat. And [2712] that's totally okay. Don't worry too [2713] much about that. Just find some [2715] experience. Find some value that you've [2717] driven for some company. You guys were a [2719] salesperson at a business and throughout [2721] the year that you were there, you sold [2724] $25,000 worth of products. Whether or [2726] not that's good compared to all the [2728] other sales people in the industry, that [2729] doesn't matter. You've actually [2730] demonstrated $25,000 worth of revenue [2733] value, and you should be citing it and [2735] saying it wherever possible. So, I [2736] generated $25,000 in revenue for a B2B [2740] manufacturing company. That's fantastic [2742] case study. That's a fantastic piece of [2743] experience. [2745] If you've gone through your whole [2746] corporate list and you have nothing, [2748] okay, you've just squeezed yourself dry. [2750] And to be honest, if you think you have, [2752] you probably haven't actually gone [2753] through your whole corporate experience. [2754] So, pause the video again, go through [2756] top to bottom. I guarantee you'll have [2758] at least one thing that's somewhat [2759] valuable. Unless you're like 12 years [2760] old and you're just starting on the [2762] internet. Now, if you've gone through [2762] your entire thing, you don't have [2763] anything, then what you can do is you [2765] can actually go through my videos, all [2768] of my Make.com videos. I have a Make.com [2770] playlist called Make for People That [2773] Want to Make Real Money. I also have an [2774] NADN playlist called NADN for everyone. [2777] Go through both of these and then get [2779] all of the system blueprints that you [2781] can check out my Gumroad. Download them [2782] all. Okay? Make a couple of minor [2784] changes to them, minor adjustments. [2785] Maybe you swap a module here or there. [2788] You change one thing from GPT to a [2790] claude. Instead of generating Instagram [2792] posts, you generate LinkedIn post, [2793] something like that. Okay? Convince [2795] yourself that you have now materially [2797] improved or added on the system and made [2799] it yours. Okay? Convince yourself of [2801] that. And now when you write your case [2803] studies now you could say stuff like I [2804] built an AI podcast repurposing engine [2807] that produces 10 pieces of content uh in [2810] I don't know 30 seconds. Okay. Then in [2812] brackets you could say estimated savings [2814] per piece. You do a little bit of quick [2816] math and you say I don't know 200 bucks [2818] or something like that. Even this is [2820] enough to let you go on with that next [2822] step. It doesn't have to be perfect. But [2823] the point I'm making is basically [2825] everybody here that is at this point in [2827] the video, you guys have something. [2828] Okay? Whether you have a really big dick [2831] uh accomplishment like you've worked [2832] with Microsoft and you're a four ex [2834] Google or exfang software engineer or [2836] something or something kind of midterm [2838] like me. I scaled my own content [2840] marketing agency to $92,000 a month with [2842] AI. Or you have something a little bit [2844] smaller. I generated some revenue for a [2846] company back when I worked with them a [2847] few years ago. Or if you have nothing at [2849] all, you have at least some sort of [2850] example of automation work that you've [2852] done like I built a system that does X. [2854] I created a system that streamlines Y. [2856] Okay. Once you're at this point and you [2858] have this, just open up a Google doc and [2860] put this somewhere. You are now ready to [2861] proceed with the main outreach step, [2863] which is you need to buy a main domain [2865] and then you need to buy however many [2866] sending domains that you want. So for me [2869] to disambiguate here, a main domain is [2872] something like let's say my business was [2874] called Cirly. Okay? And maybe it is. Who [2876] knows, man? Maybe circles that is way [2878] too bright. Circley is really taking [2880] over the world. I would do something and [2883] you know the the term circley is not [2884] available. I would get something like [2886] circleyworkflows.com. Okay, I would [2888] spend I don't know. I think this is like [2889] $11 or something like that, right? Let's [2892] check circlyworkflows. I would spend $11 [2894] a year on this. Okay, this is going to [2896] be your main domain. After you get your [2899] main domain, what you want is you also [2901] want a bunch of secondaries or sending [2903] domains. Okay, there are variety of ways [2906] to do this. It's very difficult for me [2907] to create a video that is comprehensive [2909] and exhaustive and actually covers all [2910] the different ways to get up and running [2912] with mailboxes because there's there's [2913] probably like 20 or 30 as of the time of [2914] this recording. I'm just going to [2916] mention a couple. Okay. One thing that [2918] you can do is you could prepend, which [2920] means add text to the left of the [2922] domain, or postpend, which means add [2924] text to the right of it. You could [2925] prepend and postpend words like [2929] sendworkflows.com. Okay. Get [2932] circleyworkflows.com. Circleyworkflows [2934] kit. Cirly workflows today. Go circle [2938] workflows. List uh anywhere between two [2941] to maybe five of these if you guys are [2943] complete beginners and then buy those [2945] domains too. What this will allow you to [2947] do is it'll allow you to have a main [2949] domain which is where your brand will [2951] live where you know your your company [2952] will be basically which you'll use when [2954] you build your website later, your [2955] little online business card. Then it'll [2957] also allow you to have a bunch of [2958] subsidiaries or sending domains that you [2960] could send email from without negatively [2963] impacting the domain health or [2965] deliverability of your main domain. And [2967] this is really important and not a lot [2968] of people talk about this, but if you [2969] just start sending email straight from [2970] your main domain, uh, we're going to be [2972] sending a lot of email over the course [2973] of the rest of this video or at least [2974] talking about it, you're going to trash [2975] all of that. And then the likelihood [2976] that you're actually going to be able to [2977] land in somebody's mailbox is very low. [2979] And also, who wants to send a bunch of [2980] proposals only for them to land in spam [2982] later, right? Definitely not me. So [2984] that's the distinction there. Now, this [2986] isn't the only way to do things. There [2987] are a bunch of these third-party [2989] platforms now like [2991] zapmail.ai, [2994] inboxology.com, cheap inboxes, uh, [2996] premium inboxes. There there there's so [2998] many of these. Okay. What these do is [3000] they'll actually go through the [3001] rigomearroll on the process of setting [3003] up all of the cold email infrastructure [3005] for you, usually at a slightly lower [3007] cost than if you do a lot of the stuff [3009] yourself. But keep in mind that when you [3011] do this, you are trusting an additional [3013] third party to, you know, deal with your [3014] email inboxes and stuff like that. And [3016] you also sort of lose out on learning [3018] what the process of doing all this stuff [3019] is on your own. Inside of Maker School, [3021] I personally recommend people still set [3022] them up at least once so that they know [3024] how to do the setup. And you also just [3025] learn a little bit about like, you know, [3026] DNS. You learn a little bit about how to [3028] like verify domains and whatnot. It just [3030] adds to your tool stack. Um, because [3031] there are a lot of things that rely on [3033] these other things. And knowing a little [3035] bit of that is usually good. But check [3037] out those platforms. cost compare if you [3039] guys are um on a budget and find one [3041] that works for you. Okay, after you are [3043] done with that step, what we do is we [3044] create or publish a website and I have [3046] three tools here. When I first initially [3049] came up with my programs, I was only [3051] using web flow to make my websites, but [3052] now you can use lovable, you could use [3054] card, you could use bolt.dev. There are [3056] variety of other platforms that allow [3057] you to do this stuff. To be honest, a [3058] lot easier than my initial pick. And [3060] this is just how technology works, [3062] right? Things get easier over time. So, [3064] what's an example of a website? Well, [3066] just head over to mine. and it's [3067] leftclick.ai. Feel free to scroll [3068] through it and see how I positioned [3069] myself and branded myself. But some key [3071] rules of thumb, I do a lot of roasts of [3073] these sorts of websites in makerschool [3074] and makemoneywithmake.com. General rules [3076] of thumb are you want less text, not [3078] more. Okay? You want the text that you [3080] do have to mean something. You want to [3082] minimize images on the page that don't [3084] actually add to the value of what you [3085] are talking about. You want all of the [3087] buttons on your website to go to the [3088] same place. So, you don't want to have a [3090] contact us form and a calendar and an [3093] email and a phone number and a snail [3096] mail address on your website. That [3097] doesn't really help people that are [3099] interested in contacting you contact you [3100] through their preferred route. That just [3102] kind of confuses people. They don't [3103] really know what to do. Okay. You [3105] generally want some sort of social proof [3106] right off the bat. So, in my case, [3108] remember how I said I was uh featured in [3109] a couple of big publications? So, I just [3111] stick these right over here. After that, [3114] you want some sort of case study or some [3115] sort of like, you know, slap it on the [3117] table and just show people what you're [3118] made of. So, in my case, I've generated [3120] millions for B2B companies like yours [3122] with automation and AI. And then, you [3124] know, most of you guys at the beginning, [3125] the start line will not have case [3126] studies, but you're going to want to [3127] have some case studies in there [3128] eventually. After that, you're going to [3130] want to have some quote unquote reviews [3132] or testimonials or something. Uh, and [3134] then finally, at the end and bottom of [3136] your business, then you can start [3137] talking services. The number one problem [3139] that I see people make is they start [3141] with the services. But to be honest, [3142] nobody cares about the services you [3144] provide. If it says on the header of [3146] your website, or at least implies that [3147] you do AI and automation, most people at [3149] this point, they kind of understand what [3150] automation is. They understand what [3152] automation does, right? They understand [3153] that it's typically involving a no code [3155] tool. And you also have to ask yourself, [3157] okay, how did they get to my website in [3158] the first place? Most of them are [3159] finding it on Google. Most of them are [3161] on the website because they saw an email [3163] that you sent saying, "Hey, I'm here to [3164] sell you AI and automation services." Or [3166] they got got sent to it through Upwork [3167] or maybe something like that, right? So, [3169] it's kind of like know your audience, [3171] right? The most important thing that [3172] people are going to be asking themselves [3173] right off the bat is who is this person? [3175] Why does it matter? And then you know [3176] how can I get in touch? The services and [3178] whatnot you always stick at the end. And [3179] then usually, and this is something that [3181] I do, but usually I will have pricing on [3183] the website. I don't actually recommend [3184] having pricing on your website if you're [3186] a total beginner just because you don't [3187] really know how to price. You also don't [3189] really know how to like demonstrate your [3190] value and it's kind of risky to have a [3192] button that somebody can just click and [3193] then pay you money for, right? I [3194] personally wouldn't recommend it. I [3196] recommend just having some sort of [3197] funnel that goes to a call or whatnot. [3199] So that's it. I always just do onepage [3201] websites for this sort of stuff because [3202] the way that I see websites nowadays is [3204] these are uh business cards, right? [3206] These are literally business cards. [3208] There is nothing really of value on your [3210] website except that it is just a a quick [3213] showcase of who you are. It implies that [3215] you have enough money and enough [3216] resources to put something cool [3217] together. I guess it's a way to showcase [3219] your personality, but for our industry, [3221] to be blunt, unless you're running some [3223] crazy inbound funnel, which most people [3224] aren't, that's all it is. It's not like [3226] something that's actively making you [3227] money. It's just like a check mark. this [3229] person has this requirement of being a [3231] business owner. When I used to go door [3232] to door way back in the day and I was [3234] going 50 to 80 doors per day with my [3236] business partner, we were knocking, [3237] pitching people, and getting rejected [3239] left, right, and center. One of the most [3241] common questions I got from people was, [3242] "Do you have a business card?" "Hey, [3244] where's your business card?" "Hey, that [3245] sounds awesome. I'd love to see your [3246] business card." Did they actually give a [3248]  about my business card? Basically, [3250] none of them did. The only thing is the [3252] only thing they wanted to see was that I [3254] had spent the requisite amount of time [3256] and the requisite amount of money to [3257] actually go and purchase some business [3258] cards. And that was seen as like a way [3260] to prove my legitimacy. Okay. If I [3263] didn't have a business card, people [3264] would just like really you don't have a [3265] business card and you're coming door to [3266] door to sell some services? That's [3268] pretty crazy, man. You know, you're just [3270] seen a lot less legitimately. Websites [3272] are basically the same thing. If you [3273] have a website, you just kind of tick [3274] that box and then the prospect can move [3276] on with their consideration of your [3277] offer. All right. Next up, we need to [3280] set up the platforms that we signed up [3282] affiliates for. So, now that we have all [3283] the infrastructure to do cold email, [3285] which is by far the lowest cost per [3286] acquisition mechanism of acquiring [3288] clients these days, you set up instantly [3289] smart lead. You do some scraping and [3291] then you start sending. So, I have [3294] created several tutorials that show [3296] people how to do this. If you go through [3297] my YouTube videos, I show you how to get [3299] up and running instantly and and and you [3301] know, scrape various data sources. So, [3302] I'm not going to rehash all that. [3303] That'll probably take me three or four [3304] hours. [3305] To make a long story short, this is [3308] instantly that cold email platform that [3310] I showed you the affiliate for. What you [3311] do is you take these mailboxes, okay? [3314] Um, you take the domains, you set up a [3316] bunch of mailboxes on Google Workspace [3318] and whatnot. You connect them to [3320] instantly. If you used one of those [3321] platforms that I was showing you guys [3323] earlier, it'll actually usually just [3324] automatically do it for you and and then [3326] do all of the math and the rigomearroll [3327] in order to get you up and running. [3328] Let's say Zab Mail or Inboxology. After [3330] that, you need to scrape a bunch of [3331] leads. The current number one source [3333] that everybody's using to get this stuff [3335] is Apollo, which in and of itself is [3337] just a scraper that scraped LinkedIn a [3339] few years ago. The reason everybody goes [3340] to Apollo is just because it's way [3341] cheaper than LinkedIn. And you can also [3343] get like structure data like email [3345] addresses and phone numbers and stuff [3346] like that. But Apollo itself is too [3348] expensive these days for most people. So [3350] a bunch of solutions have come up on the [3352] internet that allow you to scrape [3353] Apollo, which again just scraped [3354] LinkedIn. And uh that's what I would [3356] recommend for this purpose. There a [3357] couple of Aify Apollo scrapers. Uh this [3360] one over here, scrape up to 50k leads is [3362] pretty good. It's one that we've been [3363] recommending throughout the program. [3365] It's a $120 per thousand leads. So if [3367] you get 800 email addresses, 700 email [3369] addresses out of those thousand leads, [3370] how much you're really spending per [3371] email address? It's like4 cents or.3 [3374] cents or something like that. The math [3375] works out pretty good in your favor. So [3377] I'll leave that for another one of my [3379] videos. Next up, I would create an [3381] Upwork profile. A lot of people sleep on [3383] freelance platforms like Upwork, but [3385] this is the straightest line path to [3386] getting customer number one. The value [3388] with a freelance platform like Upwork, [3389] if you're unfamiliar, is essentially [3391] through all other sales methods, you [3393] need to know what the customer problem [3394] is. Then you need to know what the [3397] solution that they're looking for is. [3398] And then you also need to somehow prove [3400] that you are the best person for the [3401] job. Now, if you're a beginner and you [3403] don't even know where to start, right? [3404] You've only just added a niche to your [3406] niche discovery checklist and you've [3407] only just started creating all of this [3409] stuff. You've only just started learning [3410] what businesses struggle with and the [3411] various problems they're in. The odds [3412] that you're going to be able to solve [3413] those first two problems, the problem, [3415] the solution, very low. Very, very low. [3417] So what Upwork does is it basically for [3419] a small fee just gives you a bunch of [3421] leads that are looking to have their [3422] problem solved with specific solutions. [3424] Then the only thing that you need to do [3426] is you just need to prove why you're the [3428] best fit for the job. So it basically if [3430] you think about it mathematically it [3431] takes this job of yours as a saleserson [3434] which previously was problem [3437] solution and then why you and then just [3440] eliminates 2/3 of the problem. So this [3443] is the only problem to solve. is the [3444] only thing you need to answer and that [3447] is a much easier job than going through [3449] everything top to bottom learning the [3451] pain points and problems of the niche [3452] and then coming up with a variety of [3454] ways to pitch your solution. Okay, so I [3457] would highly recommend everybody here [3458] get on Upwork. I know a lot of people [3460] sleep on it and a lot of people have [3461] various opinions about Upwork. It's [3462] funny because you know a couple years [3463] ago when I started talking about this [3465] the public opinion on this was just like [3466] no way Upwork's so crap. I can't believe [3468] you guys are doing this. That's not a [3470] real business. You can't start a real [3471] business selling to leads on Upwork. [3473] over that time period, I can almost [3474] confidently say I make more money than [3476] 99.999% of them. And it's all thanks to [3479] this. So, as long as you can get up and [3481] running quickly, you can worry about the [3483] legitimacy of your business model, uh, [3485] uh, you know, how scalable it is and all [3487] the rest of that stuff later. The first [3489] thing you need to do is just get a [3491] couple customers under your belt. Don't [3492] let you know, opinions or some random [3495] crappy comments you've seen on the [3496] internet or somebody's judgmental [3498] attitude towards a platform stop you [3500] from doing so. Okay. All right. So, I [3502] have a bunch of um other steps here, but [3505] we're rounding it out. Um next up, find [3507] communities related to your niches and [3509] join. So, another big thing that not a [3511] lot of people talk about is that there [3512] are variety of ways to source customers [3515] that don't actually involve cold email [3516] and that don't actually involve Upwork [3518] or any sort of paid platform. As of the [3520] time of this recording, a really cool [3521] way to do so is on school. Okay, school [3524] is a community platform. It's where I [3526] host my own community, maker school and [3528] makemoneywithmake.com. [3530] Now, they have this cool discovery page. [3532] What you do is you pump in the niche [3534] that you just, you know, one of the [3535] three niches that you just found. So, [3536] let's say [3537] videographer. Okay, you pump this in and [3540] then you just join a bunch of free [3541] communities. The value of this is what [3543] you're doing when you join a bunch of [3545] videography communities, assuming that's [3546] one of your niches, is you are [3547] essentially going directly to a place [3550] where your target audience just [3552] about their problems all day. So you get [3554] to see exactly what the problems that [3556] people are suffering from that are in [3557] your niche are right now which helps you [3558] solve that issue that I was talking [3560] about earlier that Upwork also solves. [3562] And then two, you also basically have a [3564] captive audience of people that suffer [3566] from problems that you can pitch to. Now [3568] the key in doing this intelligently is [3570] you have to not make your pitch seem [3572] like a pitch. Okay? You need to come [3574] into these communities and there are [3575] many there are hundreds of these [3577] communities just for you know cinema and [3579] videography alone. But you need to come [3580] in these communities. You need to not [3582] create a TV ad. Okay. What you need to [3584] do is you need to build some authority. [3585] You need to build some reputation in the [3587] community by helping people and [3588] answering their questions, not asking [3590] for anything in return. You need to [3592] establish yourself as just somebody in [3593] the community by replying to posts, [3595] engaging with people, sending DMs. You [3597] do this for 15, 20 minutes a day for [3598] several weeks. And then finally, you [3600] start helping people solve concrete [3602] problems, then doing things like DM them [3604] afterwards, asking, "Hey, how's it [3605] going? Can I help you out anymore with [3607] this?" Oh, hey guys. Uh, I just came up [3609] with this really cool solution which [3610] solves this problem that I found [3612] somebody posting about last week. [3613] Actually, you just drag and drop a few [3615] modules in make.com. Here's a quick [3616] tutorial. If anybody uh wants the [3618] blueprint, just send me over a DM. I'll [3619] give it to you guys for free. Um, and [3621] you know, if anybody has any follow-up [3622] questions, just let me know. When you [3624] start getting in the habit of doing this [3625] and you're consistent enough that you [3626] can build uh, you know, some sort of [3628] reputation and then some sort of [3629] memorability, um, communities can end up [3632] being a really profitable lead [3633] generation channel as well. It's just [3635] it's not as direct. It's not a straight [3636] line of path as Upwork and cold email. [3638] So that's kind of step number god where [3640] are we at now? Eight or nine? Yeah, I [3642] think that's step number eight. Step [3645] number nine is okay. So if you think [3646] about what we've done now is we've set [3648] up the minimum viable most of the [3651] minimum viable business. We've set up [3654] our marketing and lead genen [3657] channels. Well, what happens when we [3659] actually get somebody that's interested [3660] in our service? Obviously, we have to [3662] pitch them, right? So what we do next is [3664] we have to set up our sales stuff. Okay, [3666] so this is this is kind of like where [3667] we're at right here actually. So that's [3670] where something like a proposal template [3672] comes into play. The way that this [3673] business model works is basically you [3675] will uh talk to somebody, you will [3677] market, you will generate a lead. When [3679] you get a sufficient amount of interest, [3680] you will get them on a call of some [3682] kind, which is usually called a [3683] discovery call. Sometimes you may have a [3685] second call later on called a closing [3687] call where you actually do like the [3688] closing and the pitching of the service. [3690] Most of the time, in my case, I just do [3691] one. And then at the end of the call, [3693] you know, the person's on board, they [3694] really like what you have to say. You [3695] say something along the lines of, "Hey, [3696] I'll send you over a proposal with all [3698] this information and a little signature [3699] spot at the bottom, which you can pay on [3701] immediately upon signing. Does that [3702] sound good? Okay, great." And then you [3704] go and you actually do it. This is how [3705] it works. This is how like money changes [3707] hands. In order to do that, we obviously [3708] need a proposal template of some kind, [3710] right? So, I have a variety of proposal [3712] templates in um Maker School over here. [3714] Maker School obviously being that [3716] automation community. If we jump on over [3718] to um classroom and then we go to month [3720] one, then scroll down to day number five [3723] and module number three, there are a [3725] bunch of uh well, first of all, I I give [3728] like a step-by-step walkthrough of how [3729] to set up a proposal template in a [3731] platform called PandaOC. I guide you [3733] guys through more or less everything. [3734] Essentially, I'll just give you guys a [3736] quick look through. We start with a [3738] title page. Then you usually have a [3739] problem. You have a solution statement [3742] of some kind. You then have some sort of [3744] scope of work. Then you round it out [3746] with a timeline. Then finally, you have [3748] some sort of pricing where you usually [3750] have a pitch, usually like a signature [3752] line or something like that. Okay, so [3754] you need to set up some sort of proposal [3756] template. I usually do this in Panda [3758] just cuz I've used Panda for a while and [3759] I'm very comfortable with it, but there [3761] are a variety of other great platforms [3762] out there that you guys could use too. [3763] Better proposals is one. I'm not a fan [3765] of DocYign, but Hello Sign is uh is [3767] pretty neat as well. And basically, you [3769] just need something that you can add a [3770] bunch of variables into when you have [3771] somebody that's interested, then send it [3773] within the hour. Okay, then almost last [3775] but not least, we need to set up Stripe, [3777] PayPal, or some other processor, right? [3779] So, now that we're done with the sales, [3780] it's like, okay, how do we actually like [3781] make money with this? Well, that's where [3783] we're at right now. So, we need to [3784] actually set up Stripe, PayPal, or some [3787] other mechanism by which we can receive [3788] funds when somebody does actually want [3790] to pay us. And my recommendation is [3792] Stripe. And I know Stripe isn't [3793] available everywhere. Not everybody can [3794] use Stripe. The trade-off with Stripe is [3796] it's something like I think 3% um [3798] processing fee, which you know, if you [3800] think about it, I mean, in my case, I [3801] made what, [3802] $170,000 last month. Uh the vast [3805] majority of that was processed through [3806] Stripe or a service using Stripe. So, I [3808] paid I [3810] think is my math that bad? I think it [3813] really is that bad. Hold on. I paid I [3815] think $5,100 um last month to Stripe. [3818] That that seems about right to me. So, [3819] you might be thinking, man, that's a ton [3821] of money. But if you think about the [3822] amount of time and energy that Stripe [3823] saves people like me and people soon to [3825] be like you on actually doing the [3827] service, it's crazy. Well, there's some [3828] additional fees you have to pay for all [3829] this stuff. But they do things like [3831] automated tax compliance. They do things [3833] like um automated invoice follow-ups. [3835] They're also just like the cleanest and [3836] the simplest and the best user [3837] experience. And they're very integrable. [3839] So, I recommend them. I love them. I'm [3841] very happy to spend a couple percentage [3842] points in my business if it means I can [3844] make 500% later on because I'm faster. [3846] But you can also use, you know, PayPal. [3848] Okay, PayPal is very popular. A lot of [3850] people use PayPal. Um, I know that a lot [3852] of places in Asia use Payaneer. Okay. I [3855] really don't like Payaneer because every [3857] time somebody sends me an invoice with [3858] Payaneer, I have to go and like validate [3860] all this stuff and I've made all these [3862] accounts and just still doesn't believe [3864] it doesn't believe who I am for some [3865] weird reason. But use Payaneer. You can [3867] do that as well. Um, if you're operating [3869] through Upwork, Upwork actually includes [3870] built-in payment processing, which is [3872] one of the reasons why I like it so [3873] much. So, you know, you don't actually [3874] have to like do this if you get an [3875] Upwork client, although I would [3876] recommend you have it set up in advance. [3877] And I'm sure you guys could tell there [3879] are like 500 other payment processors. [3880] Just Google payment processor and then [3882] insert like the name of your country or [3884] local. Okay. All right. Once you're done [3886] with that, we have literally everything [3888] we need to get going. The one thing that [3891] I'd recommend from here on out is you [3893] set some sort of daily minimum. So daily [3895] number of emails sent, daily number of [3897] Upwork apps sent, daily number of [3898] community posts made. Now, I created a [3900] little template just to show you guys [3901] what that looks like. Um, you could [3903] literally have a Google Sheets activity [3905] tracker with four columns, one for date, [3907] the other for cold email, one for Upwork [3909] applications, one for community posts. [3911] Then if you have other lead generation [3913] mechanisms, well then you can just add [3914] them over here on the right and track [3916] them once a day. It really doesn't have [3918] to be any more complicated than that. I [3920] use Google Sheets tracker systems like [3921] that all the time and I make $170,000 a [3924] month as of the time of this recording. [3925] You do not have to make it any more [3927] complex. The one thing that you do have [3928] to do is you just have to be consistent. [3930] If you're going to do this thing, go [3931] back to the Google sheet at the end of [3932] the day and just fill it in. What you'll [3934] do is the next day you'll come on and [3936] you'll say, "Wow, yesterday I hit seven. [3937] Today I'm going to try and hit eight." [3938] And it functions as an inbuilt [3940] accountability mechanism. Another really [3942] cool thing that you can do with Google [3944] Sheets, so you actually just share these [3945] with three or four of your friends. If [3946] you guys have people that are in your [3948] group that are starting similar sorts of [3949] businesses, well, now you can all have [3951] activity trackers that are [3952] accountability mechanisms and you could [3953] just have everybody go through [3954] everybody's at the end of the day and [3956] just give everybody a thumbs up or [3957] something like that if they did it or [3958] just rag on your buddy if they failed to [3960] hit their 10 Upwork apps for the day. [3962] Okay, very simple, straightforward. Feel [3963] free to build it out like this if you [3965] want or build a better structure, but I [3967] guess my point is keep it simple. You [3968] know, whatever you're going to do. And [3969] last but not least, you now have [3970] everything basically set up for you to [3973] actually go and acquire customers. Okay, [3975] all of these are sort of unscalable if [3977] you think about it, right? I mean like [3978] the number of Upwork applications you [3980] send a day scales with your time [3981] directly. Number of community posts you [3983] make per day does scale with your time [3984] directly. A lot of the cold emails and [3986] looms and custom DMs that you're going [3988] to send if you do any sort of outreach, [3989] these things will scale with your time [3990] directly. But they're also the most [3992] important part of the business and [3993] they're the things that you should be [3993] spending all your time on. So if you do [3995] this enough, and when I say enough, I [3998] mean we have a ton of people in Maker [3999] School that make uh thousands of dollars [4002] in their first couple of months. I mean, [4004] this uh guy Cooper was at day 28 when he [4006] closed what looks to be over a $30,000 [4008] deal plus some equity. Um Barb, I think [4011] closed it in a few weeks. We have a [4012] variety of wins which you guys could [4014] check out here. If you do this sort of [4015] consistent daily outreach and daily [4018] compounding, you will eventually get on [4020] a sales call with a customer. And when [4022] you get on a sales call with a customer, [4024] all you need to do is some variation of [4026] what I'm calling the simplest sales call [4027] SOP currently out there. So, you will [4030] build some rapport. You'll you'll make [4032] some little joke. I always do one about [4033] how I am in Calgary, so I rode a polar [4035] bear to work today because I'm Canadian [4037] and they usually chuckle. You ask them [4039] why they're on the call with you. So, [4041] you literally just say, "Hey, listen. [4042] You get tons of cold emails a day. I can [4044] almost guarantee you that. So, what made [4045] mine stand out?" Okay, this will tell [4048] you literally exactly how to sell them, [4050] what they liked about you, what you can [4052] expand on. Then you ask them what their [4054] problems are. So, what would you say is [4056] the main problem right now? Why you [4058] haven't solved it yet? So, what stopped [4060] you from solving it yet? How much is it [4062] currently costing you? So, let's do a [4064] little bit of math here. This is [4065] preventing you from getting one customer [4067] a week, you're saying? Okay. And how [4069] much money is that customer usually [4070] ordering if this problem didn't exist? [4072] $5,000 worth of product. Okay. So, is it [4075] fair to say this is about $20,000 a [4077] month liability right now? All right. [4079] Awesome. And then finally, how quickly [4080] do you want it solved? Well, I think I [4082] have everything that I need. I guess my [4083] last question is just how quickly do you [4085] want this solved? You know, is this a a [4086] let's do it today thing? Let's do it [4088] next month sort of thing. fill me in. [4090] From here on out, you cover your [4092] experience in brief. So, you just give [4094] them a quick 30- secondond summary of [4095] who you are and why it matters. Then you [4098] screen share and you show them an [4100] example of a solution that fixes their [4102] problem, which you can either build live [4104] in front of them or if you have some, [4105] you know, templates or something that [4107] fit the specific problem. Uh maybe [4109] templates that you've gotten from my [4110] YouTube channel or my Gumroad or my [4112] communities, then you can do so then. [4113] And you just ask them, does this seem [4115] like something that would solve your [4116] problem? If their answer is yes, [4118] fantastic. You can either pitch them [4120] directly. Okay, this will be [4122] $2,895. I could send over an invoice [4124] right now. Or you could send a proposal [4126] with costs, etc. within 60 minutes. [4129] Great. That sounds awesome. Let me whip [4130] together a proposal for you, and I'll [4132] send it to you within the hour. It'll [4133] contain everything you need, plus a [4135] little signature field and even a place [4136] for you to pay an invoice um should you [4138] get to that point. Sound good? Great. [4141] Simplest sales call SOP. Anybody can do [4143] this. Um I'm going to include this in [4145] the description so you guys could take [4146] it and run with it. Obviously, I go into [4148] a lot more detail in my programs about [4150] what the ideal sales call looks like, [4152] but I think that's a highle enough view [4153] that that should let everybody here get [4155] started and make some meaningful [4156] progress. All right. Finally, the last [4159] and I want to say most important part is [4161] we need to iterate. So, you yes you if [4166] you do this, you will definitely get [4168] your first customer. I mean, it's just a [4170] matter of time. Everything that I've [4171] talked about here is not it's not [4173] complex. It's very very simple. It's [4175] difficult to do consistently. And if [4177] you're the sort of person that can build [4178] habits and the consistency and [4179] accountability to do this for a very [4180] long period of time, you will inevitably [4182] be one of the big players on the [4183] internet today. Uh but it's not, you [4187] know, it's not easy. So if you could do [4190] it all day, um doing it all day is not [4192] enough. What you need to do is you need [4193] to iterate. So you need to make it [4194] better. What I mean by this is um you [4196] need to go through the following steps. [4198] And this is just my recommendation. This [4200] is me just doing a bird's- eye view look [4201] at how most of the people in my program [4203] can succeed. and I just, you know, tried [4205] to tailor all my recommendations to [4206] them. But essentially what happens is [4208] you will acquire your first client, you [4210] do a great job, then all you do is [4213] increase prices and service quality by [4214] 30%. And then you repeat. Okay? Then [4217] along the way, you perform what's called [4218] a retrospective, which I'm going to get [4220] into in a moment. And then you do this [4223] to acquire client number two, then [4226] client number three, then client number [4228] four, and so on and so on and so forth. [4230] every route around the wheel. You [4232] basically just charge a little bit more [4233] and then you get better at doing the [4235] service itself, which is why you're [4236] charging a little bit more. Okay, so [4238] this is the circle of life and this is [4240] the circle of an AI automation agency [4243] and this is what I would recommend [4245] everybody get in the habit of doing. One [4246] of the main uh problems that I see in my [4249] communities is, you know, Nick, I'm [4251] charging $500 to $1,000 per project and [4253] I've been doing this for the better part [4254] of last month. How do I get out of it? [4255] Well, literally just you just you just [4256] increase your prices. You just increase [4258] them by 30 40%. You throw them at the [4260] wallet. You see what sticks, okay? [4261] Eventually, you get good enough that you [4263] can pitch much much higher costs. [4264] Eventually, you understand the the [4266] client problems and needs and stuff like [4267] that to the point where that's not a big [4269] deal for you. Okay? But what is this [4271] step right over here? What is this [4272] retrospective? Let me cover it. [4274] Basically, there are three retros that I [4276] like to get people to do if you want to [4278] get in the chain of continuous [4279] improvement and then have your agency or [4281] service or whatever you're really doing [4282] blow up. I focus these on the lead [4284] generation because this tends to be the [4286] biggest problem area for most people. [4287] And then I focus on the actual client [4288] fulfillment as well a little bit. So [4290] there are three retrospectives that I [4292] recommend you guys get in the habit of [4293] doing every time you get a client. Okay? [4295] First is every time that you send out a [4296] bunch of cold emails and that somehow [4298] lands in some sort of business [4299] opportunity. What you do is you [4300] determine the stats. So you count up all [4302] the emails you sent, count up all the [4304] emails that have been opened, you count [4305] up all the replies to those emails, you [4306] count up all the positive replies, then [4308] you count up the calls that resulted, [4309] and then you ultimately count up the [4310] deals. So, you are going to have a [4312] spreadsheet that actually looks like, [4313] you know, sent, opened, replied, [4316] positive replies, calls, then finally [4319] deals. Okay? And you'll do this every [4321] time you do a retrospective. And usually [4323] it'll do something, I don't know, you [4324] might send, let's say, a I'm just going [4326] to be very easy here. A,000 and then 800 [4328] people will open. Open tracking isn't [4330] really big these days. It's kind of [4331] buggy, but I'm putting this in here just [4333] for um I guess posterity sake. Maybe [4335] you'll have, you know, 50 people reply. [4337] That's a reply rate of 50%, sorry, of [4339] 5%. Then maybe of these you'll have 25 [4341] of these be positive replies. From these [4343] 25 positive replies, maybe you'll get 15 [4345] calls. Then maybe out of these you'll [4346] get three deals. Okay? So you have a [4348] spreadsheet that looks just like this. [4350] Then what you do now that you have all [4351] those numbers is you will go through all [4353] of your copy. You'll open up your [4354] instantly campaigns, your smart lead [4356] campaigns, everything that you need. You [4357] actually split test the short copy [4359] versus long copy. You'll split test [4361] little parts of copy. Like you'll you'll [4363] throw in the word I instead of we. [4365] You'll um experiment with being very [4367] blunt but also being more laid-back. [4369] You'll experiment with including assets [4370] in your uh flow. You'll experiment with [4373] including ice breakers in your flow [4374] versus maybe templating it out. You'll [4376] experiment with copying templates off [4378] the internet, templates you've seen with [4379] me and weaving that into your flows. [4381] You'll experiment with taking a template [4382] and then making it very different and [4384] then you know seeing whether or not that [4385] works better. So I guess what I'm trying [4387] to say is you'll just do a bunch of [4388] split testing the actual campaign [4389] parameters itself. [4391] Okay? Then you'll go through your [4393] communications. You'll split test [4394] different sequences. So when I say [4396] sequences, I mean, you know, when [4397] somebody rep responds to you positively, [4399] what do you normally say? How do you [4400] handle that? How quickly do you respond [4402] to that? Do you respond quick enough? Is [4403] it an hour later? Is it 2 hours later? [4405] Is it 24 hours later? Ideally, you [4406] should be responding to positive [4408] inquiries within like a minute or two. [4410] You should be beling notifications to [4412] your phone that cut through any silence [4414] blockers and literally just like respond [4415] right now. It's an urgent critical [4417] opportunity. You should have templates [4418] ready to go that do most of it for you [4419] that allow you to make little changes. [4421] Okay. And finally, one thing that I [4423] didn't mention uh actually right over [4424] here, which I'll just add to [4426] them, is um you also test your [4428] audiences. Okay, finally, once you're [4432] done with that, you say, "Okay, great. I [4434] have a list of learnings now. I'm going [4435] to make those changes." And then you [4436] just keep on going. And you don't, you [4438] know, allow yourself to get so beat up [4440] that your campaign didn't perform very [4441] well or that, you know, you're not doing [4443] as good as you could. All you do is you [4444] just proceed through this loop over and [4446] over and over again every time you get a [4447] new client or I don't know every two [4449] weeks or so, however often you really [4450] feel is necessary. I just caution people [4452] against doing this too quickly. Um, you [4454] know, don't do this daily for instance. [4455] It does not make you better. There's [4456] like a sweet spot and that sweet spot [4458] tends to be every week or two. Assuming [4459] you're doing the steps that I lay out in [4461] my programs, um, you're probably going [4462] to be getting a client every week or [4463] two, which is why I just say do it every [4464] time you get a client. Okay. Same thing [4466] with Upwork. You determine your stats. [4468] So, you'll have a spreadsheet. It'll say [4469] sent. Then it'll say number of proposals [4471] viewed. It'll say number of replies or [4474] responses. It'll say the number of calls [4476] you've done. And then it'll ultimately [4478] say the number of deals. So maybe you [4480] send a 100 proposals, excuse me, maybe [4482] 40 of these proposals actually get [4484] viewed. Maybe 20 people actually reply [4486] to you. Maybe you have 10 calls. And [4488] then maybe you close with three deals. [4490] Okay. From here, you'll go through the [4492] profiles. You'll test pictures. You'll [4494] test above the folds. You'll test [4496] videos. You'll test proposal CVs. You'll [4498] test literally everything that you can [4500] on the profile. You'll test changing all [4502] this stuff up. You'll test changing that [4503] up. You'll test changing the background [4505] color. Doing the online for messages [4507] bubble, changing the title, changing the [4509] specialized profiles here, showing your [4511] earnings versus hiding your earnings. [4512] Okay. You'll do uh your portfolio. You [4515] will I can't believe I still have that [4517] on. I've made just about $500,000 with [4519] upper cuts. You change your video. [4520] You'll change your uh portfolio blog [4523] posts and the writing and the the [4525] summary of your work history and the [4526] hours per week that you're available and [4528] all that stuff. Okay? You'll go through [4529] this and you'll basically just try a [4531] bunch of stuff and see what works. [4534] Feedback is always better than [4537] planning because feedback involves you [4539] interfacing with the real market and [4541] that's what we're going for. Then again, [4543] go through your comm split test [4544] different sequences and just see what [4545] sort of communication methods are [4547] ultimately responsible and you getting [4548] the client what you can do better. And [4550] then finally, ran it out with [4551] fulfillment retrospectives. So you have [4553] a couple of stats here that not a lot of [4554] people are aware of. Um but the big ones [4556] that I find important are sorry I said [4560] number of calls. I believe what I meant [4561] to say [4562] was number of [4564] projects. Uh so uh you know you'll have [4568] a spreadsheet that looks something like [4569] this. Projects you'll have cycle time. [4571] Cycle time is how long it took for your [4574] project to enter your queue your your [4576] your desk basically and then leave and [4578] then be done. Okay. You will get number [4580] of revisions. [4582] You will get the cost of the project, [4584] you know, cost of goods sold. And you'll [4586] just have this little spreadsheet. Maybe [4587] you got three projects this month. Maybe [4588] on average your cycle time was 3.5 [4590] weeks. That's pretty long, not going to [4592] lie. Maybe on average clients wanted [4594] four revisions. Well, that's a lot of [4595] revisions. Maybe on average your [4597] internal cost per project was, I don't [4599] know, [4600] $500 or um let's say your average [4603] project was $3,000, you know, maybe [4604] about 16%. These are all pretty high, [4607] right? These then give you everything [4609] you need to make them better the next [4613] generation essentially. Okay. Then go [4615] through all of your client comms. Go [4617] through every message sent, every call [4619] you've done, every email, etc. Then [4621] identify ways to improve. Some very low [4623] hanging fruit that I frequently see, [4624] people aren't contacting their clients [4626] enough. People will usually get a deal [4628] and then they'll just disappear for a [4629] week. Clients really like it when you [4631] give them updates every couple of days. [4632] One of the simplest and straightest ways [4634] that I basically doubled my bottom line [4636] was literally just setting a daily [4638] period where a client could reach me [4639] anytime that they wanted than using that [4641] daily period to give them updates. It [4642] was took it took me like 5 minutes per [4644] day, not even. And I made vastly more [4646] money and a vastly lower turn as a [4648] result of doing it. Okay. Schedule [4650] something in your calendar daily client [4652] update. Just go through top to bottom. [4654] You know, what have I done for this [4655] person? What have I done for that [4655] person? What have I done that person? [4656] What have I done for that person? When [4658] you um also schedule an update, when you [4659] actually have things to share with the [4660] client, it shows that you haven't [4662] forgotten about them, which is a big [4663] thing that they care about. Is this [4664] person just writing me for free and not [4666] actually doing any work? So, do tons of [4668] updates, give them deliverables, give [4669] them visuals, and then I don't know, [4670] maybe experiment with uh ways of getting [4672] everything up front for AI automation. [4674] Usually, that's stuff like 2FA, stuff [4676] like codes, stuff like credentials, [4679] stuff like API access, and stuff like [4680] that. A lot of people actually leave [4682] this till the end and they got to call [4683] the client 5 million times over the [4685] course of the next 3 weeks to drip out [4686] access. Now that you guys have your [4687] business infrastructure set up and now [4688] that you understand what niches are [4690] worth targeting, it's time to see all [4691] this stuff in action. You've learned the [4692] theory. So, let me show you exactly how [4694] it works in the real world by getting up [4695] and running with the campaign. The next [4697] section we're going to talk about is [4698] totally different from everything we [4699] covered so far. So, instead of teaching [4701] concepts, I'm actually going to start an [4702] AI automation service from scratch. My [4704] goal is I don't just want to talk about [4706] stuff. I actually want to show you and [4708] then I'm going to build everything live. [4709] So, I'll do the niche selection live. [4710] Then I'll do the lead scraping [4711] infrastructure. I'll do the [4713] copyrightiting. I'll do the outreach [4714] campaigns. and I'm actually going to [4715] generate real interested prospects. So, [4717] this is not theory. This is not a [4719] hypothetical. You are literally about to [4720] watch the entire process unfold in real [4722] time. I'm going to give you guys a [4723] complete copy paste playbook you can [4724] follow to get your first paying clients [4726] in AI and in automation. By the end of [4728] the section, you guys will see exactly [4729] how accessible this business model [4730] really is. Let's get into it. In a [4732] nutshell, this is what we are going to [4733] do today. We're going to start by [4735] finding and choosing a high demand AI [4737] service the clients are pretty desperate [4738] for right now. I'm then going to set up [4740] my lead scraping and outreach [4741] infrastructure in just a few minutes. [4743] Then I'm going to create an irresistible [4745] offer that practically sells itself. I'm [4747] going to generate qualified leads using [4748] two proven methods that cost very little [4750] in the grand scheme of things. And then [4752] finally, I'm going to generate my very [4753] first interested leads using these [4755] methods. So, doesn't need to be scary, [4756] doesn't need to be intimidating. I'm [4758] going to give you guys everything you [4759] need. Let's get started and make some [4760] freaking money. Okay, this is going to [4762] be the document I'll do everything off [4764] of. And this is the road map. I'm going [4766] to start by picking three niches and I'm [4768] going to determine two high demand AI [4770] services per niche to solve real client [4772] problems in them. I'll even show you how [4774] I do a little bit of research. After [4775] that, we're going to set up lead [4777] scraping and outreach infrastructure. [4778] This is a painoint for a lot of people [4780] that are watching this video, so I'm [4781] looking forward to solving that. Then, [4782] we're going to create an irresistible [4783] offer using a simple copyrighting [4785] formula that I've talked about, but I [4786] don't think a lot of people have seen. [4787] Then, we're going to actually generate [4788] real qualified leads. Then, we'll chat [4790] in next steps how to actually, you know, [4791] like send a proposal and and close the [4793] deal and so on and so forth. Okay. So, [4796] you're going to see everything in this [4797] video from start to finish. I've named [4798] this watch me start and sell an ASA [4800] service in just X hours. I don't know [4801] what the X is yet because I decided to [4803] record it before I did all the stuff, [4804] which I think is the best way to do it. [4806] So, let's get up and running with just [4807] the very first step, which is picking [4809] three niches. So, I'm going to be [4811] relying on some of the templates in [4812] Maker School, which is my automation [4814] community, which basically just covers [4815] how to do all this stuff. So, the very [4817] first thing I'm going to do is go over [4818] to month one, and then I'm just going to [4820] find some niches. Okay. So, what I do in [4822] day two is um I have a little document [4825] over here called the niche discovery [4826] spreadsheet. And what this document is [4828] is it's literally just a bunch of [4830] possible niches that you could pick for [4832] this business model. Then a bunch of [4833] different service lines that I could [4834] pick for this business model. Then I [4836] literally just mash them together to [4837] give you a ton of different positioning [4839] statements. And a positioning statement [4840] is just what I call something of the [4842] form I build X for Y. So X is the thing [4845] that we build and then Y is the business [4847] type that we are approaching. Okay. So I [4849] don't actually know what niches I'm [4850] going to pick yet. The reason why I [4851] haven't thought about this is because I [4852] wanted to put myself in as similar a [4854] position to as many of you as possible. [4856] So, I'm just going to do a little bit of [4857] brainstorming out loud and maybe we'll [4859] cut it so it's not just me staring off [4860] into the void. When I'm thinking niches, [4862] I'm thinking digital businesses that I [4865] can source leads for very easily using [4867] automated methods. I'm also looking for [4869] businesses that have pain points that [4870] I'm pretty good at solving. And so, [4872] historically, one of the main strengths [4873] that I have is like marketing, lead [4875] genen, growth for the most part. So, I'm [4877] probably looking for businesses that I [4879] can realistically help with their [4880] growth. So, there are a variety of [4882] different business types here that I [4884] think that I might have some prior [4885] experience with. I might have some sort [4886] of unique understanding of. And what [4887] I'll do here is I'll just I'll just pick [4888] a bunch. Hello to the anonymous panda [4890] that is currently on this page with me. [4892] So, like I think website developers are [4894] okay. I'm also looking for niches that [4896] have money to spend, right? So, I could [4897] do some sort of like website development [4899] agency. One niche that I've tackled [4900] before and I've had reasonable success [4901] with is the creative agency. And some [4903] creative agencies do website [4904] development. So, why don't I bold this? [4906] I can do sales with uh website [4907] developers actually, which is nice. Let [4909] me scroll through here and see more. H [4910] IT consultants, e-learning consultants. [4913] H just trying to get some ideas here. [4914] You know, maybe I'll do video editing [4915] agencies as well cuz I've actually [4917] worked in video editing. So, I sort of [4919] have like some unique understanding of [4920] the problems that they face. And then h [4922] let's see here. I want to keep this [4924] pretty easy and pretty fast. I don't [4925] really want to spend too much time [4927] thinking about the niches. I just want [4928] to get the 8020 in front of me and then [4929] I'll move forward. Probably do some [4930] content writing firms as Uh, no. I I [4932] don't think I want to do content writing [4934] firms cuz then I'd have two that I've [4935] run before. I've run a video editing [4936] agency and a content writing agency [4938] before. I don't want anybody to accuse [4939] me or I I want to beat the allegations [4940] that I'm just doing businesses that I've [4942] already operated. So, let me think what [4944] else we got. Why don't we do real estate [4946] agents? A lot of people chatting about [4948] real estate agents now. That looks [4949] pretty good. Okay, so website [4951] development. I'll do video editing and [4952] then I'll do real estate. Okay, so I'm [4954] going to head back over here. I'm going [4955] to have my three niches laid out. We are [4957] going to do website agencies. So, I [4959] might just do creative to be honest. A [4961] creative agency might be a better way to [4962] conceptualize this, but we'll see. I'm [4964] just going to put this down for now and [4965] then we'll figure it out later. Then [4967] we're going to do video I'll just say [4969] video editors for now plus real estate. [4972] Okay, that seems pretty easy to me. We [4974] got three niches. We can actually [4976] already move on to the next step. And [4978] the next step is us going to be [4980] determining two high demand AI services [4982] per niche that solve real client [4984] problems. Okay, so this is another step [4986] where a lot of people get kind of caught [4987] up. they don't really know how to go [4989] about actually determining what services [4990] to sell to people and that's totally [4992] okay. I don't have any like built-in [4993] resources for this. But what I'm going [4994] to do is just show you a simple [4995] framework that I always use when you [4996] know trying to figure this stuff out. So [4998] assuming that I had no knowledge of [4999] website agencies and video editing and [5001] real estate, how would I go about [5002] actually getting it? Well, I would [5004] probably first turn to communities or [5006] Reddit threads or basically areas on the [5008] internet where a bunch of the people in [5010] these three niches congregate. So what [5012] I'm going to do is I'm just going to [5013] find some communities where I've seen [5014] website agencies go in. maybe like a [5016] website developer community or something [5017] like that. I'm going to join a bunch and [5019] then I'm just going to read top to [5020] bottom and see what some of the problems [5021] that they face are. So, I'm going to [5022] head over to [5023] school.com/discovery. School is just the [5025] main community platform right now. So, [5027] I'm just going to go here and then I'll [5028] type in website and let's see. Looks [5030] like getting tons of ads. So, I think [5031] the term website is probably not the [5033] term that I want to use. I imagine [5034] website is just like a general purpose [5036] term that like everybody has somewhere [5038] on their page and the search feature [5039] here is just pulling them up. So, I'll [5040] go website developer maybe. Okay. [5042] Software developer academy, Dev Builder [5044] Club. There's the AI automation agency [5046] hub. That's actually uh basically what [5048] we're talking about. So, I'm not going [5049] to do that. Web agency accelerator. You [5050] see this? This looks perfect. This is [5052] exactly the sort of stuff that we want. [5053] Awesome. What else? Web designers [5055] collective. That's perfect. Exactly what [5058] we're looking [5059] for. Cyber Value. No. Real estate [5063] developer. Not yet. Software engineering [5065] accelerator. Next level web design. Oh, [5067] this looks good. I'm looking for stuff [5069] that has to do with business, right? [5070] Like I don't just want a bunch of people [5072] building websites or whatnot. kind of [5073] want people selling stuff so that I [5074] could see what their problems are. Okay, [5076] but anyway, what do we got? So, it looks [5078] like one of these communities actually [5079] just allows us to read through all the [5080] posts without actually being part of it. [5082] So, what I'm going to do here is I'm [5083] just going to read through this and then [5084] I'll make my determinations afterwards. [5086] So, what am I looking for first and [5087] foremost? Well, first of all, actually, [5088] I am looking for wins post. So, it looks [5089] like there's a category called wins [5091] where this guy Tyler just sent 900 cold [5092] DMs in the last two days, closed two [5093] deals. That's pretty sweet. So, I like [5095] that. Looks like he's also using [5096] automation which is very cool. Nice. [5098] There's a lot of questions about prices. [5099] What sort of price should I charge? [5101] Right. What platforms am I using? So, [5103] what I'm looking for really to be honest [5104] is I'm looking for I'm looking for [5105] questions. So, I see that there's a [5107] questions category. I'm just going to [5108] pump through here and I'm looking for [5109] questions because I want to see what [5110] sort of questions that like the average [5111] website developer has. And this is just [5113] going to teach me more about the niche. [5114] I'm going to learn more about how to [5116] come up with a service that might [5117] effectively answer some of these [5118] problems. So, what's a big question I [5119] see? How do I find clients? Obviously, [5121] how to get clients, obviously. How to [5123] get hired? Obviously, agency versus [5125] freelancing. That's interesting. What [5127] sorts of clients should I pick? [5128] National, international, different [5130] platforms. How did you get your first [5132] client? So that's big. How to acquire [5134] new clients. So hopefully you guys are [5136] seeing that you know one of the main [5137] issues here is acquiring your new [5138] clients. And so like a big problem [5140] statement first of all and this honestly [5142] you know really got to be a rocket the [5143] scientist to figure this out. But like [5144] some real client problems are basically [5146] all these niche are more clients. Okay. [5148] So actually let's frame this as a [5150] problem. Not enough clients. You know we [5153] want more clients. That's problem number [5155] one across basically every niche. So [5157] that's a good problem that we could [5158] solve with a couple systems already that [5159] are coming to mind. But I'm not going to [5161] stop there. Let me do a little bit more [5162] research. Outsourcing got too many [5164] clients. Doesn't seem like a very common [5166] issue to me. Legal registration. Go [5169] highle website. People asking about [5170] specific design stuff. Very cool. To [5172] niche down or not. SEO. SEO is cool. We [5175] could do like an SEO system. We could do [5177] some sort of like add-on for website [5179] developers. It's like, hey, you know, [5180] after you design a or build a website, [5181] you could also just like generate 100 [5183] blog posts for them completely free of [5185] charge or something like that. That's [5186] kind of cool. I like that. I like that [5189] idea a I think that could have some [5190] merit, you know, like content generation [5194] for clients, right? Clients saying SEO. [5197] Yeah, really glad I found that. I was [5198] not expecting this at all. Let's just do [5200] website devs first and then I'll do the [5202] other ones. Okay, so obviously a little [5203] bit of business knowledge helps you do [5205] this faster. Kind of understand the main [5207] problems that customers are suffering [5208] from. But I'll be honest, a lot of [5210] people have tried to automate this step. [5211] I think that automating the steps is [5212] probably the silliest thing that you [5213] could do. Like you actually [5214] understanding a customer problem is [5216] directly correlated with your success as [5217] a business owner. Like if I think about [5219] just the number one skill or handful of [5221] maybe top three skills that have made me [5223] a successful business owner. The biggest [5224] one is probably just understanding [5226] customer problems like reading through [5228] people bitching and moaning about their [5230] customer problems and stuff like that. [5231] So this is not something that I would [5232] automate. Like sure maybe I'd ask chat [5233] GPT what are some problems businesses [5235] face but I you know I wouldn't just take [5236] all that at face value. I'd actually go [5238] really deep. I'd actually like try and [5239] drink directly from the faucet if that [5241] makes sense as opposed to take some [5242] opinion or whatnot. Go and actually find [5244] problems that people are facing. So [5245] anyway, I found two, right? We found um [5247] not enough clients content generation [5248] for clients SEO or whatever. That's good [5250] enough. I'm going to move on to the next [5251] niche, which is video editors. I'm just [5253] going to type in video. This is [5254] interesting. We'll open up that [5256] one. Scale with video. That's [5258] interesting. Educate with video. H get [5260] started with video. Maybe. Maybe we'll [5262] go [5265] editing. Editing lab. Editing layer. [5268] [Music] [5270] Editology. Short form training. Could I [5272] type in videography? How about that? [5274] That's cool. Wedding filmmaker. I guess [5276] you got to pay a thousand bucks for [5277] that. So, I think I'll leave that out [5278] for now. Wealthy filmmaker is cool. That [5280] sounds good. All right, let me just see [5281] how many of these I have direct access [5283] to right off the top. Looks like I only [5284] have one. Art FX. The rest of these I [5286] got to click a join button. So, just for [5287] the purposes of brevity, I'll just go [5289] through here and we'll start. So, [5290] everybody's talking about cold outreach [5291] again. That's cool. Looks like most of [5293] this community is this person Arthur [5295] just posting. So, this is not seeming [5296] like a very good community to start if [5298] I'm honest. Usually, you'll find that [5299] like some of these are just people's [5300] business models. They're like building a [5302] funnel. Okay, so some people are [5303] actually asking for videographers in [5304] specific areas. Okay, people are asking [5306] some pretty basic questions. People are [5308] advertising. I got fired from working [5310] with Gary Vee at Vayner Media. Wow, [5311] that's interesting. Okay, so color [5312] grading presets. That sounds like a [5314] pretty interesting problem. So, a lot of [5315] people want templates, out of the box [5316] templates and stuff, right? Hm. I wonder [5317] if I could solve that with automation. [5319] What are the simplest templates to get [5320] or whatnot? Hey, I'm a automation [5323] agency. They work specifically with [5324] video editors and I wanted to give you a [5328] big list of all the best LUTs and [5329] templates and stuff right out of the [5331] box. That might work. I'm not entirely [5333] sure. People are posting their videos. [5336] I'm not seeing too many problems here. [5337] Okay, so I'm not seeing much success [5338] here. I'm just going to go to Reddit [5340] video editor subreddit. Let's try that. [5342] See, there's video editing here. There's [5344] editors. There's video editors. Video [5345] editing requests. Let me just jump [5347] through this really quickly. See what we [5349] got. I'm really outing my uh myself [5352] here. Leblanc [5353] [Laughter] [5355] mains. [5356] Yep. Been crushing some League. I'm just [5359] going to go to top really quickly. Just [5361] see top post for today. Alt tab all [5363] these. People are looking for specific [5365] help. This looks more technical. [5366] Probably not what I'm going for. Let's [5368] move on. This looks more like almost [5370] political. Ah, here we go. Video [5372] editors. This is like a smaller [5374] community about video editing. Longtime [5375] editors struggling to find freelance [5377] clients. Let's um open up this thread. [5378] Read a little bit. Think I'm doing so [5381] much wrong. Cool. Let's see what this [5383] person's worried about. Obviously, there [5386] are a few people that are just talking [5387] shop and how do you make a living? [5389] That's that's a great question. Cool. We [5392] should be able to get some juice here. [5393] Help with my [5395] portfolio. Okay. [5398] H full-time position. Finding clients [5400] has never been my [5402] forte. It's a wrap. This person's just [5405] talking about how tough it is. That's [5407] actually pretty good though because when [5408] you have really negative nancies like [5410] this, it a lot of the time like shows [5411] the fears that the niche is facing. Even [5413] TV, it's over because of automation. [5415] Well, that's unnecessary. I make a [5416] living with this. Yep. No jobs right [5419] now. Okay. Well, that one is obviously [5421] not enough clients. That's the main one. [5423] What you'll see is they're all kind of [5424] together, right? I mean, I already know [5425] that this is a major problem for real [5426] estate, so I'll just write not enough [5428] clients as well. Just insanely clear. [5430] All right. Well, yeah, that's all I got [5431] for video editing. If you joined all of [5433] these communities, kind of went really [5434] deep into them. I'm sure you'd find [5436] significantly more concrete problems. [5438] Let's now do real estate. Your real [5440] estate agents, global real estate [5441] agents. That looks great. Real est99 a [5444] month. Probably not going to work for [5445] me. Let's um just filter this. So, for [5448] English, I don't think we can filter by [5449] free, can we? No. Okay. Another issue [5452] I'm seeing is busy work. When I say busy [5455] work here, I mean kind of mundane things [5457] like following up. A lot of the time, [5458] real estate agents, they make their [5460] money just by being in front of people [5462] enough like at the right times that when [5464] somebody or somebody that they know is [5465] interested in buying or selling a [5466] property or something, it's like, "Oh, [5467] you know, I just remember hearing about [5469] XYZ person 2 days ago. Let me send them [5470] a message." So, I think following up is [5472] probably a big problem point and just [5474] basic busy work and whatnot. I could [5475] probably come up with some systems to [5476] solve that. All right. So, as you guys [5478] can see, uh, am I like a rocket surgeon [5480] here, you know, niching super hard down [5482] into the specific issues that these guys [5484] are facing right off the get- go? No. I [5486] don't need to have the best problems [5488] right off the bat. What I'm going to do [5489] is I'm going to start talking to [5490] customers. I'll worry about figuring out [5492] like the nuanced natures of all these [5493] problems afterwards. Okay, we're just [5495] going to frontload the actual [5496] conversations with the business owners. [5498] We'll worry about everything after we're [5499] already up and running. So, this is [5500] sufficient for me. Okay. Now, after [5502] this, I'm going to have to come up with [5503] some high demand AI services. Now, you [5505] know, I have the problems. So, why don't [5507] I just list some services at the top of [5508] my head that I think could solve things. [5510] Okay. So, we'll have three categories. [5512] And I'm just going to aim for two [5513] services each. And they don't [5514] necessarily have to solve these [5515] problems. is one for one. We'll just [5516] come up with two each for three. So like [5518] let's just do website [5520] devs/creative agencies. All right. So [5523] the first major problem as we saw was [5525] not enough clients, right? So the not [5527] enough clients is the main problem. [5529] Well, what's the solution to not enough [5530] clients? Well, one of the simplest [5531] things that I sell all the time is cold [5534] outreach system. There are variety of [5536] different cold outreach systems you [5537] could sell. But I don't even know what [5539] the shape of this is going to look like. [5540] I'm just going to get some cold outreach [5541] systems in front of my customers and [5544] I'll worry about exactly how to do it [5546] afterwards. Okay. But yeah, cold [5548] outreach systems are really big. When I [5549] say cold outreach systems, I just mean [5550] like scraping systems, email systems, [5552] systems that allow us to pump things [5554] into like a cold email platform. [5556] Basically the same system I'm going to [5557] be building to get myself clients and [5559] then pitching that to other people. So [5560] very meta, very much like using cold [5562] outreach to sell cold outreach for [5563] people, but it works really well. Next [5565] one is content generation for clients. [5566] And so I could absolutely see, you know, [5567] some instant content generation system [5569] for the websites that you just make for [5571] a client. Like think about this, how [5573] cool it would be if it's like you [5574] already make websites as part of your [5575] whole thing. Imagine if you just had a [5576] single form or like a button that you [5578] could press or something that just [5579] immediately generated you 100 blog [5581] posts. And then you just took that added [5582] that to your client website and you [5583] said, "Hey, by the way, I already loaded [5585] this up with 100 blog posts for you, [5586] right? To simulate activity or whatnot." [5588] Very simple and easy add-on, which I [5589] think would uh probably be pretty cool [5591] and I'm interested in seeing how I how I [5592] might solve that. So these look [5593] sufficient for me. I'm not going to [5594] think too hard on it. What we need to do [5595] after this is transform this into like [5597] an offer for cold email, but that's [5598] okay. Let's do the second niche now, [5599] which is videography. This might take me [5601] a little bit more time. But let's say [5603] right off the bat, I'm just going to [5604] sell cold outreach systems to these as [5606] well because we just saw how do we get [5607] clients? How do we get clients? We can't [5608] get clients. Clients don't exist. Uh, [5610] you know, this whole business model is [5611] dead. So, I probably sell some cold [5612] outreach systems to them, too. These [5613] cold outreach systems in particular will [5615] take a different approach than website [5616] devs, though. It's going to look a [5617] little bit different. I think we could [5618] probably do like a search intent system, [5619] which is like a job scraper, basically. [5621] So, you know, we'll scrape a bunch of [5623] jobs for people that are looking for [5624] videographer to become in in-house and [5626] then we're just going to add them to [5627] some system and then we'll send them out [5628] to people that are hiring for that role. [5630] We're basically going to say, "Hey, I [5630] know you're looking for somebody to hire [5632] for XY andZ role." I thought it'd be a [5633] little proactive, so I'm actually just [5634] going to send you a bunch of value right [5636] up front. I'm happy to do like a sample [5637] edit for you or something like that. [5639] 100% free. Just send me over source [5641] material what you want and I'll whip it [5642] up for you within 24 hours. This would [5643] be a really good cold outreach system. [5645] I've seen a lot of people do something [5646] so it's actually how one of my video [5647] editors sold me. Okay, so what else are [5648] we going to do? Hm. Videography. [5650] Videography. videography. We could [5652] probably sell clipping. So, I see a lot [5654] of long- form videos coming in. What we [5656] could do is we could offer videographers [5658] a way to very quickly and easily clip. [5660] Or maybe they upload the transcript of [5662] the video to my service and then my [5664] service automatically identifies [5666] timestamps. What else do video editors [5667] usually do? Hm. Exports. That's a big [5670] chunk of their workflow. Templates and [5672] whatnot, that's a big issue. I really [5674] like the idea of a clipping service for [5675] long form. Let's say a video editor is [5677] working with somebody for long form. You [5679] could very quickly and easily repurpose [5680] all that and make social media posts for [5681] them. So we'll either do clipping [5684] service. A clipping service is literally [5686] just something like opus clip or ve or [5688] goldcast. What these are are you [5691] basically chunk in like a long video and [5693] then it just generates a bunch of short [5695] form ones. Same thing with V. Pump in a [5697] long video generates a bunch of short [5698] forms ones. Same thing with Opus, right? [5700] Pump in a long one makes a bunch of [5702] clips like this automatically. So that's [5704] pretty cool. Um there's obviously a lot [5706] of value there. So I think we should [5707] probably do something like that. [5708] clipping service and or let's do like a [5711] content generation or maybe we make a [5712] bunch of Instagram posts or something [5714] about it. Okay, and now let's do real [5715] estate. And what did we have? We had not [5716] enough clients. So, we could totally do [5718] some sort of email scaleup system. This [5720] is going to depend. Real estate's a [5722] little nuanced, right? There's like the [5722] buy side, there's the sell side. So, I [5724] might be selling a buy side system, but [5726] then that'll have like a fundamentally [5727] different meaning or purpose than a [5728] sellside system. If you think about it, [5730] a sellside system is basically like how [5731] do we get listings in front of as many [5732] people as possible. So, we could build a [5734] system that like, I don't know, [5735] automatically post it on a bunch of real [5736] estate agency websites or whatnot. Uh, [5738] that seems kind of lame to me, and I [5740] don't really think I could realistically [5741] do that in a short period of time. So, [5742] we could look for people to sell homes. [5745] Maybe what we do is we set up a pipeline [5747] for real estate agents that are looking [5749] to work with people on the sell side, [5751] and then all they do is they just supply [5753] the leads, and then this system, you [5755] know, has really high response rates, [5756] and everything's like super high [5757] quality. I I think probably some sort of [5759] like email BTOC system would make sense. [5762] I don't know about sourcing the leads, [5763] but sending them out. And then I think [5765] we could probably do some sort of [5767] automated [5769] follow-up/reactivation system for them. [5771] Again, I'm just these are all off the [5772] top of my head. We're going to see how [5773] these evolve. But as a first pass, that [5775] looks pretty good to me. Do I know [5776] exactly how all this stuff's going to [5778] end up? Nope. I'm just pulling some [5779] stuff out of my ass. I'm like pretty [5781] certain. I'm like 50 to 70% certain. [5782] Yeah, I think this might have some value [5783] for some people. That's enough for me. [5784] I'm just going to put it on the page, [5786] put together some offers, send it out to [5787] a bunch of people, and I'm going to hear [5788] their feedback first before I try and [5790] plan uh for every eventuality. Okay. All [5792] right. So, now that we have a bunch of [5793] these systems, what I'm going to do is [5794] I'm going to set up lead scraping and [5795] outreach infrastructure that I'm going [5796] to use to source people in all of these [5798] audiences. Then once I've done this, I'm [5800] actually going to go and I'm going to [5800] copyright and then start sending out or [5802] blasting out outreach. So, we're [5803] actually getting pretty far already and [5805] I think it's only been what, like 25 or [5806] 30 minutes or something. Pretty simple, [5808] pretty straightforward. So, setting up [5809] lead scraping and outreach [5810] infrastructure. Well, there are variety [5812] of different ways to do this. Here's [5813] what I'm thinking of doing. Okay, just [5814] going to go all the way down here to [5816] make it a lot easier. What I'm thinking [5817] of doing is any sort of lead scraping or [5819] sourcing system is first we have to [5821] source leads. Then we have to scrape the [5823] leads. And then nowadays what we need to [5825] do is we also need to enrich the leads [5827] with some sort of personalization. Okay? [5828] So it's sort of like a three-step [5829] process. So what I'm going to do since [5831] I'm doing cold outbound is I'm going to [5832] start by sourcing leads. And there are [5834] variety of different ways to source. [5835] Easiest one is definitely Apollo right [5836] now. And I don't know how long Apollo is [5838] going to work. So I'm just going to hop [5839] on that for sure. You could also do like [5840] sales nav which is LinkedIn sales [5842] navigator. You could also do like job [5844] posts. That's pretty big. A lot of [5845] people doing job posts. After that, you [5847] scrape using a service usually like [5848] Amplify or some custom scraper you [5850] built. By the way, you could also do [5851] like a directory or something. If you [5853] find a specific directory of people, [5855] maybe a directory website. You could [5856] build your own custom scraper, scrape [5858] them, and your lead list would be way [5859] higher. But we're going to scrape these [5860] using Appify. And then at the end, I'm [5862] just going to enrich these. The way I'm [5863] going to enrich them is I'll probably [5864] like AI personalize, but I'm not going [5865] to AI personalize all of them. I'm [5867] actually going to just like try getting [5868] by with, you know, procedural variables [5870] and then AI personalization after. And [5873] then kind of the fourth step is we need [5874] to pump them into like infrastructure. [5876] We actually need to send, right? So, the [5877] main sender that I'm going to be using [5878] today is called Instantly. Instantly is [5879] just a very quick and easy way to get up [5881] and running with mailbox infrastructure. [5883] What I'm going to do is I'm going to [5884] source a bunch of leads, scrape them, [5885] and then enrich them first. That's kind [5886] of like, you know, what we're going to [5887] do now. Then in a few minutes, um, after [5889] I'm done with that, I'm going to start [5890] uploading them to a platform instantly. [5892] And then after I'm done with that, I'll [5894] actually queue them up and we'll start [5895] sending the emails. Okay. All right. So, [5896] very first thing I'm going to do is I [5898] need to start sourcing leads. I see [5899] there are variety of ways to do so. I'm [5901] probably just going to do Apollo cuz [5902] that seems pretty easy to me. Maybe I'll [5903] do job post, too. We'll see. But how [5904] would I go about this? I would actually [5906] just go Apollo.io. I'm just going to [5908] create uh three audiences here. First [5910] are going to be website development [5911] agencies or creative agencies. The [5913] second are going to be videographers and [5915] the third are going to be real estate [5916] agencies. You can see, you know, I work [5917] with creative agencies a lot, which is [5919] why I literally pumped in the search [5920] term. This is from the last time I ran a [5921] similar search. So, creative agencies [5923] sound pretty good to me. Um maybe what [5925] we should do is we should have creative [5926] agency and then we could also add a term [5928] website here. Yeah, I could probably do [5930] that. I wonder if I type in creative [5931] agency and website. H maybe like website [5934] developer. Wonder if that would work. [5936] Maybe website agency cuz that's only 51 [5938] people. Let's see. That's 54 people. [5941] Hm. Anything else that's limiting my [5944] search? How am I going to do this? I [5946] just type in website. We have 581, which [5948] is pretty cool. But as you see, a lot of [5950] these search results are like music [5952] website, outsource website, website [5954] factory. If I type in agency, what [5956] happens? If I type in agency, we have [5958] 24,200. [5960] Connective agency, MI6 agency, labeled [5962] agency. I wonder if we could add an [5965] additional [5967] filter. No, I don't want to generate an [5970] output for each record. Let me see here [5972] exactly what I would do. Keywords I [5975] would use website. So now I should be [5978] scraping agencies or co-founders, [5981] partners at agencies that include the [5985] term website. And so now I have multiple [5987] levels here. Now, what I'm going to do [5988] just to determine that this is pretty [5990] good, and we're never going to get a [5991] perfect scrape or a perfect data source. [5993] What I'm going to do to make sure it's [5994] pretty good is I'm just going to open up [5996] this page. Notice how many results here. [5997] 1 2 3 4 5 6 7 8 9 10 11 12. So, let me [6001] just zoom in a bit. 1 2 3 4 5 6 7 8 9 [6005] 10. Okay, so there are 10 results here. [6006] What I'm going to do is I'm just going [6007] to like do this two or three times. I'm [6008] going to go through the 10 results and [6009] I'm just going to see how many of these [6011] companies are actually companies I might [6012] want to work with. with my search terms. [6014] I'm aiming for like 80% [6016] plus. So, let's open up all these and [6018] just see off the top of my head, you [6020] know, is this search good enough that [6021] 80% of the leads I'm going to generate [6023] are probably companies I'm looking for. [6025] B TOC digital marketing agency whose [6027] name is inspired. Okay, we do state [6031] websites. We built a bunch of websites. [6032] Okay, great. Dig Vortex is good. So, [6034] we're one out of 10. This is Sydney [6036] website design agency. Good. We're two [6037] out of 10. H full service marketing [6039] agency. Okay, I think we could probably [6041] pitch that. That's three out of 10. [6043] Web design agency four out of 10. H I [6045] don't know if these people do websites [6046] specifically. It looks like they're more [6047] of a creative agency. They do [6049] storytelling. H I'm not entirely sure to [6051] be completely honest, but I think you [6054] know I think they're probably [6056] sufficient. Let me check their websites [6057] and see. Wow, this is very clean. Oh, [6059] they're in Calgary too. That's uh where [6061] I live right now. Web site. Hm. Can I [6064] see maybe some of their work that [6065] they've [6066] done? Okay. Yeah. Yeah. Yeah. Yeah. I'm [6069] seeing media production, business [6071] development. Okay. Branding. You know, [6074] branding probably has a lot to do with [6075] the [6077] website. Okay. They made a new website. [6079] Okay. So, these guys do websites as [6080] well. Perfect. That's five out of [6084] 10. Okay. This is like a brand agency [6087] tomorrow. I don't know if this is [6088] sufficient. But I'm just going to type [6089] in [6090] website. Oh, very clean. Very clean. [6093] Looking for the term website because I [6094] want to make sure that they make [6095] websites. they don't make websites. This [6097] would not make any sense. Unfortunately, [6100] one thing that uh on a metal level, a [6101] lot of um website design agencies are [6104] doing is they're branding themselves as [6106] not website design agencies now. They're [6107] like, "We're multi-disiplinary creators. [6110] We're branding experts. We're architects [6113] of your vision, right? It's not like [6115] actual website." When I see stuff like [6118] rebuild our core business, though, odds [6119] are that's probably a website. So, I'm [6121] going to say yes to that one. [6123] Full service marketing agency. Uh, okay. [6127] Labeled agency. I feel like I I might [6129] have just doubled up on this and got two [6131] of these links, but I said that they [6132] were good. This is a website agency, web [6134] agency. Okay. So, realistically, I'm [6136] thinking like nine out of 10 of my first [6137] search is fine. 90% is pretty solid to [6140] me. I could go through more of this, but [6141] just off the top of my head, this is [6143] probably enough. So, I know that this [6144] lead list here, this source is probably [6146] sufficient. Okay, so very first thing [6148] I'm going to do, let me just make sure [6149] I'm nice and organized here. I'm going [6150] to go right over here. Then I will paste [6153] this in. This is just going to be my [6155] little scratch pad here. This is going [6157] to be my website agencies URL. Okay, so [6160] the way you do this with Apollo is you [6162] just get the URLs. All right, now that [6163] we have the number one done, why don't [6165] we go number two? And this is good. We [6166] have 4,294 leads. I generally want like [6168] more than a couple thousand to run a [6170] test on. And we can get way more leads [6171] than this if we're smart. Uh, let me [6173] see. Let me see. Let me see what else [6174] are we going to do. So we need [6176] videography, right? I wonder if I could [6177] just run the exact same hack here with [6179] the term videography instead. Now, odds [6182] are if we do this, probably going to get [6184] some duplicate records cuz some of these [6185] website agencies are also going to do [6186] videography. Yes, I already see the [6188] tadpole agency. We already saw that [6189] labeled. So, already 20% of these are [6191] already the same agency, right? So, [6192] we're going to have some overlap. But [6193] videography is not the best term. Let me [6196] actually select this everywhere. So, h [6200] we do video. If I just do video, odds [6204] are they're going to do some [6204] videography, right? Okay. So, 4,188. And [6207] yeah, the labeled agency's with us as [6209] well. That's one [6210] duplicate. Tadpoles. That's another [6213] duplicate. But that's among 30. I think [6214] this is probably going to be fine. So, [6215] honestly, I'm just going to open up a [6217] bunch of these again. Four, five. Uh, [6219] yeah, labeled 6 7 8 9 10. Double check. [6224] Animated explainer videos. This one is [6226] not in English. Videos. Okay. [6230] Videos. Videos. Cool. Yeah, these guys [6234] are the Calgary ones. I don't know about [6236] agency 360 video. Hm. Storytelling with [6239] video. Okay, that's good. [6242] Reasonable video. Cool. These guys do [6244] video, too. Video. Cool. They do video [6247] as well. Video. I'm not seeing anything [6249] here. So, let me just jump in. Double [6250] check that this is actually something [6252] that's produced. Man, what a clean [6253] website. I love these guys. Video. H. [6256] I'm not seeing any video here. If I type [6258] in [6259] portfolio, I see they have a show reel. [6261] They probably do videos. Yeah. I mean, [6263] if you Yeah. Motion graphics. Looks like [6265] it. Okay, good. Miracle Video Agency. [6267] Again, this is in Italy. I'm not really [6269] targeting Americans here. I just wanted [6270] to keep this reasonably broad. Um, but [6272] yeah, video. Cool. Cool. Cool. So, this [6274] is another audience I'm going to pump [6275] in. We'll worry about the specifics of [6277] this later. So, I've mentioned we will [6280] now just do a [6285] videographers videography agencies. [6288] Let's do that. [6289] Slasheditors. All right. And now we just [6291] have one more, which is real estate [6293] agents. So, let me just copy this, paste [6294] this down here cuz I want nice sizing. [6296] And then I'll just call this real [6298] estate agents. I don't want agencies. [6301] Agencies are big. So we'll just go real [6303] estate agent. I'm going to remove video [6306] here. And let's see how many of these [6309] are real estate agents. 1 2 3 4 5 6 7 8 [6315] 9 10. Life improvement platform. Nope. [6319] Nope. Okay. No, this doesn't really look [6321] like good search. This is an example of [6323] one that is not good. And it's probably [6324] because the job title, right? So, I'm [6327] thinking we're probably going to have to [6327] add like agent or maybe real estate [6329] agent. We could do like real estate [6331] broker or something like that. Well, [6333] real estate broker is not exactly the [6334] same, but should be sufficient. Okay, so [6336] as you see, we're getting way too many [6337] here. We're getting like 258,000. This [6340] is uh Greg W at Wallace Real Estate. [6342] This is a good sign for me because it's, [6344] you know, the sort of person we're going [6345] for, like solo or or head owner of real [6348] estate brokerage. But yeah, we are [6350] getting way too many results to really [6351] do anything with this. So, why don't I [6352] go to number of employees? Why don't we [6354] just look for people in the 1 to 10 [6356] range and then maybe 11 to 20 range. [6358] This this will keep the companies pretty [6359] small. Um, let me think. Are there other [6361] signals that we could use? Industry and [6363] keywords obviously need to be real [6365] estate, right? 41,000. Um, we could [6368] chunk this down substantially further. [6370] Why don't I go location? We'll go United [6372] States because they tend to have more [6373] money and because we could just get this [6374] 41,000 down to like 20 something,000. [6377] Okay. And yeah, still too many. So, [6378] we're going to need [6379] fewer. Okay. Okay, I ended up filtering [6382] this down to about 16,000. This is still [6384] a little too many for me. And some of [6386] these work with like big corporations [6387] like Remax and so on and so forth. They [6389] actually have limited control and [6390] autonomy over the money that they could [6391] spend for marketing. Still, I don't [6393] really see this getting much better than [6394] that. So, I'm just going to call it here [6396] and put in my little real estate URL. [6398] Okay. All right. So, now we have three [6400] Apollo URLs. These all look pretty [6401] reasonable. What do we need to do with [6402] these? Well, we need to actually scrape [6404] these, right? It's one thing to have a [6405] URL, another thing to actually scrape [6407] these URLs. So, I'm going to pump all of [6408] these into Appify now. And I'm just [6410] going to run three manual runs. The one [6412] that I use is called Apollo code_cfter [6415] just because it's like a$120 per [6416] thousand leads. And uh when I say a$120 [6418] per thousand leads, I don't actually [6420] mean that we are generating 1,000 leads [6421] here with email addresses. We [6423] realistically generate like 2/3 of [6424] those. Okay. So let me see. Uh looks [6426] like we can only run this once at a [6428] time. So I'm just going to run this [6430] three separate times simultaneously. And [6432] I'm going to look for 2,000 leads first. [6434] Okay. So 2,000 for each. So just jumped [6436] on Appify, make an account. I'm at like [6438] a pretty high usage tier, but I think [6440] you can get by with substantially less [6441] than this. And then it's just $120 per [6443] thousand. So, not really breaking the [6444] bank here. That's the first run. This [6446] going to be my videographer run. Let's [6447] go here and then save and start. Then [6450] I'm going to go to my real estate agents [6451] and then I'm just going to open up a new [6453] instance of this and then run it. Save [6455] and start. And now what we should have, [6456] if I go back to my actors, we should [6458] have three runs running simultaneously. [6460] Okay, so we have one here, one here, one [6461] here. Now we just need to wait until [6463] these finish basically because they're [6465] 2000s. Probably going to take us like 5 [6466] minutes or so. Okay. And these are now [6468] just getting to completed. This one is [6470] 600. This one is 1,300. So I'm just [6472] going to set everything up for the first [6473] 2,000 run. And then as I'm doing it, the [6475] rest will finish. If I go to output [6477] here, I'm going to export all 2000 [6478] results. There are a lot of fields. [6480] Okay. Tons of different fields um [6482] realistically. And you guys are going to [6484] see that when I import all these fields, [6485] it's going to be crazy. There's going to [6487] be like a million in one. Uh ideally, we [6489] wouldn't have that many, but um it is [6491] what it is. I'm just going to download [6492] all these, show you guys what I mean. Uh [6493] what I'm going to do is I'm going to [6494] have three. First of all, I don't [6496] actually remember what that specific [6498] export is. So, I'm going to export it [6500] now. Let's see. Gonna append to current [6502] sheet import. I'm just using Google [6504] Sheets. It's the easiest way to do it. [6506] And we're going to start by doing all [6507] this [6508] manually. So, uh, what is this? Yeah. [6511] Okay. So, this is the real estate. So, [6512] I'm just going to have one sheet. I'll [6513] call it actually I guess I could just do [6515] all this in one, right? Leads. I'll just [6518] call this leads. In fact, let's just go [6520] here for my own organizational purposes. [6522] Just go watch me start and sell. There [6524] you go. That'd be good. Here we'll go [6526] real estate. I'm just not going to use [6529] spaces. It'll make my life easier. And [6531] then what I want is I just want to get [6532] rid of all the fields that don't really [6534] mean anything to me. Okay. So, first of [6535] all, just I want to count up the number [6536] of emails. There's a thousand in this [6537] list. So, we actually only ended up [6538] about 50%. Second of all, I want to [6541] delete all the fields that don't really [6542] mean anything to me. So, realistically, [6544] what fields don't mean anything to me? [6546] Well, do you see how much space there is [6547] here? All these columns. Most of them [6550] are freaking empty as hell. What [6552] we want is we want to get rid of the [6554] vast majority of them. So, I'm [6557] thinking there's two big swaths that I'm [6560] going to get rid of. Okay. The first is [6564] I'm going to get rid of everything after [6566] from [6568] AC all the way over [6570] to WH. Okay? And I'm going to do that [6574] for all three. And then I'm also going [6575] to prune a couple others. This way it'll [6577] just be a lot more easy and manageable [6579] for us. And you guys will see what I [6580] mean. If I'm to pump this into some sort [6582] of email enrichment service, I just kind [6583] of have to do this. So, what was it? AC [6585] to WH. Just going to copy and then [6587] delete. So, 500 columns are being [6590] deleted. Okay, this is a lot smaller [6592] now, a lot more manageable, right? Still [6594] pretty big, but it's a lot more [6595] manageable. Next thing I'm going to do [6596] is I'll go to personal emails. So, B I [6599] go to CE. There you go. So, I think it [6602] was A C to WH and then BI to CE. Is that [6606] right? Hopefully that's right. Anyway, [6608] at the end of it, we want um like sheets [6610] that just all look the same because [6612] we're going to pump this into an [6613] icebreaker generator. We're basically [6615] going to have AI tell us a little bit [6616] about each person and then we'll use [6617] that to improve the the strength of the [6619] outreach. Okay, so this one is now done [6621] as well. Looks like it finished with [6623] 2002. So, I'm now going to download this [6625] same energy CSV. Go over here to sheet [6628] 2. Then I'm going to import, go upload. [6631] There's a million and one ways to do [6632] this, by the way. Uh this is just how I [6634] personally like doing it. Then I'm going [6636] to append. That way it just goes into [6638] this one. And then there are a lot of [6639] leads here and a lot of fields. So might [6641] take a second. Okay. So it was so AC all [6644] the way to WH. It's going to be pretty [6649] far. This one has way more actually. [6652] Check this out. This one has a ton more. [6657] I think the reason why it works out like [6659] this is because basically LinkedIn where [6661] these guys get all their data from just [6663] stores all of the employment fields that [6665] you have. So yeah, this one actually [6667] isn't. We need to go even further than [6668] this. So never mind. You can't just copy [6670] the same uh things. I think you got to [6672] go all the way to here. So this one goes [6674] to ZS. Annoying. Anyway, um that's that. [6677] And then let me just go back to my pol [6679] scraper. Grab my last run, which is this [6681] one here. Go output. I'll export all [6684] these. Download these. And uh sorry, [6687] which one was this? Art [6689] director. Is this videography? I think [6691] this might be videography. Yeah, video [6694] agency. So, we'll just go video agency. [6697] Then this last one will be website [6700] agency and import [6706] upload. Okay. Now, I'm just going to do [6708] a little bit of reorganizing because I [6709] just want my fields arrayed linearly. [6710] I'm going to want the first name, then [6712] I'm going to want the last name, then [6713] I'm going to want like the company name, [6714] then I'm going to want a couple of other [6715] pieces of information. So, I'm just [6717] going to reset these so these all [6718] basically have the same information, the [6720] same columns. This is necessary for me [6721] to run the automation. I'll show you [6722] guys in a second. Okay, I have all these [6725] set up. Just for my own sanity, just [6728] going to make all of these fields about [6730] the same [6731] width. A boot. That's my Canadian coming [6734] out. This looks good. So, as you can [6736] see, we have first name, last name, [6737] headline, employment industry, industry, [6738] city, employment history, industry, [6740] city, country, email. Right? So, we have [6742] all of the fields that we will [6743] realistically need. And what I'm going [6746] to do now is I'm just going to pump all [6748] of this into a service. Well, my own [6750] service I'm going to whip up in a second [6752] to generate an icebreaker. So I'm just [6753] going to take all this information and [6754] I'm going to use it to generate you know [6756] some AI icebreaker for final [6758] confirmation check. How many emails do [6759] we have? We have about 1,100 for each. [6762] This is 1,026. Other was,233. This other [6764] one's whatever. So I'm just actually [6766] just going to run a,000 across all three [6768] of these. So 1,000 for real estate,000 [6770] for video agencies, for website agencies [6772] and we're going to see where we land. Of [6773] note, I'm not verifying or validating my [6775] domains. So I'm not just using the [6777] verified ones here. You can, and I think [6779] in many cases you should, but I find [6781] that as a first go, right off the top, I [6784] just like to bust out as many emails as [6786] possible, not make any assumptions as to [6788] the quality of my data, and then after I [6790] run at least that first campaign, if [6792] something is like severely [6793] underperforming or if I do have high [6794] bounce rate or really piss poor [6796] deliverability, then I make my little [6797] changes afterwards. But for a first bet, [6798] I'm not even going to worry about that [6799] yet because I want this to be simple and [6801] nowhere near as complicated as I think [6803] most other people make it out to be. So [6804] now what I'm going to do is I'm going to [6805] add an additional column here called [6808] icebreaker. We'll just do column I for [6810] all of these. Okay, ice breaker. Then [6812] one more icebreaker. And I'm going to [6814] have AI go through and then generate ice [6816] breakers for all these. What I'll be [6818] using to make my life really simple is [6819] I'm going to use make.com which is a [6821] service that is basically no code. One [6823] of the foundational noode platforms [6825] similar to NAND, similar to Zapier and [6827] all these other ones. Realistically, if [6829] you're getting into AI and automation, [6831] you have no idea where to start. I [6832] recommend that you start with this. It's [6834] much easier and faster way of going [6835] about things. What we're going to want [6836] is we're going to want the sorry search [6838] rows. Go search rows to start. Then I'm [6841] just going to select the right account. [6842] I'm going to have to make this [6843] accessible to that account. So I'll go [6845] nick at leftclick.ai. Going to give [6846] myself editor access. No need to notify [6848] me. And the sheet I'm going to be [6849] looking for is watch me start and sell [6851] an AI service in just x hours. Right. So [6854] I'm going to go down to search method. [6856] Um using the wrong account here. One [6858] sec. And I'm going to grab [6860] the ID up here at the top. Paste that [6864] in. It's saying that it's empty. I think [6867] just because of a bug. So, let me retry [6869] this. The first one is going to be real [6872] state. [6874] Okay. Not entirely sure why I keep on [6877] getting empty for this. H might be a [6879] bug. For now, I'm just going to return [6880] five because I just want to make sure [6881] this actually works. So, let me run this [6883] module. Get [6884] five. Cool. So, it got the data. [6887] Basically, what I've done is I've just [6888] confirmed I can get the data from my [6889] real estate sheet here, uh, then pump it [6891] into make.com, which is good. After [6893] we've searched through it, we'll just [6896] call this icebreaker generation. Um, [6899] after we've searched through it, uh, we [6901] can now build out the rest of this flow, [6902] which is going to be pretty simple and [6903] pretty straightforward. We're basically [6904] just going to take all of the [6905] information in. Then we're going to, um, [6909] send a message over to GBT. Probably use [6912] 40 for this one just for cost purposes. [6914] Then I'm going to have it generate ice [6915] breakers for all of these. [6917] So, let's go GPT4. Uh, let me just see [6920] actually what's the model prices. Open. [6922] Let's see the cheapest one right now. [6924] These are good, but they're quite [6926] expensive. This is 2 million. This is 40 [6929] cents. This is one. Okay. Oh, wow. [6932] That's crazy. So, this one is affordable [6934] model balancing speed and intelligence. [6936] I'll probably use this one. GBT 4.1 [6937] mini, I think. Right. 2 million 1 [6940] million input tokens. I I don't know. [6941] We'll try it. [6944] one mini right over [6949] here. And then here is where I'm going [6951] to go and I'm going to uh design my [6953] prompt. So you're a helpful intelligent [6955] writing assistant. I always like to have [6957] a developer assistant prompt first. Then [6959] here is where I'm actually going to your [6961] task is to take as input a bunch of [6965] personal information about a prospect [6967] and then design a customized oneline [6970] icebreaker to begin the conversation. [6973] You'll return this icebreaker in JSON [6976] using this format. I'm going to say [6978] icebreaker and then rules write in a [6982] Spartan. How do you pronounce [6986] this lanic? [6991] Laconic. Oh, interesting. Renpartic [6993] lanic [6994] laconic tone of voice. [6998] Um, weave in uh context wherever [7006] possible. Here is a bunch of information [7009] about [7010] me, but you can make these ice breakers [7013] more [7015] personalized. Then I'm just going to [7017] list a bunch of stuff about me. And then [7018] down here, weave in context with my own [7020] personal information wherever [7022] possible. Keep things very short and [7025] follow [7027] the format. Hey, [7030] name we'll go new line. New [7033] line. Really respect X and love that [7038] you're doing [7039] Y. Thought I'd [7042] connect. Wanted to run something by you. [7045] That should be a good one. Okay. Keep [7047] things very short and follow the [7049] provided format. Leave in contact with [7051] me on personal information wherever [7052] possible. [7054] deniability possible. Try and imply that [7057] I like [7059] do believe. Oh. Oh no. Did I just delete [7065] the whole [7066] thing? That's [7068] brutal. Okay, I'm going to write the [7070] whole thing again. It's not going to be [7071] the same. That sucks. Be careful with [7074] the escape commands, ladies and [7076] gentlemen. That is tough. Do not want to [7079] escape. take as input a bunch of [7082] information about a prospect and then [7084] generate a customized oneline icebreaker [7087] to imply rest of my communicate is [7090] personalized. You'll return your ice [7093] breakers JSON format icebreaker and then [7096] here I'm going to say hey name love [7100] thing also a fan of other thing wanted [7104] to run something by you cool rolls right [7108] in a [7109] Spartan oh be very careful with that [7112] that's [7113] why keep things short and punchy things [7117] short let's say imply familiarity [7120] wherever possible If you see an [7122] opportunity, i.e. if you see an [7124] opportunity to imply that I like the [7126] same things, believe the same things, or [7130] want the [7132] same things as they do. Go for it. Sure, [7135] that should probably be okay. Let me [7137] save this this time. Learn my lesson. [7139] And I'm going to show advanced settings. [7141] And what I'm going to do next is I'm [7142] just going to do a bunch of examples for [7144] it. So, we're going to go JSON object [7145] parse JSON response. Next up, I will do [7147] user. I'm going to provide some um [7149] personalized information about the [7151] prospect. So, uh what am I going to do? [7153] We'll just we'll just spam it all like [7155] in this one, [7157] two, three. This we'll do [7161] this. We'll do this. Okay. So, we're [7165] just going to add all this information [7166] in. And then next, the assistant's going [7168] to have some personalized stuff. But, uh [7170] we don't want this to be the la the we [7172] actually want this to be the last [7173] message before this. We actually want a [7176] couple other examples. So I actually [7177] just generate one. We are going to have [7179] an example of this exact format. Put it [7182] right here. I'll fill this in with some [7184] actual information. And then we'll have [7185] the icebreaker here. Then we'll just do [7187] this like twice. And then in this way [7189] we're going to have a model of what [7190] we're saying. So the value here is [7192] you're actually just reaching out to [7193] people as if you were doing totally [7195] custom outreach. So let me see. Is there [7197] any other information we can get about [7198] the Now that I'm thinking about it, I [7199] don't actually have too much information [7200] about the company, right? It's like a [7202] company oneliner or something. [7203] Otherwise, we're really going to be [7204] riding the plausible deniability train [7206] here. No organization description, huh? [7208] O, brutal. Yeah, you don't really get [7209] too much information. Oh, we got some [7210] personal emails, too. Interesting. [7212] Interesting. Huh. Well, actually, I [7214] didn't even realize we're getting so [7215] many personal emails. So, instead of [7217] just using this email column, we should [7218] probably concatenate the two. I bet you [7219] if I did this, um, if I merge these two, [7221] might even get more. It's been a while [7223] since I've used the personal field here, [7225] but like I don't know if Apollo's gotten [7226] a little bit better at this over the [7227] course of the last little while or what, [7228] but that's crazy. Look at that. That's [7230] juicy. That is a very juicy column. I'm [7232] actually going to go back here now to [7233] where it says email. paste this in. Like [7236] check this. Oh man, there's a ton of [7238] emails here. Tons of emails. Okay. Well, [7241] I gotta say most of these are looking [7244] pretty good. If I go down to the very [7247] bottom of this uh 2000 list, if I go all [7249] the way up here now, we actually got [7251] 1500 emails instead of just and some of [7253] these are like hot mails and Gmails. [7254] Now, some of these aren't verified, so [7256] I'm probably going to have like much [7257] higher bounce rates, but I feel like I [7258] should probably concatenate these two [7259] now that I'm thinking about it into just [7261] one email column, right? Basically, if [7263] they double up, then we won't put the [7264] same info. Or maybe we will. Who knows? [7266] Okay, let's add one more column. We'll [7269] go [7270] emails. Okay, so I'm just going to [7272] filter this. Just sort A to Z. Should [7275] have all the emails now sorted. I don't [7277] like how this looks, so let me just do [7279] some spreadsheet magic here. Um, I'm [7281] then going to cut this. Paste this in [7284] here. Then we can actually just resort [7287] this based off a toz. Now we should have [7290] all of the emails, right? Yes, we should [7292] have some more emails here. Okay, cool. [7293] I'm going to do the same for all the [7294] rest of these just to get some of those [7296] um those bonus emails that I might have [7297] missed. I think that's [7300] important. Okay, so yeah, we just [7302] leveled up and got a few more email [7304] addresses, which is nice. Now that we [7305] have all that stuff done, we should be [7307] able to do our icebreaker. Um, so why [7309] don't I just start with some leads here? [7310] I'll just do some manual ones. Let's [7311] see. Let's do H. So, a couple things. [7314] I'm seeing some duplicates here. So, we [7317] got to pre-process our thing. Uh, [7319] actually, no, we don't. Sorry. instantly [7320] will automatically do this for us. But [7322] now that I'm sorting these manually like [7323] this, I could tell there's a fair number [7325] of duplicates in here. The reason why [7327] might be because we have different [7328] emails. So, let me just double check [7330] this. No, no, we can um dduplicate [7338] this. So, columns to analyze. The only [7340] one that I really want is H email. Just [7345] remove all instances of duplicates under [7346] H. [7350] So, looks like we had some duplicates. [7352] Might have just been because of how I [7353] processed that. Let me just double [7355] check. Same thing [7362] here. Okay, let's now replace this just [7365] with some false or sorry, real data [7370] here. Then we'll copy over the headline. [7376] Then we'll do the employment [7380] history. Then we'll do the [7382] industry. Then we'll do the [7385] city. Then we'll also do the country. [7388] Okay. So basically I'm going to feed in [7390] this. And then I want some personalized [7391] snippet as a result of this. So I wanted [7393] to say something like [7395] hey the reason this is valuable is you [7397] can then make abbreviations as to the [7399] company. So instead of Maki agency we [7401] could just say Maki which makes it seem [7402] as if it's like custom written. We can [7404] also play around with like the [7405] capitalization and stuff. I'm not going [7406] to do that, but I'll say hey Anna. I'll [7408] add two new lines here so it jumps down. [7410] And I'll say love what you're doing at [7413] Maki. Also doing some outsourcing [7417] offshoring right now. Wanted to run [7419] something by [7421] you. Cool. That looks pretty good to me. [7424] What are we getting from here? We're [7425] getting it uh perceivably blunt with the [7427] love what you're doing at Maki. We're [7428] also getting, you know, if somebody were [7430] to scrape this, they would say [7431] something. I love what you're doing at [7432] insert company name here, but it's just [7434] maki. It seems a little bit more [7435] personalized. And then these this is [7438] like an exact variable outsourcing [7440] offshoring. So I don't know if I should [7441] really do this. So maybe I'll just say [7443] also doing some outsourcing right now. [7446] Wanted to run something by that looks [7447] pretty good to me. Okay. So we have one [7449] example right now. So what I'm going to [7450] do now, keeping in mind this is an exact [7453] duplicate of some data that's already in [7455] here. So, I'm just going to run this on [7456] three and then I'm going to see how good [7458] it is on three of my What is this? Is [7461] this real estate or what did I do? [7462] Websites [7463] or Just double check real estate. Okay, [7467] let's run three and let's see how this [7468] goes. All right, we just finished three [7471] icebreaker [7473] generations. Notice Blue Edge in Boon [7476] Beach. Been around South Florida real [7477] estate, too. Wanted to run something [7478] bad. That seems pretty realistic. Uh, [7479] it's not the worst. Okay, I don't really [7482] like that one. Okay. All right. Well, I [7483] mean like for the most part this is [7484] good, but it's not sticking to our [7485] formula. So, what I'm going to do is I'm [7487] going to go down reduce the temperature [7488] drastically. Just have it try and stick [7490] to the exact formula that I am doing [7492] here. [7494] Okay. Use the the above [7498] format when constructing your ice [7501] breakers. Let's run this again. Let's [7503] see if this is a little bit better. [7505] Location isn't super important. [7508] just want [7511] the okay this is perceivable like I'm [7514] not selling real estate but this is [7516] perceivably there's like a lot of heavy [7518] on the implication here I'm working in [7519] real estate around here right it's like [7520] well I'm not actually selling also a fan [7522] of finding the right fit okay well that [7524] kind of [7525] sucks if I got this I'd be like h I mean [7529] real estate's a grind yeah know I don't [7530] like this going to have to give it a [7532] couple more examples unfortunate but it [7534] is what it is so I'm going to go over [7536] here uh Uh, let me just adjust the [7538] prompt a little [7540] bit. Maybe I'll just say make sure to [7542] use the above [7543] format. Let's tweak this one more time. [7546] Let's see if that is sufficient to get [7547] us a three out of three on the score. If [7549] so, I'll scale it up. Do 10, and then [7551] I'll [7553] check. [7558] Okay. Okay. No, no, no. One more thing. [7562] If you see the ability to make an [7565] acronym, if you see an opportunity to [7567] shorten the company name, [7570] say instead of XYZ [7574] agency, do so wherever [7577] possible. Say things like love AMS [7581] instead of love [7583] AMS professional [7585] services. More examples. [7597] Okay, that looks pretty good. And now [7599] let's just add one more example. So [7601] we're going to add two, right? One's [7603] going to be user with the example. The [7604] other one's going to be assistant. I'm [7606] going to map the user back up [7611] here. Assistant, I'm going to map over [7615] here. Going to copy the assistant [7618] prompt. And now I'm just going to add [7619] one more user [7621] thing. Let's do this one [7624] here. This doesn't really give me too [7626] much information. So, let's maybe do [7627] this. Uh, let me just make sure the data [7629] is formatted [7632] right. Visionary agency leader. Oo, [7635] fancy. Wow. [7638] Okay. I found that stuff funny. That's [7640] all. Okay. Uh, information technology [7642] and services. Then we had the location. [7645] Dubai, United Arab Emirates. [7648] Cool. And we'll say, "Hey, Adam, the [7652] human tech agency." So, I should go, [7655] "Hey, [7659] Adam, what you [7662] doing?" The human tech agency. The human [7666] tech. Let me just see if there's [7670] some No, this is Dubai, right? [7676] Let's take a peek at this. Oh, guys. [7678] Okay. Well, this guy's actually pretty [7681] huge. I was [7684] uh kind of crapping all over it [7687] because visionary. Yeah. Wow. No, for [7690] sure. The human tech [7698] agency branding in particular is [7710] Let's [7715] see. Just getting an agency off the [7718] ground. Wanted to run something by you. [7720] Cool. That's [7722] plausible. Now, let's give this a go on [7724] the top three [7726] hits. Okay, first result was much [7729] better. Hey, Aaron. Love Blue Edge. Also [7730] in real estate down here. I want to run [7732] something by you. That's super cool. [7734] We've now finished the other [7736] two. Don't like that it says elevation [7738] real estate. Also found of the San Fran [7740] market. Wanted to run something by Yeah, [7741] that's not ideal, but it's honestly it's [7743] not the [7744] worst. So, what we're going to do is [7746] we're just going to force it to make [7748] acronyms or not acronyms, shorten the [7750] names a lot [7756] more. We'll say shorten the company name [7759] wherever possible. Say XYZ [7763] agency. XYZ [7771] agency. Do the same with locations. San [7774] Fran instead of San [7777] Francisco, BC [7779] instead of British Columbia etc. Cool. [7784] All right. Now that I've done this, what [7785] we need is we need one more to update a [7787] row. And then what we're going to do is [7788] we're just going to go down this and [7789] then add icebreaker right over here. [7791] Okay. We're going to do this for real [7792] estate first. Then we'll do this for [7793] websites and then we'll do this for that [7794] other um yeah. So let me add the ID of [7798] this [7799] sheet right over here. Going to call [7802] this real_ate. The row number I'm going [7805] to grab from [7806] this. Then the column range we're just [7809] going to go A to [7811] Z. Okay. What do we want to update? [7813] Column I. The only thing we want to [7814] update with column I is the result [7816] icebreaker. Okay, so now I have these [7819] three. I'm going to give it one more [7821] test to see if it updates the column [7823] correctly. Cool. Looks fantastic. Now [7826] that this is done, I'm just going to add [7827] one more step here, which is a filter. [7829] I'm going to filter to make sure that [7830] the icebreaker column is [7832] empty. So, um, only return rows where [7835] the icebreaker does not exist. Then I'm [7837] now going to go I don't know how many we [7839] realistically want to do. Well, I guess [7842] we just do all of them, right? So, I'm [7844] just going to go back here and then [7846] yeah, we're just going to run it. Um, so [7848] we're just going to try and go through [7849] all the way from the top to bottom of [7850] this whole sheet, which is going to be [7851] about a thousand records, which should [7852] take us realistically like I don't know, [7854] a few minutes. Just returned. Now, we're [7857] pumping through one, two, three, might [7860] take us a little bit longer than that [7861] actually. Thousand rows, maybe about 1 [7863] second per row. Might take us uh yeah, [7866] about like 15 minutes or so. So, while [7868] this is running, what I can actually do [7870] is I could just copy this and run this [7871] three times. So I could just do it all [7873] simultaneously. Now I'm doing this [7875] manually. You really you do not have to [7877] be doing this manually. You can [7878] absolutely just automate this by pulling [7880] some system that um just does it all [7883] kind of sheet by sheet. You know, [7885] iterate all the sheets and then run it [7886] one row at a time. But I'm just on [7888] something of a time crunch today. So [7890] obviously I want to do this quickly. I'm [7892] just going to create three scenarios. [7894] One for each of these. One will be [7896] icebreaker videography. Another one will [7898] be website design or website agency. [7901] Then I'm just going to copy these three [7903] and I'm actually going to run them all. [7905] Now I can do this simply because I have [7907] a lot of token rate limit. I have a very [7910] high rate limit. Not a lot of other [7912] people can because their rate limits [7914] aren't as high as mine, but I can [7915] actually like feasibly run three of [7916] these. So one simultaneously with the [7918] other two. Then I can just go through [7919] all of them generating the ice breakers. [7922] So let's just double check that that [7923] looks good. Then we'll just go over [7926] here, double check that that looks good. [7928] Cool. And then I'm just going to make [7929] sure that all of these columns are good. [7930] Icebreaker. Icebreaker. Icebreaker. [7932] Nice. We should now just be able to send [7934] it. So, I'm going to do one. I'll do [7936] another. I'll do another one. And let's [7939] see how we're doing. Yep, these are all [7941] now running simultaneously. So, I should [7943] be able to do all 3,000 if you think [7945] about it. Um, in about 15 minutes or so [7947] instead. All right, just grabbed a cup [7949] of coffee. I'm ready to go. While these [7951] are generating the rest of the ice [7953] breakers, which by the way, we could see [7955] if we just go to any one of these [7956] sheets. You can see these are filling in [7958] as we go along. I'm doing the [7959] alphabetical order, which is why it's [7960] Dennis, Dennis, Derek, Tzita, so on and [7962] so forth. While all this stuff is [7964] happening, let's head over to Instantly [7965] and make these campaigns. I'm just going [7966] to call this one the title of this [7968] video. That looks good. Click continue. [7971] Now, we have the Instantly campaign up [7973] and running. Instantly is the service [7974] we're using to send the cold emails just [7975] to make sure everybody's on the same [7976] page. Very quick and easy to get up and [7978] running with this. If I just show you [7980] guys the email accounts, you'll see that [7982] I purchased a bunch of pre-warmed email [7984] accounts using their pre-warmed inbox [7986] feature. The benefit to this is it just [7987] takes me zero time to get up and [7989] running. So instead of me having to [7990] spend two or three weeks warming up [7991] emails. I just clicked one button, spent [7994] a little bit of additional money, and [7995] then got myself these pre-warmed ones. [7997] They sell out of these pretty quick. So [7999] if you guys want them, definitely just [8000] head over here, select one of them, and [8002] then uh you know, buy both the domain [8005] and then also get the email addresses [8007] here. We're seeing a trend where female [8009] names perform better than male names, [8011] which is why there's so many females [8012] like Britney, Kimberly, Allison, [8014] Caroline, Hazel, so on and so forth. So, [8015] if you see any of that and you're [8016] wondering, you know what the hell I want [8017] a guy name, then don't sweat it. The way [8019] that you work with these, it's a [8020] different name, right? It's Audrey, it's [8022] Britney, it's Brooke, it's Carly, it's [8023] Elizabeth. The reason why it's all these [8025] different names is because instantly had [8027] to purchase the email inboxes ahead of [8029] time and warm them all up for us, right? [8030] So, a big issue that a lot of beginners [8031] think is, well, like, dude, this isn't [8032] me. This is Britney. This says Carly. [8034] That's all right. You have total [8035] plausible deniability when you send out [8037] the outreach. The important thing is not [8038] necessarily what the first name and last [8040] name on the email address is. The [8042] important thing is like in practice, you [8044] will send outreach, people will be [8045] interested in wanting to work with you [8047] and then you get them on a call and then [8049] you'll show up on the call and they'll [8050] just assume that it's either like a [8052] misspelling of your name or it's [8053] somebody else in the organization or [8054] whatever. So you guys don't actually [8055] have to worry about that if you end up [8056] doing the pre-warm mailbox route like I [8058] did. But you know, you also don't have [8059] to do the pre-warm mailbox route. You [8060] could do something else. Anyway, let's [8062] actually spin this up. So I'm going to [8063] go to sequences now. Sort of have like a [8065] four-step copyrightiting, you know, [8067] structure for this and I'll run you guys [8068] through it all line by line. But I also [8070] want you guys to know that I'm going to [8071] pull some of the templates directly from [8072] Maker School and then I'm just going to [8073] make some slight edits to them because [8074] the way that I like to do things is I [8076] like to just operate off of templates [8077] wherever possible. Like I've already [8079] built the wheel a bunch of times. No [8080] need for me to rebuild the wheel. Just [8081] same thing with you. If templates exist [8083] that do 90% of what you want to do, just [8084] start with those templates and then you [8086] just 10x your leverage, right? You got [8087] to go from 90 to 100% as opposed to zero [8090] to 100. So, you know, now that we've set [8092] up our lead generation infrastructure, [8094] let's just do this and not knock over my [8096] cup of coffee. Time to create an [8098] irresistible offer using my copyrighting [8100] formula. Hell to the yeah. Let us go to [8104] Maker School. I'm go down to my [8106] classroom and then I think the templates [8109] I'm looking for a month four. Yeah, here [8110] we go. There's a bunch of instantly [8112] templates. These are the exact templates [8114] that I've used on a number of campaigns. [8116] You'll see that my uh my rates weren't [8117] tremendous on these. Like, you know, [8119] this one at a 4.8% reply rate still made [8121] me tons of money. This one down here was [8123] a little bit better, 11.6, but this [8125] wasn't directly as monetary, so it made [8126] me about the same. This one maybe 6.1% [8128] reply rate. This one is um probably what [8130] I'm going to use for a couple of these. [8132] But what I'm going to do to start is I'm [8133] just going to copy over one of these [8134] campaigns. And then I'm going to worry [8135] about, you know, touching it up and [8136] making it look really sexy after. Okay, [8138] this is going to be one. And actually, I [8140] should probably create one campaign for [8141] each, right? So, I need to rename the [8143] campaign. So, what I'm going to do is [8144] I'm going to duplicate this one more [8145] time. This one will [8148] be real estate. [8151] Okay. This other one here, [8154] videography. Then this last one here is [8157] going to be [8158] website. Okay, now I have three [8160] different campaigns. This is valuable [8162] because we're going to have three [8163] different audiences, right? And once I [8164] have that, now I can go through and [8166] actually I'll open up three tabs. One, [8168] two, three. Then I'm just going to copy [8170] this over. I'm going to go to sequences, [8172] paste, sequences, paste, sequences, [8175] paste. Cool. So now I have like a [8176] starter sequence. This is real estate. [8178] This one's videography. This one's [8179] website agency. So now I just need to, [8181] you know, change the language and [8182] whatnot. And I'm also just going to do a [8183] little bit of copyrightiting. So, when I [8185] designed this template, it was before [8187] ice breakers and personalization were a [8188] thing, which is why um we're seeing, you [8191] know, I found you on LinkedIn. I thought [8192] I'd reach out. So, realistically, this [8193] section over here, this is going to be [8194] replaced with the icebreaker. Back in [8196] the day, you didn't actually have the [8198] ability to do this, right? Or if you [8200] did, it was like very minimal or not [8202] very good. So, you used to have to imply [8204] a bunch of things. Nowadays, you don't [8206] actually have to imply as much. You [8207] could um get away with like some sort of [8209] AI personalization to make it seem like [8210] you've done some research on them, which [8211] they like. Anyway, in terms of the [8213] four-step copyrightiting process, the [8214] the very first thing that I like to do [8215] is I like to answer the question, um, is [8217] this spam? So, the quickest and easiest [8220] way to answer the question, is this [8221] spam? Is you just give them some [8223] personalization up front? That's what [8224] this first section is going to be. Okay. [8226] The second question is going to be like, [8228] okay, so who are you? If it's not spam, [8231] it's like, all right, we verified that. [8232] So, who the hell are you? And that's [8234] what this section over here answers. And [8236] this is just sort of putting yourself in [8237] the the mindset of the prospect, right? [8240] The third one is why does it matter to [8242] me? Okay, and why it matters is because [8244] well I'm not just some random guy. Okay, [8245] it matters because I made people a ton [8247] of money with this before. Then the [8249] fourth one is okay well then what [8252] next? Right? Like now that we verified [8254] all this, what do we what do we do after [8256] this? Well, uh what we do after this is [8259] we have some sort of offer or call to [8260] action. Offer and call to action. Okay, [8263] simple four-step copyrighting formula. [8265] Don't feel like you have to copy my [8266] exact wording here or anything. As long [8268] as you just follow the structure, show [8270] them that it's not spam by personalizing [8271] it. Answer the who are you question and [8274] make it seem like it's you talking to [8275] them, not a faceless company talking to [8276] them. Justify why you're reaching out by [8278] basically saying, "Well, I made all this [8279] money for other people or I've added all [8280] this value to other companies." Then [8282] finally, what next? Down at the bottom. [8284] As long as you do this, you have four [8285] steps, you're you're pretty good, I [8286] would say, in most cases. So now I'm [8288] just going to go through and I'm just [8289] going to make some adjustments to it. [8290] I'm going to throw in some of my own [8292] little spin and magic. And then after [8294] that, I'm going to split test this with [8295] another one of myh sequences. Okay. [8297] Okay. So my real estate system is some [8299] sort of B2C system. So I just need an [8301] offer for a B TOC system with some sort [8303] of deliverable. So what I'll probably [8305] say is let's just make sure the [8307] icebreaker is good. So something like [8309] this. Hey Dennis Lrada also work in real [8311] estate in St. George. Wanted to run [8312] something by you. Okay. Implication is [8314] I'm working in real estate. So it could [8315] be that I'm selling to real estate [8317] agents. It could be that I am a real [8318] estate agent myself. Whatever I'm doing, [8319] I'm just getting the click and that's [8321] all that matters. Now that we've gotten [8322] the click, I need to identify myself. So [8324] if I had something like this, what would [8325] my copy be really? wanted to run [8326] something by you. I'm just getting up [8328] and running. Okay, I'm just going to [8330] play around with it and we'll figure [8331] something out. Okay, first campaign [8334] looks good. Hey, name love whatever. [8336] Also working in whatever and whatever. [8338] Wanted to run some bio. I'm new to the [8339] buy side. Put something interesting [8340] together a few months ago that works [8341] well. To make a long story short, this [8342] outreach system that uses AI to generate [8344] buyer leads around 30 per month on [8345] average cost just a few cents to run. I [8347] ran it for similar position agent in SD. [8349] I'm leaving this um intentionally vague [8351] and we made 125K in a little over a [8353] week. This is real. I know this is [8355] completely out of left field, but I'm [8356] fairly confident we could do something [8357] similar. Just want to see if there's [8358] interest. You're one of the first agents [8359] I found looking into it. Would this be [8360] of value to it all? Wouldn't cost you [8361] anything. I'd pay for it all myself up [8363] front. If you're open, we could work out [8364] some sort of deal, but up to you. Let me [8365] know your thoughts when you have a sec. [8366] Thanks. Sending account name. So, yeah, [8368] a couple things. I mean, I don't know if [8370] this is going to work. We're going to [8371] try to I think it'll work. I've ran some [8373] campaigns like this before and it's [8374] worked. But, uh, the key in my humble [8376] opinion is to just make it seem like you [8377] are writing directly to the other [8378] person. You're not like putting them in [8380] a sequence. You wanted to make it seem [8382] very informal and like plausibly [8384] deniable and hey, I was just looking [8387] into your stuff and I wanted to run [8389] something by you, see if there might be [8390] interest, right? That's basically the [8392] vibe. Obviously, it helps when you have [8393] some social proof. So, I have social [8394] proof. I've run a very similar sort of [8396] campaign once for buyer agent and SD. [8398] So, that's pretty cool. Made a ton of [8400] money very very quickly for them, not [8402] for me. I way underpriced. But yeah, you [8404] know, if you don't have something like [8405] this, then obviously that's one of the [8406] reasons why at the beginning when I said [8407] pick a niche, you know, do you have [8408] niches that you guys have some sort of [8409] experience and some sort of [8410] accomplishment, some sort of unique [8412] advantage. So yeah, I'm just going to [8413] copy this over and I'm going to do a [8415] very similar campaign for the other two. [8416] One of the reasons why I always [8417] recommend picking three niches is [8418] because once you've done the work for [8419] one, you just multiply the effort for [8421] the other two. So let me do something [8422] similar now for videography for a [8423] product and then I'll finally do one for [8425] website agencies as well. Okay, similar [8427] vibes. I actually used to run a [8428] videography company in Vancouver, BC, [8431] and I scaled it to about 10,000 bucks a [8433] month. Now, I didn't use this system to [8435] get all of that revenue. In fact, I I [8437] experimented with a similar system, but [8439] obviously it wasn't the same system. So, [8440] we're going heavy on the implication [8441] here. But, you know, again, we're using [8443] the plausible deniability. Hey, I put [8444] something interesting together a few [8445] months ago that works well. To make a [8446] long story short, it is blank, right? [8448] It's an outreach system uses and I find [8449] people hiring videographers agencies and [8451] then pitches them. Cost just a few cents [8452] to run. All of this is true. Obviously, [8454] when they work with me, it's not going [8455] to cost them a few cents cuz they're [8456] going to pay me for it. But the actual [8457] system costs a few cents. And then, you [8459] know, I'm kind of leveraging the listen, [8460] I know this is totally wild, but right, [8463] which I find some self-deprecation is [8465] pretty valuable. You know, it just makes [8466] things seem realer when you can insert [8468] like a sliver of almost doubt, right? [8470] Kind of clean. So, that's the [8471] videography one. That one took me like, [8472] you know, 30 extra seconds to put [8474] together. This is going to be the [8475] website agency. So, this is going to be [8477] really similar system, I think. Man, [8479] I've done the exact same thing for all [8480] of these niches, haven't I? Good god, [8482] I've worked in a lot of niches. I used [8483] to run a website design agency. is like [8485] your classic digital marketing agency, [8487] but we did websites. So, I can I can get [8488] away with saying that, you know, I've [8490] run similar systems for myself, too. [8492] That's pretty funny. You know, I got to [8493] be honest, after you've worked with one [8494] agency, you've worked with a lot of [8496] them. You've worked with a lot of them. [8498] Very similar. Okay. Anyway, so please [8500] bear with me, but I put something [8502] interesting a few months ago that works [8503] well. To make a long story short, it's [8504] an outreach system that uses AI to find [8506] people hiring website devs, then pitches [8509] them around 30, then pitches them [8520] customized [8525] templates actually makes them the demo [8529] website run high converting. I ran [8533] something similar for myself back when I [8536] ran a site agency. [8539] This was in Vancouver, [8541] BC around 5 years ago and it got to the [8544] point where we're making well this is [8546] well over 10,000 bucks per month. No, [8548] this is completely out of left field but [8549] I'm fairly confident we could do [8549] something similar. Just wanted to see if [8550] there's interest. You're one of the [8551] first people I found when looking into [8552] it. Would this be a value at all? [8553] Wouldn't cost anything blah blah blah [8555] blah. Cool. That's sweet. Awesome. So, [8559] that's some campaign variant number one. [8561] What I'm going to do now is I'm going to [8562] add an additional variant. Okay. And [8565] this additional variant is now going to [8566] pitch like a fundamentally different [8567] thing, fundamentally different offer. [8568] And I'm just going to run all these side [8570] by side. So, what am I going to do for [8571] this one? I think I'm going to use this [8572] one here, which is this longshot [8576] creative agency campaign. I really like [8577] this one. This one was really neat. And [8579] then I think for this one, I'm going to [8580] weave in um my own social proof, my own [8582] like YouTube channel, cuz uh you know, [8584] it's obviously very big dick if you [8586] could say I have a YouTube channel which [8587] has several tens of thousands of [8588] subscribers. People really like that. [8590] Okay. Follow-up reactivation system. [8591] That looks pretty cool. This is going to [8593] be the real estate one. So, we'll have [8595] some personalization, which uh in this [8597] case is going to be an icebreaker. Let [8598] me just make sure that's [8599] right. Checking in on my system here. [8602] We've actually now finished and wrapped [8603] up all of them. I think this one is just [8605] hanging. That might be a bug, but that's [8607] good. Let's now put some stuff in there. [8610] Okay. Personalization. It is a long [8612] shot, but I work specifically with real [8614] estate agencies. [8616] Basically, I make custom follow-up [8619] systems, AI follow-up systems that [8622] nurture old leads on both the buy side, [8625] sell side. I I run an Instagram channel [8628] that just hit 100,000. We're talking [8630] about stuff like this. I know this is a [8632] long shot, but I work specifically with [8633] real estate agencies. Basically, I make [8635] custom AF follow-up systems that nurture [8636] old leads on both the buy side, sell [8638] side. I run an IG channel that just hit [8640] 100K followers talking about stuff like [8642] this. There are a lot of agents picking [8644] this up right now. This will be my [8646] social proof right now and I've [8649] personally helped a [8652] few [8653] scale their monthly sales. Oh, I don't [8656] know any off the top of my head. It's [8658] going to be tough. I'm probably going to [8659] have to find that out later. Like go [8661] through maker school or make money with [8662] make and see what sort of numbers have [8663] helped people. But I imagine it's [8665] probably at least five figures. Anyway, [8667] am fully aware we haven't talked prior [8670] to this. I think you'll probably think [8672] this is [8673] called outreach I looked into. I think [8676] I'll borrow a section from the previous [8682] one. Outreach I looked into. To be [8686] frank, you were one of the first agents [8687] I found when looking into it and into [8690] it, but I think you'd be a good fit. [8693] Also, in my experience, client [8696] reactivation is super easy to implement. [8700] do this for you totally upfront at no [8704] cost. Does that make sense for you? If [8706] so, do you want me to just go ahead show [8708] you an example or would you rather chat [8710] first? Kind of awkward over the phone. [8711] We can chat if you're game get on a [8713] call. Okay, cool. All right, I think [8716] this is plausible. I don't think this is [8717] going to be as good as the initial one, [8718] but what are you going to do, right? [8720] Let's just use first name Q is my [8722] question. We'll call it there. I don't [8725] think I could use PS if you're not sure [8726] who I am or a [8728] skeptical. Okay. Anyway, okay. Let's [8731] just make sure I remember to fix that up [8732] later. Videography. Uh oh, what the hell [8735] am I going to do for videographers [8736] again? Let me think. Uh clipping. Oh, [8739] right. Clipping. Clipping. Yeah. Yeah, [8740] that's good. [8750] Basically, Basically, I build systems [8752] that [8757] automatically build AI systems that [8759] automatic long- form videos like [8762] interviews, etc. to short clips for [8766] social media. I did this in my own [8768] agency once in copy revenue to 9K a [8770] month at around 50 submergence. Oh, [8771] that's true actually. content like video [8774] interviews to short clips for social [8778] media costs sense to run that actually, [8780] you know, I could actually totally use [8782] my own case study [8783] here because I'm specifying long form [8786] content, right? Does cost sense to run [8789] and I did do a similar system in one [8791] second copy. That's pretty neat. [8795] similar service business although [8798] obviously all about copyrightiting also [8800] is my own company so I had a lot of [8801] latitude but I want to see if I could [8802] build a [8803] similar thing for you is I think your [8805] vertical is one where you could easily [8806] do more than 2k if you had a good [8808] pipeline also in my experience this is a [8810] really easy win to offer [8813] clients clients takes no extra work and [8817] you can add few hundred bucks in [8821] perceived [8823] value for [8825] free. [8826] Cool, [8828] cool, cool, [8831] cool. All [8833] right, we'll also go sending account [8835] name. Very sweet. And then over [8839] here, let me think. Um, this website [8842] agency stuff, content generation systems [8844] for websites. I really like that angle. [8845] I really, really do. How can I make [8847] this? I mean, like I know I'm meta stuff [8849] here. These are pretty long. I normally [8850] don't make campaigns this long, but um [8852] at the beginning, I just like split [8853] testing a variety of approaches. So, [8855] some I like to be really long and [8857] intense. Other ones I like to be really [8858] short and punchy after I run the first [8860] last, you know, like where I actually [8861] run this on 100 emails a day probably or [8863] something like that per vertical. I tend [8865] to iterate pretty quickly after the [8867] first week and then I tend to just like [8868] test the next bout with like I'll [8871] literally grab an email, I'll cut it in [8872] half, and then I'll just make it super [8873] punchy and I'll see if that one works [8875] better or not. So, I think what a lot of [8876] people are thinking is like, man, this [8877] is super long. How the heck is this [8879] going to work? Well, my tip for you is [8880] that once you understand the patterns, [8882] you can break the patterns a little bit, [8883] but you do have to understand what the [8884] patterns are. And that's sort of what [8886] I'm doing with the second pitch. Okay, [8887] so Q. And then this one here is going to [8889] be just like first name Q. Okay, so [8893] where the heck was I? Oh, and this is [8895] icebreaker, not personalization. I'm [8897] just forgetting all my variable names. [8899] Okay, so what do I do? I work [8901] specifically [8903] agencies. So wanted to run something by [8905] you. I know this a long shop, but I work [8906] specifically with website design [8907] agencies. Basically, I built a system [8910] that lets you that upon creating a [8913] website for a client in whatever [8916] framework platform lets you [8920] generate around 100 blog posts for that [8923] client for free. I ran a similar system [8925] my own agency, Skilled Revenue 90K, [8927] though obviously all about [8928] copyrightiting also has my own company [8929] latitude, but I wanted to see if I could [8931] build out you since in my experience is [8933] a really easy win to offer clients. [8935] takes no extra working to add a few [8936] hundred bucks in perceived value for [8937] free. Like you're going to deliver a [8939] website anyway. Website anyway. How much [8943] nicer would it look if it came preloaded [8945] with a bunch of blog [8947] posts? Anyway, um that looks pretty good [8950] to me. Cool. Just going to run it. And [8953] honestly, yeah, no idea how good these [8955] are. No clue. I'm just going to give it [8957] a go and we're going to see where we [8959] land. [8960] Let me just make sure that all these [8961] variables are right and then we can [8962] upload the leads to the campaign and [8964] start gunning it. Okay. Icebreaker. [8965] Icebreaker. And now this has to be [8966] icebreaker. Icebreaker. Cool. Okay. So, [8970] now that I have all this, I think I'm [8971] going to have to change some of these [8972] variables. Actually, now what I have to [8974] do is I have to add follow-ups. That's [8976] annoying. Um, okay. Probably grab [8979] follow-ups from an old campaign that [8981] I've already written. Uh, let's see this [8984] one here. Okay. Let's do this. TLDDR. [8987] Know this is a long shot but agents [8990] agencies think I can add a fair amount [8992] of value. See previous email. This isn't [8996] ideal. Ideally you'd restate your whole [8998] pitch but um to be honest my back is [9000] sort of hurting and I just want to get [9001] something up and running. So I'm [9003] probably just going to copy this. Use [9004] the previous subject and we'll just run [9006] one follow-up from now on. The value in [9008] a single follow-up is obviously you send [9009] more emails that way. There looks to be [9012] a new line here. So I'm going to add a [9014] new line here. Instead of re re agents, [9016] it's going to be videographers, editing [9018] agencies. We'll [9020] say website creative [9023] agencies. Okay. Then because we're using [9026] the previous step subject, it should [9027] come nested with the previous one up. [9030] Then why don't we just do two days in [9032] between each. Okay. We'll do 1 2 3. [9034] Okay. And now we'll just go to my [9036] inboxes here. So I think I have 15 [9038] mailboxes. 1 2 3 4 5 6 7 8 9 10 11 12 13 [9042] 14 15. Yeah, we do. So I'm going to do [9044] five each. 1 2 3 4 5 this one. Uh, well, [9047] what am I talking about? Actually, let's [9048] just run all of them. Doesn't really [9050] matter, right? Yeah, we're just going to [9051] do all of them. 1 2 3 4 5 6 7 8. Looks [9054] good. And then we'll do all of them here [9056] as well. All right. Now, let's see what [9058] these settings are going to be. Are we [9060] going to do open tracking? Uh, no. I'm [9062] not going to. Delivery optimization. [9064] Yes, please. Send first emails text [9066] only. Yes, please. We always send the [9069] first emails text only. Daily limit. Uh, [9072] well, I have 15 mailboxes times about 30 [9075] a day is 450 daily limit. So, how many [9077] am I actually going to send per [9078] campaign? Let's divide that by three. [9079] We'll do 150. Send 150 here, 150 there, [9083] 150 there. Easy. Show advanced options. [9086] Show advanced options. So, advanced [9087] options. Let's see what do we got. CRM, [9090] time gaps. Okay. Okay. Auto optimize. [9093] Yeah, we'll do reply [9095] rate. We'll do provider matching as [9097] well. [9101] So, provider matching and then reply [9104] rate. Then down here, I'll do the same [9106] thing. We'll do provider matching and [9108] then reply [9110] rate. And that looks pretty good to me. [9113] I think I'm just going to gun it. [9115] Yeah. So, now um we need leads, right? [9118] So, I don't actually have any leads in [9119] here. So, I'm just going to save all [9120] these first. I'm going to go um upload [9122] all the leads. And then I'm just going [9123] to double check before I make everything [9125] live. And then, um yeah, we should be [9127] good to go. So, let me just verify that [9129] we have all the ice breakers. Yep, looks [9131] like we do on that page, real estate. [9134] Let's go down to video agencies now. [9136] Verify we have all the ice breakers [9137] here, too. No, not seeing any ones. Why [9141] not? So, do we get a bug or [9144] something? Okay. Well, how about the [9146] website? Oh, [9149] no. Oh, I ran them all. I just wasted [9152] like 3,000 ops. That sucks. I updated [9154] the same sheet. All right. Well, we'll [9157] just run them all again. No big deal. No [9159] problem at all. Sometimes you make [9160] mistakes and when you do, they cost you [9162] $6. And I just made myself a $6 mistake. [9166] Video agency and then website agency. [9170] Rough [9171] stuff. But what are you going to do? [9173] Huh? Website [9176] agency. Don't do what I did. All right. [9180] Okay. All right. Let's run this again. [9183] So, I'm gonna have to remove all of the [9184] old ice breakers because there's no [9187] Yeah, I think the reason we got that is [9189] because we didn't pass in a row number, [9190] right? There's no row number. Okay. So, [9193] let's run this [9195] again. Okay. Okay. Now, let's verify [9197] that looks good. It does. [9201] Sad. This one. How we [9206] looking? No, I don't seem to be filling [9208] that [9210] in. Am I doubling up again? [9213] I'm probably doubling up [9216] again. We're pulling from video agency. [9219] We're dumping in video agency. We're [9220] doing the row number. We're getting the [9222] Icebreaker. Oh. Oh, sorry. That's two [9224] icebreaker. [9226] Yeah. Yep. We got a lot [9229] of mistakes over here. This is also two [9232] icebreaker. So, Oh, in fact, [9235] it's even more. We'll go icebreaker [9239] there. [9242] And we just got to verify that this [9243] looks good. It does. [9247] Cool. All right. Now, let's make sure [9249] that everything's good. Website agency [9251] filling up. Yeah, website agency is [9254] filling up. How about this [9258] one? This one looks like it's filling [9261] up. Cool, cool, cool. And then how about [9264] this one? Yeah, looks good. All right, [9266] guys. So, do not waste 3,000 operations [9268] like me. [9270] You do not want to be wasting the [9272] operations. I wonder how many we've [9274] wasted now. Yeah, you can see my daily [9276] ops usage before like 500. Now it's at [9278] like 7,000. So, how many more I got? [9280] Okay, I have enough. I can run it [9283] all. Rough. I should note that you could [9285] build systems that optimize the hell out [9287] of this. Right now, we're sending 80 [9289] Google Sheets calls. Then, we're also [9290] doing 80 OpenAI network requests. You [9292] could actually batch all this to one. [9294] And you can make this one, well, you [9295] shouldn't do one. You should do two or [9296] three. usually like one every batch [9298] request for 500 or so rows. But yeah, we [9300] could realistically like do this whole [9302] thing in like 10 ops, but I decided that [9303] I would rather go speedy and still show [9305] you guys how to get up and running as [9306] quickly as possible rather than worry [9308] too much about making it super perfect [9310] and then spending a bunch of time on [9311]  that really doesn't matter. You [9312] could spend money for time and that's [9314] exactly what we're doing here. All [9315] right, just reran the icebreaker [9316] generator and now we have everything all [9319] good to go for all three groups. I'm now [9322] going to just download this as a CSV. [9325] So, we're going to do just the real [9326] estate one first. And then I'm going to [9327] go to my real estate campaign, which [9328] would be this one here. And then just [9330] going to upload the leads. So, head over [9332] to leads, add leads. Notice I'm doing [9333] this manually for now, but obviously we [9335] could automate the hell of it later. [9336] What we need to do now is we need to [9337] match the column. So, first name, last [9339] name, headline. Nope. Nope. Nope. We [9342] don't need any of this stuff. Nope. Not [9343] location. No, no, no. Email though, [9345] icebreaker. That's what we need. So, [9347] we'll go custom variable there. The rest [9349] of the stuff I don't really need either. [9351] Obviously, you can import as much of [9353] these as you want. I just didn't import [9354] many of them. That's a lot of fields, [9356] right? So, I do not do the verification. [9358] I am going to check for duplicates [9360] across campaigns list and the rest of [9361] the workspace because I don't want to be [9362] sending people to different campaigns. [9365] Usually, we end up with like a few [9366] people dduped. So, that's that. Then [9369] I'll do the same thing for the second [9371] campaign which was my video agency. So, [9373] let me go download as a CSV. Going to [9375] add some leads. CSV. Just drag and drop [9377] this puppy. Same energy, right? So, what [9380] we are going to upload is the [9382] icebreaker. The rest of the stuff is a [9385] no. We have a lot of columns here. This [9387] should be good. We We've got the first [9389] name, I think, which is what matters. We [9391] may have some crossover there. While [9393] that's uploading, I'll do the last one. [9394] So, website agency. I'm going to [9396] download this [9398] CSV. I'm going to go to leads and then [9400] add leads. [9403] CSV. Drag and drop. Same energy here. [9406] Just want to upgrade or import the [9408] icebreaker. Go all the way down to the [9410] bottom and then add all of these [9411] contacts. [9412] Okay. All right. So, now that we've done [9414] this, what we have to do is we have to [9416] double or triple check that the campaign [9418] is good to go basically. So, the way [9419] that I do it is with preview. So, just [9422] making sure that all of the data here is [9424] filled in. There is no thank there's [9426] nothing under thanks. That's a problem. [9428] So, why is there nothing under [9431] thanks? Sometimes there is no sending [9433] account name [9435] variable. So, I go to variables here. [9437] I'm not seeing anything. Instantly [9439] sending account name. Let me just see if [9441] we could [9443] add some variables here. I always change [9447] the name a bit. Okay, here we go. [9449] Sending account first name. This should [9451] be good. I'm going to go back here. Go [9453] sending account first name. Oh, we have [9455] one extra variable over here. One sec. [9458] Okay, that looks good. That looks good. [9460] Awesome. So, I'm going to just copy this [9462] over because I would have screwed up [9463] otherwise. I'm going to save and then [9466] delete any additional ones I have. I got [9468] to do it all over, unfortunately. kind [9470] of sucks, but it is what it is. Let's [9471] just make sure that everything's good. [9473] Okay. And then I'll do the same thing [9475] here. Also do the same thing down here. [9478] That and then I should Oh, uh, do I do [9481] that? Oh, actually, you know what? Looks [9482] like I already had it on the the [9483] follow-up. Okay. So, what am I going to [9485] do now? I'm literally going to preview [9486] this for all of them. That looks good. [9488] I'm now going to go here. Preview. That [9491] looks good. I'm going to go over here. [9492] Preview. That looks good. Going to go [9494] back here. Preview. Uh, thanks again. I [9497] don't know why we didn't get the sending [9498] account first name. Okay. Yeah, that [9500] looks good. Save this. Preview. Cool. [9503] Looks good. This one here is [9505] preview. Cool. That looks good. Let's [9507] now go over here. Preview. This is very [9510] important. Got a preview. For whatever [9513] reason, we didn't have the sending [9514] account first name. So, I'm going to [9515] save then preview. Okay, we got it. [9517] Going to preview this. Okay, we got it. [9519] This actually, I didn't really fully [9520] preview this. Let me not cheat. Okay, [9523] cool. All right. Now that we verified [9524] literally everything here, we can [9526] actually get up and running with this [9527] campaign. After this, I'm going to take [9528] a little break. Usually, it takes a day [9530] or so to start receiving replies. Also [9532] worth noting that it's technically uh [9533] Easter right now, so I'm probably not [9535] going to get a lot of people responding [9536] to this in the near term. Oh, sorry. [9537] There's one more thing I have to verify [9538] first. Schedule. So, I always like doing [9540] Monday to Saturday. I like doing 7:00 [9543] a.m. to 6:00 p.m. ET. So, what I'm going [9545] to do here is go 7 6. Okay. I'm going to [9548] do Monday, Friday all the way to [9550] Saturday. Then I'll go 7 7 and then I'm [9553] just going to copy this and then paste [9555] it in two tabs. Okay. So, now I have [9557] everything here. 7 to six should be [9560] good. I've double and quadruple and six [9562] tupal checked. Now I'm going to resume [9564] this campaign. I'm going to go back [9565] here. Now I have three campaigns that [9568] are up and running. Okay. So I'm going [9570] to go sign off for the day and then I'll [9572] check back in a couple and we'll see how [9574] the responses to this email campaign [9575] have gone. This is exactly what I would [9577] do. Starting a whole sequence from [9579] scratch. So we see here we've now [9581] checked that last create an irresistible [9583] offer. So we just have two things [9585] remaining. Okay. So, I woke up at the [9587] crack of dawn this morning cuz I was [9588] very excited to see all of these email [9590] replies roll in. Uh, I got a couple of [9591] notifications over the course of the [9592] night. I decided I wasn't going to [9593] respond to anything just cuz I wanted to [9595] be able to review them all with you. [9596] But, yeah, great news. In the last, I [9599] think 13 or 14 hours, we received a [9601] total of 11 replies. Seven of them were [9603] positive. So, this is one here. And you [9605] see, even the maybe not the most [9608] positive of replies are still okay, [9610] right? So, Elizabeth, thank you for [9611] reaching out. I will pass, but [9612] appreciate you reaching out. Thank you. [9613] This fell says, "Natalie, thanks for [9615] reaching out. We currently subscribe to [9616] a platform that does what you're [9617] describing. It's called Y Lopo. I wish [9618] you all the best in this venture. [9619] Thanks. This person says, "No, thank [9621] you. I don't buy leads of any kind, and [9622] if I did, I wouldn't go after buyers." [9624] What's interesting is immediately after [9625] that, we just had a swarm of yeses. So, [9628] right after that, hey Samantha, thanks [9630] for reaching out. I'm open to work on [9631] something if you could provide us leads [9632] for sure. Yes, I'd be interested. Let's [9633] meet. Let me know what time works for [9635] you. So, this person actually explicitly [9636] is like, "Hey, let's get going. Let's [9638] actually sit down. Let's actually jump [9639] on a call." Obviously, something in my [9641] pitch, which in this case looks like it [9642] was the videographer pitch, uh was very [9644] um compelling to them. This person says, [9646] "Let's talk more." We also now have [9648] their phone number. We have all of their [9649] personal information. We give them a [9650] ring immediately if we wanted to. Um [9652] this person says, "Yes, I'd be [9653] interested. Send me more info." We're [9655] going to get a lot of like, "Send me [9656] more info uh replies to this sort of [9658] campaign just because the way that I put [9659] it together, right? I said, "Would this [9661] be a value of you? You know, let me know [9663] your thoughts and then I could put it in [9664] front of you." There's more of like a [9666] value campaign. And when you have a [9667] value campaign, we're a bit lighter on [9668] like the let's book a sales call [9670] immediately. Obviously, we are asking, [9671] but not everybody will take us up on it. [9673] We got an I'm not interested from this [9674] person. We got a please send more [9676] details from this person. We got a [9678] thanks for reaching out. I'd love to [9679] test things out. I'm looking to expand [9681] my acquisition channels to the company [9682] as well. Mostly for your info. I'd like [9683] to get a bit more background on the [9684] process you have. So, I know we could [9686] work something out. Let me know if you [9687] can send a quick loom, but that's too [9689] much. Would love to just get a bit more [9690] info. This person here says, "Uh, hey, [9693] Elizabeth or Nick." So, I think the [9694] reason for that is because I said that I [9696] scaled one second copy. Yes. Saw the [9698] redirect to Nick Thrive's personal [9700] brand. Is this a project under his [9702] umbrella? I'd love to see what it can [9703] do. Can you send me over a preview or a [9704] sample? I'm not going to say this is the [9705] best campaign ever. If we look at the [9706] stats, okay, we could already pull some [9709] numbers from it. The website agency [9710] campaign responded. We got five replies [9713] from it and every single one of those [9714] replies were positive. Okay. The [9716] videography campaign we got two replies [9718] from so far and 66% of the replies so [9720] far are positive. But we can already [9722] start making some determinations about [9723] like um where we go next and it's really [9725] only been a day which is pretty crazy. [9726] The real estate campaign has had three [9728] replies. Okay, so fewer replies than the [9730] website campaign by far and then we've [9731] had zero opportunities. So, we haven't [9734] really sent enough emails to be able to [9736] fully say whether or not this approach [9737] is going to work right now. But, I've [9739] run enough of these to know that when [9741] there's a a divide that's this big [9742] between a successful campaign, which [9744] basically has a 2% positive reply rate [9746] over here, then a campaign that has a 0% [9748] positive reply rate over here with, you [9750] know, 510 emails sent collectively [9752] across the two of them. You know, I have [9754] a feeling this real estate campaign [9755] probably just ain't it, dog. So, you [9757] know, a couple of minor optimizations we [9758] could do already if we wanted to [9760] significantly increase the number of [9761] positive replies we get. Like keep in [9762] mind that I I sent all this stuff on [9764] Easter Monday, right? So not most people [9766] aren't working on Easter Monday. I [9767] imagine the results would probably would [9768] have been a little bit better if I'd [9769] sent them during a weekday or work day [9771] or something. But a couple things that [9773] we could have done to make this even [9774] better. Uh a couple things we can do. If [9776] we cut this off, okay, then in an [9779] equivalent time period, so in I don't [9780] know 13 hours or however long it's been [9782] since I started this, then we would be [9783] able to take those 255 and we'd be able [9785] to disperse them across these two. So we [9787] would have been able to get another 125 [9789] here, another 125 here. And given the [9791] reply rates, we probably would have [9792] received another three positive replies [9794] here, maybe like another one or two [9796] positive replies here. So [9797] mathematically, like we could already be [9798] in the neighborhood of generating 10 [9800] positive replies a day. As you see, a [9802] couple of those are legitimately like, [9803] "Hey, let's get on the phone right now. [9804] Hey, let's meet." If you can get them on [9806] a call, realistic rate is something like [9808] 60 to 75% positive reply to a call, [9810] assuming that you have a pitch like [9811] mine. If you have a much more direct [9813] pitch, um, if you're like, "Let's talk. [9815] Let me put something in front of you. [9816] I'm going to charge you money for this. [9817] Here's my crazy superdetailed offer." [9819] and you just give them all the [9820] information up front. Obviously, you'll [9821] have a higher conversion rate on the [9823] back end to a meeting, but you'll have a [9824] lower kind of positive reply rate [9825] initially. So, we kind of play with [9826] those numbers. You know, there are a lot [9828] of other things that we could do. You [9829] know, if I go back to this Unibox here, [9831] we can blend together the booking a [9833] meeting side of things with just direct [9835] calls. This is something I'm seeing a [9836] lot of people do. So, you know how um [9838] one of these people back here had their [9839] phone numbers, right? And their phone [9841] number was like fully listed out. We [9842] actually have a lot of their phone [9843] numbers as well. Yeah, this person here [9845] just listed out their whole phone [9846] number. Um oops. I don't actually want [9848] to open FaceTime. No, thank you. That'd [9850] be fun. Hey, what's going on, man? Yeah, [9852] just recording a video right now for [9854] several tens of thousands of people. How [9855] you doing? Uh, that might actually be [9857] pretty enjoyable that I'm thinking [9859] about. But, uh, this person just has [9860] their phone number, right? So, what you [9861] can do is instead of just cold calling a [9863] massive audience of people right off the [9864] top, like a lot of people think that [9866] they have to do. And I understand why [9868] you want to cold call. Cold calling's [9869] it's it's fun. It's nerve-wracking. It's [9871] enjoyable. It's like an adventure, [9873] right? But ultimately, in 2025, it's not [9875] very effective. Okay? So, instead of [9877] just cold calling totally cold [9878] audiences, what you could do is you [9879] could run a pre-qualify campaign like [9880] this, blast it out to, you know, as many [9883] people as humanly possible, get a 2% [9885] positive reply rate, send 10,000 emails, [9887] get 200 people saying, "Yeah, you know, [9888] I might I might actually want to do [9889] this." Then just call all of them. You [9891] know, the next time that you run a call [9892] campaign, every single one of those [9894] people will be warm and you'll be able [9896] to say, you'll not have to say, "Hey, [9897] you know, I've never talked to you [9898] before." It's like, "Hey, how's it [9899] going? You know, we just chatted over [9900] email. You just got back to me a few [9901] moments ago about um you know, wanted to [9903] put a demo together. Just wanted to [9904] touch base. I think you guys are really [9905] cool." and yeah, I just want to put [9906] myself out there. Like you can actually [9908] do those sorts of campaigns and you can [9909] do them really well. You know, when [9910] you've done enough lead genen, then you [9911] start to see patterns with this stuff. [9912] And a big pattern in cold calling just [9914] for the people that are watching this [9915] video for your benefit is just most of [9917] the time when you call somebody, you're [9919] like instantly disqualified unless you [9920] have some previous connection. Quick and [9922] easy way to cut through all that noise. [9923] Some other things that I'd experiment [9924] with moving forward on these campaigns, [9926] uh, if I go back to this website one [9928] here, I would now experiment with [9930] cutting the campaign length pretty [9931] dramatically. So you could do this in [9933] the same campaign or you could do this [9934] by duplicating the campaign and then [9935] like comparing the stats one for one. [9937] Personally I just like doing all the [9938] stuff in the same campaign cuz with the [9939] analytics tab what we can do is we could [9941] actually see specifically which thing [9942] most people responded to. And it looks [9944] like so far basically everybody's [9945] responded to variant A. They haven't [9946] responded to variant B. So here you [9948] could actually just like add 10 [9949] different steps. Although keep in mind [9951] it'll split the volume across all of [9952] them. You could add 10 different steps [9954] and then you could see you know which [9955] which step is the best. And maybe one of [9957] them is just like a quarter of the [9959] length. Maybe one of them is just like a [9961] quick little message. And maybe you [9962] could experiment with things like asset [9963] based outreach as well, which is a very [9965] big uh trend right now that usually [9967] generates you significantly higher [9968] positive reply rates with the drawback [9970] being, you know, you have to like [9971] generate an asset. So you can send fewer [9973] emails a day usually because you have [9974] less data by which you could generate an [9976] asset. Then it usually also costs you [9977] like a scent or something per lead that [9979] you send out because you have to, you [9980] know, run the token cost to generate the [9982] PDF that's customized or something like [9983] that, right? So yeah, a lot of stuff [9985] that you could do here. Hopefully you [9987] guys are seeing where I'm coming from in [9988] terms of next steps. responding to these [9990] particular leads. What I would recommend [9991] everybody here do is when they get to [9993] this point with their own email [9994] campaigns or whatever sort of outreach, [9996] have some templates that do 8020. So [9999] have some templates that like get you [10000] 80% of the way there that answer basic [10002] responses like for instance, let's see [10004] this one here, okay, where the person [10006] says, "Let's talk more." Have a template [10008] that says, you know, "Hey, name thanks [10010] so much for getting back to me. Really [10012] enjoyed reading through whatever website [10015] they have or digital property they [10016] have." And sure, like, let's get [10018] something on the books right now. Do you [10019] have a calendar that you could send [10020] over? Would you like me to do it? If [10022] not, I have three times available, XYZ. [10024] Just send me over the closest one and I [10026] can give you a ring directly at this [10027] number or we could set up like a Google [10028] Meet. The point I'm making is try and [10030] minimize the amount of back and forth. [10032] If you want to make a campaign like this [10033] work really, really well. What you do is [10034] you actually just like add the times [10036] directly in the outgoing email and you [10037] say like, "Hey, I can meet 7:00 a.m. on [10039] whatever date, 9:00 a.m. on whatever [10041] date, or 11:00 a.m. on whatever date." [10043] And then usually, you know, you'll get a [10044] lower positive reply rate, but you're [10046] going to have people give you the exact [10047] times that they want you to call them, [10048] and then you can actually just like do [10049] it without any back and forth. Um, but [10052] yeah, so what I would do is I'd make [10053] these templates, right? Once you have a [10055] couple of templates set up, so I don't [10056] know, like a positive reply template, [10058] maybe you have a template that's uh [10059] like, you know, please send me over more [10061] info. You have a template that explains [10062] something really briefly, hook up the [10064] Unibox to your phone. Instantly has like [10066] a Unibox mobile app and so you can [10068] actually see the responses come in live [10069] during the day. do whatever you need to [10071] do on your phone to prioritize those [10072] notifications and then have the template [10074] set up so that the second that an email [10075] comes in, you have like an internal [10077] rule. If it's between 7 a.m. to like [10079] 9:00 p.m. or something, your internal [10081] rule is I will respond to this email [10082] within 5 minutes. If you guys get leads [10085] like this, you need to treat them like [10086] gold. Okay? So, don't do what I did and [10088] wait, you know, so you could batch them [10089] all and have something nice and [10090] impressive to show on a YouTube video. [10091] The second you get a lead, that's when [10093] you you sit down and you message them [10094] back cuz leads are basically the closest [10096] thing you have to actual money at this [10098] point. And so you need to treat them [10099] with a respect and reverence they [10101] deserve. Also keeping in mind that it's [10102] cold outreach. You never really [10103] contacted a person. If you're not [10105] constantly on top of them, there's no [10106] reason for them really to get back to [10108] you. They have a bunch of other people [10108] in their email inbox trying to do the [10110] same thing. I'll be hopefully much worse [10112] than you are. Okay, great. Hopefully [10114] I've shown you guys how you could whip [10115] up an AI service completely from scratch [10117] and get it to the selling stage. We're [10119] now at the point where we're validating [10120] the idea. We already have people that [10122] are interested in the loose thoughts [10123] that I put in front of them. What I'm [10125] going to do in subsequent videos is I'm [10126] actually going to work through building [10128] these services. So, building services [10129] for the campaigns that people respond [10131] positively to and showing you guys how [10133] to put together a specific templated or [10135] productized automation that you could [10137] then sell to audiences like this. This [10139] is the way you do business today. You [10140] don't build and then hope that people [10142] will come. What you do is you have some [10143] minimum viable product idea. Okay? You [10145] don't even have to put the product [10146] together. What you do is you start [10148] selling all the possible products you [10149] could put together. people respond [10151] positively to a few of them and then [10152] once you validated them then you [10153] actually built the thing. Awesome. You [10155] guys have just watched me build an [10156] entire AI service from scratch. [10157] Hopefully you guys could see how to [10158] generate interested prospects in real [10160] time. You've also seen the lead [10161] generation steps in action. But now [10163] comes the crucial step, right? Which is [10164] where you convert these interested [10166] prospects into paying clients. So how [10167] the hell do you do that? Because you can [10169] generate all the leads in the world, but [10170] if you guys can't effectively sell to [10171] those leads, you guys can't actually [10173] turn them from people that are [10174] interested into people that have [10175] actually transformed into clients, [10177] you'll never make consistent money. I [10179] find most technical people hate this [10180] part, but if you master your sales [10181] process, that's what transforms AI from [10183] a hobby into a profitable company. So, [10186] that's what this next section is going [10187] to do. We're going to break down the [10188] complete sales systems from lead to [10190] signed contract. I'm going to cover the [10192] exact process that I use to consistently [10193] close high value automation deals, [10195] including how to structure your sales [10196] call, handle objections, and then I'll [10198] ultimately get clients excited to work [10199] with you. Okay, so what I got here is a [10201] quick little whimsical board. It's just [10202] a graphic workflow design tool. And what [10204] I've done is I've mapped out the [10206] simplest most standard flow that you can [10209] use for any agency essentially, but [10212] that's particularly helpful or useful [10213] when you're selling automation services [10215] or automation projects. This is not a [10218] new business model. If you're thinking [10220] about, you know, like the agency, the [10222] agency is a very standard old business [10226] idea. I mean, this sort of service model [10228] has been around for well over 70 years. [10231] And essentially for the last 70 years, [10234] people have slowly evolved it and [10236] figured out like the best most [10238] standardized way to proceed forward with [10240] closing deals of more or less any size. [10242] And this is it. You're looking at it [10243] right now. I didn't come up with this. I [10245] didn't really have to think super hard [10247] about this. This is more or less just [10248] what every agency does. So if you don't [10250] have a sales process, don't rebuild the [10252] wheel and try and come up with something [10254] new, something from scratch, something [10255] completely different that's going to be [10257] amazing and better than what we have. [10258] Because your job, if you're starting an [10260] agency, let's be real, it's not to [10261] change the world. Your job is to build a [10264] machine that's efficient and capable at [10266] producing revenue and in particular [10268] converting that revenue into a [10269] relatively high profit margin [10270] consistently. You're not going to be, [10272] you know, launching a rocket to Mars or [10275] the moon anytime soon, right? There are [10276] different business models for that sort [10277] of thing that require a lot more R&D. [10279] So, what I'm going to do over the course [10280] of the next few minutes is just run you [10281] through this and then I'm going to [10282] duplicate this model and then I'm going [10283] to show you another variant that you [10284] could use specifically for automation [10286] agencies that I think is probably a [10287] little bit higher yield than most [10289] people. But feel free to use whatever [10290] model that you want as long as you have [10292] a model and understand the basics that [10294] I'm going to be explaining. So, first [10296] things first, I don't like over [10298] complicating things. There are dozens of [10300] these sorts of system graphs with a [10302] million different boxes and there's way [10304] more complexity there and the errors [10305] feed in, you know, 50 million times, [10307] cycles, loops, all that I think [10309] that that's sort of silly. I think that [10310] at the core, the reason why people are [10312] successful in business is usually their [10313] ability to strip away the complexity. [10315] So, I'm going really simple here. I know [10317] that a lot of people are probably going [10318] to be like, you're missing all this [10319] stuff, but it's fine. We're just [10320] focusing on the fundamentals. First and [10321] foremost, sales is very different from [10323] marketing. And so, you see there's some [10324] boxes around sales, and then there's [10326] another box around the section called [10327] marketing. and I've used different [10328] colors to disambiguate them. Marketing [10330] is everything that leads up to at least [10332] in an agency model, you having a [10334] conversation with the prospect. [10335] Literally everything until you [10337] physically either get on a call with [10339] them or if you're doing some other type [10340] of business model, you're sending them [10342] voice DMs or whatever, then that in our [10343] case, I'm going to standardize it and [10345] say meeting booked. Everything before [10346] meeting booked is marketing. Everything [10347] after meeting booked is sales. So, just [10350] to be complete in marketing, if you're [10352] running an agency, especially a digital [10353] one, there are a variety of ways that [10354] you can obviously get people onto a [10356] meeting. You can go through cold email, [10358] which is something that I talk about a [10359] lot that has recently been gaining a ton [10361] of popularity because of a [10362] personalization or whatnot. This [10363] involves you finding lists of people [10365] that might be interested in your [10366] service, doing research on them or maybe [10368] getting ahead to do it, and then [10370] reaching out and presumably having some [10371] type of email conversation where you [10373] will funnel them into a meeting book. [10375] You're doing PPC ads. You might be [10376] creating some type of campaign. Maybe [10378] you're selling a lead magnet. Maybe [10380] you're just talking about, you know, [10381] hey, do you need marketing services for [10383] your thing? Click this button. But the [10384] purpose of that whole exercise is to get [10386] them to click the button and then scroll [10387] down the page and then book a meeting [10388] with you, right? So then voila, you now [10391] have a meeting booked. If you're doing [10392] SEO, same sort of deal as PPC ads is [10394] just organic. Social media, you know, [10396] you're branding yourself, you're [10397] building your reputation, similar to [10398] what I'm doing now. A lot of people want [10399] to talk to you, obviously. So what's the [10401] way that you funnel that into some type [10402] of next step or next outcome? You book a [10404] meeting with them. Referrals, what do [10406] you naturally do when somebody's like, [10407] "Hey man, I really liked working with [10409] you. I got a guy who's fantastic and he [10411] wants the system." You say, "Awesome." [10413] you know, what's your calendar link? [10414] Let's get on a call. And the [10416] communities, obviously, in order to take [10417] that to the next step, when you're [10418] having a conversation with somebody, [10419] they might be interested in what you [10420] have to say, sort of like organic [10422] networking style, you need to book a [10423] meeting. So, it doesn't matter what [10425] method you have here. The methods [10426] themselves are just black boxes. The [10428] only thing that matters is that this [10430] helps you generate a meeting. And the [10432] second that you transition from the [10433] marketing step over here to a meeting [10435] booked, this is when the actual sales [10437] process begins. And this is when you [10438] know you start essentially the decisions [10440] that you make here start having a [10441] disproportionate impact on your ability [10443] to close. So you need a sales system [10445] first and foremost. This sales system [10446] has what seven different little modules. [10449] Your sales system might have 500. I've [10451] seen sales systems that work extremely [10452] well with two. The most important thing [10454] isn't so far that you have like the best [10456] sales system in the world. It's that you [10457] just have a sales system. I used to sell [10459] door to door. I sold door to door for a [10461] year and a half. So this is B2B door to [10463] door. I'd walk into businesses and then [10465] I'd try and pitch them on local [10466] marketing services. I got thrown out [10467] more times than you could count. But the [10469] main reason why I was unable to grow my [10470] business more than about $100 to [10472] $150,000 in the calendar year that I was [10474] working at the time was because I didn't [10476] have a standardized sales process. Every [10478] single time I'd walk into the door, I [10480] didn't really like scripts. So every [10482] single time I walked in the door, I [10483] would say something different. [10484] Naturally, the prospect would respond [10486] differently. Naturally, if the prospect [10487] responded differently, then I would say [10488] something different. Every single [10490] interaction was inconsistent and [10492] non-standardized. And it meant that as a [10495] result, the client always had just a [10497] different experience with me. If they [10498] always have different and inconsistent [10500] experiences, then you're unable to [10501] optimize every individual part of the [10503] experience. You're unable to systematize [10504] and make it better. So, the most [10506] important thing isn't that you have the [10507] best system in the world. It's just that [10509] you have a system that you can start [10510] with, start using consistently, and then [10512] start thinking, hm, where are people [10513] dropping off in my system? Are they [10515] dropping off at the beginning with the [10516] first sales call? Are they dropping off [10517] with my email follow-ups? Are they [10518] dropping off here? Are they dropping off [10519] there? And then at least you have a [10521] point where you can start to make it [10522] better. So, this is one sales system, [10525] not all of them, but it's the one that I [10526] would probably recommend most people [10528] start with. First things first is you [10529] have a lead and the meeting is now [10531] booked. Well, the meeting is booked, but [10532] that doesn't necessarily mean they're [10534] going to show up to the meeting, right? [10535] If somebody books a meeting with you, [10536] there's probably maybe like a 60% chance [10538] that they'll show, but on average, you [10539] know, 40% of the time they'll flake. So, [10541] we need to make allowances for that. [10543] Let's say you book a meeting for next [10544] Friday and then next Friday shows up. [10546] You're sitting on the call, nobody's [10547] there except for you. We consider that a [10550] no-show. Obviously, in meeting parlance, [10552] and so we need to do something with that [10553] no-show. What we do is we have some type [10555] of follow-up cycle. This is a very [10557] simple and straightforward part of any [10558] system that converts and makes a lot of [10560] money. You need to be following up with [10561] the people that have fallen out of your [10564] funnel, so to say, or leaked through the [10565] holes in it. And with a follow-up cycle, [10568] that might take the place of like phone [10569] calls in your CRM. You might like [10571] schedule three or four calls to follow [10572] up and make sure the person gets [10573] rebooked. You might do some type of [10575] follow-up email sequence. You might just [10576] ping them once, get their SMS, something [10578] like that. Whatever the form of that is, [10580] you just need to make sure you have some [10581] type of follow-up system in place or [10582] follow-up cycle in place that ensures [10585] that the people that don't make it to [10586] the meetings are at least still being [10588] nurtured in some way. What happens when [10591] they get nurtured and they want to [10592] rebook? You know, they're like, "I'm so [10593] sorry, my cat died and I had to, you [10595] know, flake on our our scheduled [10596] meeting." Uh, well, then they rebook and [10598] then we go right back to square one [10599] where the meeting is booked. This [10601] process here can occur five, six, maybe [10603] even seven times. I think I've had one [10605] extremely annoying prospect that flaked [10607] on me over a dozen times. We ended up [10610] actually getting together and the call [10611] ended up not being a fit, which is a [10613] huge pain in my ass. But the great news [10614] is we at least we got on the call. At [10615] least I figured that out. So yeah, it's [10618] sort of the sequence between meeting [10619] booked and follow-up cycle. Right now, [10620] the more likely thing and probably the [10623] thing that we care most about is if they [10624] show. So what happens if they show? [10626] Well, if they show, then you have a [10627] sales meeting. And this is beyond the [10628] scope of this particular video, but I'm [10630] going to record more videos in the [10631] future about my specific sales process, [10632] how to optimize your like actual sales [10635] meeting. Um, just like I'm building out [10637] a system here for the actual flow of a [10639] lead. You can build out a system for the [10640] actual progression of every call. You [10642] could have step one, I say that, step [10644] two, I say that, step three, I say that. [10645] And then again, you can use that as a [10646] starting ground to leap off of and then [10648] optimize and iterate from there. But [10649] anyh who, the sales meeting is going to [10650] occur. If you think about it logically, [10652] there are a few outcomes that happen [10653] when a sales meeting is concluded. At [10656] the end of the call, the client might [10657] like what you have to say and then they [10659] want to move forward. They might hate [10661] what you have to say and never want to [10662] talk to you again. Or they might think [10665] that this is something that I may [10666] potentially do in the future, but I'm [10667] not really interested right now. So, [10669] we're going to go through all three of [10670] these together. The first thing is this [10673] is not a fit right now. And if this is [10675] not a fit right now, then think about it [10677] logically. They're saying it's not a fit [10678] right now. So, it may be a fit in the [10680] future. And if this occurs, then what do [10681] we do? Well, in this specific sales [10683] process's case, we're waiting 30 days. [10685] And then we are pushing them back into a [10686] follow-up cycle to rebook. And so now [10688] instead of the loop being from meeting [10689] book to follow-up cycle like this, now [10692] the loop is this. And sometimes clients [10695] or prospects will run through this three [10696] or four times before you sell. But by [10698] having a system like this, it ensures [10699] that at least you're capturing the [10701] people that otherwise would have just [10702] dripped through and leaked. Right? So [10704] that's number one. This maybe happens [10706] 20% of the time in my experience. The [10708] other outcome is that it's not a fit [10710] ever. So it's not just not a fit right [10712] now. It's like, hey, no, we're not we're [10714] not a good uh mix. You know, the [10715] services that you want are not the [10716] services I could provide. I really don't [10718] like who you are as a person. I think [10719] that you'd be a nightmare to work with. [10721] You're incapable of paying whatever [10722] price I might be pitching you, yada [10724] yada. The point that I'm making is that [10725] person is never going to be a fit. And [10727] what do you do in that case? You opt [10728] out. They are good to leave your sales [10729] system. You never need to talk to them [10731] again. Amazing. The third outcome is [10734] that the sales meeting occurs and [10735] there's some type of positive outcome. [10738] So, they say, you know, man, this this [10739] sounds really great. I really love your [10740] agency. I love everything that it stands [10742] for. I'd love to work with you guys. [10743] This is a very positive outlook. Maybe [10746] they ask what's next. Maybe you explain [10748] to them what's next and I'll show you [10749] what's next in a sec. But essentially, [10751] this is outcome number three and it's [10752] the best one is the one that we're [10753] shooting for where they want to move [10754] forward. So in this way, by having [10757] multiple outcomes essentially to [10759] represent all of the various things that [10760] could happen, we're capturing the vast [10761] majority of these leads regardless of [10763] where they're falling through the cycle [10764] and then we're pushing them back through [10765] our standardized funnel. Um, you know, [10768] the standardized funnel is just [10769] everything in blue here that goes [10770] straight from from top to bottom. [10772] Everything in green is sort of like the [10773] recovery. Um, anyway, so yeah, they want [10776] to move forward. So, what do we do when [10777] they want to move forward? Well, usually [10779] in the agency space, you don't need [10781] this. And I actually don't really like [10782] sending out super complicated agreements [10784] or proposals or anything like that. I [10786] like keeping it very straight, very [10788] simple, and very to the point. And a lot [10789] of the time, I don't even like write a [10790] contract with somebody that I like and [10791] respect. The like and respect stands in [10793] for the legal ease. Some people may [10795] disagree with me and say that that's [10796] going to burn me. Hasn't burned me yet. [10797] I've made a fair amount of money. So, [10799] you know, take that with a grain of [10800] salt. Do your own due diligence, but [10801] that's my recommendation. Anywh who, uh, [10804] most agencies in order to formalize the [10806] interest of the client, they need to [10807] send some type of detailed proposal or [10809] some type of scope of work. So, the [10811] scope of work might be a list of [10812] deliverables that the client is going to [10814] get for whatever you are offering. It [10816] might be a list of monthly obligations [10818] for a retainer. It might be, you know, [10820] some type of like annual obligation to [10822] deliver X, Y, and Z or they get their [10824] money back with some refund guarantee. [10826] As long as it's just an itemized [10828] breakdown of what it is that you are [10830] providing, that's usually good enough. [10831] You can bundle in a contract with us. [10833] You can bundle in, you know, a big showy [10835] proposal or whatnot, that's totally fine [10837] if you want to do that. But as long as [10838] you just have some type of like itemized [10840] breakdown, you're basically good to go. [10841] Now, if you think about it, this send [10843] detail proposal scope of work also has a [10845] few different steps that people could [10846] take at this point. they could not sign [10848] it. Maybe, I don't know, you have some [10851] process in your system and instead of [10852] not signed, we say not signed after 7 [10854] days. So, they haven't signed it after 7 [10856] days. We need to do something, right? [10857] What we do then is we add them to the [10859] follow-up cycle. We have another [10860] follow-up cycle specifically for the [10862] contracts as opposed to just the [10863] meetings booked. And now, this follow-up [10865] cycle is basically like, "Hey, how's [10866] everything going with the contract?" Or, [10867] "How's everything going with the [10868] proposal? Let me know if I can help. I'd [10869] love to check in. You know, you [10870] discussed X, Y, and Z. I think we might [10871] be the right fit for this. What's going [10872] on?" You might, you know, have a system [10874] in your CRM that schedules a bunch of [10876] calls for you to book, right? So now [10877] you're you're jumping on a call with [10878] them instead of just sending them an [10879] email. This might be a fully automated [10881] system, right? There's just so many [10882] options here. But the point is you just [10884] need to be following up with them again [10885] if they drop off at the proposal part. [10887] Another interesting tidbit is if you [10888] consider the value of a lead at every [10890] individual step, the value of a lead [10893] here before they've really become a lead [10895] of yours, like before they they've gone [10897] through your funnel is pretty low, [10899] right? And so if you think about like [10900] your ad revenues that you spend um [10902] buying media or like the money that [10904] you're spending on SEO and if you divide [10906] that by all the people that are seeing [10907] it, like the cost that you're spending [10908] per lead, super low, not really that big [10910] of a deal. But the second that they go [10912] into meeting booked, there's now like a [10914] a value that's quite high that's [10915] assigned to every lead. Like let's say [10917] you charge $10,000 on average and then [10920] on average it takes you 10 leads to turn [10921] into one client. That means that the [10923] value of every lead as they get a [10924] meeting booked is $1,000. So, you [10926] actually should be willing to invest in [10928] infrastructure, systems, and people to [10930] try and squeeze as much value out of [10931] those $1,000 leads as possible. You [10933] know, if this meeting booked is $1,000, [10935] then if the sales meeting occurs, the [10937] value of that lead might now be $3,000 [10938] on average. If the detailed proposal [10940] scope of work step happens, well, now [10942] the value of that lead might be $5,000, [10944] right? Like at every point through the [10945] process, the value of the lead is [10946] higher. And so, you can actually spend [10948] more time, energy, infrastructure, [10949] resources, and people to try and, you [10951] know, squeeze the value out of them as [10953] much as you can. So, you know, as you [10955] proceed, maybe this follow-ups are more [10956] aggressive in nature. Maybe they're in [10958] your city. And so, I've seen um direct [10960] mail campaigns where you will send like [10962] a funny picture or something like that [10964] with some type of gift card inside and [10966] then, you know, you'll mail it to their [10967] address if they haven't signed the [10968] proposal within like a week or two. It's [10970] just something essentially to illustrate [10972] the value that lead to at that [10973] particular point in time. And you should [10975] be willing to invest resources at every [10976] step because of how much more [10978] disproportionately valuable somebody is [10980] at the end than at the beginning. Anywh [10981] who, if you think about it, they cannot [10983] sign and if they don't sign, then [10984] they're part of the follow-up cycle and [10985] then we resend, not sign, resend. We can [10987] do this all day. But obviously, the more [10988] important and the outcome that we want [10990] is for them to sign and for them to [10992] ultimately pay. And what I see so many [10993] people making a mistake at here is [10996] notice how it says signed plus paid. If [10998] somebody hasn't signed and paid or I [11001] don't know, at least paid you, right? [11002] Like as I mentioned, I don't really like [11003] proposals or contracts or whatnot, so [11005] the signatures aren't as important to [11006] me. But if somebody hasn't at least paid [11008] you for the services that you are [11009] telling them that you are going to [11010] provide them, then you can't start the [11012] project, right? And if you think about [11014] this like super old school agency model [11016] that's been around for 70 years, they [11017] understood this a long time ago. If you [11020] have a system, it's better than having [11021] no system and then starting to work for [11023] people before money has changed hands or [11025] starting to do something before you've [11026] actually locked down that you have [11028] enough capital expense to make it [11029] through this project. So, you know, just [11030] never start the project until you [11032] actually have some type of payment [11033] coming through. And you know, if you're [11034] sending a detailed proposal, maybe that [11036] includes a signature line or something. [11038] This right here is the standardized [11041] agency template that I guarantee you [11043] like probably more than 50% of all [11045] digital agencies are using. It may vary [11048] in small places. Like instead of sending [11051] the detailed proposal or scope of work [11052] in a separate step, they actually just [11054] show them in the sales step and then by [11055] doing so, they get like a yes or no [11058] close decision right there on the call. [11059] That can make things pretty quick, but [11061] obviously that's at odds with like the [11062] comfort of the client. And if it's like [11064] a bigger institutional sort of [11065] enterprise business, then a lot of the [11067] time that takes multiple steps. So this [11069] is the base template as I mentioned [11071] earlier. Why don't we now duplicate this [11073] and then show you like a couple of [11075] different ones that we can build. And [11077] I'm just going to delete this other [11078] marketing funnel that I had here cuz [11080] it's ugly and I hate it. Okay, so I'm [11082] going to do one on the left and then I'm [11084] also going to do one on the right. Okay, [11087] and then I realized I didn't copy the [11090] section as well. We're going to call [11091] this our base sales system. Maybe we'll [11095] call this our standardized sales [11098] system. And [11100] then over here on the left, I'm going to [11103] show you a one call close system. Over [11107] on the right, I'm going to show you a [11109] two call close system. And then maybe [11111] standardize isn't the right word. Maybe [11112] we'll just say like traditional agency [11115] sales system. And I think a lot of [11117] people take traditional to mean bad. [11118] It's not bad. Traditional is totally [11119] fine. I used this when I started my [11121] operations business. It served me quite [11123] well. All right. So, in the one call [11124] close system, you know how earlier I [11126] mentioned that some people like to [11127] eliminate the detailed proposal or scope [11128] work. They just stick it in the sales [11130] meeting. That's essentially how this [11131] works. You know, I mentioned earlier [11132] that like the real key in running a [11134] successful agency is your ability to [11136] simplify, not necessarily make things [11137] more complex. And so, if you think about [11139] it, like this sales system has 1 2 3 4 5 [11141] 6 7 8 boxes. We can eliminate a couple [11144] of these boxes right now by turning this [11145] from its sales meeting and then send the [11147] detailed proposal to just bundling it [11148] all together. So, how would you do that? [11150] Well, I'm just going to make this a [11151] little taller. Essentially, what we do [11154] is, and this is frustrating, but we [11157] can't get those perfectly straight [11158] lines, so I guess we will we will not, [11160] is instead of having two different steps [11163] here, think about it on the sales call, [11166] you actually have a ton of leverage [11167] because you're there with the [11168] prospecting person. And so instead of [11171] sending a proposal afterwards, which you [11172] know a lot of people do, especially [11174] people that are new to sales because [11175] they don't really like jumping on the [11176] call and then selling the person hard or [11177] that sort of dumb, you can also just [11179] sell the person right there. They say, [11182] you know, this sounds really interesting [11183] and you're like, okay, great. Well, [11184] we'll have the agreement right here. I'd [11185] love it if we could take a look at it [11186] together. Or, all right, awesome. Well, [11188] I have some resources here. I'd love it [11189] if we could take a look at it together [11190] and then wrap up payments. If you think [11191] about it, we've now taken a step that [11193] was previously eight boxes and we've [11195] turned it into just six. So we've [11197] eliminated two and this is substantially [11198] simpler and substantially less complex. [11200] What this means in practice is that you [11202] know usually the sales relationships are [11204] a little bit different because you know [11206] the client has been hard sold as opposed [11207] to you know having the time and energy [11209] to make that decision presumably for [11210] themselves. Obviously there are tons of [11212] different sales tweaks and quirks that [11214] you could use to still build a fair [11215] amount of comfort on the call, not have [11216] them hate you and and that sort of [11218] thing. But just keep in mind that if you [11219] do a system like this, uh you'll usually [11221] see higher refund rates, you'll usually [11222] see higher dissatisfaction rates, but [11225] you know, you will you will usually [11226] close more and you'll usually make a [11227] fair bit more money, which is quite [11229] nice. The other benefit to this is it [11231] reduces the spending of resources on [11234] items that are not directly associated [11237] with closing the deal. Like by [11239] eliminating those follow-up steps that [11240] we had previously and then the proposal [11242] step in a separate module, uh we're just [11244] bundling everything into the sales call. [11245] And so you can usually like structure [11247] your sales teams really really easily. [11248] Usually just have like a closer and that [11250] closer is very talented and you pay them [11252] a commission on the deal with maybe some [11253] like reasonably high flat base. I don't [11254] know. A lot of closers these days are [11256] just commission only cuz they're that [11257] confident in their ability to close. But [11258] you know makes staffing really easy. You [11260] don't really need to build any sales [11261] resources aside from what the closer [11263] has. And uh yeah just sort of sort of a [11265] one call close. The whole idea is if you [11267] don't get a yes in the one call then you [11269] just don't really need to worry about [11270] them. Obviously in this case is not a [11272] fit right now but there are also tons of [11273] businesses that just do this. you know, [11274] it's either signed and paid or it's not [11276] a fit ever. And that's an even simpler [11277] system that's only five steps, but any [11279] that's the patented one call close [11281] system that I totally just came up with [11282] completely on my own. Um, the other [11285] step, and this might be better for [11286] people that have a little less [11287] experience with scoping and automation [11289] projects in general. And this is the [11290] system I was referring to at the [11291] beginning when I said this might be like [11292] an automation specific one. Um is the [11294] two call close system where there's an [11296] initial discovery call it's called where [11298] you're feeling the the prospect out [11299] trying to figure out whether or not [11300] they're right fit and then getting all [11302] the information you need to scope the [11303] project and then you actually scope [11305] because sometimes these automation [11306] projects can be quite complex as you as [11308] you know. And then after the scoping [11310] step, you will have another follow-up [11311] call with the prospect where you will [11312] then actually try and sell them or close [11314] them. So if we wanted to convert this [11315] into a two call close system, we would [11317] have to do a couple of steps here. If [11319] you think about it, first and foremost, [11320] we're gonna have to scope the project. [11322] And that's really what happens after the [11323] discovery meeting. So, if we do a [11325] discovery meeting and then we say we [11327] want to move this forward, then what we [11328] do is we would scope the project. And [11330] maybe you're sending that to a team that [11332] does the scoping or maybe you're just [11333] doing it yourself. After you've scoped [11334] the project, you need to make sure that [11336] this is something we can do. I'm just [11338] going to say we can do [11339] this. Then we have to do a closing call. [11343] So, we have to say closing call booked. [11346] And then after the closing call, we also [11349] have to ensure that they show up. So [11352] now, you know, the closing call has to [11354] occur. I'm sure you could see right off [11356] the top of your head, but there's so [11357] many more steps in a two call close [11360] system. That said, you know, a lot of [11362] the time when you're working with bigger [11363] businesses that want much more complex [11364] projects and that sort of thing, you [11365] sort of have to do the two call close. [11366] So depends on the size of your audience [11368] and that sort of deal. And then just [11370] like we had before a bunch of outcomes [11371] where you know, you do your sales [11372] meeting, there are three outcomes. You [11373] can either move forward, you can either [11375] wait or whatnot. We have the same thing [11376] over here. So if they [11379] show the closing call can [11385] occur and then uh the closing call might [11387] be where you present the contract or [11389] whatnot. If it's not a fit right now, [11391] then you add them back to some follow-up [11392] cycle and then this time instead of um [11395] booking that initial meeting, you can [11396] just do the scoping uh project instead. [11398] And so you can go directly from the [11400] closing call not being a fit right now [11402] to waiting let's say a certain amount of [11404] time and then instead of you having to [11406] book that initial discovery call again [11408] you could just um basically offer to [11410] rescope the project which is a lot more [11412] straightforward than having to like you [11414] know actually jump back on a call. So it [11415] looks something like this and then if [11417] it's a no-show then we opt out just like [11419] we did before. If we want to move [11422] forward as I mentioned before there are [11423] a couple different options that you [11424] could do here after your closing call. [11426] who could do a detailed proposal in [11428] scope of work. And this is what I would [11429] recommend if you're doing like a [11430] two-step system because odds are the [11433] prospect has already waited a fair [11434] amount. Like, you know, you trying to [11436] hard sell them now on the second call. [11437] Probably not the smartest move. You [11438] know, if you're added to a call close [11440] system, the project's probably pretty [11441] complex. It's not feasible to like get [11442] them to sign a deal right then and [11444] there. They probably have multiple steps [11445] of approval. So, you know, you'll [11446] probably send a detailed proposal and [11447] scope of work with all stakeholders [11448] involved. This is like a $50,000 project [11450] or something. You know, then you'll do [11452] follow-ups if they haven't signed it. [11453] And then at the end, you'll finally [11454] start the project. And so this is what [11456] I'd consider a, you know, um, pretty [11459] realistic look at a two call close [11461] system. But notice how many more modules [11463] are involved. This system over here on [11465] the left has 1 2 3 4 5. So there are [11468] five steps in total. Five opportunities [11470] for things to go wrong. This traditional [11471] agency cell system in the middle is a [11473] little bit more complex, but obviously [11474] it's like the safe choice. 1 2 3 4 5 6 7 [11477] 8. But if you look at this two call [11479] close system, you know, enterprise [11482] larger projects or just people that are [11484] a little bit less confident of their [11485] ability to close, there are 1 2 I have [11488] to do this. Just realized not a fit [11491] right now. 1 2 3 4 5 6 7 8 9 10 11 12 13 [11496] 14 15 steps. And the reason why it makes [11499] sense to minimize steps is because every [11501] time you have a step, there's the [11503] opportunity for a lead to disappear at [11506] that step, right? So the fewer steps, [11507] the fewer opportunities for leads to [11508] disappear. The more steps, the leakier [11510] your sales system is. And you know, the [11512] more effort and time and energy you have [11514] to spend in basically just constantly [11516] upkeeping leads and making sure that you [11518] know, they don't really fall through [11519] those cracks. Now, the really cool part [11520] about running an automation agency is [11522] obviously if you run an automation [11523] agency, you probably have the skills [11524] available to automate a large portion of [11525] this process. So, what I'm going to do [11527] now is I'm just going to run through the [11528] traditional agency sales system from top [11530] to bottom and just show you the things [11531] that you could automate. First and [11532] foremost, all marketing you can [11534] completely automate. So you could [11536] completely automate cold email, [11537] completely automate PPC ads, completely [11539] automate SEO, completely automate social [11541] media, completely automate referrals, [11543] and maybe maybe communities is the one [11545] thing that you can automate because that [11547] depends on your personal reputation. So [11549] maybe maybe I'll take that out. But uh [11551] the point that I'm making is you can [11552] automate all of the booking that occurs [11554] as a result of efforts in each of these. [11556] So you know, in cold email, you would [11558] just attach a meeting link. PBCP ads, it [11559] would just be a one click to a website [11561] landing page with a meeting link. SEO, [11562] same deal. social media might be a [11564] YouTube video with in the description [11566] there's like a meeting link referrals um [11568] you might have like an auto draft [11569] template that you use to copy and paste [11571] every time you get a referral it just [11572] swaps out their name and communities [11574] maybe even have like a specific sequence [11575] that you guide people through although I [11576] find this is usually a lot less standard [11578] so you can automate all of that how [11579] about the sales cycle you can automate [11581] the follow-ups completely so uh what [11583] I've done before is in my CRM of choice [11586] which I was using ClickUp you can use [11587] whatever CRM you want I had a bunch of [11590] uh triggers that would occur after a [11592] certain number of days where the [11593] prospect hasn't had any action or [11595] response, you can hook up an email [11597] watcher to a ClickUp setup. And you can [11599] do this in most CRM where when you send [11601] an email to the prospect, it'll be [11602] logged in ClickUp. When you receive an [11604] email from the prospect, it'll be logged [11605] in ClickUp. And essentially, if the [11607] meeting occurred, but then I mark the [11608] meeting as a no-show. Then immediately [11610] after I marked as a no-show, they would [11611] receive a quick email being, like, "Hey, [11613] how's it going? I noticed that you [11613] didn't show up to the call. I'd love to, [11615] you know, touch base with you and maybe [11616] book another meeting. Could you use this [11617] link?" If after 3 days they still hadn't [11619] responded, then I'd send them another [11621] follow-up. After 7 days, this is on [11622] respond. I'd send another follow-up. In [11624] this way, this follow-up cycle was [11625] completely automated, and I didn't [11626] actually require any like human effort [11628] here, which is quite nice. Um, the sales [11631] meeting occurs. You can't really [11632] automate the sales meeting, at least not [11633] yet, until we have like super crazy [11635] killer Terminator style robots. Um, so [11637] you can't really automate that, but you [11639] can automate this part, right? So, you [11641] could do the wait 30 days. If you have a [11643] form or something after you do every [11645] sales call and you mark this one as not [11646] a fit right now, well, that's a simple [11647] automation. You simply add somebody to a [11649] table and then every day just check if [11651] 30 days has passed and then on the 30th [11653] day when 30 days has passed add them [11654] back to that follow-up cycle that I [11655] mentioned earlier and now this whole [11657] thing's automatic. It's not a fit ever. [11659] You know, just set up an automation [11660] where maybe you'll fill out a form that [11661] says this meeting sucked. This is not a [11663] fit and it just deletes them from your [11664] database. Detail proposal and scope of [11666] work. You can automate this for sure. [11667] Same sort of deal. You might have a form [11669] that when you mark it as, you know, this [11670] is great. They want to move forward. [11671] They want a proposal. It just [11673] automatically generates the proposal for [11674] you and sends it. I've recorded a pretty [11676] good video on this that I think a lot of [11677] people have found valuable. You don't [11678] have to automate it to that degree. You [11680] can automate it like 90% of the way [11681] there. Draft up your scope of work with [11682] templated bits and that sort of thing [11684] and then, you know, add a couple of [11685] lines for customization. Uh but you can [11687] template the vast majority of that. And [11688] then this system right over here with [11690] the follow-ups, you can also completely [11691] automate that. Signatures and payments, [11693] you can automate that, right? You can [11695] have um an automatic link in the panadoc [11697] that you send over or whatever proposal [11699] or scope of work software that you have [11701] that prompts them to pay. if they don't [11702] pay by a certain amount of time, you can [11704] do automatic follow-ups and reminders [11705] and that sort of deal and then you know [11706] the project starts. So the good news is [11708] like if I were to show you guys the the [11710] points that actually require human [11712] intervention or like a human in a fully [11713] automated system, it's this right here. [11715] So you need to hire for this. Yeah, [11717] that's about it. You just start the [11718] project down here. Um so you know only [11720] two steps where you actually require [11721] humanity humans. Uh and then the other [11724] what's that like six steps that are [11726] completely robotic process automated. [11728] Same thing here. I'm not going to beat a [11730] dead horse cuz I think at this point [11731] it's pretty clear what you can automate. [11732] But yeah, you can automate basically [11734] everything um except for the actual [11736] calls themselves which is quite nice. [11737] And this is, you know, an edge that an [11739] automation agency will have over most [11740] other agencies cuz most other agencies [11742] require humans to do all of this. Most [11743] other agency's biggest problems are [11745] their follow-ups. They don't do anywhere [11746] near as many follow-ups as they should [11747] be. And so if anybody doesn't show, [11749] okay, like 40% of all calls that ever [11751] happen, their sales system is just [11752] instantly only 60% as effective as it'll [11754] ever be. So that's 60% starting from [11756] here and then uh down over here, you [11759] know, maybe like another 50% fall off. [11760] So they're actually only like running at [11762] 30% capacity, right? You as an [11764] automation or an automator or an [11766] integrator watching this video, you [11767] could probably bump that up to like 70 [11769] 80%. Essentially, you could duplicate or [11771] double the value of a sales system uh [11773] versus a traditional agency that doesn't [11774] understand the value or the ability to [11775] automate stuff. So that's pretty cool. [11778] Yeah, that's more or less it. I would [11779] just make sure that whatever you do, you [11781] have a system. You don't need the system [11783] at the beginning, but you do need a [11785] system. And you need to make sure that [11786] at every point clients just go through [11789] your system. You're not going through [11790] theirs. You know, like when you're [11792] starting out and you're pretty small, a [11794] lot of the time, the inclination is the [11796] client will set the agenda. You'll jump [11798] on the call, the client will tell you [11799] what you're talking about. You'll send [11800] them an email, the client will tell you [11802] when you're chatting and who you're [11803] chatting with. And I understand that it [11805] can be pretty intimidating when you're [11806] working with like a bigger company or [11807] trying to offer a bigger service and [11808] maybe you don't have any experience [11809] under your belt, but just no matter what [11811] you do, make sure that you are guiding [11813] them through the process because the [11815] second that you standardize it and you [11816] make sure that every client that you [11818] have or every prospect that you has goes [11819] through the same flow, you start being [11821] able to point out the areas that are [11822] weak in your sales process and then [11824] every prospect that you have makes you [11825] 1% better. And by the end of the month, [11828] year or decade or whatnot, you will have [11829] like a very bulletproof iron and [11831] extremely profitable sales system. Cool. [11833] So, you now have a proven sales process [11834] that converts prospects into clients. [11836] But here's where the vast majority of [11837] automation entrepreneurs leave a ton of [11839] money on the table. They have no idea [11840] how to price their services properly. [11842] Now, pricing isn't just about covering [11843] your costs and adding some cute markup [11845] at the end. It's actually a strategic [11846] tool that can position you as either a [11848] premium expert or a cheap commodity in [11850] many cases. If you get it wrong, you'll [11852] either price yourself out of deals or [11853] you are severely undervaluing the [11855] quality of your work. The next section [11857] reveals the exact pricing strategies [11858] that I personally use to scale past [11860] seven figures. We're going to cover [11861] eight different pricing methods, when to [11863] use each one, and how to position your [11864] services so clients are happy to pay [11865] premium rates for your automation [11867] solutions. Let's dive in. I hope you [11869] guys got a pen and paper because we are [11870] breaking out the spreadsheet for this [11872] one. Uh, as per always, just a little [11874] preamble. This is my own process and my [11876] own thinking. It got me to $72,000 a [11878] month with my own automation agency. But [11880] I'm not trying to say that this is the [11881] only way that you can do things. If I [11883] were you, I would take what works, leave [11884] the rest. Another little disclaimer is [11886] naturally that there are many ways to [11888] price. One thing that I will let you [11890] guys know right off the bat is that no [11892] pricing methods are perfect. Like there [11893] is no pricing method that is perfect in [11895] every way, shape, or form. All of them [11896] actually have drawbacks and not a lot of [11898] people that are talking about this are [11899] going to tell you. The reality is some [11901] are better than others for different [11903] circumstances, different offers, and [11904] different services that you're selling. [11906] So, I'm going to try and get pretty [11907] nuanced with it. I don't want to just [11909] give you guys a simple price this way, [11910] that way, and that way answer because I [11912] don't really feel like that's fair to [11913] the concept of pricing in general. So, [11915] you don't actually need to use all of [11917] the pricing methods I'm going to talk [11918] about. A good example of one is, you [11920] know, you would not charge a percentage [11921] of revenue for something not in your [11923] control. For instance, I'm going to talk [11924] about um how to do percentage based [11926] pricing in a minute, but that's just a [11927] good example of how, you know, some [11929] methods are going to work better for [11930] specific circumstances than others. You [11932] probably also would charge different [11935] types of companies differently. So, you [11936] wouldn't charge a small to mid-size [11937] business at about 10 staff members the [11939] same way that you charge an enterprise [11941] company at a thousand staff members. [11942] Odds are they also probably have their [11944] own rules and regulations and you know [11946] internal policies that dictate how they [11947] work with vendors. So you know you're [11949] going to have to work around that and [11949] I'll mention that a little bit later on [11950] in the video. Another thing I'll say is [11953] that some methods work better for [11954] different stages of your business. [11956] Hourly pricing is super popular [11957] especially on jobs platforms like Upwork [11959] and stuff like that. It's very simple to [11961] get started with. I actually recommend [11962] people that have never made money on the [11964] internet to start with it. But note that [11966] it becomes super limiting as you grow [11967] and as you scale your business. So I'm [11968] going to cover that. Uh, and really just [11970] to loop it all together, the best [11972] agencies constantly re-evaluate the best [11975] ways to price to maximize their value. [11977] So, if you want to be one of those [11978] aforementioned best agencies, you should [11981] probably do that, too. Okay, great. [11983] Let's dive into method number one. We [11986] are going to start with hourly just cuz [11988] hourly is by far the most popular. I'm [11990] going to zoom in a little bit here and I [11991] think I'm going to put my face in the [11992] top right hand corner this time just be [11994] a little spicy. So, here's a quick [11996] example of what hourly pricing might [11997] look like. You get a client on Upwork. [11999] They want you to build a simple [12001] automation from the ground up that's [12002] custom to automate some repetitive data [12005] entry task. Maybe you are grabbing data [12008] from source A, pasting it into a [12009] spreadsheet, something like that. You [12011] think that it's going to take maybe four [12013] or five hours. So you tell the client [12014] and then they say great. They accept the [12017] offer. You guys do all this fun stuff [12018] together on the platform and then the [12020] billing begins at $100 per hour until [12022] the project is complete. Uh if the [12024] client adjusts the scope or wants [12025] something new, you're just going to [12026] continue billing them at that rate. This [12028] is how the vast majority of hourly gigs [12030] go. Typically, this works best for very [12033] small projects. Uh discovery phases with [12035] high uncertainty in scope. That means [12037] that, you know, the client doesn't [12038] really know what they don't know. So, [12040] just to hedge their bets, they don't [12041] want to pay somebody $10,000 or $100,000 [12044] for something they're not really [12045] entirely sure what they want. Automation [12046] agencies and freelancers that are at the [12048] start line of their business tend to [12049] choose this as well. And there's also [12051] some good and some bad. So the good [12052] involved in pricing on an hourly basis [12055] is that it's super easy to start, right? [12057] If you think about it, hourly pricing is [12059] the default. Everybody on planet Earth [12061] after the age of five sort of [12062] understands how this works. The clock [12064] goes by 1 hour and every time that that [12067] happens, you receive a certain amount of [12068] money in your pocket or on your time [12070] sheet. It's very well defined. It's [12072] supported by all major freelancing [12074] platforms, which is where a lot of [12075] newbies get started on. It's something [12077] that just sort of transcends you having [12079] to explain it. And it also appears from [12082] the client perspective very low risk. So [12084] these are all the good points in hourly [12085] pricing. This is the main reason why [12087] somebody might want to uh start with [12088] hourly pricing just because it minimizes [12090] friction. Lets you get up and running. [12092] Lets you get your first couple jobs out [12093] of the way. You'll notice that the bad [12095] is a lot longer than the good here. And [12097] the reason why is because if you think [12099] about it logically, the time that you [12101] spend building a system does not [12104] accurately reflect the value that you [12106] bring to an organization. Especially [12109] nowadays with templated systems and [12111] solutions like make.com, Zapier, no [12114] code, it's the time that you spent and [12117] invested learning how to build those [12119] things and maybe building out those [12121] templates that actually matters. That's [12123] what actually reflects the value you [12124] bring to an organization. So the point [12126] I'm making is if you're really really [12128] good, you're going to work much faster [12130] than other people and you're going to [12132] make less money because of it. So, why [12133] would you want to commit to hourly [12135] pricing uh if it's not just your first [12138] few gigs and if it's not just this [12139] crutch? Because it penalizes you for [12142] doing good work fast. It's silly. I [12144] should also note that this actually can [12146] be less appealing to clients sometimes, [12148] especially on larger projects because [12150] from their perspective, you know, costs [12152] can escalate. There's no fixed cap to [12154] it. They don't really know when costs [12156] are going to end. things typically in [12158] the contractor world go over budget and [12163] over schedule as well. And you know, a [12165] lot of clients are are cognizant of [12167] that. So, the reason why I talk about [12169] hourly here is just to show you guys [12171] that this is a viable way to price. It's [12173] especially powerful if you're just [12175] getting off the ground. I definitely [12176] took a lot of hourly gigs when I got [12178] started in automation. Um, even in [12180] content writing before that, um, even in [12183] like webdev, freelancing before that. [12185] And it's it's totally cool because, you [12186] know, it allows you to figure out how to [12187] do client management. It allows you to [12189] figure out a lot of the the things that [12191] um you won't know until you actually [12192] find yourself in some sort of contract. [12195] But the second that you have a couple of [12196] hourly gigs, it's best to uh off-ramp [12200] and switch to one of the subsequent [12202] models that I'm going to talk about in a [12204] minute. So now we get away from hourly [12207] and now we're moving into higher value [12209] ways of pricing. I'm calling these [12211] valuebased methods. They're all fixed [12213] price. That just means that instead of [12215] you billing the customer or client based [12217] off time, you actually just give them [12218] like a fixed amount of money and then [12220] based off that fixed amount of money, [12222] you can bill them maybe half upfront, [12224] half after the project's completed. If [12225] it's like a big enterprise company, a [12227] lot of the time they'll want to work um [12228] based off what are called milestones or [12229] tanches, which is where, you know, maybe [12231] it's like 25% at the beginning and then [12233] 25% after some milestone is completed, [12235] 25% after another one's completed, then [12237] another 25% at the end. Anyway, that [12239] part isn't super important. Just [12240] understand the broader concept here. [12241] Here's how this first way of valuebased [12243] pricing works. It's called cost savings. [12245] So, example, a friend of yours runs a [12247] consulting business. Right now, it costs [12248] this consulting business $50,000 a year [12252] to pay a staff member whose sole job it [12254] is is to generate reports. They do [12256] analyses, graphs, spreadsheets, package [12258] them in a PDF, send them off to [12260] customers. This is extraordinarily [12261] common. There are a lot of consulting [12262] businesses that pay people, you know, [12264] between $50 to $100,000 a year just to [12266] do like this. Now, you being a [12268] proficient automation engineer that has [12269] watched all of my YouTube videos, you [12271] are confident that you can automate this [12272] completely and save that company $50,000 [12275] annually. So, the way that you would do [12277] cost-saving based pricing in this manner [12279] would be to charge them 25% of the [12282] savings. So, somewhere between 10 and [12284] $15,000. Why didn't I just write [12285] $12,500? I don't know. I guess I was a [12287] little bit sleepy. Uh the point that I'm [12289] making is what you do is you figure out [12292] how much money you're saving the company [12293] with the system and then you charge some [12295] percentage of that money. You can only [12298] do this if you obviously talk to the [12300] customer, if you consult with them, if [12302] you figure out their pain points and how [12304] much money uh this lack of a solution is [12307] is impacting in terms of their bottom [12308] line. But once you know that, you have a [12310] ton of leverage in negotiations uh and [12313] you can charge some percentage of that [12314] to help their business out. So this is [12317] the first method. There's another method [12318] in a second, revenue uplift, which I'll [12320] talk about, but this works really, [12321] really well as an off-ramp or a [12323] transition from pure hourly based [12325] pricing. Typically, this works best with [12327] automations that directly reduce [12329] operating expense or they streamline [12331] some sort of very resource-heavy task. [12332] That contractor or consultant that costs [12335] $50,000 a year is a good example. Larger [12337] companies with high revenues but poor [12339] margins or inefficient operations are [12341] great targets here because let's think [12343] about it. If a company makes a hund00 [12345] million a year and if you can improve [12347] their margins by 1%, you are making that [12351] company a million dollars a year, right? [12353] So, they can justify spending a lot of [12354] money on you. It doesn't really work as [12356] well in the other way around. Like if a [12358] company's making $10,000 a month, let's [12361] say hypothetically, and you can shave 1% [12363] off their margins, well, uh what [12365] is that? Like a hundred extra dollars a [12366] month. You can't really justify too much [12368] from there. But I think you guys kind of [12369] get my point. It does take a few clients [12372] before you can intuitively scope [12373] projects like this. A lot of the time, [12374] one thing that I see in my community, [12376] specifically my beginner community, [12377] Maker School, is people really struggle [12380] with talking about about money, about [12382] dollars with customers or prospects, uh, [12384] at the time, I should say. You know, [12386] they just feel like it's this elephant [12387] in the room that's kind of staring them [12388] down, but they just can't really get [12389] down to brass tax and okay, so how much [12391] money is this costing you? Oh, you don't [12392] know? Well, let's figure it out right [12393] now together. So, if you're just at the [12396] very start line of your automation [12398] business or your agency and you haven't [12399] really figured out how best to talk [12401] about stuff like that, you may find this [12402] difficult. You may also screw up a [12404] little bit. You might quote either way [12406] too much money or way uh too little [12408] money a few times. That's all right. [12409] This is all just part of the learning [12410] experience. Um, at least now you know [12412] what this is. So, the real benefits here [12414] is that cost-saving based pricing is not [12416] tied to your time. It is way more [12418] scalable than something like hourly, [12420] which we talked about a moment ago. It [12422] also lets you template out your work. It [12423] aligns incentives between you and the [12426] client. What I mean by aligning [12427] incentives is instead of you being [12429] penalized for doing a faster job better. [12431] If you do a faster job better, you're [12433] rewarded because you just did the same [12435] job and made the same amount of money in [12436] a fraction of the time. You can make [12439] 10,000 bucks in a few hours if you build [12440] it right. There are a lot of systems out [12442] there that do stuff like what I just [12444] talked about, generate reports and [12446] assets and PDFs that can literally [12449] eliminate a staff member like Terminator [12451] T2 style. um I'll be back that you know [12455] you can build in just a few hours and [12457] you can charge five 105 $20,000 for it, [12460] right? And note that you know I'm [12462] charging them 25% of the savings here or [12463] in this hypothetical we're doing this on [12465] an annual rate. So you know in this case [12468] it's probably like a one-time build plus [12469] some sort of like low monthly [12470] maintenance. I'll get into retainers and [12472] subscriptions in a moment. But yeah, you [12474] can make a ton of money in a few hours [12475] if you build this right. The bad here, [12478] and there is always bad, as I mentioned, [12480] no pricing method is perfect, is it's [12482] harder to justify saving money in [12484] practice than it is to making more [12486] money. The gap between the money that [12488] you save them and the money you charge [12489] for them, there will always be a gap. [12491] You will never be able to charge like [12492] $50,000 for a system that saves somebody [12494] $50,000. The reason why is because you [12496] got to think of it from the client [12497] perspective. They have a solution right [12498] now that costs them 50 grand and it [12501] works, right? It does the thing that [12502] it's supposed to do. Your solution might [12504] cost $10,000, but there's uncertainty. [12507] You don't know if it's going to work. [12508] There's risk on behalf of the client. [12512] They aren't entirely sure if you're the [12514] professional that maybe you seem to be. [12516] There's risk on behalf of the [12518] technologies. They don't know if these [12519] technologies have 100% uptime. They [12521] don't know if there might potentially be [12523] some issues with them. There's costs for [12525] the technology. There's costs for your [12527] time that might be hidden. Right? The [12528] point I'm making is you can never [12529] actually charge the amount of money that [12530] you save. you can only ever charge a [12532] fraction of that. In context, you can [12534] usually do up to about half or so. I [12536] mean, this is like a a loose rule of [12538] thumb that I'm just giving you guys from [12540] my own experience here. I have only ever [12541] charged up to about half of the savings. [12543] And that was when the client was [12545] extraordinarily confident in me, very [12547] risk tolerant. We had basically no [12549] maintenance costs and we had basically [12550] no infrastructural cost. So, yeah, [12552] that's the bad. As you guys can tell, [12553] this is still way better than hourly [12555] pricing, but no pricing method is [12557] perfect. Let's move on to the third. The [12560] third major method is called revenue [12561] uplift. Or rather, I just decided I [12563] would call it revenue uplift, so now [12564] we're all calling it revenue uplift. The [12566] example here is you're working with an [12568] agency. Uh you build them a cold email [12570] system that you project will net them [12572] $10,000 a month in sales, about 120k a [12575] year. So what you do is you charge them [12577] a one-time fee of $3,000 for this [12581] system, which is 30% of rev. And that's [12582] just to set up the the system to I don't [12584] know connect the mailbox to do whatever [12586] hy jinks you need to do in the [12587] background along with a monthly [12588] management cost of $2,000 20% of [12591] revenue. Why did I break it up like [12593] this? Well, I broke it up like this just [12594] to show you guys that at the end of the [12596] day, this is your business. This is your [12597] freelancing operation. You could do [12598] whatever the hell you want. You could [12600] charge an upfront amount for a certain [12601] thing and then a monthly amount for [12602] another thing. Um I I'm just trying to [12604] show you guys that you guys can be [12605] flexible in the way you do these pricing [12607] uh you know the these proposals. I want [12609] you guys to know that there are a [12610] variety of options here and you can also [12612] mix and match them however you like. So [12614] typically, how does this work? Um, [12616] typically this works best with sales and [12617] marketing automations that have clear [12619] attributable revenue impact. What I mean [12621] by revenue impact is I mean like you [12623] know it's a sales system. It's a growth [12624] system. It does something on the front [12626] end. It DMs people on LinkedIn or it [12628] cold emails people uh by scraping their [12630] their leads from Apollo or something, [12633] right? It's it's something involved in [12634] outreach, something involved at the [12635] front end of a business. And because [12637] it's involved at the front end of the [12638] business, you can typically actually [12640] take uh you can typically actually make [12641] a lot more money with stuff like this, [12643] right? You can only ever save 100% of [12645] your revenue, but you can make an [12647] infinite percentage more of your [12649] revenue. So, what I find in practice is [12651] beginners also find this difficult just [12653] because again, they don't really know [12654] how to talk about money. They don't [12655] really know how to conceptualize what [12657] the customer lifetime value is. If a [12659] business uh I don't know, every 10 [12661] meetings they close one client and the [12664] client is worth $10,000, you can kind of [12666] think of it as that meeting in and of [12667] itself is worth $1,000 to that business, [12669] right? Well, you can continue reverse [12671] engineering from there to figure out how [12672] much a lead is worth, how much money [12674] that the company would need to spend to [12675] acquire an equivalent thing. You can do [12677] a bunch of math, but a lot of the time I [12678] find that, you know, beginners just they [12680] just can't because they don't have the [12681] experience, they don't have like the [12682] business knowledge. So, yeah, this is [12683] definitely a little bit harder. It's [12685] harder than hourly, but uh maybe it's [12687] about on the same level as cost savings. [12688] Okay, so the good is again this isn't [12690] tied to your time. It's much more [12692] scalable. It lets you template out your [12694] work and it aligns incentives between [12695] you and the client. You can also make [12697] 10,000 bucks in a few hours if you build [12699] this right. The bad is the gap between [12702] the money that you think that you're [12703] going to make them and the money that [12704] you actually charge for the system is [12706] again a product of these three things. [12709] And in practice, I find that you can [12712] charge a lower fraction of the money for [12715] revenue uplift than you can for cost [12717] savings. So what I what do I mean by [12719] this? Well, you know, in the previous [12720] example, we saved a company $50,000 and [12722] then I said the maximum that I've [12723] realistically charged about half. And [12725] you know, I've worked on a ton of [12726] projects here. So I don't really think [12728] this is just my own lack of confidence. [12729] I think that there is some theoretical [12731] limit here and it's about half. Um, you [12733] know, you wouldn't be able to charge [12734] half of the equivalent value that you'd [12737] bring to a company revenue-wise. That [12738] would just be crazy. Companies also have [12740] like operational costs to acquire sorry [12742] operational uh costs to like uh fulfill [12745] the deal, right? They have a lot of [12747] revenue uncertainty. They have like [12748] operational uncertainty. They have debts [12750] a lot of the time, right? So if you were [12752] to charge them 50% of every dollar that [12753] you made them, most of them wouldn't be [12754] able to survive. In practice, I find 30% [12757] is like that theoretical limit. Um most [12759] of the time it's less. Most of the time [12760] it's like 10, 15, 20%. But you know, [12762] obviously you could still make a ton of [12763] money on this. And I'm going to show you [12764] a few alternative revenue uplift models [12766] in a moment that frame this just so that [12769] it's not like a one-time fee. It's sort [12770] of like a distributed recurring fee [12772] based off of performance. Okay, speaking [12774] of performance, this one is the per [12776] outcome model. Now, I say eg meetings [12779] booked just cuz that's the simplest way [12780] for me to conceptualize this cuz I sell [12782] a ton of cold email. Here's a quick [12783] example. You're working with an agency. [12785] You build them a cold email system and [12787] you project just based off of, I don't [12789] know, the volumes that you guys are [12790] going on, the math that you've done [12792] based off similar offers and all that [12793] stuff that you're going to book them [12795] about 20 meetings per month. So maybe [12796] one every business day or so. Now, [12799] historically, they close a quarter of [12801] those. So they close 20 divided by four, [12803] five, right? And the customer lifetime [12805] value of that is $2,000. So if you do [12808] the math, basically what I'm trying to [12809] show you is this is equivalent to this, [12810] right? It's about the same thing. 10,000 [12812] bucks a month over here, 10,000 bucks a [12813] month over here. So, what you do is you [12816] pitch them that first thing and they [12818] say, "You know, man, I don't really like [12820] this. I don't really think that this is [12821] feasible or possible. Uh, I don't have [12823] the money to spend up front. Why don't [12825] you only pay me uh or you know, I'll [12826] only pay you on on results or [12828] something." So, what you do instead is [12829] you pivot and you charge them a per [12831] meeting rate of $150 each instead. So, [12834] instead of you getting that money [12836] upfront, sort of guaranteed, what you do [12838] is you say, "Hey, I completely [12839] understand. I'm going to charge you [12841] based off of the outcome because that's [12842] how confident I am that I'm going to [12843] crush it. So, if you do the math on [12845] this, 20 meetings times 150 bucks. Well, [12847] that's 3,000 bucks a month. That's [12848] actually a little bit more than what we [12849] were charging before. And in reality, um [12852] you can make a lot more money with per [12853] outcome and revenue based uh revenue [12855] percentage based splits, which I'll talk [12857] about too, than you can with like a [12858] fixed price thing simply because these [12860] things scale with performance. And if [12861] you're a really high performer, you can [12863] make a ton of money for other [12865] businesses. Okay. So typically you do [12867] this with projects that have [12868] quantifiable outcomes that you are super [12870] confident you can deliver. This is going [12871] to be stuff like meetings booked. Maybe [12873] you do some recruiting automation that's [12875] going to be candidates placed. The [12877] unfortunate part is beginners are going [12878] to find this very difficult to do in [12880] practice cuz they're just not going to [12881] know enough in order to land these deals [12883] consistently or get these booked [12885] meetings or get these candidates. The [12887] kind of terrible irony is unfortunately [12889] it's usually beginners that take these [12891] projects on disproportionately because a [12893] lot of the time cheap clients will [12894] respond just like they did in my [12896] example. They'll say no work unless uh [12898] you don't charge me anything upfront [12900] only on deal sign or something of that [12902] nature. So a lot of the time you will [12904] sort of be forced to do this as a [12906] beginner especially if you have no real [12907] experience under your belt and you just [12909] want to get a case study through the [12910] gate which I find just hilarious. I mean [12912] I did a couple of these as well when I [12913] was first starting out. I had a couple [12914] of them that worked. The vast majority [12916] of them did not, just to be completely [12918] clear with you. I've also had a few [12919] people that I work with now that charge [12921] per outcome and they make a boatload of [12923] money because they're pros at it. We're [12924] talking 30, $40, $50,000 a month. So, [12927] you know, it's usually like high- risk, [12929] high reward thing that you only take on [12930] if you're good. Okay, speaking of good, [12932] the good is that it's a lot easier to [12933] conceptualize on the client perspective [12935] than an upfront cost. Instead of the [12937] client spending $3,000 on you, [12938] basically, mentally, they're saying, [12939] "Well, I'm gonna spend $150 on him. I [12941] will wait for him to generate results [12942] and then I'm only gonna have to spend [12943] $150 on him." Right? So, you're tying it [12946] to a performance metric. Technically, [12948] there's unbounded upside. You can make [12949] as much money as you want. And since [12950] book meetings are probably entirely in [12952] your control in this example, you are [12954] mostly responsible for how much money [12955] you make. Like, if you're not [12957] delivering, well, that's not really on [12959] them, right? That's on you. So, you [12960] could just become better at what you do. [12962] You could find a more effective method [12964] to squeeze all the value out of these [12966] cold leads and you'll make more money. [12968] The bad is it's not stable. It's not [12970] guaranteed. There's no upfront revenue. [12973] Though you may feel confident, there [12974] will still be some circumstances that [12976] are definitely outside of your control. [12978] Um, you also have no deposit. You have [12980] no way of paying off startup costs. You [12982] think about this specific system, which [12983] is cold email system, you are going to [12985] have some startup costs. You're going to [12986] have to buy some domains, buy some [12987] mailboxes, you're going to have to, I [12989] don't know, maybe pay somebody to set [12990] all of this stuff up for you. If you [12992] don't have something to offset those [12994] initial startup costs, you will [12996] basically always be operating at a loss [12997] until some inflection point. [12999] Theoretically, I also find just [13001] anecdotally, if a client doesn't pay you [13003] something, like to start a project, to [13005] kick off a project, they tend not to be [13008] as locked in to that project and they [13011] tend to I don't really know what it is. [13012] Maybe the lack of like confirmation bias [13015] or cognitive dissonance or something. [13016] They tend not to believe it in as much [13018] if they haven't paid for it, which is [13019] funny cuz it's like, well, shouldn't you [13021] believe in it more because I'm doing it [13022] all without even charging you anything? [13024] But clients are funny. More generally, [13027] humans are funny. And that's sort of how [13028] we do things. The last thing I'll [13030] mention here is payment schedules can [13031] suck, too. This is contingent on how you [13034] set up the payments. I recommend setting [13035] up your payment schedules as shortly as [13038] possible and as a small interval as you [13040] can. So, most of the time we'll bill [13042] people monthly, right? Well, if you're [13043] doing some type of per outcome based [13045] thing, don't build them monthly, build [13046] them weekly. Um, send an invoice every 7 [13048] days or something of that nature that [13049] counts up the number of meetings booked [13051] and then charges them. Better yet, put [13053] them on autopay and you actually just [13054] decide how much it is and then bill [13056] them. Obviously, it takes some time to [13057] get to the point where you're confident [13058] enough to do these sorts of [13060] arrangements, but I think you guys get [13061] my point. Minimize the intervals. All [13062] right. Another pricing method here is [13064] called the hourly retainer. I think [13066] that's probably the most obvious, you [13069] know, way to transition from doing [13070] something purely hourly to getting some [13073] sort of MR here. Here's a quick example. [13075] Let's say you've been working with a law [13076] firm for the last few months. You've [13077] been creating simple systems that [13079] streamline their man, what the hell is [13081] that called? Patient client intake. On [13083] average, you bill around 20 hours at [13085] $120 an hour. Next month, you approach [13088] them with an offer. You say, "Hey, Mr. [13091] Whatever, instead of you paying me [13094] $2,400 at the end of the month, why [13097] don't you prepay me 20 hours at a [13100] reduced rate of $100 an hour at the [13103] beginning of the month? Aka, instead of [13105] paying me 2,400 bucks at the end, why [13107] don't you pay me $2,000 at the [13108] beginning?" [13110] you're going to get guaranteed sorry [13113] you're going to get cheaper uh hourly [13115] rate from me and you know that you're [13116] going to use and and exhaust my hours [13119] anyway and then I'm going to get [13121] guaranteed work so I'm going to be able [13122] to go to sleep at night without tearing [13124] my hair out. So it becomes a win-win for [13126] both of you basically and this is one of [13127] the simplest ways to go from working [13131] entirely on a project basis to working [13133] on a consistent MRR or some sort of [13136] monthly recurring basis instead. I took [13139] a ton of these when I started out. [13141] Hourly retainers were still hourly, of [13143] course, but they were also monthly. And [13145] it was that monthly revenue that gave me [13147] a ton of financial certainty that calmed [13150] me down quite a bit and enabled me to [13152] look a little bit further than just like [13154] the next day ahead. You know, I was able [13155] to start making longerterm plans for [13157] weeks, months, years in advance. So, [13160] typically what this looks like is some [13163] sort of ongoing automation maintenance, [13165] some incremental improvements to [13166] systems. If a client hires you [13168] consistently every couple of weeks or [13170] something like that, then pitch them on [13172] an hourly retainer instead. Save them a [13176] little bit of money. Save you a little [13177] bit of that [13178] variability. The benefit there is that [13180] it's the simplest and easiest transition [13182] to a monthly payment model. It's also [13183] great for beginners. I highly [13185] recommend do hourly. Like if I could go [13189] back in time and tell myself, I would do [13191] hourly and then I would try and [13192] transition at least one client to an [13194] hourly retainer. And the second that I [13196] have that, I'd be like, "Okay, I'm [13197] probably good enough to now start [13198] charging on a value basis instead." You [13200] can also put your clients on autopay. [13201] You can effectively buy yourself that MR [13203] with the $400 differential, which a lot [13205] of the time is worth it. The bad is [13207] obviously it's still hourly. Your value [13209] is not being ideally represented because [13210] it's not really in the amount of time it [13212] took you to build that system, right? [13213] It's the amount of time, energy, and and [13215] resources that you've built up over your [13217] lifetime in this career. Still not too [13219] bad if I do say so myself. Uh the sixth [13222] is deliverablebased retainers. So quick [13225] example here and let me explain why this [13227] differs a lot from the previous [13228] retainer. The example is let's say [13230] you've been working with a marketing [13231] agency for the last couple of months. [13233] Every few weeks this marketing agency [13235] will ask you for a consultation. In that [13237] consultation you guys will discuss a [13238] system that you guys are building [13240] together. And up until now the way that [13242] you've been pricing these systems is [13243] using the cost-saving and revenue uplift [13245] models that we talked about earlier. But [13247] you really like these clients. You love [13249] them. They love you. and you want to [13250] turn your currently oneoff revenue into [13253] monthly recurring revenue instead. So, [13255] here's what you do. You approach them [13256] with a deliverable-based retainer. You [13258] say, "Hey, Dr. Peter, Dr. Peter, for [13263] $5,200 a month, you'll get a weekly [13266] strategy call with me. It's 45 minutes. [13269] You'll get a monthly priority plan where [13270] we lay out the next four weeks of [13273] operational priorities. You'll get daily [13275] Slack availability where you can contact [13277] me within 15 minutes between 12:00 to [13279] 2:00 p.m. Anybody on your team can. I'll [13281] be your QA guy. I'll help train them. [13283] Speaking of training, I'll give you one [13285] 2hour team training session. Maybe if [13287] they're in your city, you even go to [13289] their office and do this in person. On [13291] top of that, I'll also give you [13292] unlimited maintenance on old projects. [13294] You never have to pay me a one-off [13296] amount to fix up an old system or [13297] something. I got you for life. And in [13300] addition, you know how you've been [13301] gushing over my YouTube videos that I've [13303] been posting and you love that system [13305] and that system and that system. I will [13307] give you one of those systems every [13308] single month and install it in your [13310] business myself. Um, you get to pick at [13313] the beginning of the month and then by [13314] the end of the month, you'll you'll have [13315] it. Doesn't matter what system it is, [13316] however complicated it is, I'll do that [13318] for you. All right. So, as you guys see, [13320] we've shifted the value prop, right? [13323] Previously, the value prop was I will [13324] spend X hours with you or working for [13327] you. And now the value prop is you will [13330] get X deliverable as a result of working [13332] with me. Aka the $5,200 a month that you [13336] spend will net you some sort of return [13338] on your investment. Right? So typically [13341] this works best with clients that value [13342] your systems and routinely consult with [13344] you. Uh it's also great for longerterm [13346] growth oriented partnerships. I [13348] mentioned inbound clients here as well [13349] because this has been great for me as [13351] I've started growing my YouTube channel. [13352] I've signed a lot more of these because [13354] people just instinctively like and trust [13356] you. I think they probably also listened [13357] to my logic around hourly pricing. [13359] They're like, "Yeah, that's right. Let [13360] me just pay Nick deliverably based [13362] instead." So, the good here is you have [13365] super high leverage. Okay? You have [13367] control over all of your deliverables, [13368] meaning you get to pick how you want to [13370] construct your retainer. You don't have [13371] to construct it like I did. This is just [13373] how I personally do mine. You guys can [13375] structure it however the hell you want. [13377] So, you could build it out in a way [13379] that's like hyper leveraged that takes [13381] you as the service provider like 2 hours [13383] a month to do, right? And that means [13385] that you can feasibly make a lot of [13387] freaking money. You can feasibly make [13388] like $500 an hour or more consistently [13390] over a long period of time. And you can [13392] also, just like before, put your clients [13394] on autopay and then grow your MR. The [13397] thing is, it's also, and I mentioned, I [13399] put this in the good for some reason. [13400] It's very good that this is hard for [13401] beginners because we don't want any of [13402] them taking our money. Uh, but it's very [13405] hard for beginners to do because they [13408] have to constantly justify their cost. [13410] If their systems do not deliver an ROI, [13412] they will be let go eventually. And [13414] that's something that you just have to [13415] know. So if you're charging some sort of [13417] hourly rate or or whatever, uh it's [13419] personally a lot easier to justify this, [13421] right? Because they can just cut you off [13422] at any time on the hourly on the hourly [13424] basis. And also it's your time uh that [13427] they're they're paying for, not [13428] necessarily your ROI. But in this case, [13431] it is strictly framed as like, hey, if [13433] you're paying me $5,200, I want to make [13435] you some multiple on that. The only [13437] thing that you deliver are deliverables, [13439] obviously. So this calculation of does [13441] Nick generate me more than 5.2K 2K a [13442] month. Uh I just find that it tends to [13444] happen substantially more often on a [13446] structure like this than it did on a [13447] structure like this. So again, it's just [13450] kind of a high-risisk, high reward [13451] thing. You can make a lot more money in [13452] this method uh if you're a little better [13454] and more mature, I want to say, with [13456] your business processes. It's just sort [13458] of what you got to do. All right. Now, I [13460] want to talk about one alternative [13461] pricing based method, and then I'll [13463] cover the last one, which is pretty [13465] contentious, which is uh percentage of [13467] revenue. But this is a very interesting [13469] pricing method and I've seen it happen a [13471] lot more in my community as of late, [13472] specifically with people that are [13474] building SAS companies using no code [13476] tools. What do I mean by this? I mean, [13479] you know, SAS companies, the capital S [13481] in there stands for software. You're [13483] offering software as a service, right? [13484] Well, what you can do with a lot of no [13486] code tools is you can actually build out [13487] the infrastructure for a SAS company [13489] just in your noode editor in make.com or [13492] Zapier or NA10 or something like that. [13493] You don't actually need to do all of [13494] that programming. You could have a [13496] function that you know you have some [13499] website on the front end that people log [13500] into and then they put in some website [13503] brief and they say I want a website that [13505] looks like this that looks like that [13506] looks like that and then you could send [13507] that request to your make scenario that [13509] could generate you a bunch of HTML and [13511] then you could spit it back at them and [13512] then voila you basically have your own [13513] SAS it's just your SAS is through your [13515] no code platform instead of code right [13518] so per assetbased pricing I find in [13520] practice tends to work really well for [13521] that and a lot of people are using that [13523] I have done per asset pricing myself [13525] just a couple of times. I personally did [13526] not find it super valuable. I ran a [13528] content editing SAS that actually worked [13531] specifically like basically exactly like [13533] how I just told you. You just put in [13534] your content and it would sort of edit [13535] it for you and then I charge per asset [13536] there. But let me give you an example [13538] here cuz why the hell else did I write [13539] all this stuff? The example is you [13540] create a content production system [13541] that's light years ahead of what most [13543] other agencies are doing. You start [13544] selling it to content and SEO agencies [13546] on a per asset cost. That means that [13549] instead of selling the system itself, [13551] you sell the deliverable which is an [13554] article and then you just charge a [13556] certain amount per deliverable. Right? [13559] So if I generate 20 articles a month as [13562] a user of your system and everyone costs [13566] 20 bucks, well then I'm paying you 400 [13569] bucks. You can implement this in a [13570] variety of ways. You could have this be [13572] instantaneous pricing where every time [13573] you do it, you need to pay. Although I [13574] don't really recommend that. There's a [13576] reason why a lot of companies like this [13577] credit based stuff because when you [13578] spend money that isn't like money, you [13580] tend to spend a lot more of it if you've [13582] ever wondered. That's one of the main [13583] reasons. It's also easier to deal with [13584] on your end obviously. Uh so a lot of [13586] the time in practice what people do is [13588] you'll pay a certain amount of money for [13588] a certain number of credits and then [13590] it's like well great now you have those [13591] credits. What are you going to do? Not [13592] spend them. Obviously you know you got [13594] to buy a 100 articles in order to make [13596] it into our thing. You know you're going [13597] to find a way to spend that other 99. So [13599] typically this works best for modular [13600] SAS like products where each deliverable [13602] can be separately priced and [13604] implemented. This works for content, so [13606] articles, blogs, books, assets like [13608] PDFs, white papers. You can do proposal [13610] generators this way. Legal, so [13612] contracts, reports like I was talking [13613] about in that first or second example [13615] way back when, right? If instead of you [13618] charging them some cost savings based [13620] thing, you instead just charge them 50 [13621] bucks flat per report. That might [13623] actually make sense for people. Now, the [13625] good here is that it's super easy to [13626] productize. The initial upfront cost on [13628] the customer side of things is usually [13630] really low as well. So your deliverable [13632] costs usually a lot less than whatever [13633] the customer is doing before. Meaning [13635] that like as a company you can fix your [13637] costs and you can just make your fees a [13638] multiple of whatever it costs you [13639] internally to run your no code tool. So [13641] if I don't know you're paying 5,000 [13643] bucks a month for software and then you [13645] generate a 100 articles. That's sort of [13647] like $50 a month in every individual [13649] article. Well, if you charge $100 per [13651] article, you know that you're making 50 [13652] bucks on that, right? Pretty [13653] straightforward. That's kind of a [13654]  example because you're probably [13656] never going to get to a point where [13657] you're spending $50 an article, [13659] especially in our uh, you know, [13660] enlightened AI age. So, yeah, it's the [13662] most software-like way to price. It's [13663] definitely the most scalable. Now, the [13665] downside is despite the fact that it's [13667] super scalable, it takes a long time to [13668] make like good money here. If you think [13670] about it, the costsaving method that I [13672] talked about there, you could charge [13673] $12,500 for a system that saves $50,000. [13677] You could make $12,500 today. If you [13680] wanted to scale to $12,500 with a per [13682] asset based system, well, you need to [13684] sell 600 and something articles, right? [13687] That might take you a lot longer to do [13689] so. So, it's a lot more scalable just [13691] like SAS companies, but it takes a lot [13692] longer to grow. Um, you're probably [13694] going to start from zero bucks every [13695] month, unless you have some recurring [13696] model as well. And the detriment is you [13698] also have to build infrastructure to [13700] track outputs, which can be an ordeal in [13701] and of itself. You're basically building [13702] like a whole other SAS app there. Uh, [13705] not to mention no deposit unless you ask [13706] for one. no way of paying off your [13708] startup costs and then the lack of lock [13710] in on the client usually reduces [13712] perceived value. It hits your ability to [13714] like get that nice 105 $20,000 white [13717] glove project price. So I don't really [13719] do this to like make my money. I've done [13721] and experimented with this a couple [13722] times, but I'm bringing this up because [13724] I've seen it in my communities and there [13725] are a few people that are doing quite [13726] well all things considered. All right, [13728] now we make it to the daddy of pricing [13730] models. This is the percentage of [13732] revenue. Quick example, you build this [13734] amazing LinkedIn DM plus voicemail drop [13737] system and it reaches out to people. It [13739] leaves customized messages based on [13741] their profile. You then hire a closer [13743] and install a closer in your business. [13745] This is the salesperson that you know [13747] closes the deal. Your system takes very [13749] little setup time. It's mostly templated [13751] and you're hyperconident that it works [13752] cuz maybe that's what you're doing for [13754] your own business. That's how you're [13754] getting your own customers. Now, you [13756] know of this old business acquaintance, [13758] Dr. Peter who currently needs leads and [13762] who could use a system like this to [13763] scale up his business. So you offer him [13765] a deal. Uh, hey Dr. Peter, I'm going to [13767] generate, nurture, qualify, and close [13769] all of the leads using this system and [13772] all you have to do is fulfill them. [13774] Okay? So you are a marketing company or [13777] maybe you sell ads, PPC. I will generate [13780] you the clients and then all you have to [13782] do is just fulfill the clients. In [13784] exchange, all you're going to do is pay [13786] me 25% of the gross revenue of each [13787] deal. Maybe this is more money than you [13790] were paying before to get your own [13791] clients, but it's consistent as hell and [13793] you know exactly how much money you're [13795] going to pay for it every time, right? [13796] Benefits for you. You can make an insane [13799] amount of money doing this. You can make [13800] a crazy amount of money, but you have to [13803] be really good at what you do and how [13805] you set things up. So, typically revenue [13807] generating automations where there's a [13809] clear correlation between automation and [13810] income work. So, this is almost always [13812] going to be something on the front end. [13813] It's going to be sales, right? Because [13814] we're doing a percentage of revenue. The [13816] good here is that you have super high [13817] earnings potential. Technically, they're [13818] unbounded. Partnerships like these are [13820] how you make the multi6figure revenues. [13822] I think if you look at anybody that's [13823] like between my revenue range and maybe [13825] like a million and a half a month or [13827] something, they basically all have some [13828] sort of partnership based thing going on [13830] where they will produce some insane uh [13833] leverage on the front end and then just [13834] take some cut on the back end. You can [13836] kind of think of this like this is what [13837] a lot of affiliate people do as well. [13838] They take a percentage of the sale [13840] attributed to the lead that they [13841] generate um and and so on and so forth. [13843] If your systems are good and you trust [13845] the people you partner with, you can [13846] print money. You can also use very [13848] strong offers in this way to sell [13850] clients for your own company because you [13852] handle everything and the customer pays [13853] zero. I mean, think about the offer, [13854] right? I think Alex Poroszi talks about [13856] the perfect offer and it's like we'll do [13858] everything for you. It'll cost you $0. [13860] We'll take like a certain percentage and [13862] if it doesn't work and you don't make [13864] this much money, we'll even pay you, [13865] right? It's like the perfect offer. [13866] Well, you actually get to use the [13867] perfect offer. Um, logically speaking, [13869] you would have to be very silly to say [13871] no to something like that at face value. [13872] It's like, hey, I only make money when I [13874] make you money. Therefore, there's zero [13876] risk. Why the hell not? That said, you [13879] do have to make sure you trust the [13880] people. So, you should have a strong [13881] vetting process if you do this. Now, [13883] here's the bad. The bad is you may not [13886] always have total control over the [13889] outcome here. So, you also don't get [13891] paid anything upfront, right? Unless you [13893] structure it in a way where you do, and [13894] some people do, right? Like the growth [13896] partner model who was popularized by [13898] this one guy that I used to follow on [13900] Twitter. somebody in the comments will [13901] know uh does this where like you I don't [13903] know pay 10 or 15 or 20 grand up front [13905] or something like that and then you get [13906] like 7% of their revenue as well. So you [13909] can offset this but you know just [13911] speaking percentage of revenue you don't [13912] get paid anything up front which could [13913] impact your ability to deliver this at [13914] scale especially if it has high costs [13917] and again you have to be very good at [13918] your in order to make this work. If [13920] you're not good at your your service if [13921] you're not confident that you can [13923] deliver what it is that you're promising [13925] you're not going to make any money and [13926] it's just going to be all cost for you. [13927] Similarly to what I talked about before [13929] with the per outcome model. [13932] Unfortunately, I find a lot of beginners [13934] get stuck here because they pitch some [13937] offer to somebody and then they say, "I [13939] don't want to do it that way. I only [13940] want to do it if uh when I make money, [13942] you make money. So, let's do it that [13943] way. If you're that confident about your [13944] service, you might as well, right?" [13946] Which I understand the idea, but [13948] obviously that doesn't really help you [13949] get your agency off the ground if you're [13950] a total newbie, right? So, again, [13952] ironically, it's a lot of newbies that [13954] try this stuff, fail, and then are like, [13955] "I'm never doing percentage of revenue [13957] again." But it's it's just a time and a [13958] place thing. You just have to be skilled [13959] enough. You have to be obviously you [13960] have to have like a good network in [13962] order to make the stuff work and you [13963] have to trust the people uh that you you [13965] partner with. So obviously the big [13967] question is now which one is best? [13968] Typically my rule of thumb and you can [13971] do this if you believe in the stuff that [13973] I've been telling you guys about over [13975] the course of the last few months. And [13976] if you don't, you don't have to. But [13978] typically my rule of thumb is if you're [13979] a total newbie, the fastest way to go [13982] from that total newbie to that expert [13983] that I talked about earlier is to go [13986] hourly. It is well established. It's a [13989] very easy transition from a 9 to5. It's [13991] the way that the vast majority of the [13992] corporate world works. So it's not going [13993] to be uncomfortable for you. It's not [13995] going to be uncomfortable for the [13995] client. All you're looking to do at that [13997] first stage is to make your first few [13999] bucks in the internet. We're minimizing [14000] friction. Just go hourly. It's super [14003] straightforward. After you get your [14004] first few clients and maybe one of those [14006] clients is an hourly retainer or [14008] something, begin charging based on [14010] value. Remember I talked about two value [14012] based methods. There was cost savings or [14014] revenue uplift. Cost savings is going to [14016] be better if you're working with large [14018] businesses with small margins and then [14020] uh revenue uplift is going to be better [14022] for small businesses with large margins [14023] tend to be a lot hungrier. Let's combine [14025] this with some type of retainer or [14027] subscription based pricing for added [14028] leverage so that you're not restarting [14029] from zero every month. Maybe this is [14031] like clients 1 to three. Maybe this is [14032] like clients 3 to 10 or 3 to 15 or [14034] something. And then if you become a [14036] professional and you become confident in [14038] your ability to deliver, start [14040] experimenting with per outcome or per [14043] percentagebased sales methods. Also [14046] combining with retainers or subscription [14048] based pricing for leverage. And this is [14050] how I know assuming you've found that [14053] golden goose laying hen laying golden [14056] eggs or some like that, whatever [14057] the saying goes. This is where you can [14059] start scaling up your revenue [14060] extraordinarily quickly. You'll [14062] eventually find some button on the [14064] internet that you press and every time [14066] you press, you make a dollar. You'll [14067] just start spamming that button like [14069] crazy with a model like this and you'll [14071] start making a lot more money. Cool. So, [14072] now I know how to price your AI services [14074] strategically and learn how to close [14076] deals at premium rates. But here's what [14077] you probably don't realize, which is how [14079] to handle the first few days after a [14081] client now says yes to you. that [14082] determines whether they become [14084] essentially a long-term advocate or [14085] ambassador for your brand or just like a [14087] one-time headache. So, that is [14088] onboarding in a nutshell. If you onboard [14091] poorly, that will lead to scope creep, [14092] endless revisions, and then ultimately [14094] clients who disappear after the first [14095] project. Whereas, if you nail [14097] onboarding, you turn clients into raving [14098] fans who are more than happy to refer [14100] you to their network, pay you good [14101] monthly retainers, and then get you more [14103] involved with their business in terms of [14104] like equity and partnersh. That's what [14106] we're going to be chatting about in the [14107] next section. We're going to show you [14108] the exact 41minute onboarding process to [14110] eliminate buyer remorse. set super clear [14113] expectations, then position you from [14115] warm upsells from day one. I'm going to [14116] cover everything from the psychology of [14118] new clients to the specific systems that [14119] make onboarding seamless. Let's do it. [14121] The three big problems that onboarding [14123] solves. There are more than just three [14126] problems that onboarding solves, but [14127] here are the three big ones. And here is [14129] how I want you to think about [14130] onboarding. Essentially, onboarding is a [14132] tool that lets you solve the main [14134] problem of buyer's remorse. It lets you [14136] solve another main problem of client [14138] expectations. And it also allows you to [14141] essentially like frontload a lot of the [14143] BS and inoculate yourself against [14145] problems with logistics later on. What [14147] do I mean by logistics? I mean stuff [14148] like not having credentials to a [14150] software platform. I mean stuff like not [14153] fully outlining the timeline where [14155] you're going to be delivering stuff and [14156] then the client ends up like calling you [14157] rushed 2 weeks later being like, "Hey, [14159] where's the project? I needed it by [14160] today." Essentially, this is another [14162] form of leverage. If you just spend a [14164] few minutes upfront dealing with this [14166] problem now, you will save dozens if not [14169] hundreds of hours and hundreds of [14170] thousands of dollars over the course of [14172] the next couple years of your career. [14173] So, it just makes sense to figure this [14174]  out like ASAP. Essentially, what [14176] I'm going to do here is I'm going to [14177] discuss every problem in detail just so [14179] you guys understand the problem space so [14181] that you understand sort of like my own [14183] mindset here when I came up with these [14184] solutions to these problems and then I'm [14186] actually going to show you how to solve [14187] every one of these problems as I [14188] mentioned including building a few [14190] simple systems. I'm also going to [14191] provide you some templates. So, I have a [14192] few little assets and documents here, as [14194] well as just a couple of step-by-step [14196] checklists that I personally used quite [14197] heavily when I was first starting out. [14199] Obviously, the better that you get on [14200] the stuff, the less you need these [14202] assets in front of you while you're [14203] selling, while you're closing or while [14204] you're building stuff, but they tend to [14206] really decrease the learning curve or I [14208] guess your ability to get out there, [14210] close your first couple of clients and [14211] and get up and running. So, highly [14213] encourage you guys make use of them. All [14215] right, so problem number one that [14217] onboarding solves is buyer's remorse. [14219] Now, if you're unfamiliar with just [14220] sales in general, um, or you know, the [14223] concept of buyers remorse, here's [14225] basically how it works. Somebody just [14226] sent you a bit of money. No matter how [14229] good the process that you use to sell [14231] them is, the fact that the money is no [14234] longer in their wallet or I guess their [14236] bank account nowadays will create buyer [14239] remorse. there's going to be some sort [14241] of remorse, some sort of doubt at the [14242] back of their mind essentially like did [14244] I make the right decision partnering [14245] with this service provider instead of [14247] you know other service providers or [14249] instead of doing it myself or instead of [14250] finding some other solution. So if you [14253] think about onboarding from sort of like [14254] a sales perspective, it's an additional [14256] tool that you get to use to streamline [14258] the next steps immediately after the [14260] sale. And your goal running an [14262] automation agency is to minimize buyer [14264] remorse as soon as humanly possible. [14267] Good onboarding helps you do this. Great [14268] onboarding helps you turn this buyer's [14270] remorse into like buyer's gratitude [14272] essentially for being super stoked to [14274] start with you. And when you have [14275] projects that are like that, when people [14276] are extremely extraordinarily excited to [14278] get started with you and you also have [14280] like very strong and clear expectations [14282] put out, those clients tend to be the [14283] ones that retain for a very long time [14285] where you start getting to take [14286] advantage of the multiples of this [14287] business, right? Like your first project [14289] with the client, it's a small one and [14290] you're selling automation services might [14292] be like 1 2 3k let's say. If you nail [14295] onboarding and nail everything that I'm [14296] going to show you in this guide, you [14297] essentially have the opportunity to turn [14298] that 2 or 3k client into like a 5k a [14301] month client for the next year and [14303] that's 20 times more money if you think [14304] about it that way than you'd be able to [14306] get immediately. So very very big point [14307] of leverage and something that you know [14308] I wish more people would think about in [14310] advance. The second big problem is [14312] client expectations and this is like one [14315] of the biggest issues just in all [14316] service businesses not necessarily [14317] automation. One thing I'll mention here [14319] is automation is particularly terrible [14321] for it because of the presence of scope [14323] creep. Like if you think about it, [14325] right, I used to run a content writing [14326] company called 1 second copy. And what's [14329] really involved in content writing? [14330] Well, there's like two or maybe three [14332] subservices here. There's the writing, [14334] there's the editing, u maybe there's [14335] like the outlining, right? Very simple [14337] and easy sort of business model um [14339] comparatively. Whereas with automation, [14341] if you think about it that way, there [14343] are like 5 million subservices. There's [14345] obviously like the scoping, there's like [14346] the process flow charting, there's like [14348] the make.com scenario building, there's [14350] like API integrations, there's like your [14352] ability to like drag and drop modules [14353] and know how that specific platform [14355] works, but also understand programming [14356] principles to be able to like put [14357] something together. Uh you have to know [14359] like I don't know, let's say you're [14360] working with a pipe drive. You have to [14362] understand pipe drive. You have to [14363] understand Panadoc. You have to [14364] understand all this And honestly, [14366] when you have all of this stuff going [14368] on, the client expectations and their [14370] scope can blow up. And uh that tends to [14372] happen pretty often, especially if you [14374] don't really know what you're doing. So [14375] if you're just getting started with [14376] automation, maybe you've got like your [14377] first couple of clients, you'll probably [14378] understand what I mean by this [14379] intuitively. But having a good [14380] onboarding process can inoculate [14382] yourself against a lot of that stuff. [14383] It's sort of like a vaccine or something [14385] against, you know, some virus. If you [14386] just like deal with it right now, you [14389] eliminate that from ever being an issue. [14390] You eliminate all of the time, energy, [14392] and money that you waste later on [14393] dealing with it. Here's the fundamental [14395] paradox of client expectations. In order [14396] to grow your business, you have to win [14398] clients. In order to win clients, the [14401] simplest and easiest way to do so is to [14403] increase the client expectations. What I [14405] mean by that is sort of the whole [14407] process of selling is incentivizing you [14410] to blow up this project and make it look [14412] even better than it probably really is [14413] in reality, right? That's just how sales [14416] works. But in order to grow your [14418] business, you also have to deliver [14419] projects. And if you think about the way [14421] that delivering projects works through [14423] incentives, it all involves reducing [14426] expectations. turning a complicated [14428] project into as simple a project as [14429] humanly possible. And so essentially [14431] what you have here is you have two like [14434] incentives that are butdding each other [14435] right in the head. The first is sort of [14437] the sale incentive which is sell them [14439] the dream, sell them this, you know, [14440] super big complex comprehensive projects [14442] we can get as much money as humanly [14444] possible out of them. And then the [14445] second is sell them something small, [14448] something packetable, something [14449] manageable that I can do in, you know, a [14451] weekend. The issue here is that most [14454] people will always do the former a [14455] little too well because they want to get [14457] the deal, which is totally [14458] understandable and I've done this a [14459] million and one times myself. And what [14461] that means is when it comes time to [14462] deliver the project, they are screwed, [14464] right? Because now it's like, oh, okay. [14467] Um, sure, we might have made an [14468] additional $10,000 or something like [14470] that, but the cost to that additional [14471] $10,000 is now our delivery team has to [14474] spend another three weeks creating all [14475] these additional systems, right? It's a [14477] pain in the ass. What onboarding does is [14479] it provides you the opportunity to frame [14480] those expectations ASAP and upfront. And [14483] by doing this, it lets you inoculate [14485] yourself against dozens of common [14487] gotchas. And by gotchas, I mean just [14489] like things that most service providers [14490] deal with, like uh communications being [14492] an issue, timeline being an issue, your [14495] working style being an issue, not [14496] knowing what the wind condition of your [14498] project is. Like when do you actually [14499] know when your project is done? You got [14500] to talk about this with the client. [14502] Otherwise, what are you going to do? Do [14503] all the work and then deliver the [14504] project? And the client's going to be [14505] like, "Well, it's not really done, [14507] right? Why not just do it immediately [14508] and save yourself that stress? [14510] Basically, what your goal is with client [14512] expectations is to give the client all [14513] the info that they need up front so they [14515] never have to bug you later and so that [14516] they'll be satisfied when you deliver [14518] what you said that you were going to [14519] deliver. Sounds pretty easy, you know, [14520] theoretically, but in practice it can be [14522] a lot more difficult. And I'll show you [14523] how to solve all of that. Now, the last [14525] part here is very specific to automation [14528] and it's sort of like logistics. This is [14529] what I call automation is a lot of [14531] moving parts. By nature, at its core, [14533] what automation is is it's like juggling [14536] 5,000 different platforms and gluing [14537] them all together with an automation [14538] platform like make.com or something like [14540] that. And when you're juggling all these [14543] different platforms, you can imagine how [14544] in order to like logistically manage the [14548] work, you need to gain access to all of [14550] them. You need to deal with two-factor [14552] authentication concerns. You need to [14554] deal with the right subscription plans. [14556] You need to have good credentials. Your [14558] customer needs to know the credentials. [14559] You need to go the credentials. you need [14560] to deal with sub accounts and all that [14562] stuff. This is sort of like the [14563] nitty-gritty dirty part of doing [14565] automations. And if you don't have all [14567] of this up front, and I meant to write, [14569] you end up having like a much more [14570] difficult time later because then you [14572] have to drip this stuff out over time [14574] every time you ask a client for some [14575] information. It'll take them some time [14576] to get back to you. Sort of like this [14578] cat-and- mouse stuff that a lot of [14579] beginners unfortunately fall prey to, [14581] especially with 2FA stuff cuz you need [14582] to like be in the same time zone as your [14584] client or whatever at like the same time [14586] and they need to be available and and a [14587] lot of And it ends up just like [14588] really hurting your professionalism. And [14589] not only does it hurt your [14590] professionalism, it very negatively [14592] impacts your ability to deliver on the [14593] schedule that you said that you were [14594] going to do. So your goal in solving [14596] this problem is to minimize friction and [14598] get access to everything ASAP. You [14601] should not need to ask the client for [14602] any sort of credentials, accounts, two [14604] factor authentication codes, change the [14606] subscription plan, none of that stuff [14608] after the first day, basically just [14610] because it really really hurts your [14611] ability to get that client again in the [14613] future. And if you solve all this [14615] upfront, the client will think that [14616] you're super prepared, you're super [14617] professional, and that like you know [14618] your your business really well. Uh which [14620] will obviously allow you to retain them [14621] super easily later on. All right, so how [14623] do you actually solve these three [14624] problems? Well, each of these three [14626] problems I solved in three ways. So the [14628] first buyer remorse, I solved by [14630] basically front-loading the dopamine and [14632] front-loading notifications, [14633] frontloading gratitude, and basically [14635] just filling up their email inbox as [14637] quickly as possible after they make the [14638] payment. Um so that they think that [14640] essentially the perception of process, [14642] sorry, perception of progress. And I'll [14644] show you how to do each of these three [14645] in a moment and I'll build out systems [14646] for them as well. The second to manage [14648] client expectations, there are three [14649] solutions here. The first is that you [14650] need to define your communication style [14652] as well as the frequency with which you [14653] will be communicating upfront. The [14655] second is you need to set a timeline [14656] which is basically how long every step [14658] will take and what sort of deliverable [14659] you have at every step. And the third is [14660] you need to define the win condition. [14662] The win condition, you know, sounds [14663] super fancy, but it's basically just [14665] like, hey, how are we going to know when [14666] our project is done, right? Like if I'm [14668] delivering you a lead generation system, [14670] how do I actually know that that lead [14671] generation system is finished and I can [14672] like take a step back? When do we start [14674] on my retainer for instance? Like like [14676] what's the next step after the project [14677] is done? The problem number three, which [14679] is the logistics and the moving parts [14680] and all that stuff. You solve them in [14682] three ways. Uh the first is you itemize [14684] all the platforms and you basically [14685] provide them a list that they can use in [14687] order to sign up to them for you. The [14688] second is that you have an onboarding [14689] call that just frontloads all of the [14691]  that you otherwise would have [14692] to drip out over time. And tons of [14694] people have tried to do the logistics [14696] step uh through forms and whatnot. [14697] They're like, "Oh, well, I got to [14698] automate this cuz I'm an automation [14699] engineer." But you really shouldn't. [14701] This is like the highest leverage point [14702] of you being in front of your client. [14704] And then um you can use secure [14706] credential management essentially to to [14708] solve the problem of password sharing [14709] and and all that fun stuff. So yeah, [14712] we're going to go into detail and build [14713] all of them uh right now. So first and [14716] foremost, let's talk a little bit about [14717] um the first solution here, which is [14719] transactional alerts. This is going to [14721] sound really simple and really basic for [14722] a lot of people, but if you pay somebody [14724] and you pay somebody a fair amount of [14726] money, let's say $4,000 or something [14727] like that, and you don't receive like a [14730] receipt of that purchase, um, basically [14732] immediately, you're going to have a [14734] very, very bad taste in your mouth, and [14735] that buyer's remorse is going to sort of [14737] snowball into, uh, like, who the hell am [14739] I working with here? Is this person [14740] professional? Like, like what's going [14742] on? Basically, there needs to be some [14744] type of transactional alert or [14746] notification immediately after the [14747] person pays you all this money and they [14749] just need to have like a receipt for it. [14751] So, um this depends on your payment [14753] processor. A lot of payment processors [14754] do this automatically. Thankfully, in [14755] Stripe, which is a payment processor [14757] that I personally use and that I [14758] recommend for a lot of people, you need [14759] to specifically go into customer emails, [14761] enable receipts, and then, you know, [14762] have those receipts sent basically [14764] immediately after the purchase is done. [14765] So, what you would do here if you were [14767] doing this for yourself is you'd have to [14768] open up the Stripe homepage and then go [14770] to settings up here in the top right and [14772] then go to business and then you'd have [14775] to go more uh customer emails, I [14777] believe. And then under payments, you'll [14779] have to go successful payments and turn [14780] that on. And essentially what this is [14782] going to do is every time you send [14784] somebody money, you're going to get [14786] something that looks a little bit like [14787] this right over here. Um, so every time, [14790] sorry, you send somebody money, you get [14791] a receipt. And obviously make sure that [14793] the experience that they have when they [14794] get a receipt from you is as high brow [14796] as possible. Make sure that you've done [14797] all like the stripe BS of like adding [14799] your logo and making it look all pretty, [14800] having your brand colors, whatever your [14802] payment processor is. Obviously, this [14803] will differ. Uh, but I personally always [14804] recommend anybody watching my videos [14806] just to like use Stripe. It's super [14807] simple. It's very well supported and [14809] it's super integraable, which is an [14810] automation specialist makes a lot of [14811] sense. So, you're going to want [14813] something like this um basically to [14815] happen within 30 seconds of somebody [14816] working with you or choosing to work [14818] with you or paying you money. And this [14819] is just sort of like a quick little hit. [14820] It's like, "Yeah, you did make that [14821] payment, and you know, all of the [14823] logistical stuff is like taken care of [14824] on our end. Don't worry, your receipts [14826] here, uh, we're we're professional about [14827] it." I know it sounds super simple, but [14829] you'd be surprised at how many people [14831] don't do this. All right, the next thing [14832] I want to talk about is gratitude. What [14834] do I mean by gratitude? Well, I mean [14837] expressing sincere gratitude to your [14840] clients for choosing to spend time, [14843] energy, and money with you. I know this [14846] sounds simple again, but turns out that [14848] most things in the agency space are very [14850] simple. You can go very far simply by [14853] remembering to thank your client for [14854] doing things for you. What do I mean by [14857] this? Uh, every time a client sends me a [14859] message, I uh I thank them for reaching [14861] out. Every time they follow up with me [14863] after I haven't heard from them for a [14864] while, I thank them for doing so. Every [14866] time I jump on a call with them, I thank [14867] them. Every time I get a payment from [14869] them, I thank them. This makes you look [14871] extremely professional. But not only [14872] that, I've worked with enough clients at [14874] this point in my life to definitively be [14876] able to say that the situations in which [14878] I've consistently expressed gratitude [14880] for being able to work with somebody um [14882] tend to yield me substantially higher [14884] ROIs. Like our relationships go way, way [14886] further. And I'm still not 100% sure if [14889] it's just the professionalism or if it's [14890] just the fact that, you know, I I'm just [14892] a like I'm I'm acting like a human being [14894] when I do it. And people tend to pick up [14895] on that and they think that I'm a lot [14896] more genuine. But it works. Now the [14899] great news about gratitude is if you are [14901] truly gracious, you can build a very [14903] simple system that just watches events [14904] or uses a web hook and when you receive [14907] a new payment transaction notification, [14910] uh you can just send an email uh that's [14912] like, you know, like a one sort of I [14914] don't know three or four line email, [14915] which I'll show you in a second, uh that [14917] just thanks them. Uh and you can do it [14918] within about five or five or so minutes [14920] of receiving the payment. And by doing [14922] it this way, um it tends to be it tends [14924] to seem a lot more like handwritten and [14926] customized and that sort of deal. uh [14927] which obviously c their customers or [14929] clients tend to like a lot more and it [14931] tends to seem just a lot uh you know a [14933] lot more genuine. So again the goal is [14936] basically and I do this in a separate [14938] email but the goal is we want to provide [14939] people the perception of like customized [14941] highquality care and I actually send [14944] them a bespoke email with a thank you on [14946] it in addition to the receipt. And [14948] here's what my personal one usually [14950] looks like. I mean you know it's evolved [14951] over time and I used to do all this [14953] stuff manually but now I automate the [14954] vast majority of it. It's just hi Nick. [14955] Thanks for taking care of that invoice [14956] so promptly. I'm beyond happy that we [14958] get the chance to work together and I'm [14959] excited to nail this for you. I'll send [14960] you some onboarding instructions plus a [14962] calendar in a moment and we can then [14964] book a call to kick off our project. [14966] Looking forward to chatting and I [14967] appreciate your business. So that's it. [14969] Doesn't have to be super magical. You're [14970] sending somebody an email as if you [14972] would text them thanking them for doing [14973] something for you. And on a more general [14976] note, I find that that's just the best [14977] way to proceed with all client [14978] communications. just proceed with them [14980] like you're texting a friend of yours [14981] because um clients tend to pick up on [14983] that and and treat that as substantially [14984] more genuine than what a lot of other [14986] people do which is they'll write these [14987] big fancy long email sequences that just [14989] seem like you are treating them like [14991] another cog in your machine if that [14992] makes sense. But yeah, so my goal is I [14995] want them to get a bunch of emails [14996] simultaneously to minimize buyers [14997] remorse to just make it feel like shit's [14999] happening. Like they just gave me their [15000] money. I want to give them something [15002] too. And the number one thing that you [15003] can give a client is just the impression [15004] of progress and things are moving in the [15007] direction that they want them to. [15009] And then the last thing is indeed that [15011] perception of progress. And what do I [15012] mean by this? I really just mean like [15013] next steps. Now that they paid, it's [15015] essential that you provide the [15016] perception that you are getting their [15018] project started like immediately like [15020] within 5 minutes of them getting paid. [15022] If you do this, the clients that you [15023] provide the impression of progress [15025] within 5 minutes are going to go much [15026] much farther for you than the clients [15029] that you don't do this for, I don't [15030] know, like several hours or days. As [15033] mentioned previously, tons of situations [15034] where I've hired a service provider and [15036] I haven't heard back from them for like [15037] 48 hours. Frankly, if I'm being honest, [15039] I think that sort of thing is [15040] unacceptable, especially given that like [15042] basically everybody on planet Earth has [15044] hired a service provider for something [15045] at some point and so they at least [15047] understand how it feels from the other [15048] point of view. The fact that, you know, [15050] a lot of these business owners can't put [15051] that together, I think is the primary [15053] reason why you can crush it in this [15054] industry so easily. So, yeah. Um, again, [15058] we can build a very simple system and we [15060] can have the system just watch events or [15061] use a web hook and then send an email [15062] from you. I'll do that right now in a [15063] second. And then I would encourage that [15065] you do this within 5 minutes. At this [15067] point, they've received three or four [15068] emails in a very short period of time, [15069] which makes them feel really good. It [15070] also makes them feel like you're on top [15072] of things. You have a very defined, [15073] streamlined process for this, and [15075] they've done this multiple times before, [15076] which eliminates a lot of like the [15078] perceived risk of working with service [15079] providers and is basically the most [15081] straight line way of maximizing the uh [15082] the customer experience. But, okay, how [15085] do you actually build this out? super [15086] simple and super easy. Um, I personally [15087] do this in make.com, an automation tool [15089] that, you know, I popularize a little [15091] bit, but I'm definitely famous for like [15092] the make.com stuff, not the Zapier stuff [15094] or the NA10 stuff. If you are using [15096] another automation tool, it's very [15097] simple. Just follow along sort of the [15098] process logic that I'm doing here. We're [15100] going to pretend that there is some [15101] event that is occurring. U, maybe some [15103] type of booking. And then uh, what do we [15106] do when we receive that booking? Well, [15107] if you have a CRM or something like [15109] that, you're going to have to pull data [15110] from the CRM. What I'm going to do is [15112] I'm just going to set a bunch of [15114] variables. And I'm basically going to [15115] pretend that I'm pulling them from my [15117] CRM. So, one will be like name. We'll [15119] just say [15121] Nick. We'll say email address. We'll say [15124] my email address right over here, [15126] niclick.a. And then we just use the mail [15129] module here to send an [15133] email. You will create a connection up [15136] at the top right hand corner uh in [15137] make.com. I'm going to use that to sort [15138] of this will be your from email. And [15140] then the two email I'm just going to map [15142] this as the email address. The subject [15145] line I'm just going to use thank you and [15147] welcome aboard. And I'm going to do it [15149] in HTML, but you don't necessarily have [15150] to. You could do this in plain text if [15152] you wanted to. The way that you do it in [15154] HTML is HTML uses some tags. Uh [15156] specifically this one tag called BR. And [15159] so basically every time you do a BR it's [15161] a new line. So I'm doing two BRs between [15163] every um piece of text here so that [15165] there's two new lines between them. And [15167] then between this one, I'll do one. So [15170] when you know somebody receives this [15171] email, well, we can actually test this [15173] right [15173] now. When I run this module and then I [15176] type in the email address and I think [15178] this is going to work. I mean, I am [15180] sending this to myself, so maybe [15181] there'll be an issue of some kind. Oh, [15183] sorry. I need to reauthorize my [15184] connection. Just give me one [15187] second. We'll just add a new one. Call [15189] it Google. And we'll go and make it [15191] leftclick.ai. We'll go July 19th, 2024. [15193] This is what you have to do if you've [15194] never set it up before. It'll um open [15196] another window that allows you to select [15199] your Gmail [15201] account. And once you've connected the [15204] two, it'll verify. Once it's verified, [15207] this little button will go purple. You [15210] can go ahead and send it. And I think [15212] you can send it to yourself. Not [15213] entirely sure. Yeah, you can. Okay, [15214] great. And you know, at this point, I've [15216] just automated this email. The benefit [15218] here is, you know, the way that I've [15219] written this copies just seems very [15220] incidental and it seems very like, hey, [15222] how's it going? I totally just wrote [15223] this myself, which is great. You can [15224] imagine how you could do the exact same [15226] thing for our other piece of copy. And [15228] uh what else you could do is you could [15229] add a little bit of a sleep [15232] module. And you could say that I don't [15235] want I want to delay let's say 240 [15238] seconds. So I want to delay 4 minutes [15240] basically. And this is going to be wait [15242] 4 minutes. I'm going to call this grab [15246] data from CRM. Right? If you're using [15248] ClickUp or Monday or Pipe Drive or [15249] whatever, you would just use like the [15251] retrieve record uh module here. And then [15254] what we want to do is we need to use a [15255] router [15257] uh because we just want to send this to [15258] two [15259] places. So this is going to be route [15261] number one and this is going to be route [15262] number two. This is going to be send [15265] thank you email and then this one's [15267] going to be send onboarding [15270] email. And then all I'm going to do is [15272] I'll go over to next steps and then I'm [15275] just going to change um the email copy [15277] so that instead of what I had before, [15280] now I have this. And because I'm going [15282] to be doing two BRs in a row, I'm just [15283] going to copy paste, copy, paste, copy, [15286] paste, [15287] copy, paste. And then uh because it's [15290] HTML, if you want to embed a link, you [15292] need to use this format, this A tag with [15295] an ending A tag. And this needs to go to [15297] where you want it to go. I'm just going [15298] to pretend this going to this calendar [15300] right over here, which is my like [15301] discovery sales call calendar. Um, and [15303] the last thing is I'm just going to [15305] write an email here. Call it next steps. [15309] make sure that you know the connection [15310] is correct and everything. This looks [15312] good to me. Let me just make this a [15313] little sexier. Uh and then what I'm also [15315] going to do is I'm going to add one more [15317] sleep [15318] here so that when I do ultimately send [15320] the email, um there's some like offset [15322] between uh the first one up here and [15324] then the second one over here. Make will [15326] run these um one after another. So it'll [15328] start up here and then it'll go down [15329] here afterwards. So let's say it'll take [15331] me another 3 minutes or so to to write [15332] the email or something hypothetically. [15335] And now what'll happen is um we'll grab [15336] the data from the CRM when the new event [15338] comes in. We'll wait four minutes. We'll [15339] then send the first email. And then [15340] we'll go into the second route. Wait [15342] another what's this? 3 minutes and send [15345] the second email. And just for testing [15346] purposes, I'm just going to turn the [15348] delay here to one cuz I don't actually [15350] want to wait that long. And then uh I'm [15352] going to pretend that there's no event [15353] here and I'm just initiating the flow [15355] from this. But we'll just call this [15357] onboarding [15359] emails. I'm just going to give this [15361] thing a little run. We're going to send [15363] that first email. Going to wait 3 [15365] minutes. Send the other email. If we go [15367] back, you'll see that essentially we've [15368] replicated the same event or the same [15370] idea that we had previously where uh [15373] they'll get a receipt um you know with a [15374] stripe transaction and then they'll get [15376] a thank you and welcome aboard and then [15377] they'll get a next steps email uh which [15379] is very very simple. As you can see, [15381] this is really one of those automations [15382] that I sh you not, it takes you like [15384] less than five minutes to set up. And [15385] then it's one of those automations that [15387] if you spend that five minutes to set it [15389] up, this will make you thousands of [15391] dollars, tens of thousands of dollars [15392] over the course of the next 12 months [15394] simply for having the foresight to put [15395] that infrastructure in place. Obviously, [15398] you're going to have to connect the [15399] beginning part here with this web hook [15400] to your payment processor. So, that's [15401] something that I'm leaving out because I [15402] don't know what payment processor you're [15404] using. If you're using [15405] Stripe here, you would go to the Stripe [15408] module, go to the watch events module, [15410] and then you have to configure it to [15411] watch a payment intent events [15413] essentially, whatever the payment uh is [15415] that you're that you're getting. If [15417] you're using something like, I don't [15418] know, QuickBooks, hypothetically, um you [15420] could watch uh a new event, you know, [15422] anytime an invoice is sent or received, [15425] you could, you know, have that run a [15427] variety of different ways to do it. But [15428] what I'm going to do is I'm going to [15430] export this blueprint and I'm just going [15431] to use this in my materials like as a as [15435] a lead magnet. And then I'm going to put [15436] this inside of the YouTube video so that [15438] you guys can just, you know, copy and [15439] paste this if you need to. All right, so [15441] that's it for gratitude and perception [15443] of progress. Um, at this point, as I [15444] mentioned, they've received three or [15445] four emails very quickly and it's just [15446] super straightforward and easy for them [15448] to get started, which is nice. The [15449] second major problem, as I mentioned [15451] before, is client expectations. Now, [15453] client expectations, unfortunately, in [15454] the automation world, are very, very [15456] difficult to get right. And and I mean [15458] if you haven't done a lot of projects [15459] before, you will basically always screw [15460] this up. The simplest way to make some [15463] serious progress, you know, on this [15465] problem is just to spend like 2 minutes [15468] thinking about how much you want to [15470] communicate and how you want to be [15472] communicated with in a client [15475] relationship. Most agencies and service [15477] providers will never even spend like 2 [15478] minutes just thinking about this. And [15480] it's why they tend to struggle with [15481] scaling their businesses and doing good [15483] things. But as I mentioned here, it's [15484] the simplest lever you could pull to [15485] eliminate 90% plus of problems. All [15488] you're doing is you're telling the [15489] client, "Hey, this is how often I'm [15490] going to communicate with you. This is [15491] where I'm going to communicate with [15493] you." For instance, hey, I'll be [15495] available 12 until 2 p.m. PT on Slack [15498] every day if you have any questions. And [15499] you're going to get progress updates on [15501] Tuesdays and Fridays, EOD. Hey, I'm [15503] going to send you an email at the end of [15504] the day, every day, Monday to Friday. [15505] Just going to summarize where we're at. [15506] If I have any blockers, if I need your [15508] help on something or whatever, we'll [15509] deal with it then. And the goal here is [15511] just to ensure we're consistently make [15512] progress towards your delivery. There [15514] are dozens more examples that you could [15515] pick from. I'm just choosing a couple of [15517] random ones that you can use as [15519] inspiration, whether you're on Slack, [15520] whether they prefer email. Hell, some of [15522] them might even prefer a call. Uh, and [15523] it's really up to you to determine [15525] whether or not that's something that [15525] you're willing to do. So, I acknowledge [15528] here that there is an optimal [15530] communication style and probably an [15531] optimal communication frequency, but you [15533] can probably deliver more than 90% of [15535] the results here by literally just [15536] telling them how often you're going to [15538] communicate with them and then just [15539] sticking with it. So, maybe you [15540] communicate with them once a month or [15542] something. I don't know. If you just [15543] tell them you're going to communicate [15544] them once a month and then you give them [15546] that expectation and then you hold to [15547] your expectation, um you're going to do [15549] much better than somebody that [15550] communicates with somebody 30 times a [15552] month, but they never really tell them [15553] when and why they're doing it. my own [15556] personal SOP for this. Um, in the past I [15558] did once per week and I thought once per [15559] week was good because it would, you [15561] know, allow me to be very autonomous and [15562] I wouldn't have to communicate with them [15563] often and I don't really like jumping on [15565] all these silly calls just to give [15566] progress updates and that sort of deal. [15568] But I did occasionally run into a few [15570] issues and the specific issues were [15572] clients felt like I wasn't keeping them [15573] in the loop. they tended to wonder when [15575] things were going to be delivered um [15577] even though I told them before and [15579] essentially they just sort of forgot [15580] about me and uh it led to a couple of [15583] client blowups from every now and then. [15586] It was nothing major, but you know, if [15587] we're trying to be as efficient as [15589] performant as possible, obviously that's [15590] something that I could have changed, [15591] right? So now what I'm doing is two [15593] times per week and I give them a defined [15594] Slack availability where they can expect [15596] me to respond to them within 10 or 15 [15598] minutes. Um, and that tends to be, you [15600] know, about an hour or 2 hour slot. What [15601] I do is I just batch all of my clients [15603] for that hour or 2 hour slot and then I [15604] just know, okay, like I got to be by the [15606] computer for, you know, 2 hours 12 to 2 [15608] p.m. PT, for instance. In practice, [15610] clients will rarely ask me questions. [15611] And usually what I do is I just work on [15613] other during that time anyway and [15614] I'm just like buy my computer. So that [15616] adds a ton of value. This defines Slack [15618] availability. Although obviously, you [15619] know, you have to make sure that your [15620] client is the type of client that wants [15621] to work on Slack. A lot of clients don't [15623] like Slack. A lot of clients use Teams [15624] instead or they use email or whatever. [15626] So just make sure whatever your offer is [15627] is sustainable essentially. Okay. [15630] Problem number two that you can easily [15632] eliminate is kind of the stress at how [15635] the project is proceeding and when the [15636] project will be completed. And the [15638] simplest and easiest way to do this is [15639] to spend another 2 minutes upfront just [15641] setting the timeline. As most of us [15644] probably unfortunately know, the vast [15646] majority of projects that any service [15648] provider will ever do for any client uh [15649] will be behind schedule. Their project [15652] timelines are almost always optimistic [15654] and as a result uh there's always some [15656] things that they didn't really account [15657] for that uh crop up during the project. [15659] They end up being late. for simpler [15662] automation projects, especially some of [15663] the ones like what I was just showing [15664] you back here. I mean, this is like [15665] what, not even 10 modules here. It took [15668] me five minutes. It's absolutely [15670] ridiculous that you would be behind [15671] schedule for something like that. Like [15673] that is something that you should be [15674] able to do in a few minutes. You [15676] probably shouldn't do it in a few [15677] minutes cuz you do want the client to [15678] feel as if there was some work that goes [15680] into it. Of course, we need some social, [15682] you know, we need some nuance here. Uh [15683] but it's not something that, you know, [15685] you should set a timeline for 3 weeks [15686] for and then deliver in five, right? you [15689] can realistically do most of the work [15690] that you're going to be demanded in a [15691] few hours if you're smart about it and [15693] if you work with software platforms that [15694] you know and if you take advantage of [15695] templates like I've talked about in [15696] previous videos. So one of the simplest [15699] ways to retain your automation clients [15700] and to basically multiply your revenue [15702] is to set a reasonably generous [15704] schedule, not super generous but [15705] reasonably generous and then just exceed [15707] the expectations by delivering ahead of [15708] it. So for instance if you wanted to set [15710] up some big email system let's say we [15712] had like 10 of these scenarios or [15713] something hypothetically uh 10 times 5 [15715] minutes takes me about an hour to do. [15717] I'd probably set like a 3 to 5 day [15719] turnaround time for that and then I'd [15720] deliver it by like the second day or [15722] something and I'd say, "Hey, how's it [15723] going?" You know, had a lot of [15724] additional time. I wanted to make sure [15725] that we could deal that I could handle [15727] this and give it to you ahead of [15728] schedule to see if there was any more [15729] work that you needed or something like [15730] that. Very, very simple thing to do. Uh, [15733] but you'd be surprised at how much money [15735] that it leaves on the table when you [15736] don't do it. Okay. Another thing is this [15738] doesn't have to be complicated. I gave a [15739] quick example here of some AI scenario [15742] where you're doing some prompt [15742] engineering. July 19th to 22nd, I'm [15744] doing prompt engineering. July 23rd to [15746] 26th, I'm doing the make.com scenarios. [15748] July 27th to 30th, I'm doing testing and [15749] delivery. And then when you deliver your [15751] final project on July 27th as opposed to [15753] 30th, the client will be really [15754] impressed. Right? I give you a quick [15756] example of just some little snippets [15758] that you can write to them in order to [15759] drop that. The last thing that you could [15762] solve very easily with onboarding is the [15764] win condition. And what I mean by win [15767] condition is I mean the set of [15768] conditions that a client needs to see [15771] before they consider the project [15772] completed and done. [15775] So a lot of the time we'll never just [15777] have that conversation. And if you think [15778] about it, it's a very logical [15779] conversation. Hey, when am I going to be [15782] done? Like what sorts of boxes do I need [15784] to check before our project is over? The [15787] problem with not doing this is a lot of [15788] the time the client's internal win [15790] conditions will be different from your [15791] win conditions. And so you will deliver [15793] a project that you think is done and [15794] that you know delivers the win condition [15796] and they'll be like, "Huh, I wonder why [15798] you didn't deliver X, Y, and Z. Hey man, [15799] when are you going to do X, Y, and Z?" [15801] Now you're doing more work than you were [15802] initially banking on. the client is [15803] unhappy. And this is just the sort of [15805] way that projects lead to [15807] unfortunately. So, a quick example of [15809] this is, you know, a lot of the guys in [15811] my community right now are starting to [15812] sell lead generation projects because [15813] I've shown uh, you know, provided ample [15815] amount of material showing people how to [15816] sell lead generation projects and it's [15817] quite an easy and and productizable [15819] offer. But if you are selling a lead [15821] generation project, what are you [15823] actually giving to the client? Like, [15824] what are they actually getting at the [15825] end of it? They're not just getting [15827] leads, right? Your deliverable is a lot [15829] more specific than leads. Your [15831] deliverable is hypothetically on July [15834] 30th, you will have a completed air [15835] table that automatically populates with [15837] new positive responses from your smart [15839] lead campaign. Your campaign will [15841] operate Monday to Friday from 7:00 to [15843] 7:00 using our best-in-class [15844] copyrightiting formula. And you'll also [15845] get Slack notifications every time a new [15847] one comes in to minimize the response [15849] time. You'll get an SOP sheet that you [15851] can use yourself or to hire an outreach [15853] manager to do the response management [15854] for you. And I'm also going to give you [15855] a video walking you through the system [15857] from start to finish. Okay, that is a [15859] perfect example of a win condition. If [15861] you check all of those boxes, the [15863] project is completed. If you leave some [15865] of those boxes unchecked, your end of [15866] the bargain is still not completed. Just [15869] have that conversation with the client [15870] ahead of time. And if you do, the vast [15873] majority of the problems that most other [15874] service providers have, like with repeat [15876] revisions over and over and over again [15878] or with client scope creep going out of [15880] control, they're not going to be a [15882] problem for you. And all of the other [15883] people that are in your industry are [15884] going to be looking at you being like, [15885] "How the hell does that guy deal with [15886] this? was super unscopable, difficult [15888] projects. I have no idea what sort of [15891] magic witchcraft he's doing cuz you know [15893] I get a lot of people asking me that. [15894] Okay, so that is the second problem [15896] which is client expectations, right? [15898] First problem was um buyer's remorse. [15901] Second problem is client expectations. [15902] The third problem is uh the logistics [15904] and basically how do we deal with all [15906] the 5 million moving parts that [15907] automation contains? Well, there are [15910] three very simple ways to do so. The [15913] first is by prepping for so what I [15916] always do is I always do an onboarding [15917] call and I realize now I probably should [15918] have had this before this but um anyway [15922] I normally do an onboarding call and you [15924] know that's why the person books an [15926] event in the calendar link that I sent [15927] over right and on that onboarding call I [15929] will have them sign up to all the [15930] platforms that I need them to sign up [15932] for in order to do the job and make sure [15934] that it's all done. And the simplest way [15936] to streamline that onboarding call is [15938] simply to itemize all of the platforms [15940] that they're going to need access to in [15941] advance and then build them a list of [15942] very simple instructions that they can [15944] follow on that onboarding call in order [15946] to sign up for all those platforms that [15947] they need. You can send this in the [15949] above email. Um like if you wanted to [15951] create a PDF and like you know attach [15952] something, you could do that. But either [15954] way, they need to know what they need to [15956] do in order to make your onboarding call [15958] success. It's sort of like the win [15959] condition of the onboarding call, right? [15960] A quick example of what I mean by [15962] itemized platforms is literally just [15963] let's say they need to sign up for [15964] make.com. It's super simple. This might [15966] take you like 15 minutes to put together [15968] for all platforms. You just give them [15970] instructions on how to get going. Hey, [15971] head to this thing. Sign up with this [15973] for hosting region. Select US. Click [15975] register. Right, ABCDE EFG. The fact [15978] that you have all this prepared will [15980] make a very big impression on the [15981] clients and they'll tend to think that [15982] you know you've done this again tons of [15983] times before and you know you're very on [15985] top of your ship. It'll also just make [15986] it very easy for them and um make the [15988] onboarding call a lot less uh basically [15990] you're going to mitigate a lot of the [15991] friction on onboarding [15993] calls. There's also some situations [15996] where the client has signed up to a [15997] platform on their own using OOTH or [15999] similar um meaning they'll have [16000] two-factor authentication. And if you [16002] guys have built any automation projects [16003] up until now, you'll know two-factor [16004] authentication is like the bane of an [16007] automation engineer's existence. It's [16008] freaking terrible. uh because you know [16010] in order to bypass it you need to the [16012] client needs to get a text message and [16013] they need to send you the response and [16015] then you need to plug that response in [16017] within a certain amount of time and if [16019] they don't do it within a certain amount [16020] of time the code is wrong so it resends [16022] it and it's just very difficult to [16023] coordinate you know when that occurs. [16025] Some platforms also require you to do [16027] this multiple times which can be massive [16028] pain in the ass. And uh generally [16030] speaking, you know, that's really where [16032] like a lot of the value in an onboarding [16033] call comes from because you just get to [16034] sidestep all like the logistical [16036]  that typically plagues most [16038] automation specialists. The other edge [16040] case here on onboarding calls is clients [16042] don't understand the underlying [16043] technologies and they struggle with [16044] things like giving you access with the [16046] username and password, giving you [16048] credentials, that sort of thing. So um [16050] you know having an onboarding call where [16052] you are just physically present and you [16054] screen share with them essentially uh [16056] solves so much of this because now you [16057] can just like guide them through hey the [16058] hm you don't remember your password for [16060] that well let's see here do you mind [16062] sharing your screen okay great why don't [16063] you click on this button and then click [16064] on that button and then go there right [16066] or if it's two-factor authentication [16068] okay you just got a text message all [16069] right that makes sense yeah sure what's [16070] the code and then you just deal with it [16071] right then and there this usually takes [16073] about 15 minutes and the benefit to this [16075] that not a lot of people talk about is [16077] it lets them feel in control of their [16078] data and their security like a lot of [16080] automation specialists um will just sign [16081] up to all the platforms for them. That's [16083] what I used to do uh because it just you [16085] know moved me a lot faster if I'm [16086] honest. But by doing this I've noticed [16088] that clients just tend to respect our [16089] relationship a lot more. They tend to [16091] realize and understand the value that [16093] I'm providing because to a lot of them [16094] like all this tech stuff is super [16095] intimidating right and then it also [16097] makes them feel a little bit more secure [16099] which is nice. They're not like sending [16100] their credentials in plain text over [16102] email or something. Um they're doing it [16104] you know directly through um through [16106] through like a call and I'm there to see [16107] it. uh which is quite nice. Uh and you [16110] know again it's not necessarily the most [16111] secure thing. It's just we're providing [16113] the impression of security which the [16114] client is the thing that matters the [16115] most. By the end of the onboarding call [16117] you'll have everything that you need in [16119] order to finish the project and the [16120] client is also going to be really [16121] excited to kick off. But the big [16123] question is obviously Nick what the hell [16125] is the onboarding call? And don't worry [16126] I put together a lovely template for you [16128] that I used I used to use in basically [16130] every onboarding call. Now, I don't [16132] actually really use this template [16133] anymore just because I've like memorized [16135] all these steps. Um, and I sort of have [16136] fun with it um as needed. But let me [16139] just jump over here. This is what the [16140] template looks like. It's very simple [16142] and very straightforward as you can [16143] tell. Literally just, hey, thank you [16145] very much for joining. So, we're, you [16146] know, giving them some gratitude. And [16148] then I just um explain to them the [16150] schedule of the call and like what I'm [16151] going to be doing and why I'm doing it. [16153] So, um I'll always just say, hey, so [16155] thanks so much for jumping on the call. [16156] Uh, you know, the biggest issue in the [16157] space, and I've worked with dozens of [16158] people, hundreds of people on projects [16160] at this point, is logistics. If you've [16162] ever had a project on automation, you'll [16164] know that two-factor authentication is a [16166] massive pain in the ass. Passwords are a [16168] massive pain in the ass. All of this [16169] stuff ends up being a massive nightmare [16172] and can really prevent projects from [16173] moving forward. So, I just sidestep all [16175] that by frontloading the onboarding [16176] call. And uh, it's just the most [16177] effective and simplest way I've found of [16179] doing this. Does that make sense? [16180] Everybody's like, "Yeah, of course." And [16182] then, you know, I align the call by [16184] giving them my road map. What are we [16185] going to do in the next 20 minutes? [16186] Well, first we're going to cover [16187] timelines. We're going to talk about how [16188] best to stay in touch with each other, [16190] what you can expect basically at every [16191] part of the project and that sort of [16193] deal. Then we're going to sign up to all [16194] the platforms listed. I've already [16196] prepared a bunch of detailed [16197] instructions which I just sent you in [16198] the chat. Um, this will enable you to [16200] literally just go from top to bottom, [16202] sign up to all these platforms, and then [16203] I'll have access before the end of the [16205] call. And then if any of these platforms [16207] require two-factor authentication, I'll [16208] be able to like request a code [16210] immediately right in front of you. [16211] You'll get it on your phone and you can [16212] just tell me what the code is. That way [16213] I don't need to like, I don't know, [16215] borrow you for 15 minutes randomly at 8 [16217] PM on a Tuesday, right? We can just [16219] streamline all of that right now. Um, [16222] the last thing we'll do is we'll just [16223] have a little Q&A period and if you have [16224] any questions that you've been wondering [16225] about um before we actually start the [16227] project, I can just answer them then. [16229] Does that make sense? Great. All right, [16230] let's get started. And you just proceed [16232] from top to bottom. It's a very simple [16234] process, of course, and there are better [16236] onboarding procedures out there to be [16238] sure, but this is one that I've used and [16240] it's one that worked for me. From there, [16243] all you have to do is actually go out [16244] there and do the freaking project, which [16246] is obviously the more complicated part. [16249] But the good news is you have everything [16250] that you need in order to thrive. Um, at [16253] this point, you have every platform [16254] access piece of credential, two-factor [16256] authentication. You have all that stuff [16258] taken care of. The client also [16259] understands the timeline. They have [16261] great expectations in place for when [16262] you're going to be communicating with [16264] and you've essentially inoculated [16265] yourself against the major issues in [16267] providing services, right? on the good [16269] onboarding process uh makes for a good [16271] project. And ever since I started [16273] implementing like consistent onboarding, [16276] I found that the value of my projects [16278] and like the retention rate on the [16280] clients that I get, especially initially [16282] because I usually do like a small [16283] onetime project to start and I do like a [16285] repeated um retainer afterwards is like [16288] five or 10 times higher. It's [16290] stupid. Last thing I'm going to say to [16292] this before I jump off here is that you [16293] can do this with yourself or with a [16296] small team. You don't have to do this [16297] with like a big giant like you don't [16299] need a giant team in order to do [16300] onboarding, right? One uh unfortunate [16303] thing that I've seen a couple of [16304] companies do is for whatever reason like [16306] I was actually just working at a company [16308] that did this like 2 months ago. They [16309] had a team of uh maybe six or seven [16311] people and every time they onboarded a [16312] new client they got all of their people [16314] on the call to like say, "Hey, how's it [16316] going? Thank you very much for signing [16317] up." And I kind of get the idea of this, [16319] but it was it was massive overkill. You [16320] don't need to do this at all. As you saw [16322] earlier, you can do the automations in [16324] less than 5 minutes, and that's [16325] including the receipts. Um, all you have [16327] to do is, you know, you can use some of [16329] my copy, borrow it if you want, or you [16330] can just come up with your own. Um, all [16332] you need to do is just think for another [16334] 15 minutes about how best to define your [16336] win conditions, how best to set a [16337] timeline, and how best to define your [16339] comps and frequency. That's something [16340] that all of us here can do within a few [16342] minutes, which is quite nice. And then, [16344] uh, you know, you just follow a simple [16345] onboarding call SOP. Do it a couple [16347] times, and you'll know like the back of [16348] your hand by the third or fourth. So, [16350] it's very very simple and very [16352] straightforward and automation is a [16353] leverage here. You know, this isn't [16355] something that requires really more than [16356] just a few maybe an hour of thought max. [16359] As I mentioned a couple times throughout [16361] the call, onboarding just provides a [16362] lift to everything else. Your retention, [16364] your relationship, the ticket sizes that [16365] you can charge and that sort of thing. [16367] Um, and the number one thing that it's [16369] actually done for me that I did not [16370] include here is it's really improved my [16371] reputation. This is a much smaller [16373] market and a smaller world than most [16375] people think. I mean technically, you [16377] know, if you're in automation, you can [16378] work with anybody because you're just [16379] improving their margins and you're [16381] improving their topline and increasing [16382] the efficiency of their processes and [16384] that sort of thing. But I find in [16385] practice my name gets around quite a lot [16386] more and it has been not just because of [16388] this YouTube channel, um, but because of [16390] just the way that I work with clients. [16391] Uh, so if you're looking for a type of [16393] business where, you know, you have like [16395] very high referral rate, you know, for [16396] every 10 clients you get, they refer you [16398] to an average of five or something like [16399] that, the best way to do it is with a [16401] very strong onboarding process. Um, and [16404] just setting yourself up for success. [16405] Great. We've now successfully ran you [16407] through how to onboard a client and set [16408] clear expectations. Now comes ultimately [16410] the moment of truth, which is actually [16411] delivering the automation project in a [16413] way that'll impress the hell out of them [16414] and then set you up for that repeat [16415] business that we keep talking about. [16417] Most AI automation providers focus only [16419] on building the system, but the real [16420] money is not actually in the build. I [16421] know this is crazy, but the real money [16423] is in how you deliver the build. Your [16425] delivery process determines whether [16426] clients see you as just another builder [16427] or an integrator or a freelancer or as a [16430] strategic partner that makes decisions [16432] and that they can't really live without [16433] if they want to continue operating at [16434] such great margins. This next section is [16436] going to talk through my exact [16438] step-by-step delivery process from end [16439] to end. We're going to be talking about [16440] testing to creating documentation that [16442] makes clients feel like they got way [16444] more value than they paid for. We're [16445] also going to cover how to minimize [16446] revisions, maximize perceived value, [16448] then ultimately position you guys in a [16450] really good spot for retainer [16451] agreements, too. Let's get into it. I'm [16452] going to walk you through every one of [16454] these steps in excruciating detail, but [16456] just before I do, I just want to show [16458] you guys the example system I'm going to [16460] be using. Um, I'm keeping this super [16461] simple. This is just a super [16463] straightforward four module system that [16465] I built that literally just scrapes my [16466] own school community once every hour and [16469] it just tells me if the member count is [16470] 400. I built this a few months back, [16472] back when I needed to do stuff like [16473] this. I now have much more sophisticated [16475] systems for this, but we're just going [16476] to be using this as my like finish [16478] system. Obviously, you know, I could use [16480] other systems, but part of what I'm [16482] going to be showing you guys in a minute [16482] is like how to do documentation, how to [16484] increase the perceived value of your [16486] projects at the most crucial steps, and [16488] I don't really want to have to do the [16489] documentation for this. It would just [16490] take too long and kind of defeat the [16492] purpose. So, we're going to start with a [16493] simple four module system. I want you [16494] guys to know that you can apply this to [16496] whatever system you're running. Exact [16497] same approach. Doesn't matter if it's [16498] four modules, 400 modules, although I [16501] highly recommend you do not build 400 [16502] module flows, but I think you guys get [16504] my point. Okay, great. So, let's [16506] actually dive into my step-by-step [16507] automation process here. This is the [16509] most effective way I found to deliver [16511] high-quality automation projects at [16512] scale. Period. I've experimented with [16514] dozens of approaches. This way, from [16516] what I can see, is the best. The way [16520] that this works is, and if you follow [16522] this system, you know, you guys will see [16524] what I mean. But the way that this works [16526] is this maximizes the retention of my [16530] customers and it lets me get my foot in [16532] the door for upsells later on that [16534] include things like a second project, [16535] things like a monthly retainer. It also [16538] impresses them and it like makes asks to [16540] do those upsells at very particular [16542] points that I think a lot of people [16543] don't appreciate are very high ROI times [16546] to do so. So in a nutshell, when the [16548] project is completed, what we do first [16550] is we do an endto-end test. This is [16551] really important. I'm going to dive in [16552] exactly how to do it with some examples [16554] in a moment. Then we're going to copy [16555] all of our blueprints and templates for [16557] that project. This is the secret to [16560] scalability with an automation agency. [16562] If you're not doing this, then uh [16564] basically every time you get a new [16565] project, you're starting from scratch, [16566] which is silly. We should really be [16567] doing is building a whole automation [16569] template library so that next time that [16571] you're faced with uh final boss, you [16574] don't have to start them at 100% health. [16575] You could start them at 20%. I'll show [16577] you guys how to do that in a second. [16578] Then we're going to record some SOPs or [16581] documentation. The reason why we do this [16583] is because automation is sort of like [16584] ephemeral. Like automation, if you think [16586] about it, is just a bunch of bits and [16588] zeros and ones stored on cloud servers [16590] and god knows where. It's very hard for [16592] a client to conceptualize the value of [16593] this. So, you need to increase the [16594] deliverables that you're providing them [16596] as much as you can. And a video is a [16598] quick way to do so. It's something that [16599] they can see. It's something they can [16600] hear. Um, and it's something that [16602] they're going to think adds value to the [16603] project, even if it only took you 10 or [16605] 15 minutes. We're then going to turn [16608] that Loom SOP into a text SOP using [16611] large language models and screenshots. [16613] That is again something that's going to [16614] take you like 5 minutes, but it's going [16615] to double the perceived value of the [16617] documentation. We're then going to dive [16619] deep into the client business and we're [16621] going to see ways that we can actually [16623] like scope out a proposal to to do [16625] retainer services and we're going to [16627] deliver this in a templated delivery [16628] email that just like uh you know hits [16630] all the notes, make sure that you get [16632] everything you need. If you're doing [16633] some type of platform sales, you'll make [16634] sure that you get your review taken care [16636] of. Uh it's going to maximize the [16637] probability of you receiving a paid [16639] invoice as opposed to just hanging there [16640] waiting. I'm then going to talk about [16642] how to minimize revisions, how to frame [16644] your project in such a way that allows [16645] you uh to, you know, confidently deliver [16647] thing without actually having to be [16648] like, hey, is everything okay? Like, do [16650] you want some changes? Which I used to [16651] do a lot back when I was starting and [16653] absolutely murdered my service uh [16655] deliveries. And then, you know, we'll [16657] we'll deliver the project. And as you [16659] can see, I've sort of created a little [16660] loop here where it just goes from eight [16661] back to one. Uh, and so on and so on and [16664] so forth. So, this is a loop. That's how [16665] I want you guys to think about it. Let's [16667] jump in with our very first example, [16669] which is what to do when your project [16671] just finished and it's time to do the [16673] delivery and actually give it to the [16674] client. So, this is the endto-end [16676] testing part. This is one of the most [16678] important steps in the entire automation [16681] agency business model. I want you to [16683] think about this logically. [16684] Let's say you spend 30 hours developing [16687] the best project ever known to man. It [16690] is so amazing. It's an automation that [16693] summons God. I don't know. It's really [16695] cool. All right. It does some just [16696] amazing Let's say it does [16698] everything the client wanted and it [16699] makes them a million billion dollars a [16701] day. But when it comes time to deliver [16702] that project, there's just a little I [16705] don't know, you added an extra semicolon [16706] somewhere in one of the text parsers [16708] assumption and it just it doesn't work. [16710] The first time the client tries to use [16711] it, it doesn't work. How much value do [16714] you think that you have just destroyed [16716] for yourself by having that system not [16718] work? It doesn't matter if you spent a [16720] million hours building it. If it doesn't [16723] work when you deliver it, it's as if you [16726] spent zero hours on it. The client [16728] perception is going to be basically the [16729] same. So end toend testing ETO is by far [16734] one of the most important parts of any [16736] service delivery. Whether it's [16738] automations, whether you're doing some [16739] marketing campaign, whether you're doing [16741] some security, it whatever the hell [16743] across business models, if you don't [16745] just give everything a onceover before [16746] you give it to your client, you are [16748] shooting yourself in the foot and you're [16750] wasting a massive [16751] opportunity. So, an actual end to-end [16754] test, like logistically, is just where [16755] you execute your flow from start to [16757] finish as if you were your client. and [16759] you make sure that every one of the [16760] modules in your flow like if you're [16762] using make or something like that [16763] activate even if you have filters even [16765] if you have um I don't know several [16767] routes or several subsequences or or [16770] whatnot. It's obviously very tempting to [16772] think that, well, hey, I just spent 30 [16774] hours on this thing. Like, I I get how [16775] it works, okay? I've just isolated. I've [16777] ran this module and that module and that [16779] module, but trust me when I say I can't [16780] tell you how many times I have thought [16782] the exact same thing, and then I deliver [16783] a project that maybe a client paid [16784] three, four, $5,000 for, and their first [16786] thing is like, "Nick, this isn't [16787] working." Like, you're just you're [16789] obliterating your odds of getting a [16791] retainer, a follow-up. Uh, you don't [16793] want to do that. You want to be very [16794] detail- oriented with the stuff. Um, and [16796] you know, as I always mention in my [16798] videos, like retention unlocks a massive [16799] amount of leverage here. That's what [16801] we're going to talk about. All right. [16802] So, I have this little scenario set up [16804] here as I mentioned previously. Let me [16806] just walk you all through it so we're on [16807] the same page. It makes a HTTP request [16809] to [16811] school/makemoneywithmake/about. You [16812] know, the little get method. Then we [16814] parse the text uh turn it into sorry, we [16816] parse the HTML, turn it into text. [16818] That's what that looks like. And as you [16820] see, there is a very important little [16822] snippet right here. Private group 400 [16825] members. That's basically what we're [16827] looking for. We're looking for that [16828] little number 400. So, what do we do? [16830] Logically, we're going to use a reax [16832] here. I'm going to just be feeding it in [16834] a very simple pattern, private group, [16836] and then this is what I'm looking for. [16837] Space members. I don't need all of this [16839] text, but I just copy and paste it in. [16840] It worked one time, and I was like, "All [16842] right, good enough for me." And then [16844] last but not least, you know, if the [16846] number is not 400, we create a message [16848] in Slack and I publish it to my [16851] leftclick sales channel, right? Voila. [16854] We have our our code here. It's like a [16855] little block formatting. You could just [16857] use plain text, nothing special. But if [16859] I uh if I jump to my Slack, this is what [16861] the notification looks like. I just ran [16864] this again because I wanted to test that [16865] last module, but let's just use this [16866] one. MMWN member count is no longer 400. [16869] Current member count 399, right? Um the [16872] purpose of the system way back in the [16873] day was just to like notify me when [16875] stuff like this would happen. I don't [16876] really use it anymore. But yeah. All [16879] right. So, I need to somehow magically [16880] get back to the screen. Should be good. [16882] Working with two monitors is weird. Uh [16885] awesome. So now that we understand what [16886] the system looks like, the question is [16887] like how how do you actually go about [16889] end to end testing this thing? Well, [16890] it's pretty simple. Um all you need to [16892] do is you just need to run every single [16893] module. Uh and you don't want to do so [16895] isolated. You don't just want to click [16896] run this module only. You don't want to [16897] just click run this module only. You you [16900] don't just want to do that and work your [16901] way down. You actually want to run it as [16902] if the client were to use it. In my [16903] case, this is scheduled to run once [16905] every let's just say 60 minutes. So I'm [16907] actually just going to click run. We're [16908] going to see what happens. Okay, cool. [16910] Number one, that executed fine. This [16913] looks like it executed fine. That looks [16915] like it executed fine, but there's some [16917] filter here and we can't actually see [16918] the execution of that last module. Uhoh. [16921] So, what we need to do is in order for [16922] us to have fully end tested everything [16924] in our flow, we're going to need to find [16926] a way to either remove that filter or or [16928] just have it run anyway. So, uh this is [16930] not 400. So, it says if you know this [16933] number is not equal to 400, then it'll [16935] run. I'm just going to go like 401, you [16938] know, just so I can really quickly run [16939] it. And let me just change this number [16941] here too, just so that it doesn't seem [16943] weird. Okay, great. Let's run this. [16946] Awesome, awesome, awesome. What is the [16948] intended output? The intended output is [16949] a message that says make money with make [16951] member count is no longer 401. And then [16954] we have a current member count of 400. [16955] Perfect. So now I'm I'm going to go back [16957] here and I'm going to very [16959] intentionally just make [16962] sure that I reverse that change. And [16965] this is the same production ready system [16967] it was just a second [16969] ago. Awesome. And uh yeah, now I am [16974] good. I can continue onwards with my [16977] system. I've verified that, you know, I [16979] have every module here working the way [16981] that I want it to work. I'm I'm good. I [16983] I don't need to worry about this [16984] anymore. As you see, that took maybe 2 [16986] or 3 minutes. It's by far the most [16988] valuable two or three minutes that you [16989] are going to spend throughout this [16990] entire process. If you forego this two [16993] or three minutes for some other reason, [16994] you are making a very big strategic [16996] error. You're always going to want to do [16997] some type of end testing in your system. [17000] Okay, great. Let's talk a little bit [17001] about step two, which is copying [17003] blueprints and templates. This is hyper [17006] important. If you think about this [17007] logically, automation and software [17009] engineering are one of the only [17010] industries that you can effectively do [17012] this. But let's hypothetically say that [17014] you just spent 20 hours working on a [17015] project and you were just making, I [17017] don't know, the project was like 500 [17019] bucks, okay? Really small project. You [17020] made 25 bucks an hour with this. You're [17022] like killing yourself. You're like, [17023] "What the hell is wrong with me? Why [17024] can't I make more money than 25 bucks an [17025] hour? I'm a useless automation agency [17027] and I should just stop." Well, I want [17030] you to think about it this way. Um, you [17032] didn't just spend 20 hours to solve this [17035] project. You spent 20 hours to solve [17037] every instance of this project ever. If [17040] you ever get this project again or a [17042] variant of this project, you now have [17045] blueprints and templates that allow you [17047] to get 99% of the job done in 5 seconds. [17051] So, sure, it might have taken you 20 [17052] hours at the very beginning, but the [17054] second time it'll take you 30 minutes. [17056] The third time it'll take you two [17058] minutes. The fourth time it might take [17060] you 30 seconds. Maybe you build an [17062] automation that delivers the [17063] automations, right? It's kind of like [17064] Apex um stuff and that's what a lot of [17066] people aim for. So, the point that I'm [17068] making is the reason why automation as [17070] an industry is so freaking awesome is [17072] because once you're done, you can just [17073] copy and paste this forever. The issue [17075] is most people do not save their [17077] blueprints when they develop them for [17079] clients, especially on like other client [17080] environments and stuff like that. And [17082] so, I made this mistake a lot when I was [17084] starting. If I had, you know, been very [17086] organized about the way that I copied [17087] all my blueprints, clocked all my [17089] templates, change, you know, when I say [17090] templates, I mean like the ClickUp [17091] environment, I mean like the the Monday [17093] environment, if I had been a little [17095] better with this, I think I probably [17096] would have been able to hit at least [17097] another, you know, $30 $40,000 a month. [17099] I think I would have been able to make [17100] at least $100,000 a month with the [17102] automation agency. Um, but I didn't, you [17105] know, I was pretty disorganized. I said, [17106] "Ah, well, maybe I'll just I'll just [17107] copy it later." And lo and behold, you [17109] know, a year or two later, everything's [17110] disorganized. I have no idea what system [17112] is which. I don't have access to a few [17114] of my client environments anymore. I've [17116] lost a lot of that leverage that I could [17117] have gotten. So, what I highly recommend [17119] you guys do is after every one of your [17122] projects is done, download all of the [17125] blueprints if you're in make.com, [17127] download the I don't know, scenarios or [17130] or n10 JSON if you're using another [17132] platform and store them in a Google [17134] Drive or similar. Um, so I have a very [17137] simple folder structure set up here. As [17138] you can see, I just called it the name [17140] of my company. Left click. Underneath we [17142] have just my clients and inside of them, [17144] you know, there's this one called NSM, [17146] Nick Media. I'm not very creative [17148] clearly. Uh, and inside of that we have [17150] MMWM, member account scraper, Slack [17152] notifications. So, this is where I'd [17154] store that blueprint. So, what I would [17155] actually do is literally I would go [17157] here, I would export this blueprint, [17159] okay? And then I would go back over and [17162] drag it in just so that I have an [17164] organized record of every blueprint that [17167] I've ever made. And then just to make it [17169] even better and more organized, I'd [17171] actually copy the name of this scenario. [17173] Um, because make and has the unfortunate [17175] tendency to just call it like blueprint [17178] 5.json or whatever. Um, and then I just [17180] I' I'd name it that just so I know, you [17182] know, let's say 6 months from now when I [17184] come in and get a similar project and I [17185] want to copy and paste this. So that's [17188] personally the way that I highly [17190] recommend you guys do things. Um, if I [17192] had done this from the very get-go, if I [17193] had done this from day one with my [17194] agency, I would have made a lot more [17195] money and it also just would have [17196] probably spent way less work rebuilding [17198] the wheel 55 million times. Um, but I'm [17201] going to leave it at that. All right, so [17203] step three in our system is to record a [17205] Loom standard operating [17207] procedure. What exactly do I mean by [17209] this? Well, you need to understand that [17211] automations are ephemeral. They [17215] are virtual. They don't really exist, [17218] right? The vast majority of the clients [17219] that you're going to be working with are [17220] going to be working with you because [17222] you're like a technology expert. You're [17224] an automation expert. You typically know [17225] more about like cloud stuff than they [17227] do. So to you, these automations have [17230] value, right? You're working with them. [17231] It's drag and dropping across a screen. [17233] They they do stuff, right? But to a [17235] client, you know, especially a client [17237] that you've like done most of the work [17238] away from, sort of this black box thing, [17241] their ability to conceptualize the value [17243] of your automation is very limited. And [17246] so what you need to do instead of just [17247] delivering the automation is you need to [17250] find excuses to add some more onto [17252] them. Uh you know, instead of just [17254] delivering a blueprint, let's say, which [17256] I highly recommend you never do. You [17259] actually record a video that goes [17261] in-depth walking through what the [17262] automation does from start to finish. It [17264] shows the the the result of the [17266] automation. It shows how to make changes [17267] to the automation if necessary. You're [17269] there so you can kind of walk them [17271] through and frame how great your system [17272] is. Give them some ideas. obviously [17274] charm them with your personality. Uh but [17275] this is essentially like another [17277] deliverable that you are providing [17278] alongside your system and alongside what [17280] the system is supposed to produce which [17281] just instantly buys you uh an extra win. [17284] If you think about it, if my [17285] deliverables previously were the system [17287] and now my now now my deliverables are [17289] the system and a loom. I basically [17290] doubled the number of deliverables but [17292] I've done so in like 15 minutes or so. [17294] Now I've actually recorded a whole loom [17296] here for you guys and I'm not going to [17297] go through that loom in this video. I [17299] think it's right over here. Yeah, I'm [17300] not going to go through the whole loom [17301] in this video, but this is exactly the [17303] format that I take every time I do uh [17305] you know like a documentation or video [17307] walkthrough. I typically start off with [17309] just like a brief introduction of what [17310] the purpose of this video is. I will [17312] never ever say like, "Hey, Peter, how's [17314] it going? Great delivery, man. I'm going [17316] to walk you through it." I'll always say [17317] something like, "Hey, the purpose of [17318] this video is to act as video [17320] documentation for Peter Blank's team. [17323] I'm going to ensure that you guys know [17325] how this works, and I'm also going to [17326] ensure that you guys can make some [17327] common changes to the system if need be. [17329] The reason why is cuz I just want them [17330] to be able to copy and paste it to their [17331] team members as necessary. If you do [17333] little things like this, they'll [17335] appreciate it and they'll also think [17336] like, man, this person really knows [17337] business. I mean, if they're just making [17338] my life that easy and it helps. Anyway, [17341] uh, you know, you go through, you talk [17342] about the use case, you talk about what [17344] the system is for, the problems the [17345] system solves, you actually walk them [17347] through if they wanted to make some [17348] changes to this. If they wanted to, [17349] let's see, change the scheduling from 60 [17351] to 30 minutes, they could do it that [17352] way. If they wanted to change uh, the [17354] message that they're getting, they could [17355] do it this way. uh you actually go [17357] through and you like record a very [17358] detailed comprehensive video that walks [17360] them through this. And this does like a [17361] couple of things um that that I consider [17363] bonuses. One, your client is going to [17366] think that it's a bonus cuz they weren't [17367] really expecting to get anything at this [17369] level of detail. And they're going to [17371] think that you spent a lot more time on [17372] it than you probably did. But like [17373] remember, you've just been working with [17374] this system for god knows how long. You [17376] know everything about this. Like it's [17377] it's not that big of an ask to have you [17379] just talk through those thoughts out [17381] loud, right? You realistically do it in [17383] like 10, 15, 20 minutes. But the second [17385] and probably one of the most important [17386] issues is you get the chance to show off [17388] a little. You also get the chance to [17389] shape the client perception. Like again, [17392] you know, automations are these [17393] ephemeral things that just exist in the [17395] cloud. If you are here walking people [17397] through that automation, you have the [17399] ability to turn it from something that's [17400] ephemerraable, ephemeral and, you know, [17403] virtual or whatever into something [17404] physical, right? You can constantly [17406] relate this back to ROI, demonstrable um [17409] some type of like demonstrable savings [17411] or demonstrable revenue. uh you could [17413] talk about, you know, the complexities [17415] of the system. You can treat yourself as [17416] an authority essentially and really sell [17418] yourself even more than you've already [17419] done. Um so I I highly recommend you [17421] guys record Loom SOPs anywhere uh for [17424] any service that you do, whether it's, [17426] you know, automation or any anything [17427] else that's technical. It's obviously [17429] going to put you miles ahead of other [17430] service providers. And then yeah, you [17432] know, it takes you like 20 minutes. [17433] That's about it. Like it's super fast [17434] and easy to do realistically. Um, and [17437] the cool thing is once you have a piece [17439] of Loom documentation, you can very [17441] easily turn this into other forms of [17442] documentation as well, [17444] particularly text [17447] documentation. The value here is not [17450] only have you just created a video. So, [17452] so you know, if we go back a little bit, [17454] like at the very beginning, your first [17455] deliverable would have only been the [17457] system, right? But then you made a video [17458] documentation. So, now you have two [17460] deliverables instead. And now what [17461] you're doing is you're literally just [17463] copying and pasting the Loom transcript [17465] into GPT4 or a large language model and [17467] you're saying, "Hey, turn this into a [17468] standard operating procedure." In like [17470] three or four minutes, you're turning [17472] the deliverables from two into three. [17474] You're basically tripling the perceived [17475] value of this on the customer side of [17476] things. And you're giving them more [17478] that they can touch, feel, hold, uh, and [17480] so on and so forth. And so, uh, you [17483] know, this is a reasonably simple [17484] prompt. I'm not going to get super deep [17486] into the prompt engineering, but I'm [17487] going to show you guys an example of [17488] what this might actually look like in [17489] practice. just drag this puppy all the [17491] way over [17492] here. What I did was I went to my Loom [17494] video, right? And then let me just uh [17498] not make this other one full screen. [17499] That way we can actually like jump [17500] through tabs and stuff. Okay, great. So, [17503] I went to my Loom video which is right [17504] over here. And then, you know, I watched [17506] it back which took me I don't know like [17508] 5 minutes at 2x speed. And while I was [17510] watching it, what I did was I just took [17512] screenshots. I just did this. You know, [17514] on a Mac it's uh command command shift [17517] or command control shift 4 or something. [17519] I literally did this and then I went [17521] back to GPT and then I pasted that image [17524] in and then I did this in three or four [17526] key areas that I think that uh you know [17528] like the person would need some visual [17530] help for in my documentation. Then I [17532] just said you are writing documentation [17533] for an automation system that manages [17535] whatever company I said cleaning company [17537] in this instance. Below is a transcript [17539] and several images from a video that we [17540] recently recorded. Convert these [17541] transcripts and images into a piece of [17542] text documentation. Use markdown ATX [17544] formatting. I then went to my Loom [17546] video. I clicked on the transcript [17548] button up here and then I clicked copy [17550] and I just pasted it all in [17552] here. And then what did we get at the [17554] end? Make money with make member count [17556] scraper documentation overview. This [17558] documentation outlines the functionality [17559] blah blah blah blah blah. Right here we [17561] have our whole documentation. Basically, [17563] it's extraordinarily simple for us to [17565] do. And as you can see, starting from [17568] the very [17570] top and then give that a paste. There we [17574] go. Okay, great. So now we have [17576] basically like a full Google doc that's [17578] up and running, ready to go. Looks [17580] really sexy, you know, even includes [17581] some formatting with the the URLs and [17583] stuff like this and just walks people [17585] through what to do. And then, you know, [17587] I've experimented with having it output [17589] images as well. Um, unfortunately, I [17591] think Claude could do this. I don't [17593] think that [17594] chatbt40 can do this or perhaps I was [17596] experimenting with the API version. Uh, [17598] but what you can do is because you just [17599] included all these images in your [17600] prompt, you can actually just copy these [17602] and then just paste these directly in. [17604] So very simple, you know, as you can [17606] see, this just takes a couple of [17608] additional [17609] seconds. So I'm going to go [17612] here. Then I'm going to go over here. [17615] I'm going to feed in I don't [17619] know. Let's just feed in this image [17623] here. Uh let's do this one [17629] here. Actually, we should do this first. [17633] That's probably higher quality. Probably [17635] makes more sense. [17638] Yeah. Great. And you know, now we have [17641] some images. We have Just going to copy [17644] this and paste this on the Reax [17649] part. Somebody's going to yell at me for [17651] saying Reax again. Um, now we have like [17652] a pretty high quality text that we can [17655] just include alongside the delivery in a [17658] templated email, which I'll show you [17659] guys in a second. So, you know, that [17661] took me, I don't know, two or three [17662] minutes. I was obviously just pasting [17664] randomly. Might take you a full five. [17666] So, let's just go back here and not get [17669] myself in trouble [17671] here. People always exaggerate on the [17673] internet. Um, you know, this might have [17675] taken you, let's say, 15 or 20. That [17676] might have taken you five. [17677] Realistically, you've spent less than [17678] half an hour, but you tripled the number [17680] of deliverables that the client is going [17681] to get. Not only are they going to [17683] appreciate it, but they're going to be [17684] very impressed, which is the perfect [17686] opportunity for us to get into actually [17688] thinking like, okay, you know, if [17690] they're super impressed in a perfect [17691] world, what more can I get from them? [17693] What more do I want from them? And what [17694] you probably want from them, if you're [17696] in the automation industry anyway, is [17697] you want a retainer of some kind. You [17698] want some type of subscription billing [17700] model, some long-term upsell uh that [17702] allows you to work with this person not [17704] just on this one project, which you know [17706] might have given you a tangible ROI, but [17708] we want to talk, you know, months or [17709] years in the future, but consistently [17711] over time, generating some type of MR [17714] that, you know, you can depend on and [17715] then you can ultimately use to build [17717] revenue stability and and build the rest [17718] of your business. So, at this point, you [17721] are delivering a high-quality completed [17722] project. You're also delivering detailed [17723] video docs and training and then [17725] detailed text docs and training. This is [17727] crazy. They're getting three things here [17729] for the price of one. In contrast to [17730] what most service providers do, which is [17732] they just only ever do this You're [17734] going above and beyond this. And you're [17736] giving them three deliverables for a few [17738] moments of extra work on your end. Half [17740] an hour. If you spent 5 hours to build [17742] the system, you spend an additional 30 [17743] minutes at the end doing all this stuff. [17745] You know, you're doing what's that 5.5, [17747] I don't know, 10% or something more work [17749] for like three times the results. This [17751] is the time to upsell. Now, what I [17753] personally do is I don't like try and [17756] sell my customer or client really hard. [17758] I'm I'm pretty soft about this if I'm [17759] honest. And I like to think that like I [17761] buy myself a lot of goodwill with this. [17762] And this is why I've been as successful [17763] as I have. There are a lot of people out [17765] there that are like hard sales. You [17767] know, they'll probably recommend that [17768] you do a delivery on a call or something [17770] and then you try and bring this stuff up [17772] with them. I've always thought [17773] personally that that's like high [17774] pressure sales and I I used to do a lot [17776] of that stuff way back in the day and [17777] always just had a sour taste in my [17778] mouth. So personally what I do is I just [17780] try and just make the most sense [17782] possible and then I try and just give [17784] them really good over an email, [17786] peique their interest, then try and get [17787] them on a call to to chat about a [17789] retainer or or something of that nature. [17792] The way that I do it is I will frame [17795] this in terms of client ROI. I'll say [17796] something like, "Hey, I think that you [17797] might be able to make an additional 10% [17799] here. I think I might be able to bump [17800] you up by another $20,000 a month [17802] there." And then I say a simple three [17804] bullet point snippet along with [17805] estimated returns. I then take that and [17808] then I include it in our next step. And [17810] you know, it's hard for me to really [17811] make this work without showing you this [17812] template. So, I'm just going to show you [17814] what this might actually look like. I'd [17816] also like to discuss that retainer. I [17817] see no reason why I can't add 5% or more [17819] into your margins with a few changes. [17820] I'd need a bit more context to this [17822] effectively, but here's what I'd look to [17823] do in the next few weeks. Number one, [17825] I'd like to build out a dashboard that [17826] does this. Number two, I'd like to [17828] create a streamlined work management [17829] system for you that does that. Number [17830] three, I want to do something that does [17832] that. you know, if you could scale past [17834] 250K a month with 35% margins. We need [17836] to make some tweaks, you know, they sort [17838] of do the math and they're like, "Holy [17839]  this guy could make me a lot of [17840] money." So, obviously, you're going to [17842] need to understand what the client [17844] business is in order to make this work. [17845] But that's what the whole consultative [17846] sales side is really. Like, you're [17848] getting to know them during that sales [17849] call, the disco call, and then you're [17851] getting to know their business over the [17852] course of your project. You're getting [17854] to learn through their systems. You're [17855] getting to poke around their CRM. You're [17857] essentially getting to see what they're [17858] missing and where you can fill that gap. [17860] as an automation engineer, um whether [17862] you're an agency or freelancer or [17864] whatever, you have a ton of value after [17865] you've worked with two or three [17866] businesses because you could literally [17867] just look at like business A and be [17869] like, "Huh, business A is doing that [17870]  wrong. Like that just looks really [17871] ineffective." Then you start working [17872] with business B and you're like, "Huh, [17873] business B is doing a really good job [17875] with that part. I wonder if I just like [17876] took some of the elements of business B [17878] or the systems I'm creating for business [17880] B and applied them to business A, I [17881] wonder if they'd make more money." A lot [17882] of the time you will. Um, so this sort [17884] of sharing and like building your [17886] template base and consultant knowledge [17887] base can be really valuable and a lot of [17889] people just need like a simple uh [17891] bulletoint uh sort of thing in order to [17893] be like, "Holy yeah, you know [17894] what? I can do that. I am willing to [17896] spend money on this." Okay. Now, in [17897] terms of what this actually looks like, [17898] the second last step is to send a [17899] templated delivery email. At this point, [17901] you know, as I mentioned, we have these [17903] three features. We have the high quality [17904] completed project, the detailed video [17906] docs, the detailed text docs. Now, it's [17907] really just time to tie all this stuff [17909] up together in a nice bow and then just [17911] like present it to the customer. So, I [17913] just have a pre-created template that I [17915] make a few modifications on. You could [17916] just save this and make this like a [17917] Gmail template or you could find a way [17918] to automate this completely. I automated [17920] this uh a little while ago, but then I [17923] found that even if the automation did it [17926] like way faster and it was like pretty [17927] good quality, I wanted the ability to [17929] make a few minor little changes that the [17931] automation just couldn't really do, like [17932] AI would struggle with. So, I personally [17934] send these myself. As as I mentioned, [17936] you know, it uses a template. It takes [17937] me like 10 minutes. And this is another [17939] really high ROI, 10 minutes to spend. [17941] Um, before I do this, I do make sure [17943] that my client has access to everything [17944] that they need. I think that's really [17945] important. Not a lot of people talk [17947] about this, but I don't want my client [17949] to feel like pressured. I don't want [17951] them to think that they need to keep [17952] working with me in order for their [17954] system to continue running or in order [17955] for me to maintain it if that was the [17957] promise in the contract. They don't. Um, [17959] I want them to be able to make a [17960] decision from like a a place of strength [17962] and from a place of like cost benefit as [17964] opposed to fear. Um, and I think I think [17966] that's really important. Um, I don't [17968] know if everybody agrees with me on that [17970] and I think, you know, you could be all [17971] Mchavelian and be strategic and [17973] about it and fine, whatever. But [17975] generally speaking, I've bought a lot of [17976] goodwill with this approach and it's [17977] worked really well for me. So that's [17979] what I do. I'll make sure that they have [17980] all the creds and everything like that, [17981] but after they do, um, then I move into [17984] a template. So you can swap out whatever [17986] bolded sections you want here. I've [17988] actually like included a real one that I [17989] sent to somebody and then I just made a [17990] few tweaks for anonymity purposes. But, [17992] you know, our blank name is ready. So [17994] maybe our CRM system is ready. I had a [17996] lot of fun working on this and hope you [17997] enjoy it as much as I did. Two things. [17999] This is where you claim your wins. I [18001] recorded a detailed video breaking the [18003] system down that you can use as both [18004] documentation and training material. [18006] There's a technical section which covers [18007] how to modify the system if needed and a [18009] more general system to show users on [18011] your team how to use it in practice. [18012] Number two, I also put together a [18014] comprehensive Google doc just so you had [18016] something in both video and text format. [18018] This is where we're going to be putting [18018] our links. By the way, regarding [18021] payment, and this is really important, a [18022] lot of people forget to ask for money. [18024] you should always be asking for money no [18026] matter what. Um, even if the system is [18028] not entirely what you what you wanted or [18030] doesn't conform to the specifications, [18032] you should at least make the ask for the [18034] money. Um, otherwise clients aren't [18035] going to take it seriously. Nobody's [18036] really going to want to make sure that [18037] you get paid. So, in this case, this is [18039] a project that I did on Upwork. I talk a [18041] lot about Upwork on my channel and in my [18043] communities because I think it's the [18044] easiest way for somebody to get their [18045] first two or three customers with zero [18047] experience, zero client management [18049] skills, zero idea where to start. Um, [18051] but back in the day I was using this [18053] with an Upwork contract. And one thing [18054] that's really important in Upwork is [18056] making sure that when you finish a [18057] project, you get a high-quality review [18059] because that review is basically like [18060] SEO and CRO for your profile. So, [18063] regarding payment, I submitted a [18064] milestone on Upwork. Please accept after [18066] you've had a chance to check it out and [18068] then close the contract plus leave a [18069] written review if you think I did a good [18071] job. This is really important because [18073] I'm assuming the win. And that's what [18075] this template does. It just assumes that [18076] everything is going to be good. I'm [18079] going to talk about how to minimize the [18080] likelihood of a revision request in the [18081] next step, but I find that this in [18083] practice is crucial. And then down here [18086] is where I make that ask that we talked [18087] about um just in that last step. And I [18089] cannot for the life of me draw a square. [18092] I think the shape detection even was [18093] like, "What the hell are you doing, [18094] man?" Okay, there we go. Um this is [18097] where I bring up the retainer and this [18099] is where I actually talk about ROI. I'll [18100] say, "I see no reason why I can't add [18102] this much money or more into your [18103] margins with a few changes. I need a bit [18104] more context, blah blah blah." So, uh, [18107] the reason why this is really valuable [18108] is because if you think about it, this [18109] is a single email that can make me [18112] $15,000 more dollars this year. It's a [18114] single email that can increase the [18117] likelihood of a a retention or something [18119] by like four or five times. It's a [18121] single email that essentially takes all [18125] of this hard work that I've done, you [18127] know, that might this is like the engine [18128] of a car, and then it wraps it in the [18131] sexiest Ferrari chassis or whatever [18134] you've you've ever seen. Do you know [18135] what I mean? it. We're buffing the paint [18137] here. We're making this look as [18138] beautiful as humanly possible. We're [18140] squeezing as much value out of the work [18141] that we've already done. And that's my [18143] approach to this client management [18144] stuff. And this is my step-by-step [18146] framework all the time. So, yeah, you [18148] know, I'll assume the sale all the time. [18149] I'll say, you know, we can chat about [18151] this on a call. Let me know if that [18152] works. Here's a calendar. If you want me [18154] to book on yours, just send it over. [18155] Thanks again. Can be posted if you need [18156] anything. You guys can copy and paste [18157] this. I'm going to include this [18158] whimsical link down below. So, you guys [18160] could literally just take all of the [18161] text that you want here and use it for [18162] your own business. Um, feel free. But [18165] after that step, uh, we get into [18167] probably one of the more important parts [18168] of this and one area that I think a lot [18170] of beginners struggle with, which is, [18171] you know, Nick, what about revisions? [18172] What do I do when the client asks for [18174] changes? Should I charge them? Should I [18176] not charge them? What the hell is the [18177] deal here? Well, a truth in any [18179] service-based industry is that clients [18180] will almost always want at least one [18183] revision. People don't like talking [18184] about this because obviously it eats [18186] into the perfect view of like, oh, like [18187] I I I made $2,000 in five minutes, [18190] right? But the truth is clients almost [18192] always want some form of revision. I'd [18195] say probably over 70% of the time I get [18197] a revision request. Like there is the [18199] odd situation typically with people that [18200] I've worked with for a longer time that [18203] you know just get the project and [18204] they're like this is amazing. Thank you [18205] very much. We're done. Here's $5 [18206] million. Uh well I haven't had a [18208] situation like that yet. But if you want [18210] to be my first anywh who the other 70% [18213] of the time, right? Um yeah. So 30% of [18217] the time they say the other 70% of the [18218] time they want some type of change. [18219] like, "Hey, this is amazing. Just had a [18221] quick thought. Do you mind changing this [18223] thing to that thing?" Or, you know, like [18225] we just over the course of the last [18226] couple weeks, we've been changing our [18228] file sorting procedures. So, do you mind [18230] just updating the Google Drive [18231] structure? Or, hey, do you mind changing [18233] out this software platform for that [18234] software platform? And most of the time, [18236] these revisions are pretty minor, right? [18238] If the client likes you and if you've [18239] just wowed the hell out of them with all [18240] of this like this acts as like a [18243] vaccine. It's like inoculation against [18246] somebody asking for revisions because [18248] they're like, "Jesus Christ, did this [18249] guy do a lot of work for me? My god." [18252] Meanwhile, you only spend an extra 20, [18253] 30 minutes, but they don't know that. [18255] So, realistically, it's really not that [18257] much work. Um, here are my rules of [18258] thumb for revisions. And this is [18259] personally what I do to minimize the [18261] likelihood of them coming up and to uh, [18263] you know, like streamline my project as [18265] much as possible. Number one is I'll [18267] always take at least 24 hours to [18269] deliver. This sounds interesting. The [18271] reason why is because I found that when [18274] I did revisions as quickly as possible [18275] when I was first starting out, you know, [18277] somebody would be like, "Hey, can you [18278] change this?" I'd be like, "Oh, sure. [18279] Give me 15 minutes." I change it. I hand [18280] it back. There was a much higher [18283] likelihood that they would ask for [18284] another revision [18285] afterwards. So, that's that's one thing. [18288] The second thing, which I didn't mention [18290] here, was a lot of the time clients will [18293] have multiple revisions that they want. [18294] They'll look at something, they'll be [18295] like, "This is a great system, great. I [18297] just want one little change. Let me send [18298] that off to Nick." and then an hour [18300] later they'll be like, you know what, I [18301] had another little change I wanted and [18302] then they'll send that off again. So in [18304] this way I don't have to change the [18306] project, deliver it again, have the [18308] revision request come in again, have to [18309] change a project, deliver it again, [18311] right? I can just batch those two. And [18313] again, it's usually like 5 10 15 minute [18315] little fix here. And this enables me to [18317] to send the stuff back much faster and [18319] more efficiently. And then three, the [18321] value here is if you do this and it [18323] takes a day, you know, clients generally [18326] want their systems up and running, [18327] right? like you committed to a schedule [18329] for a reason. So if you show them that [18330] like, hey, you know, these revisions [18331] that you're asking for, they aren't [18332] trivial. They take a little bit of time. [18333] So, you know, I'll deliver this in like [18334] 24 hours or so. I don't say that, but I [18336] say, hey, yeah, sure. You know, I'm [18337] happy to do this for you. It's going to [18339] take me maybe one or two business days [18340] to deliver. Um, you know, clients tend [18343] to brush off a lot of the smaller [18344] they don't really care about and they [18346] say, well, you know, I want this [18346] business I want the system up and [18348] running more than I really want like the [18349] font color on this thing changed. So, [18351] never mind. It's okay. We'll just move [18352] ahead. You can make that change whenever [18353] you want. So, that typically helps. Um, [18356] and then also, you know, if it takes me [18357] a day as opposed to five minutes, right, [18359] they're more likely to think, okay, [18360] well, this actually took that actually [18362] took a fair amount of time and energy. [18363] Like, I can't exactly squeeze Nick like [18365] a like a wet rag. Um, yeah. You know, so [18370] it it helps. It's a good I guess from [18372] both perspectives, both like an ROI [18374] perspective for the client, but also [18375] like a decency perspective. A lot of the [18377] time, you know, they grow to respect you [18378] and like you when you know everything [18379] about their business and offer real [18381] tangible advice. Um, the other big rule [18384] of thumb that a lot of people talk about [18385] is I will never explicitly ask for um, [18389] revision requests. I'll never say, "Hey, [18390] do you have any revision requests?" I [18392] think that that's just really silly. Um, [18394] it's not because I'm not happy to do the [18395] revision. Well, I'm not happy to do the [18397] revision requests, first of all. Let's [18398] just cut that out. Obviously, I [18399] don't want to do revision requests. I [18401] mean, I just did the system exactly like [18402] you asked and I'm amazing, so it should [18404] be great, right? But what I'm trying to [18405] say is I'm okay doing them if it leads [18407] to a higher likelihood of me getting [18408] some retained contract later on and then [18410] me making a large multiple of my time. [18412] But I don't want to make it really easy [18414] for them. I'd prefer to make it a little [18416] bit more difficult for them. So instead [18417] of me saying, "Hey, how's it going? Um, [18420] do you like the project? Is everything [18422] okay?" Right? Like um, you know, can I [18424] change anything to make this even better [18426] for you? I don't do that. I'll just [18427] always assume that it's good. I'll [18429] assume that they're willing to pay that [18431] invoice. I'm assuming that we're going [18433] to wrap everything up. And I'll use [18434] language like this. If that sounds good [18435] to you, let me know and I'll wrap this [18436] one up. Or I'll say, um, you know, if [18438] there's nothing else, then let me know [18439] if you have any trouble paying the [18440] invoice or or something of that nature. [18442] So, I will almost never say this because [18445] I just don't want them to feel like they [18446] have to use the revision privileges. I [18448] don't want them to think, well, like, [18449] hm, I mean, the system's great. Yeah. [18451] And like I would have been fine with it, [18452] but I guess Nick wants me to make a [18453] revision request or something. I I don't [18455] want any of that. I'd prefer that we [18456] just don't do revisions at all if I [18458] don't have to, cuz obviously, you know, [18459] it's my time that we're talking about. [18461] So, that's how I handle revisions. And [18463] then uh yeah, that last step here, [18465] project delivery, right? If you followed [18467] every step that I've talked about here, [18468] your service delivery is now better than [18470] the overwhelming majority of not just [18472] automation agencies, but like any [18474] business, right? God, you could apply [18476] the same tips that I'm talking about [18477] here to like a landscaping company and [18479] your landscaping retention, you know, on [18482] future projects and stuff would go way [18484] the hell up. Um, you can use this in [18486] literally any industry you want and you [18488] can crush. And I'm not saying that just [18489] to toot my own horn, but because I [18491] actually use the same approach in a [18492] number of different industries and it [18493] has crushed. Sweet. You now have the [18495] complete client journey mastered from [18496] generating the lead to signing the deal [18499] to onboarding them and then delivering [18501] flawless projects, which you know, when [18503] you do all of this stuff right, [18504] maximizes the probability that you'll be [18506] able to get somebody on a repeat or [18508] recurring subscription. And that's [18509] awesome. But this is where most [18510] automation entrepreneurs start hitting a [18512] wall. They figure this process out and [18514] they start doing it well. And then after [18515] that, they think that, okay, great. I've [18517] done this, but I can't do any more. I [18518] can only handle three or four clients. [18520] So, the only way to grow bigger is to [18521] hire more people. Then they start hiring [18523] people, and then they have to deal with [18524] a ton of headaches that come with it. [18525] What if I told you there's a better way? [18527] You guys can scale to six figures while [18528] also staying lean and keeping all your [18530] freedom and also avoiding the management [18531] nightmare that kills the vast majority [18532] of agencies. That's exactly what I'm [18534] going to talk about right now. I want to [18535] reveal the exact framework that I used [18537] to scale my automation business to [18538] $72,000 per month as a soloreneur. I had [18541] a VA, but for all intents and purposes, [18543] I was doing the vast majority of the [18544] fulfillment. I actually think you can [18546] squeeze this business model even [18547] further, but we'll touch on that in the [18548] course. We're going to cover how to [18549] productize your services, automate your [18551] own business processes, build [18553] distribution systems that work while you [18555] sleep, and then choose business models [18556] that scale without adding staff. Let's [18558] do it. In this video, you're going to [18560] learn about revenue ceilings and how to [18561] maximize revenue per staff member. [18564] You're going to learn about [18564] productization, including how to break [18566] down any deliverable into components and [18568] my personal approach for that. I'm going [18570] to teach you automation, how to use [18571] machines to do your work instead of [18573] people. Then we're going to talk a [18574] little bit about distribution or how to [18576] multiply your reach per unit time [18578] invested. And lastly, I'm going to run [18580] you through a few scalable business [18581] models, including how to pick ones that [18583] naturally let you grow without adding [18584] headcount. If that sounds interesting to [18586] you guys, stay tuned and let's get into [18587] it. All right, couple things I'm going [18589] to show you in this video. I have a [18590] couple diagrams. I have a slideshow. I'm [18592] going to walk you through it step by [18593] step. But just before I get into it, I [18594] have to add my usual disclaimer. This is [18596] just what's worked for me. I'm not [18598] necessarily trying to prescribe anything [18599] for you. If I was a discerning viewer of [18602] the Nicks arrive cornucopia of YouTube [18604] content, I would take whatever makes [18606] sense to me and then discard the rest. [18608] I'm not going to do any gatekeeping. I'm [18609] just going to show you everything that [18610] you need in order to do the same [18611] that I did. So, how to scale your [18613] business without adding staff. I put [18615] 100K a month here just cuz it's [18616] clickbait. But let's get into it. So, [18618] first and foremost, everybody thinks [18620] that you need to hire to grow. Uh but my [18623] secret sauce is that you don't. The [18625] reason why is because we are quickly [18626] entering an era where if you properly [18629] configure your tools and your business [18632] infrastructure, those alone can do the [18634] work of dozens of people without you [18636] needing to hire anyone. So, you can [18638] absolutely scale your company without [18640] adding headcount or by adding a very [18643] minimal amount of headcount. In this [18645] video, we're going to cover that [18646] four-step framework uh that shows you [18648] how to do it. I'm going to cover uh [18649] revenue ceiling or revenue per staff [18651] member first and then I'm going to get [18652] into how exactly to go about [18653] establishing this framework and then [18655] carrying it out. But this is the same [18656] framework that is currently being used [18657] by thousands of people myself included [18659] to build high margin high revenue solo [18661] businesses. Usually in the past you kind [18662] of had to pick one, right? Either you [18664] were high revenue or you were low [18666] revenue high margin. Well, now you can [18667] have both and there's no reason why not. [18669] So this applies to any digital business. [18670] If you're running a physical business, [18671] it's a little bit more limited obviously [18673] because I don't know if you're some HVAC [18675] guy. Uh it's going to be difficult to [18676] carry out the step-by-step process that [18678] I'm laying out in this video. I'm not [18680] necessarily saying that if you run a [18681] physical services business or a physical [18683] product business that you can't [18684] implement these. I think you certainly [18685] can. You're just going to have a harder [18686] time doing it and it's going to be a [18687] little bit less effective. A concept [18689] that I want to cover just before we get [18690] into things is that software and [18692] artificial intelligence, you can kind of [18694] treat these as force multipliers. These [18696] are very similar if you guys like think [18697] back to uh I don't know if you guys [18699] learned this in high school I guess it [18700] depends on where you are but like the [18702] force multipliers in in engineering like [18703] a lever right a lever is a force [18705] multiplier or a screw is a force [18707] multiplier a wheel is uh in effort in [18711] essence some some type of leverage well [18713] software and AI do the same thing except [18715] instead of it being in the physical [18716] world it's kind of in the virtual world [18718] and essentially they allow one person to [18719] provide the output of many people so [18721] your goal in scaling your business and [18723] implementing what I'm about to show you [18724] is to increase the ceiling revenue that [18727] a single person can manage. What I mean [18729] by that is if a single person currently [18731] in your business can manage maybe $5,000 [18734] or so, if you implement the tips I'm [18736] going to show you, we'll be able to get [18737] that higher to maybe 25,000, 30,000, [18739] 50,000, [18741] 100,000. In addition, hiring people [18743] includes many hidden costs and risks [18745] that usually aren't talked about, right? [18747] you have tons of issues with hiring, [18750] especially if you're looking to hire [18751] employees, like onshore employees, and [18753] especially if you are in places where [18755] legislation just just makes that really [18757] difficult, right? I don't want to be [18758] super evil capitalist or anything like [18760] that, but I'm sure most of the people [18761] watching this are business owners. So, [18763] uh you know, I'm sure you all feel me [18764] when you know, you have to deal with [18767] like certain probationary periods. [18768] Sometimes you have to deal with unions, [18770] you have to deal with like termination [18771] pay, you have to do onboarding. Uh [18773] there's a certain number of sick days [18774] you have to take, you have to give to [18776] staff members. obviously have some base [18777] compensation rules and whatnot. Well, [18780] the really cool thing is software and [18781] machines, they don't require any of that [18783]  and neither does your business [18784] infrastructure. So, there's near zero [18786] onboarding cost, there's near zero [18788] training costs, there's near zero legal [18789] costs, right? Uh I mean, aside from [18791] clicking a terms and service button and [18793] maybe some, I don't know, very unlikely [18795] disastrous things that occur with data. [18797] Uh realistically, you don't have to deal [18799] with 99.9% of the you have to [18800] deal with when hiring people. And that's [18802] that's my inspiration behind this. [18804] That's the inspiration behind the [18805] framework and why I'm running my [18806] business the way that I am. And then my [18808] last point is even if you do eventually [18809] have to hire, why not just set your [18811] business up in such a way that enables [18813] you to scale as much as you can before [18814] you do so. So that when somebody [18816] eventually does come in, well, guess [18818] what? Now, you know, you don't have to [18820] hire 20 people. You can just hire one, [18822] right? You can pay a lot less money. [18824] That person is hyper leveraged. You can [18825] do way more with it. Um, this is more or [18828] less my mindset. And the reason why I'm [18829] telling this at the beginning of the [18830] video is ju just so that we're all on [18831] the same page here. here. I don't want [18832] anybody being like, "Nick, what the [18833] hell? Why wouldn't you hire people? Why [18835] would you get a machine to do the work?" [18837] Um, well, this is why right here. Okay. [18839] So, the very first and probably the most [18841] important concept that we have to learn [18842] in order for the rest of this to make [18843] sense is the revenue per staff member. [18847] I've talked about this before in my [18848] videos and I've called this revenue per [18850] employee or RP. This is a pretty [18853] standard metric in like business [18855] analysis. Basically, these analysts and [18857] these consultants come in and then they [18859] count up your total revenue for the year [18861] usually and then the total number of [18862] employees at your company and they just [18864] divide the total revenue, say million [18866] dollars, by the total number of [18867] employees, which is, I don't know, 100. [18869] And then they figure out the uh I don't [18871] know the revenue per staff member, which [18873] is $10,000. $10,000 per year per staff [18876] member is And if your company is, [18878] you know, an RP of that, then obviously [18880] you're doing something wrong. Unless [18881] you're at like some I guess startup and [18883] you're not making any money, but you're [18884] fundraising or whatnot. But I'm I'm I'm [18886] assuming none of you guys run startups [18888] here. I'm assuming we're all just like [18889] bootstrapping agencies or service [18890] businesses. So, I'm taking this one step [18892] further and I'm calling this a revenue [18894] per staff member just because this [18895] reflects I think a little bit better the [18897] modern hiring environment. We're not all [18899] hiring employees anymore. We hire uh [18901] contractors. Sometimes we hire like uh I [18904] don't know like flex workers. Sometimes [18906] we have VAS and stuff like that. [18908] This is just a more comprehensive term [18911] that I'm just taking to mean the revenue [18913] of your company divided by the total [18914] number of people that you interact with [18915] on a regular basis. Now, if you're a [18917] soloreneur like me, you can also think [18919] of this as how much economic value alone [18922] can I create, right, with just myself [18924] before I add anybody else to my [18926] business. And this is important for me [18928] because I'm I'm always trying to [18929] optimize this. And this is where systems [18930] and tools, artificial intelligence, and [18932] the software approaches I'm going to [18933] talk about in a minute get into. This is [18935] typically the way that most businesses [18936] work. Like most people will begin [18938] service businesses organically, right? [18940] Let's say you start, I don't know, you [18941] start like doing some design. You're a [18943] great designer. You've worked at a bunch [18944] of other agencies or something. You're [18945] like, "You know what? I don't get paid [18946] enough at this damn company. I'm going [18948] to branch out on my own and I'm going to [18949] become my own designer and make way more [18951] money." So, you're a specialist, right? [18953] Naturally, you're going to do the vast [18954] majority of the work yourself because [18955] that's sort of like your key value prop. [18957] It's like, "Hey, I'm amazing at this and [18959] I'm going to deal with you personally [18960] and I'm going to take care of it fast. [18961] I'm going to have low turnaround times, [18963] right?" This is sort of like the way [18964] that a freelancer um um starts becoming [18967] an agency and scales. So eventually you [18969] hit a point where you're juggling so [18970] much that you get diminishing returns on [18972] any additional time that you spend. So [18974] naturally, you know, you see a bunch of [18976] business gurus talking about this [18977] all the time. They're like, "Hire, hire, [18978] hire, delegate, delegate, delegate." [18980] You're like, "All right, cool. Well, why [18981] don't I delegate my work then? That's [18982] kind of the next step that I have to [18984] take in order to grow." Now, if you [18986] think about it, up until this point, the [18988] amount of money that a single specialist [18990] can handle in a company is, and this is [18992] a very high estimate here, but maybe [18995] it's $15,000 or $20,000 per month. Like, [18997] if you got your together, you [18998] already understand some of these [18999] systems. You lay out your work in like [19001] an efficient way. Maybe at the high end, [19003] you can make like 15 grand, 20 grand a [19005] month. And that's with like great [19006] products, great services. And that's [19008] also with you working yourself like a [19009] dog. This is the definition of working [19011] for yourself, being self-employed. you [19013] know, you're doing you're doing a ton [19015] arduously uh and you're you're working [19016] some incredible hours. So, you're at 15. [19018] Let's just say you're at $20,000 a month [19020] just for simplicity's purpose, okay? But [19022] then you hire somebody and maybe you [19023] hire like some designer or something [19025] like help you out with some work. Well, [19026] now what you've done is you've taken [19027] your revenue per staff member which was [19029] previously, you know, that $15 to [19030] $20,000 and you've divided it by two. [19033] Okay? So, now your RPS is half. Now, the [19036] reason why you hired is logically you [19038] were like, well, I can only do $15 or [19039] $20,000 of work myself. So maybe if I [19041] hire somebody else, I'll be able to do [19042] 30 or $40,000 of work, right? But the [19044] unfortunate thing is you are rarely able [19047] to scale to twice your size by hiring [19050] twice as many people. And I' I' I'd go [19052] as far as to say that's almost like a [19054] rule of service businesses. With every [19057] individual person you add, and I'm going [19059] to show you guys this in a second, but [19060] with every individual person you add, [19062] your revenue per staff member tends to [19063] go down. And there are a couple reasons [19065] for that. So, you know, think about it. [19067] You scale your agency and now you're [19068] making $60,000 a month, right? You got [19070] five hires, you got a couple designers, [19072] maybe you have some marketing guy to [19073] help you out. Maybe you have a [19074] salesperson and you know, maybe a few [19076] more people than you. And you might be [19078] making $60,000 a month. But just do the [19079] math. At $60,000 a month, if you divide [19081] that by the total number of people [19082] working in your company, well, now the [19084] revenue per staff member has gone down [19085] from uh you know what it was before, [19087] let's say 15 or 20k to $12,000, which is [19090] I mean that's almost like half the RPS, [19092] right? So the goal here is obviously to [19096] maximize our RPS. What's the solution to [19098] do it and how can you do so? And I have [19100] sort of like a two-pronged approach. The [19102] first is is systems and the second is [19104] software. And both systems and software [19106] laid out intelligently will allow you to [19107] increase your revenue ceiling. And then [19109] you as an individual before you get to [19111] the point where you're thinking of [19112] hiring, right? Instead of you hitting [19113] that camp of 15 20k a month, you're [19115] making good money, but you're being [19116] worked like a dog. Maybe you can make 30 [19118] or $40,000 a month. And then maybe [19120] instead of you being worked like a dog, [19121] you can work at half capacity. If I'm [19123] being honest, this is what the vast [19124] majority of people that are probably [19125] watching my content right now want. You [19127] want to have a super high income without [19130] necessarily having to compromise on your [19131] lifestyle too much. You But you also [19133] want to be good at what you do and you [19134] want to be able to provide like a a [19135] great service, right? You want to be [19137] able to provide security for your [19138] family. You want to be able to, I don't [19139] know, get the latest Apple Watch or [19140] whatever the hell. You don't necessarily [19142] want to do so strung out with 20 [19144] employees that you're managing, you [19145] know, under an incredible amount of [19146] stress. So, you know, the solarpreneur [19148] lifestyle for me is super high ROI [19151] personally. And you know, I I've [19152] implemented systems that I'm about to [19153] show you that have enabled me to do [19155] this. Okay. So, just before we proceed, [19157] let me just like kind of let me just [19158] show you what the I guess relationship [19160] looks like between the size of an agency [19162] and then your revenue per staff member [19164] generally speaking. So, let's pretend [19167] that you are starting at the start line [19168] here. Your revenue per staff member is [19170] pretty high. Okay, you are I don't know. [19173] Can I draw on this puppy? Oh, hell yeah, [19175] I can draw on this puppy. I don't like [19176] how this like automatically turns into a [19178] circle, though. [19180] All right, whatever. Um, anyway, so at [19182] the very top here, your revenue per [19183] staff member is pretty big, right? The [19185] second that you make that first hire, it [19187] starts plummeting. The reason why it [19189] starts plummeting is, well, now that you [19191] have another person, you can't contain [19193] all of the work in your head anymore. [19195] There's some information that you know [19197] that your staff member doesn't know. And [19198] so, you need to communicate that. Well, [19200] guess what? Any time spent communicating [19202] is time spent not doing the thing. And [19204] so, you start accumulating communication [19206] costs. That's number one. Number two, [19209] because of these communication costs and [19211] because of miscommunications, you [19213] substantially improve or increase rather [19216] uh the number of uh mistakes that you're [19218] making. Okay, you're no longer like the [19220] sole service professional. This person [19222] might not know everything that you know, [19223] right? So now you have some mistakes in [19225] place. In addition, one thing that I [19227] didn't mention here was you also have to [19229] do training, right? If you want this [19231] person to learn your process as well as [19233] you know it or be able to replicate it [19235] to some reasonable percentage maybe 80%. [19237] Well you need to train them and any time [19238] spent training them is time not spent [19240] doing the work right. So uh in addition [19242] to that you have like some group think [19244] in larger companies larger companies [19245] tend to be able to make less ideal [19247] decisions simply because of a human bias [19249] known as group think where we tend to [19250] agree with decisions for appearance more [19253] so than for uh you know correctness. Um [19256] and then you know there also some social [19257] issues. Sometimes Betty at the front [19259] desk hates Stephanie in the back or some [19261]  or Tom is angry at Jerry. Uh [19265] anyway, the point that I'm making is [19266] every single additional staff member you [19268] hire, you're going to have some issues, [19269] right? Um and your RPS is going to go [19271] down because less a smaller fraction of [19273] the total time of every single person [19275] and total mental effort is going to be [19276] spent actually delivering the service [19278] that provides you money. So I say that [19280] it sort of plateaus here. Well, that's [19282] just because you know the marginal [19283] additional person at the at an agency [19285] size of I don't know like 100 plus um [19287] you know the effect on your RPS becomes [19288] really really small but I don't know [19290] maybe it still goes down just a tiny [19291] bit. Um and you can imagine this sort of [19293] just proceeding for infinity. So I I [19296] show that to you just so you understand [19297] the factors at play here and so you [19299] understand why we should get away from [19301] hiring people being our first solution [19302] to you know constraint issues and we [19304] should focus instead on this four-step [19307] framework. Now, I'm going to start us [19309] off with step number one, which is [19310] productizing what you can and then [19313] noting what you can't. We're going to [19315] take the stuff that you can't. We're [19316] going to move it to the next step. I've [19318] added some revenue ceiling estimates [19320] here. These are totally rough. I mean, [19322] you know, these are just based off of my [19323] uh experience in agencies. I've worked [19325] with obviously several dozen well I [19327] guess now over a thousand agencies if [19328] you count all my communities. So, I I [19330] tend to know what the revenue ceilings [19331] of agencies are uh are sort of [19333] intuitively. Um, I'm saying 20 to [19335] $30,000 a month per person if you [19337] productize your operations effectively. [19339] And I also I'm going to provide a quick [19341] example of businesses that I think have [19342] done a really good job of this. Um, and [19344] the the business here that I'm going to [19346] talk about is Fat Joe. So these guys are [19347] like an SEO platform. They provide tons [19350] of services. I mean, if we just go down [19351] here, you guys will see link building, [19353] digital PR, SEO, content writing, design [19355] and video, blogger outreach, PR [19356] campaigns, niche ads. Um, I'm friends [19358] with the with the founder and [19360] essentially the reason I bring this up [19361] is because these guys have done a [19363] fantastic job at at at building a [19365] business around this principle that I'm [19367] about to talk about, which is [19368] productization. If you want, you know, [19371] uh, uh, link building services or SEO [19374] services from [19375] them, they know in advance exactly what [19379] margin, exactly what percentage they're [19381] going to make on this. They have [19382] checklists over checklists of every step [19385] involved in that link building process [19388] and they could basically at this point [19390] hand off that job to a monkey and it's [19392] so granular and so step by step that [19394] that monkey would still probably do a [19396] pretty reasonable job. I'm not I'm not [19398] saying their staff members are monkeys [19399] anything. I'm just saying that they're [19400] very very good at designing the [19402] infrastructure behind a productized [19404] business. So um productization if I just [19406] zoom out a little bit is just breaking [19408] down what your business does into [19409] concrete deliverables. Okay, [19411] deliverables are what the customer or [19412] client sees, not necessarily what goes [19414] into it, but just like the actual end [19415] result. Um, and then what you do is you [19417] take these deliverables, then you break [19419] those deliverables a little bit further [19420] down into the steps needed to produce [19422] them. And then once you have those [19423] steps, then you can break them further [19424] down into little checklist items. Once [19426] you have those checklist items, you can [19427] break them further down into inputs and [19428] outputs. So, here's a quick example of [19430] how you might productize a simple [19432] marketing services company. Okay? Let's [19434] say you run a run-of-the-mill marketing [19435] agency. you provide PDFs uh uh I don't [19438] know you provide like PPC campaigns uh [19440] you provide like marketing general like [19442] a local marketing services you provide [19444] some type of like SEO anyway uh what you [19447] do is you take those service and you [19448] break them down into specific [19449] deliverables what is it exactly that the [19451] customer is getting a certain number of [19452] links probably right just as the fat [19454] show example showed a minute ago you're [19456] probably giving them some reports you're [19458] probably giving them maybe like a [19459] website you're spinning up for them [19460] maybe you're giving them some PPC [19462] campaigns in their Google ads manager [19463] right um basically take all of the [19466] services that you're providing and then [19467] break them down into their specific [19469] deliverables. The products that the [19471] customer is basically buying from you. [19473] Now, once you have these deliverables, [19475] deconstruct each deliverable into its [19477] components. Quick example here is let's [19479] say PPC campaign is one of your [19480] deliverables. This is in one of your [19482] packages that you sell. Well, if you [19483] think about it logically, like what is a [19485] PPC campaign? A PPC campaign is where [19488] you take ad copy and then ad creative [19492] and then you upload it to I don't know [19494] Google Ads Manager or something like [19495] that. That's typically like like that's [19498] the component that goes into the service [19500] that you're providing, right? So if we [19501] just if we just try and get a microscope [19503] and we zoom way in on that product, what [19505] goes into it are let's say three ad [19507] creatives and three ad copy variants [19508] hypothetically, right? However many ad [19510] creatives or ad copy variants they are. [19512] What you do is you repeat this process [19513] until you have all of the parts of the [19515] entire service suite that you're [19517] providing. So if you think about it, you [19519] know, your ad copy, right, that [19521] deliverable or that component might have [19523] a couple components in and of itself. [19524] Maybe ad creative or sorry, ad copy is [19526] composed of a headline and then it's [19527] composed of some body text, right? Um, [19529] and each of these may have some [19530] character limits. So if you're doing [19532] Google, maybe it's different than [19533] Facebook, right? You have to get very [19535] granular here in order to productize [19536] properly. But the point is you are [19537] deconstructing what makes your business [19539] or your service tick. Once you've [19541] defined all of these explicitly, what [19543] you do is you create a step-by-step [19545] guide or an SOP, standard operating [19547] procedure on how you would define or how [19550] you would deliver this thing, assuming [19552] that you had no knowledge, assuming that [19553] you were basically just starting at the [19555] at the very start line. The reason why [19556] you do it this way, well, it's twofold. [19559] I'll I'll talk about one of the reasons [19560] why, which is because you can start [19562] automating it. Um, but the reason why [19563] you do it this way is by assuming zero [19565] knowledge, you start thinking and [19567] explicitly defining all the knowledge [19568] that goes into this thing. And the [19570] second that you know that you start you [19572] basically lay out all the resources that [19573] you need uh to automate uh you know to [19576] to delegate more effectively to [19578] basically turn this whole thing on [19579] autopilot. Now is there something that [19581] you can't productize? Cuz sometimes [19583] there are things that you can't [19584] productize. If something does require an [19586] incredible amount of knowhow if it's [19587] some deep business consultation or [19589] something like that if it requires a [19590] laborious number of personal hours. [19592] Sometimes you know you can't actually [19594] productize a service. And that's okay. [19596] All I want you to do is just make a note [19598] of what that is. then move on to the [19599] next step. So, if you're watching this [19602] right now, like I want you to get as [19603] much value out of what I'm talking about [19604] as humanly possible. So, if you run a [19607] business, I highly encourage you to [19608] actually pause the video and at least [19610] just give it 30 seconds to a minute of [19612] thought. Run through the services that [19613] you're providing in your company and [19615] just say, hm, okay, so I do provide [19617] three or four services. How do I break [19619] those down into deliverables? Well, I [19620] guess I provide, I don't know, SEO [19622] services. So, that includes link [19623] building and then that includes some [19625] marketing report and then that includes [19626] some website CRO. Well, what what what [19628] do each of those include? I just want [19630] you to do this thought experiment [19631] because it's going to make this next [19632] step a lot more valuable. If you don't [19634] yet run an agency or anything like that, [19635] that's okay. We can just move on right [19637] away. But just keep this in mind as you [19638] are designing your products or services. [19639] It's going to make the rest of your life [19641] really easy. Like I wish I did this with [19642] my first couple agencies. I would have [19644] crushed it and I would had to spend way [19646] less time and energy in it. So step two [19649] is we have all of those productizable, [19651] you know, steps, right? And then we have [19652] a couple things that we can't. Step two [19654] is well now we can automate all of those [19656] things that have those step-by-step [19657] guides and that are very clearly [19659] definable um and that you can do with [19661] zero knowledge and the things that we [19662] can't we're going to optimize. [19664] Productization by itself is already [19666] massive leverage. But if you automate [19668] steps within the product and you don't [19670] have to automate all of it you can just [19671] automate specific steps right like in [19673] our ad copy example which I'm going to [19675] talk about. Maybe you can't automate the [19676] creative because your creative is just [19678] it's just a little too high quality for [19679] machines right now. But you can [19680] certainly automate your ad copy, right? [19682] The only reason why you know that you [19683] can do that is because you've since [19685] broken everything down into very [19686] specific deliverables. Um but now you [19688] know if you think about it if ad copy is [19690] half the work, ad creatives half the [19691] work, you've just automated half of that [19692] project, right? You've essentially [19694] doubled the leverage. You've doubled the [19696] revenue per employee or revenue per [19698] staff member by automating 50% of that [19701] deliverable. So I talk here about a [19703] revenue ceiling. At this point I'm [19705] saying it's about $50 to $100,000 per [19706] month per person. A good example of this [19708] is design joy. Now, Design Joy doesn't [19710] just automate everything. I mean, this [19712] is an actual designer, but the way that [19714] he automates things, and I think Brett [19716] makes like 100 to 140K a month. So, I [19718] mean, he's a total solarreneur as well. [19720] The way that he does things is his [19722] automation is templates. So, he has a [19724] massive library of I imagine hundreds of [19727] highquality templates of every [19730] conceivable variation. And when a client [19732] makes a request for a new design, he [19734] thinks to himself, hm, what template is [19736] closest to what the client wants? you [19738] know, I've already spent all the time [19740] and effort building these templates. [19741] Their design is really clean. The [19743] spacing is perfect. I don't have to like [19744] reinvent the freaking wheel here. So, [19745] let me just pick something that's really [19747] close. Then he picks a really, really [19749] high quality template. And the thing [19750] about this templating feature is the [19752] template is 80% of the way there, right? [19754] So, that means that the distance that [19755] Brett has to travel between 80% and [19758] 100%, that's just 20%. If you think [19760] about it, 100% divided by 20%, that's 5x [19763] leverage. So he just increased his [19765] revenue or his uh his revenue per staff [19767] or his leverage by five times by using [19769] templates. So you don't necessarily have [19771] to automate things in the traditional [19772] term. I know a lot of my viewers are [19774] probably automation agencies or [19775] automation freelancers. But you know [19776] understanding the principles here which [19778] is just leverage you know goes a long [19780] way. So anyh who, uh, this is Brett's [19782] business. As I mentioned, he does a ton [19783] of money, and the guy's pretty funny to [19785] follow on Twitter, although I think [19786] recently he's gotten into some spats, [19787] which I may have had to temporarily mute [19789] him for, but uh, you can make a fair [19791] amount of money, and your revenue [19792] sinking can be pretty high if you follow [19793] what I'm about to show you. So, here's [19796] another example of how to automate the [19797] productized marketing services that we [19799] just generated in the previous step. [19801] Number one is we're going to take all [19803] the step-by-step guides you created [19804] before. And the next thing is we're just [19806] going to ask ourselves, can a machine do [19808] 80% or more of this if properly [19811] instructed? My rule is 80% or more. I [19813] never try to do 100% because [19815] realistically machines can very rarely [19817] do 100% of your job right now. They're [19819] quickly getting to the point where they [19820] can do 100% of small little things and [19822] eventually we'll piece those small [19823] little things together and get the big [19825] thing. But right now, you know, 80% is [19827] sufficient for me and it's personally [19828] what I use to make, you know, over 100K [19830] per month. So, if it's good enough to [19831] make 100K per month, you want to make [19832] 100K per month, then odds are it's [19834] probably good enough for you. Now, if [19836] you're like most digital businesses, the [19837] answer is yes. You can do a ton at that [19839] 80% mark. Um, using our ad example, you [19841] can totally automate the production of [19843] copy. You can totally automate the [19844] production of headlines, of body text. [19847] You can automate the production of [19848] creatives at this point super easily. [19850] Whether it's through templating features [19852] or whether it's through uh I don't know, [19854] like you you you have MidJourney or [19856] something spit out some beautiful [19857] looking sexy cool gradient that's [19859] branded, right? or maybe some assets. [19861] Maybe you create your own uh uh vectors [19863] or SVGs or something. The technology [19865] exists to do literally everything that [19866] I'm talking about here. There might be [19868] somebody that's watching this video [19869] right now that runs a marketing agency [19871] that thinks, "Wait a second. I could [19872] automate literally 100% of this and then [19874] takes this and then uses it to build a [19876] productized service and then starts [19877] making a million dollars a month within [19878] a few months." Like the technology here [19880] is entirely is entirely at the point [19882] where you can automate the vast majority [19883] of it. Now, it's also possible that, you [19886] know, maybe you run a different service [19887] or something that's just a little bit [19888] more involved. Maybe because you're [19890] doing link building. Uh part of link [19892] building involves the creation of a [19894] bunch of personal connections and maybe [19895] you need to have somebody managing your [19897] inbox or something. And even if you use [19898] AI to draft up the responses, there [19900] still technically needs to be a person [19902] there or whatever. That's fine. And [19903] that's why we want 80% rather than 100%. [19905] Maybe instead of doing the whole thing, [19907] they just pre-draft your messaging. Or [19909] maybe they do like uh like like like an [19911] like like an RD, like a rough draft of [19913] your creative. Or maybe they send the [19916] first two or three emails in a sequence [19918] to your warm network every time you get [19919] a new link building opportunity that you [19921] want to, you know, rank somebody on. All [19924] of this stuff is still leverage. The [19925] point that I'm making is just ask [19926] yourself, how much time can I save if I [19929] construct the service a little bit [19930] differently than what I'm doing right [19932] now? you know, if I look at all of these [19933] services with a fine-tuned comb, if I [19936] peer through every single one, how much [19938] further and how much more efficiently [19939] can I get? And that's really what this [19941] step is for. Um, and if a step is not [19943] automatable, then just ask yourself how [19945] you might optimize it. Like for [19946] instance, you know, I provide [19947] consultations and my consultations can [19949] be anywhere from like 15 minutes all the [19951] way up to an hour or so. Now, I have [19954] been trying to reconstruct my [19955] consultations to take me less time and [19957] to be a lot more amendable for my [19959] customers and my clients because, you [19960] know, my calendar's starting to fill up. [19962] Um, things are getting a little bit [19963] tougher, I think, on on both ends. So, [19965] I've started to ask myself, hm, is there [19966] a way that I could reconstruct my [19968] consultations? The other day, I found a [19971] guy called Kristoff Huerman, I don't [19975] know how to say his name, who has a [19976] completely new take on consultations. [19978] And I think this is a very good way for [19980] me to illustrate how even if you can't [19981] fully automate something, you can [19984] streamline the hell out of it. What this [19986] guy does is, you know, he's some [19987] advanced tax professional who I found [19989] when I was looking for some tax [19990] consulting on my own. What he does is he [19994] gives people consultations through voice [19997] messages. What you do is you book a [20000] consultation via one of these purchase [20002] buttons. Then you send this guy Kristoff [20004] a message on Telegram and then you send [20007] him all of your questions in [20009] writing. You can ask questions about all [20012] of these. And the idea is, you know, if [20015] you really need help but don't have the [20016] financial resources to book a [20017] consultation for €2,000 or something, [20020] you can get 80% of the value there with [20023] his voice message package where he just [20025] reads your question and then answers it [20026] for you via some sort of voicemail. [20030] So, you know, like this is a great [20032] example of a semi-productized service. [20035] Obviously, it still takes Kristoff's [20036] time to like take the phone and then and [20038] say it. But think about all the problems [20039] that he eliminates here. He completely [20041] eliminates uh time synchronicity, like [20043] having to be in the same in the same at [20045] the same time, calling a person, both of [20047] you guys having to be there. I I mean, [20049] he could go downstairs and walk to his [20051] car while answering a voice message and [20053] make €500, right? Uh in I don't know how [20055] many minutes. Probably 5 or 10 minutes. [20057] The leverage on this is crazy. Sure, [20059] this is still requiring his time, but [20060] how much more time does it require to [20063] actually sit down and have that full [20064] hourlong consultation versus what he's [20065] doing here? Now, I should note that he [20067] also provides full hourlong [20068] consultations, but you know, these voice [20070] message packages with, I don't know, [20072] extended voice message package for 800 [20073] bucks, uh, ultimate voice message [20075] package for $9.97 and so on and so [20078] forth. These are novel takes on [20080] something that people, a lot of people [20082] just think that you cannot productize. [20083] Well, turns out you can. Um, so I want [20086] you to take an approach similar to what [20087] Kristoph Huran did here where he asked [20089] himself, hm, you know, I'm suffering [20091] from these problems. This service that [20093] I'm providing makes me money but isn't [20094] really scalable. How could I improve my [20096] revenue per staff member if I'm doing [20097] this solo, right? What if I do [20099] messengers? You know, maybe then I can [20101] 5x my leverage and then I can make five [20103] times more. And instead of me being [20104] stuck at 20 to 30k a month, now I can go [20107] between 50 to 100K per month. All right. [20109] The third step that I'm going to talk [20110] about here is building automated [20111] distribution systems. And to me, this is [20113] a step that I'm currently on. You know, [20115] I've followed all of these all of these [20116] steps myself, right? I productized, then [20118] I automated. Now I'm sort of building [20120] automated distribution tests myself. And [20121] then eventually, I'll do that fourth one [20122] as well. Um, but for me, this is this is [20125] hyper relevant because this is what I'm [20126] doing. And it's also one of the highest [20128] leverage things that you can do. Um, [20130] just look at the revenue multiples here, [20132] right? I think a single person can [20133] easily get to 100 to 250K per month. A [20135] good example of the person that's doing [20137] this right now is Justin Welsh. He is [20139] leveraging the hell out of automated [20141] distribution systems. If you don't know [20142] what that means, I'll cover it in a sec. [20144] Um, in order to sell, I think he runs [20146] like a like a $2 million maybe a three [20148] or $4 million a year business now. Um, [20150] completely solo, so I think it's [20151] somewhere around the 250k month mark. [20153] Another example is obviously me um with [20155] my [20156] automated two of me on the screen [20158] simultaneously. That's a little too [20160] much. Um, another good example, this is [20162] me with like my automated distribution [20163] through my YouTube and so on and so [20165] forth. So, the value in automated [20167] distribution systems is like if you [20169] don't know what distribution is, just [20170] take a step back. Distribution is your [20171] ability to put your product or service [20172] in front of other people. So in a modern [20174] digital business, if you want to scale [20175] your distribution without necessarily [20178] adding staff, that means one of two [20180] things. The first is outreach systems. [20182] So like automated cold outreach where [20184] you distribute to hundreds of thousands [20186] of people per day with seemingly [20189] customized meth messages without having [20191] to individually go through look the [20192] person up, send them an email, right? [20195] Um, the value in this is whether you [20197] connect with a 100 or 10,000 people, [20199] your time investment is going to be the [20200] same. This is sort of option one, and [20202] this is something I talk about a lot on [20203] my channel. But if you think about it, a [20205] few months ago when I started my YouTube [20206] in earnest, I started posting all the [20208] time. What I was really doing was I was [20209] doing number two, which is where I was [20211] creating content like YouTube videos, [20214] SEO articles, and that sort of thing [20216] that do the same thing that Cold [20218] Outreach does. It's just they allow me [20220] to do it completely on autopilot, which [20222] in my opinion is a little bit higher [20223] leverage now. So you kind of have two [20226] choices here. You can do content systems [20227] or you could do outreach. The point is [20228] though, any automated distribution [20230] system has value because the amount of [20233] time it takes to connect to one person [20234] or a thousand people is approximately [20236] the same. Like if I made this video and [20238] I've just been shouting into the void [20240] for the last half an hour or something [20241] like that and a single person saw it, it [20243] would not take me any additional time if [20245] instead I had gone viral and 10 million [20247] people had saw it. Right? My my my [20249] inputs are the same. the outputs are [20251] completely variable and they can scale [20253] infinitely until all 8 billion people um [20256] you know stare me deep in the eyes and [20257] listen to me. Yeah. So yeah, the point [20260] that I'm making is if you really want to [20262] grow substantially bigger than probably [20265] what most people would consider a high [20267] income, which is somewhere between like [20268] 30 to maybe $50,000 a month. If you want [20270] to grow even bigger than that, you [20271] basically have to make use of automated [20273] distribution systems of some kind. Um [20275] those automated distribution systems [20277] might also be stuff like uh like like [20279] ads, right? Right? I mean, I talk here [20280] about content, but you can also think of [20282] this like advertising. Uh, the downside [20284] of that is although it is an automated [20285] distribution system, you obviously have [20287] to make some arbitrage or margin on the [20289] on the people that click through your ad [20290] and then convert to your offer versus [20291] the amount of money you're paying per [20292] click. But, you know, you can think of [20294] it that way as well. The same sort of [20296] idea with cold outreach, right? You are [20298] paying a certain amount for the [20299] mailboxes, you're paying a certain [20300] amount for the leads. The idea is, you [20301] know, arbitrageing. Uh, you know, [20303] organic content is a little bit [20304] different because a lot of the time your [20306] investment is not necessarily money. [20307] It's more so just the time uh and the [20309] knowhow. Um and you know that's that's [20311] what I've chosen to do here. But you can [20313] easily scale to $100,000 to $250,000 per [20316] month per person. And I firmly believe [20317] that like the next soloreneur wave here [20320] is or the next wave really in business. [20322] You know, we had indie hacking for a [20323] little while. We had like build in [20325] public is going to be a soloreneur wave [20326] of people making over six figure monthly [20328] revenues um through approaches like what [20330] I've talked about here. It's going to be [20331] people that have productized their [20332] businesses like I have. people that have [20334] automated what they can and optimized [20336] what they haven't been able to and then [20338] people that build automated distribution [20339] systems that sort of just sell for them, [20341] you know, while they sleep. Like I will [20343] wake up a lot of the time to like Stripe [20345] notifications saying people have [20346] purchased my product or service. Um [20348] you're very unlikely to get that without [20350] some sort of automated outreach system [20352] or some sort of content or advertising [20354] funnel. All right. So, this next step [20356] here, I'm keeping purposefully vague [20359] because I have yet to get there and I [20360] don't consult with many people at this [20362] level myself, but it's purposefully [20364] picking a scalable business model. I [20366] know that you're probably thinking, [20367] Nick, why the hell are you putting this [20368] at the end as opposed to at the [20370] beginning? And the reason why is because [20372] don't put the cart before the horse, if [20373] that makes sense. Don't, you know, [20375] forget what you're doing this for. Odds [20377] are if you want to run a business and [20379] you're watching my content to help you [20380] do so, you're doing it because you don't [20382] want to build the next Uber or [20383] necessarily fire up the next rocket ship [20386] SpaceX competitor to get to Uranus or [20388] something. I could have picked Mars. I [20390] picked Uranus. Uh you know, you just you [20392] again, you want a sufficient amount of [20394] security. You want to be able to uh you [20396] know, enjoy various luxuries of life. [20398] You want not to have to worry about like [20400] uh various inflation numbers or world [20401] events or anything like that. And so if [20403] you if you started by picking a scalable [20405] business model, the likelihood that you [20407] actually hit that level of wealth is a [20410] lot lower than if you pick something [20412] like a service agency. Um simply because [20415] there's a trade-off all the time. And I [20417] think this is a good opportunity for me [20418] to whip open the whimsical. The [20421] trade-off is [20422] basically, you know, if this is our [20425] little thing, um, [20428] scalability and short-term revenue are [20432] both at odds. So, if you pick a business [20436] model that allows you to scale very big, [20440] it will likely be more difficult for you [20442] to make short-term revenue as a result. [20445] Let me reconstruct this and make this [20447] sideways instead. [20449] And then let's put short-term revenue [20451] over here. And then scalability over [20453] here. And let's just look at some [20455] candidate business models. Okay. Uh one [20457] candidate business model um that [20459] maximizes your short-term revenue might [20460] be what we're doing here like [20462] freelancing. You know, agencies is [20464] another one, right? Probably somewhere [20466] right around here. Um some type of like [20468] B2B managed [20470] service. Uh you know, as as we scale, [20473] obviously things change a little bit. [20475] For B2B managed service, maybe go to [20477] like B2B hightouch SAS. [20479] Maybe after B2B hight touch SAS we go [20481] like low touch [20483] SAS and then maybe you know all the way [20486] on the right hand side we have some sort [20487] of like actually I think low touch SAS [20489] and info product are probably pretty [20491] similar maybe info products actually a [20493] little bit um lower than than low touch [20495] SAS. So this is where like your I don't [20498] know and then uh finally actually let me [20500] do one more uh we'll do sort of like PAS [20502] that stands for platform as a service. [20504] This is like basically Uber and whatnot. [20507] So, you know, if I just move this around [20509] so that it's a little bit prettier, you [20511] can see on the left hand side here, if [20513] all you want to do is you want to make [20514] money today and you want to make $10,000 [20516] as quickly as humanly possible. You [20518] know, starting with the next Uber is not [20521] going to help you accomplish that [20522] mission. Why? Because if you want to [20524] build a platform, obviously you need to [20526] invest a ton of time, energy, and [20527] infrastructure. You got to hire [20528] engineers or you have to be a fantastic [20529] engineer. You have to build something uh [20531] of worth. You have to build distribution [20533] channels. You have to have distribution [20534] channels. you know, you're not making a [20535] ton of money per deal. I mean, even with [20537] like Uber, what what are the margins on [20539] a single deal? If I try and take an Uber [20541] to downtown, how much is Uber really [20542] profiting from that? Probably a few [20543] bucks, right? Versus, let's say, a [20545] freelance deal where you can sign like a [20548] three, four, $5,000 deal, like literally [20550] in your first day [20551] freelancing, you know, if you if you [20553] play your cards right. So, same thing [20555] with agencies, right? One of the reasons [20557] why I came into freelancing in agencies [20558] is because they are the fastest way to [20560] get short-term revenue. And then, if you [20562] think about it logically, right? If I [20564] were to take a freelancing or agency [20566] outfit and then if I were to productize [20568] it, automate it, optimize it, automate [20570] the distribution of it, I basically now [20572] have like leveraged agency and a [20574] leveraged agency I would wager, you [20577] know, has all of the benefits of the [20578] short-term revenue um on the left hand [20580] side, but also a lot of the benefits of [20582] the scalability of like the hight touch [20584] SAS, info products, low touch SAS, and [20585] platforms as a service. So, you know, as [20588] you go to the right of this graph, you [20590] make less money up front and then you [20591] make more money um total. Now, the [20594] reason why that's important is because, [20595] you know, you kind of have to know what [20596] you want if you wanted to start that [20598] rocket company or something like that. [20600] Well, you know, you sort of have to [20602] accept the fact that you're probably not [20603] going to be making a lot of money in the [20604] short term. Um, so I guess this is my [20606] longass justification for why I put this [20608] thing last. I didn't really need to do [20610] that, but uh whatever. So, if you've [20611] exhausted everything in this list and [20612] you're still not happy with your revenue [20614] ceiling, let's say you've been doing [20615] this uh for a few years and you're [20616] making like $100,000 a month as a [20618] solarreneur, similar level to me, and [20620] you're like, "Shit, you know, I'm still [20621] not really happy with how much money I'm [20622] making." There are certain business [20624] models that inherently let you scale [20626] further. The con is that they take way [20629] more in the way of resources set up, and [20631] if you miscalibrate, you can waste it [20632] all. How many horror stories have you [20635] heard of the next big thing that's [20637] completely tanked and lost investors? [20640] hundreds of millions of dollars. They're [20642] the Silicon Valley [20644] graveyard. That's the trade-off, right? [20646] Scalability versus short-term revenue. [20647] So, I have some examples here of [20649] scalable things. Information products [20651] tend to be scalable. Um, software [20653] products tend to be scalable. Affiliate [20655] advertising is one thing that I didn't [20656] really touch on that tends to be [20657] scalable as well, although you do have [20659] to know what you're doing and you do [20660] have to be open to some level of risk. [20662] Typically, you know, if you're doing [20664] affiliate, you're either organically [20665] ranking pages on Google or some other [20667] search engine and then having some [20669] percentage of the revenue that you [20670] generate per lead or you are creating [20673] some type of paid advertising that [20674] refers somebody to a funnel um or maybe [20677] you make the funnel yourself and then [20678] you know your your whole gambit is okay [20680] like is the amount of money I spent to [20682] acquire one new customer times whatever [20685] the small percentages that I get is that [20687] less than the amount of money that I [20689] made off of that deal essentially. So, [20692] you know, these are these are [20693] purposefully scalable business models [20695] that, you know, people pick when like [20696] they're trying to, I don't know, disrupt [20698] an industry or whatnot. Um, but I put [20700] these here at the end just because that [20701] is sort of the next step. If you get to [20702] maybe $250,000 a month per person, [20704] $300,000 a month per person, and you [20706] start plateauing and you're like, well, [20707]  you know, I need to hire. If you [20709] are dead set on being a soloreneur, you [20711] can absolutely uh start a business [20713] either solo or with a founder, you know, [20715] that makes substantially more money than [20717] that. I forget exactly how much money. I [20719] think it was Tinder, you know, that uh [20721] the dating app that had like nine you uh [20723] software engineers or something and I [20724] think they had like over a billion [20725] dollar valuation. Like if you think [20726] about the leverage on each of those [20728] people, that's a ton, right? Um and [20730] that's really what I'm getting at here [20731] with these scalable business models. So [20733] in short, we have four main concepts [20735] that I want you guys to think deeply [20737] about. We have the revenue selling, but [20739] then we have thinking about your [20740] business in terms of economic [20741] productivity. You have productizing, you [20743] have automating, and then you have [20745] distributing. Um, and at the end there, [20747] you know, assuming that you are unhappy [20749] with being able to make $250,000 per [20752] month per person with extraordinarily [20753] high margins, you lunatic, then you also [20755] have the ability to pivot and pick a [20757] more scalable business model. And [20758] there's nothing necessarily wrong with [20759] that. But if you want to do that, I'd [20761] highly encourage you guys to at least [20762] get your bag first. Congratulations. You [20764] just completed the most comprehensive AI [20766] agency business masterass on the [20768] internet. He went from somebody that [20770] maybe had no idea how to start an A [20772] automation business to somebody who now [20773] has the complete and utter technical [20775] roadmap from the technical foundations [20777] to six figure scaling strategies. That [20779] is no small feat. At this point, you are [20781] no longer just a beginner dreaming about [20783] starting an AI venture. You are actually [20784] equipped with everything that you guys [20786] need to build a thriving automation [20787] business. Remember, you guys can [20789] reference any part of this master class [20790] just using those timestamps below. So, [20792] bookmark the video, come back anytime [20794] you want to brush up on these skills. [20796] And as you guys have probably learned [20797] over the last few hours, ultimately at [20798] the end of the day, all of this [20800] knowledge is worthless without action to [20802] go alongside it. The gap between people [20804] who understand a automation and then [20805] people who actually make money with the [20807] stuff isn't actually technical [20808] knowledge, right? It's execution. It's [20811] uh accountability. It's having the right [20812] support system. And that's exactly where [20814] Maker School comes in. I purposefully [20816] built this program to fill in the gaps [20818] that simply watching YouTube videos does [20820] not provide you. Mika School, just for [20821] reference, is my 90-day accountability [20823] program geared towards getting you your [20825] very first AI automation customer [20826] guaranteed or your money back. It [20828] includes copy and paste templates for [20830] outreach for sales and proposals and all [20833] of the stuff that's helping people close [20834] deals right now. It also includes a [20836] library of proven automation blueprints [20838] in both make and nad that you guys can [20839] use immediately, including uh niche [20841] packs, which is a new offering of [20842] automations that are purpose-built for [20844] specific high-paying niches that you [20846] guys can literally just wrangle up and [20847] start selling on day one. It also [20848] includes live coaching calls where I [20850] answer your guys' specific questions. [20851] And plus, I'm there every day. This [20852] isn't a community where I pass you off [20854] to some manager and then disappear. I'm [20856] legitimately the most active member of [20857] Maker School. I show up every single day [20859] and I respond to the vast majority of [20860] posts. The biggest challenge with AI [20862] automation isn't learning what you guys [20864] have to do. You guys already know that. [20865] Just knowing what to prioritize every [20867] day and then staying consistent with [20868] your actions. So instead of wondering [20870] what should I work on today or am I [20871] focusing on the right things, with Maker [20873] School, you just go in every single day [20874] and know exactly what to focus on. [20876] There's no decision fatigue. There's no [20877] overthinking, no getting stuck, just a [20879] big list of clear daily actions and then [20881] a bunch of people that are doing the [20882] same thing as you and that can support [20883] you and help you towards the ends that [20885] you want to achieve. Ultimately, the [20886] results speak for themselves. Lots of [20888] members come in and legitimately land [20889] their first few client within a few [20890] hours of starting lead generation. It's [20892] insane. Many have also scaled to $10,000 [20895] per month in revenue using the exact [20896] systems from this master class. So, [20898] yeah, this is your moment. You guys have [20899] the knowledge. You guys have the road [20900] map. Now, you just need to take action. [20902] Whether or not you're going to come into [20903] Maker School, although I highly [20904] recommend it, join tens of thousands of [20906] other people that have started an AI [20908] automation business and turned all the [20910] skills that you know now into a [20911] life-changing income course. Thank you [20913] very much for completing this master [20914] class. Do me a solid, hit the like [20916] button, subscribe to the channel, do all [20918] that fun YouTube stuff that makes my [20919] algorithm love me, and I'll catch you on [20921] the next video. See you.

Video: https://www.youtube.com/watch?v=Y54kp53gi_M
Title: What AI Gurus DON’T Tell You About Selling AI
[0] big problem in the AI automation [1] industry right now is a lot of people [2] are selling it as free and or easy when [4] it's really anything but that. So, what [6] I want to do in this video is I want to [7] cover what AI gurus aren't telling you, [9] but how to sell AI and then hopefully I [11] want to give you guys an alternative [12] which is a sustainable AI and automation [14] business model that a lot of people, [15] myself included, have used to scale up [17] to $72,000 a month or beyond. Okay, so [20] we're going to start by covering six [21] main problems that I'm seeing. Then [22] after that, I'm going to show you guys [23] the business model that I'm talking [24] about. And before anybody gets on my ass [26] about being a guru myself. I understand [28] that the bigger you are on YouTube, the [29] more people tend to accuse you of this [31] stuff, but up until very recently, I had [32] significantly fewer subscribers. I [34] understand why somebody would want to [35] lock me in with the rest of them. But [37] this is not a sell chat GBT for $500 a [39] day sort of BS business model. You can [41] make out that decision for yourself. [42] Just know that there isn't just one path [44] to success. There are many. Okay. So, [45] first of all, anytime you see a make [47] $500 a day with ChatGBT post or [49] something like that, run away. $500 a [51] day with Chat GBT is targeting a [53] vulnerable audience of people that think [54] ChatGBT is magic that prints money. They [56] usually don't understand like market [58] economics or anything. That's what we're [59] going to be talking about in this video. [60] So, that's one major issue that I've [62] seen. In reality, mass adoption of any [65] tactical model leads to quick market [68] saturation. Now, in order for you to [69] understand why this is so important, [72] tactics are not strategy. A lot of [75] people try and bundle them together, but [77] they're not. Okay? Tactics are the lower [80] level things that you do on a day-to-day [82] business. That is like the exact wording [84] of your pay-per-click ads. That is stuff [86] like the exact wording of your scale [88] script. That is stuff like the filters [90] you use on Apollo and so on and so on [93] and so forth. Now, these things work, [95] but they work for a ton. And when you [97] have this perfect formula of tactics, [99] you can make a lot of money. What ends [101] up happening though is other people tend [102] to determine what these tactics are and [104] then everybody starts doing them. And [106] the second that everybody starts doing [107] them, the tactics themselves lose a lot [109] of value. And so if all you do is you [111] focus on tactics like the AI gurus will [113] try and get you to do, then the second [116] that the business model changes due to [117] saturation, oh, and it does. Every [119] business model on planet Earth has [120] changed due to saturation, you're [121] screwed. Now, contrast that with [123] learning strategy. When you learn [125] strategy, what you're learning is you're [126] learning the psychological basis behind [129] why paperclick ads work in the first [131] place. You're learning things like [133] market economics to be able to say [135] tactics are not equivalent to strategy. [137] You're learning various uh consumer [139] behaviors that drive why you can find [141] people through Apollo and Apify and [144] LinkedIn sales nav and stuff like that. [146] Now these are human factors. These do [149] not change with markets. And so if you [152] understand strategy instead of tactics, [154] then when the tactics are inevitably BS [156] and they end up being saturated, what [158] you can do is you can just create new [160] tactics. Okay? You can create a new [162] pay-per-click ad script because you [163] understand human psychology. You can [165] create a new, I don't know, staffing [167] model because you understand market [168] economics. You can create a new sales [171] script because you understand consumer [172] behavior. Okay? So, gurus will exploit [176] these technical buzzwords all about [178] tactics without actual business [180] implementation knowledge, which leads to [181] these tactical clones. And tactical [183] clones are by nature ephemeral. They're [185] really short-lived. They're really [186] transient. they only actually survive [188] for maybe a couple of weeks or months at [190] most. So, while it's entirely possible [192] that you could have made $500 a day with [194] Chat GBT at some point in time, I [196] guarantee you that that opportunity was [198] probably open for like a brief couple of [200] days, weeks, or months, this sort of [201] thing is not longasting. Don't copy [203] tactics. If you're going to copy [204] something, copy strategy. Another big [206] issue is I'm seeing a lot of these [207] psychological hacks that are used like [209] FOMO, fear of missing out, artificial [211] scarcity, and misleading information. If [213] somebody sells you something that's too [214] good to be true, it probably is too good [216] to be true. That's why it's called too [217] good to be true. So, if you find like [218] the hairs on the back of your neck stand [220] up when you hear this business model [221] that people are pitching you, you should [223] be at least a little bit skeptical, [224] maybe a little bit more wary of whether [226] or not they're selling strategy or [227] tactics. And obviously, you should [228] prioritize the former. Okay? And what [230] ends up happening is anytime you're [231] selling tactics, thousands of people try [233] the easy side hustle. The second that [235] people try the easy side hustle, it's no [236] longer easy. Okay? This leads to market [238] saturation. This leads to consumers [240] being numb. And then one big thing [242] that's specific to an automation whereas [244] I think the rest of the stuff is more [245] just how gurus work in general is um in [247] a automation they try and make it seem [249] like the tool that you're using is the [250] important thing when it's not the [252] important thing. The thing that's [252] important are the business outcomes that [254] you deliver and how those business [255] outcomes change with tools. So tools are [258] important but tools are just a means to [260] an end. Tools are not the actual end [262] themselves. Focus on people that avoid [264] that sort of talk. Obviously I think [266] that I focus more on strategy over [268] tactics. So, not to toot my own horn [269] here, but there are a lot of other [270] people that do. I think you can pretty [272] easily and quickly spot and call out BS [274] when you see it. So, here's sort of like [276] what happens. A guru, usually somebody [278] with like many millions of subscribers, [280] will jump on some sort of AI trend. Then [282] they'll make some sort of course. [283] They'll promote it as super easy money. [285] Thousands of people will buy the same [286] course. Everybody will try the exact [288] same tactics, ultimately fail. The [289] market quickly saturates, and then it's [291] a race to the bottom. What that means is [293] that costs from the tactic might start [295] at $1,000 a pop and then two weeks later [298] be $500 a pop and then you won't be able [300] to sell the same thing for more than [301] $100 a pop simply because of those [303] aforementioned market economics supply [305] and demand. All right. Now, saturation [307] of tactics happens very very quickly. [308] So, if you don't have any strategic [310] knowledge, then you won't necessarily be [312] able to maintain a business model for [313] more than a little while. Early adopters [315] of course are going to profit briefly [317] before thousands of copycats arrive. And [318] thousands of copycats are arriving as we [320] speak in AI and automation. But these [322] side hustles quickly become [323] oversaturated because you know if it [325] actually works and in our case AI and [326] automation and the specific tactics a [328] lot of people are talking about they do [329] work. So basically you need to look for [330] opportunities where the person that is [332] selling you the idea or the information [334] or the knowledge when their incentives [336] are aligned with yours, not ones where [337] you're fundamentally misaligned. Like if [339] the course seller profits regardless of [341] whether you succeed, then obviously [342] speaking their incentives are not going [344] to be in making you succeed. that's not [346] going to be their first kind of primary [347] directive. The first primary directive [349] is going to be making the business model [350] seem as easy as humanly possible so that [352] they can flood as many people in there. [354] Incentives are a really big important [355] mental model and that's a good example [356] of strategy as opposed to tactics. So if [358] you understand incentives, you should [360] understand that core sellers don't [361] really have an incentive to help you. [363] They only have an incentive to help [364] themselves. Anyway, by the time [366] something's widely promoted, the window [367] is already closed. Some economics of AI [369] side hustles. The cost of market entry [371] decreases weekly as tools become more [373] accessible and easier to use. So if this [375] is like the cost of something and I'm [376] just going to draw a little graph here, [377] then this is time. You know, every week [380] there are third parties that make [382] getting into a business model easier and [384] easier and easier, right? This may seem [386] great and fantastic. And I think in many [388] cases it is if you have strong strategic [389] knowledge, but if you're like a tactical [391] clone, well, you know that every time [392] that the cost decreases by 10%, that [394] just means that there's on the order of [395] at least 10% more people that are coming [397] into the business, right? Which actually [398] means that your competition has just [400] gone up by 10%. Which means that [401] assuming a fixed market size, which [402] isn't always accurate, the difficulty [404] with which you have to get clients goes [405] up by 10%. Meaning this is more or less [407] completely and utterly pointless, right? [410] So profits tend to follow a predictable [412] boom bus cycle. They last two to four [413] months until a new tactic is born. On [416] the upswing, this is uh the person that [418] you know has used the tactic themselves [419] and they've made a ton of money. And [421] then if this is like saturation, bunch [423] of people obviously jump on the business [425] model alongside them. Then there's some [426] sort of peak. This is almost like peak [428] oil. If you guys know about that concept [430] or something, then basically everything [431] after that goes down. It's very [433] difficult to make any sort of like [435] return on investment after this kind of [437] midpoint period. But then you know what [439] happens then? The person that's in [440] charge of building this sort of stuff, [442] they tend to know the strategy. That's [444] how they invented the tactic to begin [445] with. So they do they invent some other [447] tactic and then they just profit over [449] and over and over and over again. But [450] think about what happens to all these [452] people. Okay? What happens to all the [453] people that join after you know that [455] market opportunity goes bust? It's not [457] necessarily that they're not going to [458] profit and make money, right? I mean, [460] like if this is, I don't know, MRR or [461] something like that on average, and this [464] is, I don't know, $10,000, a lot of [465] people can make 10 grand, 9 grand, 8 [467] grand, 7 grand, 6 grand, whatever. But [469] the size of the perceived market [470] opportunity, and the money they're going [471] to make is like way up here, right? So, [473] there ends up being like very big [474] discord between expectations and [475] reality. And that ultimately just [477] results in a lot of anguish, results in [479] a lot of suffering, and then also can [480] result in like some destroyed lives [482] where people invest money in things that [483] don't necessarily deliver that return. [485] So this is sort of like the trend. You [486] know, everybody's into Ray Dallio's [488] cycles. So maybe we could talk about [489] cycles. A bunch of other words for this, [491] but new AI model or method or tool or or [495] implementation detail will emerge. Early [497] adopters will make good money. They'll [498] have a bunch of success stories. Some of [500] these will be fake. Thousands will rush [501] to copy that method. Then supply will [503] drastically exceed demand. And then the [506] method becomes unprofitable. And then we [508] see that dip. All right. So, now that [510] I've shown you guys sort of like how all [512] of these business models work, whether [513] it's social media marketing agencies, [514] the web design craze of like the early [516] 2000s, the dotcom bubble and nburst, um, [519] hell, like drop shipping. Here's how [521] things actually work. Specifically in [523] regards to AI and automation, your [526] ability to use a tool doesn't actually [528] equal your ability to make money from [529] it. Okay? You just need a sufficient [532] level of technical capability. And once [533] you reach that sufficient level of [534] technical capability, which anybody can [536] do realistically in like 3 to 4 weeks, I [537] would say of dedicated consistent [539] learning, you're good. You basically [540] don't never need to work on that again. [542] All you need to do from this point is [543] you just need to learn how businesses [544] work, specifically the niche or the [546] business archetype that you are going to [548] serve. Okay? Businesses pay for [549] solutions to problems. They don't pay [551] for AI. The reality is is everybody has [553] access to chatbt now. Grandmas and [556] grandpas are using chatbt and they're [558] doing it, you know, pretty reasonably [559] well. You knowing how to use this [561] technology is not actually like the main [563] alpha here. It's you knowing how to use [565] the technology in a specific business [567] vertical andor niche. Whereas you used [569] to be able to make $500 a day with chat [571] GBT when nobody knew what ChatGBT was. I [574] actually did this. Funnily enough, I [575] used to run an AI content marketing [577] company where we used models like GPT3, [579] GPT3.5, and later GPT4 in order to like [582] create and pre-draft large portions of [584] content for people. The entire way the [586] business worked is we just knew about [587] the tool before everybody else did. [588] Well, I'll tell you what, that doesn't [590] work anymore cuz everybody knows about [591] the tool. Okay? Everybody on planet [592] Earth knows how AI works. You can't make [594] money at the bottom anymore. What you [595] have to do is you have to go up several [597] layers to things like strategic [598] implementation of a specific tool in a [600] specific niche. Anyway, clients rarely [602] understand what they actually need [603] versus what they ask for. The benefit [605] here is that means that there's a ton of [608] value for people that can unear what the [610] client actually needs as opposed to what [612] they're asking for. Whereas builders [614] that just take clients at face value, [615] they can't make very much money at all. [617] And then decision makers care about [618] return on investment, not technical [620] specs, shiny tools, or latest LLMs. If [622] you really want to implement something, [623] well, you need some sort of business [624] process understanding. Okay, so what [626] does all of this mean? It means that if [628] you really want to crush it with AI and [629] automation, you shouldn't actually focus [631] on AI automation. we should focus on is [633] you should focus on learning how [634] business works, how money changes hands [636] in today's economy, how to use, you [638] know, digital forensic tools, let's say, [640] to like learn a niche really quickly, [642] learn the pain points, learn the [644] customer needs, how to get up and [645] running to talk to real customers to [647] figure out what their business pipeline [648] looks like, and then ultimately be able [650] to press on those pain points, and then [652] position this tool as a solution to [653] them. But the value is not the tool. The [655] value is that process that you just took [657] to get to the point where you can pitch [658] the tool. All right, so that's how [660] things actually work. If you want to [661] make money with AI automation, that's [663] where you start. Believe it or not, you [664] worry about AI automation at the very [666] end of the business model when you're [667] doing the fulfillment. So 80% of [669] successful a implementation solve very [670] mundane problems. We're talking like, [672] you know, inbound uh system where you're [675] generating ads, but then the average [678] response time to somebody that fills out [680] the ad is like 15 minutes or something. [682] What AI automation does is it just [683] enables you to respond in one minute [685] instead. That's response time. That's a [687] very mundane problem. Well, guess what? [689] That system in and of itself can [690] literally quadruple the top line of a [692] business. Not to say anything about the [694] bottom line. The simplest solutions [696] often deliver the highest measurable [697] ROI, but it's simple once you understand [699] how to unearth it. If you don't know [701] obviously understand how to unearth it, [702] you can't get to the point where you can [703] call it simple. But yeah, once you know [705] how, the simple solutions often deliver [706] the highest measurable ROI. So if you [708] actually want to get up and running with [709] this stuff really quickly, what you do [711] is you focus on business problems. You [712] understand the processes and the pain [714] points that lead to them. You identify [715] the measurable value opportunity which [717] is not necessarily automation although a [719] lot of the times it includes automation. [721] Then you design a simple effective [722] solution. The solution may include [724] automation but it also might just [725] include you doing some process [726] optimization or whatever and then you [728] implement measure the results and [729] demonstrate a clear ROI. So the real [731] opportunity is not in charging for [733] tools. It's just knowing how to apply [734] the tools to real business problems and [735] getting clients to the point where they [736] can actually explain that to you. So [737] that is the whole opportunity. So the [739] real value here is not necessarily in [741] anything to do with AI automation. [742] Hopefully that's clear. The real value [744] is just becoming basically like a high [746] quality consultant. Because once you're [747] a high quality consultant, then even if [749] the tactics change, even if market [750] demand for a specific technology or tool [752] changes, guess what? You can apply the [754] same thing that you just did for a [756] automation to literally anything else. [758] You could use the same logic and the [759] same business knowledge to convince [761] somebody to buy drop shipping or help [763] somebody do something maybe in the [764] physical world. Convince a real estate [766] developer that they need to invest in a [768] particular place and then profit wildly [770] off of that. There's a million in one [771] reasons basically why you should learn [773] business skills over technical skills. [775] But hopefully it's abundantly clear that [777] the most successful A and automation [778] businesses are not people that see an ad [780] saying make $500 a day with chatbt and [783] then copy and paste the same prompt to [784] generate some BS thing that they then [786] try and sell on Etsy. The people that [787] really crush it here understand how [789] business works and they see a automation [791] as merely one of the many possible paths [793] that they can go down to solve a [794] customer's problem. All right. So yeah, [797] we solve real business problems that [799] exist. We focus on business value [801] creation, not selling AI itself. There [803] are many bigger and better and brighter [805] companies than any of ours will ever be [807] that are doing this right now. Look at [808] Open AI. Look at Anthropic. They're [810] selling AI to multi-billion trillion [813] dollar businesses. Okay? There's no way [815] that we can compete. Our goal is to find [817] small to midsize business problems and [819] then sell our ability to solve problems, [822] not necessarily the AI model. So, what [824] does that mean now that I've just talked [826] off a cliff essentially? Well, that [828] means that the high demand areas for you [829] to figure out are lead genen, customer [831] response, data processing, consulting. [834] Okay, it's like some sort of like [836] digital business forensics, [837] understanding how businesses work. It's [839] some sort of pipeline knowledge. It's [840] process optimization. You know, it's how [843] to manage clients. So where automation [845] succeeds where these AI side hustles [847] fail are when you have business process [849] understanding when you can deliver [851] tangible measurable outcomes when you [853] focus on ongoing client relationships [856] and then when you deploy useful and [857] helpful workflows for businesses not [859] just a bunch of content writing GPTs [860] that a lot of people are doing. Now that [862] I've hopefully convinced you that the [864] real skill here is in building a [866] business not in doing AI and automation. [868] Here's how to actually take AI and [869] automation and then use it to build a [870] successful business. So there are a [873] bunch of no code tools over here like [875] make and non. You've probably seen all [877] of these, but the way that they work are [879] they allow you to solve business [881] problems much faster than you used to be [884] able to, which makes the value of [886] understanding business problems even [888] higher. What you do is you get that [890] business understanding. Once you have [892] that business understanding, then you [894] apply it to a real business using one of [896] these tools. This one here is nadn. This [898] one's your make.com. There are, of [900] course, a couple of other tools as well. [901] Zapier, Lindy, Gum Loop, there are [903] hundreds if not thousands of these now. [905] But the point is you focus on the [906] business problems first, then the [907] technical implementation. Then the way [909] that you price is based off value [910] delivered, not hours worked. When you [912] position yourself as a builder, you tend [914] to just be like another software code [915] monkey. And you know, you're not really [917] doing software or code here. You're [919] using no code. But clients will see you [921] the same way. But if you price yourself [922] based on the value that you delivered, [924] basically you do a little SOP here. If [927] we uncover the problem, which we just [929] did, we just spent a lot of time and [930] energy convincing you that that was the [932] way to do it. You identify the cost of [936] the problem. So this might be the [938] opportunity cost, the amount of money [939] that a business could make if they solve [941] the problem. It could also be like [942] direct expenses, how much money a [943] business is currently bleeding to this [945] problem. What you do is you just take [947] the opportunity cost plus the expense. [949] And then you multiply this by something [952] like 0.3 or something. If the [955] opportunity cost of them not having a [957] lead generation system set up is $10,000 [959] a month and the current expense of their [960] crappy lead generation system is, let's [962] say, $5,000 a month, well, when you [964] multiply that by 30%, you end up with [967] something like $4,500 a month. Then you [970] just charge them a percentage of the [972] value that you provide. This is B2B [975] sales. This gets you out of that hourly [977] trap, which is a big problem for a lot [978] of people. Once you've done that, then [980] you focus on simpler solutions because [982] they consistently outperform complex [983] ones. Then you just sell that to people [985] that you have just determined the [987] problem for and then you just scale it [988] and you just sell it to other businesses [990] that are similar and you just template [991] it out. So you sell the same sorts of [993] things to the same sorts of businesses [994] at scale. Meaning you can optimize your [996] lead genen to put yourself in front of [998] those same sorts of businesses and so on [999] and so on and so forth. So if you really [1001] want to scale a sustainable automation [1003] business, you focus on high volume [1005] repetitive processes with clear metrics. [1007] You also create solutions that clients [1008] can understand and explain to others in [1009] their team. You don't focus on like [1011] really complicated solutions. You focus [1012] on things like that AI autoresponder [1014] email thing that I mentioned a moment [1015] ago. When somebody comes in through an [1017] inbound funnel, you respond very [1018] quickly. You focus on things like, oh, [1020] when a client pays us, we send them a [1022] quick thank you email. We send them a [1024] quick onboarding packet to get them up [1025] and running quickly. And then you [1027] develop reusable templates that can be [1028] customized per industry. Here's the SOP. [1030] You learn some basic no code tools, [1032] identify some client pain points just [1033] like a consultant. You calculate the [1035] potential value. Design a simple [1037] solution. Hopefully, you have templates [1039] that allow you to do this quicker at [1040] this point, but you might not. Then you [1041] implement and track the results. You [1043] offer it for free. And then ultimately, [1044] you know, you move to paid work after [1046] you've done maybe one of these. You also [1047] don't have to offer anything for free, [1049] by the way. Like this is a completely [1050] optional step, but this is probably the [1052] quickest and simplest and easiest way to [1053] get up and running if you're a total [1054] beginner. And then once you do paid [1055] work, what you can do is you can just [1056] loop this over and over and over again. [1059] Okay, this is the money. After you're [1061] done with one client, well, identify [1062] more pain points either from that client [1064] or other ones. Do the same thing. Just [1066] rinse and repeat over and over and over [1067] again until you make money. Okay, so if [1069] you want to contrast these business [1071] models, on the left hand side we have [1073] these AI side hustles where you know [1075] make $500 a day with chat GBT. Then over [1077] on the right you have like a legitimate [1079] AI automation business aka a consultancy [1082] that's highly leveraged and that is [1084] basically powered by AI and automation. [1086] Just check out a couple examples. A lot [1088] of people used to sell AI art on Etsy, [1089] myself included, believe it or not. But [1091] that collapsed from $30 to $50 a piece [1093] to $2 to $5 a piece and now probably [1095] like 0.01 01 a piece because thousands [1098] of identical offerings flooded [1099] platforms. What does that mean? That [1101] means that saturation went way the hell [1103] up. Buried entry went way the hell down. [1107] Uh cost of entry, I should say, went way [1109] the hell up. That means the average cost [1110] of the product also went way the hell [1112] down. And then yeah, you know, now you [1114] can't really sell AR on Etsy anymore. [1116] Interestingly enough, the demand is back [1118] to human generated pieces. I also think [1120] that there's some like platform rules [1122] and regulations around that. Let me give [1123] you more relevant examples. one click [1125] chatbot businesses plummeted and you [1126] used to be able to sell these for 1,500 [1128] to 2,000 bucks a pop. Now you sell them [1130] for $100 to $200 because now there's [1131] just a bunch of these drag and drop [1132] interfaces that essentially just allow [1134] business owners to do the same thing. [1136] You can obviously still sell uh oneclick [1138] chatbot to a business for $1,500. But [1140] it's a lot harder to when basically [1141] every business has the ability to do so [1143] themselves. Like when everybody can do [1145] the thing, the thing itself becomes less [1147] valuable, right? So just to be [1148] abundantly clear here, focus not on what [1150] the end output of the thing is. focus on [1153] the knowledge necessary to get you to [1155] the point where you can create the thing [1156] or uh identify why the thing is valuable [1159] in the first place. There also tons of [1160] these agency in a box templates and [1162] there's content writing GPTs and and [1164] then there's all this sort of stuff and [1165] you can't sell these. They fail cuz [1167] thousands use identical approaches with [1168] the same clients and then very quickly [1170] this just stops being sustainable to [1172] begin with. So if you want to be a legit [1173] AI automation business, you deliver [1175] sustained value while AI side hustles [1177] are just going to follow these [1178] predictable boom and bust cycles. You [1179] want to look at, let's say, I mean, even [1181] as a quick example, the revenue of my [1183] information products over time. They've [1185] basically been like this. Okay? In the [1187] meantime, there have been tons of [1189] businesses that started from scratch and [1190] they blew way the hell up and they made [1191] way more money than I'll ever make. But [1193] you know what happens? The next month [1195] comes by and they're at nothing. Then [1196] there's another one that comes in. Then [1198] there's another one that comes in. But [1200] if you want to look at like just my [1202] information product revenue, not even [1203] talking about my agency revenue over [1204] time, it has been slow and steady and [1206] wins the race. Now I'm the number one [1208] community and the number one platform on [1210] planet earth for these information [1211] products by revenue. Slow and steady [1213] wins the race. Focus more on delivering [1215] sustained value. Focus more on [1218] identifying client problems. These are [1220] not sexy but the sexy solutions aren't [1222] the ones that last. And ultimately you [1224] don't just want to be making a business [1225] for 5 minutes. You want to be making a [1227] business for the next 5 years. Okay. [1229] Okay, so just to sum up all this stuff, [1230] automation agencies in this business [1232] model, success is all about solving [1234] unique business problems that require [1235] custom understanding. AI side hustles on [1238] the other hand are built on these [1239] templated approaches anyone can copy [1241] because they're essentially just [1242] tactics. They're not [1244] strategy. When you have a side hustle [1246] and you have a tactical explosion of [1249] volume, people tend to compete on price, [1251] which is a race to the bottom. Whereas [1252] sustainable automation businesses [1254] compete on value, and this is a race to [1256] the top. If you want to be a real [1258] automation business, you'll deliver [1259] $10,000 a month of value. You're going [1262] to make a ton of money because you'll be [1263] able to charge, as I mentioned, [1264] somewhere between 30 to 50% of this, [1266] probably at least $3,000 a month. These [1268] $5 digital product side hustles where [1270] you have chat GBT create some templates [1272] and sell them on some freelance platform [1273] or whatever, these are inherently [1275] commoditized and they tend to struggle [1277] to survive. Then finally, any sort of [1279] trend hustle product, it's going to lack [1281] business value beyond the novelty [1283] factor. We don't really care about the [1284] novelty factor here, right? We care [1286] about sustainable value to businesses [1287] over time. Okay, so this is sort of like [1289] the approach that you have. If you focus [1291] on the new trendy AI products and you're [1293] on Instagram following like 500 [1295] different people that are like, "Oh, new [1296] tool today. There's another tool over [1298] here. Oh my god, look, another cool [1299] tool. This one wipes your ass." You're [1301] never going to be able to make it [1302] anywhere. Okay? Only the first movers [1303] are going to make any sort of money with [1305] the ass wiping GPT. The market's quickly [1307] going to saturate when everybody else [1308] starts jumping on it. Prices are going [1310] to collapse and you know, you're either [1311] going to fail or you're going to have to [1312] pivot. Where are you going to pivot? [1313] right back here to sustainable business [1316] problem solving. You're going to build [1317] client relationships, deliver measurable [1319] ROI, and then expand services, do [1321] referrals, do everything that like an AI [1322] and automation agency is composed of. [1324] All right, hopefully by this point I've [1326] convinced you guys that the vast [1327] majority of people out there that are [1328] trying to sell AI as the opportunity are [1330] wrong. It is not AI that is the [1331] opportunity. The opportunity is becoming [1333] a skilled business person first. And [1336] once you're a skilled business person [1337] first, then you can sell things like AI [1340] or AI's ability to solve specific [1342] business needs second. Okay? So, focus [1344] on the business understanding first, [1346] which you get by watching channels like [1347] mine. There are a couple of other [1348] channels out there that I could [1349] certainly recommend though I don't want [1350] to name any names. And then after that, [1352] and only after that's done do you [1354] actually get on the tool train, if that [1356] makes sense. Okay. So, where would I [1358] start? I would start with this video [1359] here, how to build a profitable AI [1360] business in 2025 for beginners. I'll [1362] make sure to link it. From there, you [1364] can focus on 80% of AI automation basics [1366] in just 29 minutes. These two should [1367] give you some reasonable understanding [1369] of the opportunity, how exactly to [1371] create a consulting business that is [1373] highly leveraged. Then once you have all [1375] of that, then you can actually focus on [1376] the tools and you can do something like [1378] my 6-hour a automation course to get up [1380] and running. But don't put the cart [1382] before the horse. Don't focus on the [1383] tools before you actually learn the [1385] business knowledge. Hopefully I'm not [1387] beating a dead horse at this point, but [1389] if you want sustainable business growth, [1390] you need a sustainable strategic [1392] approach. Focus on strategy over [1394] tactics. Awesome. Hopefully you guys [1395] appreciated that video. If you guys want [1396] to get up and running with an actual AI [1398] and automation business roadmap, check [1400] out Maker School. It's my zero to 90day [1403] accountability dayby-day playbyplay [1405] system where I'll actually guarantee you [1407] your first AI and automation agency [1408] client by the end of that 90 days or you [1411] get all of your money back. most recent [1413] win that I want to point out is Eugene, [1414] who just landed his first paying client, [1417] $1,500 worth in just five days after [1420] joining this community. He closed the [1421] CEO of a small to mid-size enterprise in [1423] the finance industry in Milan. You can [1425] do this sort of stuff, too. It's not [1427] actually extraordinarily hard. What made [1428] Eugene and all the other people that [1430] post these daily wins work is they [1432] focused on like business process [1433] understanding, not necessarily the [1434] technical stuff. Okay, so that's what I [1436] wanted to run you guys through in this [1438] video. If you guys have any questions [1438] about this, let me know. Don't fall for [1440] another $500 a day chatbt business hype [1443] boom. These things just don't work and [1444] they don't have a sustainable value. [1446] Hopefully I've said my peace. Have a [1447] lovely rest of the day and I'll catch [1448] you all tomorrow.

Video: https://www.youtube.com/watch?v=PRxtWdI3xvA
Title: $320K/Month AI Expert Answers Your Toughest Questions
[0] What's going on everybody? Today I'm [1] doing something a little bit different [2] over on my daily updates channel, but [3] answering tons of questions about [5] starting and scaling AI automation [6] businesses, more or less all the [8] nitty-gritty stuff that doesn't always [9] make it into my main content. Today, [10] what I've done is handpicked the most [12] common and valuable of those questions [14] and compiled them all into one video to [15] cover everything from how to start an AI [17] automation agency with just $100 to how [20] to find your first few clients to how to [22] scale beyond 10K a month and then also [23] how to solve a bunch of the minor more [25] technical challenges most people here [26] are facing right now. You guys can think [28] of it as a direct line to the exact sort [29] of advice I would give to you if we were [31] having a coffee or a consultation [33] together. No fluff, just all the things [34] that I personally use to build multiple [36] sevenfigure businesses. And it's also [37] the exact things that I teach to people [38] inside of my communities as well. So, if [40] you guys have been wanting specific [41] answers about how to grow your AI [42] automation agency, this is the video [44] you've been waiting for. And if you guys [45] want your own questions answered, I [47] check all of the comments on my daily [48] updates channel. I've literally never [50] skipped a question. You can go check it [51] out. It's the second link in the [52] description. Let's do this thing. study [54] motivation 6838 says, "How do I do [57] outreach and get faster results when I'm [58] willing to spend $100 or more on it?" [60] Loom videos or asset based approach uh [61] via sending automations. Sure. Let me [63] cover exactly how I would approach these [66] hypothetical scenarios. If I had [69] $100, if I had [72] [Music] [74] $100, okay, if I had $100, here's [77] exactly what I would do to acquire [79] clients today. Okay, very first thing is [83] I would find the number one most [85] affordable because you only have $100 [87] cold email stack. This is the biggest [89] leverage. Let me show you what I mean. [91] And we're actually going to math it out [92] right now. So, first thing is probably [94] instantly and then I think they have a [96] growth plan for 37 or 39 bucks now. So, [98] I'm going go over here and I'll use the [100] monthly growth plan for 37 bucks. Okay, [102] this is going to give you a,000 uploaded [104] contacts, 5,000 emails a month that you [106] could send. This is built in such a way [107] that you could actually just roll over [108] and like delete the leads that haven't [110] responded and then upload new ones. So, [111] here's what I would do. I would do $37 [114] for instantly growth plan. Keep in mind [116] this is $37 a month, right? So, you're [118] going to have to do this every month, [119] but I'm just hypothetically saying you [120] have 100 bucks a month. We're going to [122] spend 37 of it on the growth plan. Okay. [124] Now, what is the cheapest mailbox source [126] currently? Probably like cheap inboxes [128] or something, I'd imagine. Yeah, [130] probably going to be three bucks and [131] they're going to be Google Business [132] Workspace. I'd go for a very simple and [134] affordable platform like cheap inboxes. [136] I'd probably do let's say five times [139] three is 15. Okay. So, I'd spend 15 [143] bucks on cheap inboxes. 15 bucks a [146] month. That's going to give you five [148] times let's say 20 each 100 emails a [150] day. Okay. And then what else do we need [153] really? We have the cold email [154] management. Then we have the inboxes. [156] You might need some domains [157] realistically. And I don't know, maybe [159] you need three domains for this or two. [160] Let's just say two for now. So it might [162] be another 20 bucks. All right, so let's [164] just do some tabulating here. 37 + 20 is [166] 57. 57 + 15 is 72. So what we've done [171] now is we've spent $72 in month one. [173] Keep in mind that the domain cost here [175] is not going to recur for a full year. [177] So you can technically, if I wanted to [179] be really cheap, I could amortize the [181] cost over the full year. I could say the [183] 20 bucks that I'm spending is actually [184] equal to a dollar and a half and I could [186] bring this down to like 60 bucks or [187] something. But I'm not that cheap. This [189] is the money that's coming out of your [190] pocket. Okay. All right. So that is for [194] infra. Now from there and I will be kind [197] of cheap here. I would go Apollo and [200] then I would scrape Apollo leads using a [203] service called Ampify. So Apollo is a [205] lead aggregator that allows you to find [207] leads that you want and I would scrape [209] them using this Apollo scraper which I [211] believe is a $120 per 1,000 leads right [214] now. Of this maybe you get like 600 [217] email addresses. Okay. So, if we do the [219] math on that, that's really like two [220] bucks per thousand emails. So, if you [224] think about it, let's figure out the [225] volume that we're going to run on 100 [226] emails a day. Let's say we're running a [228] two-step sequence. So, 100 emails [230] outbound divided by two means 50 new [233] lead emails and then 50 follow-up [235] emails. Okay? Now, if we hypothetically [238] run this 30 days a month, which I don't [240] actually usually do, but let's just say [242] we are, and we do 50 per day, then how [244] many are we doing per month? 30 * 50 is [247] 1,500 per month, right? [249] All right. So, 1,500 emails per [252] month times about $2 per 1,000 is uh $3. [259] So, we're spending $3 in the leads. So, [261] now we have 72 bucks for the infra plus [265] $3 for the leads. Keep in mind that this [268] isn't super accurate. There are some [270] gotchas. You might want to experiment [271] with some email verification services or [273] validation services like Mails. And [275] stuff. I'm assuming if you're starting [276] this, maybe you're already in Maker [277] School. Who knows? Uh we have a bunch of [279] codes that give you free stuff and there [281] are a bunch of coupon aggregators and [282] discounts and stuff like that that gives [284] you more. So maybe you get all this for [285] $75. Okay, what that means is for $75 [290] you get to reach out to 1,500 people. [293] So, if we just do the math, $75 divided [296] by 1,500 people, it's like a cost per [301] lead of, I [303] think, oh jeez, my math ain't good. So, [307] $75 divided by 1500 is 0.05. So, 5 cents [311] per lead, something like that, right? [314] Not bad. Assuming you get a reply rate [316] on these 1500 people of I don't know, [317] let's say 3%, you'll have 45 replies. [320] Assuming that you get 20% positive reply [323] rate on the 45 replies, you'll get nine [326] positives, which will come out to about [328] one meeting every 3 days. I'm making [330] some estimates here, right? If you got [333] more than a 3% reply rate, you get more [334] than 45 replies. We just had somebody in [336] make money with make launch a campaign [338] that had a 10% reply rate. So, you could [340] 3x this hypothetically, maybe you end up [342] with a meeting every day. Yeah, you get [344] one meeting every 3 days unless your [345] stuff totally sucks. But I'm assuming [347] you're keeping up to date with all of my [348] content and my strategies and stuff like [350] that. And you still have 25 bucks left [352] over. What do you do with the other 25 [354] bucks? Um, I just make my life a little [356] bit easier. Yeah. What I do with the 25 [358] bucks? I'd probably go on Upwork. [360] Average application takes 10 connects [362] right now. And a connect is worth uh [366] $150. So that's kind of a $150 per [369] app. But I usually recommend bidding or [372] boosting. So that brings a $150 to like [374] three bucks, three three to four bucks [376] realistically. The thing is, um, the [377] math here is a little rough because you [378] get your connect balance refunded if you [381] don't get clicked on. And that is [382] starting to happen more and more often [384] obviously as more people get into the [385] space. So the game optimal strategy is [387] to bid as high as possible to make sure [389] that somebody sees you. And then if you [391] get out bid, it doesn't matter cuz you [392] just receive the connects back. You know [393] what I mean? So this $3 to $4 may be [395] what's out of pocket, but in reality it [397] might be a little bit lower than that [398] after you take that into account. Maybe [399] it's like $2.50, whatever. or let's just [402] say, I don't know, let's say three [403] bucks. Okay, so it's three bucks per app [404] right now. So that should allow you to [406] do eight Upwork apps. So I don't know, [408] if you have a 20% proposal to reply [409] rate, you're going to have about two [410] people getting back to you. Maybe you [412] book one meeting from that. So how many [414] meetings do we totally have? We [416] basically booked 10 meetings in month [417] one with this strategy for [421] $100, which is equal to a CPM or cost [425] per meeting of $10. Keep in mind that [428] your product is probably going to be [429] worth, I don't know, like $1,000 or [431] let's say [432] $1,500. You know, if you close one out [434] of these 10, you'll make $1,500, meaning [436] you will generate a 15 times [439] ROI. Not taking into account some [441] additional things you might have to do, [442] like you might have to sign up to some [444] services or something to try a piece of [446] software out, that sort of stuff. Also, [448] you may not make a client in month one. [450] Maybe you really suck at cold email, or [452] maybe your copyrightiting blows, or [454] maybe you screwed something up really [455] fundamentally. So, if you average this [457] out over the course of, let's say, 90 [458] days, maybe you make $4,500 for a total [460] outflow of like 300 bucks or something. [462] So, this is the math that I do when I [464] consider somebody that hasn't done cold [466] outreach before, hasn't done any sort of [467] outbound before, is getting into this [469] industry for the first time. I'm using [471] conservative figures here. Closing rate [472] of 10% is usually sub average. Most [474] people have closing rates like 15, 20, [475] 25%. 3% reply rate, I'd consider like [478] pretty average, but some people have [479] much higher reply rates. Yeah. Anyway, I [481] guess the point I'm making is I'm being [482] conservative here. And not all of these [484] will show up, by the way. maybe 75% of [485] these will show up. So, muddles the math [487] as well. That's probably what I would [488] do. Yeah. So, to be blunt, what that [492] means is I would do cold email, then I [493] would do Upwork, and then on top of cold [495] email and Upwork, which cost sort of in [497] my like little little cost bubble. [500] There's also going to be some things [501] that don't cost, and that might be Loom [503] videos. Now, Loom is free if you keep it [505] under 5 minutes. And you could maybe [508] repurpose some of the same leads that [509] you've acquired through the cold email [510] scripping method to like get people [512] social medias and stuff like that. and [513] then also hit them with like a [514] customized loom video or something. [515] Maybe you do five of those a day and now [518] you're sending 150 per [520] month. Maybe that leads you to I don't [523] know, let's just say five more meetings. [525] So yeah, you know, this is time not [526] money. But I think in the first month, [528] you know, assuming you're willing to [529] spend 100 bucks and then be committed, [530] you could probably Yeah, you could [531] probably book even more meetings and [532] there's probably like 15 meetings [533] realistically. Get that for 100 bucks, [535] close, I don't know, two of those, make [537] three grand, you know, make a 30x ROI. [540] Where else are you going to find 30x [541] ROIs in the first couple months? Tusf [543] says, "How do you beat analysis [544] paralysis of choosing a high- income [545] skill?" I mean, I confuse it too much. [547] Should I choose a automation, design, [548] branding, or what? David O responds with [551] just choose something based on your [552] needs, then complete it until you have [553] an MVP. Since you have an MVP, sell it. [556] After that, you can judge whether you [557] want to continue or not. That's what I [558] think, but I'm 17 and have a 100 bucks. [560] Well, you know what, David? If you're [561] thinking this way at 17 with $100, I [563] have no doubt you're going to add some [564] zeros to that number in a while because [566] yeah, I definitely wasn't thinking that [568] way when I was 17. David Dio represents [571] someone with a solid understanding of [573] the market. I would say that's just how [574] you do things today in modern business. [576] You have some candidate options. You [577] pursue them, but like the midpoint where [579] like you actually get somebody [581] interested in wanting to buy the thing [582] for you and then and only then do you [584] validate and then say, "Okay, I should [585] probably build this thing. You know, I [587] should actually probably learn how to do [588] this thing." Yeah. How do you overcome [589] analysis paralysis? Well, you just stop [591] the analysis part. Honestly, just choose [593] one of these. Set yourself a timer for a [595] month and then just like see how far you [596] can go and then choose the next one the [598] month after. Choose the next one the [599] month after. You just have to get [600] started, man. There's so much [601] serendipity in this stuff that like [602] there's no way to fully know whether or [604] not something's going to work for you [605] unless you get going. When I started my [606] door to door agency, it's not like I had [608] done a rigorous analysis of how much [611] money I was going to make doing this [612] thing. I just said, "All right, this [614] looks like it could make me some money, [615] so I might as well start and then I'll [617] see where I land." And I started and I [618] saw where I land. And in that case, I [620] didn't land very far. But that [621] experience was able to give me enough of [623] a background in this industry that I was [625] able to make a more educated decision [626] the next time. I want to start this [628] business. I've chosen my niche, but how [629] can I know what problems they face to [631] create automations based on it? There [632] are a couple of ways. Try and join a [634] bunch of communities related to that [636] thing. So, let's say you've picked your [638] niche and your niche is like videography [639] companies or something like that. Join a [640] bunch of videographer subreddits on [642] Reddit. Join a bunch of videographer [644] schools and stuff. Then just scroll [645] through all the way top to the bottom to [647] see what are people bitching about. [648] Basically, what do people have issues [649] with? What are people not good at? What [651] are the bottlenecks that most of these [652] people are complaining about? And then [653] just ask yourself, you're going to have [654] a list of like 10 or 15 of them by the [656] end of your day. Just ask yourself, [657] okay, like what sort of systems could I [659] create that would solve this? That's [660] honestly about how indepth you have to [662] go. There's a lot of money out there and [664] like lowhanging fruit that you just kind [665] of need to reach out and pluck and it's [667] really like there's a distance of a day [668] between you and then you being able to [670] know what you need to know in order to [671] make that money. Deans question which [674] is, "Hey Nick, love your videos. Had a [675] question about pricing. What do you [676] suggest charging clients only for setup [678] and then monthly maintenance? Is the [679] cost of open air credits and any other [681] custom tools should be included or [682] should I let the client bear them and [683] charge for only consultation and [685] maintenance? Great question. Um, so [687] here's the really interesting thing [688] about what has happened over the course [689] of the last year or so. When I started [692] my agency, Open AAI and AI credits in [695] general were super expensive. I mean [697] like I was spending uh thousands of [699] dollars every month on OpenAI credits [701] for my writing business and then several [703] hundred bucks per month on OpenAI [705] credits for stuff like enrichment and I [707] don't know personalization of the first [708] line of an email and that sort of stuff. [710] Since then costs have dropped [712] precipitously. When I say precipitously [714] I mean like this is where they were at [715] before and woo this is where they're at [717] now. So you can realistically run AI [720] 24/7 on every corner of your business. [723] And unless you're using like the best [724] and the greatest model, which you know [726] at the end of the day is really only [727] going to be a few percentage points [728] better in terms of capability than the [729] previous generation, you're going to be [731] spending like three bucks a month. So [732] you can actually just cover most the [734] open air credits yourself. This did not [736] used to be the case, but now it is the [737] case. It is very easy. It's very simple. [739] And if you do this, you typically avoid [741] issues that I see a lot of people in my [742] communities go through, which are where [744] you run into rate limits on lower tier [746] accounts on whatever these services are. [748] Open AAI's tier five, pretty trash. You [750] know, you can only send, I don't know, [751] 10,000 tokens per minute or something. [753] You know, you actually tend to run into [754] problems if you do that. So, yeah, open [755] AI credits are kind of a nuanced one, [757] but no, I would not charge new clients [758] for OpenAI credits. I would just be [759] like, nope, I bundle in all the AI fees [761] and everything like that because I'm [762] partnerships with various providers and [764] stuff. Now, I can say that cuz I do, but [765] in your case, maybe you can't say that. [767] Maybe you get a partnership and then you [768] can't. Custom tools I guess are going to [769] be what like what is a custom tool like [771] make.com. If it's make.com then I would [773] have the client pay for that. But the [774] good news is if it's make.com nadan or [776] something the costs are usually like [778] sub50 maybe sub 100 bucks a month. So [779] it's like so low it doesn't really [781] matter all that much right? There are a [782] couple different ways you could approach [783] offers in general. You could swallow up [785] everything and then just charge the [786] client a slightly larger fee. That's [788] what I call the simplest lowest friction [790] approach. But I want you to know that [791] that does add some liability on your [792] end. And then it also results in let's [794] say you and the client split at some [795] point. How does the client get access to [797] all the stuff you built for them? Can [798] they get access to it or do you just [800] take it away from them because they're [801] no longer working with you on a monthly [802] basis? Right? Kind of sneaky. Um, so I [805] prefer to have the client actually own [806] most of their infrastructure aside from [808] the OpenAI API key, for instance. That's [811] like something that's simple enough that [812] I could just run them through how to do [813] it in like 10 seconds if we do end up in [815] a handoff scenario. And then uh I have [817] zero liability. They have the accounts. [819] I just use their password in order to [821] access the accounts and it's just simple [822] and easy for everybody. Hopefully that [824] gives you some context and hopefully I [825] didn't absolutely butcher your name. Wyr [827] nation says, "Hey Nick, love your [829] content. I just had a quick question. [830] How does your onboarding work and what [832] do you sell?" It's a good question. How [833] does my What do I sell? Hm. No, I sell [836] AI automations mostly. Well, my AI [838] automation agency sells AI automations. [841] It sells like a monthly strategy service [843] where I basically outline the shortest [845] line path that that person needs to take [846] in order to improve the growth of their [848] business. I actually do the building, so [850] I'll build out automations and so on and [852] so forth. I do a fair amount for that. [853] My kind of like coaching arm instead [856] does like a zero to1 roadmap on how to [858] get up and running with an AI automation [859] agency. I show people essentially what [861] they need to do to build out an agency [862] that is similar to mine. And then I also [864] offer some higher level coaching now. I [866] do some one-on- ones where I tackle [868] specific problems and stuff like that. [869] So I'm actually selling quite a bit if [870] you think about it. My onboarding, if [872] you're talking about for my a automation [873] agency, it's pretty simple. I get them [874] on a kickoff call. On the kickoff call, [876] I get them to sign up to all the [877] platforms that they need. That's [878] usually, I don't know, 10, 15 minutes. I [881] have like a list, a step by step on how [882] to do it for all these platforms, which [884] is pretty straightforward. And then I [885] guide them through it via screen share. [887] Zoom has this little annotation feature [888] where you can draw on the screen as they [890] do the sign up. So I literally like [891] underline, hey, this is the button you [892] need to press. Hey, go over here. Oh, [894] Nick, what should I do next? H, okay, go [896] over here where it says that setting and [897] give that a click. At the end of it, [898] I'll do like two-factor authentication. [900] I'll log into all the services on my [901] end. I'll verify that I have access to [903] all of it. And then I also do stuff like [905] timelines. I cover expectations. I get [907] them laughing. I get them excited and [909] stoked about, you know, me solving a [910] problem they've had for a while. And [911] then, yeah, that's how my onboarding [912] works in a nutshell. Muhammad Kasim 7 [914] says, "Nick, I can handle, let's say, [915] five clients at a time, and I've [916] currently have five active clients. [918] Should I stop my outreach until there [919] are four or do I keep going, get the [921] extra people onto a wait list?" My main [922] man, you keep on going. You never stop [924] the lead generation. Why? You always do [928] lead genen. Always first, the second you [930] wake up, cuz lead genen solves [932] everything. Lead genen solves growth, [934] obviously. Hopefully, that's [936] self-explanatory. lead genen solves [938] project management wos. Why? Because if [941] you have a ton of leads that are willing [943] to work with you, you can just pick the [944] one that pays you the largest amount of [945] money for the least amount of work. And [947] if you are getting a lot of clients that [948] are willing to pay a lot of money for [950] very little work, well now you have [951] easier project management because these [952] are simpler projects. Legen solves [954] virtually everything. I could go on and [956] on, but like legen just solves all the [957] problems that you're probably suffering [958] from. So keep on going. I know it seems [960] counterintuitive, but the more lead [961] genen you do, the more opportunities and [962] ideas you're going to have. Trevor [964] Anderson says, "Always enjoy the content [965] here. High value stuff. My agency is [966] about 2.5 months old. I'm up and running [968] with paying clients largely thanks to [969] Maker School. Hell yeah, brother. Highly [971] recommended. The program pays for [972] itself. Plug. Thank you, Nick. One [973] challenge of faces transitioning from [974] the hands-on tools expert into a broader [976] consulting role. Someone who deeply [978] understands a client's entire business, [979] helps them scale, and also handles [981] automation. When approaching this more [982] consultative role, how do you typically [983] structure your thoughts or preparation [984] for client calls? Are there specific [985] frameworks or questions you recommend to [987] guide these conversations that will help [988] provide more value? Yes, all the time. [990] Inside of Maker School, actually, you'll [991] have access to like my sales skeleton. [993] So, just check the first month somewhere [994] along there. But essentially what I [996] always do is I ask the client to tell [997] me, so I have a structure, right? You [998] know, I'll build a little bit of [999] rapport, get them laughing and stuff, [1000] and then I basically say something along [1002] the lines of, "Hey, why are we talking [1003] right now?" Right? You probably get [1005] dozens of cold emails every day. What [1007] about my outreach made mine different? [1008] And why are we in this virtual call [1011] right now? So, let's just, you know, cut [1012] to the chase and and tell me. They'll [1014] tell me it's usually because they really [1015] like my outreach or they're currently [1017] hiring for some sort of role and they [1018] wanted to like see their options or I [1020] mean nowadays it's usually like, "Oh, [1021] you know, I know you from YouTube. who [1022] have seen your videos and stuff and I [1024] thought this was really serendipitous [1025] whatever in your case it's probably like [1026] hey this is the right time so I want to [1028] make sure this is the right person from [1029] there I get them to run me through their [1031] business top to bottom I say something [1032] along the lines of all right so you know [1034] in order for me to really fully [1035] understand this I always like to ask [1036] this question and that's what is the [1038] customer journey where's the very first [1039] time that a customer is talking or [1041] getting into contact with you or your [1042] company oh is it through Facebook ads [1044] okay oh it's through cold email okay [1047] most of the time people are going to say [1048] oh it's through referral okay gotcha and [1050] typically when you get a referral what [1052] does that look like? Is it an email [1053] where somebody CC's you uh forwards it [1055] over? Do they do like a little welcome [1057] email chain? Hey, Peter, this is my [1060] great contact, Trevor. Trevor's an a [1062] automation specialist. Like, how exactly [1063] does that look? So, I literally get them [1064] to walk me through every contact point [1066] with the customer and the company from [1068] start all the way to finish. I get them [1069] to run me through, you know, the [1070] onboarding. I get them to run me through [1072] how they contact and keep in touch with [1074] them throughout like the engagement or [1075] the fulfillment, aka whatever the [1076] business is doing. If it's a digital [1077] agency, maybe they're making some PPC [1079] ads or something. Like, when do you give [1080] clients updates? when do you give [1081] clients meetings and that sort of stuff? [1083] I basically get them to walk me through [1084] literally everything all the way until [1086] the client, you know, retention part at [1088] the end when the client exits the [1089] engagement. And then from there, you [1090] know, if like you've had a few clients [1092] and if you've watched a few of my [1093] videos, you'll probably start to pick [1094] out patterns and how businesses do [1096] things. At the end of the day, these are [1098] the niches that I interact with. There's [1099] really only so many steps that a company [1102] will go through from meeting a customer [1104] to closing out that engagement, right? [1107] And so it becomes pretty trivial for you [1108] to say, "Hm, okay, so you guys are [1110] currently doing all that stuff [1110] manually." Hm. All right. Well, we could [1112] probably build a system that would [1113] improve your ability to onboard the [1115] client. So, instead of you having to do [1116] all this stuff manually, maybe we have [1117] some form with a creative brief. Maybe [1119] they automatically get the email after [1120] the payment is triggered or something [1122] like that. Maybe they automatically get [1123] some big PDF thing. They automatically [1125] get a new ClickUp space created for them [1126] where they can monitor their projects. [1128] You tend to be able to pick up on this [1129] stuff pretty quickly. But yeah, I have [1131] the customer run me through it top to [1132] bottom, start to finish. After I'm done [1134] with that, I already have these ideas of [1135] like, okay, how am I realistically going [1136] to be able to help this client? I will [1138] ask them to tell me a little bit about [1139] the return on investment, customer [1141] lifetime value. How much money do they [1143] realistically make off of a single [1144] customer going through their pipeline [1146] start to finish? Now, if you're working [1147] in like the digital agency space, this [1149] might be between $5 to $10,000 [1150] realistically. Cuz you got to keep in [1152] mind, it's not just like the one time [1154] that you do a job with a customer. [1155] Customers have what are called retention [1157] multipliers or repeat business [1158] multipliers where 20% of customers [1161] recur. And if they're if 20% are [1163] recurring on a $10,000 deal, then that [1164] customer is actually worth $12,000 at [1166] minimum. They also have like referral [1168] multipliers. So there's a 1.2x [1170] likelihood that that customer is going [1171] to refer out some other customer, right? [1173] If you do the CLV or customer lifetime [1175] value calculations, you know, you start [1176] to get a real idea of how valuable a [1178] single customer is. And that usually [1179] turns out to be very valuable. Well, [1180] here's the really cool thing. Once you [1182] know how much money a customer is worth [1183] to that business, now you can start [1185] justifying, okay, how much money can [1186] they pay me, assuming I get them this [1188] many customers a month. This is more on [1189] the marketing and sales side of things, [1190] but most of my systems are marketing and [1193] salesoriented, right? So that is [1195] typically how I approach things. And now [1196] if you think about it, what do I know? I [1198] have like a road map of their entire [1200] business start to finish. You know, I [1201] can pattern match this against all the [1203] other businesses that I've helped. It's [1204] very trivial for me to say, okay, we [1205] could build that system to help their [1206] onboarding, that system to help their, I [1208] don't know, ad creatives, that system to [1210] help their lead genen. And then I also [1212] know, okay, assuming that I do all this, [1213] how much money am I realistically going [1215] to make the business? Well, if we do [1217] some very conservative estimations and I [1218] can help improve their client [1220] acquisition by, I don't know, three [1221] extra clients a month or something, [1222] they're each $15,000, I'm adding $45,000 [1225] a month in value to that business. Maybe [1226] I can charge 10 or $15,000 a month for [1228] my services. So, that in start to finish [1231] in a nutshell is how you take this [1232] consultative partnership based approach. [1234] And you also price yourself value-wise [1236] as opposed to, you know, you just [1238] pulling a number out of your ass. [1239] Hopefully that helps. Solah says, "The [1241] reason I follow you is because you stand [1242] out as a down to earth and real person." [1244] Thank you. No fancy hype, FOMO, [1245] emotionally hype videos. No, these are [1246] pretty boring. [1248] Uh, at least I got some hate earlier [1250] that said it was pretty boring. Instead, [1252] you sound like a regular guy making [1253] money using ASR. I appreciate you for [1254] that. Hell yeah. My question is, when [1256] reaching out to a new client, a [1257] first-time client, is it best to throw [1258] your offer right away in DMs? I'm asking [1260] because I'm currently doing outreach in [1261] LinkedIn email, outreach, and Upwork. [1263] And then you're talking about Instagram [1264] here. But what's the best way to reach [1265] clients on DMs? Throw your offer right [1267] away or start with a casual message with [1268] the client? Also, how long should an [1270] ideal conversation when the client pays [1272] take while in communication with that [1273] prospect? I'm curious to hear your take [1274] on things. So, just before we move [1275] forward, Solah, I think that it's really [1277] important to disamiguate or to [1278] distinguish between a client and a [1280] prospect. Okay? Because you're using the [1282] term client over and over and over here, [1283] but client is somebody that has paid you [1285] money for a service. Client is somebody [1286] that is giving you something basically [1288] in return for work that you were doing. [1290] You have progressed. They're no longer [1292] some prospect that you're pitching. This [1293] is somebody that like you're working [1294] with now. Okay? So, the way that I see [1296] things is basically, you know, if this [1298] is like the start, okay, of your [1300] relationship with somebody, they're a [1302] prospect here. [1303] And then you go to the point where they [1306] do something. I don't know, they sign a [1308] proposal. Okay, maybe this is some [1309] proposal signing event or some payment [1310] trigger or something like that. And only [1312] from here onwards are they a client and [1315] then maybe you end your working [1316] relationship or something. Well, now [1318] this is like a past client. Okay, just [1319] terminology wise, I think it's really [1321] important to know these because a lot of [1322] people misrepresent what a client is. [1324] They say, "Just signed a client for [1326] $10,000." And it's like, "All right, [1327] great man.$10,000. What are you going to [1329] invest all this money in? My god, let's [1330] spend all this money on X, Y, and Z." [1331] And then they're like, "Oh, I don't have [1333] the money yet." It's like, "Are they a [1334] client if they they haven't given you [1336] any money? Are they a client if they [1337] haven't signed any paperwork? Oh, no. [1338] They just said yes to me that one time." [1340] It's like they're not really a client [1341] yet. Right? So, this is the anti-hype or [1345] anti- FOMO that I always have to push [1347] back on in Maker School because [1348] everybody will say stuff like, "I'm [1349] chatting with my new client." And it's [1350] like, "Dude, they haven't paid you [1352] anything. There's no relationship or [1353] engagement there." Anyway, to answer [1354] your specific question, is it best to [1355] throw your offer right away on DMs? [1357] Um, yeah, totally. You need some [1361] reputation by building content [1362] followers, which will take time. I mean, [1363] no, I wouldn't worry about that. Just [1365] like if you're going to start DMing [1366] people, man, just start DMing people [1367] like on whatever platform you're using. [1369] And yeah, have your offer, have some [1370] sort of risk mitigation. Have some sort [1372] of like quick social proof win [1373] introduction, social proof, risk [1376] mitigation or or guarantee and then call [1378] to action, right? Like, is this worth [1379] your time? Can I give you a call [1381] tomorrow in order to chat about this? [1383] What's the best way to reach clients in [1384] DMs? Throw your offer right away or [1386] start with a casual message. Yeah, man. [1387] Just just throw your whole offer right [1389] away. through the whole pitch, you know, [1390] 100%. 100% through your whole pitch. [1392] Don't waste time with people by like [1393] trying to warm them up or whatever. Hey, [1395] I loved your last photo. Haha, let's [1397] keep in touch. Like any serious business [1399] person will not be really paying [1401] attention to that. Aiden says, "Hey, [1402] next. Greetings from Prague. Hello. As a [1404] 16-year-old just got into the automation [1405] space, never been on a sales call. Can [1406] you share some advice on sales and how [1408] to gain trust of way more experienced [1409] business owners?" So, don't let me fool [1412] you. It is hard to sell when you're that [1414] young. The median business owner age is [1417] probably going to be mid-30s. you're [1418] going to be less than half their age. A [1420] lot of people are going to look down on [1421] you just by proxy just just by virtue of [1423] the fact that you're young. When I [1425] started going door to door, I was pretty [1427] young, too. Like, how old was I [1428] actually? 20, 21. The thing is, I have a [1431] baby face. Maybe not as much anymore, [1433] but I had a hell of a baby face. So, I [1435] looked like I was actually uh I don't [1439] know if I want to pull that up at risk [1440] of showing you guys other photos. [1441] Anyway, go to yesterday's video and [1443] scroll like 80% 90% of the way through [1445] and I'll show you a picture of me at the [1448] time that I started doing doortodoor [1449] sales. I did not look I did not look [1452] very old. I looked pretty young. Most [1454] people probably pen me at like 18 or 19. [1456] So, the number one thing I got when I [1458] was going door to door and selling while [1459] I looked that young was like incredul I [1463] believe it's called. people were just [1464] like really inherently skeptical because [1466] I was just so young that they just [1468] thought I was some pthead teenager or [1470] whatever that was just having a go at [1471] him like they didn't really think that I [1472] was serious. So the most important thing [1474] that I would do is in order to dispel [1476] that notion right away have a keen [1478] understanding of where the business [1479] owner is coming from and have a keen [1482] understanding of how to present [1483] information in such a way that you [1485] answer a lot of the questions that that [1486] business owner is going to have like [1488] ahead of time. What do I mean by this? I [1489] mean, if you are talking to a prospect [1492] for the very first time, they've never [1493] talked to you before in their life, they [1495] have no idea who you are. The very first [1496] thing that they're going to be thinking [1497] about is, is this person a spammer or [1500] scammer? Basically, right? If you go to [1502] my email inbox, and I will show you my [1505] email inbox. Go to people selling me [1507] stuff here. Okay? The very first thing [1509] that I am trying to determine, and you [1512] guys can't see this. There we go. The [1514] very first thing I'm trying to determine [1515] is, are these people scamming me or [1517] spamming me? Okay, that's like question [1519] number one. And so what am I looking at [1520] when I look at outreach? I'm looking at [1522] like the subject line of the email, the [1523] teaser here. I'm looking at their name. [1524] I'm looking at any files they give me [1526] and stuff. And so that's the very first [1528] question. So you need to construct your [1529] pitch and information in such a way that [1531] they think that you are not a scammer or [1532] spammer. How do you do that? You do that [1534] by personalizing your outreach. If you [1535] personalize your outreach, it's very [1536] high quality and it seems as if to the [1539] person that is watching that you are not [1540] just blasting up a bunch of stuff out [1542] there. They won't think that you're a [1542] spammer or a scammer. Okay? They'll be [1544] more likely to actually, let's say, [1545] click on your outreach. So, what are [1546] some really shitty examples of this? [1548] Nishant, he says, "Want editor [1549] exclamation point. Exclamation point. [1551] Exclamation points. I edit videos that [1553] attract thousands of views. I work with [1554] several small and big creators and [1556] pulled in millions of views for them. [1557] Also, I did." What are you guys [1559] thinking? Huh? This is gladiator. No, [1562] this is spam, right? It seems like spam [1564] cuz it's not customized. It's not [1565] personalized. There's nothing here at [1566] all that makes it seem like this person [1568] is reaching out to me. It just looks [1569] like they're spamming into the interwebs [1571] and I'm like scared basically of opening [1573] this email cuz maybe there's something [1574] inside of them. Contrast that with this [1576] chick Paula Green. The title of this [1577] might be LinkedIn content, but then the [1579] teaser says, "Hi, Nick. I watched your [1580] video." And then she at least mentions [1582] the title of the video and then says, [1583] "And made 21 LinkedIn posts that you can [1585] use on your profile too dot dot dot." [1587] Then she attaches a PDF that says Nick [1589] Sarai space-space li. Okay. Now, how [1592] much more likely is this to be a real [1594] email versus Nishant down here, right? [1597] Like we're talking a thousand times more [1598] likely, right? So, at least I'm buying [1600] myself a click. Okay, great. So, that's [1602] the very first question that somebody's [1604] going to ask. you know, as a 16-year-old [1605] that's never really done this. Just put [1606] yourself in the mindset of a person like [1608] me. That's the very first thing that I'm [1609] trying to determine. Once I've [1610] determined that and that's all good to [1611] go, the next thing that we have to [1613] figure out, okay, is okay, so this isn't [1615] spam. So, who the hell is this person [1617] then? So, the next thing you have to do [1619] is you basically need to identify [1620] yourself and you need to answer that [1622] question. All right, so who is this? So, [1624] Paula didn't do a very good job of this. [1626] Paula just said, "Hi, Nick. I watched [1627] your video and made 21 LinkedIn posts [1629] you can use in your profile to build [1630] authority, audience, and engagement. [1631] Take a look and let me know if you want [1632] more." Paula is probably using AI to [1634] like pre-draft these PDFs, which is cool [1636] and I think it's a really cool system, [1638] but I'm still feeling a little bit [1639] disrespected here as somebody that's on [1641] the other end of her outreach. Okay, I'm [1642] going to get into the actual sales call [1643] and stuff later, but I'm still feeling [1644] pretty disrespected as somebody that's [1646] on the other end of this outreach [1647] because I still don't really know who [1648] Paula is. Paul's assuming that I know [1649] who she is essentially, and I don't. So, [1651] a much better way to do this to answer [1653] that second question is to say, "Hey, [1655] Nick, I watched your video blah blah [1657] blah and I made this for you. I am [1660] Paula. I do LinkedIn stuff and have been [1662] a longtime follower and watcher of your [1664] content. Just wanted to say, "Hey, and I [1666] know you're all about leading with [1667] value, so here's a bunch of stuff." If [1669] Paul had said that, I would have [1670] checkmarked. I would have answered that [1671] second question for me, and I probably [1672] would have been much more likely to [1673] actually want to work with them. Okay, [1675] so that's another really big one. Let's [1676] think about the third question. Once [1678] I've determined whether this is spam or [1680] not spam, and then once I've determined [1682] who the hell this person is, the next [1683] thing that I need to do is obviously [1685] figure out why the hell this matters to [1686] me, right? Like, uh, it's not spam. [1688] Okay, this person is some LinkedIn ghost [1691] writer. Okay, so why the hell should I [1694] listen to them and not all of the other [1695] LinkedIn ghost writers out there? And [1696] that's where you do something like you [1698] provide a lot of value. So that's where [1699] you say the LinkedIn post, you know, I [1701] made all this value. I linked the PDF [1702] and stuff like that. I mean, in Paula's [1703] case, she did like three out of the four [1705] steps. The last thing is you need to [1706] have some sort of ask. Now, in Paula's [1708] case, her ask is, "Take a look and let [1709] me know if you'd like more." The way [1710] that she's laid this out is pretty good. [1711] I'd say it's probably like, I don't [1713] know, 80th percentile in terms of [1714] outreach. Essentially, what her ask is [1716] is, "Do you want more?" But what she [1718] could have done is she could have [1719] phrased this in such a way to [1720] substantially improve the probability [1721] that I would have said yes. All she [1723] would have had to do here is say [1724] something like, "Take a look and let me [1725] know if you'd like more. If you want, I [1727] can draft up another 10. Just reply yes [1729] to this email or something or you know, [1731] just give me a thumbs up or something." [1732] Okay. Uh the value there is she's [1734] essentially just minimizing the friction [1735] involved in me saying yes to her and [1737] moving forward. And if all of these [1738] pieces come together, okay, and if Paula [1740] were to have written me the email that I [1742] just told you guys that I wish she would [1743] have written me, I 100% would have got [1745] back to Paula. You know, emails like [1747] this have like 10 15ish percent reply [1749] rates when they're done perfectly and [1750] they're super customized and you throw [1751] in an asset like this. Okay, so that's [1753] kind of step one. You're putting [1754] yourself in the mindset of the customer [1755] and you're basically inoculating against [1757] a bunch of questions that they're going [1758] to ask. So construct your outreach in [1760] such a way that is respectful of their [1761] time and that sort of like makes so that [1763] they don't really have to work in order [1765] to do the thing that you want them to [1766] do. Cuz if you have to do a bunch of [1768] additional work in order to complete the [1769] thing that they want you to do, you're a [1771] lot less likely to do it just cuz of [1772] friction alone. Now, you probably at [1774] least have some baseline level of trust. [1776] Now, when you get on the sales call, the [1777] sales call is basically everything that [1779] I've talked about regarding outreach and [1781] how to make yourself get noticed and how [1783] to like get somebody, you know, how to [1785] how to generate a lead. It's everything [1786] that I've talked about there just [1788] compressed into, you know, like face tof [1791] face sort of video call or something [1793] like that. Like, like it's everything [1794] that I just talked about where people [1796] are going to wonder, are you a scammer? [1797] Are you a spammer? Okay, well then [1799] great. Who the hell are you? Okay, [1800] great. Well, why the hell does this [1801] matter to me? And then, okay, great. or [1802] what the hell do you want me to do about [1803] it? It's it's you answering all of those [1805] questions, but instead of you doing it [1806] over text, like in an email or a DM or a [1808] Loom video, you're doing it face to face [1811] with that person. So, when you construct [1813] your sales script or your skeleton or [1815] however you want to phrase it, when you [1817] construct the strategy that you're going [1818] to use in order to convert people, just [1820] keep that in mind. The very first thing [1821] you have to do is you have to make it [1823] abundantly clear to them that you're not [1824] a scammer or a spammer. So, you have to [1826] show them some form of legitimacy. How [1827] do you typically do that? You say, "I've [1829] worked with all of these people before." [1831] Okay? It's very difficult to do at the [1833] very start line of your business. But [1834] there are some ways that you can get [1834] around that. You could say, you know, [1836] I'm part of the community. You know, my [1838] colleagues have hundreds of thousands of [1840] followers. My I don't know, my my [1842] mentor, my coach, right? You could [1843] reference some internships that you've [1844] had. You could reference some people [1846] that you may have talked to or worked [1847] with, like me, for instance. You know, [1849] one of my mentors is a 60,000 YouTube [1852] subscriber AI and automation guy called [1854] Nixive. Maybe you've heard of him. He [1856] told me to reach out because he wanted [1857] to talk about X, Y, and Z, right? These [1859] sorts of things are they're they're [1861] heavy on the implication, but uh you [1863] know, he told me to construct this sales [1864] call in such a way that you would trust [1866] me immediately. So that's what I'm [1867] trying to do right now by showcasing [1869] some social proof this that and that. [1871] It's really interesting when you get [1872] really meta with these people. So [1874] anyway, once you've verified that you're [1876] not a scammer or a spammer, the next [1878] step naturally is you need to answer the [1880] question, okay, great. Well, if you're [1881] not a scammer or a spammer, then who the [1882] hell are you? And that's where you might [1884] give some sort of pre-planned pitch or [1887] elevator sales 30 second scripted [1890] portion where you say, "Hey, you know, [1891] just to make things abundantly clear, so [1893] who am I? Um, I'm I believe is probably [1895] how I'm going to say your name. You [1896] know, I'm from Prague. I'm headquartered [1898] over here. We started the AI automation [1900] agency a year and a half ago. We got our [1902] roots with recruitment companies and [1904] from there we positioned our business as [1906] a way to help recruiters reach more [1908] employers, but then also connect with [1909] candidates using automated methods. We [1911] do this in a variety of ways like X, Y, [1913] and Z. And you know, I'm reaching out to [1915] you because I thought that there was a [1917] big opportunity given all of this stuff [1918] so that I could help you. So now what [1920] you're doing is you're basically taking [1921] this big long email. And then you're [1922] turning into a phone call if I'm being [1923] honest. The next question is a social [1925] proof question like I talked about. So [1927] now you're saying, "So let me tell you [1929] why you should take me seriously. Um, [1931] here's what I've done for this client. [1932] Here's what I've done for that client. [1933] Here's what I've done for that client." [1934] Again, if you don't have any of this [1935] yourself, you can always use, I want to [1937] say proxy social proof by virtue of your [1939] community, by virtue of people like me [1941] that have done this. You can't claim [1942] these wins as your own, obviously, and [1944] reputation and being honest is very [1945] important, especially if you're starting [1947] this young. You want to set up your [1949] track record for success early, but you [1951] can certainly showcase the value of [1953] these services based on what other [1954] people in the communities that you're a [1956] part of have done. And that's totally [1957] fine. And then from there, at the end, [1959] you need to make some sort of ask or you [1960] need to make some sort of pitch. So now [1963] you know you've answered all those [1964] questions for me except for the major [1965] one which is all right. I mean this [1967] sounds really good but what do you want? [1968] Right? Can we just get down to brass tax [1970] here? Am I signing a contract right now? [1972] Are you going to send me a proposal to [1973] read over? Are you signing me up on some [1974] sort of revenue share? Are we doing some [1976] sort of payer lead sort of thing if [1977] you're doing lead genen? Like what [1979] exactly is the pricing? What exactly is [1980] the offer? And so that's where you [1982] explain your pricing and your offer. [1983] That's where you say, you know, the [1986] simplest and easiest way um that I found [1987] to do this sort of thing is I charge [1989] people a monthly retainer for the [1990] implementation of these services. Here's [1992] what that looks like, right? You [1993] actually go line item by line item and [1995] then you say, "How does that sound?" You [1996] give them the floor essentially to give [1998] you the yes or the no. And the way that [2000] I usually do things is I usually give [2001] them a a proposal and then I actually [2003] don't answer objections and stuff like [2005] that unless they explicitly ask me and [2007] unless they're really easy. Like I don't [2008] actually try and close them on the call. [2010] I don't find that very valuable. I much [2011] prefer to close people both emotionally [2013] and logically. So I make them really [2015] like me on the call and then I go [2016] through and I do a bunch of scoping and [2017] stuff and then I send them the proposal [2019] immediately after so that you know when [2020] they make the decision to work with me. [2022] They don't feel pressured. They don't [2023] feel like they have to because there's [2024] some super crazy hardline salesperson [2027] that's on the other end of the line [2028] being like so why aren't you signing up [2029] today? You know what's stopping you from [2030] doing this? I've just always hated that. [2033] So I think that that's probably my whole [2035] sales methodology in a nutshell if I'm [2036] honest. That's more or less everything [2038] that I've done on every sales call for [2039] the better part of the last, oh god, I [2041] don't know, uh, 3 years. Um, I basically [2044] just try and answer those four [2046] questions. And I do it during my [2047] outbound outreach. I do it during my [2049] sales call. Hell, I even do it like [2051] during my fulfillment if you think about [2053] it. This is just a cycle that repeats [2054] itself over and over and over and over [2056] again. Verify that you're not a spammer [2058] or a scammer. Identify yourself, right? [2060] Give people a quick run through of who [2061] you are. Talk about projects that you've [2063] done that are similar or big social [2064] proof things that you've done that have [2067] verified that you are the sort of man [2068] for the job. And then ultimately you [2070] need to make sort of ask. You need to [2071] make some sort of pitch. So that's how [2072] you gain trust. That's how you um [2074] showcase a deep understanding and [2076] implied experience of working with [2078] business owners regardless of the fact [2079] that you're 16 years old. Hopefully that [2082] helps and hopefully you can take uh [2083] something away from that. And there you [2085] have it. I hope these answers have [2086] helped clear up some of the questions [2087] you guys have been asking me about how [2088] to start and scale an automation [2090] business. I hope it's clear that the [2091] industry is moving very quickly and the [2092] opportunities are just starting. Whether [2094] you guys are beginning your business [2095] with 100 bucks or you guys want to scale [2097] beyond 10k per month, the strategies [2098] that we covered today are literally [2100] exactly what people are using right now [2101] to make money. If you guys enjoy this [2103] format, you guys want more direct [2104] answers to your specific questions. As I [2106] mentioned, I literally check every [2107] single comment on my daily updates [2108] channel, I've never skipped one, just [2110] head to the second link in the [2111] description, subscribe, and then drop [2112] your questions. I promise I'll address [2113] them in all of my upcoming videos. And [2115] for those of you guys that are serious [2116] about accelerating your AI automation [2117] agency, if you guys want to join a [2119] community of people that are really [2120] making money right now with AI and [2121] automation, check out Maker School. [2123] We've got over 2,500 members as of the [2125] time of this recording. We have a 90-day [2126] accountability program where I literally [2128] guarantee that you'll have your first [2129] paying customer by the end of those 90 [2131] days or you get your money back. So [2133] yeah, join. Hit that subscribe button if [2135] you guys haven't already.

Video: https://www.youtube.com/watch?v=T9diMzLIpqQ
Title: Sell These 3 Simple AI Automations for $1.7K to B2B Agencies
[0] Here are three boring AI automations you [2] can sell right now to B2B agencies, [4] digital marketing companies, and SEO [6] businesses for 1.7K a pop or up. I built [8] these using a combination of nadn and [10] make.com. And in this video, I'm just [12] going to walk you through how they work [13] and why you might want to sell them. [14] Obligatory. I have all these templates [15] hosted on Maker School, my online [17] community, where I guarantee that you'll [18] get your first paying AI automation [20] customer in 90 days or your money back. [22] There's no risk involved, so definitely [23] check that out in the description when [24] you have a chance. The first system is a [26] Google Slides AI proposal generator and [28] a Panda do AI proposal generator. I [30] offer two options here just because in [32] order for the Panda doc AI proposal [34] generator to work and it's a lot higher [36] quality, believe me, you do have to pay [37] a fair amount of money. Google Slides on [39] the other hand is completely free. So I [40] just wanted to give people here options [42] on what to use. In a nutshell, the way [43] that this works is for those of you that [45] are unfamiliar with agency sales [47] process, usually it involves some sort [48] of discovery call or a closing call. [50] basically some sort of transformation [52] event where the salesperson or the [53] agency tries to guide a prospect through [56] their pain points and why the agency is [58] the perfect fit to solve those pain [59] points. And in order to do so, usually [61] they have to generate some sort of [62] proposal. Now, proposals are very [64] laborious and typically if you want to [65] do them by hand, they take a fair amount [66] of time. You got to get the wording [68] right. There's also a fair amount of [69] design involved. What this system does, [71] both of them, is this automates that [73] process almost completely for you. So [75] that all you need to do is get a [76] proposal template and then we have AI [78] generate everything in the prospect's [80] own tone of voice and words so that by [82] the end of a call or hell, even before [84] the end of the call, the salesperson can [85] have a beautiful looking high-quality [87] proposal all ready to go to put [89] immediately in the prospect's hands. And [91] the reason why this is valuable is [93] obviously you save sales administration [94] time which helps the company because now [96] your salesperson's time is spent doing [98] things that matter like talking to [99] customers and not things that don't [100] matter like generating proposals. But [102] more importantly, the sooner that you [103] can get something to a customer [105] typically the higher the conversion rate [106] in a nutshell. Okay, enough talking. How [108] does this actually work? Well, first you [110] click test workflow. And as we see [112] there's a sales call logging form over [114] here. So the way that this works is on [116] the call with the prospect what the [117] salesperson will do is they'll ask them [119] a few questions. They'll say, "Hey, what [121] was your website?" "Okay, awesome. So, [123] run me through what your problem is." [124] Right? Then you'll press on their pain [125] points and then you'll position some [127] sort of solution. While you position [128] that solution, if it's a custom project, [130] you usually come up with some sort of [131] scope and then in your head as a [132] salesperson, you'll have some cost and [133] you'll also know how soon you can [135] generate it. So, I've actually had AI [136] just help me template out this stuff cuz [138] I don't want to actually have to jump on [139] a sales call in order to get all this [140] data. So, let me just copy and paste the [143] problem. And the problem in this case is [144] client spends 10 hours a week manually [146] processing inbound form submissions, [147] triaging leads, and updating their CRM. [149] Our solution as an AI automation agency [151] is going to be an automated workflow [152] that captures form submissions, scores, [154] leads, and then updates the CRM. I'm [156] going to paste the scope. I'm going to [157] paste in the cost. And then I'm also [159] going to paste in the how soon. And when [161] I click submit, what's going to happen [162] is this is now going to pass the form [164] that we filled out to AI. And now it's [166] going to generate a bunch of proposal [168] copy for us. What does the proposal copy [170] look like? Basically, this we have a [171] bunch of variables like proposal title, [173] description name, one paragraph, problem [175] summary. This depends on the way that [177] you set up your particular template, but [178] I'll give you guys a free template that [179] you guys can screw around with to edit [181] to your needs. And once we have all of [183] these variables here, all we do is we [186] replace fields inside of a pre-existing [189] Google Slides template. And the end [190] result, if I go to my email is you send [193] an email to the prospect alongside a [195] Google Doc. And if they open it, it [197] looks something like this. So, automated [199] lead management for 1 second copy [200] efficiency boosting workflow automation [201] to streamline lead capture and [203] management. So, I just got this template [204] directly off of Google Slides. Feel free [206] to do whatever the heck you want to it, [208] but here we have the automated lead [209] management for 1second copy. Efficiency [211] boosting workflow automation to [212] streamline lead capture and management. [214] As you guys can see, this template's [215] quite pretty. And yeah, the text all [217] fits. It's pretty sexy. Imagine [219] receiving this as somebody that's [220] suffering from this exact same problem. [222] And having everything written out in [223] such a way that makes it seem as if the [225] person was reading your mind the whole [226] time. That's sort of the energy with [228] this. We even go as far as to have like [230] pricing connected and then give people [232] next steps. That's how the Google slides [234] generator flow works. This is an example [235] of the pandoc flow. The pandodoc flow [237] works the exact same. It's just when we [239] generate the proposal copy, we do so [240] with slightly different format. [242] Regardless, then what we do is we send [243] it to pandoc using a panda API call. [246] This is the slightly different part [247] versus the Google slides. Like Google [249] slides actually has this built-in to [250] naden whereas with pandoc you have to [252] kind of do a more circuitous path. But [253] the end result is if we go back to our [255] email and then we open up the panda doc, [257] we have a highquality proposal generated [259] in a slightly different template that [260] looks something like this. that includes [263] basically like a customized letter that [265] we've written to them alongside a bunch [267] of additional work here. Okay, so as I'm [270] sure you can imagine, you guys can [271] customize this to your own liking and [272] make this even better than you guys see [274] here. The second system is a completely [275] automated follow-up system that's [277] perfect for B2B agency sales processes. [280] So this is the system. The way that it [282] works is you basically have a CRM as the [284] data source. Now, what CRM am I using as [286] the data source? I'm just using Google [288] Sheets. The reason why is because Google [290] Sheets is simple. It's straightforward [292] and is free. You don't have to use [293] Google Sheets, though. You could swap [295] this out for whatever you want. Trello, [296] ASA, ClickUp, what have you. This is [299] what my CRM looks like. So, we have a [301] first name field, a last name field, an [304] email field, company, phone, lead [306] status, source, industry, notes, and [309] then the important one here is the last [311] touch field. And this just represents [313] the last time you've had some sort of [314] back and forth with the prospect. A lot [316] of CRM track this stuff for you [318] automatically. I just built a custom [320] last touch column here in Google Sheets [321] to show you how this would work. And the [324] essentially the way that the system [326] works is every day we're just going to [327] check this field, evaluate the last [330] touch date, and just see how many days [332] has it been since the last time we [333] talked to the prospect. If it's over a [335] certain number of days, well, then we [336] just follow up with them. And then that [338] field also gets updated. So, what does [340] this actually look like? To start, we [342] search the rows. Then we set a variable. [344] Well, this variable is just the date. [346] So, we use a little bit of custom date [347] logic here. And the parsing is nowhere [349] near as big of a deal as it looks like. [351] This looks really scary from the outside [352] end, but it's not. And then what we do [354] is we actually grab all of the email [356] history that we have with the prospect [359] and then feed that into AI. The reason [361] why we grab the email history from the [363] prospect and feed it into AI is so that [365] we know in what context the follow-up [367] message should look like and seem. So, [370] this is a big prompt that I put in. This [372] is some more text where I'm providing [374] it. the conversation history here which [376] I'm aggregating from the get sent and [378] get received. Then ultimately in my case [380] I'm creating a draft but I'm sure you [382] guys can imagine in your case you guys [383] can do whatever you want. You guys could [384] even automate the sending of this. So [386] I'm searching through all the Google [388] sheets. It identifies one of these [390] records as not having been followed up [392] with or touched in 4 days. And then what [393] we're doing is we're grabbing all of the [395] history of the email address [397] communications that we've had. So [398] basically, every email that I've sent to [400] this prospect and every email that I've [401] received from this prospect just pops up [403] immediately here. Then we feed all that [406] into AI. And once this is done, now all [408] I have to do is go back to my drafts, [410] open them up over here, scroll up to the [412] top, and just say following up. And as [414] we see, we now have a customized email. [417] This specific email doesn't reference [419] anything in prior emails, but the system [421] does. And all we're doing is we're just [422] checking in after the chat, seeing if [424] they have any other questions or if Tom, [426] in this case, is ready to move forward. [428] So, the reason why systems like this [429] work so well is because they take into [431] account the context. For one, two, the [433] email follow-up isn't always going to be [434] the same email follow-up. It's going to [436] be dynamic. It's going to be unique. And [438] then three, this is probably one of the [439] simplest formulations of an email [441] follow-up system. You can set two or [443] three routes. In my case, I've done 4 [444] days, 8 days, and 14 days. And then just [446] have this run once per day. I'm saying [448] every day here at maybe 8:04, so it [450] doesn't always seem like you're doing it [452] at exactly 8. And yeah, the value in [454] this is now you just have a system that [455] automatically follows up, takes into [457] account the last follow-up as well, and [458] it'll just always be different. It'll [460] always be unique. And this is a very [461] simple and straightforward way to [462] squeeze another 10 to 15% out of a [464] salesunnel. The third system is a cyclic [466] content generator. This is something you [468] could sell to any contentbased business, [470] any SEO business, really any sort of [472] like brand as well that needs to [474] generate content with any regularity. So [476] the way the system works, and I've [477] actually already triggered this cuz it [478] takes a fair amount of time, is a simple [480] form pops up asking you for a keyword. [482] So I put in the term AI automation. It [484] also asks for an email and I put in [486] Nicholas@gmail.com just my private [488] email. From here we have a number of [490] things that occur. The first is we [492] actually feed an open AI call using the [495] web search API that goes and it finds [497] outlines of content on AI and [500] automation. Okay. The reason why this is [502] really valuable is using the outlines we [505] then grab citations that allow us to [508] have statistics basically relevant to [510] the pieces that we're going to generate. [511] So instead of us just hallucinating [513] things, now we're actually going off of [514] real data. From there, we extract and [516] format these two pieces of information [518] just using AI into an intermediary [520] format that's good for us. And this is [522] really the juice of it. What we do is we [523] feed all that information into an open [526] AI call that says your task is to [527] generate a high-quality comprehensive [529] outline for an article on a given topic. [531] The topics provided to you along with [532] three outlines of other articles that we [534] scraped from web as well as a bunch of [535] citations with oneline conclusions. your [537] job, digest these articles, understand [539] the citations, generate a new outline, [541] make sure your outline is significantly [542] better, then ensure you're not repeating [544] what the outlines are, but you [545] effectively encapsulate the concepts and [546] ideas they're talking about in your new [548] mega outline. Okay, we then generate the [550] mega outline. So on the right hand side, [552] as you guys can see, we've now generated [554] the mega outline. I don't know why I [556] don't use the schema view, I guess, so [557] that I can actually scroll through this. [558] This mega outline is written in markdown [560] format, and you guys can see it actually [561] includes a bunch of links, and the links [563] there are super valuable. And a lot of [564] people include links in AI generated [566] content, but the second you have [567] citations, you both significantly [568] increase the discoverability because [570] it's better for SEO. And two, you also [571] just ground the content in fact. Now, [574] the real juice aside from the outline [576] that's being generated is we will take [577] this whole outline. Then we just [579] separate it based off the headings. And [581] then for every heading, what we do is we [583] just write a section specifically for [585] that heading. So usually when you [587] generate content, you have to trade [588] things off. It's always a trade-off [590] between how much content you're going to [591] generate and then the depth that you're [592] going to be able to go into in any one [594] individual part of the content. But this [596] cyclic content generator allows us to [598] get by that. We don't have to do that [599] anymore. We can just actually generate [601] every section super deeply, okay? And [604] then generate the next section super [605] deeply and the next and the next and the [607] next over and over and over and over [608] again. And then the final piece you can [610] just weave together. In this case, we [612] don't even weave it together because the [613] quality is good enough that you don't [614] have to. From there, I have a limit [615] node. And you'll notice that I put a lot [616] of limit nodes in NAN flows just because [618] they make testing a lot easier. Then [619] from here, what we're doing is we're [621] actually taking the previous section and [623] we're feeding it into another AI call. [625] And the purpose of this AI call is [626] basically just to summarize the below [628] article in three sentences. The value [630] there is we can then feed it into an [631] OpenAI image generation node which then [634] goes and it generates us some image. So [636] in our case, we've generated this Aentic [638] AI cute little bubbly thing and we're [641] actually going to put that in our [642] article. So, not only are we going to [643] have citations and sources and links, [645] we're also going to have high quality [646] images. From there, we do a little bit [647] of data formatting and logic. And then [650] we do a bunch of Google Drive steps. We [652] create from HTML file, download it to [654] NAD, reupload it to drive, delete the [655] HTML file, and then share the link in [657] the email. Why do we have to do these? [659] This is just a quirk of the way that the [660] Google Drive API and NAN work together. [663] The end result though is if I go to my [664] email, you'll see there's an item shared [666] with me, AI automation, navigating the [667] future of intelligence. And [669] unfortunately, you can't see the HTML [671] render as markdown here, but if I click [672] open with Google Docs, we then have our [675] whole article. Now, this article doesn't [677] look super sexy. You see, we got that [678] cute little bubble um right off the bat. [680] So, you can apply a couple of formatting [682] changes if you want. You can also just [684] do this procedurally using the API, but [686] as we see, we actually get some [687] citations. Artificial intelligence is [689] rapidly evolved from a supportive role, [690] functioning primarily as a helpful [691] co-pilot, enhancing productivity to [693] systems capable of autonomous [694] decision-making, effectively placing AI [695] in the pilot seat. This transition has [697] brought forth the concept of agentic AI [699] defined as systems capable of [700] independent decision-making and actions [701] without direct human oversight or [703] intervention. Then we say the shift [705] towards greater autonomy underscores an [706] exponential growth trajectory in a [707] automation market projections here's the [709] citation estimate that the A automation [711] sector will surpass 237 billion by 2025. [714] Now aside from just some minor sizing [716] issues here which again you can call the [718] API for if I just make these a little [720] bit smaller you know it looks a little [721] bit better. I'm generating images in a [723] very particular style. I wanted [724] something that was just like universally [726] okay. As you see, there's a bunch of [727] images and links in the article, if I [728] click on some of these links, these are [730] actually like real live citations. And [732] then so, you know, instead of it just [733] being like a bunch of hallucinations, we [734] actually have like real data here. So, [735] in this case, it was exemplified by [737] adaptive tutoring systems like Khan [738] Academyy's Conigo, which supports both [740] individual students and educators. And [741] then it links to the time.com article [743] for KIGO. So, yeah, that sort of system [745] can be extraordinarily valuable in the [746] right hands. I obviously have my own way [748] of prompting and asking it for things. [750] And this is by no means the best way of [752] prompting it and asking for things. You [753] can also generate much higher quality [755] images than the particular [756] implementation I'm doing here if you [757] just call like the GPT40 image [759] generator. I'm just doing this to save [761] on token costs and stuff. But yeah, [762] that's another really really powerful [763] system that you could sell to basically [765] anybody in the digital space. Hopefully [766] you guys found that valuable. Definitely [768] if you want to sell AI automations and [770] make a living off of it, check out Maker [772] School. Our most recent win was from [773] Salvador Stoce, who just landed his [776] first client at age 15 in two weeks [778] after getting started with the program. [779] I guarantee your first a automation [781] customer in 90 days or you don't pay a [782] scent. That's kind of like the promise [784] of the program assuming that you follow [785] the steps. So yeah, we're a great [787] community and I'm increasing prices [788] every 100 members to reflect the [789] increased value. So definitely get in [791] while you can. Aside from that, if you [792] guys could do me a big solid like, [794] comment, subscribe, do all the fun stuff [795] that bumps me to the top of the algo and [796] I'll catch you on the next video. Thank [798] you very much for making it to the end [799] and have a lovely rest of the

Video: https://www.youtube.com/watch?v=uBCT_qybLSQ
Title: Sell These 3 "Boring" AI Systems for $2.2K to Recruiters
[0] Today I'm going to show you three boring [1] AI automations you could sell to [2] recruitment agencies, HR departments, [4] and anybody doing hiring for 2.2K a pop [6] and up. I built these in a combination [8] of make.com and naden, as well as a few [11] thirdparty platforms like Phantom Buster [13] and Ampify. And I'm going to run you [14] through how all of them work in a [16] second. If you guys want these [17] templates, get everything you need in [18] Maker School, my 0ero to1 accountability [20] roadmap where I guarantee you your first [22] paying a automation customer in 90 days. [24] So the very first system is composed of [26] a few Make.com automations. To make a [28] long story short, what these do is these [30] modify a hiring pipeline built in [32] ClickUp. Now, ClickUp is just a standin [34] for whatever pipeline, CRM, or project [36] management software you want to use, but [37] in my case, I like using ClickUp. It's [39] pretty straightforward and pretty easy. [40] What I've done here is I built a hiring [42] pipeline that you can very easily slot [43] into any sort of recruitment or HR [45] workflow. On the lefth hand side here, [46] we have the names of the applicants. [48] I'll show you guys how people get into [49] the system in a second. Then, we have [51] the date that their records were [52] updated. From there, we have the status, [54] and I'll show you guys a number of [55] statuses in a moment. a portfolio, email [58] address, a source because you can hire [59] from multiple different places, the role [61] that you're hiring for. You know, if [63] you're a tech recruiter, then obviously [65] these are probably going to be [66] techreated. If you're a services [67] recruiter, they're probably going to be [68] services related. The location, and then [70] finally, a rating. Now, the way that [72] this pipeline works is this is just an [74] organizational tool that allows you to [75] keep on top of all the people that are [77] coming into the recruiting flow. And so, [79] what we're doing is we're separating [80] them into a number of statuses. What [81] I've done is I've built up a pipeline [83] that's composed of a new applicant [85] status for people that just fill out a [86] form, which I'll show you in a second, a [88] reviewed status, a request, trial, [90] review trial, onboarding, hired, not a [92] fit, and then complete statuses as well. [95] The way that this works in a nutshell is [97] there's a form that you fill out. Now, [98] I'm using an example from literally my [100] own company. So, this is what I get [102] people to fill out when they want to [103] work with me. That includes an [104] application. What you do is you select [106] the role you're applying for. You learn [108] a little bit about the person that you [109] are doing the work for. You enter in a [111] bunch of contact details. You link to [113] your best work. So, usually that's some [115] sort of portfolio, Google Drive, [117] website, whatnot. You then have some [119] specific questions about your [120] availability. You then put in questions [122] related to where you're based. You then [124] do some textual based questions where [126] you answer questions about your [127] experience. And then I also like getting [129] people, and this is just something that [130] I do for my own business. You don't have [132] to sell this to recruiters. I like [133] getting people to think a little bit [134] outside the box and give me a specific [135] idea or improvement that they would [137] implement in my business. Now what [138] happens when I click submit is this then [140] fires a watch responses type for module [143] which gets that event. I then sleep a [145] little bit and then I list those [146] responses. This is just a design pattern [148] in make.com. It makes it a lot easier to [150] test flows. You don't technically need [152] either of these steps but I like to have [153] them. Then there's some custom logic [155] that allows us to select roles. Then [157] finally what we do is we actually create [158] the task inside of ClickUp. So now if I [160] go back to my hiring pipeline you'll see [162] that I've now been added as an entry. [163] Okay, including my email address, my [165] portfolio, and a bunch of other relevant [167] info. Now, the reason why recruiters [168] love this sort of stuff is because [170] you're automating a big chunk of most of [171] their work. For instance, if I were to [173] have a second automation now that [175] monitored this pipeline, what I could do [177] is I could set up rules where when I [179] move their status from new [180] applic, I automatically trigger an [183] automation that then gets the project [185] information and then sends it over via [187] email to the prospect. So, now you have [189] some sort of two-way communication going [191] on. Then, for instance, I might send [193] them an email saying, "Hey, we really [194] liked your portfolio, and I'd love to [196] have you put together a paid trial for [197] us. Here's a link to a form which [199] explains the trial, gives you the brief, [200] and tells you how to upload the finished [202] product." So, a lot of recruiters now [204] have multi-step flows where it's not [206] just an interview. You'll actually ask [207] them to do something for you. So, in [208] this case, I'm just giving you guys a [210] simple example with a video editor [211] trial, but I'm sure you guys can imagine [212] you guys could build out any sort of [214] trial logic whatsoever with the tools [216] that I'm giving you. So, first, we track [218] your time using Clockify. Your task is [220] to do a 15 to 30 second clip. Here is a [222] bunch of information about the specific [223] task. And now all you do is you just [225] upload the link before export. [226] Recruiters love this sort of stuff again [228] because you were just automating actions [230] based off of a pipeline. All we did was [231] you just change the status from new [233] applicant to request trial. Then it [234] actually went and sent an email to our [236] person with a link to another form that [238] they can fill out. Well, as I'm sure you [239] can imagine, what you could do is you [240] could hook up logic so that when that [241] other form is filled out, they move to [243] another stage of the pipeline and so on [245] and so forth. This next system is built [246] in NAND and what it does is automate the [248] sending of connection requests with [250] customized ice breakers using a [252] thirdparty platform called Phantom [253] Buster that actually connects directly [255] to your LinkedIn account, uses your [257] cookies and then automates actions like [258] the sending of connection requests. The [260] way that it works to start is if you [262] click this test workflow button, a form [264] will pop up and it'll ask, hey, what [265] sort of audience are you looking to run [267] a campaign on? So here I can actually [269] specifically say I'm looking for digital [271] marketing agencies in the United States [274] with 1 to 10 employees. When you click [276] submit, what ends up happening is now we [279] feed into AI a request to generate a [282] search URL. What we do then is this is a [284] customized search URL in a platform [286] called Apollo that allows us to look [288] specifically for digital marketing [291] agencies with a range of 1 to 10 [293] employees in the locations that we've [295] specified. And then we actually feed [296] this directly into a platform called [298] Appify, which allows us to run a scraper [300] based off of an Apollo URL and then go [302] onto this platform right over here and [305] then generate giant lists of people [307] including their email addresses and [308] importantly for us, their LinkedIn [310] profiles. If you go into the Appify back [312] end, you can actually see legitimately [314] email addresses being generated as we [316] speak alongside LinkedIn URLs. And we're [318] going to use these LinkedIn URLs to [320] automate the sending of our connection [321] requests with Phantom Buster. From [323] there, what we're doing is we're [324] exporting those 500 items. And then in [326] my case, I just wanted to test this for [328] you. I'm limiting it to three items. All [330] you guys need to do is just delete this [331] and everything else works the same. And [333] then we're actually personalizing [334] outreach based off of their Apollo and [337] LinkedIn information. Queuing it up in a [339] good output format for us to add to a [341] Google sheet. This Google sheet just [343] contains a giant list of all of the [344] information that we put in. We're [346] aggregating this. And then we're [347] triggering a Phantom Buster agent next. [349] Now, Phantom Buster, as you guys might [350] be aware, is similar to Appify in so far [352] that allows you to automate actions on [354] various accounts. But whereas Appify is [356] mostly about scraping things. So, it's [358] sort of one way, Phantom Buster is a [359] little bit more unidirectional. What you [360] do is you provide it your cookie and [362] then Phantom Buster can actually go and [363] take actions on your behalf on LinkedIn. [365] And that's what we're doing right now. [366] Essentially, we are now processing those [368] LinkedIn profiles that I just shot over [370] and then we're sending them a customized [372] icebreaker along with that connection [373] request just to significantly improve [375] our odds of actually landing them. As [376] I'm sure you guys can imagine, [377] recruiters love this sort of stuff [378] because they spend most of their time on [379] LinkedIn anyway. The average recruiter [381] is on LinkedIn basically 247, both to [384] post jobs for hiring purposes, both to, [386] you know, connect with people in various [388] industries that I think might be good [389] fits and then also to source employers [391] as well. So, this is a very cool way [393] that they could actually source clients [394] for their own business. This last system [396] is what I call the search intent [397] scraping system. If you guys want a [398] detailed example of me setting up this [400] exact system live, like I actually walk [402] you through the logic from zero all the [404] way to one with a completed system, just [406] check out the video that I'm linking [407] right now. This is a summarized version [409] of it obviously, but I want you guys not [410] just to know what the end product looks [412] like, but also know how to recreate it [413] if you're forced to. Anyway, the way [414] that the system works is we rely on [416] Appify once again, and what we do is we [418] feed in a LinkedIn jobs or search URL. [421] So this is for instance a search for BDR [424] which stands for business development [426] representative where we're looking [427] specifically for companies that are [429] hiring business development reps. Why is [431] this valuable for recruitment agency? [432] Well, if a company's hiring business [434] development reps and if my whole job as [436] a recruitment agency or a recruiter is [438] placing qualified candidates in [440] companies that are hiring for particular [441] roles, isn't that pretty serendipitous? [443] I mean, now I have a big list of people [444] that I could basically pitch my services [446] to, right? So what this system does is [447] it takes the output of that search and [450] I'm going to run that right now. passes [451] it to a scraper, in our case Appify, [454] then it runs that scraper, exports the [456] data, and then allows us to enrich and [459] get the email address of the CEOs and [462] decision makers that are posting these [464] jobs in the first place. From there, [465] what we do is we do automated research [468] using a AI tool called Perplexity. There [470] are a variety of other AI tools you [471] could use for this purpose as well. Then [473] we generate automatic ice breakers again [475] customizing the first step of our [477] outreach before finally automatically [479] adding them to a cold email campaign in [481] our case instantly. But you don't have [483] to add them to a cold email campaign. [484] You can just add them to a database. [486] This is the database right here. And so [487] it's already filling with companies, [490] their names, the locations, specific [492] information about the salary. Then most [494] importantly for us, it's filling with [496] the email addresses, full names, and a [498] bunch of other information of the CEOs [500] and basically the decision makers that [502] are responsible for putting this job out [503] there. From the first scenario, now [505] we're researching the decision maker. [506] And so we actually ended up with a bunch [508] of information about the person that we [510] were doing the research on behalf of. [512] We're feeding that information into AI, [514] asking it to write us a customized [516] oneline icebreaker using the information [518] that we just got as a result of that [520] perplexity search. Then what we're doing [522] is we are automatically adding them to a [523] campaign and then you know as you've [525] seen populating a spreadsheet. So that's [526] it. Thanks so much for making it to the [528] end of the video. Hopefully you guys got [529] value out of these systems. I built them [531] as I've mentioned in a variety of no [533] code tools but this isn't the only way [534] that you can build the systems that I've [536] talked about and it's not certainly the [537] only systems that you could build to [538] sell to recruiters. My goal here is just [540] to make your life really easy. I just [541] want to give you systems out of the box [542] that I know already have value and that [544] I and many other people in my [546] communities have sold. Speaking of [548] communities, the most recent win was [549] from the lovely Lisa Pilot, who just [551] landed a $4,800 deal 18 hours ago. She [554] joined the community just a few weeks [555] back and is already generating multiples [557] on what most people can realistically do [559] with full-time employment. So, if you [560] guys want to achieve results like that [562] yourself, definitely check out Maker [564] School. It's my 0ero to1 accountability [565] roadmap where I legitimately just walk [567] your hand through a series of daily [569] steps to take you from somebody that's [570] never sold AI and automation before to [572] somebody that has now successfully [574] achieved their first, second, or third [575] clients. Regardless of background, [577] regardless of where you're coming to the [578] program from, thanks again. Please do me [580] a solid like, subscribe, do all the fun [581] YouTube stuff that gets me to the top of [582] the algo. And I will catch you on the [584] next video. Backs.

Video: https://www.youtube.com/watch?v=TogW_Ivkp1Y
Title: Why Technical Skills Won't Get You AI Automation Clients
[0] A lot of people that watch these sorts [1] of videos are extraordinarily technical [3] and they're really talented at what they [4] do, but they can't for the life of them [6] build a business around it. So, in this [8] video, what I want to do is I want to [9] explain to you why technical skills will [11] not build your AI agency. And if you [13] guys actually want to take the skill set [14] that you've developed in AI and [15] automation and turn that into a [17] business, you need a fundamental shift [19] in the way that you approach things. So, [20] first of all, I have three little [22] secrets for you. The first is that [24] clients actually can't distinguish [25] between good implementations and [27] exceptional technical implementations, [28] which means all you realistically need [30] to do is get to good. Don't worry about [31] getting to great. Speaking of technical, [33] many of you guys will probably recognize [35] this sort of graph. This is called a [36] sigmoid. And essentially what it means [38] is they're diminishing returns after a [40] certain amount of improvement. So if [42] this over here is your skill and this [45] over here is the amount of time that [46] you're dedicating towards it. Notice how [48] after you achieve a sufficient amount of [50] skill, more time doesn't actually [52] meaningfully make you better. This is [54] where the vast majority of you guys [55] should stop. Okay? Unfortunately, a lot [57] of very technical people keep on going [59] and spending more and more and more time [61] in La La Land getting better at stuff [62] that doesn't actually meaningfully [64] impact your ability to generate money. [65] What does that mean? It means that [66] technical skills are necessary, but [68] they're insufficient for agency success. [70] So once you have some technical skills, [72] you don't need to focus on the technical [73] skills anymore. When you obsess over [75] your technical skills, you create a [77] perfectionist paralysis effect and that [79] prevents your business growth. I'm not [81] speaking into a void here. I'm sure many [82] of you guys totally understand what I'm [84] trying to say. Some additional points, [86] advanced technical knowledge doesn't [87] actually create any revenue until it's [89] paired with business systems. This is [90] related to that idea of technical skills [92] being necessary but insufficient. And [94] then also to be honest, the real [96] challenge here isn't distribution or [98] marketing. The real challenge is not in [100] creating the AI product itself. As [102] technology and AI in particular grows [104] better and better, the ability for a [106] completely random person with zero [108] technical skills to recreate the thing [110] that you've spent your entire life doing [111] increases. And so, as unfortunate and as [114] hard as it is for us to accept, our [116] ability to do really complex technical [118] things is no longer the number one prize [120] thing that we should be focusing on. [121] Instead, we should be focusing on [122] distribution, marketing, and business [124] skills to be pragmatic. So, here are [126] some signs that you guys are stuck in [127] the technical trap. And as you can tell, [129] there are quite a few. The first is [130] you're watching too many courses, but [132] you haven't yet reached out to a single [133] potential client. And yes, I mean [135] courses like mine. I mean online YouTube [136] content where people show you things, [138] but you're not actually taking that [140] stuff and doing something with it. [141] Knowledge only matters as much as it [143] converts to action. Next is you [145] regularly postpone client outreach [146] because you feel like you're not ready [147] yet or you just need to learn one more [148] thing. In reality, you will never be [150] ready. There are many situations in [152] which I do not feel ready. If you really [154] want to crush it, you have to become [155] comfortable not knowing the thing right [157] now. And then you have to become [159] confident that future you will figure [161] that thing out. That's how current [163] marketing works. Another big gotcha is [166] when you invest more time improving [167] systems that already work versus finding [169] new clients. Because diminishing [171] returns, as I mentioned above with that [172] sigmoid, right? You improving the system [175] by 1% will take 10 times the amount of [177] your energy every single percent that [179] you do. Another big issue is when you [181] feel uncomfortable talking about [182] business outcomes rather than technical [184] implementations. I feel like a lot of [185] you guys are probably in that camp. And [187] the last thing is when you judge your [188] progress by your technical capability [190] rather than your revenue growth. If [192] we're being pragmatic here, there is [193] like knowledge and curiosity and solving [196] that problem. And then there's also [197] money and revenue and income and solving [199] that problem. And if you guys want to [201] turn something into a business, that's [202] the thing that you ultimately care [204] about. You don't actually care about the [205] knowledge and the curiosity and the [207] technical expertise. Okay? We should be [209] judging people by the thing that we care [211] the most about. Okay? And if you care [212] the most about technical capability, [214] that's cool, but don't expect to make a [215] ton of money with that. Okay? So, here's [217] a little SOP that you guys could follow. [219] Learn technical skills. Once you've [221] learned it sufficiently to deliver [222] value, then you can move on. If not, [224] then just learn some more technical [226] skills. This number here is way less [228] than you think. You don't need to be [230] 100% certain of how to build a system. [231] You only need to be 70% certain. So, [234] until that you are at that 70%, sure, [236] keep learning. But the second that you [237] find yourself thinking, I mean, man, I [239] don't really know exactly how I do it, [241] but I feel like I got a reasonable [242] handle on things. Move on. Start [244] building business skills. Start [245] developing client acquisition. Start [247] doing outreach. Acquire your first one [248] to three clients, and then start scaling [250] your agency revenue. You know, the [252] really cool thing, as you scale your [253] agency revenue, you will inevitably have [255] more resources available to you, and you [257] will actually be able to do things like [258] take time off if you so desire, then [261] spend that added time learning more [262] technical skills if curiosity is the [264] thing that you're trying to scratch. [265] Okay? But everything starts with the [267] money to be honest with you. And if you [268] don't have any money and if you don't [269] have any clients, then uh what you're [271] doing is you're not running a business. [272] You're basically just doing a hobby [273] technical project. All right. So another [275] thing to focus on is outcomes over [277] technology. I know I talk about this a [278] lot, but I just want to stress it again. [279] The technology isn't very important. [281] When you communicate in a technical [282] language rather than in business [284] outcomes that creates an immediate [285] disconnect with potential clients who [287] care about results on implementation [288] details. The way that a client sees your [290] system, as crappy as it is to say, is [293] basically as this. It is a black box [295] with a bunch of money labels on the [297] side. The client puts in $5 and then the [300] client expects to see $50. All they care [303] about is the relationship between the $5 [305] and the $50. They don't actually give a [307] crap about what goes on in between. Have [309] you guys ever seen that meme where it's [311] like step one do this, step two question [313] mark, question mark, question mark, step [315] three profit. That's exactly how you [317] guys should conceptualize the system [318] that you're building. The only thing [320] that matters to the client is that step [322] one and then that step three, not really [324] step two. And even if they do express [326] interest in that, they're expressing [327] cursory interest and don't actually care [329] too much about the technical [330] implementation details. So what does [332] that mean? What are outcomes actually? [333] Well, it's in a nutshell three things. [335] It's revenue, that's top line, it's [337] profit, that's bottom line, and then [339] it's some intangibles like risk [341] reduction, and then chaos as well. Chaos [344] is subjective, but it's just how the [345] person feels on a day-to-day basis. So [347] if you run an agency, your whole job is [350] to significantly improve revenue, [352] significantly improve profit, [353] significantly reduce risk, and then [355] significantly reduce chaos. If you can [356] accomplish these four things, you're [358] going to make a lot of money by proxy. [360] So your goal is to translate technical [361] capabilities into financial impacts with [363] real numbers. The client doesn't care [364] that you built architecture on GPT4.1 [367] and are passing it through a multi-step [369] cyclical content generator. These are [371] fancy words that matter to other [372] technical people, but you're not [373] selling, for the most part, to technical [374] people. You are specifically selling to [376] people that don't understand the [377] technical stuff. That's why they're [378] hiring you, right? When you frame [380] outcomes properly, as in when you say, [382] "Hey, what problems are you suffering [383] with?" Okay, great. This system, I [385] believe, can help solve that problem for [386] you and generate some outsized return on [388] your investment, a lot of the injections [390] that you guys are currently getting when [391] you attempt to solve something that [392] might be putting you off, those [394] disappear naturally. The second that you [396] can justify that ROI where somebody [398] gives you $5 and then you turn that into [400] $50, the second you can make them [401] believe that, that's really the whole [403] sale in and of itself, right? So if you [405] guys can get to that point where you [406] frame outcomes in terms of return on [407] investment and not the technical stuff, [409] the cost doesn't really matter so long [410] as you can get somebody to trust that [413] you are capable of delivering the system [414] that does that. So if you really want to [416] succeed in sales, just quantify their [418] pain points first, then present [419] solutions afterwards. Here's how you [420] translate technical features to business [422] outcomes. So instead of GPT4.5 [424] integration, say something like, "Hey, [425] I'll get you 24/7 customer support, and [427] you're not going to have to hire any [428] additional staff." Meaning, we're going [430] to scale your ability to do customer [432] support without scaling the costs. [434] Instead of automated data processing, [436] say, "Hey, I'm going to eliminate you [437] $4,500 in monthly data entry costs [439] because you're not going to have to hire [440] somebody to do this manually for you, [442] and we're going to do it so much faster [443] that your current clients will be more [444] satisfied and thus more likely to pay [446] you more money." Instead of saying [447] multi-step workflows, say, "We're going [449] to capture 25% more leads," which right [452] now is 100 per month. So, we're going to [453] get you at 125 per month, by eliminating [455] manual follow-up gaps. Here's a brief [457] little SOP. You're going to start by [458] identifying your client pain points. Ask [460] them, "Hey, so what exactly are you [462] suffering from?" You'll notice that [463] their responses will usually not be [465] extraordinarily technical. Their [466] responses will be stuff like, "Well, [468] we're really disorganized right now, and [469] it's impacting our ability to get more [471] clients." Why? Cuz business owners just [473] instinctively care about the business [474] details, not the technical details. So, [476] if you ask them to explain something to [477] you, most of the time they'll do so in [479] that manner. Then you quantify the [480] financial impact. You figure out how [481] much money is this probably costing them [483] or how much money are they leaving on [484] the table by not acting on it. It's [485] like, "Hey, so how many clients do you [487] normally get a month?" Hm. Since this [489] problem started, how many clients you've [490] been getting a month? Wow. So, this [491] problem's been costing you three or four [493] clients, and you were telling me that [494] every client's worth about $5,000 a [495] month. Gez, that's adding up. Okay, [497] great. So, here's what my system's going [498] to do. That's when you frame your [500] solution as a business outcome. Then, [502] you support it with case studies and [503] proof. You present some sort of ROI [505] calculation. Position your price against [507] the value created, and there has to be [509] some multiple there. Again, if your [510] price is $5, then the value created has [513] to be some multiple of that. And then [515] you close the deal based on outcomes, [517] not tech, which is ultimately the thing [519] that matters. Another really big thing [521] that's difficult for technical people to [522] wrap their minds around is that [524] consistency always beats innovation over [526] the long run. So consistent execution of [529] very basic, unsexy business activities [531] almost always ends up outperforming [533] sporadic technical brilliance. I mean, I [535] use pretty flowery language here, but in [537] reality, like, don't spend a lot of time [538] trying to come up with the perfect, most [540] insane, most incredible system if you [542] could just do it yourself in like 5 [544] seconds. Just do it yourself in 5 [545] seconds and just do that consistently [547] every day for a year, and you're going [548] to end up way better than if you had [549] spent and poured years of your life into [551] building this sort of system to begin [552] with. The boring money routine always [554] prioritizes some sort of revenue [556] generating activities in the first 2 to [557] three hours a day. This is what I've [558] done. This is what thousands of people [560] across my communities have done, and [561] this is what actually makes money. You [563] have very simple daily actionables that [565] usually involve some sort of thing that [566] doesn't scale. Some sort of outreach, [568] some sort of phone call, some sort of [569] video meeting, some sort of Loom video [571] recording, and then you just send it to [573] people and you do that over and over and [574] over and over again for a very long [575] period of time. Technical people don't [577] like this cuz technical people tend to [578] get bored with the same thing over and [580] over and over again. That's why they [581] feel driven to invent and innovate and [583] create new things. Unfortunately, [584] inventing and innovating and creating [585] new things can make you money. It's just [587] not as probable a way of making money as [589] executing consistently in the boring [591] stuff. Like, does innovating technically [593] get you the next Uber? Yeah, absolutely. [595] But it's only going to get one out of 10 [596] million companies the next Uber. What's [598] a much more sustainable and consistent [599] way to make money? It's boring money [601] routine. It's taking something that [603] works and making it 1% better. So, [604] here's some high ROI activities so you [606] can do some direct outreach. Follow up [607] with prospects. Do some relationship [609] building networking. My actual personal [610] recommendation for technical people is [612] to legitimately set aside 2 hours every [614] morning. Set a timer for 2 hours and [616] know that you cannot do anything [617] technical in that 2-hour time period. [619] Instead, all of the time that you spend [621] on your business has to include [623] something of this form during that [625] two-hour period. If you're not doing [626] outreach, if you're not following up [627] with prospects, if you're not [628] relationship building or doing what you [630] could qualify as networking, you're not [632] spending that time, right? Okay? As long [633] as you exhaust a full 2hour period of [635] you doing this every day, then you can [636] worry about the technical stuff later. [638] You'll have accomplished the minimum [639] viable thing necessary for growth. I [641] also recommend focusing on some sort of [642] consistent activity metric. Try and [644] send, let's say, 25 messages a day. try [646] and send some sort of number of Upwork [648] applications or Loom videos or whatnot. [650] And then what you'll find, what [652] technical people do eventually [653] appreciate is compound growth kicks in. [655] After 30 to 60 days of consistent [656] execution, the inputs that you provide [658] ultimately start lining up with the [660] outputs. And that's when you finally [661] start seeing some traction. And that's [663] when you get to do the cool stuff that [664] you've probably read about in books all [666] the time, but capitalizing on network [667] effects and whatnot. But you can't do [668] that without putting in the work. It [670] doesn't happen before, it happens after. [671] All right, so here is a quick little [673] almost like an SOP. first two to three [675] hours daily to revenue generating [676] activities. Eliminate all distractions [678] during this time. Just turn off [679] notifications, turn off emails, turn off [681] social media that you don't need. Set [682] specific daily activity targets that are [684] completely under your control. Here are [686] some basic ones you could do. You could [687] send five Upwork apps every single day. [689] You could send 20 cold emails every [692] single day. You could send five Loom [694] videos every single day. The Upwork apps [696] might take you 5 minutes each. That's 25 [698] minutes. The cold emails, depending on [700] if you're doing this manually or if [701] you're doing this automated, might take [702] like 5 seconds or it might take like 30 [704] minutes. And then the five Loom videos, [706] assuming they're five minutes each, it [707] might take you 25 minutes. How much time [708] is this? Hey, that's 50. That's 30. So [711] at the end of it, you spent 80 minutes [713] or 1 hour and 20 doing the most [714] important part of your business. And if [716] you subtract that from the usual 8 hour [719] workday, you're still left with 6.7 [721] hours left to go. You can do whatever [722] the heck you want with that 6.7 hours. [724] As long as you do the business stuff, [725] the technical stuff doesn't matter [726] anywhere near as much. Track your [728] consistency using like a simple Google [729] sheet or something. I know you want to [730] invent this amazing CRM project tracker [733] Chrome extension app to do it, but this [735] stuff does not work, guys. Just use [737] something that works. Use something, [738] hell, use a a pen and a paper if you [740] have to. And then just do it for 30 to [742] 60 days. Okay, here is the SOP written [744] in a slightly different way. I just like [745] to provide different ways where you guys [747] could see the information presented [748] visually. You guys could hear the [750] information said to you. So, you know, [752] identify three to five higher [753] activities, create some daily activity [755] targets, block the first two to three [756] hours, execute consistently, track [758] activities, not outcomes, maintain for [759] 60 days, then just analyze results and [761] optimize, and then just loop it over and [763] over and over again. This doesn't have [764] to be any more complex than that. What [765] you'll find is there are a lot of people [767] much dumber than you that run businesses [768] that make way more money than you could [770] probably ever hope to achieve. And this [772] is something very humbling that I had to [773] learn pretty early on. So, if you guys [775] want to scale an AI agency, focus less [777] on the technical skills and way more on [779] the business skills. It's the business [781] ones which will ultimately pay your [782] pockets. If you guys want to grow your [784] own AI agency from scratch with no [787] experience, whether on the technical [788] side or the business side, definitely [789] check out Maker School. Christian just [791] did over $11,000 this month through [794] Upwork, cold email, communities, and a [796] couple of lead generation tactics that I [797] talk about here. What we do is we give [799] you a 0 to90day accountability roadmap [801] with a list of step-by-step tasks. If [803] you just follow those tasks, you [804] eventually get a client. It's not rocket [806] science. There's not a whole lot of [808] innovating or disrupting going on. [809] You're just following a given road map. [811] And if you don't get your first client [812] in 90 days, I give you a full refund. [814] That's the guarantee and that's kind of [815] my offer to you. Thank you very much [817] again for watching this video. [818] Definitely brush up on those business [819] skills and don't worry too much about [820] the technical stuff. Like, subscribe, do [822] all of those fun things that make my [824] YouTube jump to the top of the AGO. And [825] I'll catch you on the next video. Backs.

Video: https://www.youtube.com/watch?v=jUMPw_MgkVg
Title: 3 Boring AI Automations You Can Sell to Coaches for $1.5K
[0] Here are three boring AI automations [2] that you can sell to coaches, [3] consultants, and anybody with an inbound [4] YouTube funnel for 1.5K a pop or more. I [7] built them all in make.com and naden. [10] I'm going to run you guys through all of [11] these systems in a moment, plus a bonus [14] CRM that I built specifically for [16] coaches. Our first system is a YouTube [18] content repurposing flow built in make. [20] It's a little different from most other [22] YouTube content repurposing flows that [23] you guys have probably seen because it [25] actually has a unique twist where we [26] have AI points out inadequacies in the [28] source transcript and then suggest ways [31] to improve the source by adding new [33] ideas and essentially just changing [35] things up, adding unique angles. So, as [37] opposed to this being a parasite flow [38] like everybody else's, what this is is [40] this is a parasite plus flow. It changes [42] the source content and allows you to [44] constantly be adding and innovating. [45] Let's say we got a YouTube video over [47] here. These eight AI trends will change [48] business forever. get in early. If I go [50] back to my flow and I click run once, [52] now I've already cued this up. We've [54] already done the scraping and click use [55] existing data. What we're going to do is [57] we're going to start by processing the [59] transcript. Now, processing here is [61] doing a lot of heavy lifting, but in a [62] nutshell, all we're doing is we're [63] passing this into AI and we're asking [65] it, hey, I want you to take this [66] transcript and I want you to use it to [68] generate an outline. Now, the benefit of [70] generating an outline with a transcript [72] as opposed to just generating content [73] directly based off the transcript is [75] when you take the whole transcript and [76] you funnel it into an outline. What [78] you're doing is you're forcing all [80] future steps to generate unique content, [82] not the same content that a lot of other [83] people are going to be doing. So, a [85] quick little example of what the prompt [86] looks like is we're generating content [88] based on YouTube video transcripts. Your [89] task is to take us input a full [91] transcript of a YouTube video and output [92] a variety of parameters like summary, [94] like outline, and like suggestions. [96] three ways we can modify the content to [98] improve it including twists, different [99] ideas, areas you could add more context, [101] etc. And then spicy preferred that spicy [104] preferred does a fair amount. When we [106] feed it into the next module here, if I [108] check the prompt as well, what you'll [111] see is we are generating high-quality [113] content based off YouTube video [114] transcripts. Your task is to take us [116] input an outline for YouTube video now [118] and then implement the suggestions to [119] make the outline more detailed. Okay, so [121] what we're doing is we're not modifying [122] a source transcript one to one like a [124] lot of other people are doing. What [125] we're doing now is we are having it [127] change the outline and then we're going [128] to take that outline and feed that back [130] in AI in a moment which is going to [131] allow us to generate significantly more [133] unique content. Next, what we do is we [136] generate a bunch of social media posts [137] based off of that. So, we have [140] guidelines for Twitter, guidelines for [142] LinkedIn, guidelines for Facebook, [143] guidelines for Instagram, and then we [144] basically say, "Hey, go for it." One [146] other cool thing we're doing is we're [147] generating a YouTube script with that. [149] So, if you wanted to, you know, record a [151] YouTube video based off somebody else's [152] content or at least based off the idea [154] or the packaging, but then you wanted [155] the actual stuff inside of that script [157] to be written differently and maybe [159] framed differently, this is how you do [160] it. And then finally, sort of the very [162] unique thing about this is we then feed [164] in that outline and section by section [167] we generate the portion of the script [169] that corresponds with the particular [171] part we want to do. So, we're generating [174] content section by section. Your current [176] section is and then we give it the [178] section. Now, the reason why this cyclic [180] approach is so valuable is because most [182] of the time AI models have to trade off [184] depth for volume. And so, if you feed it [186] in a giant giant list of headings or [189] whatever, it necessarily will not really [191] be able to produce a lot of content per [192] heading. What this approach does is it [194] combines the best of both worlds. We get [195] to go super deep into every specific [198] section. And then what we're going to do [199] is we're going to have AI process it [201] using one final aggregation step to [203] weave through all of the issues in the [205] transcript. add little intros, outros, [208] connector sentences, and so on and so [209] forth to turn this thing into just one [211] giant, beautifully formatted piece of [213] content. Now, I've actually built this [214] entire system live on YouTube, starting [216] from first principles. I always do my [218] live builds in such a way where I have [219] no idea how I'm going to put the system [221] together before I do. If you guys want a [223] more detailed breakdown of what this one [224] looks like in particular, just check out [226] the video that I've pinned above. Now [227] the smooth out script module currently [229] uses the best performing model available [232] through the open API which is the 01 [234] model as the time of this recording [235] because that it takes a fair amount of [237] time to work. We are feeding in [238] something like 20ish,000 tokens at a [241] time. So usually this step takes a [242] minute or so. Once that's done all we do [244] is we create a Google Drive folder then [247] an Instagram post dock, Twitter post [249] dock, one for Facebook, one for LinkedIn [251] as well and we do some markdown [253] formatting and then finally generate the [255] whole YouTube script document as well. [256] And then just as a final step, I was [258] like adding things to some sort of [259] database. So in this case, we're doing [260] it with a Google sheet. When all said [262] and done, we have it popped into Google [264] Sheets over here. And then we have the [266] Instagram post column, the Twitter post [268] column, Facebook post column, LinkedIn [269] post colum. Then finally, we also have [270] the YouTube script as well. So let's [272] just pop that open. And as you can see, [274] this is very long. This is almost 4,000 [276] words. So token-wise, it's quite a bit. [277] This comes with headings and it comes [279] with basically everything else. And as [280] was saying earlier, in this video's [282] case, it was like eight business AI [283] trends. What we're doing is we're [285] actually like diving really really deep [287] into every one of these. We're doing a [289] historical context, current shift, AI's [290] role in making product uh creation [292] easier, practical implications. I mean [294] like for eight sections, every section [296] in and of itself is basically like a [298] whole article, which is one of the [299] really cool things about this approach. [300] The second system is a YouTube trend [302] detector. The way that this works is we [304] basically have a Google sheet set up [306] that has a few channels that we're [308] monitoring. So in my case, I've just [309] added two here. There's my own and then [311] there's somebody called Leonardo [312] Gregorio who runs a channel that I just [314] like in AI and automation. We then have [316] a couple of different tables with that [318] channel ID. So this one's mine. This one [320] is his. In this case, I'm testing this [322] manually, but we can also schedule this [323] to run once a day. What this is doing is [325] actually pinging the YouTube API [327] directly in NAD. I've set a limit of [329] five just for time purposes here, but [331] this gets a bunch of data about each [332] video. It gets stuff like the number of [334] views that every video has, gets stuff [336] like the number of comments, the number [337] of likes. What we do then is we filter [339] out all of the new posts, then we add [342] them directly to this Google sheet, and [344] that's one half of the YouTube trend [346] detector. The other half takes that data [348] from the Google sheet, and then it [349] actually just sends it in the form of a [351] daily digest. So, what this flow is [353] doing is if I click test workflow, it's [355] reading through that Google sheet and [356] then it's just looping over before [358] generating an HTML template and just [359] sending me an email. This is what it [361] ends up looking like. We have multiples [363] down below. We have durations, which [364] I've just put in seconds, but feel free [366] to change this for whatever you want. [368] And then, you know, at the end of the [369] day, you have all of the videos sorted [370] nicely. And the whole idea here is you, [373] if you're a coach or a consultant, get a [375] trending list of people in your niche [377] that are doing things that you might [378] want to keep track of alongside all the [380] information that you find important. The [381] last system is a YouTube content idea [384] generator that uses YouTube comments as [386] the source for the idea flow. We're [388] watching Appify actor runs. So, let me [390] just pump in the same video to a [392] different Apify actor, one called [393] YouTube Comment Scraper. If I start [395] this, what this is basically doing is [397] it's going through the YouTube comments [399] on the video that I provide. And then [401] when it's done, we run the scraper. This [403] flow then extracts all of those [405] comments. It then feeds it into AI. And [407] all we're doing with AI, to make a long [409] story short, is we're just having it [410] filter out whether or not the content [412] ideas that we're seeing, or rather the [414] comments are reasonable. So my prompt is [416] really simple. We're looking for content [418] ideas below a YouTube comment on one of [420] our videos. Your task is just to [421] determine if it's relevant. Okay. Return [423] the results in the array. Okay, here's a [425] bunch of examples where I essentially [427] show you, hey, for a given comment, what [428] sort of idea would you create? And then [430] last but not least, we actually go [431] through and we pass it through an [432] additional AI step that takes that data [434] and then uses it to create a hook and an [436] outline. So, for instance, this is a [438] comment that I received about leveraging [440] YouTube transcripts using Ampify, very [442] meta. And what I'm doing here is I'm [444] making a YouTube video hook and outline [447] based off of a comment that I scraped. [449] The really cool thing with this is [450] obviously then we add them to a Google [452] sheet. I always like having some sort of [453] database. And at the end of it, you end [455] up with a massive content calendar that [457] looks basically just like this where you [459] have the date on the lefth hand side, [460] the comment that you scraped, the [462] content idea, and then ultimately the [464] hook and then the outline. The last [466] system I wanted to show you wasn't [467] actually built on a noode automation [469] platform like make.com or naden. It's [471] built on a project management platform [473] called ClickUp, one of my favorites of [475] all time. And what this is is this is [476] basically a coaching CRM, a COMM. [479] Essentially, the way that a lot of [480] coaches and consultants work are they'll [482] have some sort of like hands-on program [484] where when you sign up to their offer, [486] they pump you through a system, assign [487] you to a coach, and then you essentially [489] have like some sort of daily or weekly [491] or whatever the cadence is call where [493] they walk you through, you know, how to [494] get better, how to solve your problems [495] and stuff like that. So, this is a very [497] simple instantiation of what that might [498] look like just turned into a project [500] management pipeline instead. The biggest [502] issue that I came across when I started [503] working with coaches and consultants was [505] I just noticed how disorganized they [506] were. They usually found like a winning [508] offer in the market and then they [509] exploded their revenue. But as a result, [511] they were usually juggling like a [512] hundred different coaching clients, not [514] knowing exactly where to allocate their [516] resources, not having like any simple [517] standardized way of pumping them through [518] the flow. So, I distinctly remember I [520] had this exact situation with one of my [521] old clients that scaled upwards of [523] $300,000 a month. And the way that we [525] solved it was through a system like [526] this. The way that the CRM works is [528] there's this intake stage up at the top. [530] So, the idea is when somebody signs up [531] to your offer, maybe there's some sort [533] of form they fill out, they get [534] automatically added to this. There's an [535] onboarding stage next, a week one stage, [538] a week two stage, a week three stage, a [540] week four stage, and then a completed [541] stage. And these weeks are totally [543] arbitrary, by the way. Every coaching [544] program is different. Some break things [545] down based off a week. Others break [547] things down based off of stage. But the [548] important part are the columns. So what [550] I've done is I've included a Google [551] Drive column here. So the Google Drive [553] column is just where you store all the [554] assets that you are working with a [556] client using. You then have an assigne [558] column. So I mean, in this case, I've [560] just assigned myself to all of these, [561] but as I'm sure you can imagine, you're [562] probably likely to have multiple coaches [564] in the company. You can just assign them [565] that way. You have a next check-in date, [567] which is important. This next check-in [569] date can be manual or automatic. In my [571] case, it's manual, but I'm sure you guys [572] could see a simple way to make it [573] automatic. And then there's just a [574] one-click Zoom meeting room. So, if [576] you're hosting all these things through [577] Zoom, you can imagine how when you add a [579] new record, you can automatically create [580] a specific Zoom meeting room for every [582] record using make.com or nad. The idea [585] here is if you are a coach, all you do [587] every day is you just open up ClickUp [588] and then just click that one Zoom [590] meeting room button when the time [591] arrives of your session. There's a few [593] other things like session count, days, [595] and stage, and some other tertiary [596] fields like email address and stuff like [598] that. But let me run you through how you [600] might want to take a pipeline like this [601] and then actually automate it. Okay, so [603] what I've done is I've created two [605] simple make.com automations. One called [606] send onboarding email and the other [608] called create Google Drive. The way the [609] create Google Drive flow works is [611] basically if somebody new is created in [613] our pipeline, what we do is we just make [614] a Google Drive and we update the field. [616] So a quick example of this is let's say [619] I'm adding somebody here. Let's say [621] their name is Leonardo G. If I press [623] enter right now, what happened is we're [625] now receiving the event inside of [627] make.com through ClickUp web hooks. [628] We're then creating a folder and then [630] editing the task and updating it with [631] said folder. So, what we have now is we [633] have a custom Google Drive folder [635] specific to the person inside of a [636] coaching CRM Google Drive. So, I'm sure [638] you can imagine this isn't rocket [639] science, but stuff like this just helps [640] keep companies a lot more organized. In [642] addition, let's say you want to send an [644] onboarding email or just trigger [645] something when they change the stage. [647] What you can do is assuming that we fill [648] in the email address over here and [651] assuming that you know we're filling the [653] rest of these stages, we can set [654] something up so that when somebody moves [655] from intake to onboarding, what we do is [657] we trigger a nice happy onboarding [659] email. The onboarding email is something [661] quick and simple. In our case, I think [663] I'm just saying like, "Hey, welcome [665] aboard." or something like that. Let's [666] actually go check the email. Welcome [668] aboard, Leonardo. Thanks for joining and [670] we're excited to have you. Our goal is [671] to help you unlock your potential. [672] Here's a bunch of information. Looks [673] like I forgot to put a tab there. [675] Hopefully you guys see the point. You [676] can take a system like this and then [677] extend it, make it arbitrarily complex. [679] But every one of these systems is [680] something you could sell for at least [681] $1,500, if not more. Hopefully you guys [684] appreciated the video. If you guys like [685] stuff like this, definitely check out [686] Maker School. It's my day-by-day [688] accountability program where I show you [689] how to get your very first AI and [691] automation customer in just 90 days. I [693] believe in this so strongly that I [694] actually guarantee that you will do this [696] or your money back. Our most recent and [698] probably standout win was from the [699] lovely Eric Misho that just replaced his [701] whole six figure job. His monthly [703] retainer surpassed his corporate salary. [705] He was able to submit his resignation [707] and then do this sort of thing [708] full-time. We get wins like this [709] literally every day. If you guys want to [711] add to them, then definitely join. I [713] increase the price every 100 members or [714] so just to reflect the added value. [716] Otherwise, please like, subscribe, do [718] all that fun YouTube stuff that gets me [719] to the top of the algo. And happy [720] automating. See you all tomorrow.

Video: https://www.youtube.com/watch?v=B85IVGPXGDk
Title: Do THIS to Make $10k/Month with AI as a Student
[0] If you're a student, you have a couple [1] of unique advantages that make it a lot [3] easier to start and then scale an AI [4] based business model. What I want to do [6] in this video is I want to explain those [7] to you and show you how to make $10,000 [9] a month or more as a student using AI. [12] Now, there are three main reasons why I [14] think students are significantly better [16] positioned than most other people right [17] now. The first is that contrary to what [19] your teachers will tell you, knowledge [20] is no longer the bottleneck. In the [22] past, knowledge used to be the [24] bottleneck. If you wanted to be [24] compensated highly for a service or [26] product, you would have to know a lot [28] about services and or products in the [30] domain that you were trying to sell them [31] in. Nowadays, what's less important is [33] the knowledge that you know and what's [35] more important is your ability to learn [37] that knowledge. Now, in your case, you [39] are most probably young. You probably [41] learned quickly and you have probably [42] grown up with all of this technology. [44] You've heard of inklings of artificial [46] intelligence since you were a kid most [48] likely. Many of you are probably still [49] kids and are just on the come-up [51] natively learning about how all this [53] tech works and basically like the [54] critical period where humans tend to [56] cement most of these skills. And you're [58] also literally in the student mindset. I [59] can't overstate how valuable this is. [61] The older that you get, the less of your [63] time you spend learning things where you [65] are right now, you're probably spending [66] like literally half of all of your [68] waking time learning things. So just the [70] fact that you are in that student [71] mindset already propels you [72] significantly further ahead than most [73] people. There's a reason why so many of [75] the world's like best and brightest [77] companies started out of fevered dreams [80] of 19, 20, 21 year olds. Whether you're [82] younger, whether you're older than that, [84] let me run you through exactly how you [85] can leverage that same potential in the [87] AI business model. Okay, so first thing [90] to know is that AI is not about passive [91] income. What it is is highly leveraged [94] consulting in a nutshell. Okay, [95] consulting is helping businesses do [97] things better for the most part. And [98] what we're doing with leveraged [100] consulting is we're using AI tools to [102] allow us to produce much larger [104] multiples on our time. If this doesn't [105] make sense to you, I'm just going to [106] pull up a little graph over here. If [108] you're a student, you probably see this [109] sort of stuff all the time. What I'm [111] going to do is let's just say money on [112] the left hand side. Okay? This is the [114] amount of money that you generate doing [115] stuff. And then this is some combination [117] of time or effort. So if you continue [120] down your student path, and you should [121] of course, and I don't know, get out of [122] school and then get a job or something [124] like that paying a certain amount of [125] money. This is more or less what it's [126] going to look like for you. You're going [127] to put in a certain number of units of [130] time and effort and you're going to get [131] in response a certain number of units of [133] money. But notice the slope of that [135] line. Notice how this line is sort of [137] shaped. It's pretty low to the ground, [138] right? What this means in a nutshell, if [140] you're familiar with this sort of thing, [141] is that you're putting in [142] disproportionately more time and effort [144] relative to the money that you get. Now, [146] a more reasonable thing would be [147] something like this, where there's [149] basically a onetoone relationship. If [152] you just look at how I'm manipulating [153] this little graph here, there's [155] basically like a onetoone relationship [156] here between the amount of time and [158] effort that we put in and then the [160] result that we get. Okay? And this is [161] what a lot of people consider the dream [163] to be honest to be compensated [164] proportionally for the time and the [165] effort that you put in. Well, the AI [167] leverage consulting business model is [169] kind of more like this. Okay? So, per [172] unit time or effort, you're going to be [174] producing outsized multiples on the work [176] that you put in. But what most AI gurus [178] and other people are probably trying to [179] sell you right now is something like [180] this, which is physically impossible. It [183] is passive income. It's the idea that [184] you spend no time and effort, then you [185] produce a ton of money in response. So [188] my recommendation for you right off the [189] bat is avoid this. This is impossible [191] for the most part. You can't really make [192] passive income unless you just have a [194] ton of money and you're investing it in [195] some sort of passive diversified [197] portfolio. better to instead produce [199] highly leveraged outcomes, you know, 10x [202] the speed at most other people and then [205] to avoid the path that so many of you [207] are unfortunately being pushed down at [209] breakneck speed right now to get into [211] some sort of like very lowpaying job [212] that rewards you very little bit per [214] unit time spent. Okay, so this is what [215] you want. This is what's realistic. I [217] and many other people do this. I scaled [219] my a automation agency to $72,000 a [221] month. I still had to spend time doing [222] it, but per unit time I made way more [224] money than in any job that I've ever [226] had. So, how does all of this stuff [228] actually work? Now that I've sort of [229] sold you on the idea, any successful AI [231] business just solves real business [232] problems and produces a measurable [234] return on investment. It doesn't just [236] involve the use of AI tools. And it most [238] certainly doesn't involve the usage of [239] AI tools to like create digital products [241] and then put them up and run some sort [243] of automated adunnel. You guys are [244] beginners, you can't do this. And if you [245] guys are students, you probably have no [246] idea how the economy works. So, avoid [248] this as much as humanly possible. Most [250] AI moneymaking content right now is [252] pretty misleading and it targets [253] desperate people with unrealistic [254] promises. I say desperate people as in [256] like people that have are like one [257] paycheck away from from being evicted or [259] kicked out of their house. I've seen how [261] this industry sells this golden ticket [264] sort of dream to people that to be [267] honest should most definitely be [269] steering clear of that at a certain [270] point in their life. But believe it or [272] not, that's why I think students are so [274] great because most students are not [276] desperate. They're in a position where [278] they have a free available time to learn [281] for the most part and they're usually in [284] some sort of financial position where [285] they have support. Support from the [287] school, support from people around them, [288] their friends, support from their family [290] members. And so instead of, you know, [292] you being one of the many desperate [293] people that are trying to make this work [294] and I have to make this work and if this [296] doesn't work, I'm being evicted [297] tomorrow, which is no position to be [299] under if you want to like start an [300] actual sustainable successful business. [302] You guys aren't there and I think [303] there's there's a lot of growth [304] potential because of it. Okay. So in [307] addition to that, my recommendation for [308] you and one thing I'll show you how to [310] do is to avoid oversaturated low-v value [312] applications and then focus on the [313] implementation. And then finally, you [315] just need to understand that AI is a [317] tool. It's a tool like any other tool. [318] Okay? At the end of the day, AI is a [320] tool. It delivers business outcomes, but [322] it's not a magical money generating [324] blackbox. You don't just have a chat [326] agent that you can type in, make me a [328] ton of money, and then it goes on the [329] internet, makes you a ton of money. [330] Because think about it logically. If you [332] could do that with your chat agent and [334] everybody else could probably do that [335] with their chat agent, unless you're the [336] one that's responsible for creating the [338] technology, which you aren't, you have [339] no inherent advantage. You're just a [341] user of a tool. So, here's some red [343] flags, things to stay away from on your [345] AI money-making journey. If anybody [347] promises you significant amounts of [348] income with minimal skill development or [350] effort, be very wary of that. In [352] reality, okay, there's no passive income [353] here. You are never ever going to be in [355] this position on the left. It's always [357] going to be some sort of time or effort [359] put in. And all that cool business [361] models like AI automation or leverage [363] consulting allow you to do is just [365] change the slope of that line so it gets [366] more and more and more vertical. But you [368] can't go entirely vertical. If there's [370] no explanation on how to acquire clients [372] or deliver consistent value, I'd stay [374] away from that cuz business owners can [375] sniff this stuff out in a heartbeat. If [377] the money-making thing has you focus on [379] selling the outputs of AI which are [380] usually just text or images rather than [382] the actual business outcomes that they [383] help, be very wary of that because since [385] again as a tool all tools can produce [387] these text or images. You're going to be [389] competing with a million billion other [390] people that can do the exact same thing [391] with maybe the only difference being a [393] little prompt that they have that you [395] don't have. But a prompt is just a few [396] characters, right? Anybody can put [398] together a prompt. And as we see now, [399] people are jailbreaking and leaking [400] prompts all the time. And then yeah, [402] just avoid the whole set and forget it [404] income stream. Passive income is not the [406] AI automation business model. AI [407] automation is not a passive income [409] model. So this over here on the left is [412] bad. Unrealistic AI money methods give [413] you low value. They get very quickly [415] saturated. It's a race to the bottom. [416] You make no money. You might make money [417] for like a month. You might make $5,000 [419] or something. But the rush of people [421] that get into stuff like this is just so [423] extraordinary. and the relative skill [426] level required to sell the products or [428] services that they're creating with [429] these AI tools is just so low that with [432] that low barrier entry basically nothing [433] happens. Instead, what you want to do is [435] you want to focus on the implementation [437] of some sort of service that solves real [438] world problems, delivers real business [440] ROI, gives you measurable results, and [441] then gives you sustainable income. So, [443] how do you actually do that? Well, the [444] best AI business model for students is [446] starting with a very small investment, [449] working around your class schedule, and [451] then bootstrapping growth through [453] incremental and iterative means. What is [454] your actual like work? What do you [456] actually do? Well, basically, you drag [458] and drop simple programming analoges [463] like make.com, it's a big one right now, [466] or [468] n. And you use this to do things like [471] you automate the sending of emails. You [474] know when your your teachers, your [475] professors send you emails or whatever, [477] what you do is you help automate the [479] triggering of these emails simply using [481] a drag and drop tool like make.com. So [484] what is make.com for instance? Make.com [486] is just a bunch of Lego blocks that do [487] stuff on the internet. This is what the [489] interface looks like. Your job as an AI [491] automation person is basically to be [493] clicking this big purple button and then [495] having some sort of trigger that does [497] something like maybe it sends an email. [498] And what you do is you implement a [500] little bit of logic so that when a [502] business has something happen, maybe [504] they sign a deal, what you do is you [507] have it shoot out an email to the client [509] of that business with maybe some [511] onboarding information or something. [513] Okay, onboarding obviously being, hey, [515] welcome aboard to the team. We're super [516] excited to have you. Here's a bunch of [518] info that you need in order to make [519] something happen. So the process of you [520] building this is what makes you money. [522] And then also the process of you knowing [523] what to build to who is also another [526] thing that makes you a lot of money. [527] Make.com costs 10 bucks a month on the [529] core plan, 18 bucks a month on the pro [530] plan, 34 bucks a month on the team's [532] plan. Another example of a tool you [534] could use for this is nadn. This is [535] gaining a ton of popularity right now. [537] Although it's a little bit more [537] technically complex. So if you're a [539] student that's never done stuff like [540] this before, I might uh avoid this in [542] lie of make, but same sort of idea. You [544] know, you can have a trigger of some [546] kind when, you know, you get some sort [547] of new deal signed. What do you do? You [550] actually do stuff with it. You pump it [552] into some sort of AI text classifier [554] that then classifies the email into a [556] bunch of categories and then, I don't [557] know, you call open AI and do something [558] fun with it. This is what like an actual [559] AI automation that makes money looks [561] like. This is what people are currently [563] using to make money in the AI and [564] automation space. So, this is ultimately [566] what you want to do. Okay? Simple AI [568] automations for small businesses using [569] no code drag and drop tools. This is the [571] opportunity. What it's not is you're not [573] actually like building an AI model. What [575] you're doing is you're using tools that [576] other people have built just to make [578] business owners lives a little bit [579] easier. So there's a massive demand [580] right now from small to medium-sized [582] businesses that can't afford traditional [583] AI consulting. And I think that's why [585] honestly there's such an opportunity for [586] young students. If you are a young [588] student, you know, people are going to [589] assume that you already understand a lot [591] of this technology because you grew up [592] with it as I mentioned to you before. [594] And if you're targeting this market of [595] small to mid-size businesses that can't [597] afford traditional AI consulting from a [598] big firm like Mckenzie or Deote that I [600] don't know charges like 700 bucks an [602] hour, you could probably definitely work [604] with some student that might be fresh [605] out of school or recently is [607] bootstrapping a business providing [609] services for maybe 100 bucks an hour or [610] something like that. You can definitely [611] make more money than 99% of everybody [613] else that you know doing this. Now [614] hourly isn't the perfect way to price [616] this and I tell you about that later. [618] But yeah, this is just a quick and easy [619] example of ways that you can slot into a [622] need in the market right now and why I [623] think students are pretty solid people [624] to provide that solution. So, businesses [626] can pay anywhere from $1,500 to $10,000 [628] for solutions. And these solutions can [630] take hours to build. I mean, I talk [631] about the hourly model over here. [633] Instead of charging based off of the [634] time that you spend doing something, [636] it's much better to charge off the value [637] that you provide, which my other videos [639] talk quite a bit about valuebased [640] pricing, the ROI formula. Just check [641] yesterday's video if you want an example [643] of that. But really, I mean, you know, [644] think about it like you're kind of at [645] like this fork in the road. This is like [647] the traditional path up here. I'm not [650] trying to sell you on not staying in [651] school or whatever, okay? But up above [653] is the traditional path. You know, even [655] if you go to some highly claimed, [658] extraordinarily hard path like trying to [660] become a medical doctor or an investment [662] banker or something, you might still [664] make $150 an hour as the cap and you're [668] not going to make that money for another [669] 15, 20 years. Okay? If you go down sort [671] of like the modern path to money, what [674] you can do is you could sell a $2,000 [680] automation in 5 [683] hours. And if you do that [685] mathematically, now you're making $400 [687] an hour. And instead of you having to do [690] this after, I don't know, 10 years in [692] school and $30,000 of debt, you could [696] sell something like this in 2 weeks from [699] now with 0 of [702] debt. Pretty cool, huh? I think if you [705] just look at the possible futures [708] attainable right now, assuming you're [710] willing to experiment with something [712] that maybe your friends, your family [714] members, or your the people in your [716] school aren't familiar with, if you're [717] willing to be somebody that doesn't [719] follow that traditional path right now, [721] the potential outsized return is huge, [724] and you can make just a boatload of [725] money. You have the ability to undercut [727] traditional consultants while still [728] making exceptional hourly rates. I don't [729] recommend a race to the bottom, but you [730] can undercut traditional consultants. [732] Traditional consultants charge like 500 [733] bucks an hour, as I mentioned, at one of [735] these firms. If you get by with a 100 [737] bucks an hour, you're probably not going [738] to deliver as much value as they will, [739] but I don't think it's a 5x difference [741] in value. I think you're probably going [742] to deliver half as much value they do [743] for like a fifth of the price. And then [745] you also have a fresh perspective on [746] tech cuz you're young with basically no [748] overhead costs, hence you being able to [749] move nimly. This is a little SOP. I'm [752] just trying to show the same idea in as [754] many different formats as possible just [755] to make it stick. So, what you do is you [757] find a small business problem, you build [758] a simple automation, deliver measurable [760] results, charge $1,500 to $10,000, and [762] then what you do is you scale by [763] templating it, which we'll get into in a [765] moment. Okay. So, what is all this stuff [766] called? As a student, it's called a [767] minimum viable business. If you've never [768] heard of this before, you're going to [769] see acronyms like MVP all the time. That [771] stands for minimum viable product. [772] There's MVB, minimum viable business. [774] There's MVS, minimum viable service. I [776] just framing all this under the umbrella [777] of minimum viable business. How do you [779] actually do this as a student if this is [780] you? Looks kind of like Aaron from [782] Attack on Titan in the modern world. [783] Very interesting. [785] You defined three specific niches to [787] focus your efforts on. Initially, I've [788] published videos where I show people the [790] top three best AI automation agency [792] niches in 2025. I'll make sure to link [794] that in the video, but what I want you [795] to do is just pick three niches. There [797] are a million billion potential niches [799] you could pick three of them. They don't [800] have to be the ones that I talk about in [801] the video, but they're reasonable places [803] to get started. Then take your $100 of [806] lunch money that you've saved up for 2 [807] weeks and get a couple of tools. The [809] first tool to get is make.com. If you're [812] a total beginner, get make.com. The [814] second tool to get is sign up to the [816] open AI [818] API. This is a simple and [820] straightforward way to start [822] communicating with large language models [823] on like a per usage basis, not just [824] through chatbt or whatever you're [826] currently using in school. The third [828] thing that you should look into is get a [830] scraping platform like Ampify. If you're [832] unfamiliar with Appify, it's one of the [833] ones I haven't shown you so far. What [835] this is is this is basically just a [836] marketplace where people build scrapers [838] for particular data sources and then put [839] them up here. And this is really where a [841] large portion of the automations that [842] are in demand today stem from. So you [844] could scrape Instagram, you can get [846] Instagram posts, profiles, places, [847] hashtags, photos, comments. You can [849] scrape LinkedIn, you can get job titles, [851] locations, you can get job [852] opportunities, you can scrape Tik Tok, [853] you can scrape various websites, x.com, [855] so on and so forth. What you can do with [856] these three platforms is basically [857] limitless. You could use a to scrape [860] Instagram posts, feed that into [861] make.com, have that trigger an AI flow [863] that then generates some sort of Google [864] doc or something like that. That Google [866] Doc might be a step-by-step breakdown of [868] everything that a person on Instagram [869] that you follow needs to do to grow [871] their business in the next 30 days or [872] something. Use that to sell marketing [874] services to them and scale. You could [875] use Ampify to scrape open job listings [878] that people are hiring for. You can then [879] pump that into Make.com, feed that into [881] AI, have AI process the job descriptions [884] and details, then use that to apply with [886] like a super customized CV. I mean, you [888] know, I could go on and on and on. Check [889] out like the last 50 videos I've posted [891] for more on the opportunities in the [893] space, but there's so many different [894] solutions that you can build with just [896] three tools that cost you less than $100 [898] a month that it's kind of hard for me to [900] state. So, those are sort of like the [901] toolkit within the toolkit. And then for [904] now, just set up essential [906] infrastructure. Set up like a simple web [907] presence. Use like one of those super [909] barebones builders like bolt.new, uh, [911] Lovable. Use something like card.co, [913] maybe web flow, maybe framer, I don't [915] know. Just set up like a very simple [916] website and then set up some very simple [918] payment processing. And then if you have [920] additional funds, set up some sort of [921] cold email setup. Upwork's going to be [923] difficult unless you're over the age of [924] 18. But you know, when I say students, [926] some students are 18, 19, 20, 21, so you [928] can give that a go. And then what you [929] want to do is you basically just want to [931] start talking to as many people as [932] humanly possible, including people in [934] your pre-existing network, your [935] teachers, your professors, maybe your [937] family members, your uncles, your aunts, [938] your your grandparents, whatever, and [940] see if you could piece together some [941] social proof. What is social proof? To [943] make a long story short, social proof is [945] basically just something in the form of, [948] hey, I saved or made some amount of [953] money for a business or I don't know, [958] company or agency using [962] AI. Okay, this is what like social proof [965] looks like. I made [968] $43,842 for a B2B SAS company using AI [971] automation. I saved $10,000 a month for [974] a manufacturing business using automated [977] CRM. I added [980] $33,829 a month in value for a B2B [983] digital marketing agency using AI lead [986] genen or something. So, go find yourself [988] some sort of social proof to that [990] nature. It's going to be difficult for a [991] lot of you guys to have attributable [993] savings and or revenue. Don't get me [994] wrong, I totally understand this. So, if [996] you guys don't have anything like that, [997] you can also associate with businesses [999] that are big. I don't know if somebody [1000] in your network or one of your [1001] professors or one of your friends of [1002] friends or whatever has a business or [1004] knows somebody that has a business that [1006] produces let's say a million dollars a [1007] year. You could say something like I [1009] worked with a million dollar a year [1010] business or I helped a million dollar a [1011] year business deliver something. We're [1013] heavy on the implication here but as a [1015] student you kind of have to be. And then [1016] once you're done with that you just [1017] combine all these. Okay, you combine [1019] those tools that I talked about. You [1020] combine those niches that I talked [1022] about. You combine your essential [1023] infrastructure, your web presence, cold [1024] email setup and upwork. Then you just [1026] start talking to businesses. Okay, so [1027] you may easily find your first few [1029] clients just talking to people that are [1031] close to you. This might be people in [1033] various departments that you're a part [1034] of, clubs, events, could be your [1035] network. If you're in high school, might [1037] be a little bit trickier, but it's still [1038] possible. You could just start sending [1040] cold DMs to people that are operating [1042] businesses that you feel like you know [1044] how to improve. Notice that you're also [1045] going to get a bunch of free or [1046] discounted software through educational [1048] programs. That's something that I should [1048] have mentioned earlier, but yeah, here [1051] here's more or less your SOP. Choose [1052] your three target niches. Let's say you [1053] choose videographers, then you choose [1055] website devs, and then you choose [1058] coaches, let's say. Okay, these are your [1060] three niches. You set up your tools, you [1062] set up [1064] make.com, and you set up [1066] Ampify, set up [1069] OpenAI. You talk to a few people. So, [1071] you say, "Hey, you know, can I use you [1073] guys as a social proof or case study? [1075] Can I associate with your business and [1077] imply that I've helped you do [1078] something?" They say, "Yeah, for sure." [1080] Or I mean, you could actually even start [1081] working for them for free to develop [1083] some sort of case study. And then you [1084] have something that says, "Hey, I helped [1086] a $1 million a year SAS company save [1092] money with AI automation." And then, you [1095] know, you have two maybe other ones. You [1098] build some sort of simple web presence. [1100] So, I don't know, maybe this is just [1101] like a website. It's like a LinkedIn [1104] profile as [1106] well. Then you focus on revenue [1108] generation. And if you can get on [1109] Upwork, and I'll show you guys what all [1110] these are in a second, then do so. If [1112] not, you can get on cold email. You can [1114] also send cold [1116] DMs. You can also do something like a [1119] community [1121] posting. Now, this is obviously the big [1123] question mark. Focus on revenue [1124] generation. Upwork, cold email, cold [1126] DMs, community. If you're new to my [1127] channel, this probably doesn't make any [1129] sense to you, but let me run you through [1130] what that looks like in a second. Okay, [1131] so there are a few revenue generating [1133] activities that actually work. The first [1134] and probably the highest RI is cold [1136] email outreach. Cold email outreach is [1138] when you get an additional tool, [1139] something like this cold email platform [1140] here called instantly, which costs as [1142] low as $37 a month. And what this tool [1145] allows you to do is it allows you to put [1146] together cold email campaigns that send [1149] to a large number of people without your [1151] direct involvement. What you do is you [1153] create these campaigns where you put in [1155] a little bit of work ahead of time [1156] defining things like the cold email [1158] copy. That's what you're going to put in [1160] the actual emails that the client or [1162] prospect, I should say, receives. Maybe [1163] some assets. You get your audience [1165] through Ampify or some other scraping [1166] source. Then you just send out a bunch [1168] of emails. And so if I show you guys [1170] what this looks like, you send out stuff [1171] like this. Then if I preview this, this [1173] is what's going to be arriving in this [1175] guy here, Armen's inbox. Hey Armen, love [1177] Mamba Marketing. Also found SEO blah [1179] blah blah. And muted this, but right, [1181] this is your whole pitch. You can write [1182] whatever the heck you want here, by the [1184] way. It is like completely wild west in [1186] cold email right now. So put whatever [1188] the heck you want in there. Whatever you [1189] think is going to make sense. I have a [1190] bunch of videos on like, you know, the [1192] best and most effective copyrightiting [1194] strategies out there. Don't be concerned [1195] if you don't get any positive responses [1197] in your first campaign. It takes a while [1198] to get good at this stuff, but basically [1200] this is where you just start sending [1201] large volumes of cold emails to people [1203] using personalized information that [1204] you've scraped off them using ampify and [1206] then, you know, get a bunch of positive [1208] responses and book meetings. Okay, so [1210] these are activities that directly [1211] generate client conversations. Cold [1212] email is a great example of that. [1214] There's a couple of other things you can [1215] do. One is called Upwork. If you've [1216] never used Upwork before, what this is [1218] is this is basically a freelancing gig [1220] platform where this is my profile right [1222] over here. You can set up searches for [1225] terms like automation. Then you can find [1227] a bunch of jobs that other people have [1229] posted where they specifically ask for, [1231] hey, I'm looking for somebody that's [1232] used the Divvy bot platform. Hey, I want [1234] somebody to help me develop an AI [1235] outreach system for LinkedIn. Hey, I [1237] want somebody to help me put together an [1238] AI LinkedIn one, a go highle setup, meta [1241] marketing, GHL coach, go high level [1243] automation consultant. As you can see, [1245] GHL is a little over represented today. [1246] Very interesting. So, what this is is [1249] this is simply a platform where you can [1251] send a certain number of applications [1253] per day. It costs you a little bit of [1254] money to do this. Might be, I don't [1256] know, 2 and a half to $3 per [1257] application, but you actually talk to [1259] people that are like waiting on the [1260] sidelines with money in their hand ready [1261] to buy. And now, instead of having to [1263] thrust some sort of outreach directly [1264] into the void like you do with cold [1266] email, you do this on a platform where [1268] people are actually pretty qualified and [1269] ready to pay you. Okay, so cold email, [1271] Upwork, these are two really simple [1272] straight line approaches for most [1274] beginners. And then all you do is you [1275] just set some sort of daily minimum. You [1276] say 10 or 15 emails a day, three to five [1278] proposals, and then you just track it [1280] religiously over time. Okay, there are a [1282] bunch of nuances regarding things like [1283] how to do the applications, which I've [1285] talked about in other videos, so I'll [1287] make sure to link them in this video so [1288] you guys can access them quickly. One of [1290] them is a custom loom strategy that [1291] works pretty well, but there are variety [1292] of different ways that you could do [1294] things. And I'm not going to spend an [1295] hour talking about it right now just [1296] because I want you guys to focus on the [1297] ecosystem more than the specific [1299] deliverables at this point. Okay, so [1301] here are some tips on how to do this [1302] quickly. Batch similar tasks together. [1304] So just do all your cold email work at [1306] once. Do all of your Upwork proposals at [1307] once. This takes advantage of this [1308] psychological phenomenon called context [1310] switching, which is where when you go [1312] from one thing to another, when you go [1313] from sending cold emails to looking at [1315] your TikTok to back to sending cold [1316] emails, there's a little bit of a fixed [1318] amount of cost to that. like your brain [1320] works a little bit slower in doing the [1322] thing. So if you want to do things [1323] really quickly, just send all of your [1324] Upwork proposals in the morning or after [1326] you get home from school. Then schedule [1327] revenue generating activities during [1329] your free time and then have some sort [1330] of immediate notification system for [1332] when a client gets back to you. What I [1333] mean by this is what you'll find very [1334] quickly when you start an AI automation [1336] agency is that responses from clients [1338] that are interested in what you have to [1339] say are basically gold. And if you take [1341] that gold and if you don't take [1342] advantage of it immediately, you're [1344] pissing money away. So when you get a [1345] response from somebody that's [1346] interested, don't be worried. Don't be [1348] afraid. Don't think, "Oh my god, I got [1349] to get this right. Let me ask all of my [1350] friends first. Take 24 hours to reply [1352] and get back to them." No, don't do any [1354] of that. Just respond to them like a [1355] normal person. Try and do so within [1356] like, you know, 10, 15 minutes max. And [1358] they'll be a lot more likely to actually [1359] want to work with you. Okay. What's the [1361] SOP here? Set some minimum daily [1363] activities. So, up above, I say 10 [1366] emails a day. And then I also say three [1367] to five proposals. So, maybe we do 10 [1369] emails and we do five proposals. Track [1371] your completion consistently. So, just [1372] have like a little spreadsheet that [1374] shows the number of days in a row that [1375] you've done things. is you could set [1376] this up with a calendar. Contact [1378] potential clients directly. So when you [1380] do your emails, hey X, I want to help [1382] you save Y, you know, some sort of [1385] money. Focus on booking calls and [1387] meetings cuz that's where the money is. [1389] Focus less on doing things like, I don't [1391] know, communicating with them over text [1393] or over email. Focus on actually getting [1394] them on a call. That's the highest ROI [1396] way to do this. And then present your [1397] solution and then, you know, close your [1398] deals. You don't actually have to create [1399] these from scratch with those no code [1401] platforms that I talked about earlier. [1402] You should definitely know how to use [1403] these no code platforms. And there's [1404] sort of a non-negotiable period where [1406] you need to get up and running learning [1407] those Lego blocks. But I have on many [1409] occasion actually just given people the [1411] exact systems that they later went out [1413] and sold. So I published a video a while [1415] ago called five boring a automations to [1416] sell for 1.5k each in 2025. This is a [1419] really good one to start with. There are [1420] a variety of other ones. Just check out [1421] my channel and I legitimately have all [1423] the templates and stuff like that hosted [1424] on a quick little link that you can give [1426] a a click to and then yeah you can just [1428] download those and then use those to [1430] scaffold out the rest of the automation. [1432] So, you know, focus on some simple [1433] systems that consistently sell well. [1435] What you'll find is that some systems [1436] are just going to sell better than [1437] others because they're more in demand. [1438] They're more specific to the niche that [1440] you have. And then copy some proven [1441] automation templates instead of creating [1443] them from scratch wherever possible. [1444] Show working demos rather than just [1446] describing it. Instead of just telling [1448] somebody, hey, this system does X, Y, [1449] and Z, actually like show them the thing [1451] in action. Actually show them a video of [1453] you doing it. Actually get them on a [1455] call and on the call say, hey, you want [1456] to see something cool? Here's a system I [1458] built for a software company. Let me run [1459] you through exactly how this works. Keep [1461] in mind the software company could just [1462] be you. No big deal. And then yeah, [1464] ultimately when you position your [1465] solution or your system, position it [1467] based off of business outcomes. Don't do [1469] it based off of how cool the technology [1470] is. Don't say, "Ooh, this one uses [1472] make.com and AI and we're using the send [1475] email module which is calling this [1476] service which is calling that service." [1478] Believe it or not, they actually care [1479] less about that as clients than the [1481] business outcomes that you're going to [1482] drive. focus more on things like, "Hey, [1484] this system automates the email process [1486] which allows you to make more money [1488] because we get to 10x the volume of cold [1490] emails that you're sending." Something [1491] like that. When you are communicating [1494] during the sales call, focus on the [1496] following. All right? First of all, [1498] instead of doing things like, "Oh, my [1500] make.com system does blank," use [1502] language like this doesn't just link the [1503] apps. It eliminates 15 hours of manual [1505] work every month. It makes you $5,000 a [1508] month. It generates 15 booked sales [1510] calls. Also use specific metrics rather [1512] than general claims. So people always [1514] say stuff like this improves your [1515] engagement. Don't say stuff like [1516] improves your engagement. Say this [1518] increases the engagement. This increases [1519] the number of people that like your post [1520] by about 30% on average. Emphasize the [1523] speed to implementation as a key [1524] advantage. So say hey instead of working [1526] with a big consultancy and spending 3 [1528] months to get a system perfectly [1530] programmed for you. We can actually do [1532] 90% of it directly in this drag and drop [1534] tool and I can do it for you in the next [1535] 48 hours. From there we can verify that [1537] it works. Once you verify that it works, [1539] then we can talk about investing more [1540] money and maybe building out a dedicated [1542] solution. But that's how you do it, [1543] right? Speed to market. And then frame [1545] the pricing against the cost of [1546] alternatives. Like, well, you know, this [1548] system replaces approximately 1.5 staff [1551] members. So instead of you having to [1552] hire 1.5 staff members and then also pay [1554] 1.5 staff members, you can do it all [1555] completely automatically with this [1557] system for a low monthly rate. How does [1559] this actually look in practice? If you [1561] want a simple road map, then find a [1563] proven template. So, I have a ton of [1564] videos that I actually give you guys all [1567] of the templates and everything that you [1568] guys need. Adapt the template to the [1570] client's industry. So, let's say you're [1571] doing, I don't know, videography, but [1573] the template is about coaching. You [1575] know, just go into the template, change [1577] the terminology and the language from [1578] coaching to videography. You'll be a lot [1580] better off. Then, focus on business [1582] outcomes. So avoid things like I'm going [1584] to use a complicated three-step pipeline [1587] that involves make.com, an open AI call, [1590] some sort of web hook call back, and uh [1593] ultimately some hook management service [1595] to accomplish your project. And focus [1597] more on stuff like this is going to save [1599] you $1,500 a month by eliminating one of [1602] your staff members and allowing you to [1604] take that time and spend it on something [1606] else that makes you more money. Then [1608] create a simple demo where you actually [1609] walk through the project start to finish [1610] and then just price based on the value [1612] delivered. You know, if you think that [1613] this is going to save them, let's say [1614] $5,000 a month, you can actually charge [1616] them something like, you know, $2,000 a [1618] month to set it up and then maintain it. [1620] If you're a student, you can make [1622] significantly more money with artificial [1623] intelligence, with automation, and with [1625] simple drag and drop tools than most you [1627] guys will ever be able to make if you [1628] guys choose that traditional path that I [1630] showed you earlier. Get some sort of job [1632] and work your way up the corporate [1633] ladder. It's unfortunate for me to say, [1634] and I'm certainly not trying to push [1636] anybody away from a path that they might [1638] have committed to. I definitely don't [1639] want to. I myself went to school and [1641] finished school, but Lord knows had I [1642] continued going down the path that I was [1644] going down, I never would have made even [1646] a fraction of the money that I'm making [1648] right now. And I also never would have [1650] had anywhere near as much freedom, never [1651] would have had anywhere near as much [1653] enjoyment in the work that I'm doing. I [1654] never would have met anywhere near as [1656] many cool people. So, I'm very glad that [1658] I made the decision that I did. And I [1660] just I guess wanted to share with you [1661] what a practical way to do that looks [1663] like in this video. Hopefully you guys [1664] enjoyed. If you guys got any questions [1665] about this, feel free to drop them down [1666] below. I'm more than happy to help. If [1668] you guys want to undercut or streamline [1670] that whole process that I showed you [1671] guys in this video, definitely check out [1673] Maker School. It's my day-by-day [1674] accountability roadmap where I show you [1676] guys how to go from zero to one in just [1678] 90 days. And I actually guarantee you [1679] guys your first AI automation customer [1681] within that period. If not, I give you [1683] your money back assuming that you follow [1684] the steps and you know, actually put in [1685] an earnest effort. Thank you very much [1687] for watching. Please like, subscribe, do [1689] all that fun YouTube stuff. I'll catch [1690] youall in the next video.

Video: https://www.youtube.com/watch?v=QTWBgFLuNvY
Title: I Sold AI To 100+ Businesses, And I Found THIS
[0] Hey, so I've sold AI at over a 100 [1] businesses. Here's literally everything [3] I know about selling AI on a whiteboard. [5] The first is if you really want to crush [6] it in this space, you need to focus on [7] results over process. Results are the [10] things that your systems deliver. [11] Process is how your system delivers it. [13] In reality, unfortunately, very few [15] people care about the latter. The vast [17] majority of people care about the [18] former. So clients in reality don't care [21] about the underlying mechanisms of your [23] automations. They don't care about your [24] coding practices. They don't care about [26] your implementation details. They don't [27] care that your system covers all edge [29] cases. They don't care that your system [30] was made in Rust or Golang or naden or [33] make.com. What they care about is they [36] care about whether it delivers results. [38] So if you can start focusing on the [39] deliverables or the outputs of your [41] system, aka my system saves you this [43] time or makes you this money and ignore [46] the technical implementation details [48] unless when they're explicitly requested [49] by a client, which will occur sometimes [51] but very very rarely, you're going to [53] win because you're going to speak the [54] same language that clients expect. Okay? [56] And this is one of the major mistakes [58] that I see when I'm coaching people in [60] my communities. We tend to overexlain [61] the technical details as AI automation [63] developers and how it works because [65] that's all that we really deal with. [66] That's most of our job. If you think [67] about it, it's natural that then we [69] focus on that. But clients don't see [71] what goes on inside of the system. To [73] clients, your system, the one that you [75] deliver for them painstakingly sweat and [77] bleed, is just a black box. And what it [80] does is it takes in some money and then [83] it produces a lot more money. Okay? This [85] is all that clients see from the outside [87] in. So they don't actually want to look [89] inside of the inner workings of said [91] box. They don't actually want to peel [93] back the curtain and check out your cool [95] cloud hosted serverless NAD automations. [98] What they care about is the input and [100] then ultimately the output. They care [102] about things like how fast you can [104] convert input into output. They care [106] about things like how big of a multiple [109] you produce here. Is it like a 3x ROI? [111] Is it like a 5x ROI? They care about how [114] easy it is for them to put things into [117] the system or take things out. They [118] don't care about what actually goes on [120] inside of the system. And if you guys [121] can understand this earlier rather than [122] later, you'll save yourself a ton of [124] headaches. So when you shift from [126] explaining technical architecture, which [127] you know some clients are going to [128] tangentially care about, but the vast [130] majority don't actually give a for, [132] to focusing exclusively on business [133] outcomes, what sort of return on [134] investment you're going to generate, how [136] much money you're going to save them, [137] how much chaos in their business you're [139] going to reduce, how many people you'll [140] be able to lay off, your close rates, [142] that is the percentage of people that, [144] let's say, you jump on a sales call with [146] and then convert into paying clients, is [148] going to skyrocket, and so will your [149] average order value. And that just is a [151] little acronym here for the average [152] amount of money that you make off a [154] client on their first order. Okay? So, [155] if you get these, you're going to be way [157] better off. Most successful client [158] presentations follow a very simple [160] pattern. So, focus on showing them what [163] information they need to know. There's [165] going to be some essentials, things [166] like, hey, here's how you're going to [168] log into the system. Here's how you're [170] going to adjust the data. And so on and [171] so forth. And then focus the vast [173] majority of your presentations on what [175] clients are going to receive [176] results-wise. Then the estimated [178] timeline and cost. Remember this up [181] here, this is just tangential to the end [182] result. What clients actually care about [184] are, you know, ultimately the results [186] and then what they have to do in order [187] to get it done. Additionally, many [189] automation agencies always feel [191] compelled to justify fees and the way [193] that they do so is they try and [195] overcomplexify things. Clients don't [197] actually want that. Clients are actually [198] willing to pay you way more money for a [200] simple explanation versus a complex one. [202] as long as your simple explanation is [204] basically, hey, you pay me X dollars and [207] I will pay you, you know, Y dollars. [209] Okay? So, just focus on this equation. [212] This is what people care about. People [213] don't care about fancy overengineered [215] terms. They don't care about big fancy [217] acronyms. They don't care about big [218] fancy automations. What they care about [220] is the universal language that all [222] business owners speak. Money, dollar [223] signs, return on investment. So, here's [225] some quick insights on client psychology [227] that I've gleaned in probably over 500 [229] sales calls. Now, the vast majority of [231] clients are concerned with risk [232] reduction. They don't care about [233] innovation. So, you're going to want to [234] avoid terms like revolutionize, disrupt, [237] gamechanging. Clients don't care about [239] that. Clients care about, hey, I'm going [240] to deliver you a measurable three times [242] ROI on the money you spend with me. [243] Another big thing is that decision [245] makers typically fear looking [246] incompetent when they don't understand [248] technical details. This is sort of an [249] ego thing, but hey, a lot of people get [250] into business for ego reasons. So, if [252] you can just avoid the technical details [254] and keep things simple and easy to [256] understand, people are just going to [257] like you a lot more by proxy. If you [258] have concrete examples of past success, [260] that'll vastly outweigh your super [262] complex theoretical explanations or [264] super poetic direct sales letter every [266] time. So, just frontload actual results [268] that you've delivered either in that [269] person's vertical or similar systems [271] that you delivered for people in other [273] verticals. And then ultimately, we focus [275] on reliable execution here over cutting [277] edge technology. What's a good example [278] of what I mean here? Up until quite [280] recently, most NAD agents looked really [282] sexy, but they did very, very little. [285] And instead, you know, people preferred [287] simple linear automations. I think as [289] NAD agents tend to, you know, [291] everything's improving over time with [292] the strength of these models. I think as [294] things improve with the strength of the [295] models, eventually NAND agents and [297] similar formalizations are going to be [298] fine. But for now, you know, simple [300] straight line automations that take a [301] process that's producing like a 2x or 3x [303] ROI and turning into a process that [305] produces a 10x ROI. That's what business [307] executives actually care about and [308] that's what they're willing to invest [310] in. Okay. So, here's a simple SOP. [312] That's for standard operating procedure [314] that you guys could use next time you're [315] faced with this sort of situation. Step [317] one is to identify the client's business [319] problem. Once you've identified the [321] client's business problem, and by the [322] way, this is going to take something [323] like 70% of your conversation. Focus on [325] the inputs that you're going to need [326] from the client. Create a simple [328] explanation of how the system's going to [329] work, focusing on their inputs, not on [331] what goes on inside of that scary black [333] box. Then demonstrate concrete outputs [335] or results, social proof. Then provide [338] clear timeline and very clear pricing. [340] Focus on simplifying the price wherever [341] possible and then close your deal based [343] on outcomes and not on implementation. [347] Here's a really quick and easy hack that [349] should get you guys in the right mindset [350] of this. Most people when they write [352] cool things they've done case studies, [353] awesome accomplishments, past [355] experiences, they they'll do something [356] like this. I built an automated CRM for [360] a B2B company that produced them $10,000 [364] a month in savings. This may seem like a [367] pretty good case study, but it's not. [369] You know why? Because you spend the vast [371] majority of this case study focusing on [372] the implementation details. What you [375] did, okay, I built an automated CRM and [378] then uh who you did it for for a B2B [380] company. The only part that clients [383] actually care about sucks for me to say [385] or the vast majority of their care is [387] going to be the $10,000 a month in [389] savings. So, if you want a quick and [390] easy hack that should just re that that [392] you guys can use to reorient your focus [394] and your priorities, here's a [395] representative example. Instead of I [397] built an automated CRM for B2B company [398] to produce them $10,000 a month in [400] savings, you say I saved $10,000 a month [403] for a B2B company through an automated [406] CRM. Do you guys see how we're now [408] rearranging everything here? The thing [410] that matters is the first and most [412] important thing that we frontload. Okay? [415] And then everything else here we [417] backfill. Backfill just means stick at [419] the end. So if you guys want a quick and [421] easy I don't know if this is called a [423] pneummonic or just like a way of [424] thinking. Think about this. Think about [426] when you explain something to a client, [428] start with the results. Worry about the [430] implementation later. They'll thank you [431] for it. Okay. Another big shift that [434] significantly improved both my monthly [435] revenue and my peace of mind was going [437] from service provider to a partner. All [439] right. So, the second major revelation [441] here was when I discovered that clients [442] don't actually want blueprints. They [444] don't want tools and they don't want [446] systems. What they want are ongoing [448] what's called containerized service. A [451] containerized service is as you guys can [453] guess something that involves a [454] container which is basically that black [456] box that I talked about earlier that [458] just delivers consistent outcomes that I [460] manage fully. So I actually have full [462] responsibility and full ownership of [464] said system and I take ownership of the [466] inputs and the outputs. The second that [467] I got into this mindset I started [469] printing. Okay. Like when I started I [472] focus on delivering these simple one-off [473] automation projects. The benefit of [475] one-off automation projects is obviously [476] they're easier to get if you are a total [478] noob. But the downside is every time [480] that you deliver one, okay, the next [481] month your revenue just hits zero again. [484] And so if I could just graph, you know, [486] revenue over time, basically like you [489] I'd make a lot of money month one, but [490] then month two I'd make less. Month [492] three maybe I'd make more. Month four [494] I'd kind of middle and I wouldn't really [495] be able to consistently grow my [497] business. Now, instead, I pivoted to [499] focusing on becoming a partner of a [501] business, aligning long-term incentives [503] and and pitching myself as a retainer [505] where I provided a consistent recurring [507] service. And uh when I did this, I found [509] that monthtomonth, I may not have had [510] massive spikes like I did before, but I [513] still had minor spikes. And because I [515] was focusing on recurring revenue and [517] partnerships, I ended up growing over [519] time significantly more than before when [521] I was always sort of like yo-yoing [522] around. So, when you do one-off projects [523] and stuff like that, you typically get [524] unpredictable revenue streams. And [526] that's simply by nature of the thing [527] that you're selling. The real leverage [529] in automation is when you go [530] retainerbased, subscriptionbased, you [532] basically have some sort of MR. So I [534] basically shifted from I will build you [536] this automation to I'm going to generate [538] you these results every single month. [540] And this improved my client retention [542] and it also improved my peace of mind. [543] This actually required a complete and [545] utter rewrite of my whole business [546] model. Previously, I was charging for [548] the time spent building. So I cared a [550] lot about, you know, what am I putting [551] into this project? I want to make sure [552] I'm being compensated commenurately with [554] what I am delivering. In reality, [556] clients don't care about that. What they [557] care about is what they're getting out [559] of the project. And that's what you [560] should be charging for. If you deliver a [562] client $10,000 a month in value on a [563] recurring basis, you can charge them [565] $3,000ish dollars a month in order to [567] deliver those services. And even if you [569] build a system that does it all [570] completely autonomously, here's a quick [572] hack. Clients will continue paying you [574] that $3,000 a month so long as your [576] system provides value because they just [577] don't want to have to deal with it. It's [578] working, right? They don't want to touch [580] something. If it ain't broke, don't fix [581] it. I don't want to have to readjust [583] something if it's already producing them [584] consistent ROI. So instead of me doing, [587] you know, charging for the time spent [588] building, I started pivoting. I started [589] charging monthly retainers for the [590] ongoing value delivered instead. I then [593] started taking complete and utter [594] ownership of outcomes, which just meant [596] clients no longer needed to really get [597] the technology themselves. All they did [599] is, you know, I gave them a ping every [600] couple days. I gave them little progress [601] updates and how things were going. I let [603] them know every time that I delivered [606] some sort of result that they were [607] interested in. We're talking revenue [608] here. We're talking savings. And then [610] you know me and my team handled [611] everything else. Now I say team loosely [613] here. I had a VA but you know as you [615] scale up an agency obviously if you guys [616] want to scale your team and whatnot. [618] Teams a lot of the time scare people. [621] People think oh no if I'm getting a team [623] to deliver my project clients won't like [625] that. Well actually when you get in the [627] habit of delivering results as opposed [629] to charging based off of the time that [631] you are physically spending working [632] clients like that because a team just [633] implies that you can scale up what is [635] working right now significantly more [637] than if you were alone. Okay. So, here [639] are some essentials for my retention [640] strategy. Proactive system improvements [642] demonstrate an ongoing commitment to [644] results and not just my results, but [645] client results. A lot of people talk [647] about never doing work for free. It's [649] usually some, you know, big dick tech [650] bro that's like, I never work for free, [652] man. People are always paying me or I'm [653] not giving them anything. I understand [655] that mindset and there's definitely [656] instances where if you work for free, [658] you get taken advantage. But I've always [659] thought that this was sort of silly [660] because every time that I have [661] personally given anything to people [663] proactively ahead of time without [665] asking, hey, can you pay for this thing? [666] I mean, a couple things. Usually, they [668] end up paying me anyway because they [669] feel this immense sense of reciprocity [671] and they're so overwhelmed with the [672] value that I provide them, but two, it [673] just makes for a much better working [674] relationship, and it shifts me from [676] being just like that builder that you [677] hand your scopes to to somebody that can [679] actually go proactively identify [681] problems and then solve them. So, the [683] whole thing is becoming a problem [684] solver, not necessarily an automation [686] consultant. And that's what I think a [687] lot of people don't understand. They [688] think that, you know, AI and automation [689] is about the A and the automation. It's [691] not. It's like any other business model [692] where you focus on delivering results [694] for clients and solving problems that [695] they suffer from. A couple other things, [697] um, regular performance review meetings [698] and updates. So, I just scheduled, you [700] know, updates every 24 to 48 hours. I [702] gave them a window which they could [703] reach me in 12:00 p.m. till 2 p.m. PT, 5 [706] days a week. So, that just eliminated a [707] lot of needless back and forth, [709] especially at late hours of the night. [710] And it just, you know, constantly [712] allowed me to claim my wins. I also [714] focused on clear, jargon-free reporting. [716] I mean, what do clients care about? In [718] my case, I was selling primarily cold [719] email systems. on selling primarily [721] things that revolve around growth. So it [722] tends to be leads, tends to be deals [724] closed, it tends to be revenue, it tends [726] to be, you know, number of of records [728] moving through a CRM. They don't care [729] about 23.4% efficiency improvements in [732] the sector alpha. Nobody gives a crap [734] about that. Okay? What they care about [736] is ultimately how much money they're [737] making, how much money they're saving, [739] and then how much chaos or [741] organizational improvements that you can [743] provide. All right? And then lastly, I [745] started doing monthly strategy sessions [747] to identify new automation [748] opportunities. I didn't ask them about [749] this. I just started doing them. I [751] started providing monthly road mapaps [753] where I see opportunities that they're [755] not focusing on. And then I proactively [757] deliver, you know, a big step-by-step [758] breakdown of what I would do if I were [760] in their shoes. So, if you guys want an [761] actual practical example of that, I have [763] something I think it's a 15 or a 20page [765] roadmap proposal that I delivered to a [767] client that I later closed them for [769] $10,000 a month plus 7% revenue share. I [771] think that's month three or month four [772] in Maker School. But that's the sort of [774] thing that I'm talking about. I write [775] extraordinarily detailed assessments of [777] where the client's at and what I would [778] do if I were in their shoes. And then I [779] just give it to them and say, "Hey, you [780] know, if you want somebody to implement [781] this, if you like it, if you vibe with [783] this, I'm more than happy to do so. Just [785] wanted to point that out because if I [786] were in your shoes, I would want [787] somebody to do that to me." Okay? So, [789] you're positioning yourself as a [790] partner, not necessarily just a builder. [791] Here's a quick SOP for that. You [793] identify the client's ongoing needs. [794] What are needs? Needs are typically [796] revenue. They're typically savings, aka [800] profit, or there's some sort of chaos, [802] burnout, you know, subjective amount of [804] work, quality of life, that sort of [806] thing. Then you design your solution as [808] a service, or you design your service as [810] a solution, I should say. Set up your [811] initial automation system. Implement [813] some sort of monthly reporting. Now, I [814] say dashboard here just cuz dashboard is [816] a pretty fun buzz word. You don't have [817] to do a dashboard. You could literally [818] have like a simple Google doc that you [820] fill in on the last day of every month [821] and then hand to them. You could do it [822] in like a Slack message. You just need [823] some sort of consistent way to do this. [825] Then provide ongoing maintenance and [826] optimization. Okay? Deliver consistent [829] monthly results as long as you're [830] delivering some sort of again revenue [834] savings or reduced chaos. Then basically [838] every month you can come back to that [840] client. You can say, "Hey, here's some [841] other things I found. I want to do this [842] for you and you know, here's some cool [844] thing I've already done for you." And [845] they'll pay you more for it. Okay? So [847] take the long-term view here, not the [848] short-term view. The short-term view is [850] I need to be paid for every little tiny [851] thing that I do. The long-term view is, [853] hey, if I consistently deliver value, [854] I'm make myself indispensable to this [856] person and their team, I can make way [857] more money than if I don't. The third [860] major thing I found out about was what [861] I'm now calling the ROI formula, which [863] is where you price based off of value, [864] not effort. I touched on this earlier, [866] but yeah, clients don't really care [867] about how much time I spent building [868] automations. They only really care about [869] the results I deliver and the ROI that [871] they receive. So, what I mean is, you [873] know, if I spent 100 hours on an [875] automation or if I duplicated a template [877] and then spent 3 hours to the client, it [879] it looks the same, right? I mean, this [880] box, again, I I keep bringing this up [882] because I think this is just a brilliant [884] um example. This box is the same to the [886] client regardless of whether it took a [888] 100 hours to build or it took, you know, [890] 5 hours to build. So, I mean, if the box [892] looks the same to the client, then why [893] don't I focus on doing it in 5 hours and [895] not 100 hours, right? Now, the [896] traditional agency model focuses a lot [898] on tracking hours. The hourly billing [900] model is sort of just baked into [901] people's understanding of agencies. Most [902] people are like, "Oh, you should never [903] bill hourly. Hourly is stupid." I'm [905] actually kind of against that. You [906] should do whatever is the lowest [907] friction way to get your first few [909] dollars in your bank account with your [911] business and you should worry about [912] everything else after that. But that [913] said, obviously after you do get your [914] first few dollars in a business, you [916] should focus on, you know, more scalable [918] and higher leverage ways to do so. And [920] so that's where you move away from [921] tracking hours and billing. And the [923] reason why that's bad is because it's [924] sort of like misaligned incentives, [926] okay? Like your incentive is to do one [927] thing and then the client's incentive is [929] to do the exact opposite. If you think [930] about it, like usually charging people [932] per hour means that you're incentivized [934] to work more. So work more hours and [937] deliver fewer results. Then the client [939] is sort of their incentive is for you to [941] work fewer [942] hours. So what I mean is like this is [944] like you know 100% fundamentally [948] uh opposed right? Um so instead of [950] billing hours you know after you've done [952] your first couple of gigs or whatever [953] you've got some confidence in the [955] business model what you do is you do [956] what's called the ROI formula which is [959] basically how much value am I [961] delivering? Value again is revenue. it's [965] savings or it's something a little more [967] subjective like reduction in founder [969] chaos. And what you do is you figure out [971] estimated how much money you can make [972] them. So if I make them, you know, 10K [974] in revenue, you can charge them about [976] 30% of that. So I can now charge them [978] about $3,000 for that. Okay? If I save [980] them 10K, you can usually charge about [982] 5K, about 50% of that. Revenue is a [985] little further away from profit. Savings [987] is obviously, you know, synonymous with [988] profit. And because ultimately the only [990] thing that a business owner cares about [991] is their bottom line. You can typically [992] charge more for guaranteeing savings [994] just because there are fewer steps [996] needed to get to the value that they're [997] seeing. And then you know chaos is a [999] little bit more subjective but you can [1000] definitely tack chaos on your ability to [1003] reduce it onto the price that you're [1004] charging. Ultimately by focusing a [1006] return on investment as opposed to [1008] hourly billing I was able to target much [1009] higher value clients and they also had [1011] significantly larger business problems. [1013] And then instead of having to compete on [1016] price for smaller things like a lot of [1017] the time you see on gig platforms like [1019] Upwork or Fiverr or Malt or whatever, um [1021] I was able to still acquire some clients [1023] from those platforms. Not saying those [1025] platforms are bad or anything, but then [1026] change it from like the typical hourly [1028] model where maybe I could make $500 off [1030] a client to a value based one where I [1032] deeply understood their problems. I [1034] consulted with them on solutions. Then I [1036] pitched my solution as basically being [1037] an all-inclusive all-in-one package that [1039] dealt with everything and then charge [1040] them $5,000 for same thing instead. [1042] Okay, so here's some premium positioning [1044] tactics. That's basically what I was [1045] talking about a second. The first is [1046] document their metrics before [1048] implementation and then after [1049] implementation. What do I mean by before [1051] and after implementation? I mean you you [1053] actually ask them. So you do like a [1055] consultative call and on the call you [1058] say so how many sales are you doing this [1060] month? What sort of revenue are you [1063] driving this month? What sort of like [1064] expenses are you doing this month? This [1066] may seem like kind of a lot to ask [1068] somebody on a sales call. And you know, [1069] of course, some social acuity is [1071] required here. But if you are going to [1072] be somebody's like operator, if you're [1074] going to be somebody's, you know, chief [1076] automation person or fractional ops [1078] person, like you're gonna have to know [1079] this stuff anyway. You might as well get [1080] it out of the way now. And obviously you [1082] could hedge things in uncertainty and [1083] you can do estimates and whatnot, but [1085] literally get it out of the way. I like [1086] to say stuff like, "So, how many sales [1088] did you make last month?" Okay, that [1089] makes sense. You know, I take your [1091] average order value is probably [1092] somewhere between 3 and $5,000. Oh, no. [1094] It's $2,500. Okay, so you made what? [1096] Like 5 * 2500. My math ain't so good. [1099] What's that? Like 15K, something like [1100] that. Oh, 12.5. All right. All right. [1102] Um, cool. So, 12.5K in revenue. You [1105] know, are you taking most of that money [1107] home or what are we looking at? What I'm [1108] what I'm trying to say is, you see the [1110] vibe there? The vibe isn't I am saying, [1112] "Hey, here's a spreadsheet that I [1113] created with all of your numbers." No, [1115] the vibe was, "Hey, can you run me [1116] through your business?" Hm. I have some [1118] experience in similar businesses. Here's [1120] some estimates. Oh, those estimates are [1122] a little bit wrong. Gotcha. What do the [1123] actual numbers look like? Okay, sweet. I [1125] have the client more or less agree to [1127] everything that I'm saying and I have [1128] them usually it's it's almost like [1130] Inception if you guys have ever seen [1131] that movie where the whole idea is you [1133] don't actually tell somebody something. [1135] You get them to come to the conclusion [1136] on their own. So sales I don't know [1138] pretend you're Leonardo DiCaprio. The [1140] point I'm making is focus on the [1142] financial impact rather than the [1143] technical specifications. And when you [1145] do your case studies remember the [1146] example that I performed above where I [1148] said you know I saved $10,000 a month [1150] for a B2B manufacturing company using an [1152] automated CRM. Okay, show the financial [1155] impact first rather than the technical [1156] specs. That's what they care about. [1158] Additionally, offer performance [1159] guarantees. Nobody really talks about [1160] this or if they do, they usually talk [1162] about guarantees negatively, but like [1163] let's say you offer a guarantee and you [1165] say, "Hey, I guarantee you I'm going to [1166] book you 20 qualified appointments in [1168] the next 60 days or you don't pay." [1170] Okay, what actually happens if you're [1171] good at your job? You're only going to [1172] be in that position where you don't [1173] generate 20 qualified appointments in 60 [1175] days like 10% of the time. Okay, so what [1178] does this actually mean? Well, this [1179] means that you lose 10% of your bottom [1182] line or your business. Okay? Do you [1185] know? Do you have any idea how much of [1187] your top line having a guarantee [1189] increases? You could increase your top [1191] line by 300%. By having a guarantee just [1195] in terms of CVR alone, the number of [1197] people that are saying yes to you, let's [1198] say responding to cold emails, booking [1200] calls with you through Upwork, saying [1202] yes to you on communities or LinkedIn or [1204] anything like that. Do you know what [1205] this means mathematically? This means if [1207] you have a guarantee, it means that you [1209] are making [1212] 270%. Then if you don't guarantee, you [1216] make the normal 100%. That's a 2.7x [1219] difference. So if you want to like very [1221] quickly and easily just about 3x your [1222] business, offer a performance guarantee [1224] that demonstrates confidence in results. [1226] Obviously, you know, you need to bake [1227] this in some uncertainty. Like you need [1228] to be good at what you're offering, [1230] right? So if this is the very first time [1231] you've done something, offering a [1232] performance guarantee may have a higher [1234] potential downside than 10%. But I also [1236] think about it this way. If you offer a [1238] guarantee, if there are two universes, [1240] in one universe you offer a guarantee. [1241] In another universe, you don't offer a [1242] guarantee. In which universe do you [1244] think you're more likely to actually do [1245] the thing that you guarantee the client, [1247] right? Do the freaking thing. Obviously, [1249] the one where you offered the guarantee [1250] because if you don't deliver the [1252] guarantee, you don't get paid. So, your [1253] incentives are aligned. You are [1254] essentially committing to this thing. [1256] You're going allin on this thing. And [1258] that's the sort of thing that you need [1259] to do if you're a beginner in any [1260] business model. You need to commit to [1262] it. You need to kind of get ahead of it. [1263] All right. And then lastly, and this is [1265] sort of a hack, big thing that made a [1266] difference for me was just presenting [1267] multiple pricing tiers. Like I always [1268] used to just present one pricing tier. [1270] I'd say, hey, you know, it's X upfront [1272] and then it's I don't know Y per month [1275] and then it's I don't know like Z per [1278] lead or something. This is specifically [1279] for cold email. Obviously, every thing [1281] that you're selling can have a different [1282] pricing scheme. Okay, this is what I [1284] used to do. I used to just do this once [1285] and then I'd say, "All right, that's the [1286] price. Oh, you say no to it. Okay, well, [1288] you know, I guess I'll just go screw [1289] myself." Well, actually, what's better [1291] is you change it. So offer multiple [1294] deals or multiple pricing packages [1296] because this changes the number of [1299] potential options that the client has [1301] from two to three. Okay? Like for [1304] instance, right now this is the client [1306] and if you just give them one price, [1308] they could either say yes to you or they [1310] could say no to you, right? And they're [1311] going to say yes to you some percentage [1312] of the time. They're going to say no to [1313] you some percentage of the time. There's [1314] two options. Okay? In this universe, we [1317] have multiple pricing tiers. They could [1319] say yes to one. then they could also say [1322] yes to two or they could say no. Do you [1325] guys see how much smaller this no camp [1327] is getting just proportionally? Now, [1328] obviously this is an oversimplification, [1330] but typically if you have more pricing [1331] tiers, you have more pricing options, [1332] the total proportion of the time they [1335] say no to you is lower than if you have [1336] just one. So, here's a quick and easy [1338] SOP. As per usual, identify some [1340] business metrics to improve for the [1341] client. Calculate their costs, calculate [1343] their revenue, calculate their losses, [1345] and then estimate the value of [1346] improvement through your system. Be very [1348] conservative here. Don't be hopeful with [1349] these numbers. Just be conservative cuz [1351] you want the client to believe these [1352] more than you. Then price at 10 to 20% [1355] of the annual value that you're driving. [1356] Now this is annual. Okay? So this is [1358] specifically for an annual plan. I think [1360] if you're doing [1361] monthly probably do something like 30%. [1363] Well, it's actually 30 to 50%. But I [1365] know a lot of people are closing bigger [1366] 6 or 12-month deals here. And then [1368] present as some sort of ROI based [1369] investment. Hey, you know, you pay me X [1371] Y and Z. I'm going to be delivering [1373] 3xyz. Guarantee minimum performance. I [1375] will guarantee you at least 2xyz in the [1377] next 90 days or you don't pay. or you [1379] know I'm going to continue working for [1380] free until I do or I'll buy you a taco [1383] and then you know send you a Rolex, [1384] right? There's there's a million in one [1386] ways to do this sort of thing. If you [1387] guys are interested in what like really [1388] good guarantees look like um look at the [1391] $und00 million offers book by Alex [1393] Rosie. And then finally you actually [1394] deliver and document results and you [1396] just take the wins every time you can. [1398] Okay. The next big thing is the client [1400] psychology strategy. Essentially, the [1402] big thing that made me more successful, [1404] I think, than the vast majority of other [1405] automation agencies that started around [1407] the same time was I understood client [1408] psychology. I mean, I did go to school [1410] for psychology, which which helps. So, I [1411] did behavioral neuroscience [1412] specifically, which was kind of neat. [1413] And I wouldn't consider that to have [1415] been super valuable, but it did at least [1417] get me in the mindset of somebody that [1418] thinks about thinking, which I think is [1419] is really important. So, yeah, you know, [1421] this is really the crucial element that [1423] tied everything else together. Like, a [1424] business will make decisions initially [1426] based off emotional factors first and [1427] then they'll justify them with logic [1428] afterwards. So, I got in the habit of [1430] recording my calls. After I recorded [1432] several hundred calls, identified the [1434] primary emotional drivers were fear of [1436] falling behind competitors, frustration [1437] with inefficient processes, desire to [1439] focus on higher value work. There were [1441] obviously some tangentials like, you [1442] know, business owner to business owner, [1444] um spending more time with like your [1445] significant other or your family, not [1447] tearing your hair out, feeling like [1448] you're producing impact or driving [1450] change, right? These are a few of many, [1452] but I'd say these are probably the [1453] biggest ones. And obviously like [1454] financial dissatisfaction. Yeah. I just [1456] noticed that like most of the time when [1457] I failed, I was literally just focusing [1458] on the technologies capabilities. I was [1460] spending, you know, if like if this is [1461] my call here, okay, I would spend 60% of [1464] the time talking about the solution. The [1467] successful calls that I had, I would [1469] spend maybe 20% of the time talking [1471] about the solution. On the unsuccessful [1472] calls, I spend like 60% of the time [1473] talking about the solution. Do you know [1474] what I spent the other like 80% of the [1476] time talking about the successful calls? [1478] the [1479] problems, the [1481] fears, the [1483] worries, the inadequacies. Like it sucks [1486] to say because this is such a negative [1488] and poor way of framing this. But guys, [1490] like we are in the business of making [1492] money essentially. So if you want to be [1494] successful and effective at making [1495] money, these are ultimately things that [1496] you focus on. You focus on positioning [1498] your solution not in the context of the [1500] technology, the cool things that it [1502] does, but on the problems, the fears, [1503] the worries, and the inadequacies that [1505] that solution solves. So what you do is [1508] you validate the pain, amplify the cost [1510] of an action, present the solution is [1512] inevitable anyway, and then demonstrate [1514] a bunch of proven results, and then [1515] remove risk through guarantees. This is [1517] sort of like, I don't know if you want [1518] to call like an SOP. Now, there's a [1520] bunch of different ways to address [1521] objections. To be clear, I don't [1523] actually really like uh addressing these [1524] objections on a call. What I like to do [1526] is I like to inoculate against these by [1527] just having the client buy into [1528] everything that I'm talking about. So, [1530] anytime there's an objection about [1531] value, like I'm not really sure about [1533] this, that usually points out to me that [1534] I didn't demonstrate the ROI and I [1536] didn't get the client to believe in the [1537] ROI. So, this is something that you guys [1538] can co-opt as well. If it's a question [1540] of like social proof or whatever, hey, [1541] you know, can I talk to a testimonial? [1543] That's what I've been into. Trust [1544] objection. So, that's usually where you [1545] need some more authority. You need some [1546] more social proof. Or you might just [1547] have something weird when somebody [1548] Googles your name. Maybe there's a [1549] Reddit post saying like, oh, this person [1551] sucks and this person did a poor job. [1552] That actually happened to somebody in my [1554] community, which kind of was, you know, [1555] like if there are some concerns around [1556] implementation, and there will be, but [1557] it'll be like a tenth of the actual [1559] concern. Hello bird landing on my [1560] balcony. Nice to see you. You know, you [1562] need a clearer process explanation. You [1564] don't need a more complex process [1565] explanation. If anything, you need to [1566] like simplify it or make it dumber. You [1568] know, a lot of the time if somebody is [1569] saying, "Hey, I don't really believe [1571] that this specific technological [1572] solution will do X, Y, and Z because of [1574] some other competing standard." It's [1576] usually because there's some deeper [1577] decision-making fear and you probably [1578] failed at one of these, not the actual [1581] like technical heart. Okay. All right. [1584] Let's wrap up this puppy with an SOP on [1587] how to deal with client psychology. The [1589] first is identify the emotional and [1590] logical pain points. Really cool thing [1591] is most clients will have the exact same [1593] ones just rebranded. And this is the [1595] same across industries as well. Then [1597] quantify the current process costs [1599] through conversation like we talk about. [1601] Amplify the cost of an action. Present [1602] your solution is inevitable anyway. Then [1604] show proof of similar results you've [1606] delivered other people. And then remove [1607] risk through guarantees. So you're going [1609] to close the deal based off of the [1610] emotional relief you provide. And then [1611] because of this guarantee, you know what [1613] else you're going to do? You're going to [1614] make it logical so they'll be able to [1616] justify it. And then when you do that, [1618] this is what we call no-brainer [1620] solutions in the hood. The hood being AI [1623] and automation agency. You know, you [1625] want to make it a no-brainer by both [1627] satisfying their emotional needs and [1628] then also speaking to their logical [1629] ones. All right, hopefully you guys [1631] appreciated this video. If you like this [1632] sort of stuff and want to learn some [1633] real sales tactics, check out Maker [1635] School. We have a live sales workshop [1638] that happens every 2 weeks where sales [1640] professionals come into our community [1642] and then actually do like live role play [1644] in small groups that target specific [1646] objections like this. Walk you through [1647] how to crush sales calls and more. I [1649] also give you a 90-day guarantee that if [1651] you come in my community and then you [1653] implement all the steps that I give you, [1654] you will land your first paying client [1656] or your money back. You know, there's [1657] also a big day accountability roadmap as [1659] well as a number of templates and [1661] resources and a thriving community of [1662] almost 3,000 people. Aside from that, [1664] please like, subscribe, do all that fun [1665] YouTube stuff, and I'll catch you on the [1667] next video. Thanks so much for helping [1668] me hit 100,000 subscribers. Really, [1670] really looking forward to continue to [1671] produce high quality stuff for you.

Video: https://www.youtube.com/watch?v=eFtBMe96E-s
Title: Build An AI System That Finds Viral Content Ideas (N8N)
[0] Hey, in this video I'm going to be [1] building a YouTube trend detector live. [3] This is a system you can use for [4] yourself if you're into personal [5] branding, or you could sell directly to [7] coaches, consultants, people selling [9] info products themselves, and so on and [11] so forth for over $2,000 a pop. I'm [13] going to be building this live alongside [14] you, show you guys all of the detours [16] and mistakes that I take along the way. [17] Let's get into it. All right, so this is [19] future me doing a demo of the system. [22] I've gone through a bunch of rigomeroll [24] in order to get this put together, and [25] you guys are going to see all of that. [27] Um, in a nutshell, this is going to be [29] two separate workflows. One to add or [32] update new trending videos and the other [35] to take everything that you've added and [37] updated and then to send it in a nicely [40] formatted email that I'm calling the [41] daily digest. So, if I click test [44] workflow, the first thing that's going [46] to happen is it's going to pull from a [48] Google sheet database of channel IDs. [51] It's then going to grab YouTube videos [53] from the YouTube API before dumping [56] those into the Google sheet. And then [58] what we're going to end up having is [59] just a list of new videos here alongside [62] view counts. Now, I'm doing this for a [65] couple of channels, but essentially [66] after we're done with this, this YouTube [68] trend detector can then turn on. And [71] when this happens, what we're doing is [73] we are then subsequently reading through [74] this on a schedule, maybe once every [76] couple of days or something. If I go to [78] my Gmail, you'll then see that we now [81] have a list of high quality videos over [84] certain multiples that are then [86] organized really really nicely for us. [88] And you know, we put in the channels [89] that we want to track ahead of time and [91] so on and so forth. But yeah, this is [92] more or less like a simple and easy way [94] to do things. I'm going to run you [95] through exactly what the logic for this [96] looks like. Maybe if you wanted to [98] extend it, I don't know, build a website [99] doing this, recreate one of 10 or [101] whatever. Okay, so let's do the live [103] build. Okay, so let's start with the [105] live build. Here's the current road map. [106] And what I'm thinking about how to get [108] started and then finish this. But what [110] I'm thinking is we're actually going to [111] divide this into two separate flows. The [113] first flow is going to be the ad and the [115] update flow where we're actually going [116] to grab the data directly from YouTube. [118] And then the second flow is going to be [119] the daily digest flow where we basically [121] just send a summarized version of all of [123] the trending content. And in this case, [125] I'll just use an email. But in reality, [127] you can think of this as being [128] deliverable through more or less any [129] means that you want. You could do like a [130] Slack update. You could do SMS. You [132] could spin up a beautiful user [134] interface. So you could have a website [135] and I'll run through each of these in [137] kind, but I just wanted to mention that [139] I got the initial idea from Leonardo [141] Gregorio. He showed me a trend detector [143] that he was using to identify AI and [145] automation related content to find [146] trends that he could, you know, jump on [148] trends. And he's taken a very sniper [149] rifle approach to all this stuff. The [150] guy's grown from basically zero subs all [152] the way up to 20K extraordinarily [154] quickly, much quicker than I did when I [156] started. So um he developed this idea of [159] a YouTube outlier detector based off [161] multiples. Um, and I believe he got the [164] his idea from this website here, one of [166] 10, which basically does all this stuff [168] in the background. And it's like a SAS [169] product. And the idea is what we're [170] going to do is we're going to rebuild or [172] recreate a lot of the same functionality [173] of this app. And then Leonardo's, except [176] instead of using in his specific case, [178] he used I think it was like SQL. I'm [179] just going to do it all inside of a [180] Google sheet just cuz I think SQL is [182] kind of scary and intimidating a lot of [183] beginners. And I just want everybody to [184] like I want everybody to have as simple [186] and as easy and as straightforward a [187] time as humanly possible with this [189] stuff. I personally don't really think [190] we need to use SQL for it. So, with all [192] that said, here is more or less what I'm [194] thinking. For the add or update flow, [196] we're going to start by getting all of [197] the videos for a specific channel. So, [199] basically, we're going to have to add a [201] list of channels that we're monitoring. [203] From there, we're going to grab the [204] individual video data using the YouTube [206] API. And that's just how the YouTube API [208] works. You can grab all videos in one [210] call, but then you don't get a lot of [211] information about each video in that [213] call. You just get a list of IDs. The [215] second step here requires us then to [216] ping each individual video to grab data [218] like views. What I'm going to do next is [220] I'm going to filter all long form [222] videos. So, you know how YouTube you can [223] do shorts or you can do like longer [225] videos like my style. Well, you know, we [227] kind of need to compare them apples to [228] apples. So, I'm just going to filter out [229] shorts. Unfortunately, there's no [231] built-in way using the YouTube API to do [232] this. So, I'm going to do a heristic or [234] sort of like a proxy for shorts. And [236] I'll run you guys through what all that [237] looks like later. Then, I'm going to [239] check if it exists in the database. [240] Database being the Google sheet here. [242] And that's just a fancy term for that. [243] If it doesn't exist, we're obviously [245] going to add it. if it does exist, we're [246] going to update the metrics and stuff [247] like that with the new view count [248] because presumably views change. And [250] then once we have our little database [252] set up, like our Google sheet, what I'm [253] going to do is, you know, once a day or [255] once an hour or I guess just however [257] often we want, we're going to send over [258] some sort of digest. And a digest again [261] can be anything. In my case, I'll just [262] do a quick little email just cuz I think [264] that's the straightest line path. So [265] what's that going to look like? Well, [267] because I'm using a Google sheet, I'm [268] going to store all this data in [269] different sheets. So I'm going to grab [270] all the sheets. Then I'll grab the [271] videos in each sheet. And then for each [273] video list, I'm going to calculate the [274] average number of views. This is sort of [276] how you determine the multiple or how [279] trending a piece of content is. You [281] compare the view count of a specific [284] video against the average view count of [286] all of the videos. Then for each video, [288] we're going to determine the multiple on [290] that. And then if the multiple is over [291] the threshold, we're going to include in [292] the email. So, I like this idea because [294] if we combine these two systems, right, [296] we have something on the left here [297] that's automatically updating the [298] metrics and then something on the right [300] here that automatically checks to see if [301] a multiple is below some threshold. [303] Presumably, these two things are going [304] to make the system evolve and be [306] dynamic. The videos that come in on day [307] one aren't necessarily the videos that [309] are going to come in on day two. And far [310] from being like a negative of the [312] system, I think that's actually a [313] positive cuz sometimes videos get [314] rediscovered later on. And I think that [316] if you want to really assess the [318] performance of a video, you can't just [319] look at everything static like, you [321] know, today or tomorrow. You actually [322] have to look at it as it evolves over [323] time. All right, so that is the whole [325] idea here. Let's actually jump in and [326] build this puppy. So, I got my little [328] YouTube trend detector here. I was just [330] doing a little bit of um wireframing [332] beforehand to make sure that like the [333] YouTube API worked and like logically I [335] could actually hook up my credentials. [336] But aside from that, this is going to be [338] entirely lively build. So, I'm going to [340] create a new Google sheet here and I'll [342] run you through how to do all the [342] connections and everything like that you [344] need as well. Let's uh remove that. I'm [347] just going to call this like YouTube [348] trend detector. [351] Let's just say database. Okay. All [352] right. That seems pretty solid to me. Uh [354] what I have to do is I have to connect [355] this database now. So what I'm thinking [357] I'm going to do is you know how I [358] mentioned we're going to have a list of [360] channels that we're monitoring. So the [361] very first thing is I'm going to make a [362] table called channels. Then over here [364] I'll just have it say channel ID on [367] YouTube. What you do in order to get all [368] the data about a channel is you need you [370] need their ID. And if you're unfamiliar [372] with how that works, I'm going to go [373] over to my channel here. You can grab [375] the ID of Sorry about that. You can grab [378] the ID of a YouTube channel just by [379] going uh I think more and then all the [382] way down to the bottom. Share channel, [384] copy channel ID. Okay, most people now [386] use like little acronym versions like I [388] do, Nicks as opposed to the channel ID. [390] So you can't grab that through the URL [391] for a lot of channels, but if you find [392] yourself in that situation, you can get [393] it from there. Okay, so what I'm going [395] to do is I'm just going to test all this [396] stuff out on one channel because, you [398] know, that's really all that matters to [400] me to start. Then once I've tested it on [402] one channel, then I can worry about [403] dealing with all the other channels. And [404] I'm just going to brainstorm everything [406] that I'm thinking about live so that [407] even when I do end up in a detour in [409] some sort of crappy hole. You know, you [411] guys will see how I do the debugging of [413] this as well. So, first thing I'm going [414] to do is add a trigger where when I [416] click this test workflow button, it runs [418] the flow. And that's pretty simple. [419] Second, I'm going to use a Google Sheets [420] node. And what I want is I just want [422] some way to grab the data. So, I'm going [424] to use the get rows in sheet node. Here [427] I have the ability to add my [428] credentials. Now, if you haven't added [429] credentials before, I'm going to show [430] you how to do it for YouTube in a [431] second. In Google Sheets, all you do is [433] you click oath 2 and then click sign in [434] with Google. Okay, very straightforward, [436] very simple. I've already done this, so [438] I'm just going to close this out and [439] then select the credential that I have, [440] which I'm just calling YouTube. The [442] resource is going to be sheet within [443] document operation get rows. And then [445] the document that I want is going to be [447] this one I just created, YouTube trend [448] detector database. The sheet that I [450] want, if you think about it, is channels [451] because I'm just going to select from [452] this list of channels that I'm [453] monitoring. And that's how we're going [454] to build the flow. Okay, then I click [456] test step. Okay, what am I doing? I [458] actually now have got the data from the [460] Google sheet into NAD. So, we are good. [463] Next, I'm just going to pin the data. [464] And the reason why I'm pinning the data, [465] and I always recommend pinning Google [467] Sheets steps, it's just because, you [468] know, when you turn it from green to [469] purple, um, instead of having to do the [471] API call to the Google Sheets API again, [473] what you can do by pinning it is just [475] like cache or persist the data directly [477] in NAN, which means that for all future [479] runs of this, like if I want to test the [480] workflow, it actually just automatically [482] grabs that data and then runs it [483] through. I don't actually have to like [484] physically make a request to Google. The [486] reason why this is valuable is because [487] they tend to be very fragile, these [489] APIs. So, if you always test every 3 [491] seconds, like I normally do, I'm very um [493] incremental with my testing for good [495] reason, which I'll tell you about in a [496] minute. You know, sometimes the API gets [497] overwhelmed and then you end up just [498] having to like wait like 5 minutes. Who [500] the hell wants to wait 5 minutes, right? [502] Okay, so next up, now that I have the [504] channel ID, if you think about it, I [505] kind of want to grab the video. So, I'm [506] going to go YouTube right here. And uh [507] there are a lot of different functions I [509] grab a channel, get many channels, [510] updated channel, upload, channel, [511] banner, playlists here, playlist items. [514] Okay. So, what I want is the get many [516] videos. Now, you see it'll say [518] credential to connect with YouTube [519] account. So, I've already done this, but [520] I'm going to pretend that I have them. [521] I'm just going to set it up from scratch [522] for you. Okay. So, when you click add [524] connection, it'll say OOTH redirect URL. [526] And then you'll grab the URL here, and [528] it'll have this little callback thing. [529] Don't worry too much about this. This is [531] just like a way that it opens the window [533] up in NAN. What you need to fill is you [535] need to fill this client ID and then [536] this client secret section. If you don't [538] know how to do any of this stuff, just [539] click open docs. Naden actually has [540] pretty good docs on how to get up and [542] running with like service accounts and [543] whatnot. I'll run you through what this [545] actually looks like. What you have to do [545] is you have to go like [547] console.cloud.google.com just like this. [549] And then what you have to do is you have [550] to make a project. Now I've already made [552] a project. So I'm at my first project [553] here. Okay. But what making a project [555] does is you basically just give it a [557] name. So as you see my website here is [558] leftclick. I basically just gave it a [560] name and now it says my first project. [561] What you have to do next is you have to [562] go to APIs and services. Then what you [564] have to do is you have to go to YouTube. [566] And when you go to YouTube, you'll find [567] the YouTube data API. In my case it's [569] V3. Maybe you're watching this video in [571] 2027 after the robots have won. So, uh, [573] maybe you are a robot, in which case, [575] please spare me and my family. Those [576] will be a this might be a V something [578] else. Okay. Uh, you're going to want to [580] click like I forget what the verbiage [582] is, but I think it's like, you know, add [583] or enable or something. Once you're done [585] with that, if you go to manage, then [588] you'll go down to credentials over here [590] on the right hand side. And then what [592] you what you'll have is you'll have two [594] sections. You'll have like um API keys [595] and OOTH 2.0 client ID. Now, I've [597] actually already created my own [598] credentials here quite a while ago for [600] uh for YouTube and whatnot. What you can [602] do is you can go oath client ID and then [604] here you actually create your own. So [605] what I'm going to do [607] is was it web application? There we go. [609] And then the name will be whatever you [611] want. Whatever I [613] want. Okay. Um under authorized [616] JavaScript origins and authorized [618] redirect URIs. We're going to go back to [621] here. Go back to the YouTube or other [624] Google specs. And then what we want is [628] we want this OOTH single service. So now [630] it's going to walk us through all these [632] steps. Figure out OOTH consent screen. [635] Let me see. Let me see. From your NAN [637] credential, copy the OOTH redirect URL. [639] Paste into the authorized redirect URIs [641] in Google console. Okay, great. So what [643] that means is we go back here. You see [644] how it says OOTH redirect URL. You got [646] to give that a copy and then go back [648] over here to where it says authorized [649] redirect URIs. We have actually to paste [651] that in. Okay, once you're done, click [653] create. Now you're going to have two [655] things. So, I have a client ID up here [657] at the top, which we're going to copy. [658] And I also have a client secret. So, [660] what I'm going to do is I'm going to [661] paste in the client ID here and go over [663] here and I'll paste in the client secret [665] here as well. And you'll get this signin [666] with Google box. Now, after you're done [668] with that, this will now open up a [670] Google signin window. Then, click the [671] email that's associated with the account [673] that you just created. Go down to allow. [676] All [676] right. From here, it is now connected. [678] You can close your window. And you've [680] actually now done the connection. [681] Remember that first step where you have [683] to set up that cloud account. What you [685] have to do is you I think they give you [687] like 300 bucks in free credits or [688] something like that. You functionally [689] will not run out of credits. I mean you [691] know your free trial is over but your [692] cloud platform journey doesn't have to [694] be. I think you can like continue doing [695] your API calls below a certain limit or [697] something like that. Anywh who uh from [699] there credential to connect with is [700] YouTube account 2 resource video [702] operation get many return all. I'm just [703] going to have the limit be like three [705] videos for now. Filters we'll leave [708] channel ID. And then what I want to do [709] is just feed in the channel ID directly [711] in here. So what this is is this is just [713] like hooking me up to a specific channel [714] as we see. I'm just going to click test [716] step and we're going to see what [717] happens. Okay, awesome. And it looks [719] like we've now received a bunch of data. [722] That's pretty cool, right? So we've now [723] verified that we can do a fair amount [725] here. And if I just go back to my little [728] road map here, we've now verified that [729] we can actually get all the videos for a [731] channel, which is great. Okay. All [732] right. So now that we've gotten all the [733] videos for the channel, what I want to [735] do, well, not all of them, but three of [736] them. I'm just going to pin this data [737] again. So now I have access to these [739] three items. And now what I'm going to [741] do is I'll go back to YouTube. And [742] logically what I'm going to do next is [744] we're going to get a video just like [745] this. Now you'll already have the [747] credential that we added. So this is the [749] second one, the one that I just created. [750] So I'll go there. And then you see where [752] it says video operation get. Well, now [753] we need to feed in the specific video [754] from the giant list of videos that we [756] just got. And you'll find this I think [758] here at least. Yeah, I'm pretty sure. [760] That looks to me like a video ID, right? [763] Okay. So now if I click test step, it's [765] actually going to run on all three of [766] these items. But to be honest, when I [769] test APIs, I only really like to run it [770] at one at a time. So, I'm going to click [771] on this button in between. I'll just [773] type limit. And what this does is this [774] basically just limits it. So, if there [776] were three items initially, now there's [777] only one item. So, we're only grabbing [778] the first in this case. You can also go [780] last if you want. I just go first. Okay. [782] So, now what I'm doing is you see how on [784] the purple it said three items up here [787] and then over here it says one item. [789] Well, basically that's what this limit [790] node did. It just like took those three [792] and then it like just converted it all [794] into into just one. It didn't merge them [795] or anything. I guess what I'm trying to [796] say is it just like deleted the last [798] two. So now that there's just one item [800] as input, when I run this this video ID, [802] it should only run once. So I click test [804] out. So I'm going to grab a specific [806] video. And that's what it did. It just [808] ran once for one item. Now what's [810] interesting, I'm going to go to see [811] schema view here. It's probably easiest [812] for you guys to understand. So we go [814] back to schema view. What we see now is [815] we're getting a ton more data about the [817] specific video. Like on the left hand [819] side, do you see how there's like no [820] data about the specific video views or [822] anything that I could use to determine [823] if it's an outlier? Well, on the right [824] hand side, we get that data. So, there's [826] a bunch of thumbnail BS. I'm just going [827] to close that. Tags, which is fine. [829] Category localized. This is the title [832] and [832] description. Content details. Okay. So, [835] this is um this over here is going to be [836] important for us. PT32s. This is [839] interesting. Uh this is like a timestamp [842] string basically showing how long the [843] video is. In this case, this is 32 [845] seconds. So, I don't know what P stands [848] for. I think T stands for time and then [850] 32 is obviously the number of seconds. [852] Um, but this could also be like PT 5 [854] minutes, PT3 [856] hours. This is just like the specific [858] timestamp formula that uh, for whatever [861] reason YouTube uses. I don't know why [862] they don't just do the number of [863] seconds. That make everybody's life so [864] much easier, but they use a five U [866] character string for seconds, which is [868] annoying. But the thing is, if you think [869] about it logically, like I don't want to [870] grab shorts, right? So, I'm going to [872] have to do a little bit of math here to [873] uncouple this. And I'll run you through [874] what the math looks like later. But [875] anyway, the statistics are what we want, [876] right? See how it says 12,690 and this [878] one says 382 likes. So you can run [881] outlier detection in a number of ways. [883] Probably the simplest way is just views. [884] But if you think about it, you could [885] also run it on like views and likes. You [887] could run it on just likes. You could [888] run it on some multiplicative number [890] here. You could like I don't know, maybe [893] mathematically you think that one like [895] is worth 10 views just in terms of like [896] its viral power. So what you do is you [899] actually take likes, you multiply them [900] by 10, and then you add them to views. [902] And that's what you do to score them, [903] right? This is totally for free. This is [905] up for grabs. You can do whatever the [907] heck you think based off of your [908] knowledge determines whether a thing is [910] more viral than something else. In my [912] case, you know, I just want to give you [913] guys a simple nugget system. I'm just [915] going to use the view count, but anyway. [916] So, yeah. Okay, we we got a ton of data [918] here. So, what I'm going to do is I'm [918] going to pin this output. And what I [920] want to do now is I actually want to [921] filter out all the shorts cuz I hate [922] shorts. I think shorts are not [924] representative of this stuff at all, [926] right? Like you could have two systems. [928] One that operates off shorts and one [929] that operates off long form. But you [930] can't compare them apples to apples. [932] They're so different. There's so many [932] like discoverability issues and stuff [934] like that. So, what does that mean? Uh, [935] basically that means I have to filter [936] the shorts. There's nothing in the [938] YouTube API, which is really annoying, [940] that says whether something's a short or [941] not, blows, but they they don't just [943] have like a simple type short. So, what [945] you have to do is you just have to infer [947] it based off of the logic. So, [949] realistically, if something's less than [950] 60 seconds, I'm going to call it a [951] short. And then if something is over 60 [953] seconds, I'm going to call like a [954] regular, you know, normal video for [955] welladjusted human beings. So under [958] content details duration PT32S, I need [961] to somehow take this string and I need [963] to use it to determine whether or not [964] it's a short. Well, the way that this [966] works, I know for a fact S means second [969] and then if it's a minute, it'll be like [972] PT5 minute 32 seconds. So this here, [975] this string would mean the video is 5 [977] minutes and 32 seconds. I think if it's [979] like 3 hours, it would be 3 hours 5 [981] minutes and 32 seconds. What does that [982] mean? I can actually just use the length [983] of this thing. If this thing is like [985] five characters and then the last letter [986] is S, odds are this is a short to be [989] honest cuz the second you get over 60 [991] seconds it just changes to minute, [992] right? So I think that's the logic I'm [994] going to use. I don't know if it's 100% [995] but we'll give it a try. So how do you [996] actually do this? I'm just going to use [997] the the filter node and then I'm going [1000] to feed in [1001] the scrolling all the way down here the [1003] duration. I'm just going to go.length [1006] length here and I was like if this is [1009] equal to five and the last [1014] letter so let's go to expression if this [1018] ends with [1020] um [1022] s then I know that it's not a short uh [1027] then I know that it is a short [1030] okay so logically I'm actually looking [1033] for the inverse of this can I do the [1035] inverse of this. How do I do the inverse [1037] of this? I guess I say is not equal [1040] to. So this has to be not equal to [1045] five. Sorry, I'm using string here, but [1048] I should be using number. There we go. [1049] So this has to not be equal to five. And [1052] then this last [1053] thing has to not end with s. Okay, that [1057] makes sense. So assuming that these two [1060] are true, odds are it's probably not [1062] going to be short. So I just ran it and [1064] uh it says kept zero discarded one. So [1067] that means that basically this node [1069] returned nothing, right? Because there [1072] was one item here and then it hit my [1074] beautiful sexy filter, my anti-short [1076] terminator and then you know there was [1078] nothing that wasn't a short to remain. [1080] So if I want to continue testing this [1081] flow logically, what do I have to do? [1082] Well, I kind of have to fill it with [1084] like real data, right? So I'm just going [1086] to change the limit node and then just [1087] cross my fingers and hope that I can [1089] return more than just a short. Let's go [1091] three this time. I'm going to unpin it. [1094] I'm just going to go where's the PT? [1097] Right. PT get all videos three items. [1100] Now we're returning three items. Now for [1102] each of these I'm just going to test [1103] three [1104] times. Bang. Bang. Bang. Okay. Now we've [1107] done three. And um underneath this [1110] duration. This one's PT32s. If I go to [1112] JSON, I should be able to get all of [1114] them. Right. So PT32S. Where is that? [1116] Where is that? Okay. So this is that [1118] short. That's what number one. [1121] This next one is 38 [1124] seconds. This last one's 59 seconds. Oh [1126] jeez. You know what I'm realizing? I [1127] think this is like This actually sorts [1130] all of my videos by shortest to longest. [1133] So obviously the first three are going [1134] to be [1135] shorts. Uh that's brutal. Can I like not [1138] do this? Hm. Is there some way to get [1140] all videos and then sort it [1143] by what do I order it by? Relevance. [1145] Date. You know, screw it. Let's just do [1147] date. This is This should fix it because [1148] I haven't posted shorts in a while. [1149] Let's test this again. [1151] Okay. All right. Yes, this is uh [1154] relevant. He quit his job after Z. I [1156] just I just published this one. So cool. [1157] We can now pin this. So I just clicking [1159] the node, pressing P. Then I'm going to [1161] do [1162] limit. And now I know for a fact that [1164] the first item is going to be good. So [1166] I'm just going to change that to one. [1168] All right, I'm liking this. I'm going to [1170] go over here. I'm going to test this [1171] now. Should run once. Cool. And let's [1173] see the duration. You guys see where [1175] it's 39 M26s, right? So this should [1178] work. I'm not going to pin this. And now [1180] when I run my wonderful filter [1183] test. Oh, hold on. It's still discarding [1186] it. Why is it discarding [1188] it? Um h something to do with my math [1192] here. So conditions is not equal to [1195] five. So that's good. And it does not [1197] end with [1199] us. Oh. Oh yeah, obviously it ends with [1202] S. [1203] Duh. Oh, okay. Sorry. I think I can [1206] actually just get rid of this. [1208] My bad. My bad. My bad on the S stuff, [1210] guys. Yeah, don't do the S stuff, right? [1211] That makes sense. Cool. Well, I said I'd [1214] keep in dumbass detour, so there's one. [1217] Uh, yeah, obviously all of them are [1218] going to end with S because that's how [1220] they do it. They go like [1222] PT39M26s, right? Well, actually, if you [1225] think about it, if something's like 4 [1226] seconds, it's probably going to put in [1227] here, right? So, instead of is not equal [1230] to, what I should do is I should say it [1232] needs to be greater than five because [1234] then it'll be at least 1 minute, right? [1235] That makes more sense. That's more [1236] logical. [1238] Okay. Yeah, that's way [1240] smarter. Cool. So, now that we have the [1242] video, question is, what do we do next? [1244] Say, I'm just going to go back to my [1246] thing. We now grab the individual video [1249] data. We've now filtered out long form. [1251] Now, we need to check if it exists in [1252] the database. Now, here's the thing. We [1253] don't actually have the database set up. [1254] So, it's kind of like uh chicken or the [1256] egg, right? So, first of all, I'm going [1259] to change this to one. And then I'll [1261] call this add update. [1264] Then later on I'll change um I'll add [1265] the other workflow and that'll be like [1267] daily [1268] digest. So if I go back to my little [1270] database over here my fledgling DB uh [1273] what is it that we have to do [1276] logically? Well I think what you should [1279] probably [1282] do [1283] is we have to check to see okay so [1286] here's here's how we can do this. You [1288] know this channel [1289] ID, what we could do is we could make [1291] this the [1292] title in here. We'd store all of the [1295] data of the video, right? Right. Um I [1299] don't know, even multiple and stuff like [1301] that. But we need some way to like add [1303] the channel ID automatically. So I'm [1306] just going to go to sheets. I don't [1307] actually know if you can do this. Can [1308] you just like get all the sheets or [1311] something? H looks like you can create a [1315] sheet. So that's interesting. You can [1318] also get rows in a sheet, delete rows or [1320] columns in a sheet. Is there some way [1321] that I could like check to see the [1323] sheets? Logically, that would make [1325] sense, right? Can I just get rows in [1327] sheet? Check this out for me. Yeah, I'm [1329] not seeing a way to, which kind of [1330] blows. [1333] H I think what we'd have to do [1338] realistically. So you have to do one of [1340] two ways. [1342] One, we rebuild the whole database every [1345] single time that we run this, which [1348] would be very computationally expensive. [1349] It would hit the API a lot. It would [1351] just not be smart. Or two, we need like [1354] an [1355] initialization thing where every time we [1357] initialize it, like we feed it in a list [1359] of channels, then it initializes the [1361] whole sheet for us. And then we do that [1363] anytime we want to update it. Or what we [1364] do is we just have a simple SOP where [1366] anytime I want to duplicate this, I I [1368] grab the sheet like this. Okay? And what [1371] I do is I just duplicate this and then I [1374] change the ID to, you know, new channel [1377] ID. That makes sense to me because then [1379] the system would automatically just [1381] start dumping into the new one. Okay, [1382] cool. I think that's probably what we're [1383] going to do for simplicity. I want you [1384] guys to know there's a million one [1386] different ways to do this and I am a [1387] very hacky human being, so I prefer the [1389] hacky approach. Okay, so what am I going [1390] to do with the Google sheet? Well, now [1391] that we've identified that it's not [1392] short, obviously we need to add it, [1393] right? So, I'm going to go sheets. I'll [1396] go append or update row and sheet. I'll [1398] go YouTube resource operation. Okay. [1402] Document from the list. I'm going to go [1403] pick my YouTube trend detector database. [1405] The sheet I'm I'm curious about. Notice [1407] how I have the channel right here. [1408] Right. This is where it's going to get a [1411] little trickier and this where I'm going [1412] to need to go back and update my logic [1413] probably. But I'm going to need to use [1414] the ID connected to the specific channel [1420] where I'm adding the video. Okay. The [1423] thing is we don't currently have any [1424] columns yet. So we have to do now is we [1426] have to map all of this data or all the [1429] data that we're actually interested in [1431] that is. So what data am I actually [1433] interested in? Well, um obviously I'm [1435] interested in a couple things. So the ID [1437] of the video, right? So I'm going to add [1438] ID here. This is going to be probably [1441] like my unique identifier, right? Like [1443] this is the one thing on all videos [1444] that's always going to stay the same per [1445] video because if you think about it, [1446] people can change your title. People can [1448] also change their description. Like this [1449] is the thing that I have to like use as [1450] my unique thing. And all databases need [1452] need some sort of unique thing. So I'm [1455] going to do the ID for sure. What I want [1456] as well. Published at that sounds like [1458] it's good to keep track of. Channel ID. [1460] I mean like I kind of have it here, but [1462] I I don't know. I'll just I'll add my [1464] channel ID. Maybe it's just going to be [1465] easier for me. Also, I'm realizing that [1467] I'm changing my conventions. There's two [1468] major conventions in programming. [1470] There's um camelc case, which is where [1471] you [1473] go something like that. And then there's [1475] I think it's called snake case, which is [1476] like [1477] this. Uh and I'm changing my conventions [1480] right now. Like I'm going from camel [1481] case to the other thing. I think most [1483] things in NAN use [1486] um snake case. So I'm going to do that. [1488] That seems simpler. Okay. So next up, [1491] what do we need? We obviously need the [1492] title. That seems good. Description. I [1494] mean I feel like the description is good [1495] to keep track of. Let's do the [1496] description. Screw it. Thumbnails. Hm. [1498] Looks like there's three types of [1499] thumbnails. There's like small [1501] thumbnails, medium thumbnails, high, and [1503] then standard. So why don't I do Why [1506] don't I just do it like this? Small [1507] thumbs, medium. Uh, sorry. There I go [1511] again. Small [1513] thumb, medium thumb, large thumb, [1517] standard thumb. This is just going to be [1519] the URLs. I don't really care about the [1520] heights or [1522] whatever. Channel title. Is that [1525] necessary? Yeah, I might as well. Right. [1528] We'll go channel [1531] title. Okay. What else do I want? Uh, [1535] tags. I could theoretically just dump [1537] all the tags. So, I should probably do [1539] that. I'm so lazy. I'm like, do we need [1542] the tags? Yeah, we kind of need the [1543] tags. All right. Category ID. I don't [1545] know what the heck that is. I don't [1547] really think it's that valuable. I'm [1548] sure, you know, you can imagine a world [1549] where category ID is valuable, but I [1551] don't, you know, I don't really know [1553] what that means, so I'm going to leave [1554] it [1554] out. Okay. Content details. Duration. [1557] That's going to be important. So, we'll [1559] go [1560] duration, dimension, definition. I could [1563] see you running some stats on that [1564] stuff, right? [1566] Like maybe in the future like you notice [1567] that most multiples are HD or something. [1569] That might give you some [1572] data. Okay. And then ultimately the [1574] stats are what we actually care about. [1575] So good god, look how far off this is. [1578] Okay. The way that I like to organize my [1580] databases is I just like to have like [1581] the most important information first and [1583] then I stick all the less important [1584] information later. So to be honest, [1586] we're going to need to rearrange this. [1587] Like are are you going to care about the [1589] thumbnails for most of these? No, [1590] obviously not. So we're just going to [1591] dump these all the way to the right. [1594] What are we actually going to care [1594] about? If you think about the view [1596] count, like count, favorite count, and [1597] comment count. I don't know what the f [1598] count is, and I don't know why nobody [1600] favored that video. Granted, I did [1601] publish it yesterday, but can you all [1604] please favorite my video? I would love [1606] you a long [1608] time. Okay, so [1611] views. Just go views. We'll go likes. [1614] We'll go favorite. And then we'll go [1618] comments. Now, depending on whether this [1622] is normal, maybe we'll go title, views, [1624] likes, comments, favorites, and then if [1626] you think about it, like channel ID, [1627] channel title. Yeah, we don't need these [1628] either because it's kind of [1629] self-evident. Like it's good data to [1631] have just cuz it'll make my life easier [1632] when I build out the rest of the stuff, [1633] but it's not necessary. And then embed [1635] HTML. That sounds fun. Let's go embed [1637] HTML. Cool. So, I'm pretty sure now we [1639] have everything that we need, right? I'm [1640] just going to rearrange this by [1642] selecting everything and then double [1643] clicking on the um column tag. So, we [1645] have the ID, publish at, it'll say [1646] title. Then it'll say number of views, [1648] likes, comments, then it'll say [1649] favorites. Then it'll say the [1650] description, tags, duration, definition. [1653] Cool. Looks like a pretty good database [1655] to me. This is going to be our template [1656] DB from now on, right? So, just wanted [1658] to make it perfect or as perfect as [1660] possible. So, now what we have to do is [1661] we actually have to add it to the sheet. [1662] Actually, first thing we have to check [1663] if it exists in the database. My bad. My [1665] bad. After that though, we'll add it. [1667] So, let's actually just implement the [1668] adding functionality right now and then [1669] we'll do the checking if it exists [1671] functionality afterwards. So, we need to [1672] map it manually. So, I'm just going to [1674] fetch the columns by refreshing this. [1676] It's not finding it. Why? Uh, I think we [1679] might have to [1681] go. I think I might have to refresh this [1683] or [1686] something. Kind of [1689] annoying. So, I think I got to feed in [1692] the channel ID [1696] here. Okay. So the way that the append [1700] or update row works is there's an ID [1702] column that you actually match incoming [1703] queries in. So that's actually cool. We [1706] don't actually need to do the logic I [1707] just talked about because it'll just [1708] automatically find old entries and [1711] update them using the ID column which is [1712] incredible. So fantastic. Boy is Nad fun [1716] sometimes. Now what we have to do is we [1718] have to do this annoying laborious [1720] process of just mapping everything. So [1721] I'm going to map the title over here. [1723] Uh, now I'm going to go down to the [1725] views because I was a little [1727] presumptuous and I wanted the views to [1729] be first. I wanted all my viral videos [1732] to be first, baby. Okay, favorite. Cool. [1735] Now, we'll go all the way up to [1737] description. Uh, tags is going to be [1739] interesting if you think about it [1740] logically. Like, look, there's a bunch [1741] of tags here, right? So, how do you [1742] actually like get a specific tag in [1744] there? Um, you got to use string logic. [1746] So, just going to put tags in. And then [1748] you see how it's an array, right? Now, [1750] you just join the array um with some [1751] sort of delimiter. And now we have all [1753] the tags here. I like adding a delimiter [1755] and a space. I don't know why. I just I [1757] think it like works and looks better. It [1759] works better with more platforms. So I'm [1760] just going to do tags like that. The [1762] duration. That was pretty interesting, [1763] right? So where's the duration again? [1765] Okay. Okay. Right over here. [1770] PT39M26s. So [1774] h uh Okay. I'm just trying to think in [1776] my head. What's the simplest way for us [1778] to do this that works on arbitrary [1780] strings? Let's just open up the [1781] expression handler. So if I split this [1785] based off the presence of an H, what do [1786] we have? We have the whole thing, right? [1788] If I split this off the presence of an [1790] M, what do we get? Is it always going to [1793] be PT? Let's just do GBT40. [1798] PT3926S [1800] 39M26S. What is this format called? [1803] Let's see if we can get an answer from [1804] the lovely Galaxy Brain. ISO 8601 [1808] duration format. I want to parse [1812] this functions and turn it into the [1815] number of seconds. Simplest way. Let's [1818] see what it tells me. Parse ISO [1820] duration. It matches this PT whatever. [1823] Oh, I get it. So, it's actually [1824] extracting three types of data. The [1827] number of hours, the number of minutes, [1829] and the number of [1830] seconds. Uh, could I just match this [1832] inside of here? Let's see. So, this is [1835] redax. No match. Okay. So, yeah. Yeah, [1838] we got a match over here. Can I just [1839] copy this? This would be sick if I could [1840] just copy this. Maybe I [1842] can. This is going to look like magic if [1844] you don't know what Rejax is, but it's [1846] actually pretty cool. Yeah. So, it just [1848] did that. How neat is that? Okay. So, [1851] now if I want to get the duration, what [1853] I have to [1855] do is matching globally? I think it [1859] is. What I want to do is it looks like [1862] this array will always have four [1864] elements. Okay. It's always going to [1866] have pt what? It's going to have the [1868] full string first. Then it's going to [1869] have null. Then it's going to have the [1870] number of minutes. And it's going to [1871] have the number of seconds. If you think [1872] about it, I just multiply the number of [1874] minutes by 60 to get the number of [1876] seconds times minutes. Uh, right? So 39 [1879] * 60 would be the number of seconds. And [1880] then 26 I just add that. So I'm pretty [1883] sure what I have to do is I think I have [1888] to add this is going to be tough. What's [1891] the simplest way for me to do this in [1892] such a way that [1894] like isn't super complicated? I mean, I [1896] could just use a code node. I'm just [1898] trying to stay away from code nodes [1899] because I want to keep this really [1901] simple. Okay, so in an array, you can [1903] index it with square brackets. So zero [1905] would actually select the first element. [1907] One would select the second element. Two [1910] would select the third and then three [1911] would select the fourth. It's zero [1912] indexed, right? So actually goes like [1914] there's only four elements. So if I put [1915] four, it's selecting the fifth. We can't [1917] see it. But three, we can. So what does [1918] this mean? If we want to get the total [1919] duration in seconds, I basically grab [1922] the total number of seconds, right? And [1927] then let's just actually yeah, we kind [1930] of have to do code here. But anyway, I'm [1932] going to grab the number of seconds. I'm [1933] going to add [1934] it. Oh, it's not allowing me to add it [1937] because it's a [1938] string. I think we have to go probably [1942] two number [1943] here. Then we'll go two number. And now [1945] it should be 52. Okay, cool. So, what we [1947] do next [1949] is we go [1951] two, we multiply this by 60. That's the [1955] total number of seconds in the video. [1957] 2366. If you think about it, you kind of [1959] need to do the same thing [1961] for 1 [1964] * 60 * [1967] 60. And voila, we should have a [1970] relatively consistent way to always get [1971] the number of seconds the video. Sanity [1973] check here. Let me go back here. [1975] 3926 39 * 60 + 26 is 2366 which looks [1980] pretty good. Okay, so we did end up [1983] doing a little bit of code and I'll be [1984] honest, it's not very pretty. This is um [1986] probably one of the uglier expression [1988] fields that I think I've made in my [1990] life. Uh it's not very maintainable [1992] either. But what this is doing logically [1994] is this is using a regular expression to [1996] parse out three fields. the number of [1999] hours, the number of minutes, the number [2000] of seconds, and then it's just saying [2002] we're adding up seconds plus 60 * the [2005] number of minutes plus 60 * 60 * the [2007] number of hours. Okay. All right. Now, [2009] everything else here should be pretty [2010] easy. So, we're going to go definition. [2012] That seems good. It's for small [2015] thumbnail. I'm just going to feed in [2018] the default URL here, medium URL here, [2022] large URL here, and then standard URL, [2025] which I guess is the biggest. Oops. Um, [2028] I think I just deleted a field by [2029] accident. Channel ID was next. My bad. [2033] Channel title. So, channel ID was uh [2037] what? Right over here. Channel title was [2041] right over here. And all the way at the [2043] end, embed HTML was over here. Okay. [2045] Good god, that took forever. Should now [2048] have everything we need, [2049] right? I think so. So, let us cross our [2052] fingers and add. Going to go over here, [2055] click test step. It's not adding. So, [2058] okay, it did end up adding. Very cool. [2059] Very cool. I don't like how it bumped it [2061] and made it really big, though. That's [2062] uh going to make looking at my database [2064] a pain in the ass. So, what I'm going to [2065] do here is I'll select all. I'm just [2067] going to drag this column to approximate [2068] what I think the normal size of a column [2070] is. That's a little short. There you go. [2073] So, now all future columns will look [2074] like that. Also, uh I'm going to [2076] rearrange [2078] this. I just double tapped on it again. [2080] It's a little big. I don't like the [2083] description being that big, but I do [2084] think it's important that I can like [2086] read it at a glance. So, I'm just going [2087] to rearrange the [2089] description. Rearrange the tags as [2096] well. That looks fine to me. Duration [2099] looks good. Small thumb, large thumb. If [2100] I just copy this, paste this. Am I going [2102] to get the thumbnail? I will. Wonderful. [2103] Got the frame as well. This is just [2105] something you can embed in your website, [2106] which is kind of neat. But yeah, I don't [2107] need the whole thing. So, I'm just going [2108] to make this a lot smaller. Okay. So, [2110] yeah. And now we have the database [2112] template. And if you think about it [2113] logically, what we can do is we can just [2114] duplicate this, right? Just duplicate [2116] this over and over and over and over [2117] again for every video. So if I go back [2119] here, uh we've now done two things in [2122] one shot. We've actually automatically [2123] checked if it exists in the database [2124] with the append logic. And then if it [2126] does exist in the database, then we [2127] don't add it. We update it. And then if [2128] it does it Yeah. So we've actually [2130] finished this first system a lot faster [2131] than I thought we would. Very cool. Very [2132] cool. All right. So, what I want to do [2134] now that I've tested this on one item. [2136] Um, basically anytime you're you're [2139] building any sort of NAD system or [2140] really any automated system, test on one [2142] item first and then once you're done [2145] testing on one item, test on basically [2147] like two plus systems. This is sort of [2149] like your I don't know if you want to [2151] call it like your order of operations, [2153] but one is simple, right? Because it's [2154] very easy to get up and running with one [2156] example like we did a moment ago. Now, [2157] we need to test it on two examples. Odds [2159] are if something works on two examples, [2161] it's going to work on like n examples [2162] where n is the total number of examples [2164] that we're feeding it in. Like if it [2165] works on two, it's probably going to [2166] work on eight. If it works on eight, [2167] it's probably going to work on 3,894. [2169] Like that's just, you know, a [2170] programming thing. Logically, when you [2172] go from one to two, what you do now is [2173] you implement loop functionality. And [2175] that's one thing we have to verify. So [2177] we figured it out for one. Why don't we [2178] now try running this like on an actual [2180] practical test for two? Notice how [2182] everything right now is pinned, though, [2183] right? So I'm going to do is I'll go all [2186] the way back here, unpin. So, I just [2188] pressed [2189] P. And then this Google sheet here. [2192] Should I delete this? Yeah, I'm just [2194] going to delete it. Okay. And then I'm [2196] just going to save this now. Always [2198] save. And then where it says limit, just [2201] going to do the limit to two. And [2202] actually, I'm realizing that I think we [2204] can just set the limit here, right? No, [2205] we can just set the limit here. There's [2206] no need to do this. That was silly. So, [2208] what I'll do now is I'm actually just [2209] going to um do the limiting directly in [2212] the YouTube node here. Do two. Okay. And [2216] I'm not just going to test one. And I'm [2217] going to test all because um this is [2220] where the looping logic comes into [2223] play. Now it's adding or pending. And it [2226] looks like we got two. Cool. So let's [2229] just verify everything here worked fine. [2231] What is the duration of this video? [2232] That's like one pretty complicated piece [2233] of logic I implemented. So let me just [2235] double check. It's actually [2236] 1,628. I pretty sure it [2240] is. So 27 * [2244] 60 and then 08. Yeah, that's true. That [2246] is actually it. Cool. Yeah. I mean, you [2248] know, I think we did it now. We've we've [2250] verified the test. Uh I guess there's [2251] one more test that we need to do. If you [2252] think about it logically, like we've [2254] tested that it works on one [2256] channel. So now let's test that it works [2258] on multiple channels. Okay. So I'm going [2261] to do now is I'm going to copy the ID [2262] that I have over [2264] here. And then I'm just going to do it [2267] for another channel. And then if I run [2269] into issues there, I'll, you know, [2270] figure out the issues. So who whose [2272] other channel? I want to do a Leonardo [2274] Gregario just cuz this guy's one of the [2277] nicest. Okay, there we go. Okay, so [2280] copying this now. What am I going to do [2282] next? Well, I'm just going to add it to [2283] my channels thing. Paste it in. If you [2286] think about it, I have my SOP, right? [2287] Like for all the channels I paste in. [2288] I'm just going to duplicate this now. [2290] And I'm just going to go over here. I'm [2293] just going to paste in the new ID. And [2296] uh I'm just going to like delete both of [2297] these. Delete this. [2300] Now when I rerun this um what I should [2302] do is if you think about it logically I [2304] should grab both of the rows from both [2307] of the rows I should then get all the [2309] videos for the person then I should get [2311] all the specific videos of the all the [2314] videos ids and I should filter out all [2316] shorts and then I should add or append [2318] to the sheet and it should go logically [2320] newest to oldest. Okay, I think this is [2322] his ID. We're going to give it a [2325] go. So it's reading the sheets 2 44. I [2329] mean, mathematically looks good to me. [2330] Now it's updating all [2332] four. No, it didn't end up working. And [2335] why? It looks like we just dumped all of [2337] Leo's videos into my channel. [2340] H, ain't that a metaphor for life? [2345] Uh, okay. I think I know where this [2347] happened. The appender update right now [2350] is probably hard- coding me, [2352] right? I'm feeding in JSON.nippet. [2355] channel ID. What I think I need to be [2358] doing is I need to be changing this [2360] dynamically. [2362] Right? So, right now we are feeding in [2365] this channel ID here. No, this should [2368] logically be working. This channel ID [2370] should change. All right. Should change. [2372] So, let me just check the JSON. Now, I'm [2374] checking the JSON of the entries. [2376] Channel ID here was UCBO. Whatever. [2378] Okay, cool. That's [2379] fine. This other one should probably be [2381] UCBO as well cuz that's me. Okay. Now, [2383] for this one, that should be not be [2384] mine. Should be UC8. Yeah, UC O B. So [2390] that looks good. Is it not finding mine? [2393] Maybe [2395] H. Maybe I just copy this [2398] now. Paste this in. Is this the same [2400] thing? Yeah, this is the same thing as [2402] this thing. Not really sure where this [2405] issue is arising from. H. [2409] Well, there may be like some builtin [2412] logic, a built-in that prevents it from [2419] iterating. I've seen this happen before. [2421] I feel like this has actually happened [2423] to me before where Naden does not have [2425] the ability to do this, believe it or [2428] not. [2430] So, what I the way that I saw this [2432] before was I added a bunch I created a [2434] bunch of new Google Sheets, one for [2436] channel. That's not going to work now. [2437] That's not going to work at all. So, I'm [2440] going to have to find a new solution to [2441] this and I'll have to do it live. [2445] So, what I'm going to [2447] try is NAD has an additional piece of [2450] functionality. This is a bug to be [2451] abundantly clear. This should not occur. [2453] Logically speaking, we're feeding in new [2455] channel IDs to a sheet and that variable [2458] should persist should not persist. It [2460] should reset at the beginning of every [2462] uh loop. But for whatever reason, it's [2463] not. So we have to [2466] do is we have to feed we we have to take [2469] a fundamentally different approach. I'm [2471] going to do this approach using the loop [2472] over items um node. Okay. I want you to [2475] know that stuff like this is going to [2476] happen. It's important is that you just [2478] don't freak out get super emotional [2480] about your system just not [2482] working cuz if you do you know the [2484] likelihood that it will continue to not [2486] work is much higher than if you don't. [2489] So, what I'm thinking we're going to do [2490] is for every item that comes in, we're [2492] actually going to loop over every [2493] individual item. Okay, the loop over [2495] items batches is basically a place uh a [2497] node that where you can add a loop route [2499] and then you can add a done route. The [2500] loop route just is whatever you're [2503] planning on doing and then the output [2505] feeds back in. And then basically for [2507] the number of items you feed, in this [2508] case two, as we see, um it'll run once [2510] and then it'll loop and then it'll run [2512] twice and it'll loop again. So, what I [2514] want to do is I want to see if me adding [2516] a loop over items node changes anything [2518] here materially. So, I'm going to go [2520] back [2521] here. I'm going to delete all four of [2524] these. Then, I'm going to see if I mean [2527] I might need to update the the logic. [2528] So, I'm going to test this first. Then, [2530] I'm going to see if maybe there's some [2531] way we could reset the data cuz this, [2532] you know, it seems logical to me that we [2534] should be able [2535] to. Okay, so we're still dumping this [2537] in. We're still dumping everything, [2539] which is [2540] unfortunate. So, let's see why. At least [2542] now we can actually logically run [2543] through both the items that are fed in. [2546] Okay, so this was run one which will [2549] have two items which is for me. This is [2551] run two which will have two items for [2554] Leo. So the input should be the channel [2559] ID. Oh. Oh, I'm actually hard coding [2561] this now. My bad. My bad. Uh we should [2563] actually be able to dynamically encode [2565] this now, right? So maybe maybe I [2566] actually screwed up here. Maybe I wasn't [2568] using a variable here. It's not over. [2570] It's not over just yet. We might have [2572] already fixed this. Okay. Now, what I [2574] don't like doing is I don't like doing [2575] what I'm showing you guys here where I'm [2576] constantly hitting the APIs over and [2578] over and over again. So, my [2579] recommendation is don't get yourself in [2581] this position to begin with because if [2582] you're constantly hitting these APIs, [2583] it's just a matter of time before one of [2585] them rate limits you and says, "Hey, you [2586] know, you've done this way too many uh [2588] way too many times. If you think about [2589] it, we're doing two API calls to this, [2591] another two API calls to this per API [2593] call, right? It's like four API calls [2594] total." Okay, I'm seeing um a missing [2597] parameter here. Now, this is good. It [2599] means that we're actually moving [2600] forward. [2602] Oh, what the hell's going on here? I got [2605] to re Do I have to remap all [2609] this? I don't really know what's [2611] happening there. I think what happened [2613] is when I changed this out for the [2615] snippet [2617] variable, it momentarily pulled it off [2621] and then when it pulled it off, the [2623] variables here just stopped. They like [2625] disappeared. So, that's not good. I [2628] wonder if that's going to happen every [2629] time. This took me a quite frankly [2632] stupid amount of time, so that's [2633] annoying. Um, but I'm just going to cut [2635] through this to save you all a little [2638] bit of time. Okay, I just ran this with [2640] a subset of the data so that I didn't [2642] have to remap it all if and when it [2644] inevitably broke. And it worked. So, we [2645] actually got it. As you see, we have one [2647] here and then another here. So, what [2648] I'll do now is I'm just going to fill [2650] out the rest of this. Pretty stoked [2651] about it, though. I knew there'd be some [2653] issue and I'm glad that we got to work [2655] through it live. Okay, this has taken me [2657] a fair amount of time to do. So opposed [2660] to trying to work it out logically, I'm [2661] actually just going to paste the code [2662] that I'm currently working on to try and [2664] recreate that duration match directly [2666] into chatbt and then say building this [2670] inside of N8 TLDDR. I'm processing and [2673] the ISO [2675] 8601 duration code and trying to turn it [2678] into a number of seconds. Here's what I [2682] have above. Debug why it isn't working. [2685] also need it to work even if there are [2689] no elements found. Let's try that. H I [2692] see. Well, that's very [2695] good. They're giving me a little snippet [2697] of code here. I don't know if this is [2699] true. H does look very good. Yeah, that [2702] is the number of seconds that I was [2704] looking [2706] for wrapped in this little function [2708] execution thing. So, it can be used [2710] directly inside of NAD. It's not as good [2712] as a code block, but this allows me to [2714] not have to use a code block. So, okay, [2715] I think I'll leave it there. This seems [2717] somewhat robust. I don't know for sure. [2718] Sometimes AI code just blows, but this [2720] is enough for me to actually run the [2722] test, which is what I care about. And [2723] then instead of me worrying about like [2725] whether or not it's perfect or complete, [2727] I'm actually just going to run the test [2728] and I'll let the test tell me. Okay, so [2730] let's test it. And you know, in reality, [2731] your systems won't cover all edge cases. [2733] The idea is that they just cover most [2735] edge cases. That's number one. That's my [2737] channel. And this should be Leo's [2738] channel now. Yes, looks good. I'm not [2740] seeing any tags on his videos. Why is [2742] that? Oh, wow. He must just not add [2743] tags. Oh, dude. You got to add some [2745] tags. Just make a note to text him. Bro, [2747] you got to add [2750] tags. All [2752] right. I'm sure he's going to find that [2755] pretty funny. Let's close this up. And [2757] then Yeah. Okay, cool. So, we've now [2759] done that first section. And if you [2760] think about it, that's actually all we [2761] need to do because we just tested that [2762] it works on one. Uh, then we tested that [2764] it works on two. So, we should now be [2766] able to do this on basically an infinite [2768] number, assuming that we don't rate [2769] limit out and stuff like that. It's a [2770] problem that some people will have. Next [2772] up, what we have to do is we have to do [2773] a daily digest. What this daily digest [2775] was going to do is it's going to grab [2776] all the data inside of that database of [2778] ours. Okay? So, it's going to list all [2780] of them. Then, for every sheet inside of [2782] our database, it's going to go through [2784] then it's going to get us all the [2786] videos. And then what we want to do is [2789] for every video, we want to calculate [2790] the average. So, for every list of [2792] videos, like this is a list of videos [2793] here, right? We want to calculate the [2795] average number of views and then we're [2797] going to use that to determine the [2799] multiple of the new video. And then if [2801] the multiple is over some threshold, aka [2803] the threshold that we define, which I [2804] think I'm just going to do like 2x like [2806] you know in multiple detection if you [2808] think about it logically there are a [2809] variety of different ways you can do [2809] this. You use this like 2x you like 5x [2812] like 10x 2.5x. You can have it like [2814] change with time. You can define it [2816] somewhere else. I you can do anything [2817] that you want really. I'm just probably [2818] going to do 2x cuz that seems simple to [2820] me. And then I'm going to include it in [2822] some sort of like daily email digest. [2823] Sounds fun. Okay, so let's build out the [2826] logic for that. That's going to be [2827] another NAN function or workflow. So I'm [2831] going to go back here. The way that I [2832] like to organize these is I like to tag [2834] them one. So in course and then also I [2838] like to do them same way I used to do [2840] them way back in the day on make.com. I [2841] used to go title YouTube trend detector [2844] ad update and then I'd go to YouTube [2847] trend detector. This would be daily [2848] digest. All right. So, these two are [2851] separate, right? And I'm running this [2852] manually right now, but if you think [2854] about it, realistically, you should be [2855] running this on some sort of schedule. [2857] So, we should add the schedule trigger [2859] to this [2860] instead. And then you can add multiple [2862] triggers. So, now it's scheduled [2864] technically if I turn it on. Schedule [2865] I'm going to add is let's just do one. [2867] Let's trigger at I don't know 6 a.m. or [2869] something like that at minute zero. So [2872] basically now every morning at 6, [2873] assuming that I turn this on, this is [2874] going to run and then it's going to [2875] proceed through the rest of my flow and [2877] just, you know, get get that first bit [2878] of work done, which is nice. And just [2880] because there's nothing on the done [2882] loop, I'm just going to add this here. [2884] This isn't the prettiest, but I Well, [2886] yeah, I think that looks okay. Notice [2888] how this was completely unnecessary if [2891] there were not bugs in NA. There were [2892] bugs in NAN which prevented us from [2894] doing this just because some of the data [2896] persisted when it probably shouldn't [2897] have. But you don't actually need this [2898] loop over items. Maybe future versions [2899] will solve this automatically. [2902] Okay, so let's do the daily dig. First [2903] thing we need to do is we just need to [2904] grab all of the data in all the sheets, [2906] right? So, this is going to be kind of [2907] tough to do. I don't actually know how [2908] we're going to do it. [2912] Um, what are we going to [2914] do? What are we going to do, ladies and [2917] gentlemen? All right, first thing we're [2918] going to do is we're going to grab all [2919] of the rows in the sheet. So, I'm going [2920] to go over here to channels. Just grab [2922] all the channel IDs. That makes sense, [2924] right? Talking to myself here, [2928] right? Okay. We're going to grab this. [2930] I'm going to test this. We're going to [2933] grab channels. Very cool. All right. I'm [2935] going to pin this. So, now we're going [2937] to have some pinned outputs here. Now [2938] that for every channel, what do we have [2940] to do? Well, we want to get all of the [2943] uh rows in the sheet for the sub [2945] channels. [2947] So, what am I going to do? I'm going to [2949] add my credential. And we may run into [2950] the same issue that we just ran into, by [2952] the way. So, YouTube trend detector [2953] database right over here. The sheet that [2955] I'm going to feed in is I'm going to use [2957] the name. And then I'm actually just [2959] going to drag this in. Now this is going [2961] to be the expression node. So now what [2963] we should get logically, okay, is we [2965] should now ping this twice and then [2967] return four items in total. We're [2969] feeding into we should get four because [2972] um every uh sheet currently has two. So [2975] one, two for me, one, two for Leo, [2976] right? So I'm going to test the step and [2978] we'll see if we get it. As always, I'm [2980] I'm like expecting to get a certain [2982] output and I'm actually just rating what [2983] I'm expecting to get against what I [2985] actually get. Okay. So, the way that I [2986] like to see the data is using JSON. It's [2988] just the easiest. So, he quit his job. [2989] That's good. Fix 90%. That's good. He [2991] quit his job. Fix 90%. Notice how this [2994] is run twice now on the same um ID. [2997] Okay. So, this is the same problem that [2998] we were running into before. Logically, [3000] we're going to have to find a way to [3001] solve it. So, let me think where are we [3003] going to add this? We're probably going [3003] to add the loop [3005] here. Delete the replace me. And then [3007] I'll delete this little route. And I [3009] think probably going to have to do is [3010] probably have to loop over this. So what [3012] I'm going to have to do actually is [3013] first I'm just going to run this so I [3015] can grab the data from the loop over [3016] items node. Okay, let's just test this [3018] workflow. Let's see what we get from [3020] here. We got a loop branch with one item [3021] with a channel ID. Okay. Okay. Very [3023] good. Very good. Now that we have this, [3025] I can actually map this individually. [3027] Now what I'm going to do is I'm going to [3029] let this loop over this. And now I'm [3031] going to let this go and let's see if [3032] this fixes it. Doing once, twice. Okay. [3037] And now we have two runs. So first run [3039] was me. The second run is Leo. Very [3042] cool. So, we've actually gotten [3043] everything that we need. How cool is [3044] that? All right. So, where we at now? [3045] So, we got all sheets. We got videos in [3047] each sheet. Now, for each list of [3049] videos, what we need to do is we need to [3050] calculate the average. How do we [3051] calculate the average? Well, in n we're [3053] returning a list, an array. Okay. And in [3055] this array, we have views right over [3057] here. So, we should very easily be able [3059] to determine the views mathematically [3062] just by doing a little calculation. I [3064] don't know. Is there like a calculate [3066] node? I don't think so. [3068] create like a set node. Probably a set [3071] node, right? So, I'm going to add a few [3072] fields. I'll add views here. No, we [3074] can't actually do this. What we need to [3075] do first, sorry, guys, is we need to [3076] aggregate this, I think, cuz this is [3079] currently many items. What we need to do [3080] is we need to put it into one item. So, [3083] I'm going to aggregate [3086] H. It'd be really nice if we could just [3089] get the average. Okay, I think we might [3092] need a code node just to make it. [3093] There's a million and one ways to do [3095] this. I think the code node's probably [3096] the easiest. [3099] Because what we [3100] do is we're going to just aggregate all [3103] of this stuff now. So for con item of [3105] input.all, input.all just gets all of [3108] the items that are being fed into [3112] it. I think what I'll probably do here, [3117] first of all, I'm going to pin this pin [3119] this output right [3120] here. Okay. Second of all, I'm going to [3124] go const. just say array equals [3128] input.all. I'm going to return array. [3131] We're going to uh I don't actually think [3132] this is going to [3134] work. Okay. No, it did [3137] work. Once we have an array, we're going [3139] to need to perform a mathematical [3141] function on set array. You know what? [3143] Why don't I just have AI do it as per [3145] usual? It's funny. Every time I'm like, [3146] I'm just going to code this myself. I'm [3148] like, well, I could do it myself or I [3151] could just have AI do it. [3154] So each entry includes a views [3158] parameter. I want [3161] to get the average each item in [3165] the input includes a views parameter. I [3167] want to get the average of each item's [3171] views and then filter so that I only [3176] output items who have view counts [3181] views over 2x the [3185] average. Okay, we're going to generate [3187] new code here. You could also ask [3191] anything else. You don't have to ask [3192] this model specifically. Just wanted to [3194] see if I could do this easily. So [3195] logically this is grabbing all of the [3197] input items. It's then mapping [3199] them. It's grabbing the item. It's [3202] getting the JSON. Then it's getting the [3204] average views. So it's doing what's [3205] called a reduce function [3207] to get the average. This is unnecessary [3209] to be honest, but it does it anyway. [3211] This is very proper filtered items. [3214] Cool. This is the multiple that I'm [3216] going to be using. Two. And it looks [3217] like it looks pretty good to me. I'm [3219] going to return this now. See what [3220] happens. No output data returned. Well, [3222] that doesn't make any sense logically, [3223] right? it has to return some sort of [3226] output data. The reason why is because [3229] logically speaking, if you have an [3231] average of two items, the average has to [3232] be higher than one item and then lower [3234] than the second item, right? It kind of [3235] makes sense. So, we should definitely [3237] have some sort of data here. It might [3239] just be because I need to reloop this. [3241] I'm just going to test this workflow out [3242] and just see if I dump it like this, [3245] what happens. [3247] No, it looks like we're feeding in the [3249] items and then it's not really [3251] calculating the code which [3256] blows. Your current code doesn't work. [3260] Come up with a [3261] simpler way to determine the average of [3264] all of the [3267] items and match it against that average. [3270] Let's try this. And then if that doesn't [3271] work, then I'm just going to ask chat [3276] GBT consulting the guy that made all [3278] this stuff up. That's [3280] funny. Going to test this. I'm still not [3282] getting any output data. So I think [3284] logically there's just like [3287] some silly issue here. I'm going to run [3290] this through chatubt. What did I do for [3293] aski? [3304] Okay, it's giving me interesting [3309] idea. [3311] Um, I just got to copy the code [3319] here. Okay, so we're now going to add a [3322] little bit of debugging logic. It looks [3323] like [3329] Now I'm going to open up my code [3331] editor. Go to [3333] console. Then I'm going to test this one [3336] more [3339] time. Says the average us is 4,456. Oh [3342] no, it actually looks okay. Oh, you know [3344] what it is? I think we're running this [3346] just [3348] once. Uh let's see here. Feeding two [3353] items. feeding in both of my items. Then [3356] we're calculating the average fees. Now, [3357] what are we calculating? We're [3358] calculating my average fees. So, 3,999 [3361] for the first [3364] item. Then 4,913. So, the average to [3367] this, it's [3369] logically 4,456. Cool. But no, it's not [3373] returning the It's not returning the [3374] items that have [3375] more. That's annoying. There must be [3377] some some other problem here. I don't [3380] like it. [3396] Okay, so looks like we are feeding in [3398] two raw [3402] items. All view counts are here. Total [3405] views, average [3407] views. Okay, looks like it's adding up [3409] the views. [3421] H. It still seems to be doing it weird. [3423] I really don't like using the code [3424] blocks. So, I'm just going to cut that [3425] out. Use the filter [3428] here. What I want to do is say [3432] views is greater than. [3438] Okay, I ended up solving this with a [3441] simple filter node instead of a code [3444] block. And then I fed in this [3448] expression, which probably seems pretty [3449] intimidating to you, but let me walk you [3450] through it. So, we grab the previous [3453] node, this Google Sheets node here. Then [3456] we get all of the items in NAN. You can [3458] get an individual item using the dollar [3460] sign JSON syntax or you can grab all of [3463] the items by referencing the name [3464] explicitly and then using a doall. Then [3467] I'm using a function called reduce. Now [3468] what reduce does is it's just a simple [3470] well it's a unfortunately complicated [3472] way of just calculating the average. [3474] It'd be really cool if there was just [3475] like an average function or something [3476] like that. Maybe there is. Maybe I'm [3478] just making this all way too [3480] complicated. H I don't think so [3484] though. Yeah. No, I think you have to do [3486] unfortunate code. But um what this is [3489] doing is this is reducing then it's [3491] grabbing the sum and the item and then [3492] it uses this arrow function to just like [3494] add it up. So this this basically just [3496] grabs the average and I'm dividing it by [3498] um the total number of items here. So so [3501] this sorry this gets the total number of [3502] views. This divides them up. For [3504] instance, if there's 10,000 total views [3505] and that's across two videos, the [3506] average is 5,000, which is actually [3508] pretty close to what it is. And then [3509] what we do is we just feed that into a [3511] filter block and we say, "Hey, is the [3512] number of views of this individual [3514] element greater than the average number [3515] of views of all?" Pretty [3516] straightforward, right? Pretty simple. [3517] If so, and we return this, which is [3519] cool. And then after I'm done returning [3521] this, if you think about it logically, [3522] what do we have to do? Well, we want to [3523] accumulate all of these and then we want [3525] to send them out in an email, right? So, [3526] I don't just want to add the email here. [3528] I actually just want to like run through [3529] my whole thing. I'm going to add my [3530] email over here instead. But just for my [3533] own sanity, what I want to do now is I [3534] just want to test this filter out on all [3536] of the data. So, I'll go test workflow. [3537] Grabbing the data from the Google sheet, [3539] doing the filtering steps. Cool, cool, [3540] cool. And it looks like on run one there [3543] was one item kept. That makes sense [3544] because out of two items, obviously one [3546] and an average will be kept. And run [3548] two, one item was kept as well. These [3550] would be our outliers for instance. And [3552] now we have those two items accessible [3553] to us in the done branch as we see here. [3556] And what we want to do now is we just [3557] want to make an email delivering these. [3558] Again, there's a million in one ways to [3560] do this sort of delivery. I'm just going [3561] to do it in a Gmail. So I'm going to do [3564] is I'll say send a [3566] message. And we don't need to loop the [3568] done. Just leave that over here. We do [3571] need to loop this [3572] though. Okay. So then I'm going to move [3574] this lower right here. This right over [3577] here. Simplest way I found of organizing [3579] the stuff. Maybe Oh, that's annoying [3582] that we can't do one more. [3585] H. Oh, na done. Why must you do this to [3588] me? Then we're going to add our [3589] credential. So, this is the same idea as [3591] before. You just click create new [3592] credential. Sign in with Google. So, [3594] I've already created a bunch of [3595] credentials here. So, I'm going to close [3596] this. Then, I'm just going to use my [3598] Gmail account number four. And [3600] hypothetically, I'm just going to add um [3601] send this over to my personal email. And [3604] then I'll say daily [3606] digest trending YouTube videos. email [3609] type HTML over here. Um, you don't have [3613] to do HTML. I'm just going to copy all [3615] this and feed this in [3617] AI. So, let me see if I could just go [3620] from here all the way down to here. I'll [3623] say above is a bunch of data on trending [3627] YouTube videos. Format this into a [3629] simple HTML email I can send. It's part [3632] of a daily [3634] digest. Oh, sorry. All I care about are [3639] uh let's see here. We want the the [3644] title, the [3646] channel, the [3649] thumbnail, the video [3654] duration, the video duration, and the [3658] multiple. Right. Right. We should [3660] totally do the multiple. Uh okay. Well, [3663] let's just keep this for now and then [3665] I'll add the multiple afterwards. [3667] Multiple is really cool to have. Now, [3668] it's going to format this as an email. [3671] Hopefully, I'm just getting network [3673] connection loss. I'm not entirely sure. [3675] Might just be my hotel [3677] internet. Okay. Okay. Okay. Here we go. [3680] Here we [3681] go. I don't know what this is. What is [3683] this supposed to be? [3691] This is hardcoded, [3693] right? Oh, I don't like why this is how [3697] this is laid [3698] out. Okay. Daily AI video digest. Cool. [3701] All right. So, missing title. We'll put [3703] the title here. Channel title. Duration [3705] over here. Okay. Okay. Cool. We'll do [3707] the thumbnail here. Okay. Uh, hold on. [3711] This is just [3712] one, I should say. [3719] meant to [3720] say include the variables [3727] as that way I can just very quickly find [3730] and replace all the variables in a [3733] moment. Cool. Going to copy this now. [3736] Paste this [3737] in. Oh no, I don't want the each, man. [3741] Ridiculous. [3743] Ridiculous. Yeah. Hey, we don't want [3745] each. That [3748] sucks. I don't Can we actually do that? [3750] Maybe we [3751] can. Fascinating. That would be pretty [3754] cool if we could. H I don't know if we [3756] can or else we don't know. We could uh I [3758] could do the logic here. But actually, [3760] let's just send one to [3762] start and then I'll worry about [3764] everything else later. Okay, we'll just [3765] send one to start. We'll go [3768] expression. Let's do this. Uh image [3772] source. We'll just [3774] do large thumb [3777] here. Title of the video will be I just [3781] want to um get something on on the page. [3783] Basically, I just want to have an email [3785] sent so that I can very quickly and [3786] easily [3788] identify whether or not it's like a [3789] trash template. I don't actually care [3791] about all of this data too much. [3794] Duration. This kind of sucks, but [3796] seconds, I guess. And I'm just going to [3798] remove this each thing. So, we should [3800] just pump out one of these now. Okay. [3802] And then I only want this to run. This [3805] is running twice now. Why is this [3807] running twice? We need to aggregate [3809] these is what we need to do. That's my [3812] problem [3813] here. Uh I'm just going to aggregate all [3815] item data into a single [3818] list. Uh it's unfortunate because we [3820] have to actually run have to run [3823] everything here. So let's just do this. [3824] Um test workflow aggregate. It should [3827] now be my output. [3830] Cool. Very cool. Very cool. And then [3834] now probably going to have to remap [3836] this. Yes, I will. It kind of sucks. Oh [3838] well, that's what it [3840] does. Let's just do the first. Okay, so [3843] we'll go source and then I'll go large [3847] thumb. Then here under [3852] title data zero.title [3858] title, channel title. Cool. And [3862] duration. Awesome. Now, if I test this, [3865] should send an email. So, I can go to my [3867] email and just see how bad the [3868] formatting is. Usually, the formatting [3870] is like not the [3873] best. Okay, that looks pretty good. [3875] Couple things that I don't like here. I [3877] don't like the size of this. Can I make [3878] this smaller? Probably. We could [3880] probably make this smaller just by [3881] changing the Yeah, we're using the large [3882] thumb here. I'm I'm going to try using [3884] the small thumb for one. What else don't [3887] I like? I don't like the fact that it [3888] says this email was sent automatically [3890] with NAD. So, in NAN, you can change [3892] that. Just go to append nad attribution. [3894] Turn that off. Looks pretty okay, [3896] honestly. Fix 90% of your AI agency [3899] problems in 30 days. Okay, let's try it [3901] again. We go [3904] here. H. Oh, nope. That's pretty blurry. [3908] That was pretty blurry. I don't like [3909] that. [3910] Yep. That is a little small. Can we [3913] change the image image source class [3916] thumb? Oh, you know what? That's the [3917] problem here. That's the problem. Let's [3919] just change 240 pixels and then we'll [3922] still use the large thumb, but we're [3923] only going to be at 240 pixels. Okay. [3925] And then what else do we really want? I [3927] guess we just want all of them. So, [3928] logically, how do we do that? What we [3930] have to do is basically for every item [3932] inside of aggregate, we just have to [3933] generate this. Why don't I just paste [3936] this in again and see if two emails look [3939] okay. This looks fine now because it's [3941] in 240 pixels, right? Yeah, it's not the [3943] best just to have them all laid out like [3945] this. Kind of wish we can go like uh [3948] like lengthwise. [3951] If I feed this in [3953] here and then I [3957] say just feed this into AI, let's do [3961] GBD4.5 and I'll [3963] say this is an HTML template that's [3967] supposed to [3968] return a nice looking [3973] minimalistic list of higherforming [3976] YouTube videos. I put two as an example, [3980] but it should scale to infinitely many. [3984] Right now, this looks poor. This looks [3986] bad because they're stacked on top of [3989] each other there. And I don't like the [3992] formatting etc. fix this so it looks [3996] nice and clean and [3998] the videos are side by side in some sort [4003] of clean uh uh [4005] minimalistic but sleek grid pattern. [4011] Okay, there you go. We're going to see [4014] how that performs. We'll keep the two [4016] and then after I'll deal with the logic [4017] on generating multiple little video grid [4020] things. The thing is like emails just [4023] inherently lack like the ability to do [4025] some cool formatting which sucks. So, [4028] oh, sorry, I didn't mention this. Sorry, [4029] sorry, [4031] sorry, sorry. This is an HTML email. So, [4034] it needs to be formatted in light of [4037] that, right? Emails are formatted a [4040] little bit differently than um [4041] websites. So, it needs to be um tables [4045] instead. And it doesn't look like it's a [4047] table. Okay, cool. Anyway, it's going [4049] through and it's now creating me this [4051] little digest, which is nice. Okay, [4053] let's expand this little code block now. [4056] Hide the [4057] sidebar. And then what I want to do Oh, [4059] we can actually preview the output. No [4061] way. Got a little um HTML thing in [4064] here. Doesn't look very good, not going [4066] to lie. Oh, don't tell me it's using [4068] each. Please not use each. Damn. It's [4070] totally using each, isn't [4072] it? We just said no each. Yeah, it's [4075] doing [4077] each. That [4079] sucks. We just need to go TR [4084] now. I [4091] think is this. Okay, cool. That looks [4094] much better. Um, so now we have [4097] basically this nice infinite layout. So [4099] if I added more, we'd be able to do [4101] more. Now I just have to generate the [4103] code. [4116] 1.7. My [4117] bad. Where does it do the 1.9? Does it [4120] have a [4129] 1.9? That'd be much better. [4156] 140. Uh, what's the width here? [4170] It's going like 170 [4172] probably maybe [4179] 180 20 on both sides. [4183] Right. Okay. Try [4188] that. And then I'm also going to change [4190] this a little bit. [4193] So we'll say [4230] Cool. Looks [4234] fine. Nice. All right. Cool. Cool, man. [4237] Nice. I'm liking this. [4241] Uh, this [4243] array. Um, why is the array the same [4246]  though? That's a problem, man. Why [4248] is the array the same This array [4250] should not be the same [4253] should have different items [4269] here. I mean, it looks it feels a lot [4272] better for sure. Let's test this now. [4284] This like still a really weird cut off [4286] here, [4286] man. That's not right. Thumb container [4289] object fit [4292] cover. Dimensions. What are dimensions? [4295] I don't understand. What are my [4298] dimensions? Height and [4302] width. Width. It is 100%. [4320] Um so where is this being applied? Can I [4323] do like 160? Oh 170 [4327] 180 [4331] 160. I feel like it's 155. Okay. You [4334] know it's probably 155. [4337] probably 155. So where is [4340] this? Go back here instead [4344] of [4349] 155. Send this now. That way it's not [4352] going to be super skinny [4355] again. Nice. Oh yeah, that's perfect. [4357] Got the whole thumb, baby. That's what [4358] I'm talking about. Okay, we can just set [4360] nixar if and duration whatever on the [4362] same line, can't [4366] we? Okay, so let's just uh get a list of [4369] things we want to do [4370] now. Is there padding over here? I don't [4373] know why there's padding over here. Just [4375] remove the [4380] padding. Okay, so we've now verified [4382] that this works on two. I was just [4383] feeding in examples of the exact same [4385] code snippet. Uh, aka like the the same [4387] thumbnail and stuff. But now I want to [4389] make it so that it works with different [4390] thumbnails. So, I'm just going to jump [4391] in and actually make a little do a [4393] little snippet of code to handle this [4394] for me. First, I'm just going to trust [4397] that this runs on data. At least that's [4399] what I'm doing right now that I'm [4400] pinning. But, I actually want to like [4401] have it run on live data. So, I'm [4403] actually just going to test this [4404] workflow and see what's going on. [4410] Okay, looks like we've now sent one [4412] email and I believe it's going to be the [4414] same thing twice, right? Okay. No, no, [4416] no. We actually getting um we're getting [4418] data directly from So, that's actually [4420] fine. Uh looks like the sizing is a [4422] little bit off. I don't really know [4423] entirely what's going on with that to be [4424] honest, but uh yeah, these are actually [4426] the Yeah, these are actually the trends. [4427] So, to be honest, like it kind of it [4429] kind of already works. Um one big thing [4431] that I want that we don't currently have [4432] is we just I just want the multiple. So, [4435] that's one thing that I have to do. So, [4437] how am I going to do the multiple [4440] H? Well, I guess I could just put the [4443] multiple right next to the title, right? [4445] So, I think that's what I'm going to do. [4446] I'm going to go into the HTML template [4449] here. And then where I have the title, [4452] which is right over [4454] here, I'll add a span for the [4458] title. Then I'll also add a span for the [4462] multiple. And for the spin, I'm just [4464] going to go style equals font weight. [4468] And then I'm just going to go bold. Then [4470] over here, I should have be able to come [4473] up with like a little multiple. Now, [4475] what is the multiple? Uh, well, the [4477] multiple is going to depend on this. [4481] So, guess I can just copy all of this. [4483] This is not at all clean. I'm going to [4485] be doing calculating like directly [4486] inside of the template, which most [4488] people do not recommend. Okay, but [4491] still. F it. We [4493] ball. Try not to swear as much. Let's [4496] think about this. What are we doing? [4497] What are we [4500] doing? I know what I'm going to do. If [4503] you think about it [4507] logically, what we need is we need this [4511] filter to open an additional field. [4519] We need to drag all of [4522] these in. Can it just automatically [4527] map? No, I [4534] can't. Okay. So, yes, I can. That makes [4537] sense. What we want is we want that [4539] average, right? So, I'm going to go to [4541] filter and I'm going to calculate the [4542] average. Then here I'm also going to say [4546] average. Feed that in as an expression. [4549] So now we're going to get the average [4550] and we're going to get this. So what [4552] this means is when we actually feed back [4554] to the loop over items, it's going to [4555] have everything that we need. I'm just [4557] going to undo this and test it for [4560] myself. It's going to include the [4561] average, which we can then use to find [4562] out the [4563] multiplier. We get everything we need [4565] plus the average. Plus the average. [4567] Wonderful. Now we connect this to the [4569] aggregator node. Now I can use this [4572] average to well sorry I guess I need to [4574] run this [4576] um kind of annoying but it's what it is. [4579] We actually have to run all this with [4580] the aggregator. My bad. So we're going [4582] to hit the APIs a bunch more times. [4583] Let's see if we get a rate limit issue. [4587] Nope. I'm just too crazy with it. We get [4591] the average. Wonderful. We're going to [4592] pin this. Now we're going to connect [4593] this. And now that we have this, we can [4594] actually go through the HTML template [4597] somewhere over here. Establish that [4599] average. So, let's do the [4602] math. What I'm going to want [4618] is this going to [4625] work. Does that work? I don't know. [4630] I don't know what I've been [4634] told. Yeah, I don't think we have the [4636] ability to do each. So, this doesn't [4638] really solve my [4642] problem. [4643] Oh. Oh, it does. It does. It does. It [4646] does. Okay. Okay. Okay. Wait. Uh, I'm [4649] aggregating here. I aggregate up there, [4651] right? Wait. [4662] What happens if I feed multiple items [4665] into this HTML node here? What [4676] happens? I don't know. Let's give it a [4678] try, man. Why the hell not? [4682] Um, We're not getting the data [4684] anymore. Where are we getting the data [4686] anymore? Jason data one title, [4690] right? Oh, yeah. Yeah, we can just do [4693] this, [4695] right? Delete that. Delete [4699] that. Cool. So, delete the [4702] [Music] [4703] TDS. [4706] No, just get rid of that, [4708] too. Okay. So, where's this video table? [4717] I doing a table per video or [4721] what? I think we just deleted this [4724] And then we delete all that [4726]  Delete that for [4731] sure. It says [4735] TR. We can probably just output them [4738] bunch of these, [4739] right? [4741] Let's go and do that [4746] again. [4754] Um, why is it doing the same thing? Cuz [4758] I'm returning the same [4761] thing. Well, I mean, this is this is [4763] what I wanted. So, now I just [4764] concatenate them, right? Yeah. [4775] So I just go [4776] here to the video [4778] table. Cut out of [4781] this. Now what I do is I do [4788] this. No, I do this. [4842] right? That's what I'm talking about, [4843] baby. We mapped the hell out of that [4846] man. Then, [4849] um, [4852] split. [4855] Wait. Then join. Then split with [4858] nothing. Oh That's all I [4869] do. That looks That looks good to me, [4871] right? I don't know why we're getting [4873] two of the same outputs, but like it [4875] should be okay. [4884] a We sent it twice. [4892] Um, maybe we just run it once. Probably [4895] enough. Execute [4897] once. Yeah, sorry about that. Oh [4901] Where the hell's the thumbnail at, man? [4909] Why are we getting the [4922] thumbnail? Yeah, there's the there's the [4924] data right there. [4946] Yeah, it's not [4948] rendering. That [4952] sucks. Why is it not rendering? [4987] Nope, that doesn't [4989] work. Why the doesn't that [4993] work? Isn't that the whole idea, man, [4995] that you can insert freaking variables [4997] like this? [5030] Holy this is [5033] brutal. I really want to do the HTML [5035] template thing if I could just do code [5037] to do it. See, we may have to just like [5039] fix all this man. I got all the [5041] stuff [5060] out. [5062] Huh? We need to delete [5066] this, right? [5097] Well, it's now putting the URL, which is [5099] cool with uh the X at the end of it. So, [5103] could I [5106] concatenate? Nice. That's [5112] cool. Source is this. Then I want to [5118] concat one more. Is that going to work [5121] now? Oh, for sakes. Come on. [5124] Chop. Chop. Nice. That actually did [5126] work. [5127] Cool. Very cool. Very cool. Uh, all [5129] right. So, what what are we doing over [5132] here? Video table thumb container thumb. [5135] So, this is a class of [5138] thumb. We'll go [5142] source class equals [5145] this thumb. [5148] Okay. Oh [5151] yeah. Okay. And then now that we're all [5156] done with that, what are we doing [5163] here? [5165] Okay, we now send one item. Hello [5171] email. my [5174] life. What the hell is going [5178] on? I think I know what it [5181] is. Kind of like a good thing going here [5184] for a [5185] bit. Like 15 minutes [5191] ago. Give me that email template, [5194] man. The hell were we feeding in here? [5199] Image source large [5201] thumb container on the outside. Are we [5203] still doing [5207] that? Image [5213] source im thumb container on the [5216] outside. [5219] Right. It's image source equals [5224] thumb [5225] concat class [5229] thumb. Looks good. I don't see any [5231] issues with that. So, why is the email [5234] coming out all [5236]  A quick div checker online. [5240] Please go over here to Yes. [5272] [Music] [5276] Mhm. Oh, that's [5283] useful. Come on, [5286] man. That's just not that's just not [5288] nice at all. Why would you break on me? [5291] Um [5294] h container [5297] right video table [5302] right remember earlier when this is [5304] working fine not that one [5309] okay table tbody [5313] tr thumb [5318] container so it's trd [5321] dev trtd [5325] dev, right? Looks good to [5329] me. But for whatever reason, when we're [5333] turning these on, they break. And also, [5335] we're running the same data over and [5337] over and over again. Why is [5339] that? We should have new data, right? [5346] Like not seeing any output data on this [5349] branch. [5353] So why is this going two get four or [5357] filtering [5359] two and for the first run it's 90% 90% [5364] so I don't fully understand what's going [5365] wrong [5367] here something is [5373] though we pumped out two channels good [5377] for both channels what we do is we loop [5379] through the Google [5386] sheet. Looks good. Then I'll put a [5389] filter. Filter keeps one, discards one. [5394] So now we have two items left. Two items [5397] on the left side. That looks [5399] good. Two items on the right side. That [5402] also looks [5404] good. Loop one. [5414] Yes, we are actually getting them now. [5416] Wonder. We're now just going to create a [5418] new chat GBT template entirely. One that [5420] is much much better looking than this. [5422] Let's go [5423] chat. Go over here. Change this to [5433] 04. First string is my HTML template. [5438] I am creating a simple daily digest app [5441] that includes trending videos [5449] from [5454] HTML. Above our HTML templates that are [5457] sent via email wrapper HTML in the [5461] second [5493] Still looks like Come on, man. [5495] What is going on with these black [5499] bars? Okay, just crop the images [5502] in point both sides. Height should [5508] be what is the height right now? [5517] Grab the height of [5520] this. Grab the height. Where's the [5523] height? [5544] fish care for the [5547] demo probably. Sorry. [5561] You would have thought that San [5562] Francisco would have better open AI [5565] access, [5567] huh? Apparently not. [5582] Oh my goodness. It's It's good, but [5585] that's too that's too much. Okay, so [5587] here's what we're going to do. I'm going [5589] to find the specific snippet of code [5592] where it actually cuts into my freaking [5594] things. Okay, so height 155 pix. So [5598] that's way too [5599] small. We're going to do is we're going [5602] to [5602] say double. We're going to double it. [5607] 310. Boom. Is there anything else that's [5610] 155 here? [5614] No. This is good. Supposed to be good, [5616] but yeah, it's too much. Okay. Multiple [5618] undefined. So, we also need the [5620] multiple. Where's the multiple [5623] average? So, where we get the [5626] multiple, we're going to do is concat uh [5635] JSON dot [5638] um JSON dot views divided by JSON.a. [5644] Okay. All right. This going to be [5664] it. Oh yeah, sorry. We need to round it. [5666] Uh, how do we round this? [5686] probably. Okay, I'm going to run this [5689] one more time just in one second and [5690] then we should be [5696] good. Then instead of two or three, why [5700] don't I add [5703] Well, we should probably do like five or [5705] something, right? Should probably run [5708] this once before [5709] I start saying stuff. Have it screw up [5713] on me during the [5717] demo. Let me just make sure that can I [5720] still see my mic and stuff? Yep. No [5722] issues there. Looks good. Looks good. [5725] We'll run it now once. [5732] Clean as [5735] hell. Nice. That's perfect. Multiple [5738] one. Oh [5740] god. One [5744] more. Y'all ever done [5749] this? Okay. any that [5758] around decimal places. Okay, we just [5760] need [5761] two. And that's that. Hopefully you guys [5763] saw firsthand how to build this sort of [5765] system live. I love doing these sorts of [5767] builds because you guys can actually see [5769] the thought process of like a real AI [5771] automation developer, not just the fancy [5773] finished product at the end. If you guys [5774] enjoyed this sort of thing, then [5776] definitely check out Maker School. It's [5777] my 0 to1 accountability roadmap where I [5780] will literally personally coach you [5781] through 90 days of AI automation agency [5785] building with a list of daily tasks and [5787] pre-recorded Loom videos that show you [5789] and walk you through everything you need [5790] to do in order to get your first [5792] customer. And if you don't get your [5793] first customer, you get 100% of your [5795] money back. Otherwise, if you guys could [5796] do me a major solid, we just hit 100,000 [5798] subscribers. If you guys aren't sub to [5800] this channel already yet, please do. [5802] Every sub means a ton. Like, subscribe, [5804] do all that fun YouTube stuff, and I'll [5805] catch youall on the next video. Thanks.

Video: https://www.youtube.com/watch?v=8V9GIUnKNtc
Title: He Quit His Job After His AI Automation Agency Hit $12K/mo
[0] You're never gonna know everything. I [2] think people need to understand that. [4] It's like you just have to decide one [6] day. It's like this is enough and I'm [8] going to figure out the flag. Like my [9] first little side hustle was selling [11] like jailbreaking iPod touches to kids [13] in elementary school. Oh, that's an [16] entrepreneur right there. There's [18] something to be said about the [19] constraints as well. Like believe it or [21] not, constraints aren't negative. If you [23] learn to operate under a constraint, [26] you're so much more effective when you [27] don't have that constraint. So don't [29] just dive into like a completely [30] unconstrained schedule or unconstrained [32] day. Like if you are working a 9 to5, [34] don't get me wrong, it's hard as hell to [35] do this, but if you're working a 9 to5 [37] and you have 6 to8, try running that [39] business 6 to8 first. Like I made this [41] absolutely horrible deal and I would get [43] 0.5% of the building purchase price of [47] like what you would buy. [50] What? Let's hypothetically say Emir has [52] to start at zero tomorrow. Mhm. And you [54] lose all the connections that you have. [55] You're not in any of these communities [56] or whatever. Yeah. How would you [58] approach the process of starting an AI [61] and automation company from scratch? [63] Well, seriously, I would probably [66] Hey, this is how one of my earliest make [68] money with make members quit his job and [69] then scale his agency to 12,500 bucks a [71] month in just a few months. Emir, what's [73] going on, big dog? How you doing? Good, [76] man. Good. Excited to get to finally put [78] a face to a name and chat with you. I've [80] been watching your YouTube videos for a [81] while, so it's cool to actually meet you [83] in person. Likewise, man. super stoked [85] on your growth over the course of the [86] last half year. I know that you've [88] already added a ton of value back to [90] Make Money with Make, the first [92] community that I think you joined more [94] than half a year ago. So, I'm excited to [96] hear about that journey and I know there [97] have been some ups and downs. Let's get [99] into all this. Where are you based out [100] of? I am based in Saskatoon, [102] Saskatchewan, Canada. Saskatoon? That [105] sounds like a fairy tale place. Yeah, it [107] doesn't sound real, right? I don't think [108] I've ever heard I don't think I've ever [110] heard of Saskatoon before. What's life [112] What's life like down there, man? [114] Saskatoon. It's honestly there's not a [117] whole lot going on. I would argue like [120] you're familiar with Edmonton. It's like [122] a lot smaller Edmonton basically. So, [126] spend a lot of time indoors. Minus 50 [128] winters. You know how it is. Yeah. Minus [131] 50, man. Hold on. Is this minus 50 for [133] our freedom loving friends or minus 50 [135] for like Canadians? For Canadians. Holy [138] crap, man. I' I've hit some cold days [140] like it was minus 34 or something in [143] Calgary a while back but minus 50. Yeah. [146] So I guess that's what you need all that [147] money for, huh? Really thick gloves. [149] Yeah, exactly. Yeah, for sure. [153] Mirror, how much did you make in the [154] last 30 days with your automation [155] business? $12.5,000. [159] Holy, man. Yeah, dude. Tell me about [161] that. How's the journey been? Yeah, so [163] the journey is pretty pretty crazy like [166] how I even got into this. So I initially [167] like started my career in mechanical [170] engineering. I worked in the polish [171] mining industry essentially like [172] fertilizer mining and I had this cool [174] opportunity where right out of school I [176] did my internship there and they're like [177] hey if you start a business we'll hire [179] you on like a six-month contract. That 6 [181] months turned into like 4 years and in [183] that time like I learned a whole lot [185] about like project management and all [187] this stuff. And it's funny enough that [189] like now my business the tools I was [191] using back then to like manage my life [192] like ClickUp and Air Table is like what [194] I'm helping businesses implement now. So [197] it's like kind of came full come full [198] circle. Yeah. In a sense. Yeah. So yeah, [200] I did that for about four years and just [203] like I was actually watching one of your [205] daily updates, you know, a few days ago [208] and you were talking about how you were [209] about to launch this business in CO and [210] you woke up one morning and you're like, [212] man, I I can't do this, right? I had [214] that same feeling where I was like I [216] woke up one morning and I was like, I [217] can't go to work anymore. I just like [219] felt empty, you know? And I was like, I [220] need to go find something new to do. I'd [223] always been obsessed with like [224] technology and I grew up in like an [226] entrepreneurial family. So, I was like, [227] I need to do something related to tech. [229] Funnily enough, like my first little [230] side hustle was selling like [232] jailbreaking uh iPod touches to kids in [234] elementary school. Oh, that's an [237] entrepreneur right there. Yeah. So, you [240] know, started there and so I was like, [241] okay, what do I do now? It's like I need [242] to learn sales to run a business, right? [244] That was like the first thing I thought [245] I need to learn how to code. So, I was [247] about to go to the University of [248] Calgary. There's like a master's program [250] for engineers for like a masters of [251] software engineering. I was like, "Oh, [253] I'm going to go do this. Like, this [254] makes a lot of sense." Then, you know, [255] you do the math and like we have the [256] internet now and it's like, why don't I [258] just like teach myself to code, right? [261] Yeah. So, I started teaching myself to [263] code and also got a job at like a [265] managed service provider here in town as [267] a business analyst. So, I got to work [270] with like a variety of businesses [271] analyzing their tech stack and seeing [273] kind of what they were doing. And I did [274] that for like about a month and then the [277] sales director got one that I was like a [279] really good project manager. They're [280] like, "Hey man, like we want to migrate [281] from like HubSpot to Salesforce. Can you [283] like help manage this project?" I was [285] like, "What in the world is like a CRM? [287] Like I don't even know what this is." [289] Like but I was like, "Yeah, sure. Like [291] why not?" Cuz I wanted to get more sales [292] experience and like getting exposed to [294] them. I was like, "Oh, maybe there'll be [295] like an opportunity to get a more like [297] consultative sales role in the [298] business." So did that for 4 months. And [301] then they asked me, they're like, "Okay, [302] what do you want to do now? you want to [303] go back to your old job or do you want a [305] sales job? And I was like, well, they [306] just had come out with this new role [308] where it's like a mini CIO for small [309] businesses, like a technology adviser. [312] And that CIO meaning chief integration [315] officer, information officer, like [318] basically like small businesses who [319] don't have an IT department themselves. [321] they would hire us and then part of my [323] role was almost like customer success [325] and sales combined where I would just [327] essentially keep the client happy [328] retention and figure out ways we could [330] like help their technology stack improve [332] basically. So I absolutely crushed it [334] came naturally to me cuz I love tech. I [336] hated inefficiency. I was like let me [337] like help these people. So I did that [339] for about a year and in that time I [340] found your YouTube channel. So I was I [343] was still like trying to learn to code [344] while I was doing this cuz I wanted to [346] start that business on my own eventually [347] anyway and I was getting the B2B sales [349] experience. this feels more aligned. [351] Like it feels more practical. Like the [353] make money with make, just the name of [354] like your program, right? Like it was [356] just like this is actually practical. No [358] fluff. I tried to like learn some stuff [361] from a guy who like used to work at [363] make. He posted like a tutorial thing on [366] YouTube and it was the most technical [368] thing on planet Earth. Like it was just [370] like this doesn't make any sense. I was [371] I was like at least like I have an [373] engineering degree so I understand a [374] little bit of this stuff and like but [376] like most people would just be [377] completely lost trying to watch this [378] guy's YouTube channel. And then you came [380] out and I was like, "Oh, thank [381] goodness." And I I'm pretty sure I've [382] never commented on a YouTube video [383] before. And it was just like one of your [385] first videos. I was like, "Man, like, [387] thank you for doing this." The other [388] people out here just like don't know [389] what they're doing. They're just making [390] it way too complicated. So that's kind [393] of how we ended up. And then I didn't [396] take any action. Watch your YouTube [398] videos, take any action. The classic. [400] Yeah, the classic. Right. I was like, [402] "Yeah, you know, I'm like I'm like [403] worried about like is this a conflict of [405] interest with like my existing job and [407] like all this stuff, right?" Right. So, [408] there's like that element of it. Yeah. [410] That was like probably like last May [413] maybe. I like been comfortable enough [414] and confident enough that I knew what I [416] was doing. But I didn't do anything till [418] like October. So, at one point I was [421] just like, I've saved enough money from, [423] you know, the jobs I've had. I can live [425] without like making any money for like a [427] year was my plan. I was like, if I don't [428] make a dollar from this, at least I know [430] I tried, you know, like I was like, at [431] least I gave you a good solid effort. [433] So, I was like, you know what? I just [434] got to quit. Like, just burn the boats. [435] And like I don't recommend this to [436] people. Like if people ask me like [438] unless you've got like money in the bank [439] like do not do this like this is a bad [441] idea. And I'm pretty sure in my message [443] like I sent you you even said you're [444] like it's good to have that safety net [447] in a sense because you can you won't [449] feel stressed of like taking all these [451] bad deals or like you know figuring out [452] where you're going to eat from and all [454] that stuff, right? So I think that's [455] that's super important. Yeah, I entirely [457] know what you mean. I get so many people [459] that are just like hey man I'm about to [461] burn every bridge in my life and just do [463] an automation. I have $53 and a [466] toothpick in my pocket and I think I'm [467] gonna make it. Like dude, like relax, [471] man. Can you just keep going for a [473] little Okay, real talk though. The [475] benefit of having a job or any sort of [477] revenue stability. It's just that allows [478] you to like go up a little bit, see a [480] little bit further. You're not [481] constantly looking at your shoes in the [482] dirt, you know, being like, "Oh my god, [484] you know, like how do I take that next [485] step forward?" You have the, I want to [487] say, privilege of being able to invest a [489] little bit of money in things that might [490] move you a little bit further, but take [491] a little bit of risk as well. And I [493] mean, I had to add this to like my VSSL [495] video sales letter for my communities, [497] but like if you're not in a financial [499] position where you're like 100% [501] confident that this is the right move, [503] and it sounds like you were because you [504] had some backing, you had some savings [506] or whatever, there's nothing wrong with [508] having a job. Like there's no ego in [510] here. We're just looking for the [511] straightest line path to more revenue, [512] to more money. Automation is obviously [514] much higher leverage than working like [516] the standard 9 to5 for the vast majority [517] of industries. So that's the [519] determination you should make, not the [520] whole like I'm self-employed and I got [522] to burn all the bridges. Do you know [524] what I mean? So I'm really glad that you [525] brought that up. Yeah, 100%. And I think [528] it's like don't get me wrong, even [529] before I quit my job, I was still [531] working on this stuff like taking fake [533] action in the sense I wasn't applying to [535] jobs and stuff, but I was like, you [536] know, learning more and doing things in [537] the morning before my actual job. So I [539] think there is that window of like 6:00 [542] a.m. to like 8:00 a.m. that people need [544] to take advantage of and explore these [546] things, right? if you don't and you just [548] like go all in like you're going to like [549] you said you're looking at your shoes [550] you're like where do I go from here? So [552] there's something to be said about the [554] constraints as well. Like believe it or [556] not constraints aren't negative. If you [558] learn to operate under a constraint [560] you're so much more effective when you [562] don't have that constraint. So don't [564] just dive into like a completely [565] unconstrained schedule or a constrained [567] day. Like if you are working a 9 to5 [568] don't get me wrong it's hard as hell to [570] do this. But if you're working a 9 to5 [571] and you have 6 to 8, try running that [574] business 6 to 8 first before you try [576] running it, you know, 6 to freaking 9. [578] Do you know what I mean? Like Yeah. [579] Seven days a week. Yeah. Exactly. Yeah. [582] Yeah. And anyway, I cut you off a little [583] bit there. What What happened next? [585] Yeah. So, I ended up quitting October [590] and the day before my last day, I got my [593] first client off Upwork. [596] Holy gone yet? That wasn't even gone. [599] Just talk about like serendipity in a [600] sense. Like it was just like this is [602] like meant to be. This is amazing. Like [604] let's do this. So yeah, landed that [606] first client went really well. Built [608] like this really interesting automation. [609] He would get leads from like a pixel for [612] his clients and we would analyze like [614] all the web pages they visited and like [616] figure out their intent of like what [617] they were thinking of buying and then [619] like piping those over to their CRM [622] which is pretty cool. Damn. Yeah, that [623] does sound really cool. That was your [625] intro to automation? Yeah. another email [628] autoresponder like that sounds wasn't [630] nothing basic though it was just like [631] this guy was like getting creative he's [632] like I want to like get into data [634] instead of just like marketing services [635] I like okay sure like let's try it you [637] know let's say no sounds cool did you um [640] was this like a one-off initially you [642] said he got him through Upwork yeah so [643] it was just like that was the oneoff and [645] then he just like kept asking for more [646] things and then he referred me to his [649] friend who's like still like my one of [651] my top clients today so like that's [653] pretty cool there was like some funny [655] stories that I can share of like Upwork [658] situations. Like there was this one, [659] please. [661] Um there's this one where this guy was [664] like a real estate investor and he [667] initially came to me for like air table [669] help. I like told him like this is not [672] the constraint in your business. Like [673] the constraint in your business is like [675] you actually need to go buy more [677] buildings. Like you're just not talking [678] to enough people. And like I sold them [680] on the cold email stuff, right? But the [682] deal was absolutely horrible. Like I was [685] like, "Yeah, it'll be like 250 bucks." [687] Like I just like and like I made this [689] absolutely horrible deal and I would get [692] 0.005% of the building purchase price of [696] like what you would buy. [698] What it Okay, bro. So So wait, you you [701] did like a share like like a like a [703] share on a freaking building purchase [705] price for one. That's insane. And then [707] for two, your freaking revenue thing was [710] 0.005. [712] Yeah. So it's like it was like $10 [713] million. If you bought a $10 million [716] building, I would get five grand. It was [718] like horrible. That's very interesting. [721] I mean, that's what he pictured cuz he [723] didn't want to pay for it. He just says [724] like, you know, like you don't know what [725] you're doing. You've never done this [726] before. And I was like, okay, like let's [728] figure out a deal. And he just did not [730] want to pay for it. It's like, and then [731] I realized I was like, I'm going to be [732] paying for this guy's like smart lead [734] and like scraping all these leads for [736] like how long does it take to buy a $10 [738] million building? Like 6 months, a year. [740] I was like, there's no way this is going [741] to work. [744] Holy, dude. I've never set anything up [747] like that myself. That's it. A bad very [749] bad deal. So, anyways, I like I just [751] like it felt horrible and I was like, [753] there's no way. Like, so like we agreed [754] to it verbally and I'm just like I send [756] him a proposal and he's like, I don't [759] know like I don't even know want to pay [760] this like 250 bucks. Like I just want [762] you to cover it and just like I'm like [764] hey man like I don't want to do this [765] deal. He's like come on like let's do [767] it. like really wanted me to like follow [769] through on it. I was just like I just [770] realized this is just a terrible idea. [772] And that's like a scarcity thing, right? [774] Cuz I was like, "Oh my god, this guy [775] wants to work with me. Like let's just [777] like work together, right?" And I think [778] maybe someone who didn't have like the [780] financial position I had would have been [782] like, "Yeah, let's do it." Right? To me, [784] like I wasn't I never optimized for [786] money anymore cuz I did that in my first [788] like career, my little project [790] management business. And I was like so [791] sad because it's just like, you know, I [793] want to actually enjoy learning and like [795] doing the things I'm doing and like [796] working with my clients, right? Right. [797] So now I optimize for enjoyment. Like [799] the money kind of just comes as long as [800] you show up every day is what I found so [802] far. That's really interesting. It's [804] like you're optimizing for the input, [806] not the output. The output just happens. [808] Yes. That's kind of how I've been [809] operating in the last like six which is [811] like different than what I what I used [812] used to do. And it just like feels way [814] more aligned. Like I get up every day [816] and I'm like excited to like work on [817] these things cuz I'm like I can really [819] help these businesses and they don't [821] have to do [ __ ] manually anymore, you [823] know? Yeah. Facts. The 500th piece of [826] paper. Yeah. Yeah. That's cool, man. [828] Yeah. The 005% revenue share, that's an [830] X for anybody that's listening that was [831] considering doing that on Yeah. Do you [833] not do that, please? Purchases. [837] You got any more? Just while we're on [838] the topic, I have one where like I sent [840] a guy a Loom video, showed him how to [842] solve his problem. It's like a VC and he [844] hops on the call with me and he's like, [846] "Yeah, like you really know what you're [847] doing. Like why don't I like give you [848] access?" I just kind of like explained [850] to him like how to do it. He's like, [851] "Okay, yeah, like I'll I'll pay for it [853] and like I'll pay you tomorrow and like [854] give you a review and like everything [855] like that." never heard from the guy [857] again. So, it's like that felt kind of [860] gross in a sense, you know? It was just [862] like, oh man, I feel used. But whatever, [864] it is what it is, you know? Man, I I got [866] to say, don't get me wrong, giving value [869] is incredible and it's amazing. And I [871] think that that's just the way to [872] operate today. But when you do give [875] enough value, there will be some people [876] out there that will take advantage of [877] you. I can't tell you the number of [879] times I've sent some super super [880] detailed proposal and in it I say [882] something along the lines of, "Hey, [884] here's how I would do your project if I [886] could and you know, I want to do it for [888] you, but here's exactly what I would [889] do." And then they just, you know, they [890] disappear. They hire somebody off of [892] Fiverr or something for $7.50 an hour [894] and they're just left in the dust. Yeah. [896] I mean, I I prefer it that way, you [898] know, because I prefer to work with [899] people that really like working with me, [901] that are stoked to, that see the benefit [903] of the valuedriven approach on job one, [905] and then think, "Holy crap, this guy's [906] giving me this much value before I've [908] even started working with him. How much [909] value is he going to give me when like [910] we actually sign a deal?" Right. [912] Exactly. It also gets into that [913] congruence thing that you talked about [914] where like, you know, you focus on [916] giving and solving and get getting [918] really stoked about the sort of work [919] that you do and then everything else [920] sort of falls into place. I feel like [921] that's important. Yeah. like and being [923] willing to like tell your clients like [925] their idea is bad is huge too. I think a [928] lot of people especially starting out [929] are scared to do that. There's the guy [931] that I got referred to, he wanted like [934] the same setup for his business but just [936] like it didn't have enough traffic, [938] right, for the types of leads he was [939] getting and it didn't make sense and he [941] was going to pay me a bunch of money to [942] like build the same thing. I was like, [944] "No, no, no. Like that's that doesn't [946] make sense. Like let's do like a $100 [948] like it'll take me like 20 minutes to [949] like build this automation." And I built [952] this automation. I was like, "Look, like [953] we can just like do a little MVP, pilot [956] it, see if it actually provides value. [957] And then if it does, we can build like [958] the whole big system." And it turned out [962] like it didn't make sense to do the big [963] system. But now that client is paid by [965] far like the most money out of like all [967] my other clients, right? So like being [970] willing to like, you know, not take [972] $1,000, but take a $100 just in that one [974] moment led to all this other stuff on [976] the back end. So and yeah, if you didn't [978] have that stability, if you weren't in a [980] position where you could actually say, [981] "Hey, I don't need that $100 right now." [983] And I think that that's leading to a,000 [985] or 10,000 or 100,000 over the course of [987] the next 6 months, you wouldn't have [988] been able to do that, right? Yeah. So on [990] like a meta level, it's it's all [991] incentive alignment. And you know, if [993] you don't get yourself in those really [996] sketchy situations that we were talking [997] about, you know, like some of the [998] fortunate souls that join my programs, [1000] um you're able to align your incentives [1002] with the clients, not necessarily just [1003] yours. You don't just have to be like, [1004] "Oh my god, like $100. Okay, let's let's [1006] let's grab it right really quickly [1008] before this opportunity runs out. Even [1009] if it doesn't actually lead to any [1011] benefit on the client end. And you know [1012] what? That guy probably saw that. You [1015] know what's really interesting? What I [1016] found is like is you get higher and [1017] higher pitch these bigger ticket [1018] projects. Some people actually do this [1019] sort of stuff on purpose. I know this [1021] sounds weird, but some like big business [1022] hot shots actually like seed with [1025] problems that they aren't that they know [1028] aren't worth solving to see if you're [1030] the sort of person that can call them [1031] out on their [ __ ] It's like, hey, [1033] is this just a yes man that's going to [1034] do everything for me? Or is this some, [1036] you know, I think this person's [1036] intelligent. I think this person's [1038] really keen. Maybe I could work with [1039] them long term. But are they going to [1040] like just tell me what I want to hear? [1042] Or are they going to be like, "Hey, man. [1043] This makes no sense and this is what I [1044] would do if I were you." Yeah. Yeah. [1046] That's actually Yeah. I didn't even [1048] think of that. They play that game. [1049] They're like, they're qualifying you in [1051] a sense instead of you qualifying them. [1053] Yeah. 100%. Yeah. Okay. Okay. So, I [1056] think you've done a pretty solid job [1058] outlining the journey. You got a couple [1059] Upwork jobs to start. From there, you [1061] kind of bundle that into referrals. Have [1062] you tried other lead generation [1064] strategies aside from that? And if so, [1065] what have you gone through? Yeah, for [1066] sure. So, I ended up joining another [1068] like coaching program as well back in [1071] like Novemberish. And it was my main [1075] lead generation strategy has been [1076] relationship building and just providing [1078] so much value to people that they're [1080] just like know me now as like the in [1082] this community that I'm in as the [1084] automation and project management [1086] systems guy. So, in that community, they [1089] have an AI use case call every week and [1092] there's a guy that hosts it and then I [1095] would join it every week, but then I [1096] ended up somehow becoming a co-host. [1098] Like, it's just like every every week [1100] he's like, "Am what do you think?" And [1102] it's just like I'd be like, "Oh, like [1104] this is what I did for a client. This is [1105] what I would do now." All this stuff. [1106] So, somehow I like ended up becoming a [1108] co-host and then the whole community [1110] views me as like the expert now. So then [1112] they all just come to me inbound or you [1115] know I'll reach out to them just have [1116] like a talk like this you know it's like [1118] hey let's get to know each other and [1120] then they're like oh like I actually [1121] need this like can you help me with [1123] this? Um dude that's cool as hell. It's [1126] almost like social media just on like a [1128] really small niche scale with a bunch of [1130] people that like have a problem that you [1131] could solve. Yeah. It's a community of [1133] my ICP which is like crazy, right? So, [1136] it's just like I have it's not I'm [1138] scraping a bunch of leads and all this [1140] stuff and and you know sending a bunch [1142] of emails. It's just like I'm having [1143] onetoone conversations. The best part is [1146] now that I've signed some of them as my [1148] clients. They're now my salespeople in [1150] the community. So, like they're up at [1152] all hours of the night cuz they're [1154] business owners that like someone will [1156] post like, "Hey, I need help with this." [1157] And then they're like, "Am the guy like [1159] he made my systems work so well." It's [1160] like, so it's like I have like these [1162] built-in sales people now too, which is [1163] like super interesting. and they're just [1165] my clients. So Oh, that's so cool, man. [1168] That's like leveraging. Yeah, that's [1169] leveraging people. It's like Naval says, [1171] right? There's code, media, and then [1173] people. And that's like the third. [1175] Selling while you sleep. Dude, it's [1177] funny that you mentioned this because I [1178] think that's that's lost on a lot of [1180] people that try in maker school. Now, I [1181] talk about three primary lead generation [1183] methods. There's like cold email and I [1184] show you and I teach you how to do it. [1185] Upwork, I show you to teach you how to [1186] do it. And then there's communities. And [1188] like a lot of people struggle with the [1189] community stuff. And I think it's [1190] because they don't understand what you [1192] hit the nail on the head of back there [1195] that it's about relationship building [1197] and giving like dummy amounts of value [1199] without expecting anything in return. [1201] Then leveraging that to become an [1202] authority within the group. Then once [1204] you're in authority, you inherently [1206] have, as you mentioned, people selling [1207] for you, people reaching out to you, [1209] you're trusted, you're vetted. So that's [1211] really cool. Do you take any sort of [1213] like systematic approach to this stuff [1214] or is it just like you I don't know you [1216] pop up to the weekly call you like reply [1219] to posts and stuff like that? Yeah, [1221] that's it's pretty much like part of my [1223] flow of like checking my LinkedIn and [1225] then Slack communities are in there and [1226] like stuff like that. So I'll just check [1228] see what people are talking about and [1229] then join that call and answer [1231] questions. There isn't like I'm like [1232] necessarily bringing things. I did do [1234] get the opportunity to do a guest [1235] coaching call though. So that was cool [1237] on project management systems. So [1239] bringing in, you know, some of the stuff [1240] I learned from my experiences with [1242] ClickUp back in the day from like 2017 [1245] and like through to now and then stuff I [1247] learned from you with like the [1248] automation piece and stuff. So sharing [1250] that with the group and then yeah, I got [1252] some leads from that. Yeah, it's just [1253] like getting becoming friends with [1255] people, providing a lot of value, doing [1258] some free work as well. That is the [1259] other thing I offer is someone like oh I [1261] don't know how to do this automation. [1262] I'm like just like give me your account [1263] like let me let me take care of this for [1265] you. [1267] social insurance number. Yeah, exactly. [1271] Um and then and then they're like, [1273] "Okay, now like I want to still work [1275] with you. Like what can we do?" It's [1276] like, "Okay, like here's let's let's do [1278] this a retainer or fixed price project, [1280] whatever the case may be, right?" So, [1281] you got the vibe, man. You got the vibe [1283] to like crush it in the modernday [1285] knowledge economy. All of the people [1286] that I've hired, every single one has [1288] done exactly that. They just like, "Hey, [1290] I think you're suffering from this. Do [1291] you want me to fix it for you? Let me [1292] fix it for you. I'll do it for free. [1293] Here's a bunch of free [ __ ] Just take [1295] it. I don't expect anything in return. [1296] And then you're just so overwhelmed. I'm [1298] like drowning in value that I'm like, [1299] "Oh man, I feel like I have to pay this [1301] guy something." Yeah. It just like comes [1304] naturally to me. I don't know. The money [1307] ends up being a byproduct, but obviously [1309] I'm running a business. I want to make a [1310] lot of money. That's true. But like it's [1312] just the approach is different. It comes [1315] naturally. It must be just a Saskatoon [1317] thing. Must be must be. We have nothing [1319] better to do but just provide free [1320] value. [1323] That and potach. Yeah. just bust your [1325] balls. Okay. If we could narrow down the [1328] systems that you build primarily then I [1330] don't know like two or three categories [1332] what would you say they are out of all [1333] the possible systems like what is Emir [1335] building for the most part? Project [1336] management systems and CRM primarily [1338] right now I'm like even helping [1340] companies like implement HubSpot right [1341] now for example. So it's like gotcha. [1345] So it's not even like just dude it's W [1348] just so many thoughts there cuz earlier [1350] you were like HubSpot what the hell is a [1351] HubSpot you know like that was part of [1353] your journey right and now you're just [1354] like oh yeah this is all I do baby. [1357] Well I I did leave out one part actually [1360] that something you touch on a lot was [1362] when we were working with that [1364] consultant who was helping us implement [1366] Salesforce. There was something I really [1368] like noticed. It was like a light bulb [1369] in my head where it was like we would [1371] ask him like you know what are business [1372] best practices like how can we like [1374] leverage this to make more money in the [1375] business and like all this stuff and the [1377] guy was just like so technical he's like [1379] I know how to like put the properties in [1380] but like I don't know anything about [1382] business right so I think there is that [1385] level where I like had a light bulb in [1387] my head where I was like why can't I be [1389] the guy who's both technical and [1392] understands business why can't I do that [1394] like that would bridge so many gaps here [1396] and like it would make for way better [1398] client experience as if like if I was [1400] that consultant and now I am that [1402] consultant right so I think there's that [1404] aspect where I was like that like really [1406] flipped the switch in my head was like [1407] why can't a person do both right right [1409] like you know there's this false [1410] dichotomy almost this thing in like the [1412] business consciousness that like well [1413] you know if you're a business guy you're [1415] not a tech guy and if you're a tech guy [1416] you're not a business guy but really [1418] with the convergence of all these [1419] technologies and like the simplification [1421] with AI and like drag and drop no code [1423] there's no there's really no reason why [1424] you can't be you don't need to go to [1426] computer science school like you were [1427] earlier for like freaking six years [1429] anymore to like get a grasp of this [1430] stuff. Just drag and drop, baby. [1433] Literally though, that that that was uh [1436] speaking of drag and drop. It's like, [1438] you know, I made my first internet money [1440] with dragging and dropping modules [1442] around. Like that's crazy when you like [1444] say that out loud. It's like wild. Yeah, [1447] dude. And like, you know, then it comes [1448] through like a tiny little tube and [1449] deposits in your bank account. And yeah, [1451] it's like this is real. Wow. the the [1454] like zooming out just how crazy it is [1456] that we could do all this stuff is nuts, [1458] you know, like [1461] um yeah, man, that's that's dope. The [1463] CRM and the project management stuff is [1464] cool. Well, what I like about you, man, [1466] is you're talking about the lead genen [1467] approach you're taking, which is [1468] non-standard in the community. Probably [1470] like less than 10% of people achieve [1472] success using the method that you're [1473] talking about. The vast majority of them [1474] are like cold email and Upwork. And then [1476] you talk about a deliverable and service [1478] that not a lot of people do which is [1479] project management and CRM cuz you know [1481] they I don't know they just seem like [1482] it's inherently not sexy or whatever and [1483] you're crushing it with that. So yeah, [1485] you're really like showcasing how [1487] possible it is to do a lot of the things [1489] that might not be as sexy on the surface [1491] but that do drive a lot of results for [1493] clients which I'm happy to see. For [1496] sure. I did give cold email a shot. I I [1499] think I paid for smartly like for like [1501] three months before I like started [1503] actually using it which I was just like [1505] scared. I was like I don't know what to [1506] do. Like I don't even know how to write [1507] copy. Like what is this? I ran a [1509] campaign. I got some responses. I sent [1511] some moon videos back. Like nothing ever [1512] really came of it. And like I am looking [1514] to start doing that again now that I'm [1517] more established with some of these [1518] existing clients. I'm like I need to I [1520] watch a lot of your videos. You're like [1522] growth solves all the problems. And I'm [1523] like okay I got to get get back out [1525] there, you know? So it's like it's like [1527] dating. It's like I've kind of stopped [1529] dating as much, but I'm like I got to [1530] like, you know, get back on like I would [1532] say cold email is like the Tinder of [1534] like outreach, you know? It's like [1535] there's [1538] That's great. Yeah. I mean, you actually [1539] got a point. What What's your pickup [1542] line going to be? I'll build you a CRM. [1547] That's really cool, dude. I I love that. [1549] I feel like I should change part of the [1550] program to include that. Like cold email [1552] is basically cold emails like Tinder but [1554] for money. Yeah. But actually, Tinder is [1557] Tinder but for money for some people, [1558] too. So, yeah, that's true. [1563] Did you ever have any times during this [1565] process that you just wanted to quit? [1567] That you were like, man, this is way too [1569] hard in way over my head. There's no way [1571] I could do this. Not really, to be [1573] honest. Like, I don't want to like lie [1575] to you and say I did, but like no, like [1577] there wasn't really anywhere where I was [1579] like I wanted to quit along the way. I [1581] think there was there is this overcoming [1584] like you got to kind of go through the [1586] outreach thing. I think that's the [1587] hardest part of this whole process. Like [1589] learning make.com like you said you [1591] probably figure out in like a couple [1592] weeks but like the actual outreach thing [1595] like I think back in December I made [1597] $200. Like that was it because I spent [1600] the whole month figuring out how to make [1601] a website on like framer. Like you know [1604] it's just like so stupid. Like it's just [1606] like what am I doing? [1608] And but like this was like something [1610] like you would tell yourself in your [1611] head like I got to have the perfect [1612] website and like even though like people [1614] say like don't do that but like you [1616] still for whatever reason you feel like [1617] you like you're compelled like I have to [1619] they're not going to trust me if I send [1620] them a cold email I don't have a website [1621] like what are they going to say you [1622] know? So just like all this like crazy [1624] like mental gymnastics you do in your [1626] head. So I would say like there was [1628] times like that where you know you're [1629] like what am I doing? Like why am I not [1631] making money? Why am I not talking to [1632] people? It's like cuz you're not talking [1634] to people. That's why you're not talking [1635] to people right? So very important [1638] 100%. Dude, I'm I'm glad that you [1640] touched on that. I can't tell you how [1642] much silly [ __ ] I used to do instead [1643] of talk to customers. I would spend like [1646] dozens about like weeks, months just [1648] touching up random things. Oh, my [1649] LinkedIn profile isn't good enough. It's [1651] like, bro, nobody's seen it. You open up [1654] a window, yell, and you'd reach more [1656] people than that LinkedIn profile's [1658] reaching over the course of the last [1659] couple months. Like, that [ __ ] ain't [1661] working. You got to just like send those [1662] DMs, man. You got to get out there and [1664] join join those communities, right? [1666] Yeah. So, I feel you. Um All right. All [1669] right. So, I I feel like I got a picture [1671] of your business and your journey and [1672] stuff like that. So, you know, [1673] $12,500 in the last 30 days. What's [1676] next, I guess, for the business? Like, [1678] where do you want to take it into the [1680] future? We we've discussed the past, but [1681] let's look forward. Yeah. So, I'm [1683] looking to basically, it's funny how I I [1687] didn't mention how like I ended up more [1688] in this CRM and project management [1690] system stuff. It was like initially I [1692] was like selling these like custom [1693] automations of like whatever people [1695] bottleneck pain point was. I was like oh [1697] you need this and twice in one week I [1699] had sold automations and they both came [1702] back to me and said actually I think I [1704] want ClickUp first cuz I told them I was [1706] like you should probably have like a [1707] central source of truth and a place to [1708] like manage all your work because like [1709] the way you guys are doing this is like [1710] chaos. I told both prospects that and [1713] they both paid the invoice and then like [1716] an hour later both sent me emails and [1718] were like, "Hey, I actually want the [1720] project management system first." So I [1723] was just like, I guess I like this is [1724] what I do now. I just do project [1725] management [1728] systems and it's been very successful. I [1732] think I want to stick in that lane where [1734] it's like I want to come into a [1735] business, set them up with a project [1738] management system if they don't have [1739] one, then look at bottlenecks, theory of [1741] constraints like you talk about. And [1743] that fractional CO stuff makes sense to [1745] me. Like I feel like that's where I want [1746] to be where it's essentially like I'm a [1749] partner in your business and helping you [1751] implement tech and just like eliminate [1753] bottlenecks so you can focus on like [1754] your sales and growing your business [1756] overall as like the CEO, right? So [1758] that's kind of where I'm positioning [1759] myself. I'm also looking to build out an [1761] intro offer of like if you don't have a [1765] CRM or project management system like [1767] here's templatized for most marketing [1769] agencies or digital agencies that'll [1772] work and I'll give you like videos on [1773] how to use it properly and like how to [1775] check in on it every day and like manage [1777] it and all that stuff. So I'm thinking [1778] about doing that as well. So that's kind [1780] of the next steps in in the evolution [1782] taking what I've learned so far and then [1784] building that product in a sense. Yeah. [1786] Yeah. Exactly. Exactly. like [1787] productizing, templateizing, more [1789] leveraged consulting. You're not looking [1790] to hire, I guess, in the near term. [1791] You're looking to sort out this offer [1793] first. Yes. Yeah. Exactly. That's the [1796] game plan. Well said. I usually [1799] recommend people do this in lie of [1800] hiring because um I think we've all [1802] heard over the course of the last four [1803] or five years, I mean, you know, at [1804] least at least our generation, Amir, [1806] it's like the second that you um you [1809] know, hit a certain amount of money, [1810] delegate. Throw that project away. Like [1812] you you shouldn't be minding yourself [1814] with tiny little things like that. [1815] You're better than this. But there's [1817] actually so much value in instead of [1819] hiring immediately, try and build [1821] systems that allow you to make more [1823] money as a soloreneur or as a small team [1825] anyway. And then only when you really [1827] truly do hit the limit, aka the revenue [1829] ceiling, you know, for yourself, then [1832] hire. Cuz when you're at that point, [1834] like a couple things happen. One, like [1835] we'll all eventually have to hire [1836] anyway. But when you hire, now you hire [1838] for a role where that person will be [1841] able to generate $50,000 of revenue for [1843] you, not just 5,000 or 10,000 because [1844] now you have systems for them to to work [1846] with. And then two, you'll probably be [1848] able to hire like a better person [1849] because you're not going to be stuck, [1850] you know, counting pennies and and [1853] pinching your wallet. Like a big issue [1855] that I had when I was hiring for [1856] Leftclick, which is the AI automation [1858] agency, to be honest, we just didn't [1859] really have too much money. Like, you [1860] know, I was right around the size that [1861] you're at now. This must have been like [1863] about $15,000 a month, something like [1865] that. And I was like, "Oh, I'm really [1865] running to the ceiling. I can't do [1867] anymore." Maybe 20 grand. I don't really [1869] entirely remember. But yeah, I was just [1870] like, "Oh man, like this person's $3,400 [1873] and that person's $3,700. Like, hm, I'm [1876] going to hire the $3,400 one." And then [1878] like when you're forced to make these [1879] decisions, you end up with a shitty hire [1880] anyway. And when you end up with a [1882] shitty hire, the shitty hire introduces [1883] more complexity in your business. And [1885] then you end up just like wasting a [1886] bunch of time because they ended up [1887] leaving, you know, they end up leaving, [1888] they end up delivery anyway. The whole [1889] point I'm trying to make is don't even [1891] do any of that [ __ ] You probably [1893] squeeze like $40 $50,000 a month with a [1895] templated productized offer amir [1897] changing literally nothing else than [1898] you're doing right now, right? And when [1900] you get to that problem, you know, then [1901] then cross that bridge. Yeah. Yeah. I [1903] think it goes back to what we were [1904] talking about earlier with constraints, [1906] right? If you put those constraints on [1908] yourself and you're like, how can I [1909] actually if I only had this much, you [1911] know, time and money to do this work, [1914] how can I do this myself? And fig trying [1916] to figure out how you can actually do [1918] that is way more valuable than like you [1920] said, hiring someone subp part. A big [1921] problem too as I've heard what you say [1923] and other people that I've talked to say [1924] is like it's hard to find people like [1927] ourselves that have that both they can [1929] think about business and can think about [1931] technology. It's like as soon as you [1933] give someone like, hey, build this [1935] automation, but if they can't tell you [1937] why it's, you know, driving revenue or [1939] increasing leverage in a business, like [1941] why they're doing it, that's where it's [1943] like, okay, now I need two people. Now I [1945] need a business analyst and I need a [1946] developer. Like it's just it starts [1949] getting way bigger, right? So, and then [1952] also an interesting phenomenon is the [1954] more people in your team, the less of [1956] each of their attributable time goes [1957] towards solving problems and the more of [1959] their time goes towards communicating [1960] between them. And communication time [1963] does not do anything for the client. The [1964] client doesn't see it. The client [1965] doesn't care about it. It's not value. [1967] So, if you were at a business that was a [1969] soloreneur company like yours, I believe [1971] it's called Probotify. Yeah. 100% of all [1973] the time Amir spends is time that he is [1975] spending delivering value to clients and [1977] so he gets to charge and be compensated [1979] on committent with that. But if it's air [1980] and somebody else, well, now 90% of [1982] air's time is towards the clients. But [1984] 10% is just chatting with his assistant [1986] or chatting with the engineer. Clients [1988] don't see any of that stuff, right? It's [1989] coordination and coordination costs [1991] scale very very drastically, which is [1992] unfortunate. First, that's cool as hell, [1994] man. Um, I mean, I still have like a ton [1996] of questions that I want to ask you, but [1998] I do want to be mindful of time. So, [1999] maybe I'll just ask you, let's [2000] hypothetically say Emir has to start at [2002] zero tomorrow and you lose all the [2004] connections that you have. You're not in [2005] any of these communities or whatever. [2006] Yeah. How would you approach process of [2010] starting an AI and automation company [2011] from scratch? And I have no money. No [2014] money. No money. Well, I mean you, you [2016] know, like a Can I buy Maker School? [2017] Like a few thousand. [2020] Man's asking the right questions. Of [2022] course you can buy Maker School. Okay. [2026] Well, seriously, I would probably watch [2028] Nick's like make money with make [2030] playlist. Like that would be a really [2032] good place to start. That's where I [2033] started. Like I'm being 100% serious. [2035] cuz I'm not just like saying it cuz [2036] Nick's here. And then if you think [2039] you're serious, you know, go to Upwork, [2041] apply to some jobs. I'm pretty sure you [2044] you showed to us set up a profile on [2045] YouTube, too, for free. Like, I'm pretty [2046] sure you show a lot of that anyway. So, [2048] like I'm pretty sure everything's out [2049] there if you follow some of Nick's [2051] videos. I would start there and just [2053] like, yeah, it's about showing up every [2055] day and just like doing the crappy part. [2057] It's like a mountain. You got to just [2058] like go through it. And that's how I [2060] would start is just like showing up and [2062] applying to those jobs and making the [2064] Loom videos as much as it's, you know, [2066] not comfortable to sit in front of a [2067] camera and talk and like all that stuff. [2068] Like you just got to be uncomfortable. [2071] Yeah. Like I you know, I feel like a lot [2074] of people are going to look at your [2075] eventual crazy success. You know, if [2077] you're if you made $12,500 in the last [2080] month with your a automation agency, you [2082] might be making $50,000 a month in X [2084] months or something like that, right? [2085] Obviously, you're a rising star and I [2086] can tell just by the way that you speak, [2088] that you're quite competent and good at [2089] what you do. But I think it'll be easy [2091] for a lot of people to look back at that [2092] and be like, "Oh, Amir figured it all [2094] out ahead of time." You know, this was [2095] his strategy. He started with this, then [2097] he did this, then he did this. But in [2098] reality, what you did is you just dove [2100] into learning and then you put yourself [2102] out there and then you acquired some [2103] sort of feedback from a few of these [2105] initial clients and small little [2106] projects and then were like, "Huh, [2108] people like CRM. Maybe I should do more [2110] CRM." Then you said, "Okay, let me join [2112] a few communities, see how I can scale [2113] stuff." Hm. people are preferentially [2115] coming to me from the community. Maybe I [2116] should spend more time in the [2117] communities. The point I'm getting at is [2119] this is feedback over planning. If [2121] you're a beginner and you're on the [2123] fences and you're like, "Oh my god, how [2124] do all these people have all this stuff [2125] figured out?" The reality is none of [2128] them had anything figured out. They just [2129] got started and then be through feedback [2131] they ended up determining the right [2133] direction to continue moving in. So I [2135] feel like that applies pretty well to [2136] you too if I'm not mistaken. Yeah. But [2140] to be clear, from like June of last year [2143] to October where I would argue I knew [2146] enough and I did spend like some time in [2147] Europe at that time for vacation and [2149] stuff, but I would argue like I had the [2152] knowledge I needed to like go, you know, [2154] like go do what I need to do, but like I [2156] just didn't act. And you know how much [2157] money I made in that time? zero negative [2160] dollars because I was paying for like [2161] framer and smart lead and all this [2164] random stuff like you know like it's [2165] just like I lost [2167] money make you know like all this stuff. [2169] So like I think there's something to be [2172] said is like you're never going to know [2174] everything. I think people need to [2176] understand that it's like you just have [2178] to decide one day it's like this is [2180] enough and I'm going to figure on the [2182] fly. Like you have AI, you have Google, [2185] like everything's out there at your [2187] fingertips now. Like if you can't figure [2189] out how to do some kind of API [2190] connection, like you'll figure it out, [2191] you know, like especially if someone [2193] pays you money, like you have no choice [2194] but to figure it out. [2198] I love that, man. Yeah, that's [2200] motivating as hell, I think. Especially [2201] to the people that are like still afraid [2203] to kind of put that foot down and take [2205] that first step. So, I appreciate it. [2206] One more thing on on that point. I see a [2208] lot in our community, people will come [2212] up with problems before they're [2213] problems. And I just really wanted to [2215] touch on that where they'll be like, [2218] "Okay, what if I apply to an Upwork job [2221] and I start talking to them and they'll [2222] like change the scope dramatically and [2224] like they want like 10 more things like [2226] can I like change the price? Is that [2227] okay?" Like or like am I just stuck at [2229] like that low price I gave them cuz I [2230] didn't know all this other stuff. And [2233] it's like that that is not a problem you [2234] need to solve right now. Like the first [2236] step is like you need to apply to that [2237] job and then like maybe they'll answer [2240] your proposal and then maybe you'll hop [2241] on a call and then like you'll figure it [2243] out in the moment like but before then [2245] like this is not a problem you should be [2247] stressing yourself with 100%. Another [2249] really interesting and related thing to [2251] that is people qualifying all their [2254] leads ahead of time. So, I'm talking [2256] specifically about cold email, but I [2257] can't tell you the number of people that [2258] come to me and say something like, "Hey, [2260] my ICP is exactly this." And so, I'm [2262] looking for people with revenues of [2263] 500,000 to a million dollars a month, [2264] and you know, those are exactly the [2266] customers I want. And then in reality, [2268] you can't actually do all of that [2269] targeting ahead of time. So, because you [2270] can't, the implementation's very [2272] difficult, and they don't end up getting [2273] started. In reality, what you can do is [2274] you could just talk to a ton of people, [2276] whether it's on Upwork or cold email or [2277] whatever, and then when people say yes [2279] to you, you could figure all that [ __ ] [2281] out later. You could find out how much [2282] money they make later. you could qualify [2284] at the end, not at the beginning. The [2286] problem is not a problem until it [2287] becomes a problem when the person is on [2288] the phone saying, "No, I don't make [2289] 500,000." You know, you kind of get my [2291] point. Yeah. So, this this is a more I [2293] think central it's like a more [2294] fundamental paradigm shift. And I wish [2296] there was this maybe there is a simple [2298] and easy way to just state this in a way [2299] that beginners understand. I've been [2301] trying for the better part of a year and [2302] I've been able to, but Amir, you're good [2304] with words, man. Maybe you got it. Yeah, [2308] I Yeah, it's it's like I think there's [2311] also value in having those reps, right? [2314] So, like this whole unqualified [2315] qualified thing, it should even be a [2317] question in the beginning. Like your [2319] whole role is to just like get in front [2321] of customers, figure out what their [2323] problems are and see if you can solve [2324] them. And like they'll pay you something [2326] for it. Like it doesn't matter how much [2328] it is, but like they pay you something [2329] at the beginning. Then the qualification [2331] stuff when you start getting like too [2332] much work and all this stuff that's when [2334] like it starts to matter. I think that's [2336] more important for beginners in my [2337] opinion because they haven't been [2339] exposed to business owners and working [2341] with different types of people, right? [2343] So yeah, cross that bridge when you get [2345] to it in a nutshell. Amir, awesome [2347] having you on, man. Anything else you'd [2349] like to say before we wrap up? No, this [2351] it was awesome to have the opportunity [2353] to speak and talk about my journey and [2355] I'm looking forward to sending you a DM [2357] when I'm at 50k a month. I can't wait to [2360] see it, man. Thank you very much for [2362] coming by. Looking forward to that, man. [2364] Peace.

Video: https://www.youtube.com/watch?v=xa3DIsTMMM0
Title: Fix 90% of Your AI Automation Agency Problems in 30 Days
[0] I'm going to show you how to fix 90% of [1] your AI agency problems in just 30 days. [3] And it's not magic. I know that this [5] industry is booming right now and there [6] are a lot of beginners that don't fully [8] understand how agencies work in general [9] that are flooding in. What I want to do [11] in this video is just show you guys the [12] simple levers that you could pull that [14] not a lot of people talk about because [15] they're not very sexy and they're not [16] very glamorous that if consistently [18] pulled and pulled the right way are [20] going to drive the majority of your [21] revenue. So, let's talk about them. The [22] first is lead generation. Lead [24] generation is pretty straightforward, [25] right? It is you driving traffic at the [27] very top end of your business. Now, the [30] thing about Legion that most people [31] don't understand is that lead genen [33] solves the vast majority of the [34] downstream issues that people think that [36] you need to tackle individually. Let me [37] give you an example. In the agency [39] space, you have a variety of possible [41] issues. The first issue is obviously [42] lead genen. So, you don't have leads to [44] begin with. So, I think it's pretty safe [45] to say that if your problem is lead [47] genen, lead genen solves lead genen. The [49] second big issue that a lot of people [50] have is project management. What I mean [52] by this is they end up with so many [54] projects that they don't really have the [55] ability to fulfill new ones that come in [57] through the queue. And naturally, I mean [58] it kind of makes logical sense. If you [60] have too many projects, obviously you [62] think, well, I should probably turn the [63] tap off and not generate leads anymore. [65] But believe it or not, Legion actually [66] solves project management wos too. [68] Because if you have a choice between [70] four leads, one is $50, another is $150, [73] another is $500, and the last one is [76] $1,500. Which one are you going to pick? [77] You're obviously going to pick the [78] $1,500 one. [80] Now, let's say hypothetically you ramped [81] up lead genen a little bit more and you [83] actually had to pick between another [84] four. You had a an extra $1,000 client [86] here, another $1,500 here, another [88] $2,500 here, and then a $10,000 client [91] over here. For an equivalent unit of [93] time, which one of these would you [95] rather pick? Obviously, the $10,000 [97] client over here, right? Well, most [100] people don't have access to that choice. [102] They don't have abundance in their [103] business because what they do is when [105] they run into project management issues [107] at the three or four client mark, they [109] start feeling overwhelmed. They think, [110] "Hey, I got to turn lead genen off." Not [112] fully realizing that not having enough [115] leads is a problem that is contributing [116] to you hitting a low revenue ceiling in [118] the first place. If you guys generate [120] more leads, even if you guys are [121] currently feeling overwhelmed, if you [122] guys keep the tap running through lead [124] generation activities like Upwork or [126] cold email or community posting or cold [128] DMs or or client reactivation, well, [131] then you're going to be more likely to [132] be in a situation like this where you [134] have the pick of the litter, let's say, [135] and you can actually ignore the very [137] lowpaying projects that don't actually [138] meaningfully contribute to your revenue [140] and instead preferentially focus on the [141] high revenue projects that do. So, [143] believe it or not, um, Lead Gen actually [144] solves project management woes, too. [146] Okay, you get to pick the highest [148] quality, highest paying clients that [150] require the least demand from you as [152] well. So, lead genen solves legen. Leen [154] solves project management. Leen solves [156] pricing. Hopefully, that's self-evident [158] in the way that we did things there. [160] Legen solves system complexity. So, a [162] big issue in AI and automation is the [164] systems that we build tend to be very [166] complex. And so, we typically start off [167] with custom scopes because it's the [169] easiest way to get a project. And when [170] you do custom scopes, you have to [172] obviously scope the thing. You have to [174] build according to client spec. you have [175] to do a lot of client revisions and [177] stuff like that. This is all very [178] natural part of any agency. But the real [181] leverage in this business model is [182] unlocked when you move away from custom [184] projects and you move towards [185] productized solutions. Now the issue is [187] most people think, well, how the hell do [188] I sell a productized solution? It's such [190] a specific sort of packaged offer, [192] right? Like it's not, hey, I'm a client [194] and I'm suffering from this exact issue. [195] Can you build me something that solves [196] that? Instead, it's almost like I have a [198] prepackaged solution that deals with X, [201] Y, and Z issues. And obviously when you [203] have a product that you need to find [204] customers to conform to, it's harder to [206] sell versus a set of customer needs that [209] you can conform to as an agency. Well, [212] believe it or not, lead genen solves [213] system complexity as well because when [215] you have more access to leads, what you [216] can do is you can just pick the simplest [218] system that pays you the most money per [220] unit time that your agency provides. So, [222] not only does it solve your project [224] management wos because you get to pick [225] the simple projects and the pricing woes [227] because you get to pick the higher [228] paying ones and the lead genen woes [230] because obviously you have leads, it [232] also solves the system complexity woes [234] because you can start selling and [235] scaling systems that are a little bit [237] simpler and more productized. Okay, so I [239] guess what I'm trying to say is lead [240] generation is like the cure all in [242] business. If you just have a ton of [243] leads, everything else just sort of [245] solves itself to be real. So naturally, [247] your priority when running an agency is [249] just always having leads. And that's why [251] I and many other people recommend [252] selling things as quickly as humanly [253] possible before you've even established [255] the deliverable or the fulfillment. You [256] don't actually need to be that good at [257] AI automation to start drowning in [259] leads. And it's much better to be in the [261] situation where you're drowning in leads [263] but you're not very good at AI [264] automation than the inverse. You're [265] really good at AI automation and then [266] you're not drowning in leads. Okay, you [268] don't have any. It's a drought. So, how [270] do you do this? Well, you choose one or [272] two high impact outreach methods and [273] then you just execute consistently on [274] these outreach methods with minimums for [276] 10 plus days. This is not a magic [279] number. Feel free to do this for longer [280] or maybe a little bit shorter. I guess [282] the point that I'm trying to make though [283] is don't turn this on and off very [285] frequently. If you are going to start [287] some sort of lead generation mechanism, [289] let's say cold email or or outbound [291] Upwork applications or whatever. You [293] just need to do so consistently for a [294] certain amount of time before really [296] being able to measure whether or not it [297] works. And the reason why is because the [299] market has a lot of built-in lag. When [302] you submit a cold email or you send an [304] Upwork application or you cold DM [307] somebody on LinkedIn or you blast uh 10 [310] Loom videos out to a bunch of people [311] that you think might be interested in [312] your product or service, it takes them [314] time to open it. And because it takes [316] them time to open it and receive it, it [318] also takes you time to get feedback on [320] that. Takes you time to get the views [321] and the opens and the yeses and the nos. [324] So if you don't execute consistently for [326] a certain amount of time, if you don't [327] give the market the time to catch up to [329] that lag, it's very difficult for you to [330] actually make data driven decisions. Now [332] we're in a very dataentric industry. So [334] this is one of the main points of [335] failure that I see beginners that get [336] into it do. They actually try and [337] iterate a little too quickly. But yeah, [339] if you acknowledge that the market has [340] lag, then you can sort of get the best [342] of both worlds. You can be data driven [344] while also like actually being [345] statistically significant. So typically [347] you want to target somewhere between 20 [349] to 50 quality leads per week is your [350] minimum viable standard. And you want to [352] do this across those 1 to two high [353] impact outreach methods. What does that [355] mean? Well, you have five working days [356] between Monday to Friday. You do 10 [358] Upwork applications per day. That is 50 [360] quality leads. You have seven working [362] days. You choose to go every single day. [364] Well, then that's just seven leads a [366] day. Maybe you're sending cold emails or [368] cold DMs or something of that nature. [369] Now, when lead genen works, you get to [371] choose better clients and command higher [372] prices. So, initially when you're at the [374] very beginning of your lead genen [375] journey, you're probably not going to [376] have too many leads to work with, right? [378] You're also not going to have too many [379] people that might be interested in your [380] services. though you're probably going [381] to have to choose the crappier clients [383] with the lower prices. But as you scale [385] up and as you get more leads available [386] to you, you will necessarily be able to [388] choose the ones that reward you the [389] best. And that's really why lead genen [391] is that paliotative cure all that I [392] recommend you focus on if you want to [394] solve 90% of your agency problems in 30 [396] days. Last but not least, consistency [398] matters more than perfection. So just [399] stick with your chosen method. Run it [401] and gun it for at least, you know, 10 12 [403] days or so before trying to make [405] material changes to it. And if you are [407] consistent about this and you [408] internalize what I'm saying right now, [409] it is simply a matter of time before you [411] are successful. Just make sure that [413] you're not hopping between shiny object [414] and shiny object because there are a lot [416] of shiny objects and it's very easy to [418] get your attention pulled away which [420] ultimately reduces the total volume of [421] lead genen that you were able to [422] produce. So if I could give you guys a [425] simple SOP, when you start lead genen, [426] what you do is you create a consistent [428] daily process. And to make a long story [430] short, what this daily process is is you [431] will wake up and you will send x cold [434] emails. [435] You might then send Y Upwork apps. You [439] might then write Z community posts. [442] There are variety of other lead genen [443] mechanisms, but we'll keep this simple [445] for now. Then you just do that every day [447] for 10 days. After you're done with your [449] initial test set, this is the same thing [450] that a scientist does. They formulate a [452] hypothesis on what's going to work. They [454] run a test for a predefined period of [455] time and then they perform using the [456] scientific method some sort of analysis [458] and iteration. Once you're done with [460] that, then you can optimize your [460] messaging and your targeting. Once you [462] find the successful approach, then you [463] just scale it. And then once you're done [465] with all that, you can get a ton of [466] quality leads every single week. Okay? [469] Now, keep in mind that the beginning of [471] any journey is going to be slow, but [472] eventually you hit an inflection point [473] where you figure it out and you can [475] scale relatively consistently. The [476] second big thing that people are [478] currently sleeping on and the thing that [479] I would recommend you solve if you want [480] to solve 90% of your agency problems in [483] 30 days is onboarding. Okay, we talked [485] about the initial lead generation, which [487] is sort of the top of the funnel. That [488] is the first thing that customers will [490] see of you. And because it is the first [491] part of the funnel, typically just [493] widening that first part significantly [495] increases the throughput of that funnel. [497] But the second big thing you need to do [499] is you need to onboard clients properly. [500] What does that mean? That means you need [502] some sort of structured onboarding [503] process. And a structured onboarding [505] process doesn't have to be [506] extraordinarily complex or anything like [508] that. In general, a structured [509] onboarding process just means that [511] immediately after the client pays you [512] something, you just need to give them [514] something in return. You know how like [515] when you're selling a product like some [517] widget or something on Amazon or maybe [518] on your e-commerce store, when a [520] customer pays something, they tend to [521] receive that product reasonably quickly [523] or at least they receive some email [524] order confirmation or whatever that they [526] paid the money. One of the lowest [527] hanging fruit in agencies, especially [529] for our niche, just because we have such [531] low barrier to entry and it's so [532] exciting and so many new people are [533] flooding in is a customer will pay you [536] and then you just don't see it for a [537] little while. Maybe like 3 or 4 hours or [539] something like that. Or maybe they pay [540] you before you go to bed and then when [541] you wake up in the morning, you're like, [542] "Oh my goodness, I just got a bunch of [544] money." Well, the whole goal in [546] structured onboarding is just to [547] minimize the gap between something [548] leaving the customer's hands like money [550] and then you giving something back to [552] the customer. You know how services take [554] a long time to fulfill? They're not [555] really like the widgets that you sell on [557] Amazon or whatever. Because of that, you [558] need to find a stop gap that still [560] allows you to deliver value immediately [562] in response to a customer giving you [563] money. This whole concept is essentially [565] called minimizing buyer's remorse. And [567] it's one of the most important things [568] that you can do in order to set off a [569] successful project and also increase the [571] likelihood that they're going to want to [572] work with you again, which is important. [573] Okay, so I know that was a big verbal [575] yap rig battle there, but what does that [578] actually mean? It means create templates [579] for welcome emails, create templates for [581] questionnaires. It means create a simple [583] template for, you know, immediately [584] after you sign a new deal, what is the [585] immediate email that they receive? Okay, [587] immediately after somebody pays you, try [590] and host a kickoff call within maybe 24 [592] to 48 hours of that signature or payment [594] transfer. And this doesn't have to be a [595] very intense kickoff call. I have a ton [597] of SOPs for this, but in short, just [599] make sure that you inform them as to [601] what the project is going to look like. [602] You revisit your project expectations. [604] You talk a little bit about the [605] timeline. And then if there are any [607] questions or things that need to be set [608] up before you can actually begin the [610] project, just deal with that. Then [611] two-factor authentication is a pretty [612] common need in AI and automation agency [614] space obviously because we tend to deal [616] with platforms that the customer is [617] using. You know, we also tend to set up [619] platforms on behalf of customers and so [621] on and so forth. So, that's more or less [622] all a kickoff call is. Just make sure [624] that after the customer pays you, you [626] have some sort of facetime with them so [627] that you leave them feeling good, not [629] like, "Oh my god, I just spent a bunch [630] of money and got nothing." Last but not [632] least, this is an opportunity for you to [633] document your communication protocols [634] and then set some response time [636] expectations. Another really low hanging [637] fruit, not just an AI automation [639] agencies, but any agencies is typically [641] clients expect to be communicated with a [643] lot more than they actually are. So, [645] here is another little SOP that you guys [647] can follow to fix most of those agency [649] problems. The second that somebody pays, [650] send a welcome email. Say, "Hey, thanks [652] so much for paying. Thanks so much for [654] getting on board. I'm really excited to [655] have you." Here's how these things [656] typically go. First, we're going to book [658] a kickoff call. You can do so using this [660] calendar here. After that, I'm going to [662] ask you these questions. After that, [664] we're going to sign up to these [665] platforms. Can't wait and super excited [667] to work with you. Doesn't need to be [669] anything more complex than that. But if [670] you've ever wondered why some of the [672] people or vendors that you might have [673] worked with in the past come across as [674] professional and other ones come across [676] as unprofessional, it's cuz the [677] professional ones have all this stuff [679] down pat. So if you want to just jumpst [681] start your agency and get so much [683] further ahead than 99% of other ones [684] just right off the bat, just get that [686] professionalism dialed in. Get that [688] tireser remorse minimization and stuff [689] like that sorted. So you might send a [691] welcome email. Then you might deliver [692] some sort of onboarding questionnaire. [694] You might then review the client [695] responses. Maybe it's like a form or [697] something. On your kickoff call, you'll [698] cover that with them. Then it'll create [700] some sort of project roadmap, set up [701] some comm's channels like Slack or [703] email. And then when you actually begin [704] your project implementation, you will do [706] so much better and easier and with the [709] client knowing what to expect than [710] otherwise. Okay, so just to recap, so [713] far we've covered Legion. Next up is [715] onboarding. And now I'm going to talk [717] about the third most important thing to [718] do, which is to optimize your [720] communications. Now to be blunt, [722] onboarding is a form of communication, [723] but I'm talking not about the specific [725] project kickoff time. Now, I'm talking [727] about what you actually do with the [729] client after you've secured your AI [730] automation project. Now, essentially my [732] recommendation is the biggest issue that [734] I see here is clients just feel like [736] they're out of the loop. AI automation [737] agency projects tend to be pretty [739] complicated scope-wise, especially [740] custom projects that most people will [742] sell initially. They tend to have a lot [743] of moving parts. And so, because of [745] that, clients expect to be communicated [747] with reasonably regularly. Now, a lot of [749] people are afraid to communicate with [750] clients with the regularity that I [751] recommend because they think that every [753] time they communicate with a client is [754] like an opportunity for the client to [756] change the scope on them or say, "I [757] don't like this or I don't like that." [759] But the reality is the second that I [761] started changing my communication style [762] from what it was previously, which was [764] maybe some sort of weekly comm style to [766] legitimately either a daily comm style [768] or maybe like once every two days or so, [770] essentially just significantly [770] increasing the frequency. My earnings [772] went through the roof. my ability to [774] retain clients and resell them and [775] upsell them on new and related projects [777] also went through the route. And this [779] was one of the ways that I scaled my own [780] automation agency to 72K a month. So, [783] what does that mean? Well, I recommend [784] establishing a 1 to 2 hour daily [786] communication window with a 15 or 20 [788] minute response guarantee. This may seem [790] really scary to you guys, but my [791] recommendation for you is pick a 2-hour [794] window that you're just going to be [795] working anyway. say, "You can reach me [797] within 15 to 20 minutes Monday to Friday [800] on Slack if you send me a message [802] between 12:00 p.m. and 2:00 p.m. PT." [804] Okay? Make sure to establish the time [806] zone so people don't send you messages [807] at odd hours. And then what you do is [809] this is the time window you give to all [811] of your clients, not just one of them. [812] Okay? You don't need a 2-hour time [814] window for client A, a 2-hour time [815] window for client B, and a 2-hour window [817] for client C. What you do is you just [819] batch all of them, and that is your time [821] home at the computer or in your office [823] or something. The reality is most [825] clients will not actually take you up on [826] this offer. Most clients are busy and [828] they're okay having you do most of the [830] work without necessarily checking in or [831] talking every single day. That's okay. [833] But this provides you the appearance of [835] being omnipresent without actually being [837] omnipresent. And when they eventually do [839] inevitably send you a message, you can [840] deal with it. Then you don't have to [842] worry about responding to them at 9:30 [844] p.m. at night or something like that [845] like you hear most client horror stories [847] revolve around, right? Unreasonable [848] expectations surrounding hours and stuff [850] like that. Because what you've done is [851] you've actually established those [852] expectations ahead of time. Okay. And [854] then regardless of progress, a simple [855] and easy way to get ahead of things is [857] to send proactive updates every 1 to two [859] days. What I mean by this is schedule a [861] Monday, Wednesday, and a Friday update [862] cadence where 8 a.m. or somewhere. The [864] first thing you do when you step into [865] the office is you just send them a [867] simple templated message. Hey Pete, just [869] wanted to fill you in on where we're at. [870] Yesterday we finished X, Y, and Z. Today [872] we're focusing on X, Y, and Z. No um [874] action needed on your end. Just wanted [876] to make sure you were in the loop. Okay. [878] Clients love that absolutely adore [880] when people do stuff like this because [882] it is extraordinarily like time [884] efficient. It lets them know where the [886] project is at without requiring anything [887] in return and it gives them that feeling [889] of professionalism and white glove [890] service gives them the feeling that you [892] are handling what they are paying you to [893] handle. Okay. This also allows you to [895] batch client comms to prevent constant [896] interruptions which are a big issue with [898] clients. If anybody's watching this that [900] has worked with a client, please comment [901] down below about how right this is [903] because this is one of the biggest [904] issues that I think most agencies [905] probably suffer from. But like clients [908] contacting you at all hours of the day [910] leads to you stopping what you are doing [912] and then having to deal with that client [913] demand and then getting back to what [915] you're doing. That's called context [916] switching. If you guys have ever done [918] lots of context switching, you'll know [919] that it's super unproductive and it's [921] one of the reasons why you leave [922] yourself feeling so unfulfilled and [924] that's why so many people's revenue [925] ceilings are so low because they just [927] can't juggle more than like two or three [928] client projects cuz they're constantly [929] omnipresent with the client. If you [931] start getting in the habit of minimizing [932] context switching, you'll be [933] significantly more productive as a [934] result. And then you can also handle [936] client comms on your time, not their [937] time. Aside from that, set clear [939] expectations about response times [940] outside your window. If you have [942] reasonable windows, like a 1 to two hour [943] daily comm window, and then you give [945] people proactive updates, they won't [946] expect you to be omniresent. And if you [948] don't respond to them outside of that [949] window, that'll be okay. And then [951] finally, create templates for common [953] update scenarios to save time. What do I [955] mean by this? I don't mean automation [956] templates. What I mean is just have like [957] two or three email templates that you [959] just vary time and time again where you [961] say something like, "Hey Pete, just [963] checking in. Hey Pete, hope you're doing [964] well. Hey Pete, wanted to fill you in on [966] our progress. Right? Have two or three [967] of these. And then all you do is you [968] just go to your template bank and copy [970] and paste it. A really quick and easy [972] way to do this on a Mac is you just go [974] over to your system settings. Then you [976] go to text replacements. Then what you [978] do is you legitimately just create an [981] update one. You say, [984] "Hey, just checking in on XYZ. Here's [988] where we're at. [991] Update. Thanks, Nick." Okay, what do you [994] do next? Well, anytime you have some [996] text, you just go update one, just like [1000] this. And now, check it out. I have my [1002] whole update right over here. These [1004] sorts of simple daily client management [1006] optimizations don't seem like they make [1008] a very big difference. But the main [1009] value you'll save here is not [1011] necessarily the time you're typing out. [1013] The value and the time that you're going [1014] to save is you not having to think about [1016] stuff like this. and just having a [1017] prepared system every Monday, Wednesday [1019] or Friday. Or who knows, maybe Monday, [1021] Tuesday, Wednesday, Thursday, and [1022] Friday. Or maybe you give client updates [1024] on Saturdays, right? The exact specifics [1026] of the schedule that you're going to [1027] pick totally varies and it's up to you. [1029] There is no real right answer. And I'm [1031] sure that my own recommended cadence [1032] isn't necessarily perfect either, but [1034] it's close enough. And what you'll find [1036] in the agency space is close enough is [1038] usually about as perfect as you can get [1039] anyway. So, here's what the SOP for that [1041] looks like. When you start work with the [1043] client, make sure to set those daily [1044] communication expectations during the [1046] kickoff call. After you inform the [1048] clients of the protocol, then just set [1049] your proactive updates. When the client [1051] responds to you, okay, just batch it for [1052] the next day at that time window that [1054] you've given them that you are going to [1056] respond to them in. And then if you have [1057] any issues, just address them during [1058] that dedicated window. This will help [1060] you document all communications, [1062] ultimately create templates and stuff [1063] like that, which will handle future [1065] clients easier. And in this way, you're [1066] just going to have a giant library of [1067] client comm templates and then uh value [1070] that you'll be able to carry forward to [1072] seem more and more professional. The [1073] fourth major issue is deliveries. Okay, [1075] so a big problem that I see a lot of [1077] beginners do is they focus on the wrong [1079] things. They focus on things that they [1080] consider valuable, usually the technical [1082] implementation details and then they [1084] ignore or they spend very little time on [1085] the things that clients consider [1087] valuable, which tend to be just the [1089] simple, immediately visual things that [1091] you're generating with your AI [1092] automation. I mean stuff like the Google [1094] doc you're making. I mean stuff like the [1095] Slack notification you're sending. I [1097] mean stuff like the the delivery video [1099] that you record where you walk through [1100] your automation from start to finish. [1102] Believe it or not, if you're going to [1103] spend time on anything in your agency, [1105] spend time on this stuff cuz this is the [1106] stuff that makes the big difference. [1107] Clients don't see your AI automation. [1109] They don't see the make.com or n [1111] scenarios or workflows respectively. [1113] What they see is the deliverable, the [1115] output, and that's what you should be [1116] optimizing for. Okay? So don't focus on [1118] the backend complexity when you deliver. [1120] Focus on spending your time on that like [1123] 8020 of the stuff that the clients [1124] actually see when you do your initial [1126] demo. And most people will have some [1128] sort of demo where they do the delivery. [1129] It'll be either a video delivery or [1131] it'll be like a call where the client [1132] want to be walked through. Make sure [1134] that that demo is as perfect as [1136] possible. Because if you can nail that [1137] demo, even if the rest of your project [1139] or your product is not as nice as it [1140] could be, that's the thing that they're [1142] going to be judging you off of. [1143] Likewise, if you spend a million [1144] bajillion hours trying to make the most [1146] amazing system and then when it comes [1147] time to demo it for the client, you [1149] screw it up. the client will not give a [1150] crap about the million bajillion hours [1152] that you spend on the system. They'll [1153] care about the crappy demo that you [1154] delivered. So that's what you want to be [1156] perfect. If you want to make your [1158] impression count, then optimize the [1160] areas that you interface with the client [1161] and which the client interfaces with the [1163] system. Also, invest heavily in the [1165] visual design of things. So a good [1166] example of that is this is a video I [1168] recorded a while ago that essentially [1170] shows how to take a $2,000 automation [1172] that's built in make.com, then turn it [1174] into a 10K SAS. So what I mean by this [1177] is there are a bunch of no code or vibe [1178] coding tools. in this case, Lovable, but [1180] there's also Bolt. I think Figma now has [1182] a tool and and so on and so forth where [1183] you can essentially take this backend [1185] automation and you can wrap it in a [1186] really beautiful, sexy, sleek interface [1188] to improve the perceived value of the [1190] system. Look for opportunities to do [1192] that stuff. Hell, if you do a type form [1194] in your system, make sure to spend an [1196] additional 30 minutes after you're done [1198] building the system, making that type [1199] form look as sexy as possible. Add the [1201] client logo to things. Read an [1203] introductory design book. I can [1204] recommend Steve Schroers and Adam [1206] Watthanss. I believe their names are at [1208] the guys that currently run Tailwind [1209] CSS. And then create professional [1211] templates for anything that's client [1212] facing. Make sure the spacing is nice. [1214] Make sure the font's nice. If you have a [1215] Calendarly or a cal.com link or [1217] something like that where the clients [1218] have to book on, make sure your profile [1220] picture looks good. This is the stuff [1221] that the client will interact with. And [1222] to be frank, this is the stuff they're [1224] going to judge you on. My recommendation [1225] is you actually allocate more of your [1227] time to the front end of your app than [1229] you do the back end. Okay? So actually [1231] more of the time that you spend on your [1233] AI automation agency should be on the [1235] way things look than the way things [1236] actually work. So look and feel aka [1238] aesthetics or form is actually more [1241] important than function a lot of the [1242] time. I know it's counterintuitive and I [1244] know it's against every guiding ethos of [1247] development in general, but this is just [1248] the way the market works and if you [1249] really want to crush it, this is what [1250] you have to do. Okay, here's a quick and [1253] easy SOP. Step one, identify all client [1255] touch points. Step two, prioritize the [1257] visual elements of those touch points. [1260] Step three, create some sort of [1261] intuitive user interface that they can [1263] navigate. Prepare a perfect demo. And [1265] you tend to get pretty good at demos [1266] when you do them day in and day out. [1267] Just look at me. And then finally, [1269] document with some sort of visual guides [1270] before collecting feedback on experience [1272] so that the next time you do it for the [1274] next client or even the same client for [1275] a future project, you can do it better [1276] and better and better. The last and most [1280] important point of all is the idea of [1282] retention. This is a major problem point [1284] that I see a lot of AI agencies suffer [1285] from. And essentially what retention [1287] refers to is after you're done done [1291] working with a client, your ability to [1294] get them on a follow-up project is your [1297] ability to retain them. And retention is [1301] always better than new acquisition. [1303] Okay? If there's one major takeaway [1305] you're going to get from this video, [1306] focus on this. All of the rest of the [1308] steps above, the onboarding, the [1311] communication, the delivery details, and [1313] so on and so forth, they all focus on [1315] your ability to retain clients as [1317] opposed to just always have to acquire [1318] new ones. Why? Well, retaining clients [1321] allows you to take advantage of [1322] leverage. You get to, let's say, get [1325] somebody on a retainer so that instead [1326] of just working with them on a one-off [1327] project on month one, you get $3,000 a [1330] month every month for 6 months or [1331] something like that. I mean, that's [1332] that's inherent leverage. Working with [1334] the same client is easier. It's better. [1336] It's more enjoyable. you guys know your [1337] work styles, you can typically demand [1339] more money for it as a result. It also [1341] allows you to get very deeply involved [1342] with client business, which is where you [1344] can drive the most value. I don't drive [1346] the most value for new clients. I drive [1348] the most value for clients whose [1349] businesses I deeply understand, whose [1351] niches I've gotten to get and and kind [1352] of gro and get deeper with over the [1354] course of a year or two. And this also [1356] allows you to get into things like [1357] revenue shares, deeper financial [1359] relationships with clients, and even in [1361] some situations equity. Like I've had a [1362] few situations where clients have [1363] actually given me portions of their [1364] business to help them manage it. That's [1366] not possible on the first offer. Okay. [1369] So, what does that mean? Well, the [1370] minute that you deliver a project and [1372] you make sure that your delivery is sexy [1373] and perfect and so on and so forth like [1375] we just talked about, that's when you [1376] pitch another project. The reason why is [1378] cuz this principle called reciprocity. [1381] When a client is overwhelmed with value [1383] and you just shown them and solved all [1384] the problems that they suffer from, [1386] they're going to feel like there's some [1387] sort of reciprocity or reciprocal [1389] relationship there. And what you want to [1390] do is you want to take advantage of that [1392] time window. What you don't want to do [1393] is you don't want to deliver an awesome [1394] project and say, "Okay, great. Thank you [1396] very much and talk to you never and then [1397] in a year follow up with them and say, [1399] "Hey, I have an idea for a new project." [1401] What you want to do is as you do the [1402] delivery, you want to say, "Hey, here's [1404] a delivery. Here's the amazing project [1405] that I just did. Here's a bunch of extra [1407] free stuff that you didn't even ask me [1408] for. By the way, while I was doing this [1410] project, I noticed that you were [1411] currently doing X, Y, and Z. I know this [1413] is out of left field, but I think I can [1414] actually make you another $5,000 or [1416] $10,000 a month with a couple of simple [1418] tweaks. If you're interested in that [1419] after you're done being impressed at the [1421] value I just delivered, let me know. We [1423] could set up a call." That's the vibe [1424] that allows you to get those repeat and [1426] recurring clients and ultimately scale [1428] your agency with some sort of monthly [1429] recurring revenue. Okay? And that [1430] involves identifying related challenges [1432] that clients won't recognize themselves. [1433] You're taking the outside view, but [1435] usually when you do some sort of initial [1436] one-off project, you get at least some [1438] visibility in client systems which [1439] allows you to do this. Additionally, [1441] there are just some systems that most [1442] clients want. Stuff like outbound lead [1444] generation systems, for instance, stuff [1446] like marketing systems, stuff like [1447] autoresponders and CRM. If you tend to [1449] work with one niche, you'll find that [1451] most businesses like specific types of [1453] projects and those projects just recur. [1455] So, what you can do is even if you don't [1457] know a specific thing that you can give [1458] that client, something that's like hyper [1460] related to the project that you just [1461] delivered, you could have a library of [1463] three or four common follow-ups and then [1465] you could just offer them to all of the [1466] clients that you do initial one-off [1467] projects with in order to improve the [1469] probability of retention. Likewise, when [1471] you're presenting these opportunities, [1472] focus on business impact. If you guys [1473] remember my example from a minute ago, [1475] feel free to rewind the video if you [1476] want. I talked about I could make you [1477] another $5 to $10,000. I didn't say, [1479] "Hey, I can make your processes 13% more [1482] efficient." Customers don't really care [1483] about efficiency. What customers care [1485] about is top-end revenue, bottom line [1487] margins, or just founder chaos. [1489] Essentially, make their lives a little [1490] bit easier. Finally, make taking the [1493] next step as simple and as low friction [1495] as possible. Don't say, "Hey, what do [1496] you think about X, Y, and Z?" Instead, [1498] say, "Hey, here's the opportunity. [1500] Here's all the money I think I might be [1501] able to make you and or save you. Here's [1502] a calendar link. Feel free to book [1504] anytime in the next 48 hours. I can walk [1506] you through what that looks like. Make [1507] it as simple and as easy for them to [1509] just naturally lead from project A to [1511] project B, and you'll build yourselves a [1512] recurring revenue machine that operates [1514] not while you sleep, but at very high [1516] multiples per unit time. If you want to [1519] talk about an SOP for this step, what [1521] you do is you complete your current [1523] project. After you're done, you identify [1524] a related challenge. You prepare a [1526] simple solution proposal. Then, when you [1528] deliver the current project, you do your [1531] new pitch at the same time. If the [1533] client's interested, then you schedule a [1534] discussion using some sort of calendar [1536] link. And then ultimately, you close [1537] that follow-up project, too. And when [1539] you do the follow-up project, assuming [1540] that you're smart about it, you can [1541] pitch a lot higher money because you can [1544] tie it directly to return on investment. [1546] If they say no, then you can just follow [1547] up with them in 2 3 4 5 6 months. Then [1550] re-engage strategic time. Usually [1552] sometime, you know, you delivered some [1554] more value. So maybe you do some sort of [1555] quarterly check-in. You say, "Hey, [1557] client X, had a blast working with you [1559] last quarter. You know, I thought that [1560] maybe I could give you a little bit more [1562] value." So, here's a bunch of free [1563] stuff. And by the way, I think I can [1565] save you55 or $10,000 a month. If you're [1567] interested, here's a quick call link. [1569] Let me know. Here's some brief tople [1571] details about what that looks like. [1572] Okay, if you are bearing with me and you [1574] made it until this point in the video, [1576] thank you very much. I'm currently [1577] holding my microphone in a bunch of [1579] toilet rolls and I'm in a pretty [1580] crappily lit hotel room. So, appreciate [1582] you bearing with the lower production [1584] quality than usual. If you guys like [1585] this sort of thing, definitely check out [1587] Maker School. It's my daily [1588] accountability roadmap where I guarantee [1590] you your first AI and automation agency [1592] customer in 90 days or your money back. [1594] We've had over 2,500 people concurrently [1597] in the program as we speak. And every [1599] 100 members I increase the price just to [1601] represent the increased value in terms [1602] of recordings, terms of events, terms of [1605] Q&A and in terms of one-on-one facetime [1607] with me. So, if you guys want more of [1609] that, definitely check out Maker School. [1610] If you guys have an established a agency [1611] and you guys want to take that to the [1612] next level using tips like this and [1614] more, check out Make Money with Make, my [1616] higher level program which gets you to [1617] $25,000 a month and beyond. And I'm [1619] almost done pitching myself. You guys [1620] like these YouTube videos, then please [1622] like, comment, subscribe, do all that [1623] fun stuff to get me to the top of the [1624] algo. And I'll catch you on the next [1626] one. Thanks so much, guys. Bye.

Video: https://www.youtube.com/watch?v=HlWU0rNLuGg
Title: 30-Minute AI Automations Anyone Can Set Up & Sell Right Now
[0] Here are some 30inut AI automations that [2] anybody can set up and sell right now. I [4] did this in a mixture of naden and [5] make.com. And the first system is a [7] Google map scraper. To make a long story [9] short, when I click test this workflow, [11] what this is going to do is it's going [12] to grab this search term right over [14] here. In my case, Calgary plus dentist. [17] It's then going to feed that into a [19] Google Maps scraper. This Google Maps [21] scraper is going to return us a giant [23] list of all of the websites that rank [25] for that term, Calgary dentist. We are [27] then going to do some data processing, a [29] little bit of code to extract the URLs, [31] some filtering. We're going to remove [32] the duplicates, and then we're going to [34] end up looping over the items. What's [36] happening right now is it's scraping [37] specific URLs, extracting the email [40] addresses of those URLs before finally [42] looping back and adding them to the [44] sheet. If I go over here to emails, [45] you'll see that we've now scraped a [47] variety of emails. And this was a very [50] small example of the potential of a [52] system like this. We only ran through 24 [54] items. Imagine running through 2,400. [56] The second system is a search intent [58] scraper. What this does is this goes [60] onto LinkedIn and finds job listings [62] that are for a particular search term. [64] In our case, the term sales development [66] representative. It then fires off these [68] search terms to a third party scraper [70] called Appify. What Apify does is it [73] goes through each of these job posts and [74] it scrapes them. So, it scrapes the [77] company name, it scrapes the location, [79] it scrapes the job details and [81] description, it it scrapes the duties [82] and responsibilities. Once we've done [84] all that scraping, we then go into our [86] search intent scraper database. And this [89] is where we actually put in the [90] companies and then finally the email [92] addresses of the scraped inquiries. The [94] reason why this is so valuable is [96] because instead of just scraping any [98] email address, what we're doing now is [100] we're scraping email addresses from [101] companies that are extraordinarily high [103] intent. These are companies that have [105] money in their hands and are willing to [107] pay to have a need solved. So instead of [109] pitching them on getting hired for their [112] job, what you do is you pitch them for a [114] related service that solves the same [115] need, but it does so for less money. It [117] does so quicker and it does so with less [119] attachments. The way the system works is [121] first we run that scraper I was talking [123] about. Then we extract all of the data. [125] And then finally, for every element that [127] we extract, what we do is we check a [129] Google sheet, that database I mentioned [131] earlier a moment ago, to see if a record [133] exists. If it doesn't exist, we actually [135] proceed and we add it. And then finally, [137] we'll also pass this through an AI [139] filter whose job is to essentially [142] filter out any job descriptions or [144] postings that are irrelevant to us. This [146] allows us to add a flexible portion to [148] the system. So, it doesn't just do it [150] based off keywords. Now, for the [151] important part, how do we get the email? [153] What we do is we make an API call to a [155] service called any mail finder which is [157] a thirdparty service that allows us to [159] discover emails thanks to something [162] called nominative email enrichment where [164] they permute the first name, last name, [166] and then the email domain multiple times [169] in multiple different ways until they [170] find one that works. Now, the way an [171] email finder works is after you make [173] that API call, you can attach what's [175] called a web hook URL. What we've done [177] is we've actually forwarded this over to [179] a second scenario who catches that web [181] hook. After it catches that web hook, [183] what we do is we research the decision [185] maker using a module called Perplexity. [187] Perplexity is a simple service that [189] allows us to combine the flexibility of [191] artificial intelligence with more or [193] less the power and scope of something [194] like Google to pull real-time search [196] results from the internet that are [198] related to that particular prospect. [200] After that, what we do is we take data [202] about the person. We feed that into [203] artificial intelligence and have it [205] generate us an icebreaker. And then [207] finally, we pump it into instantly and [209] then our campaign. If I scroll all the [210] way over here on the right hand side, [212] you see what we've done is we've started [214] by feeding in a simple company, in this [216] case decagon, that's hiring for a role, [218] in this case sales development [219] representative. We then scrape all of [221] the data, including the description, [223] including the text, including the job [225] function, and so on and so forth. And [226] then we actually find a co-founder or [228] CEO at that role, grab their name, get [232] their job title, get a LinkedIn URL, and [234] then finally generate a high-quality [236] icebreaker that makes it seem as if we [238] did a ton of research on the job and we [240] wanted to apply. You add this to any [242] email campaign, and because it's [243] personalized, your opening and reply [245] rates are going to be substantially [246] higher. The third system is a YouTube [248] repurposing scraper. What this does is [251] when I send an email address that [253] contains the URL to a YouTube video. So [256] if I grab this URL up here, let's just [258] grab it from here up. Then I send it [261] over to in this case myself. If I then [263] test this workflow, what this is going [265] to do is it's going to launch another [266] third party scraper from Appify to [269] basically go out pull the transcript of [272] that YouTube video. It's then going to [273] feed that into artificial intelligence [275] open AAI with a prompt that essentially [278] asks it to grab all of the highquality [280] and informative sections of that giant [283] transcript and then generate simple, [285] straightforward Instagram, LinkedIn or [287] Twitter posts. We then grab that copy, [290] split it out before finally appending it [292] to a Google sheet. The Google sheet ends [294] up looking something like this. So we [296] have the post up here and we have a [298] variety of different subsections of the [300] transcript that are then massaged into [302] something that might work on Facebook, [303] Twitter, LinkedIn or Instagram. With [305] this system, you can turn any massive [307] YouTube podcast or longer form video [310] into a series of highquality snippets [312] that make it easy for content teams to [314] repurpose footage. The last system is a [316] deep multi-line icebreaker. So, if I [319] click test this workflow, what's [320] happening is it's going over into a [322] Google sheet and then it's pulling a [324] search URL from this URL column. What [326] this search URL is is this is a database [329] of leads hosted on a platform called [331] Apollo.io that gives us most of the [334] information about a lead that we might [336] be interested in with one notable [337] exception, which is the email address. [339] So, what the system does is it actually [341] goes and then calls a third party [343] scraper, again built in Appify. [344] Hopefully you guys are seeing a trend to [346] go out and then grab the email addresses [348] of the people on Apollo. It then [350] performs a bunch of data filtering and [353] it then for every person that it pulls [356] feeds in their website, extracts the [358] HTML, does some more data processing and [361] formatting and then for every website [364] searches all of the additional websites [366] linked on that page. Unsurprisingly, [368] there is a lot of very valuable data [370] that is hidden in the websites that the [372] prospects on this list are associated [374] with. For instance, my own website, [376] leftclick.ai, tells you a bunch of [378] things about my service that aren't [380] immediately or plainly evident on my [382] LinkedIn profile or the details that [384] Apollo gives me. And so, what we do is [386] we scrape these pages to give us more [388] context about who the lead is, what they [390] value, and ultimately how best to pitch [392] them. Once we're done with that, we feed [394] all of the results of these HTTP [397] requests, basically plain text website [399] scrapes, into an HTML extractor. This [402] HTML extractor's job is to take as input [405] all of the links on the page and then [407] pull them out. From there, we're going [409] to end up with a big array of links who [411] we process and then loop over. And then [415] for every individual link, we actually [417] go through and then we perform [419] additional HTTP requests to grab all of [421] the links on their page. We feed all of [424] those subscriptes through into [426] artificial intelligence to summarize the [428] individual website pages before finally [430] aggregating them and then using them to [432] generate a very deep nuanced what I like [434] to call multi-line icebreaker generator. [437] Now, a deep multi-line icebreaker is [439] essentially much much higher quality [441] than the one-off ice breakers that most [443] people are currently doing in cold [444] email. Instead of previously where we [446] just say, "Hey, Peter, love your dog. [448] Thought I'd connect." At the end of it, [450] you end up with a very highquality [452] icebreaker that occurs not just at the [454] intro line like most people do in cold [456] email, but on multiple lines that also [457] references specifically some very [459] important things to the customer. [460] usually things that are phrased in their [462] own words on their website which you [463] know if you pair it back to them they [465] tend to like and think that you did a [466] lot more research about. So in this case [468] this website made by this guy Brad [469] called Mission House put out a local [471] guide for arts and coffee and then we're [473] saying we're also a fan of finding the [474] best espresso in town. We wanted to run [476] something by them. Okay. We creep their [478] site quite a bit. Building real [480] community ties is something that's very [481] important to them. They keep on [483] mentioning partnerships with local [484] nonprofits on their website. The whole [485] point of this is you just make it so [487] dang unlikely for them to think that you [490] did not actually stalk the hell out of [491] them in their website that when you [493] finally do send them an email, they'll [495] almost always at least give you the [496] light of day because of it. That's it [498] for 30inut AI automations that anybody [500] can set up and start selling today. If [501] you guys want all of the blueprints and [503] templates for this stuff, just check the [504] link in the description. I focus on high [507] ROI systems that actually go out and do [509] something valuable for customers. So, [511] you'll notice that a lot of these tend [512] to involve some sort of scraping [513] application. That's just because [515] outreach and any sort of sales or [517] marketing function just tends to be more [519] valuable to a company than let's say [521] some minor process optimization. But [522] that's not to say that you guys can't [524] also build, you know, backend or [525] fulfillment systems. I just tend to [527] focus on the things that, you know, [528] drive the most disproportionate [529] revenues. You guys like this sort of [530] stuff, you'll definitely like Maker [531] School, my 0ero to1 accountability [533] program where I help you get your very [534] first customer in AI and automation. So, [536] if you guys have the technical skills [537] and you guys maybe want some more [539] business skills, absolutely run through [541] that program and let me know your [542] thoughts. Aside from that, thanks so [544] much for watching. Like, subscribe, do [545] all that fun YouTube stuff that gets me [546] to the top of the ALGO.

Video: https://www.youtube.com/watch?v=36xOZ1e6tuM
Title: How She Built a $13k/m Agency Using Just ONE AI Automation
[0] The more comfortable you are with [2] failure, the more risks you're going to [4] end up taking and the better your [6] reward's going to get. I can't tell you [7] the number of times people have been [8] like, I just closed this amazing deal. [10] And we're all so stoked for them. We're [11] like, this is awesome. And it's like, [13] all right, so how much money was it? [15] We're still figuring that [17] out. You didn't close them. You got a [19] text message from them. That's what you [21] did. Focusing on the solution first is [23] the wrong approach. focusing on the [25] problem and then interacting with the [27] market as fast as you can to then define [29] better solutions that are very specific [32] to what people are willing to pay for [34] and would generate them more revenue. [36] That's the way to go. AI is seeing less [38] and less as this silver bullet for all [41] of the problems. Like people are [42] realizing no like when you have one AI [45] agent that tries to solve this big [46] thing, things start to fall apart. I was [49] just having a conversation with somebody [50] else about the long-term evolution of AI [52] and automation businesses. I came to the [55] concept that AI automation businesses [56] don't remain AI automation businesses [58] for long. What ends up happening [61] is here's how one of my community [63] members who joined Maker School just 2 [64] months ago is now making $13,000 a month [66] with AI and automation. So my first [68] experience was actually joining a big [70] tech startup. I joined the company is [73] called Flexport and they were creating [75] software the first to really create [78] software for supply chain and the [80] mission that they were on was so [82] ginormous. I was so excited to join. And [84] I was a marketing operations intern at [86] the time and I realized that one of the [90] things that are important for me is the [93] autonomy and a flexibility of going [95] after big challenges and when you join [97] like a company that is a little bit more [99] established the amount of influence you [101] have isn't as substantial. So I guess [104] this was a little bit of an ego issue [105] you know where it's like oh this is my [107] first big internship but I want to [108] change this company and I want to help [110] them you know become bigger and greater. [112] But I've learned a lot from being there [116] and working with people making Flexport [119] big. Flexport's former CMO helped me set [122] up like promote a nonprofit that I was [124] running for Ukraine in 2022. So great [127] connections. From there, I moved to [130] South Korea, which is one of the reasons [132] I couldn't really stay working with [133] Flexport because they had a lot of like [134] regulations around who and where you can [137] work with them from. in Korea got to [139] work with like venture capital firm [141] which was its own world very different [143] to like the way that traditional VCs run [145] in Silicon Valley but that time made me [148] fall in love with startups even more so [150] got to like interact with some Korean [152] startups got back from Korea moved to [154] India then in India I worked with like [157] female entrepreneurs so it wasn't really [159] like startups or SAS but those women in [163] like rural slab communities of India [165] were building real businesses [167] that were changing like the lives of [170] their families, their communities, [171] employing people. So having a chance to [175] kind of support them was pretty huge, [177] too. And then finally moved back to San [180] Francisco for a bit and worked on [182] building my first ever startup, a bunch [184] of my friends and I building plant care [187] AI. The very first startup idea that I [189] had in 2018, it was AI for regulatory [191] compliance. very random just because the [194] companies were IPOs. Very opportunistic [196] idea. Then AI for plant care. I have no [199] idea why we chose that. Neither of us [201] could keep plants alive. Like all of my [203] plants that you see, they probably are [205] going to be gone in the next, you know, [207] week or two cuz I I was going to say [209] they look pretty nice. You clearly know [210] something. It's not going to stay alive [212] for very long. None of us were that [213] excited by the idea, but even more, we [215] were young and impressionable and we [219] really wanted to get startups right. And [221] what that means is we ended up searching [224] how to build a startup and trying to get [226] every single thing right. Be like, "Oh, [228] but how do we create customer personas [230] and should we do this thing in MVP?" And [232] just spend so much time strategizing [234] over building. And while we were [236] building, we were fortunate we got into [237] this really cool Japanese accelerator [240] that was backed by SoftBank. So by the [242] time of the accelerator, we got to pitch [243] to SoftBank executives. But because we [245] were so stuck up in our head on getting [248] this startup right, we didn't spend as [251] much time building out the demo. Didn't [253] have cool things to present at the end. [255] The demo went okay, but it was a huge [257] learning experience to like be always [259] biased towards action. But in a way, it [262] was a failure that carried some valuable [264] lessons. Sounds like it. And you know, [266] in practice, most do. But I like your [268] point on building as opposed to just you [270] know strategizing because at the end of [272] the day unless you are consistently [273] interfacing with the market and I think [275] this is probably even trueer in like [276] Silicon Valley for instance where so [278] many of these ideas are big and grand [280] and you know supposedly worldch changing [282] like unless you consistently interact [283] with the sort of people that you want to [284] sell to you tend to lose kind of track [286] of the whole point 100%. This is [288] something I've learned from you. A lot [290] of the times the solution that people [292] come up with our idea for like plant [295] care AI could be helpful could be not. [298] We could have learned a very specific [300] pain points from interacting with people [302] which we did but not enough but if we [303] had more conversations we could have [305] come up with something that was an AI [307] but was solving a much bigger problem [309] and it would have made that much [310] difference for us in terms of what we [312] were building. The thing that I've kind [313] of heard from you and also in the [315] community is sometimes focusing on the [317] solution first is the wrong approach. So [320] kind of focusing on the problem and then [322] interacting with the market as fast as [324] you can to then define better solutions [326] that are very specific to what people [328] are willing to pay for and what people [331] think would generate them more revenue. [334] That's the way to go. Yeah, for sure. [335] Man, that makes me so happy. I also like [337] the fact that you're like, "Hey, we [338] might have not actually even ended up [340] using AI." Like I think AI is obviously [341] the fancy thing that you want to slap on [343] your startup for VC funding and whatnot, [345] but like you don't actually need AI for [347] a lot of customer problems. Yeah. And I [348] mean right now even in Silicon Valley [351] like one of the reasons I really like [353] being here is people are incredibly [355] smart. There are people who will kind of [358] fall in for AI But like [360] investors are catching up. People are [362] not dumb here. So right now I run [364] socially produced which is like a video [366] marketing agency for tech startups. [368] sweet of video marketing and content [370] automations. And one of the reasons I [372] love having tech founders and startups [374] as ICP is because they are smart. They [376] are going to sniff out and you [377] have to constantly kind of improve and [379] make sure that your solution makes sense [381] and is most effective in order to you [383] know secure the business and grow. And I [384] think people are catching up on that. a [386] lot of like AI is just this slapped on [388] of like oh yeah sure we use like AI in [390] this like minor part of our workflow but [392] also that now AI is seeing less and less [396] as this silver bullet for all of the [398] problems like people are realizing no [401] like when you have one AI agent that [403] tries to solve this big thing start to [405] fall apart technologically like you [407] maybe need more deterministic workflows [409] and more traditional SAS with like AI [411] embedded in critical points and so it's [413] not as smart to come in and say hey we [415] just need this like one big AI agent is [417] going to fix everything. So I think [418] people are catching up especially in [420] Silicon Valley like the knowledge [421] transfer is happening very fast. So for [423] sure for sure because I'm sure there [425] have been some investments in the past [426] that haven't really you know amounted to [428] the promises that were made. That's [429] really cool. Okay. So tell me more about [431] socially produced then and how content [433] and automation weave together in your [435] successes over the last couple of [437] months. Yeah. So I started socially [439] produced initially just as a content [442] agency. Now it grown into being a video [445] marketing service for tech startups. [448] When I was starting, it was actually in [450] summer of last year that I first had the [452] idea. And initially I just thought I'll [455] be creating videos. I didn't really know [457] in which capacity it would be monetized [459] or if I wanted to build a business. I [462] was joking that in a way from like the [465] fall of last year until maybe January I [468] was running it as a boutique like video [472] production thing like almost like a [473] hobby. I was just like I like doing [475] this. I like coming to this events and [477] you know creating videos and now once [479] I've made the decision to actually build [481] a business around it it's much more [483] strategic and focused on both like video [485] production and some content automation [487] for startups. Makes sense. Yeah, I like [489] your point on boutique. You know, I was [490] just talking to Assad last week. I'm not [492] sure if you had a chance to look at that [493] case study, but it was like, you know, [495] if you don't have customers for your [496] business, it is essentially a hobby. The [498] proportion of your business that is a [499] hobby decreases proportionally with the [501] number of customers you acquire. So, it [503] sounds like over the course of the last [504] year, your business has become less [506] hobby and less hobby and more business [507] and more business, right? Were there any [509] like major changing points for you aside [511] from joining our lovely community? Of [513] course. Yeah. In the fall of last year, [515] I've made the decision to run it as a [518] business. Mhm. And the changing point [520] came from me feeling ready to end this [523] sbatical of two years that I've taken [525] on. So I was working in startups [527] non-stop since 2018 and then in 2024 [531] when the war in Ukraine hit which is my [533] home country that's created a huge [535] dissonance about the world and my place [537] in it and how I'm spending my time on [538] earth. So I took kind of a break. I was [541] working on a few projects here and [542] there, but I was working in stuff like [544] legal philosophy and poetry and whatnot [547] and trying to figure out what I want to [548] spend my time on. And so, it's very [551] validating that eventually I lended back [554] where I came from, you know, with tech [556] and startups. And now that I've kind of [558] focused on video and realized that [560] that's something that both the market [562] needs and I'm interested in working on, [563] that's when I kind of made the [565] conclusion that okay, I'm ready to get [567] back into this in a more serious [569] capacity and ready to build a business [571] around it. And in November when I [573] decided now, we're doing it seriously, I [575] put together a landing page and pitched [578] and got my first very big client. So [580] that was kind of the first pivotal [582] point. And then this year it's focusing [585] more on scaling and actually focusing on [587] retainer business rather than just [589] oneoff projects. That's where I feel [591] like I'm taking it on to the next step. [593] Gotcha. Makes perfect sense. Yeah. You [594] validated what works, right? You've got [596] that. I mean, it's the micro version of [598] the product market fit and now you're [600] just scaling it up. Makes perfect sense [602] to me. Yeah. Can I ask um how much money [604] did you make last month with this [606] business? Yeah. So last month's we are [609] at like 13,000. Quite far from the final [612] goal that I want for a monthly retainer [615] and I started to only count like [617] retainer clients instead of oneoff like [620] project income. We're we're on a good [622] trajectory, I'd say. Yeah, that's [623] fantastic. So uh tell me a little bit [625] more about that. You're only counting [626] retainer clients because those add to [627] your quotequote MR, right? But um you [629] also have some one-off clients as well. [631] How did you structure like one-off [633] client offerings versus retainer? Like [634] what would you say are the differences [635] here? The one-off clients were kind of [637] my intro into the business world. That's [639] when I was taking it from a hobby to a [640] business and focusing on generating my [642] first revenue. The goal and the [644] structure for the one-off video [645] production services was when there was a [649] big tech event happening in Silicon [651] Valley, which there are quite a bunch [652] of, um, I would reach out and pitch and [656] get to come to the event and create [658] video at the event, which then would be [661] like packaged to them in x number of [663] videos. So yeah, it wasn't like content [665] automations just yet. We are not [667] essentially like a content automation [669] agency. the emphasis is on video [672] marketing and growth whereas the content [674] automation is very much used internally [677] and other kinds of automations as well [679] like I've learned a lot from you on on [680] boarding and other like client [682] satisfaction automations that we're [685] using internally to create a really good [688] customer experience because the thing is [690] with our ICP which is tech founders tech [694] startups a lot of the times it doesn't [696] make sense to sell content automations [698] because A, there's not going to be [701] anyone who's going to be running it for [702] them because their capacity is so small. [704] There's like a small team focused on [706] building very technical projects and B, [708] they can probably build it out [709] themselves and like make the software if [712] they really really want to. Yeah, I mean [714] they're giant nerds. I understand. Uh, [716] no. Jokes aside, it's interesting you [718] touch on that point cuz I was just [719] having a conversation with somebody else [720] about like the long-term evolution of AI [723] and automation businesses. And I came to [726] the concept that AI automation [727] businesses don't remain AI automation [729] businesses for long. What ends up [730] happening is you obviously test a [732] variety of different automations. You [733] build them for your own business. But [735] then you find that when you sell the [736] output of one specific automation to one [738] specific customer, it delivers a [739] disproportionate reward. So last week [741] when I had sod on for instance, he [743] started off as an AI and automation [744] agency for the most part. He was selling [746] a variety of different AI automation [747] services. But his company essentially [749] functioned as a software consultancy. [751] It's like new project coming in. We're [753] going to scope it. We're going to figure [754] out how we can deliver the most value [755] and then we're going to go line item by [756] line item give you some deliverables and [758] there we go. As he grew he shifted so [761] that it wasn't like an all you can eat [763] buffet at the AI automation agency [765] restaurant. It was like oh actually I [767] find when I sell to recruitment agencies [768] I make way more money. Hm. Interesting. [770] Now, what sorts of systems do I sell to [772] recruitment agencies that make me more [773] money? Well, it tends to be some sort of [774] cold email system. Okay. And then you [776] shift from being this AI automation big [778] consultancy, which I think is a great [780] place for people to start because you [780] just learn so much and obviously you get [782] very skilled at the technology into like [784] a cold email agency specifically [786] targeted towards, you know, recruitment [788] businesses for instance. So, I think [789] this is, you know, your journey is [791] pretty interesting because I don't want [792] to say it's in the other direction, but [794] you're testing out various angles and [796] various like retainer products and [797] various recurring services with with [798] your clients, I'm sure. And when you [800] find that product or the service that [803] delivers you like a disproportionate [804] return, that's when you slap a bunch of [807] systems on it and then you start selling [809] the outcomes of the automations, not [810] necessarily the automations themselves. [812] Does that make sense? Exactly. That's [813] something that I can also charge premium [815] for because the issue in a place where I [818] am and with my SAP is not money. Like if [820] I can show that something will deliver [822] results or has like a potential to [826] deliver the results then they are [829] willing to pay whatever it takes to get [830] this result if it makes sense for them [832] right so it's not so much about saving [835] on like oh my gosh like yes just give us [837] the the content automation we'll try to [840] scrape our resources together like the [842] time is a resource that they don't have [844] and they just want the result most of [847] the time so it made more sense to sell [850] like the outcome and sell kind of a [852] white glow service. And right now I'm [855] exploring like potential directions for [857] building a software. So like one of the [860] hypothesis I have is once I can figure [863] out ways to automate like video content [865] production and figure out like the [868] attribution and stuff that would really [871] make us run this smoother and more [873] effective at volume and high quality [876] internally that we could package that as [878] a software product and sell and very [881] likely that other startups would benefit [883] from like a more comprehensive solution. [886] But then kind of similar to what you're [888] sharing is the emphasis is again on [890] figuring out not just like how do we [892] automate everything within like video [894] content production but what are the most [896] revenue generating points within this [899] video journey in video marketing that we [901] can then more clearly attribute to [903] revenue and get more people interested [905] in buying the software. I think I [906] reached out to you initially because you [907] posted a win and you closed some $10,000 [910] a month client or something. Is that [911] right? Yeah. Yeah. Yeah. Um, what was [913] the like initial lead generation [916] strategy to get that client interested? [919] Like were you doing things like cold [920] DMs, cold outreach? Were you like doing [922] like warm network reactivation? What I'm [924] really interested in for you is like [925] what's like a repeatable scalable way to [928] grow the thing that you've obviously [929] demonstrated you can go from zero to one [930] with which is you know this retainer [932] thing and then sell like 50 of them or [934] something if that's something that you [935] want to do. I wish I could say that I [937] ran, you know, like 100 cold emails a [939] day. That was just one of the hundred. [942] That is not what happened. I've been [944] lucky to reach for leads and [946] opportunities that I'm able to close. [949] And for this specific client, it was a [952] warm inbound LinkedIn connect and then I [955] just sent like a very casual check-in. [957] So there's no kind of grand story about [959] this. And then for my very first client [962] which I lended the biggest venture [965] capital firm in America as my client [967] through cold outreach. And so in that [970] case, this case as well, it was having [973] an appropriate cold outreach or like [976] warm outreach in in this last case and [979] then having the some preparation or some [980] work to show for so when they go in and [982] like see what I'm offering, there's some [985] kind of results or some videos to back [987] up what I'm offering to them. 100%. [990] Yeah, this is that value based outreach, [991] right? I mean nowadays the bar is so [993] high with this stuff because the average [995] person gets spammed so many freaking [996] times that if you don't back it up with [998] something it's like okay I mean how many [999] emails have you gotten in the last 24 [1001] hours being like hey Anna I just [1003] recorded this Loom video can I send it [1004] over send me those people on Twitter [1006] they give me such an I have still kind [1010] of a nice tendency to me where I just [1012] like sometimes I want to respond and say [1014] like hey like this is bad like don't do [1016] this or like that I make a conscious [1018] step back and a decision of like they [1020] will learn that when people don't [1022] respond, that means the cold outreach [1023] was bad. And so I'm like, I will not [1026] engage with it in any way. This will be [1027] the lesson. And I think I also take that [1029] for myself. You know, when people don't [1031] respond to my cold outreach, I know that [1033] they probably seen it. Even if they're [1035] very high-profile, there's still a very [1037] likely chance that they've seen it. It [1039] was just bad and not worth their time to [1041] respond. And so the learning, you know, [1043] gets transferred to the next time I do a [1045] cold outreach. What sort of like did you [1047] put together an asset for this client of [1049] yours that you uh sourced through cold? [1050] Um, this was the initial one I guess [1052] back in I don't know if there's Yes, for [1053] that one I had like a huge proposal. So [1056] it was A6 andZ which is like a pretty [1058] big VC here in America and they were [1061] organizing like San Francisco Tech Week [1063] and I've done like videos previously [1066] with another big accelerator called Tech [1068] Stars. So I've shared like some of the [1070] examples from that like more pro bono [1072] fun project that I did that were like [1074] very relevant to their event. I wrote [1076] out like a very detailed proposal and I [1078] slapped it like two days before the [1081] event started. So, it was very timely. [1083] Had a great sales call, I guess, and [1086] they brought me on. Fascinating. I like [1089] that you timed it so that it was like 48 [1091] hours before. And I'm sure you made it [1092] very easy to say yes to. It was just [1094] like, "Hey, say yes. I'll be there with [1095] my camera, with my equipment. We'll do [1098] all the editing and we'll publish it in [1099] all these platforms." That wasn't [1100] intentional. Actually, that week like [1102] prior to the event, I think it was on [1104] Wednesday when I decided that I'm either [1107] taking this business seriously and I'm [1108] like building a business or I'm going to [1110] go get a job because I I was like [1113] there's no way around. I want to get [1115] finally back to like a normal level of [1117] income. This whole like period of me [1120] reading philosophy and doing podcasts [1123] about like AI governance is behind me. [1125] Like I want to get back to making money. [1127] I think it was like Wednesday. day, I [1128] was like, "Okay, well, we got to have [1130] some kind of landing page." By Thursday [1131] night, I had the landing page done. By [1133] Friday, I was like, "Well, what's the [1135] next step? Like, where are we getting [1136] clients?" And then I found SF Techch [1138] Week. I was going to actually email [1141] every single person who's like sponsored [1143] this event. Like, I use AI to find their [1145] emails. And so, I started reaching out [1146] to them. And then on Saturday morning, I [1148] was like, why don't I just reach out to [1149] to A6 and Z themselves and just pitch [1151] them. So, and we've closed it over the [1154] weekend. And on Monday, I was ready to [1156] go. So, it wasn't that intentional, but [1159] No, I think that's brilliant because you [1160] miss 100% of the shots you don't take. [1161] That's number one. Uh, number two, you [1165] could totally build like a scalable [1166] outbound strategy with that stuff. Anna, [1168] think about this. You're talking about [1169] scraping like events in San Francisco [1172] that are related to technology, right? [1173] Oh, there's so many sources where you [1175] could get that. Then what? You just need [1176] to identify the sponsors. That that it's [1179] easy. You could totally crush this. I'm [1181] just like imagining a campaign where you [1183] are first in everybody's email inbox 48 [1185] hours before some event with some super [1187] crazy offer like hey you know we shot [1189] for A16Z a couple of months ago and like [1192] here's that here's this here's that [1193] here's what we're going to give you for [1194] free. Yeah, that's that's 100%. One of [1196] the problems is like with A6 andZ, they [1198] have much bigger budgets. So that's [1200] something that they can afford in a way, [1203] but for a lot of the events, there is [1205] like a very streamlined budget and they [1207] usually go over it anyways. So coming in [1210] hot like a few days before the event [1212] might not be the best strategy, but [1214] there's definitely a way to like time it [1216] right to get a lot of them closed. The [1217] issue is I no longer want to focus on [1220] events because it is kind of a oneoff [1222] engagement. I'm shifting focus to [1225] getting clients that we can like have on [1227] a retainer for many months and years to [1230] come. Are you using any of these same [1232] things for your own business? Like [1234] obviously the best way for an SEO [1237] business to market is when the customers [1238] find them via SEO. And the best way for [1240] a video marketing business is for people [1242] to find them via video. Yeah. So I've [1243] been doing content myself mainly on [1245] LinkedIn. We've plateaued at some point [1248] because I've been writing this on my own [1251] for a while. I've realized that the way [1253] for me to service the clients is the [1255] best is to step back from content. But [1258] now that we have aesthetic cash flow, I [1260] can afford editors. So, it's going to be [1263] much easier for me to like start [1265] reinvesting back into like my content [1267] and my personal brand. And you're [1268] totally right. You know that this thing [1270] works when my founder brand works as [1272] well. So, that's definitely going to be [1274] the emphasis. And I'm slowly like [1276] getting back into Twitter, which is like [1280] a scary place to be. I've like I used to [1282] be on Twitter I think in 2021. Twitter [1285] growth, I think, is essentially [1286] different from growing on all of the [1288] platforms like LinkedIn with video or [1290] like YouTube, but it's worth it because [1292] that's where our ICP hangs out. So, [1294] makes sense. I'm sure I'm going to be [1296] seeing you and your like your tech [1297] Twitter bro DMs all up in my my ex.com [1301] pretty soon. Yeah. Yeah. I could make [1303] you $50,000 per month. [1307] Hey, Nick, fancy a quick automation for [1310] your lead gener. Wow, no way. No way. I [1313] should have done that myself. Uh, it's [1315] funny. I got all these guys now with the [1316] school community that I run, right? [1317] They're all like, Nick, I can add 15 [1319] clients and make you $5,000. And I'm [1322] like, whoa, that's crazy. Maybe I should [1325] put you up on the offer, big duck. Then [1327] there's like some 16-year-old like in a [1329] wife beater, you know? That is so funny. [1332] and so cute. But yeah, they'll learn [1334] their lesson though. That's fine. Like, [1335] let let them learn. I used to go uh I [1338] used to do door to door and I was like I [1340] looked like the you know super babyfaced [1342] when I was like 19 20 and I was like [1343] that's intense. So I would do that like [1345] knock on a door be like hey I'm going to [1347] make you all this money. So like I know [1348] firsthand how that is and you you kind [1351] of do have to go through this initial [1352] introductory hazing. Like another thing [1354] that I'm starting to talk about more [1356] often in maker school is there's like [1358] this discord between comfort and then [1360] speed, right? Like if you want to do [1362] something fast, you necessarily have to [1364] sacrifice your comfort in order to do [1366] it. You know, going door todoor and [1367] having people laugh at you or pitching [1369] A16Z and having some intern be like what [1371] a loser or whatever. You know, in your [1373] specific case, that stuff's necessary [1375] for growth. I wouldn't even say it's [1376] optional. It's like necessary. Yeah, [1378] that's one of the reasons when I started [1379] talking about like cold email, I think [1381] this should be like the next lead genen [1383] strategy that I should focus on because [1386] I have a feeling that we are going to [1388] grow quickly to a stage where we would [1390] not need lead genen like at that level [1394] but I think that for character [1395] development I should do it. Like I think [1397] it's important. Yeah. For my character [1400] arc like I need to do cold spells and I [1402] need to fail and embarrass. I think I've [1405] already have quite a few both like [1406] Twitter DMs and other like DMs and I've [1409] met quite a few people that I've called [1410] DM like years ago in a very embarrassing [1412] way that once they followed me back on [1415] on Twitter they're like hey like I see [1416] you texting me like please just don't [1419] read that message like just forget all [1421] about that start from the beginning. [1423] Okay. Um but I think yeah I think I [1426] think it's important. I think the more [1428] comfortable you are with failure, the [1430] more risks you're going to end up taking [1432] and the better your rewards going to get [1434] eventually. So cold email is important. [1437] Agreed. It's funny because we talked [1439] about what would happen if you were 10x [1440] the size, but what are your goals with [1442] this business? Like are you talking [1443] revenue goals? Do you want some sort of [1445] impact goal? Just off the top of your [1446] head, like where do you where do you [1447] want to take socially produced? Yeah, [1450] definitely revenue goals is is what [1452] we're focusing on. I've come a long way [1454] from starting startups focused on some [1458] kind of outside mission. I've [1460] essentially realized that each time that [1463] I would run a startup to like help [1465] people save their plants and make planet [1467] more green or help startups do this [1470] thing the death of an idealist. Ladies [1472] and gentlemen, like every single time [1474] I'd done that, I think reflecting back [1477] on it, it was quite egotistical. It was [1479] just like I want to make this big impact [1481] on this space and essentially the goal [1484] of a business is to generate revenue and [1488] my way of you know generating revenue is [1491] by helping other startups generate [1493] revenue by solving for their [1494] distribution with video content. So, one [1496] of the parts that I like about business [1498] is that there's very clear incentives. [1500] Like, once you kind of push away all of [1502] the narratives, like we're all building [1505] something that solves problems for [1507] others that they are willing to pay to [1509] have solved. That's kind of how I'm [1511] framing it this time around. I also love [1513] video, but I think that's just kind of [1514] secondary. Mhm. And then in terms of the [1517] revenue goals, and maybe I'm thinking [1519] small, I think we might get much further [1522] than this, but my goal was to get to 50K [1525] a month by the end of the year, but from [1527] like the current conversations that I [1530] have with existing clients and how many [1531] other clients they can refer to us, I [1533] think we