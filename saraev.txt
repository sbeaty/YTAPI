
Video: https://www.youtube.com/watch?v=Ksr_H30Oris
Title: Every N8N JavaScript Function Explained (106 + 7 Extras)
[0] hey in this video we're going to be [1] going through all n8n functions as at [3] the time of this recording there are 106 [5] of them and they're broken down into the [6] following categories we have string [8] functions number functions array [10] functions object functions and Boolean [13] functions as somebody who scaled an [15] animation agency to 72k a month [16] realistically I find myself using some [18] of these more often than others and I'm [19] going to cover them when we get to them [21] but either way by the end of this video [23] you're going to know all n8n functions [24] and they're going to make you [25] substantially more effective and faster [27] Builder let's get into it [31] okay let's get building I have an NAD [33] workflow open over here called all n10 [36] functions I'm going to click add tag and [38] go down to naden course just so I can [39] help organize it a little bit and all we [41] have is we have a start node this begins [44] a flow when I click test workflow down [46] here so give this a click you'll see [47] that it's just turned green this just [49] tells us that this has triggered the [50] flow uh peculiarity of the start node is [53] you know when you when you click it and [54] when you get it going it doesn't [56] actually output any data it just starts [57] the flow so obviously if you want to do [59] something something here we're going to [60] have to add another node so let me click [62] on that right little plus sign and then [64] the nodes that we're going to be using [66] in this video I'm going to be using [67] pretty gratuitously they're called the [69] edit Fields node and the edit Fields [71] node for anybody that's coming from [72] maybe a different no code editor [73] especially something like make.com you [75] can just think of this as a way to set [76] variables rename fields and that sort of [78] stuff so going edit Fields over here [81] give us a click and now you know we have [83] the start node on the left and that's [84] the input and then in the middle here we [86] have an edit Fields node with a couple [88] of different modes there's manual [89] mapping and there's Json basically what [91] this allows you to do is if you give [92] this a click you can Define your own [94] variables [96] here and if I click test step you'll see [99] that we now have a new variable [101] accessible to us in the output called [102] hello world now what I'm going to be [104] doing is I'm going to be using the Json [106] option here and I've already created a [108] bunch of JavaScript um that I'm just [110] going to be using for the purposes of [111] running through all the functions so [112] this is what the object looks like we [114] have a string called hello number 3.5 an [118] array with names of Sarah Sal and [120] Stephanie an object and this object has [122] some parameters like first name last [124] name height and centimeters then we also [126] have a Bo that stands for Boolean and [128] that's just set to true I'm doing this [129] because these are all of the different [131] function types that we're going to be [132] working through um in the rest of this [133] video and so I just wanted an easily [136] accessible way for us to get all of [138] these and then do cool stuff with it so [140] I zoom out a little bit just cuz and [141] looks a little ugly when I'm not zoomed [143] in um I can now add let's just give this [145] a quick rename let's just say set [147] example Jason and what I'm going to do [149] is I'm going to go and do another edit [151] fields and this edit Fields is where I'm [153] actually going to be mapping um you know [155] the output so I'm going to call this [157] output and then for now we'll go off of [159] a string data type and what I'm going to [161] do is I'm just going to drag this string [162] into the value and now we have access to [165] it now the way you use functions in nadn [167] as I'm sure you're probably already [168] aware but just to reiterate is all you [169] do after you've selected a variable from [172] an input and it's turned green like this [174] one here all you need to do is just [176] click the dot a period Then opens up [179] this function editor and now we have [181] access to tons of stuff so you can see [182] there's some suggested functions here [184] this is just because while anen gives [186] you a large library of functions that [187] you can do stuff with um in practice you [189] don't actually end up using the majority [191] of them but I'm still going to run you [193] through every single one of these for [194] completeness sake and then if I touch on [196] something that I actually use pretty [197] often either for my own workflows or uh [199] workflows that I've seen other people [201] use then I'm going to I'm going to [202] mention it okay great so let's start [204] with the very first one now if you [205] remember if I click back here this turns [207] green and we see a result on here to [209] hello if you remember the value of this [211] string right now is currently hello okay [215] so keeping that in our minds what we [217] start with is the includes function the [220] way that the includes function works is [221] basically we can use this to search [223] within a string to see if something [225] includes uh substring that we're that [228] we're looking for so right now we have [230] hello and what we're basically saying is [232] does hello include what I'm about to [235] write inside of here so if I write H the [238] result will be true [240] but if I write something like X you'll [242] see the result will change to false keep [244] an eye on this result panel because this [246] is going to be your best friend anytime [248] you're manipulating functions uh because [249] most of the time it'll give you some [250] sort of realtime feedback so you know if [253] I wanted to see whether or not my string [255] contains the word hell I don't know [256] maybe I am very Pious or something I [258] type hell in here you see h e l is a [261] four-letter substring that is inside of [263] hello obviously this is going to turn [265] true but if I were to Jumble up the [268] letters right if I were to go l l e H [270] you see that this is false because this [272] is reading all strings left to right so [274] this is a pretty quick and easy one um [276] you know it's kind of useful to see [277] whether or not something includes [279] obviously if you have a very large [281] string you can instantly do this just to [283] search and see whether or not that [284] string includes just some tiny little [286] thing that you're looking for a mention [287] of something perhaps the next one I'm [289] going to cover is called split now split [291] is something that I use basically all [292] the time I use it at least once a day um [295] and I use it across a variety of no code [296] tools just because it's so God dang [298] useful now the way that split works is [300] you essentially take your string h e l l [303] o ex exclamation point in this case and [306] then you convert it into an array and [308] the way that you do so is you give it a [310] character that you want to split the [311] thing by so let me give you a very [313] simple example if our input string is h [316] e l o let's hypothetically say I wanted [319] to split this into two halves and the [321] way that I wanted to split it was based [322] off of the presence of the L and the L [324] here okay so what I could do is I could [326] say json. string dosit and then in [330] quotes and you have to use quote signs [332] if I go LL you'll see that I've now [335] split this string into two um substrings [338] basically and then plopped them in an [340] array now if you're unfamiliar with what [342] an array is or how an array works that's [344] okay we'll get into that later but for [345] now all you need to know is that we've [347] basically taken one input we've turned [349] it into an array that contains two [350] outputs the h e and the O if you split [353] it based off of the presence of an L [355] you'll see that we are now generating an [357] empty space why well the this is sort of [360] nuanced but if you look at our input [362] over here that's h e l l o if we're [364] splitting based off of an l and what [366] this is doing is it's catching the empty [367] string in between these two L's so [370] hypothetically if I wanted to split this [372] by something else let's say the E you [373] see that this is now splitting into a [375] substring that's H and then L if you [378] wanted to do this based off of the [379] presence of nothing you'll see that it [381] splits it based off every character so [383] this is just it's a default um if you [384] don't feed it in any input whatsoever so [387] if you have an empty string like this is [388] h e l o exclamation point and splitting [391] is really useful just as a quick and [393] easy way to take something usually some [395] sort of tabular or CSV data and then [396] just turn it into you know an array that [398] you can use nadn for so let me give you [400] a quick little example right now this [402] editor is set to dollar sign json. [404] strings we're referencing a variable [405] from a previous um you know uh node [409] there's actually a little hack in nadn [410] that you can do if you want to like [412] create something directly in the [413] function Editor to do so with a string [415] all you do is you add quotes and then [417] you do something like Sarah Sally [421] Stephanie everything within these two [423] quotes still technically counts as a [426] string and so you can dot index so you [428] can slice it into uh you can use dot [430] notation I should say in order to attach [431] a function to the end of it so [433] hypothetically let's say we had three [435] names here and these three names were [436] just somewhere I don't know they're in [438] some data source that we're scraping [439] well we can turn this into an array very [441] easily just by adding the delimiter of [443] comma and then space now because we're [446] going comma and then space as you could [448] see we've turned the this um string of [451] Sarah Sally and Stephanie into an array [453] that's a quick example of split split's [455] pretty awesome I use split all the time [457] because we just deleted all of this we [458] need to reselect our strings I'm going [460] to go dollar sign Json then I'm going to [462] go St r i n g that's the name of the key [466] in our Json that we fed and so now we [468] have the hello again let's proceed next [471] we have starts with starts with is kind [473] of what it sounds like if you want to [475] see whether or not a string starts with [477] a uh series of of letters [480] or not necessarily letters numbers and [481] stuff like that as well characters I [483] should say then you can just use starts [485] with so in our case if we wanted to see [487] whether it started with h e l l or [490] something like that then this would [491] return true but if we wanted to instead [494] uh I don't know let's say we wanted to [496] see if the string started with the term [497] by then it would obviously be false [499] similarly to starts with as you can see [502] we also have um ends with and so the way [506] that this works is very similarly [508] essentially all we're doing is we're [509] starting at the back we're just working [510] our way forward so if the Hello [513] exclamation point string sorry I just [515] getting a call there um but it looks [516] like it went to voicemail if the Hello [519] exclamation point string is I don't know [521] exclamation point this obviously going [522] to be true right but if it's a dollar [525] sign it's going to be false because we [526] don't have a dollar sign present in our [527] string if we were instead to go e o you [531] know this would this would again revert [533] to true so lots of options there and [535] there are a lot of uh functions in [536] reality that you'll find are just the [538] inverse of each other so if there's [540] something for starts with odds are [541] there's something that ends with there's [542] something for uppercase odds are there's [544] something for lowercase we're going to [545] cover all of that over the course of the [546] rest of the video okay great there's [549] also this other function here which I [550] find myself using quite often it's [552] called replace all and so replace all is [554] sort of a power function basically what [556] it allows you to do is it allows you to [557] take this string which we have here is [560] Hello exclamation point and we can just [562] replace any character we want in there [564] with another character so let's say [566] we're some crazy anime weeaboo what we [568] do is we replace um the first letter L [573] and we go comma and we replace it with W [576] what we're doing now is we're replacing [577] all of the L's in the string of hello [580] with a bunch of W's hello right so we [582] have a lot of um you know granularity [584] and control there if you look over the [586] expression and function uh documentation [589] over here you'll see that this is the [590] first instance in which we're now [591] splitting this into two parts so you [593] know we actually have two variables that [595] we're feeding into the replace all [596] function there's a pattern AK what we're [598] looking to replace and then the actual [599] thing that we're going to be using to [600] replace it I could just as easily [603] replace the term if we just take both of [605] these out I could just as easily replace [607] the term um I don't know the O right [610] with nothing and if I do that it [612] actually just cuts it out just removes [613] that character completely so replace all [615] is pretty powerful I find myself using [617] this all the time when I'm developing [618] flows um and I'm glad that it's in the [620] suggested editor up here alongside with [621] split because you know these are the two [622] most common ones realistically okay [625] great moving our way down you'll see [626] that there's a very interesting looking [628] function this technically isn't a [629] function I believe this is a parameter [631] in JavaScript uh you know like [633] technically speaking and that's why it [634] doesn't have the two little brackets [635] next to it but this just a quick and [636] easy way to determine the length of a [638] string so you know if h e l l o [641] exclamation point this is 1 2 3 4 5 6 [644] right we should expect this to say six [646] that's exactly what happens when we feed [648] in length hypothetically if I were to [650] replace this with hey how's it going men [654] you'll see that the character length of [656] this string is now 24 so uh L is super [660] valuable I use length all the time I use [661] length to determine you know whether or [663] not the input that I'm feeding into a [664] large language model is too much right A [666] lot of the time you can average out the [669] token length of a big string just by [671] multiplying the number of um characters [674] per word on average and if you look up [676] number of characters per word the [679] average is [680] 4.7 uh and then if you want to get the [683] number of tokens per word average you'll [686] see that that's uh something like 2 to [688] three a paragraphs 128 tokens I guess I [690] should have said number of words per [692] token this ends up being about um [695] 0.75 so from there if you feed in a [697] string of 1,000 uh characters right uh [701] what was the the math or 4.7 or [703] something I believe yeah 4.7 so 1,000 [706] characters um divided by [708] 4.7 is 212 words 212 words um times uh [716] 1/ 0.75 [719] gives us 282 tokens you know odds are if [722] you do this calculation and you get the [724] length of your your string you're going [726] to know that every time you call a large [727] language model you're going to be using [728] 282 on average over a large enough data [731] set 282.30 decode [749] and there its partner base 64 encode now [751] if you guys aren't familiar with what [753] base 64 is you can think of it in a [755] really simplified way it's just a [756] slightly different alphabet used to [758] represent strings um if I were to zoom [760] into this example the letters h e l l o [764] when they are base 64 encoded translate [767] to a capital g capital V SB Capital G8 [770] and then the little equal sign so this [772] is basically just a way to to like I [774] don't know like rotate characters [776] According to some formula this base 64 [778] um function [779] and the reason why they have a function [781] available is because a lot of servers [783] and some web services will only accept [786] base 64 encoded versions of the strings [788] that you send them this is both a [790] security purpose and I believe there's [791] also some sort of compression purpose as [793] well but to keep things really simple [795] we'll start with base 64 encode then I'm [796] going to feed in the thing that we just [797] base 64 encoded into a base 64 decoder [800] just so you can see that they're the [801] same thing okay so if I were to attach [803] base 64 en code over to the string h l o [806] exclamation point you'll see that it's [808] very similar to the string that I just [809] showed you guys without the exclamation [811] point the only difference is the last [813] letter I think is an H or something like [815] that instead of a an an equal sign so as [817] you can see it's very similar now if I [819] were to take this string and then I were [821] to attach another function to it [823] base 64 decode notice how we've [827] basically just regenerated our initial [829] hello string we can do this an arbitrary [831] number of times I go back to base 64 [833] encode then base 64 decode and [836] hypothetically we can make this thing [837] you know the distance from here to mark [839] um but I'm sure you guys can guess it's [841] kind of pointless to do so so this is [843] sort of a niche function I do use that [845] function uh I use one of the two [847] functions reasonably often when I'm [849] doing certain API calls because [850] sometimes you need to base 64 and code [852] an API key or base 64 and code a [854] credentials usernames passwords that [856] sort of thing the only thing I want you [858] guys to take away from this if you're [859] unfamiliar with it is next time you know [861] a service says oh you'll need to base 64 [863] and code a string well now you know all [864] you need to do is just go to your string [866] press period and then type in base 64 in [868] code while you're [870] done okay continuing on down we now get [873] to another function that I use [875] reasonably often one called concat conat [877] basically just allows you to take your [879] string and then add on another string to [881] it you kind of think of this as like a [883] string addition right you're like [884] manipulating string you're sticking two [885] strings together so if I were to press [888] enter here go to concat then inside of [890] quotes I were to say space [893] world you can see here that my string [895] has now changed from Hello exclamation [896] point to Hello exclamation point space [898] world exclam point right the Cardinal [900] example of um you know you doing [902] something cool with a computer for the [904] first time now I should note that you [905] can also feed in uh more than one string [908] so you could actually feed in an array [909] of strings that's why the concatenate [911] function is kind of cool so I could [912] technically feed in [914] world and then I could go how are [918] you and then you'll see that you know [920] we've now taken um three strings we've [922] stuck them all together the first was [924] hello the second was world the third was [926] how are you right the next series of [928] functions I use all the time and they're [930] the extract functions for Strings so we [932] have four extract domain extract email [934] extract URL and then extract URL paths [937] and basically the way that this works is [938] this is just something that allows you [939] to pull out um a domain name from a [942] string that you supply that might [943] include it uh you can pull out like [945] email addresses you can pull out the [947] whole URL instead of just a domain or [948] you can pull out everything after the [950] the backslash at the end I'll show you [951] what I mean by all this right now so I'm [953] going to use extract domain first the [955] way that extract domain works is you [957] either feed in a URL or you feed in a uh [960] I believe like an email and it'll [961] basically tell you what the domain is [963] obviously you know this isn't rocket [964] science if I delete the hello string [966] here because this isn't actually have um [967] any domain inside of it which is why [969] it's returning undefined if I were [970] instead to type something like um Nick [973] left click. a you'll see that extract [976] domain extracts left click. okay uh [981] conversely if you were to just go left [982] click. would remain the same if you were [984] to go https colon backback slash it [987] would only extract the left click a [989] portion and there are a variety of [990] instances in which this is useful um you [992] know a lot of the time when I'm web [993] scraping for either myself you know [995] people pay me to build a web scraper for [996] them or if I'm doing it for uh one of my [999] businesses you know a lot of the time [1000] I'm I'm scraping the web for uh strings [1005] using a regular expression that follow a [1007] certain pattern maybe something like [1008] this well this is just a quick and easy [1009] way where I could feed those strings in [1011] and then I could extract the the domain [1012] name because domain names and URLs are a [1014] little bit different and a lot of the [1015] time you need a domain name for [1016] something that you don't necessarily [1017] need a URL for so that's just a quick [1019] example of something that allows you to [1020] extract if I were to add um some spaces [1023] over here though you'll see that it it [1024] breaks so this does not work if you feed [1026] in like multiple or something like that [1028] it's only really going to work if you [1029] feed in one and then you just want to [1031] extract a portion of it but this is you [1033] know comparable to you slicing the [1035] string in halves instead of you having [1037] to do some sort of fixed type of data [1038] processing where like you're looking for [1040] the string that occurs after the second [1042] uh backslash you know you can just put [1044] extract domain in there and it'll [1046] basically just always get you exactly [1047] what you want whether or not they are [1049] you know threel uh top level domain [1051] endings or two letter like I have over [1053] here right so very flexible very nice [1057] the second function that I'm going to [1058] show you is called extract email so as [1061] I'm sure you guys can imagine if you [1062] feed an email into this it will return [1064] with said email if I go back to that [1066] other example and go Nick left click. [1068] right so we see here um we're now we're [1070] now extracting Nick left click. you know [1073] what's pretty cool if I add a bunch of [1075] other text here to the beginning and [1076] then to the end this is different than [1078] the extract domain unfortunately the [1079] documentation is pretty poor but if I [1081] feed in a bunch of additional [1082] information let's say I scraped a [1084] website and we just have tons of text [1086] and then just somewhere in this text [1087] there's one little line that says Nick [1089] left click. okay one tiny little line [1092] This Will extract and pull out the [1094] nicket left click. based off of like an [1096] email formatting mechanism um whereby it [1099] looks for a little string and then it [1100] looks for some at symbol and then it [1101] looks for some domain ending so that's [1104] really really useful you can use this [1105] just as your email extractor you know [1107] you are going on a website or something [1109] like that you feed in the entire string [1111] of the scraped website to this function [1113] and then it just pulls out the email [1115] addresses for you I think you guys could [1116] probably come up with a million use [1117] cases for something like [1119] that okay let me just put this back in [1121] here because I hate when it screams at [1123] me with red and we're going to move on [1124] to the next function which is extract [1127] URL so similarly the way that URL works [1130] is uh a little bit differently from [1132] extract domain um in case you guys [1134] weren't aware this is the domain name [1135] right over here but this is the UR [1139] so the URL tends to have some sort of uh [1143] and I forget I think this is just the [1144] protocol then you have some standardized [1146] delimiter which is usually this colon [1148] and then these two backslashes and then [1150] you have the domain name okay that's how [1152] that works so this will actually extract [1154] a URL based off of the presence of this [1156] now if I take out the P right it's going [1158] to break because there is no protocol [1159] called [1160] htts but I could take out the S and that [1162] would work CU there is a protocol called [1164] HTTP I'm unsure if FTP Works yes FTP [1167] Works um SSL work no um SSH sorry uh no [1172] anyway there variety of these protocols [1173] feel free to look them up um if you guys [1175] are curious what sort of URL protocols [1177] there are um and sort of like URL [1179] structures but uh yeah this is just a [1181] quick and easy way to get the whole URL [1182] which can be very useful and then from [1184] here what I want to do is show you the [1186] last one which is called extract URL [1188] path and the way that extract URL path [1190] works is as opposed to getting the URL [1192] itself which is everything sort of if I [1194] put a slash here it's everything before [1196] this line um in like the HTTP protocol [1200] um they they call everything after this [1202] first slash the path and a lot of the [1204] time websites and services and stuff [1206] like that they'll actually store a ton [1207] of important information after that that [1210] backslash if I show you guys what this [1211] looks like on nadn in particular you'll [1213] see that this is my cloud um account so [1215] if I were just to make this practical [1217] this is the URL right over here it's [1220] https backb Nix arrive. app. nn. Cloud [1224] okay this is the this is uh well I guess [1227] this is part of the URL but this is like [1228] the the root part of the URL this is the [1231] protocol this is the domain name and [1233] then this over [1235] here is a URL path called workflow slash [1241] and then I have the ID of my particular [1243] workflow that Ed and uses to grab data [1245] from its server and then ex uh display [1248] it to me so if I wanted to extract this [1250] URL path if I just feed in this whole [1251] thing just as an example and replace my [1253] little left click. a example you'll see [1255] that what uh results when I extract the [1258] URL path is basically it goes to this um [1261] backslash and then it gives me the [1263] backslash plus the term afterwards [1266] workflow plus everything after um you [1269] know the next slash and the way that [1270] URLs work is you can go arbitrarily deep [1272] over here okay if we continue down the [1274] function list the next one up is called [1276] hash now if you're unfamiliar what a [1278] hash is a hash is basically like a [1281] mathematical algorithm applied to a [1284] string that converts it into just some [1286] big long number the conf fusion with [1289] hash tends to be that the number that it [1291] generates has letters in it so if I take [1294] this string htps colon backb mix. [1297] appcloud I take this here then if I hash [1300] it according to their default algorithm [1302] which I believe is md5 you can see we [1304] get this long result here and the reason [1306] why a lot of people don't understand [1307] these hashes and you they're so scary is [1309] just because this isn't actually like a [1312] string this is a number um in something [1314] called heximal hexadecimal [1319] is just another number [1321] system where instead of it going up to [1323] 10 it goes 0 1 2 3 4 5 6 7 9 8 9 and [1328] then it goes A B C D E and F you know [1331] how binary is zero and one well there's [1334] technically a bunch of different number [1335] formats there's binary which is 0o and [1337] one I think there's quinary which is 0 1 [1339] 2 and three um you know there a bunch of [1343] other ones right there's like a number [1344] system based off five number system [1345] based on six 7 8 9 are number number [1348] system just tends to be based off of 10 [1350] that's why it's 0 through 9 but this [1352] heximal is a number system based off 16 [1354] and the thing is we just don't have any [1356] other characters that we can use so uh [1359] or I don't know it just wasn't [1360] convenient to invent new characters for [1361] the 10th thing the 11th thing the 12th [1363] thing the 13th thing the 14 thing the 15 [1365] thing so what uh computer programmers or [1368] scientists the people that developed [1369] this um you know standardized format did [1371] is they just decided to use the letters [1373] a b c d e and f so you can think of it [1375] as this uh you know the number three [1377] corresponds to the number three um a [1380] corresponds to number 10 B corresponds [1383] to number 11 C is 12 D is 13 14 and then [1387] this is 15 and the reason why it stops [1389] is 15 is because we start from zero so 0 [1391] to 15 is technically 16 um you know [1394] different numbers so you know this is [1396] one of the main issues with people in [1398] hashing I find you know the hexad [1399] decimal just doesn't really explain [1400] super easily U but essentially all all [1402] that a hash does is a hash is just like [1405] an algorithm that takes a string so if [1407] we just go hello instead of this takes a [1409] string and then just performs a bunch of [1410] string manipul sorry um mathematical [1413] manipulations on the value of H which I [1415] don't know might be 85 or something [1417] whatever the the computer programmers [1419] that came up with the standard for the [1421] the numerical value of every letter is [1423] and then it turns it into something that [1424] is just not easily interpretable by by [1426] humans um the benefit of having a hash [1428] is you can then de dehash this and then [1431] you can regenerate this from uh you know [1435] this 5D 4142 back into Alo um and what [1438] you find hashes commonly used for as I'm [1440] sure you're aware are security [1442] applications so things like hashing a [1443] password for instance and there's this [1445] big uh common saying in any sort of [1448] computer security and that's never store [1450] passwords in plain text um the [1452] alternative to PL text is hashing the [1453] password in some way so I'm not going to [1455] go too much into this as I'm sure you [1456] can imagine it's very Niche and this [1457] doesn't really make you money to be [1458] honest I mean like you know if you're in [1460] some computer security thing possibly um [1463] but there are some values you can feed [1464] this and the only real values that [1466] matter here are md5 Bas 64 sha1 sha224 [1471] sha256 Shaw 384 Shaw 512 Shaw 3 ripe [1475] md60 uh these are all just different um [1477] these are all just different algorithms [1479] so if the default is md5 if I were to go [1481] instead and go base 64 you'll see that [1484] we've now uh basically done the same [1486] thing that we did with the base 64 [1487] encode um function right but uh if [1490] instead we want to do Shaw one or [1492] something you know we get this shot 224 [1494] um shot 256 sha 512 these tend to get [1497] longer and longer and longer the higher [1499] the the Sha number thing at the end just [1501] because this basically represents more [1503] and more complexity so I'm going to [1505] leave it at that but just know that [1507] there are going to be a couple of [1508] instances that may ask you for hashing [1510] on some point in the future but is [1511] somebody that's made tons of money with [1512] no code platforms uh you know I don't [1514] know in like over a 100 projects I've [1516] had maybe one uh require me to Hash [1519] something that was just really briefly [1520] for like one tiny section okay the next [1522] function I want to run you guys through [1523] is one called quote it is similar in [1526] hash and so far that I don't use it a [1527] lot um all quote really does from a [1529] bird's ey perspective is just wraps your [1531] thing around um your your stringing [1532] quotes right so if I just remove this [1534] you'll see that it is now hello and if I [1536] go back it now wraps it in these these [1538] quote signs but quote can actually do a [1540] lot more than that it's actually kind of [1541] useful when you start getting into [1542] sending and receiving data through um [1544] you know HTTP requests or web hooks just [1546] because a lot of the time you have to [1547] sanitize the data that's being sent let [1549] me show you guys a quick example so if [1551] there's one thing that you guys might [1552] not know um you know how earlier we [1554] defined a string with these two double [1555] quotes and then I you know wrote it down [1557] over here [1559] okay um well hypothetically let's say [1562] somewhere in my string I wanted to use [1564] another [1565] quote what happens if I try and do this [1568] well this breaks the whole string right [1570] and the reason why is because there's [1571] just some built-in logic in string [1573] parsers parser is just the thing that [1575] determines whether or not it's a string [1576] but there's some built-in logic and [1577] string parsers that sees this quote then [1580] it sees this one and says oh this must [1581] be the string then it sees that one and [1583] then that one it goes like Oh No No No [1584] this must be the string then it sees [1586] that one and that one it's like no no no [1587] this must be the string well how many [1588] strings are there I can't do this and [1590] then it just quits so there are a couple [1593] workarounds when you're using quotes [1595] inside of a string the first is instead [1597] of wrapping in double quotes what we do [1598] is we just wrap it in single quotes and [1599] the second that you do that like this [1601] technically this this is now technically [1602] a valid string again but you'll see you [1605] know if I just go back here you'll see [1607] that if I try and add quotes inside of [1609] this now with this quote function I'm [1611] something really interesting happens and [1612] basically what happens is this this [1614] feature called [1615] escaping so a lot of the time in order [1618] order to prevent this exact issue that I [1620] was talking about from occurring what [1621] you can do is you can escape a a quote [1623] sign which is um you can precede it with [1625] this like reverse backslash character [1627] what this reverse backslash character [1629] does is this just like cancels out [1631] actually is this a backslash I don't [1632] know it was a reverse backslash or a [1634] forward slash anyway [1637] um that's funny I've probably been [1639] calling one the other my entire life but [1641] hey might as well have that realization [1643] during filming of a YouTube video right [1645] so uh the way that this works is we are [1647] escaping this character with this back [1649] slash with this slash character I'm just [1650] going to use slash to like keep my [1652] sanity and then because we have this [1655] slash in front of it um basically all [1658] string parsers and formatters will will [1660] take a look at this and say oh okay I [1661] can actually ignore the formatting of [1663] what happens next so let me show you [1665] guys an example using what I did earlier [1667] see how it says Nick says hi if I [1669] actually put a slash here and then a [1671] slash here it's now like an acceptable [1672] string right but I have to do that [1674] manually every time right this kind of [1676] annoying anytime I'm I'm I'm writing [1678] adding something and I basically have to [1679] go find all the quotes and replace them [1681] well guess what that's what our quote uh [1682] function over here does it just does all [1683] that automatically for us so if you wrap [1685] the outside with the single quotes [1687] instead then I remove [1690] this uh like this you'll see that it's [1692] actually gone through and it's added in [1693] the the B the slashes for us um so this [1697] is just a form of I don't want to say [1699] Niche because this can be quite often [1702] you know used in quite often in many [1704] applications depending on what you like [1706] um it says a as use some one construct [1708] inting Json SQL these are all uh you [1710] know formatting conventions for sending [1712] and receiving data over the internet but [1714] this this allows you to do that this has [1716] one parameter it's the mark so you can [1718] um actually select the quotation mark [1719] that you want to cancel it out with [1721] which is pretty neat so if you want to [1723] wrap something let's just go back to our [1724] hello example if you want to wrap this [1727] in different quotes then you could go [1729] single quotes like this you could also [1731] just create whatever quote you want so [1733] hypothetically let's say that the I [1734] don't know the underscore is my new [1736] quote character well I can just um have [1738] that wrap everything okay let's cover [1740] the next string function as you can see [1742] we are making some good time the next [1745] one here is one called remove markdown [1748] now markdown is another example of a [1749] formatting convention and you'll see [1751] that this is in large part what string [1753] manipulations are for they take some [1754] formatting convention and they just fix [1756] it for you so the way that markdown [1758] works and this is kind of beyond the [1759] purposes of this [1761] discussion uh let's just look this up [1763] really quickly there's some basic syntax [1765] guide here feel free to check this out [1766] if you want but this is very common used [1768] when you are calling um large language [1770] models and open Ai and CLA and these [1772] various services to turn text um so that [1775] it's not just plain text but actually [1777] has some sort of formatting so here's [1779] markdown on the left markdown if you [1780] want to like create a header what you do [1782] is you add a dollar sign dollar sign you [1784] add a number sign and then a space and [1786] then the header if you want to do like [1787] an H2 you go two H3 three they show us [1791] what it looks like in HTML as well which [1792] is another um markup or rendering uh [1794] language over here and you can see that [1796] you know if you want to do the [1797] equivalent thing if from markdown in [1798] HTML you need to wrap this in some H1 [1801] tags markdown is a little bit more [1802] efficient as you can see the total [1803] number of characters used to represent [1805] the same information was just two here [1806] instead of 1 2 3 4 five 6 7 8 nine and [1811] so when you communicate with large [1812] language models you know obviously the [1814] main benefit there is um you know the [1816] fewer tokens the fewer characters the [1818] less money you tend to be built [1819] especially with these bigger apis so [1821] that's why everybody just tends towards [1822] markdown in order to get rendered [1823] outputs like this so all that function [1825] that remove markdown does as [1828] hypothetically if I go back to creating [1829] my own string again and then I were to [1831] say heading one you'll see that this [1834] just takes out the markdown formatting [1836] it has a built-in parser again that [1838] looks specifically for instances of [1840] these number signs for headings um if I [1842] were to add two 3 four 5 6 7 8 you know [1845] as you can see nothing nothing really [1846] changes here um there is you know it [1848] does add a space which is interesting [1850] but I don't believe it adds a space um [1851] on anything up to six yeah so anything [1854] up to and including six doesn't have [1856] space it does on seven why cuz this is [1858] no longer considered um like uh like [1861] there is no heading seven hypothetically [1862] and so now it says okay this just must [1864] be like a bunch of bogus markdown um [1868] number symbol stuff um so this must [1870] actually be a real character we're going [1871] to render the space the peculiarities of [1875] markdown aren't super important just [1876] know that you can remove it all with [1877] something like this if you want [1879] similarly um there's also a function [1882] called remove tags which works as I'm [1884] sure you can imagine very similarly to [1885] remove markdown it's just all this does [1887] is instead of removing markdown if you [1888] go back to our markdown and HTML [1890] comparison here it just removes the HTML [1892] tags so this is considered a tag in HTML [1895] if I already go back to my end function [1897] and if I were to try and create a new [1900] heading called heading one what this [1903] will do is it'll jump in it'll actually [1904] just remove all instances of this now [1907] when is this useful um well I'll give [1909] you guys a quick and easy example just [1910] because I think that this is something [1912] that I do often enough for it to [1914] represent like for it to be valuable but [1916] if I go and I do an H HTP request to my [1918] own website notice how on the right hand [1920] side here I receive a bunch of HTML [1922] that's kind of a lot of HTML right now [1924] if I go and I add another edit Fields [1926] node and then I go manual mapping and [1929] then I go um no tags if I feed in my [1934] data and then if I go remove tags what [1938] you'll see is I've basically gone [1940] through and if I just expand this a [1941] little bit so we could see big I've [1942] basically gone through and I've taken as [1944] input all of this ugly looking HTML then [1947] I've gotten as outut just the plain text [1949] of the website basically and when you [1951] have the plain text of the website not [1952] only is it a lot more token efficient [1953] when you're calling large language [1954] models and stuff like that um you know [1956] you could you could run like searches [1957] over this it' be easier faster and so on [1960] and so forth so this is just a principle [1961] of like removing waste so that's how [1964] You' use that um the next function I [1966] want to talk about if we just go back [1969] here and then select my dollar sign Json [1971] and then go back to string the next [1974] function I want to talk about is called [1976] replace now as opposed to replace all [1978] which I use a lot more often than [1979] replace what replace does it just [1980] replaces the first element that uh it [1983] sees with another element it doesn't [1984] just replace every instance of it um in [1987] the entire string so remember how [1988] earlier replace all took L's and then I [1990] replaced them all with W's and then it [1992] was H well in this case um if I were to [1994] try and replace an L with a W it would [1996] go hell hell low instead because it's [1998] only grabbing the first one if I switch [2000] this back now to replace all it does um [2003] all characters but if I go back to [2004] replace you see it only does one so it's [2006] kind of neat um you know it's a little [2008] bit Niche I mean there aren't too many [2009] situations in which you want to replace [2010] one character and not replace all [2012] characters at least in my experience um [2014] there's another function here called [2016] replace special cars basically you know [2018] a lot of other languages than English [2020] will have things like accents so like on [2022] FR you have Deja you have ex and Exon [2025] right so these are two like special [2028] formatting characters that sometimes [2030] unfortunately apis do not support what [2033] this does is it just allows you to take [2034] them out so if you know I had [2038] uh o how the hell am I going to write [2040] that I just realized that I don't [2042] necessarily have any of [2044] these um you know if I was going to [2047] write something like you know [2050] J let's go back here what this will do [2054] you know if you feed Jou into replace [2056] special characters um the output is just [2058] going to be zuu like without the the [2060] exante um on the right hand side of this [2062] and you know this doesn't just apply to [2064] French obviously there's a ton of [2065] languages out there with all sorts of [2066] things above letter [2068] like omls and stuff like that in German [2070] I believe that's how you how you [2071] pronounce them anyway any Germans in my [2073] uh audience feel free to roast the hell [2074] out of me and yeah it's just a quick and [2076] easy way to just replace those before [2078] you do an API call to a service that [2080] doesn't support them so if you're [2081] calling a service um and then it just [2083] like keeps on giving you weird error [2085] messages that you don't fully understand [2087] uh and your input includes one of these [2089] characters with like uh an accent above [2091] or some sort of marking or symbol um [2094] call replace special cars and give it [2095] another try I use this maybe like 5% of [2098] the time most apis are pretty good now [2099] but some of them are still sort of [2101] modernizing okay the next function is [2103] called slice now slice is pretty [2105] interesting I use slice all the time if [2107] I go and select Json string what slice [2110] does is it basically allows you to [2112] select a substring but not based off of [2115] characters but actually based off of um [2117] the number of characters from the start [2119] or the finish so we're not slicing based [2121] off of L to O well I mean like we can if [2123] we want but I guess what I'm trying to [2124] say is um we're we're feeding in the [2126] character order and the position and [2128] then we're using that to extract a [2129] substring so everything is zero index [2132] that just means it starts at zero at an [2133] so this is technically the zeroth [2134] character this is the first character [2136] this is the second character if I were [2138] to try and grab everything from zero to [2141] zero 1 second third uh I think fourth [2145] maybe I'd go Zer to four and then it [2147] would say hell right if I instead wanted [2149] to grab every you know if I just wanted [2151] to grab the O I'd probably go um 5 to [2155] six no I'd go four to six then I go grab [2157] the O and then the exclamation point [2159] there is some Nuance regarding the start [2161] position and I believe the second one is [2163] inclusive um you also don't necessarily [2166] always need to have uh the second value [2169] here so you can actually just feed it in [2170] a start and then it'll just [2171] automatically run to the end of the [2172] string that can be pretty useful because [2174] you know sometimes you don't know the [2175] length of the string right sometimes you [2177] just want to grab everything from like [2178] the third character onwards if you think [2180] about it using our previous [2182] example let's say I have um something [2184] like this well instead of using the [2186] extract domain you could use slicing is [2188] an alternative to you extracting a [2189] domain if you wanted to obviously the [2191] only issue would be if you know somebody [2194] removes the the the S and it's instead [2196] like an unvalidated or non-secure [2198] request then all of a sudden we leave [2199] the first letter so it's usually better [2201] uh in those cases to do to use the tools [2203] that were sort of meant for this um and [2206] then you'll be able to handle any [2207] flexible amount um that you'd like but [2210] yeah slicing has a number of uh cool use [2212] cases I would say so I'm a [2214] fan generally a fan of the slice [2217] function [2218] let's go back to json. string and let's [2221] see what's next um we already covered [2223] split so I'm just going to cover that [2225] next up we have something called [2226] substring substring is for my [2228] understanding basically the exact same [2230] thing as slicing I'm not really sure why [2232] there are two to be completely honest um [2234] all this does is just Returns the same [2236] thing that slice does so let me give you [2237] an example if we were to go uh 0 to 4 [2241] it's hell if we just replace this with [2242] slice as you see the result doesn't [2244] really change so I'm not really sure why [2246] substring exists to be completely honest [2249] um but yeah uh this is this is just [2252] personally what I always use I like [2254] slice better than substring CU how much [2256] cooler does slice sound we're slicing a [2258] string than versus we're extracting a [2261] substring you should just operate purely [2263] off of Vibes clearly um anyway next up [2267] we have a function that I use pretty [2268] often it's called trim basically what [2270] happens a lot of the time especially [2271] when you're scraping resources is you [2273] will get data but that data will tend to [2274] have like a variable amount of Whit [2275] space to the left and to the right white [2277] space is means a bunch of spaces or new [2278] lines or something trim just removes all [2280] of that for you so um you know I mean [2282] they give you an example of lonely let [2284] me show you what this might actually [2284] look like with a string that we type in [2287] you know this [2289] is hey how's it [2292] going google.com and then we have [2295] another space what this does as you can [2297] see here there are three spaces there's [2299] one at the beginning there's one in the [2300] middle and then there's one at the end [2302] what this does is it just removes the [2303] ones uh on the on the end same thing you [2305] know if we added well I mean you can't [2307] really do but if we added like a bunch [2308] of new line characters uh tab characters [2310] as well um this isn't actually like [2312] taking any of those because the part of [2314] the part of the way that this works is [2316] it just looks for the presence of that [2317] slash and then the the NT and I think [2320] there's one more um these characters [2322] just denote like a new line uh which is [2325] pretty useful to uh to to use so yeah I [2328] like to use trim basically anytime that [2330] I'm feeding in a string that may have [2331] some sort of variable white space when [2333] I'm scraping I use trim all the time um [2335] and you know just kind of make sure that [2336] my data is stand standardized formatted [2338] well and then I'm not just like asking [2339] for any additional like I'm not using [2341] any additional characters or tokens [2343] there's trim end and then there's trim [2344] start um this just does the same thing [2346] that I showed you guys earlier it's just [2348] it preferentially removes things at [2350] either the start or at the end so trim [2351] end obviously just takes this out if I [2353] already Chang this to trim start it [2354] would obviously just take that [2356] out but I just tend to use trim more [2359] generally we have two more functions [2360] under edit and those are URL incode and [2363] then URL decode now if you're unfamiliar [2366] with how this works usually [2367] um when you are dealing with a URL of [2370] some kind you have characters that look [2372] kind of like this you have percentage [2374] signs threes um I think those rep uh [2377] percentage sign 3D I think those [2378] represent an equal sign percentage sign [2380] 20 that represents a space the reason [2382] why you do this is because you can't [2384] actually just legally have you know like [2386] if if this is My URL you can't actually [2387] legally have um a bunch of spaces so [2390] actually let's go back and let's go [2391] docs.google.com like you can't say hello [2394] how are you this would not be a valid U [2397] URL right but what you could do is you [2398] go um number sign 20 number sign 20 [2401] number sign 20 number sign 20 and now [2404] this would be like an actual URL now [2406] this is not a real URL but it but it is [2408] like it's not um it's not a URL somebody [2410] has created but it is a real URL like we [2413] can actually press enter and and format [2414] it so all that this does is it basically [2416] converts um something that may include [2419] those characters into something that [2421] doesn't and uh vice versa so let's [2423] hypothetically say you wanted to go to [2425] left click. a and then you wanted to go [2427] to I don't know um blog post call let's [2432] go [2433] blog and then we go a post with the name [2438] of awesome okay if we URL encoded this [2443] what it would do is it would take all of [2444] the characters that aren't really like [2446] legally allowed so you know in our case [2449] mostly these spaces you see it actually [2451] also does some Transformations under the [2453] hood to colons and backslashes and stuff [2455] like that just because these characters [2456] aren't technically being rendered um [2458] it's just a way that um you know it's [2460] just kind of a quirk of how the browsers [2461] are rendering these to us but in reality [2463] when you like request to a server or [2464] something like that they're they're [2465] being encoded and then uh what you can [2468] do is you can then subsequently decode [2470] this and you can kind of transform it [2471] back to your your initial URL so [2474] sometimes you'll just see an API or [2475] something that'll say you know this [2476] requires like URL encoded um or I don't [2480] know this this requires stuff encoded in [2481] a certain way um you can use URL en code [2484] when you're sending and receiving and [2485] making requests to things I've basically [2487] never really use this in practice um but [2489] it is uh something that they offer to [2491] you as a tool in case you need to okay [2494] next up we have a bunch of query [2495] functions you've already cover covered [2496] ends withth and includes now I'm going [2498] to cover index of index of is pretty [2500] cool it basically allows you to find a [2501] substring that is present inside of the [2503] string and then tell you at what index [2506] did that substring occur this can lead [2508] to some really interesting string [2509] manipulations and um some cool use cases [2511] where like you'll you'll find the index [2513] of something first and then you will use [2515] that to take a slice or something from [2517] from one character to another and then [2519] do a bunch of other cool stuff um send [2521] and receive data that way but uh yeah I [2523] mean in our hello example right if I [2525] were to feed in index of H what do you [2528] think would happen we'd feed in zero e [2530] would be one L and the thing about L is [2533] notice that you know um I have two L [2535] characters there right so if I really [2537] wanted to get the index I'd have to go L [2540] because that's a unique character there [2543] um I could also go o which be four I go [2545] exclamation point which be five and go [2547] hell I could go l i could go LL I could [2552] go low and then I could go o exclamation [2555] point and then I could get like [2556] basically a a sliding window of two [2559] characters instead but just notice how [2560] it always grabs the beginning of that in [2563] their example Steam and then T we are [2566] finding the first um index because s is [2569] at zero T is at one and then even though [2572] it's three characters tea it still [2574] starts at one which is pretty neat so [2576] yeah index of not super often to be [2579] honest I usually don't need to search [2580] through things um numerically like that [2582] but you know it's a good function to [2584] understand last index of is very similar [2586] to index of but it solves that problem [2588] that we had a moment ago with the l so [2590] um you know if we go index of and we [2592] just type in an L the result is two but [2595] if there are instances where we might [2597] have um you know some characters [2599] repeated multiple times or something you [2600] can grab the last index of L and notice [2602] how that is now three in our hello [2604] string next we have match match is [2606] pretty interesting and you sort of need [2607] to understand a term called regular [2609] expressions in order to really get it [2611] but essentially this is a much more [2613] powerful find and replace sort of tool [2616] um I don't know if this function in [2617] particular allows you to replace [2618] something I don't believe so but it does [2620] allow you to find the thing and then you [2621] could always just like grab that thing [2622] and then replace it later but um [2624] basically let's say we have a string [2626] right and instead of hello I'm going to [2628] use a much more varied example I'm going [2630] to say um hey man how are you doing [2634] today okay and hypothetically let's say [2637] we want to find the man or um we want to [2640] extract the man string so if man is [2643] present inside of this we want to [2644] extract it if it's not then we don't [2646] want to okay what we do in order to do [2648] this is we we' build up something in [2651] What's called the regular expression I [2652] think like templating language so uh [2655] instead of just like identifying the [2656] thing we're actually going to extract it [2658] and the regular expression templating [2659] language like it looks kind of weird as [2661] you can see here there's some there's [2662] some back slashes and then there some up [2664] arrows and stuff like that it's it's not [2666] super difficult to do um if I were to [2668] just type in a back slash R and then if [2671] I were to type in man and then another [2672] slash sorry if I were to type in a backs [2674] slash and then man and then another [2676] backslash and I really got to stop using [2678] the term backslash here um you can see [2680] that it did in fact extract man but [2683] hypothetically I could also um you know [2685] instead of just looking for man and like [2687] hard coding it like this because this [2688] really doesn't do anything for us right [2690] instead what I can do is I could look [2691] for all instances of threel words okay [2694] so um in this language it would be [2697] A to Z A to [2701] Z then it would be A to Z A to Z when I [2706] just copy that one last [2708] time and then we do that one more time [2711] now um in our case we're we're matching [2713] the first instance of this um but if we [2715] wanted to match all I think we' we'd [2717] feed in a g operator which be um this [2720] backs slash this slash and then this g [2722] at the end just because regular [2723] expressions are sort of outside of the [2726] scope of a video like this and because [2727] it's an entirely new language um my [2729] go-to is if you want to build a regular [2731] expression if you need one and there are [2732] many many instances in which you will [2733] need one head over to this website over [2735] here Rex 101 you can insert whatever [2738] your string is that you want hey how are [2740] you doing today and then sorry you'd [2743] actually insert the test string down [2744] here and then you actually have the [2745] ability to play around live and see how [2747] your changes extract various parts of um [2750] the text so as you can see we have this [2752] backs slash at the very beginning dang [2754] this slash at the very beginning we have [2755] the slash at the end and then we have um [2757] some options here um these options [2759] always just occur after the last slash [2761] so in our case Global and multi-line um [2763] again this uh this resource will explain [2765] everything to you if you look at it but [2766] if you wanted to extract the man you [2768] might type man um it's going to say that [2770] it's not matching the subject string [2771] because we don't have man in it but if [2773] we say how right you'll see that as I [2775] type h it illuminates two elements that [2778] are being extracted ho o now it's these [2780] and then h w there're also a bunch of [2782] really cool things maybe we want to go [2784] like you doing right but maybe instead [2787] of you doing we just want to find the [2789] presence of you and then we want to [2790] extract everything from you all the way [2791] to the end well if I were to do that [2793] then um I could just go a period which [2796] matches any character and then I could [2797] multiply it an infinite number of times [2799] go to the end or maybe I want to grab [2801] everything before the U so i' go period [2803] you and now I extract everything here [2805] you can also play around with the [2807] presence of um these two brackets this [2809] allows you to extract specific sub [2812] elements or sub strings from the parent [2814] string um so as you can see here now we [2816] have a green section [2817] that is illuminated because we've [2818] wrapped this in a capture group and then [2821] the the blue U section is sort of also [2823] captured but it's not in our captured [2825] group and yeah that's just more or less [2827] a quick little rundown of what you can [2829] expect if you were to go I'm super deep [2831] in regular Expressions uh I should also [2833] note that an AI is really really good at [2835] coming up with radio expressions for you [2836] like if I were to feed in this and then [2840] I were to say I want a regular [2842] expression to [2845] capture um all threel words in the above [2849] string better to press enter and I'm [2851] just using a new model called O3 mini [2853] High uh it's new as of the time of this [2855] recording and probably not going to be [2856] new by the time that you guys watch it [2859] but if I were to do this uh I would get [2861] something like this and notice that it's [2862] always going to start with a slash so [2864] going to end with a slash and if I were [2866] to feed this [2867] in if I were to remove the beginning and [2870] at the end what you can see is we [2871] basically gone through we've extracted [2873] all three letter characters um and three [2875] letter words and it's done a really good [2876] job of it so you know over the course of [2879] the last I want to say six months or so [2881] AI has gotten to the point where he can [2882] do this um as the time of this recording [2884] uh and if you know you're wondering how [2886] exactly to do regular expressions and [2888] you're watching my video and you're like [2889] what the hell is that guy doing um AI [2890] can can do an even better job than I can [2892] like 90% of the time already so they're [2895] automating my regular Expressions what a [2897] dang shame next we have a another uh [2901] module or another function that uses [2903] regular Expressions but instead of [2904] returning the actual extraction what [2907] we're doing is we're returning the place [2909] that the character occurred so in this [2912] case we're searching for n and then [2914] we're going um I don't know I think this [2917] is like at the beginning of a word and [2919] then anything else after that and so it [2922] tells us hey what time does the first [2924] word start or in what position does the [2926] first word starting with n occur in this [2927] case it's 0 1 2 3 4 and then five um and [2931] keep in mind that regular Expressions [2932] tend to be case sensitive unless I think [2934] you specifically turn that off so it's [2937] not capturing the first capital end it's [2938] capturing the the second N I don't [2940] really use search basically ever to be [2941] completely honest um search to me just [2943] doesn't really have any value that index [2945] sub doesn't so uh from here on out we [2948] are now moving into the validate section [2950] so now we have a suite of functions that [2952] I use very often to validate whether [2953] something is a domain whether something [2955] is an email whether something is empty [2957] whether something is not empty whether [2959] something is numeric or whether [2960] something is URL let's start with domain [2963] so remember earlier how we fed in HTTPS [2966] col backb left click. right and then I [2969] said that this was a URL and inside of [2972] the URL you had a protocol you had some [2974] sort of delimiter and then you had the [2975] domain name well this will tell you [2977] whether or not what you're feeding in is [2978] a domain name so what do you think if I [2980] feed this in is this a domain the answer [2982] is no because we include we've included [2984] the protocol in the delimiter as well if [2986] I take this out is domain now revers to [2989] true now alternatively if I change this [2991] to is URL you'll see that this is true [2993] but if I just feed in a domain name [2995] you'll see that this is false because a [2997] URL requires all of the other subsequent [2999] components okay we have a couple of [3001] other ones that we can go into as well [3002] we can do empty so if a string is empty [3005] you can very quickly validate and check [3006] it so obviously is this empty no right [3009] but if I were to take this delete [3011] everything then yes it is empty we can [3013] go is not empty which is just the [3015] inverse of is empty so is is this not [3018] empty yes true this is not empty there [3020] is a bunch of stuff inside if I take it [3022] out is this not empty no it is empty [3024] because there is nothing inside and then [3025] similarly in the same vein um we can do [3028] a little bit of checking to see whether [3030] or not something is an email so if Nick [3033] at left [3034] click. AI you'll see that this converts [3037] to true because there is currently no [3039] top level domain that's just the thing [3041] at the very end here that isn't at least [3043] two characters right but if I were to [3046] just feed in a domain name that would [3047] obviously be false quick and easy way to [3049] do validation and verification and then [3051] there's also one for a numeric which is [3053] somewhat interesting basically what you [3055] have is the ability to check whether or [3057] not all that you fed in is is a number [3059] so you can feed in um integers you could [3061] feed in like decimals you could feed in [3063] like negative numbers and stuff like [3064] that um and if it's a number it'll tell [3066] you if you feed in an F or an e or [3068] whatever um then you know obviously this [3070] is no longer just a number it's also a a [3072] bunch of other characters here which is [3074] why is numeric is now reverting as false [3076] okay the next functions are very simple [3078] and very straightforward there are a [3079] bunch of case functions so there's two [3081] lowercase two sentence case two snake [3083] case two title case and two uppercase [3085] lower case is hopefully self-explanatory [3088] hello how are you doing Nick if I feed [3092] in this which has two capitalizations it [3095] just lowercases everything this might be [3097] useful when I don't know you're trying [3098] to convert something into a domain so if [3100] I were to go uh sorry convert something [3103] like like into a blog post slug so let's [3104] say I had a blog post title and it's 38 [3107] ways to make money online right and I [3110] wanted to convert this um into something [3112] that I could stick onto my my URL [3114] basically what I could do first is I [3116] could replace all instances of a space [3120] and I could do so with a dash and then I [3124] could just go a [3125] lowercase and what I'm doing now is I'm [3128] converting um this over to something [3130] that might actually fit inside of my URL [3132] pretty cool right that's what lowercase [3135] does now obviously there is an [3136] alternative and that is if I just remove [3139] this here um there are a bunch of other [3142] similar functions that change the case [3144] of the of the string that you're feeding [3146] in so if I were to say 38 ways to feed [3149] sorry to make money online and then I [3150] were to go to go uppercase well then we [3152] would just scream 38 ways to make money [3155] online but there are a couple of other [3157] cases as well there's something called [3158] sentence case the way that sentence case [3160] works for unfamiliar is it basically [3162] just capitalizes the first letter of the [3164] entire string so ways to make money [3166] online right if I were to remove this to [3169] sentence case you'll see that I'm [3170] basically taking all of these and then [3172] I'm I'm pumping them uh I'd have to [3175] remove this dot as well and then I'm uh [3177] bringing up all of the subsequent first [3178] letters of every word back up to Capital [3180] case for put this and I just remove that [3183] and then there's a there's a couple more [3184] there's one called snake case snake case [3186] is pretty interesting um this basically [3188] does uh almost like what I was what I [3190] was saying earlier with the URL [3192] replacement but instead of a dash we're [3193] doing an underscore and this is just [3195] like a way to like create variable names [3196] really quickly because there are two [3197] naming conventions for variables there's [3199] um camel case and then there's snake [3201] case snake case just always has [3202] underscores between every word because [3205] uh spaces are not represent Ed well in [3207] programming because parsers break and [3209] then the last one is to um title case [3213] and what you'll see is nothing changes [3215] between this and this the reason why is [3217] because this is already in title [3220] case all title cases is it grabs the [3223] first letter of all major words so I [3225] think uh words that are not connectors [3227] like to or at or a or the and it makes [3230] them Capital so ways make money men if I [3235] were to go at I guess that [3238] is oh no no it's not if I were to go at [3242] then at would not be a connector the [3245] right most would but not the so yeah I [3248] mean all of these are just different [3249] ways to turn something into um something [3251] else which is nice okay the next [3252] function is called parse Json it's [3254] pretty interesting U but basically the [3256] way that it works is a lot of the time [3257] when you receive queries from the [3260] internet like when you do some sort of [3261] scraping or when you consult an API what [3263] you get is you get something that has a [3265] lot of those escap AP delimiters that I [3267] mentioned those slashes before certain [3269] characters so I'll give you guys a quick [3270] example and you'll understand this [3271] intuitively let's say I have a string [3273] here okay and this string is like [3275] adjacent object so I'm going to go name [3278] and in order to do this I'm going to [3280] cancel it out and then I'll go um know [3285] Peter like this and then I'll wrap it if [3289] I Fe this into parse Json you'll see [3292] what happens is I'm actually parsing [3293] this out into an object like pre viously [3297] this is a string right the string is uh [3300] this curly brace the quote sign name [3303] other quote sign colon uh quote sign [3306] Peter and then quot sign and then this [3308] other curly brce but if I go parse Json [3310] what I'm actually doing is I'm [3311] converting this to an object I'm [3312] literally converting the data type into [3314] another data type um which I will be [3316] showing you um you know cool things [3318] about and if you if you parse this if [3320] you click test [3322] step um what you'll see is sorry uh what [3324] I'm what what I mean to say is now that [3326] it's parse what you can do is you can [3327] actually reference things inside of the [3329] variable of the thing that you just [3330] parsed so now for example I can actually [3332] just extract the name from this so I [3334] mean you know obviously I'm just writing [3336] this all out right now which is why this [3337] doesn't seem very useful you can imagine [3339] how if you receive a big long string [3341] well you can actually parse it directly [3342] in your expression editor which makes [3344] this super powerful um you know as I [3347] mentioned I don't use this super often [3348] uh just because I'm not like calling a [3349] lot of dedicated or hidden apis where I [3352] find that this typically comes up um but [3354] you know you you can you can use this so [3356] that you don't have to like add another [3357] node you don't have to like render [3359] something or or parse something in this [3360] node and then deal with it later what [3362] you can do is actually just like get a [3363] string that contains JavaScript parse it [3366] out and then you'll be able to extract [3368] whatever value you want so you know [3371] because this is an object I can now [3372] reference keys or I can get values right [3375] I can do a lot of other stuff with it um [3377] and I'm going to be running you guys [3378] through the object functions in a moment [3379] okay the next function is to Boolean [3381] boolean's pretty simple um basically if [3384] I feed in a one or a zero what I do is I [3388] convert this data type from a string [3389] into this Boolean which is true or false [3391] so zeros are false right zero is is um [3395] no it's off it's false in Boolean logic [3399] one is on it's true it's good right so [3403] um I'm basically converting this from a [3405] string into like a separate data type [3407] called true I rarely use this in [3409] practice because most of the nodes in NN [3411] that I'm realistically going to care [3413] about they're going to have some sort of [3413] type conversion built in this next one [3415] is called two date time this is actually [3417] super useful because a lot of the time [3419] you're going to be converting to and [3421] from some standardized date time format [3423] in order to do things like add a certain [3424] number of minutes add a certain number [3426] of hours the context here is nadn uses [3429] this specific type of datetime [3430] formatting called lexen date time but [3432] basically all this does is it just [3433] allows you to convert like a string into [3436] another type of object that you can now [3437] do math with basically uh which is [3439] pretty cool so I'll give you guys a [3441] quick example um just to show you guys [3442] just how many things are representable [3444] as dates if you just feed in like the [3445] number one it will find the first date [3448] of 2001 why I don't know there's just [3450] some logic that's going on under the [3452] hood but hypothetically if I were to [3453] grab the current date in um I think like [3456] uh DayDay no month month DayDay year [3459] year format it would be [3461] 0131 uh 2024 right so now this is [3465] converting um the current date to this [3468] standardized date format sorry I guess [3470] 2025 um it it converts into the [3472] standardized dat type format what's the [3474] cool thing about this well if I press uh [3476] here now what I can do is now I have a [3478] whole other function Suite available to [3480] me that includes datetime specific [3483] functions so now we can do a bunch of [3485] really cool things we could convert to [3486] local string and now this actually [3488] converts this into um the specific uh [3492] basically they grab my local and then it [3494] converts it into the specific type of [3495] string that people are most likely to [3496] see here so you can imagine this might [3498] be really really useful if you're [3499] working in databases or or something [3501] like that there a variety of other [3502] datetime functions as well which we're [3504] going to get into but yeah you can do [3505] things like extract certain times you [3507] can do things like subtract uh I don't [3509] know 5 days from January the 31st to [3512] give us January the 26th all this stuff [3514] ends up being super super valuable um [3516] when you're working okay great the last [3518] thing I want to cover is to number so [3521] let's say I have the number [3525] 12354 okay all this does is it takes the [3528] string that is 12354 converts into a [3531] number what do I mean by this well um [3534] numbers and strings are different right [3536] and so um all this is doing is it's [3537] allowing me to do a conversion from the [3540] string format of 1 [3542] 12054 to the number format of [3545] 12354 which means now I can do things [3547] like I can add so I just added five [3549] right if I already try adding five to [3552] the string all we do is we actually [3554] literally add the string five to it you [3556] guys kind of see what I mean if I go 1 2 [3558] 3504 plus 5 what I'm doing is I'm [3561] appending five to this four I'm [3564] concatenating but if I make this into a [3566] number well now we can actually perform [3567] a logic on it we can we can I don't know [3569] multiply it by five or 12 right if you [3572] were to not then you know if you were to [3574] try and multiply a string by 12 um I [3577] guess it would allow you to because this [3578] is like a very clear operator but yeah [3581] the the plus specifically is sort of [3583] like the the breaking example of doing [3585] mathematical operations on strings and [3587] this is equivalent to concat uh [3590] 12 as we could see here so basically all [3593] this is doing is it's just verifying [3595] that this thing is a number and then [3597] once it's a number we can do a ton of [3599] like really cool um you know math and [3601] and stuff like that with it uh I use two [3603] number reasonably often yeah a lot of [3605] the time like I'll grab a string that [3606] string is formatted in like a particular [3608] way um and then I extract it I turn it [3610] into a number and then once I've turned [3612] it into a number um you know I can I can [3614] do really cool things with it and then [3616] there's one other example here in naden [3618] where um you can have a number that's [3620] like 1.23 E10 that's like 1.23 raised to [3623] the 10 well you can actually take the [3625] string and then can convert it into like [3626] a usable number that you can perform [3628] mathematical operations on this is sort [3630] of like more of a scientific need so [3631] you're not going to use it super often [3632] but I do use two number just to make [3634] sure that my my types are okay okay next [3636] up we have the number family of [3638] functions this is pretty straightforward [3639] now that we've done string I'll say that [3641] string and array are probably the most [3642] difficult ones this one's going to be a [3643] little bit easier um let's just type in [3645] the number and now let's reveal all the [3647] functions available to us so the first [3650] one we're going to cover is round round [3652] is kind of what it sounds like if I were [3654] to feed in Json DOT number which in our [3657] case is 3.5 into round what happens this [3659] goes up to four if I were to try and uh [3662] change the number of decimal places and [3663] go two it'll round it to 3.5 if I go [3666] three it won't do anything because this [3668] number doesn't have any more decimal [3669] points right but yeah this will [3671] automatically round up to four which is [3672] just default Behavior anything um up to [3675] 3.4 999 repeater will round down [3677] anything at 3.5 and up will round up um [3680] and yeah this is just sort of like [3681] default Behavior it's it's great for [3682] like removing complexity from numbers [3684] and stuff like that now now I should not [3686] I want to show you guys a little bit [3687] more context here I don't just want to [3688] use Json number so if you want to write [3690] a number in n8n you could do so just by [3692] wrapping um round round brackets around [3695] it like this so if I'm ranting 234.567 [3716] around to the six decimal point all the [3717] way over here right if this is a two a [3719] three it would be down if it's a a six [3722] it would be up right because we have a [3723] five down here anyway point I'm making [3725] is you can round stuff and rounding is [3726] cool all right now why don't we do the U [3729] more directed version of round which is [3732] where we specifically say am I aiming [3735] for the floor am I aiming for the [3736] ceiling so if I aim for the floor of 3.5 [3739] what do you guys think is going to [3740] happen this is going to return me the [3743] number three if I aim for the Seal of [3745] three .5 what's going to happen this is [3747] going to return me the number four so [3749] basically this is just a directed way to [3751] perform your rounding operation sort of [3753] manually right 3.8 is always going to go [3755] up to four 3.1 is going to go up to four [3758] um if I were to replace this now with [3760] the number three caling of three would [3762] be three 2.9 would be would be three 2.1 [3765] would be three two would be two 2.1 [3770] would be three so it's interesting um [3773] you know just how much granularity nadn [3775] gives you in being able to manipulate [3776] numbers with this uh but yeah that's the [3778] way that seal [3780] works the next number function is called [3782] ABS that stands for absolute not my [3785] gripped six-pack basically when you feed [3788] in something like a number here um you [3790] can do so uh you know with with [3793] positives or with negatives or whatever [3795] all this does is just returns to you uh [3797] what's called the the absolute value of [3799] that number so ABS just says hey if [3801] there's any negatives something like [3802] that I just want you to get the absolute [3804] magnitude of it if I feed a [3807] 2.1 it'll just return me two so you can [3809] kind of think of it's just a way to [3810] strip negatives get only the actual [3812] magnitude of the thing magnitude being [3814] the distance from zero okay on top of [3816] that we also have a few other [3817] interesting ones like format now the way [3820] that format works is basically you know [3822] how sometimes Americans and Europeans [3824] will format numbers differently like [3826] sometimes Europeans might put like the [3827] Euro at the end of the sign or something [3829] uh end of the number and then Americans [3831] sometimes might put the dollar sign or [3832] usually at the beginning of the number [3834] um sometimes they use periods as [3837] delimiters in a thousand separators [3838] instead of commas and stuff format just [3840] deals with all of that now I'm feeding [3842] in 3.5 and I'm trying to format it that [3844] doesn't really make much sense for me so [3845] let me just feed in a bigger number and [3846] show you guys uh show you guys how it [3848] works intuitively let's say I fed in [3851] 3,4 [3853] 59,2 [3856] 121 if I were to leave this up to the [3858] standard way that the format module or [3860] format function I should say formats [3862] things I'm basically converting this and [3864] then I'm adding a bunch of these little [3866] um delimiters but I could also change [3868] this if I just add a period instead oh [3871] sorry if I uh my bad you didn't actually [3872] add the delimiter if I had the local [3874] string instead right if instead I wanted [3876] to go [3877] French you'll see that we've now added a [3880] space in between instead of the uh comma [3883] if I wanted to go um Dutch [3886] instead I think Dutch I may be mistaken [3889] but if I wanted to go dutch instead um [3891] we now add periods right this can be [3893] useful when I don't know you want to [3894] drop like a dollar sign in front or [3896] something like that right if I go here [3900] then now we have basically like a number [3903] that maybe we've done some math on to [3904] get to this point um and now we've [3905] turned this into something that is like [3907] realistically readable as I don't know a [3909] string which we could do um tons of [3911] things with we could pass it into a a [3913] pandadoc proposal and template out you [3915] know the amount of money it cost make [3916] things look a little bit prettier [3918] essentially so that's pretty neat I'm a [3920] fan of format I use format pretty often [3923] um aside from that we have a couple of [3924] very simple fun functions is even just [3927] tells you whether or not this number is [3928] even so is this number even no because [3930] there's a one at the end but if it's a [3931] zero then it'll be true likewise there's [3933] is odd so is this number even no is this [3936] number odd yes is this number odd no uh [3940] there are a few other ones like is [3942] integer now if you guys are unfamiliar [3944] an integer just sort of means like a [3945] like a like a number that doesn't have [3947] any decimal points so this is an integer [3949] because there's no decimal points but if [3950] I were to do this and this would not no [3952] long no longer be an integer this can be [3955] important sometimes but to be honest I [3957] don't really use these type conversions [3958] or is even or is odd very often um there [3960] are certainly places for them though [3963] next up we have um some conversion [3965] functions so two Boolean similarly to [3967] what we had before two Boolean will [3969] convert this to True um like if I go [3972] zero this will be false if I go one it's [3974] true then if I go any number above one [3976] it's also true so basically zero is just [3978] the only negative um and then even like [3980] negative numbers and stuff like that are [3981] technically true um as numbers this is [3984] some Nuance that isn't super to [3986] understand but um yeah just to say that [3987] you can convert this into the true or [3989] the false Boolean type there are also [3992] ways to convert numbers to date times so [3995] 43 uh you know is extracted as this if I [3998] wanted to convert this number to a date [4000] time um I would go and I get a Tim [4003] stamp Unix timestamp is the number of [4005] seconds since January the 1st 1970 so [4008] I'm just going to copy this and go over [4011] here I'm going to feed this in what this [4013] does is it tells me what the current [4015] date time is I think I have to add three [4017] zeros actually when I do that because I [4018] think this one does it with thousands [4020] but anyway as we can see the date time [4022] here is now 20251 31 um it is [4027] 30641 according to my time zone which is [4029] nice they automatically do minus 07 [4031] because that's where I'm at uh but yeah [4034] you know you can convert a number of [4035] things from numbers or numeric um uh [4039] like like numbers into um dates as well [4041] to perform functions on later and I [4043] should note that you know this is is a [4045] number um you know like like this right [4048] over here is a number so what you could [4049] theoretically [4050] do is you could probably do [4055] this so you know how early I had to add [4057] that um thousand separator if you just [4059] multiply this by a th first instead then [4061] this is still technically like a like a [4063] functioning um number right because [4066] basically what I'm doing is I'm I'm [4067] taking this number I'm defining it then [4069] I'm multiplying it by a th then I'm [4071] converting that to a daytime which is [4072] now rendered correctly um you know this [4074] will sort of muck up the date time but a [4076] thousands in my case it's just the NN [4078] conversion between a Unix Epoch [4080] timestamp over here um and then you know [4083] what what Ann is comfortable [4085] with okay great um we have a couple of [4088] additional ones uh the only ones that [4091] are are really important are the local [4094] string um so this converts things from I [4097] don't know let's say [4098] 500 uh 500 and then 50, [4102] 304 sorry 50 million [4106] 5034 automatically converts this into a [4109] string with those commas and everything [4111] like that um in them there are a variety [4113] of things that you can do um you could [4115] use the same settings that we had before [4117] so remember how earlier if I go to the C [4119] full [4121] list uh remember how earlier you know I [4123] fed in um FRFR well there's also a [4126] variety of other ways that things um can [4129] be formatted and this is just like a [4130] master list of all of them and some of [4132] them will be well most of them are going [4134] to be very similar to each other but [4135] some of them are also going to be a [4136] little bit different this just allows [4137] you to format things into the particular [4138] local or it allows you to format into a [4140] string that is of the particular local [4142] of the people that you want and sort of [4144] like an an automatic basis which is [4147] pretty nice and the last one is [4148] obviously just two string um two string [4151] just converts a number which you perform [4153] functions on um sorry perform [4154] mathematical operations on into a string [4157] that you can now do things like [4159] concatenate with the term hello right so [4163] you couldn't just add the term hello to [4166] 50, 5034 cuz that doesn't really make [4168] sense but since we converted to a string [4170] first this is now basically this and [4173] then we can easily concatenate any [4174] string to this if we want all right that [4176] is the number Family let's move over to [4178] the array family um and let's knock [4181] these out what I have over here on the [4182] left hand side is I have an array with [4184] three items Sarah Sally and Stephanie [4186] this is clearly an array of names you [4188] can also create your own array in n8n [4189] similarly to how we've been doing so far [4192] just by using the square bracket [4194] operator [4197] right this is technically now um [4198] rendered as an array and code that we [4200] could do things with just by do notating [4202] but in our case as usual I'm going to [4205] start off with that just to show you [4206] guys how all of this works um and we can [4208] see our array has now been pulled and [4210] rendered as a variable from the previous [4212] node so if I click period what sort of [4214] functions are available to me well the [4215] first is length which is probably pretty [4217] similar to the string one is just [4219] instead of counting the number of [4220] characters what we do is we count the [4221] number of elements in the array so we [4223] had s Sarah Sally and Stephanie those [4225] are three elements it's not surprising [4226] then that we have a length that equates [4228] to [4229] three now we have some other functions [4231] here last if I were to put this in what [4234] do you think would happen Well we'd [4235] extract the last element Stephanie [4237] likewise if I would extract the first [4239] element [4241] Sarah um we can do includes this one in [4244] practice I use very often and this just [4246] verifies whether or not there is the [4248] element that I'm looking for in this [4249] array so sometimes apas will return big [4251] arrays with tons of elements and all I'm [4252] curious about is hey does this contain [4254] the thing that I want well you know does [4256] this contain Sally yes does this contain [4259] sa no but does this contain Sally yes [4261] remember we're now doing this on a um [4264] array basis so we're looking for the [4266] array elements that need to match these [4267] strings exactly as opposed to just the [4269] string basis if we did a string uh and [4273] then we T typed a substring or a slice [4275] of that I it would have returned as true [4277] right but now that we're operating off [4278] of arrays we need to make sure that they [4280] match one to [4282] one okay we have map and we have filter [4284] and these are a little bit more [4285] complicated so I'm going to leave them [4286] till the end but moving our way down the [4289] next function is append now append is [4291] just a way that you can add an [4293] additional element to an array um if you [4295] append something you're sticking it on [4296] the end so if I were to add the guy's [4299] name here let's go Eric then if we [4302] append quote Eric quote and we've now [4305] added something to the end of that array [4308] so I use this pretty often um the [4310] interesting part here that people don't [4311] know most of the time is that you can [4312] actually just feed in another array [4315] so maybe we have like a guys array over [4320] here um you can append a number of [4322] things in my case you know I've just [4323] appended another array inside of that [4326] array uh you can also append other data [4328] types like numbers so keep in mind Sally [4331] Sarah and Stephanie they all have quotes [4332] around them you can also append things [4334] like objects so [4338] um I believe in order to do this we [4341] actually need to go like this no my bad [4344] there's so many quote signs here I don't [4346] know what the hell's going on so in [4348] order to appen this [4350] puppy we'll remove that and then we [4353] could see that the next element over [4355] here is uh is an object right it's an [4358] object with name equals Peter so yeah [4360] you can append a variety of things um to [4362] an array uh but append is just a way to [4364] add to the end of it another function [4366] I'll show off is chunk chunk is pretty [4368] cool uh basically if we have an array [4370] and the array has I don't know uh in [4373] this case it has three elements so isn't [4375] really going to work but basically let's [4377] say it has like I don't know 10 elements [4378] or something like that we can chunk it [4380] into subarrays of two so let me make one [4382] really [4385] quickly okay and if I just copy this and [4388] then if I feed this in over [4392] here um basically what we can do is we [4394] can chunk this into uh a bunch of [4397] subarrays that contain the number of [4399] elements that we specify in our trunk so [4401] laptop backpack smartphone notebook pen [4403] headphones water ball whatever we're now [4404] chunking this into array where we have [4406] two items so I don't know maybe in this [4407] specific case we're asking people to [4409] bring um you know everybody brings two [4411] items or something and then like we all [4413] get them together that way I don't know [4414] we're sort of at like the same level [4416] carrying wise nobody's carrying a bunch [4417] of stuff um if you wanted to chunk this [4420] more maybe you'd go three you go five um [4422] you know if you want to do one that's [4423] just obviously um sort of silly because [4425] you're just nesting every element inside [4427] of another element zero break so don't [4429] do that U but yeah that's that's kind of [4431] how chunk Works do I use chunk basically [4433] never um but I fig good I'd at least [4435] mentioned what chunk [4437] was okay um we'll go down to chunk sorry [4441] we'll go down to jason. aray and then [4443] working our way down here we also have a [4445] very interesting function called compact [4448] hypothetically let's say we had that [4449] array that we had earlier but let's also [4452] say that I don't know a bunch of these [4453] elements were [4455] empty so if we look at what's being [4458] returned here you see we're being [4460] returned an array that still has you [4462] know 10 elements but three of them are [4463] empty well HP pathetically what you can [4466] do is if you just wanted to only get the [4468] elements in the array that had values [4469] you just type in Compact and it would [4471] actually strip everything that is empty [4473] I should note that these quotes aren't [4475] the only things that you can have you [4476] can also have null um this null is not [4478] wrapped in quotes and it's a special [4480] series of characters this just like [4481] understood by JavaScript to mean that [4483] there's like an a null entry there um [4485] but yeah compact is just a quick and [4486] easy way to get rid of these null [4488] entries or empty entries and this can be [4490] valuable because sometimes this is how [4491] apis send information back and forth [4492] right you receive some big long array [4495] and then like 50 of the fields inside [4497] will be empty well this way allows you [4499] to just strip those and then only [4500] operate off the data that actually [4501] matters to [4503] you okay the next function is concat so [4506] as you can imagine this is very similar [4508] to um sort of append in so far that you [4510] can add a bunch of things to it in this [4512] case you know if I wanted to add um [4515] Sarah or something we've now added an [4517] additional element inside called Sarah [4519] but I could also add um like I did [4521] before an array with Peter and then I [4524] don't know [4525] Eric and now what I've done is I haven't [4528] added a sub array so it's not like I've [4530] added an additional array inside like I [4532] did with a pend and what I'm actually [4533] doing is I'm just like taking these two [4534] arrays and I'm just sticking them [4536] together so you kind of think of it as [4537] like squishing two arrays together [4539] without really preserving um like the [4540] data type uh necessarily next up we have [4543] a very interesting function one that I [4545] use quite often called difference I'll [4548] also show you it's intersection which is [4550] um inter uh sorry I'll show you its [4552] inverse which is called intersection but [4555] I'm just going to create a new array and [4556] I'll go 1 2 3 then I'm going to go [4559] difference then I'll go 3 4 4 [4562] five so basically I'm sorry I need to [4565] make this an array so basically um what [4568] difference does is difference just [4569] returns you all of the elements from the [4572] first array that are not in the second [4574] array okay so one and two are not in the [4578] second array three is in the second [4580] array so we're only getting one and two [4583] difference doesn't care about all of the [4585] elements here like you don't insert any [4587] of these elements here it only ever uh [4589] uses the the the first array that you [4591] feed in is like the primary data so if I [4594] were to say two what do you think would [4596] happen well if I click two obviously [4599] this is now going to disappear because [4602] one of the elements here is now over [4603] here and the only element that is unique [4606] you kind of think of this as like a [4607] unique element although um there's [4608] another function called unique so it [4609] might not be good to to conceptualize [4611] that way um but all of this does is this [4613] just takes all of the elements here are [4615] not in this array so there are tons of [4618] ways and and reasons why you should use [4620] this one way that I just used this the [4622] other day is I'm tracking a bunch of [4623] other people on YouTube that are about [4624] the similar size to me uh just because I [4626] want to see if there's differences in [4627] posting schedule or the lengths of the [4629] videos or something like that and so I'm [4631] calling a YouTube RSS feed the YouTube [4633] RSS feed brings me an array of a bunch [4635] of YouTube posts that they make well I [4637] can store their YouTube posts in a [4639] database and then all I can do is I can [4640] just compare to see hey um you know is [4642] this RSS feed array different from this [4645] RSS feed array oh it is okay well what's [4647] the difference is it that post okay [4649] great well now I know that that's the [4650] post that I'm going to take to like [4651] update my database with I'm going to add [4653] that post essentially so uh yeah variety [4656] of ways you could do this if we use our [4658] example [4659] here of um you know [4662] names [4665] maybe maybe what I'm doing is I'm just [4667] looking for um any name from this array [4672] that is not in this array back here [4675] so Stephanie for instance is not in [4677] Sarah Sally or Peter hence why I'm [4678] returning Stephanie now the inverse of [4681] this is called intersection and this is [4684] similarly another function that I use [4685] all the time an intersection super [4686] valuable basically instead of looking [4688] for the difference it looks for the [4690] instances in which we have both data so [4692] we have Sarah in both arrays so that's [4694] what I'm going to return we have Sally [4696] in both arrays that's what I'm going to [4697] return do we have Stephanie in both [4699] arrays no we have another name called [4700] Peter right so intersection and [4703] difference are both fantastic and there [4704] things that uh you know if you're [4706] working with any sort of like real [4707] industrial Enterprise data I think [4709] you're going to find yourself using all [4711] the [4711] time okay the next function I want to [4713] cover is called find find is pretty [4716] pretty sweet um basically it allows you [4718] to use math as part of your function so [4720] if you just press enter you'll see that [4721] we've now added it doesn't just allow [4723] you to use math it allows you to use [4724] like any sort of operator um now we've [4727] added this cool little syntax which is [4729] called like arrow notation or Arrow [4731] syntax in JavaScript where um we've got [4733] do find and I have an element so we now [4736] have some some variable that we're [4738] calling item and we're saying true this [4741] is pretty interesting um the way that [4743] this works is think of item as the [4745] individual item in the array so all [4747] we're doing is we're basically saying [4749] hey array zero is equal to item so item [4752] is just the name that we're going to use [4754] to reference the specific uh item in the [4756] array that we are currently at because [4757] it's going to go through all of the [4759] items so um this is kind of a piss poor [4761] example I don't really know why they do [4762] that but let me show you something that [4764] you can do at this what if we want to [4767] return all of the elements in an array [4769] that are greater than let's see uh I [4773] don't know they're greater they have [4775] more characters than six so um Sarah has [4779] six charact or five characters Sally has [4781] five characters but Stephanie has way [4783] more than six realistically I think it [4784] has like 10 or something like that so [4786] maybe I don't know we're just looking to [4788] see if there are any names in our array [4790] that are longer than a certain number of [4791] characters how would you do this well [4792] it's actually really easy we go sign [4794] json. array. find and then we take the [4797] thing item then we just check to see if [4800] item length is over six and if so then [4804] our result is Stephanie we're finding an [4806] element in our array that corresponds to [4808] this okay now there's some nuance and [4811] some some things here that I should [4813] explain um there's another function that [4814] does something very similar to this [4815] called map uh sorry called filter which [4817] I'll cover in a second but this element [4820] is special because it only Returns the [4822] first instance of the El element that uh [4826] satisfies the request so json. array. [4829] find we Define our item and we're saying [4831] the constraint is the item. length needs [4833] to be less than six is going to return [4836] uh Sarah but it's not going to return [4838] Sally even though Sally also fulfills [4840] that request technically so find is [4842] super powerful I don't use find as much [4844] as I use map and filter um but I'm I'm [4847] going to cover all of them regardless [4849] the very important thing to know here is [4851] you just need to be comfortable using [4852] array syntax um um Arrow syntax [4855] this is called an arrow function in [4856] JavaScript so I should note that it [4858] doesn't need to say item it could say I [4860] as long as the element or the way that [4863] you've named it on the left is the same [4864] as the way you've named it on the right [4866] that satisfies the condition so in our [4868] case um I is just a symbol that we're [4871] using to denote all of the different [4872] elements in the array um one by [4875] one okay great so that's fine fine is [4877] pretty awesome let's Now cover um index [4880] of index of as I'm sure you can imagine [4882] it's very similar in the array format to [4884] the way that things are represented in [4886] the string format if we are looking to [4888] find the index of the entry called [4890] Sally well then the entry is one this is [4893] zero this is one this is two what if we [4896] wanted to find Sarah it'll return zero [4897] what if we wanted to find Stephanie this [4899] will return two right so that's what [4901] index of does um and one common theme [4904] that you'll find is that arrays and uh [4906] strings are actually pretty similar in [4907] terms of what's going on under the hood [4910] mathematically next up we have is empty [4913] if I feed in this array with three [4914] elements is empty obviously it's going [4915] to return false we also have is not [4918] empty which is the inverse and then we [4920] have a very special uh function one that [4922] I use very often called join and All [4925] Join is is it's the inverse of split [4928] remember how earlier we took a string [4930] and then we split it into an array well [4932] join just takes an array and then it [4933] turns sorry it takes uh an array and [4935] then it turns it into a string so in our [4938] case we have Sarah Sally and Stephanie [4939] here we can actually just join all those [4941] together and then we can get Sarah comma [4942] Sally comma Stephanie this is now a [4944] strong R so hypothetically what if I [4947] wanted instead to put plus signs between [4949] them Sarah plus salary plus Stephanie [4951] well all I do is I go uh space plus and [4954] then space so what join does is it just [4956] gets all the elements as they're laid [4958] out then it adds whatever characters you [4960] want between all of them so we go comma [4964] space we could go this we go [4968] underscore right we have a ton of [4971] options [4972] here uh we we have a ton of options here [4975] for how we want to do the separator [4976] which is pretty cool so I use this all [4979] the time um I mean this is how I turn I [4981] I turn a bunch of array data into like a [4982] string or something right I also use [4984] this to convert things into like CSV [4986] format which is where you have like a [4987] like like a comma between and then the [4989] cool thing is you can just take the CSV [4990] you can actually make a file of it and [4991] just upload it to a Google drive or [4992] something so tons of examples here um [4996] you know they they show you how to do [4997] three with a space plus space um if you [5000] just join with nothing then if you join [5002] with um like an empty string it'll just [5004] kind stack them all together this is [5006] very similar to like a text aggregator [5008] sort of function if you're using make or [5010] um some sort of aggregation function in [5011] most no code [5013] platforms okay great let's Now cover [5015] merge now all merge does is it allows [5018] you to take a specific type of array and [5020] that's the type of array that has um [5022] objects as elements instead of just um [5024] numbers strings or booleans or sub [5026] arrays and allows you to basically take [5029] them all and then stick them into one [5030] big object so if you think about this [5032] what we're really doing is we're [5033] converting from an array into to an [5034] object I'll give you guys a quick [5036] example of what that looks like by [5037] actually creating my own if I were to [5040] grab um my own array and then I were to [5043] create an object inside of set array [5045] where I have name [5048] Nick that's object number one and then I [5051] were to say [5054] City the automatic um quote adding is [5056] kind of annoying soorry the automatic [5058] curly bra setting is kind of annoying [5060] okay so name [5063] Nick uh let's do City Calgary and then [5066] we'll go I don't know height and then [5069] we'll go uh like [5071] 1808 or [5074] something just like [5077] this right we now have an array that [5079] contains three elements we have name [5081] neck we have City Calgary and then we [5083] have Hy 188 what if we just wanted to [5085] convert this into one object well we [5087] just go merge sorry that's not going to [5089] work because we're outside of these [5090] curly brackets we just add a space here [5092] to make our lives easier we go merge now [5096] and now we basically taken an array and [5097] we've converted it into an object where [5100] all of the um array elements are now [5103] just key names in one so it's name Nick [5105] City Calgary height 188 this is now just [5108] one object and now instead of a bunch of [5110] array functions we actually have a bunch [5111] of object um functions available to us [5113] which I'm going to go over later so [5115] merge is you know I mean like I [5117] understand why they put merge in but do [5118] I ever actually use it in practice no [5120] not really next up we have pluck pluck [5122] is pretty badass um basically what we [5123] get to do do is if I were to feed in the [5126] same thing that I just fed in before [5128] then instead of merging it I were to [5129] pluck it what I can do is I can extract [5133] the specific things from this array of [5137] objects like if I had name and then uh I [5141] mean you know this this isn't a very [5142] good example but if I were to pluck out [5143] the name what I'd get as a result is I'd [5145] get Nick okay pluck just allows you to [5148] extract the value of something that has [5152] a key name equal to what You' put in [5154] here [5155] so hypothetically if I were to just have [5157] another person in with a name Sally what [5159] I've done is I've plucked out all of the [5161] names I plucked out Nick I've plucked [5162] out Sally this is another one of those [5165] manipulation functions which I don't [5166] really use too often um but it's not bad [5168] to know the next function we have is [5169] called random item it is fantastic [5171] random item is just a quick way to [5173] select something from an array I I use [5175] this all the time I use this in like [5176] round robin scheduling well not round [5178] robin scheduling sorry like uh random [5180] scheduling um I use this when like I'll [5183] generate a a list of random numbers and [5185] I'll just select one although to be fair [5186] there is like a random function that you [5188] can use um I use these to like you know [5191] statistically randomly and uniformly [5193] just take things from an array and then [5195] do things with it the next function is [5197] called rename Keys you guys remember [5198] that um example function I had earlier [5200] if I just go back to it if I had a bunch [5203] of entries with name name and then [5210] name um and instead of using pluck I [5212] were to use uh um rename Keys what [5217] rename Keys allows you to do is it [5218] basically allows you to add um to search [5221] for a specific key name of the object so [5223] in this case name then convert it to [5225] something else so maybe instead of name [5227] what I want is I actually want to call [5229] it first [5230] name well this will now um create [5232] another array but it'll automatically go [5235] in and it'll rename all the keys and all [5237] the objects in set array this is another [5239] one of those like more complicated like [5241] data formatting functions that I don't [5242] really find myself using op often but I [5244] have used this before and uh it's worth [5246] at least knowing okay and jason. reverse [5248] does probably what you're expecting it [5250] to do um it just takes as input an array [5252] so in my case an array of Sarah Sally [5254] and Stephanie then it reverses it but [5256] for some weird reason every time I put [5258] jason. array. reverse in it crashes my [5260] nadn server entirely and then I have to [5262] spin it up again so this is a very [5264] interesting development if I'm honest I [5265] wasn't expecting this one function just [5267] consistently crash but I've repeated the [5269] behavior a number of times and just does [5271] not really seem to be cooperating anyway [5273] imagine if it said Sarah Sally and [5274] Stephanie in your input um the output [5277] would be Stephanie Sally and then Sarah [5279] Sally is the middle unit so it wouldn't [5281] necessarily change anyway I'm going to [5282] exit this page fix it and then come back [5284] okay next we have the slice function um [5286] the slice function works the exact same [5288] in an array as it does in a string if we [5290] wanted to slice between zero and two we [5292] get Sarah and Sally if we wanted to go [5294] one and three we'd get Sally and [5295] Stephanie next up we have a very [5297] interesting one called uh smart join uh [5300] basically I'm going to rely off the [5302] given example here just because it's [5303] such a nuanced and and I want to say [5305] uncommon function to use that I don't [5308] really use it basically ever but you [5310] know over here you see how we have um an [5312] object that is specifically formatted as [5314] follows Field age value 2 field City [5317] value Berlin okay let me copy this over [5321] I'll show you guys what this [5323] means I were to pump this in and I were [5326] to go to smart join and if I were to [5329] feed in um field and then value and I [5333] close it up off and what this would do [5335] is it would basically take as input my [5336] array and my array is broken down into [5339] um basically an object with a field and [5342] a value for every um thing like if you [5344] think about it there's no need to break [5345] it into a field and then an age and then [5347] a value and then a two you could just go [5349] age and then two right City and then [5351] Berlin but it takes this very particular [5353] formatting and then it basically plucks [5355] similar like to what we were doing [5356] before it plucks out the fields and then [5359] the values and then it uses it to turn [5361] into a new object where um the first [5364] uh element that you feed in is going to [5366] be the key and then the second element [5368] that you feed in is going to be the [5371] value I don't really ever use this so I [5373] probably wouldn't worry too much about [5375] understanding it if you don't next up we [5377] have sort sort just sorts things [5379] alphabetically to start um if you want [5381] to do anything more complex than [5382] alphabetical sorting uh you're going to [5384] have to use one of those Arrow functions [5386] that we talked about again and [5387] unfortunately the way that the aror [5389] function works is not very intuitive [5390] it's just a hand-me-down of um I guess [5393] uh [5394] you know like some programming or [5395] JavaScript conventions basically you [5397] want to grab a which is going to be your [5399] earlier element and you want to grab B [5400] which is your later element you just [5401] always want to wrap it like this and [5403] then in order to turn this a um you know [5406] bracket a comma B into some sort of um [5410] inverse order what you'd have to do is [5412] you have to go to B local compare and [5414] then go a like this it's kind of [5416] annoying but we've just reversed it [5418] basically we've we've we've sorted this [5420] well we didn't reverse it actually we [5421] sorted this based off of um you know the [5424] presence of the characters in the [5427] alphabet you know s a l comes before s a [5431] r which comes before sorry comes after [5434] St I think I mix myself up there s l [5436] comes before s which comes before St U [5440] because we're we're doing this inverse [5441] comparison if you were to go [5442] alphabetically it would just be standard [5444] it' just be a and then B uh why you have [5446] to use the local compare thing in this [5448] particular format to be honest I don't [5450] really understand or get um I don't [5452] really ever sort anything other than [5454] numbers um from like largest to greatest [5456] or strings um alphabetically ascending [5459] and then if you think about it if you [5460] sort things one way you can also just [5462] sort it and then you can just reverse it [5463] in order to get the other thing right so [5465] like most of the time in practice I'll [5466] sort first and then I will reverse after [5469] I'm not going to type the two brackets [5471] there because I have a feeling it's [5472] probably going to break my my n instance [5474] again for whatever reason but yeah [5475] that's that's how that works next up we [5477] have Jason string um this just converts [5479] all the elements in an array into like a [5481] Jason string that you could do stuff [5483] with so this is now a string it's not an [5485] object it's a string and you can do [5486] string manipulations on it a lot of the [5489] time you have to convert things into [5490] Json strings in order to send to receive [5492] them through API so I'll use this [5494] reasonably often next we have two [5495] spliced two spce is actually really [5497] really interesting and I could see a lot [5499] of cool uses for it but I personally [5500] don't use it very often essenti what [5502] allows you to do is allows you to take [5503] as input a an array and then what you do [5506] is you will add specific elements at an [5510] index that you specify then remove a [5512] bunch of elements after that and then [5515] actually designate the thing that you [5516] want to add so I know that sounds kind [5517] of difficult but let me show you as as [5519] our example Sally Sarah Stephanie let's [5521] say this is the zeroth position this is [5524] the first position and this is the [5525] second position right let's say I want [5528] to add something at the first position [5531] right over here so in order to add [5534] something I go one and then I go comma [5536] zero and I'll show you why in a moment [5538] and then let's say I just wanted to add [5539] another s name let's [5541] say s oh jeez I already have [5545] Sally Samantha yeah Samantha I would [5549] type in uh like this what I've done is [5551] I've inserted Samantha into the first [5553] place of R if I wanted to move it so [5556] that it's after Sarah I just go two if I [5558] want to do it so it's after Seanie I go [5561] three and I don't know can I add it in [5563] fourth no I can't because of the it [5564] takes the length of the string length of [5566] the array and then it sticks it in at [5567] the end so yeah this is me just bringing [5570] Samantha back baby that's what I'm doing [5572] now I'm bringing her forwards I have the [5574] power uh next up is uh the the second [5579] parameter is kind of interesting [5580] basically what this does is it deletes a [5582] certain number of entries uh which is [5584] kind of kind of neat you can delete the [5587] number of entries from the start index [5589] onwards if I want to delete I don't know [5591] let's say like five uh let's say three [5593] entries or something I think I have to [5594] refresh this [5597] unfortunately um let's do one sorry [5601] let's do one yeah yeah because we can't [5603] delete anything at the third index [5605] because there's nothing left but [5607] hypothetically we go 0 0 first if I go [5610] um if I delete everything from the [5612] zeroth index and then I go one out I'm [5615] going to delete between zero and one [5617] which is this right if I go two I'll [5620] delete Sarah as well if I go three I'll [5621] delete Stephanie that still allows me to [5624] add Samantha though um sometimes the n8n [5627] editor will sort of bug out like this if [5629] you have an additional um comma so just [5631] be really careful but anyway this still [5633] allows me add Samantha so the way that I [5635] like to think about this function this [5636] function is just sort of like an [5637] all-in-one um if you wanted to do two or [5639] three things simultaneously if you [5641] wanted to um add an element at a [5643] specific place and if you wanted to [5644] remove a bunch of elements um and then [5646] if you wanted to I don't know like [5649] designate a specific element to add and [5651] then you'd be able to to do so here and [5653] the cool thing is this is this can be an [5654] array so I could add more Peter uh more [5657] people here too so I could add like [5659] Samantha Peter and then Stacy and then I [5663] could use that to if you think about it [5664] logically um replace the three elements [5666] that I have in here so like you know [5668] this is what the string looks like when [5669] I concatenate them this is them [5670] afterwards so this is just sort of like [5672] a I don't know it's like it's like a [5674] three in one if that makes sense do I [5676] use this one often no I do not uh still [5679] pretty cool though you know you could [5680] probably impress some [5681] people the next one I want to cover is [5684] called Union Union is pretty awesome um [5686] this is uh like it's the union operator [5688] in logic and basically if you feed in [5690] two arrays and they have overlapping [5692] elements it will just ignore the [5693] overlapping elements and then just give [5695] you a unique um total array which only [5697] contains unique elements so you know how [5699] we have Sarah Sally and Stephanie let's [5701] say I feed another one with Sarah Sally [5705] and then [5706] Stacy what we do is we basically add [5708] these two we perform a union on the [5710] first which was Sarah um Sally and then [5713] Stephanie and then the second which is [5714] Sarah Sally and Stacy and we don't [5717] duplicate the Sarah and Sally elements [5719] right these are unique we just add the [5721] single new element that's sort of like a [5723] difference between the two so you can [5725] kind of think of this as similar to the [5726] intersection and the difference [5727] functions um this one just like doesn't [5729] preferentially add things from the [5731] beginning or the end it just does it [5732] with both equally which is nice the next [5734] function is unique and I use unique all [5736] the time this just tells us or rather it [5738] uh displays only the things that are [5741] unique in your um array so this is a [5743] very quick way to D duplicate data but [5745] if you think about you know an array and [5747] I have one 2 3 4 five five and I pass it [5750] through the unique function I'm only [5751] going to have five remaining if I go 3 [5752] four five 2 two three you can see I've [5755] added nothing but if I go six now I've [5757] added a single additional element and it [5759] does so by preserving the placement as [5760] well which is quite handy so I use [5762] unique all the time very very common for [5764] me to use [5765] unique okay let's Now cover um the two [5769] functions that I've been leaving until [5771] the very end here actually three [5772] functions if we count reduce as well a [5775] map filter and reduce these are [5777] extraordinarily powerful um I use map [5780] and filter all the time specifically and [5782] these you know if you figure them out [5783] will end up being probably your most [5784] used array functions because they are [5786] just the Cardinal V array functions so [5789] the first thing I'm going to do is I'm [5790] going to do map now if you remember back [5791] to um that previous function that I [5793] showed you guys um we are now going to [5795] be using Arrow syntax again where we [5797] have some item and then what we're doing [5799] all the map does is map just does [5800] something to the item okay so let's [5803] hypothetically say I wanted to append [5807] gmail.com to all of these entries I [5810] could do so very simply just by [5812] concatenating [5814] gmail.com let's do gmail.com like that [5818] so what I've done is I've taken my item [5820] which is I then I'm said for every item [5823] I want you to perform this function i. [5826] concat and then [5827] gmail.com pretty sweet right well why [5829] don't we now make them all um lowercase [5832] as well two lower case then I double up [5835] on the brackets um now you can see that [5836] we have basically all of these formatted [5838] as email addresses so now I'm kind of [5840] mixing and matching combining functions [5842] which is cool okay so what's really cool [5845] about the map is I mean I just did this [5847] with a string right but you can do this [5848] with whatever data type like [5850] hypothetically if instead of Json R I [5852] fed in one two three into map what I [5855] could do is I could just multiply this [5857] by two then I can instantly change all [5859] of these a proportional amount if I [5861] divide these you know I could do a bunch [5863] of cool stuff with that as [5865] well uh modulo 2 probably like like [5867] there's there's so much that you could [5869] do with a map function it's crazy I'm [5870] not even going to like start but um just [5872] know that this Sol like 99.9% of all [5875] array queries now similar to similarly [5878] to the map function you also have one [5879] called the filter function if you never [5880] Ed the filter function before I'm just [5882] going to give it a click because it'll [5883] automatically Tech this out for me what [5885] the filter function does is it basically [5887] does the same thing as map in so far [5888] that it goes It goes over every element [5890] in your array but it allows you to like [5892] filter out elements that don't match the [5894] criteria so let's say I have a simple [5897] array here one 2 and three and I filter [5898] out all elements where I is less than [5902] three right so all elements where I is [5904] less than three well 1 is less than [5906] three 2 is less than three three [5907] logically is not less than three it is [5909] three um so I only have one and two okay [5913] if I were to do this with um my array I [5917] could also filter based off of string uh [5919] constraints so my array if you think [5922] about it is Sarah Sally and Stephanie [5924] what if I was only interested in [5926] returning um entries that had a length [5930] of less than six Sally and Sarah more [5934] than six Stephanie so we're basically [5936] doing the same thing as find but we're [5938] we're doing it a little bit differently [5939] we're sort of proceeding with it a [5940] little bit differently so map and [5942] filters I mention are fantastic I use [5944] them all the time there's one more which [5945] employs similar logic but you're [5947] probably not going to end up using it [5948] anywhere near as much it's called reduce [5950] now reduce can be very complicated to [5951] understand um so I'm just going to cover [5953] it like really really briefly um but [5956] essentially what allows you to do is it [5957] allows you to Define your own function [5960] and then you can do stuff to um things [5962] iterative [5964] so let's say I have 1 2 3 4 5 okay I'm [5967] reducing what you do is you have some [5970] accumulator then you have some initial [5972] value then you have an arrow where you [5975] go accumulator plus initial [5978] value so um what's happening I think [5982] it's I think it's called initial value I [5983] might have some other term for it I [5985] might be misunderstanding um but [5987] basically you have like a and then you [5988] have B then what you want to return is [5990] you want to return a plus b so um um [5994] what this does is it says a is your [5996] current number so whatever the the sorry [5999] current element so a would be uh for the [6002] first pass around be one and then B [6004] would be the one next to it okay so 1 + [6008] 2 then it would take the result of 1 [6010] plus 2 which is three and then we would [6011] add it to the next thing which would be [6013] 3 + 3 then it would take that result [6015] which would be six it add to the next [6016] thing 6 + 4 take that result which is 10 [6019] add it to the next thing 10 + 5 what do [6021] we get as a result we get 15 [6024] now you can do a number of things that [6026] aren't just mathematical functions to [6028] this um but this is sort of like an [6029] accumulator like it like it Aggregates [6031] things the further it goes along so [6032] obviously large arrays you know that [6034] you're running some functions on um will [6036] be bigger and bigger and bigger [6037] mathematically you can do things like [6039] divide too so I don't know a divided by [6041] B it's kind of interesting a * B [6044] obviously grows a minus B you're going [6046] to get a negative number right because [6047] you're going backwards um but I'll leave [6049] reduce there just because you know in [6050] practice you're probably rarely going to [6051] use it okay that now takes us to the [6053] object Suite of functions I'm just going [6055] to change a type to object here and I'm [6057] now going to be extracting data from [6059] this which is an object that is nested [6062] one level deep with a first name a last [6063] name and a height in centimeters [6064] apparently qu ariden uh one of my [6067] favorite characters from fantasy is 186 [6069] cm wonderful so um I'm going to go Json [6074] doob now I have access to this and I'm [6077] going to press Dot and the first thing [6078] you're going to see when you're [6079] operating with an object is you're going [6081] to see some additional Fields up at the [6083] top so basically we'll go in we'll parse [6085] this out and then we have access to the [6086] first name the last name and the height [6087] and centimeters so these aren't [6089] functions these are parameters but I'm [6090] going to write them down anyway first [6091] name will equate to K right last name [6095] will equate to Aron and then height in [6098] cm will equate to 186 pretty neat huh so [6101] these aren't functions as I mentioned [6102] these are just ways to reference um you [6104] know uh values in in set aray let's [6106] actually get into the functions there [6107] aren't too many of them so it's going to [6108] be pretty straightforward the first is [6110] called keys keys is pretty [6112] self-explanatory all we we do is we just [6113] get the keys and we pluck it out and [6115] turn it into an array so in our object [6118] first name last name and height and [6120] centimeters these are all the keys on [6122] the right hand side both aren and 186 [6124] these are all the values so if we want [6126] to extract the keys we use Keys [6128] similarly if we wanted to extract the [6129] values well you just type values so now [6131] we're extracting kind of the other half [6132] right both Arland and 186 instead of [6135] first name last name height and [6137] centimeters in addition to that um you [6139] can do is empty this just tells you [6141] whether or not the object is empty so [6142] this object clearly not empty there are [6144] a lot of things there right is not empty [6147] that's dang right it's not empty there's [6148] a lot going on in [6151] there next up we have has field has [6154] field is pretty self-explanatory [6155] basically we're just looking to see if [6157] there's a field called um whatever so [6159] maybe we're feeding in an object we just [6161] want to check to see if there's a field [6162] called first name well we just go first [6164] name that's true but what if we wanted [6166] to check if there was a full name field [6168] full name in this case would be false [6169] because there's no key that corresponds [6171] to full name realistic they probably [6173] should have called this has key and not [6175] has field but what are you going to do [6176] right JavaScript okay great next up we [6178] have compact compact just does the same [6180] thing uh in objects as it does to erase [6183] so basically if we had any empty um [6185] values here um we could we could uh [6187] basically remove them instantly I'll [6188] show you guys an example if I go first [6190] name Nick then I go um last name and [6195] then I go empty the end result of [6197] feeding this into our compact function [6199] it just removes this last um element in [6202] field entire because it's empty if I put [6204] an X there you'd see it it populate it [6206] okay the next function I want to talk [6207] about is going to be called um keep [6210] Fields containing this is kind of an [6212] interesting one because I don't know [6214] they change the the name or the meaning [6216] of fields over and over and over again [6217] but basically you see over here how I [6219] first Nam qu last name Arlin height and [6221] centimeters what if I only wanted to [6223] extract parts of this object um that uh [6227] have qu in it so I want to extract the [6229] field name and the value of the field [6232] and value that can contain quo if I put [6234] that in there you see that I've now [6235] created a smaller object called first [6237] name quo and that's it I don't really [6239] ever use this in practice and to me [6241] honest I don't use most of the object [6242] manipulators in practice but we have [6245] remove field remove field just allows [6246] you to specifically take things out that [6248] you don't want so maybe we want to [6249] remove the last name we want to remove [6251] the height in centimeters right we also [6254] have remove Fields containing so this [6255] will go and take out fields that contain [6258] a value that we want or don't want so in [6260] our case we don't want any Fields [6262] containing the value quo so we take [6264] first name out entirely and now it's [6265] just last name height and centimeters [6267] and then we have our obligatory tojson [6268] string which just takes in the object [6270] and then it turns it into adjacent [6271] string that we can send or receive uh [6273] basically um through API call so you [6276] know if you're trying to send an API [6277] call they're trying to send data [6278] somewhere and it keeps on telling you [6279] that your Json is Mis formatted just try [6281] passing it through to Json string first [6283] I use it pretty [6284] often last thing I'm going to show you [6286] is URL and code this is pretty [6288] interesting um but basically you know [6289] how earlier we were talking about URLs [6291] right let's hypothetically say I have [6294] some database available [6297] okay um what you can do in a database is [6300] you can encode what are called query [6302] parameters um soorry what you can do [6304] with a URL is you can encode what are [6305] called query parameters query parameters [6307] look like this you put a question mark [6309] and then after you put the name of the [6311] variable or the key name and then the [6312] value and if you want to add more the [6315] name of the variable or the key name and [6317] then the value and name of the variable [6320] uh AK the key name and then the value so [6323] what this allows you to do is allows you [6324] to turn adjacent object which is sort of [6326] like this structured thing right and it [6329] allows you to just instantly encode it [6330] as one of these URL parameters or query [6333] parameters this is pretty uh useful [6335] anytime you want to send or receive data [6336] added to a website or something like [6338] that because instead of you having to [6339] like manually put all this stuff out [6341] like hypothetically I could totally go [6344] uh I don't know first name equals and [6346] then I could go dollar sign json. ob. [6349] firstname right be kind of similar um [6352] but I have to do this sort of structure [6355] over and over and over again which would [6358] just be a massive pain in the ass right [6360] hypothetically instead of me doing [6363] this um what if I just went you know [6366] this is as you can see just really [6368] unseemly um you know instead of doing [6371] this if I just went uh json. object. URL [6374] en code uh you know this is kind of a [6376] lot more interpal a lot shorter a lot [6377] easier so I use URL in code pretty often [6380] okay let's cover Boolean functions and [6382] boy do I have a surprise for you if we [6384] go json. Boolean I should say you'll see [6387] there really only two functions there's [6388] two number and then there's two string [6390] so two number just turns a true into a [6392] one and then a false into a zero in our [6394] case what we have is we have a true down [6397] here so the output is going to be a one [6400] right if we wanted to instead turn this [6402] to a string this just turns the buol [6405] which is uh technically even though this [6407] is in letters like t r u e this [6409] technically isn't considered a string so [6411] what this allows us to do is allow us is [6413] to take a Bool and then convert it into [6414] a string so we could do things like you [6416] know to uppercase or something if we [6418] were just to go Bo to uppercase um as [6421] you see it doesn't really allow us to [6422] because this isn't like a function that [6423] you can apply to Bulls so you got to go [6425] to string first uh basically okay the [6428] last thing we're going to be doing is [6429] talking about datetime functions now the [6430] first thing we have to do in order to [6431] get a datetime function is we have to [6433] get a we have to get a date time right [6435] so if you guys remember the way that I [6437] did this in order to get the Lux and [6439] date time it was called was I went uh 01 [6444] sorry 3101 2025 then I went two date [6449] time saying that it can't convert it uh [6452] why was that I think my format might [6454] have been different [6455] actually 01 was it 01 yeah sorry it was [6459] um I think it was 0131 yeah Delux in [6462] date time okay anyway uh okay so once we [6465] have something in the standardized [6466] datetime format um there is a million [6468] and one things that you can do all you [6470] do is you press period and now this [6471] standardized date time format offers [6473] just uh God I don't know 20 or 30 [6476] functions now I'm not actually going to [6477] show you every single one of these [6478] because some of these are such uh you [6480] know obvious variant of each other like [6482] you can plus a date you can subtract a [6484] date and that sort of thing but I am [6485] going to cover all the ones that are [6486] important that I find myself using [6487] pretty often so the first one's called [6490] format format is super valuable [6492] basically it allows you to debt [6493] something that is a date time okay like [6495] this then allows you to format it [6497] however the hell you want so you know [6499] how there are millions of datetime [6500] formats out there or millions of date [6502] formats Some People Want it uh year year [6504] year yearmonth Monon SL DayDay other [6507] people want it monthmonth SL year year [6509] uh DayDay SL year year year well this [6511] allows you to do so using characters [6515] that are um designated in this [6517] formatting guide so basically you have [6520] tokens like s tokens like lowercase U [6523] tokens like Z tokens like K right and [6526] all these cor respond to things like [6528] hypothetically if you wanted to um [6530] instantly translate any time into an [6533] extra verbose localized date time you [6536] could just type ffff or sorry ffffff and [6539] it would automatically do that so let me [6541] show you if I just typed f f FF I've now [6544] converted this into a date time and then [6548] I've immediately formatted it into this [6550] super extraordinarily complicated [6552] looking date which is just like a string [6554] representation I could remove some [6555] complexity with ffff I could remove even [6557] more with FF and I could just go FF to [6559] get some other format likewise I [6561] actually create my own format if I [6562] wanted to so maybe I wanted to go um [6564] year year year year okay sorry y y y why [6568] I meant to say um because you got to [6569] lower case wise then month month and [6572] then date date and then let's say I [6574] wanted to go hour hour minute minute [6577] second second okay I've taken this date [6581] then I've converted it to a date time [6584] then I've formatted it in this specific [6586] structure as you can see we end up with [6588] um not only the year the day and the [6590] month and the day we also end up with [6592] like the number of hours minutes and [6593] seconds now in this case it's 00 why is [6596] it 00 0 well um I've been inserting [6599] standardized date times here what you [6601] can actually do is there's a specific [6603] function that grabs the current date and [6605] time called dollar sign now so dollar [6608] sign now if I were to just remove this [6611] dollar time dollar sign now is already [6612] in a date time so you actually don't [6613] need to convert this to a date time um [6615] all you would have to do is you you you [6617] just format this um as follows year year [6621] year year year year [6623] um month month Day Day and then H H [6630] mmss or maybe HH I think if I want to [6632] get three and then I think You' just go [6635] a uh no P it'd say like AM or PM or [6640] something like that I kind of forget how [6641] to do that though but anyway um now you [6644] know you can format the exact current [6646] time uh which is pretty cool and pretty [6648] useful and I believe there used to be [6650] and I don't know if there still are I [6651] think there was like a time stamp [6653] variable or or something else but I'll [6655] I'll leave that out um just for the [6656] purposes of this discussion okay great [6659] so if I just go back to my previous um [6662] example which just had sort of a simpler [6664] look at a date because we didn't have a [6665] bunch of seconds and stuff like that if [6667] I press period again you'll see that now [6669] we also have a few options we have minus [6671] we have [6672] plus um and then we have diff 2 and then [6676] extract and these are the most commonly [6678] used um datetime functions and ones that [6680] I use basically all the time minus just [6683] subtracts a given amount of time from a [6685] date and it allows you to designate [6686] things just in like natural language [6688] well not natural natural language but [6689] like using dates uh days hours uh weeks [6692] that sort of thing and then plus ads let [6693] me show you what this looks like so you [6695] know how right now um this is uh like [6698] 000000 0 like basically there's [6701] no there there's not even a single [6703] second to the day well what if I wanted [6705] to add um you know 30 then seconds well [6710] you see we've just changed this here 40 [6713] seconds 50 seconds 60 seconds 70 seconds [6716] 80 Seconds 90 seconds let's say [6719] hypothetically we wanted to add 10 days [6721] to this well now it's February the 10th [6723] how about 10 weeks well now it's March [6725] the 11th well now how about 10 months [6727] well now it's November the 30th right [6729] you could even add years um this is [6731] pretty standard right um if you wanted [6734] to take this out you just subtract [6735] instead by using minus so variety of [6738] different functions uh available to you [6740] for just doing like simple date [6741] manipulations um a couple of other ones [6743] that I use pretty often there's this one [6745] here called diff 2 basically what you do [6747] is you feed in the most commonly used [6750] one is is now but basically you feed in [6754] the starter over here on the left and [6757] then you get the difference between that [6759] and um the like second date over here [6764] which in our case we're just going [6765] dollar sign now and then we get the [6767] number of days hypothetically what we [6769] could also do if you wanted to reverse [6771] this right this is a negative value we [6773] could go dollar sign now diff 2 then we [6776] could feed in this whole thing and then [6778] we'd get that it's been 667 days from [6781] this AKA I'm about 66% done on the [6784] current day because this was counting [6785] from like the zeroth minute the zeroth [6788] second the zeroth hour of you know [6790] January the 31st 2025 likewise we could [6794] uh show this off in weeks we could do [6795] this in minutes we could do this in [6797] seconds and it's kind of crazy to me [6798] that 960 minutes have already gone by in [6800] my day what the hell have I been doing [6802] anyway um aside from the existential [6804] value obviously there's just a lot that [6806] you can you can do and get [6808] done and then uh we could also extract [6811] so we could extract things from this [6812] really easily like now is obviously [6815] January the 31st 2025 right what if I [6817] wanted to extract the month well we get [6819] the first month of the year if I wanted [6821] to extract the year what if I wanted to [6822] extract the day right I can basically go [6824] in I can extract the current second man [6826] I can extract the the minute right the [6829] minute of the hour of the day um so I [6831] have I have a lot of options available [6832] to me uh and so this this ends up being [6834] pretty valuable [6836] when uh I don't know usually when I'm [6838] sending or receiving something or when [6840] I'm performing Logic for stuff like [6841] invoice follow-ups or email follow-ups [6844] um using all of these functions just [6845] makes a lot a lot easier to calculate [6848] how long it's been since something has [6849] occurred and and so on and so forth [6851] variety of other functions um this one [6853] uh is end of this allows you to round up [6856] to the end of the month so if I were to [6858] give you an example this doesn't really [6860] make sense because I'm at the end so why [6862] don't we do startup instead um startup [6864] just does the same thing it just rounds [6866] um in the opposite direction but if I [6868] want to round out the um if i r want to [6871] round out my current date to the start [6873] of then basically what I've done is I've [6876] rounded my date which was January the [6879] 31st to the the beginning of the month [6882] which was the 1 so this is very similar [6885] to the floor function it's just you're [6886] technically flooring like a date which [6888] is pretty wild um if I wanted to go [6890] start of the year it would be the same [6892] thing because this is January right if I [6893] wanted to go end of year you can see [6895] that we're now 2025 12 31 23 59 [6899] 59999 so on and so forth this goes all [6902] the way to the very very end of the year [6903] I don't remember if you could do decade [6904] no you can't do decade um can you do [6906] Millennium yeah anyway Lux and date time [6909] is a something for another time Lux and [6912] Daye time is for another date time uh if [6914] you guys want to check the Myriad cool [6917] functions um just Google this and then [6920] you'll see a variety of um function [6922] similar to what we've been screwing [6923] around with here uh lux's [6926] extraordinarily powerful but obviously [6928] some of the syntax and stuff like that [6929] can be a little [6930] trickier okay and then aside from that [6932] there was just a couple other ones that [6934] I used pretty often [6937] um oh yeah yeah they're components so [6939] you know how earlier we were extracting [6941] things and we were doing so by saying [6942] like month well you can actually just [6944] get like day you can get like month you [6946] get like year uh and you can you can dot [6948] index it that way um there's also Zone [6952] um so you know a lot of the time when [6955] you feed in a datetime object that you [6957] get from an API or something it will [6960] include stuff like this minus 07 what [6963] you can do is if you just type in zone [6965] it'll tell you what the name of that [6967] time zone is which can be really useful [6970] um you know just when clarifying stuff [6971] contractual documents could be useful [6973] because a lot of services also require [6975] you to feed in a time zone and a lot of [6977] these also just use like Zone uh codes [6980] or they they I don't know like a lot [6982] more names to these zones than I [6984] understand so in practice I usually end [6985] up using something like that um in order [6988] to reference it and then there's um just [6990] some helper functions like is weekend so [6992] like you know you can find out if the [6994] date is a weekend let's say you're [6995] sending um some sort of invoice [6997] follow-up well you can you know do your [6999] math and then you can determine if [7000] something is a weekend and then if it is [7001] a weekend you can grab the date and then [7002] you can add one to it or two to it and [7004] then you can send it on the Monday [7006] instead um you have a lot of options I [7009] should say which is pretty neat with [7011] formatting um you know date times as as [7014] things like you know whether it's a [7015] weekend or in this case whether it's a [7017] leap year or so on and so forth so yeah [7020] I'm going to leave the datetime [7021] functions there but definitely check [7022] that out um if you guys want a lot more [7024] power and control over the way that [7026] works I didn't add datetime functions in [7027] the batch of 106 just because these [7029] aren't technically like nadn functions [7031] these are functions outside a library [7033] called uh luxen and uh you know that's [7035] not like native to NN or anything like [7037] that but obviously they're still super [7038] powerful to know so I highly recommend [7039] it okay great I hope you guys liked [7041] learning all 106 n8n functions plus some [7044] additional bonus datetime ones had a lot [7046] of fun putting this together for you if [7047] you guys have any questions about the [7049] specific functions that I mention please [7050] drop them down below um understanding [7052] this stuff at a deep visceral level [7054] really is how you become like an n8n God [7056] so hopefully you guys got a lot of value [7058] of that and if there's anything in [7059] particular that you want me to cover for [7061] Ann or just no code or Automation in [7063] general just drop that down below as [7064] well I Source most of my ideas for my [7066] audience at this point um I'm actually [7068] doing n8n just because I knew that this [7070] would be really important to a large [7071] chunk of my audience that was getting a [7073] little bit more technologically [7074] sophisticated and wanting to start using [7075] a new tool so great example of where [7077] that Serendipity can lead you otherwise [7079] please like subscribe to all that fun [7080] YouTube stuff for the algo I'll catch [7082] you in the next one cheers

Video: https://www.youtube.com/watch?v=bao3ogOcpiw
Title: How to Acquire Your First AI Automation Client For $0.00-$0.60
[0] hey it's Nick and I'm going to show you [1] how you can get your very first AI [2] automation agency client with 0 this [4] isn't a hack it's not a trick it's just [6] something that works reasonably well [7] right now and I'm going to show you how [9] to do everything top to bottom first I'm [11] going to give you a Z Tool stack you can [13] use completely free where every software [16] platform here won't cost you a dime then [18] I'm going to run through the approach [19] we're going to apply and then finally [20] I'm going to give you a simple list of [22] daily actionables you can follow [23] immediately that means today to get you [25] that first automation agency client I [27] scaled my own automation agency to [28] $72,000 month employing a very similar [31] approach and this video is just going to [32] give you the sauce you guys ready let's [34] get into [36] it all right let's just dive right into [38] it I'm going to start off by showing you [40] guys the approach and then after I'm [42] done showing you what the approach looks [43] like uh I'll cover the specific software [45] platforms use to get these Z clients not [49] clients that pay you $0 but clients for [50] $0 and then um after that I'll give you [53] guys an actual walkth through of the [55] entire process from start to finish and [56] then finally I'll give you guys like a [57] daily prescription of recommended [59] minimums to hit hit in order to maximize [61] the quality of this lead generation as [62] I've mentioned this is just something [63] that is working right now works quite [65] well in fact and there are over a [66] thousand people in my communities across [69] both of them make money with make and [70] maker school that are employing a very [71] similar approach right now although they [73] are spending a little bit of money which [74] tends to make a few steps easier I'll [75] get into that in a second so the very [77] first thing we're going to do is we're [79] basically going to [81] scrape [84] leads now this isn't exactly rocket [86] science the vast majority of the time if [87] you want to get up and running with some [88] sort of lead generation approach and you [90] have no money to spend like we can't [91] just buy ads for instance we have to do [93] what's called outbound Outreach so we [95] have to reach out to people that might [97] be interested in procuring our products [99] or services and we're basically trading [101] the time that we're spending doing this [102] for for money um if you do some other [104] lead generation approach like [105] pay-per-click ads for instance or um I [108] don't know organic Media or whatnot you [109] know the the equation is similar you [111] were still investing something it's just [112] typically what you're investing is in a [113] different form you're investing capital [115] or money um as opposed to time in our [117] case you know I'm assuming you have [118] plenty of time just not a lot of money [120] so we're going to do Outreach and in [122] order to do Outreach we need the leads [123] after we we've scraped the leads we need [125] to reach out to them um the way that [127] cold Outreach works is in order for [130] somebody to take you seriously because [131] in reality they're getting hit up by [132] like dozens of other people a day you [134] need to give them something valuable [136] it's just to cut through the noise and [137] so what I like to do in order to give [139] people something valuable is I like to [140] record custom videos using a platform [143] called Loom which I'll show you guys how [144] to do in a second these custom videos [146] essentially are going to solve some [148] problem for the prospect or lead I [150] should say um and in exchange for this [152] value they're going to give you a little [153] bit of their time and basically allow [155] you to pitch them that's more or less [156] how this works so it's all in an [159] equation at the end of the day after [161] you're done recording the custom videos [162] we obviously need to send them so uh the [164] way that we're going to be doing it [165] today is we're going to be sending them [166] in two ways we're going to be doing it [167] via email and DM DM of course stands for [171] direct message and DMS could be like [176] LinkedIn um I don't know Instagram [181] and then also uh Twitter and I like how [183] my writing's already getting shittier [184] and shittier the more I scroll down um [186] so the reason why we're doing this on [188] multiple platforms maybe LinkedIn [189] Instagram Twitter and email is that [191] we're basically going to do what's [193] called a double tap we're going to [194] maximize the probability that they see [195] the Outreach that we're sending and by [197] hitting them on three or four different [198] platforms we're basically finding a way [200] to recoup our sunk cost in that [203] customized video because the customized [204] video is going to take us a couple [205] minutes in order to record we might as [206] well try and recoup that sun cost as [208] much as possible by improving the [210] likelihood that somebody sees the the [211] video the Gambit that we're going to be [213] making is that somebody sees the video [215] where we give them a ton of value and [216] they're just so overwhelmed they're like [217] my goodness these guys are good I might [219] as well send them a response so that's [222] the whole gamut that's kind of where it [223] all rests on and that's more or less [224] what we're going to be doing over the [225] course of the next you know 20 or 30 [226] minutes or so now if you're new to lead [227] generation in general your first [228] thought's probably Nick this seems like [230] a very simple basic system how the hell [232] does this work and here I have a big [233] myth to dispel um the myth is that lead [236] generation needs to be sexy or fancy in [238] reality it doesn't all lead genen is [240] good lead genen is a button that you [242] press that delivers you a dollar every [244] time you press it every time you press [247] that button you get a dollar if you find [249] a button out there in the wild that you [250] can press and deliver a consistent [252] steady stream of dollars what do you do [254] you just try and press that button as [256] fast as humanly possible this is more or [258] less what all successful lead generation [260] looks like in our case we're doing [262] outbound but ads look like the same [264] thing the actual process is more or less [266] identical you come up with some angle [268] then you have some sort of copyright of [270] some sort of creative and then you run [271] it it's just three or four steps [272] implemented over and over and over and [274] over again and as long as you can do it [276] 2 or 3% better than everybody else you [278] can Thrive now specifically for outbound [280] um this approach this sort of three-step [282] approach can be generalized a bit okay [284] that just means we're kind of zooming [286] out a bit we're not just scraping leads [287] recording custom videos sending via DM [288] or email but now we're looking at like [289] the shape of the lead gen approach so [292] basically um the first step is always [294] going to be to find [296] people the second step is always going [298] to be to give something to those people [301] then the third step is going to be to [302] get it in front of [305] them and uh you know this approach uh [309] can be mixed and matched with like a [311] million different platforms for numbers [313] one number two and number three what I'm [314] giving you today is I'm just giving you [316] one variant of like a million that does [318] something that I think is uh you know [320] substantially above average that you can [322] just continue pressing that button until [324] you know you get tired of it or you get [326] rich you retire you know some other some [328] other cool thing all right so that's [330] enough about like the philosophy behind [332] this let's actually get into uh the [333] platforms that we're going to be using [335] so how do you actually do [337] this for [339] 0 that's the big question on everybody's [342] mind and let me just answer that [344] basically the first thing we're going to [345] do is you sign [348] up to [350] appify okay if you're not a newbie to [353] this channel you know I've talked about [354] appify a lot what is appify very simple [357] it is a Marketplace of of [360] scrapers now appify gives you $5 in free [364] credit when you sign up what this means [366] for us is we can leverage this $5 in [368] free credit to get a ton of leads using [370] scrapers like an Instagram scraper or a [374] Google Maps email extractor or um I [378] don't know like a Tik Tok [379] scraper or um a LinkedIn scraper or an I [385] think I might have said Instagram [386] already let's do Twitter scraper right [389] there are Vari of data sources we could [390] use but the point I'm making is with the [392] $5 in free credits we can go out onto [394] appify and then we can pull data from [397] one of the many scrapers here the one [399] we're going to be working with in [400] particular is called an Apollo um I [403] think it's this one here Apollo scraper [404] scrape up to 50K leads code crafter [407] Apollo i- scraper and the reason why [410] we're going to be using this one is [411] because all we need to do in order to [413] get this to work is we sign up to a [414] second service called Apollo Apollo [420] is basically a giant lead [423] database it's gigantic it's truly huge [426] it's one of the biggest like sales [427] intelligence platforms on planet Earth [429] that's what they call it anyway and [431] essentially what Apollo allows you to do [432] is it allows you to go and create a list [434] of people so you see here I have some [436] hypothetical ones for General [438] dentists and then you can take this [441] search URL and you can pay Apollo to [444] find um email addresses and phone [446] numbers associated with all these people [449] so it's basically if you think about it [450] like a massive lead Marketplace SL [453] database and you pay them a little bit [455] of money um I think they [457] pricing is uh I don't know 50 credits [460] for free or something we're going to use [461] way more than that yeah I think the [463] pricing is like 79 bucks a month for the [466] equivalent of 24,000 export credits a [468] year they keep the pricing intentionally [470] vague and difficult um just because they [472] they obviously want you to buy and not [474] really be thinking about that um so it [475] looks like it comes out to I don't know [477] it's like $100 a month for 2,000 EXP [479] credits a month so 2,000 leads I'm going [482] to show you how to do all this for free [483] using a great little tactic that is [485] currently set up um that you can utilize [488] if you know how to use appify which uh [489] which I'll run you guys through in a [491] second okay so what we do first is we [494] sign up to appify then we sign up to [495] Apollo right the third thing we're going [497] to do is we're going to [500] scrape about 4,000 emails maybe not [503] 4,000 emails but 4,000 profiles which [506] will contain maybe 3,000 or 4,000 emails [509] and we'll scrape them using um a [512] combination of these two platforms we're [514] going to basically take the URL here [515] we're going to pump it into appify and [516] it's going to Output a big Google sheet [517] which I show you then we're going to [521] write a [524] Twitter and [528] Linkedin DM template this is going to be [532] a very short and simple template that [534] we're going to write that's basically [535] going to say something like hey how's it [536] going um I love X Y and Z thing about [539] you so I actually recorded a whole video [541] showing how you can do other really cool [543] thing super quick super easy I'm going [546] to give you guys a bunch and then what [548] we do is combined with the template [551] we're going to go [553] [Music] [554] through site and we're going to record [559] that's supposed to be an and sign you [561] know if uh you have to explain what the [563] thing is that you just wrote you [564] probably didn't do a very good job but [566] we're going to go through each site [566] we're going to record a loom video using [568] a platform called [570] Loom and then six we're basically going [572] to combine [575] these the uh DM [581] template and the [584] video and [586] send on mass and on mass here isn't [589] actually going to be on mass because [591] we're going to be paying Zer we're [592] actually have to do this manually but [593] you don't actually need to do this on [595] mass in order to win this whole process [597] that I'm talking about here this [598] six-step process [599] um specifically the steps that you're [601] going to be doing over and over and over [602] again are these two right over here this [604] process might take I don't know like 3 [606] minutes or so per lead that goes through [608] your funnel if you do this 15 times a [610] day it's about 45 minutes to 50 minutes [612] in total uh for $ Z if you do this for a [615] week then you'll have reached out to uh [617] about 105 people a week [619] 420 people a month if you do this sort [623] of thing consistently over time uh [625] you're virtually guaranteed to get [626] interest uh and you're likely going to [628] get it substantially sooner and earlyer [630] than you think I have one disclaimer to [631] make just before I dive into this and [633] actually show you guys what this looks [634] like in practice and the disclaimer is [636] it is much much easier to do this if [638] you're willing to spend a few bucks like [640] I'm operating off of a hypothetical [641] constraint here of [643] $0 but if you're like up to spend even I [647] don't know like $50 or so okay you're [651] going to buy yourself like days of time [654] back in your pocket in your schedule um [656] $50 I know you know means different [658] things to different people so I'm trying [659] to be as accommodating as possible for [661] people at all income levels but if you [663] are willing to invest a little bit of [664] money into this you're going to grow [666] substantially faster you're going to be [667] able to do this sort of directed [668] Outreach much much easier so many people [671] in my communities have closed well over [672] $1,000 just in their first week starting [675] with a less efficient version of what [676] I'm showing you here um and you know [678] they they do so spending I know 501 [682] $150 at some point you're going to have [684] to learn to invest money in order to [685] make money like you know that old the do [687] got to spend money in order to make [688] money um that that a do is true at some [691] point you're going to have to sort of [692] like take a step back and realize that [694] the time that you're trading in order to [695] save a certain amount of money um is is [697] certainly not worth it if you have any [698] sort of reasonable hourly rate but if [700] this is your very first uh business and [702] this is maybe the very first thing [704] you're doing with that very first [705] business then feel free to do this as [706] sort of like a bootstrap mechanism once [708] you've acquired client number one that's [710] paid you a little bit of money um then [711] you can you know scale up from there so [714] okay great let's actually jump into me [716] doing this for you um and I'm just going [717] to follow this exact system right over [719] here we're going to sign up to appify [720] First we're going to sign up to Apollo [721] I'm going to show you to scrap 4,000 [723] emails for every email we're going to [724] have websites as well um we're going to [726] write a Twitter and Linkedin DM template [728] that we're just going to like paste [729] across a big Google sheet we're then [731] going to go through every site and [732] record a loom video using a platform [733] called Loom then we're just going to [734] combine the DM template with the video [736] and then we're just going to send it on [737] mass and I'll show you guys exactly what [738] that looks like so the very first thing [740] we're going to want to do is we're going [741] to want to sign up to appify all right [743] so let's sign up here I'm going to be [744] signing up using one of my many [747] emails and I have to select all squares [749] with [750] stairs pretty straightforward if I do [753] say so [754] myself let's just call myself Nick I'm [756] apparently uh endurable [759] llama apparently the username is already [762] taken I'm endurable llama too am I plan [765] to use it via API yes uh and then I just [767] need to check my email address so let's [770] take a quick peek beautiful looks like [771] I'm verified and now in the bottom left [772] hand corner if you guys pay close [774] attention you can see we have $5 in free [776] usage wonderful now our next step is we [778] need to make an Apollo account okay so [780] I'm going to go to apollo.io I'm going [781] to go sign up for free going Nick at 1 [784] second copy.com okay so by signing up I [786] agree that's fine whatever I think I [789] need to verify so I'm just going to go [791] back to that old email address the same [792] one that I used a moment [794] ago let's activate this [798] now okay I'm just going to add a bunch [802] of bull crap wonderful and now we are [806] signing up to or into I should say [808] Apollo which is fantastic okay we have [811] some onboarding here I'm a REV OBS [812] manager apparently I'm skipping [815] skipping uh I'm getting started without [817] caring about these credits and then uh [820] now I'm just going to go straight over [821] to lists and all I have to do now is [825] basically find the codec [828] crafter appify scraper right over here [831] okay so as I mentioned this one is a120 [833] per a th000 leads so this is about if [836] you think about it $5 for about 4,000 [839] leads or so what I'm going to do next is [840] I'm going to create a list of people [842] that I might be interested in what do we [843] actually do in order to get the data [845] that we need well all we do is we head [846] over here to Prospect and enrich go to [848] people and then what we want to do is we [850] want to create a search for the sorts of [852] leads that we'll be looking to sell to [854] and I have a couple of fields here that [855] have already sort of preut out that way [857] we don't spend a much of time um having [859] me you know think about them from [860] scratch but these work reasonably well [862] as a first pass these aren't going to be [863] the most qualified leads to be clear um [865] you're going to send out a sufficient [867] volume of Outreach so that you don't [868] need to spend all this time energy [869] qualifying you know you do about 420 a [871] month realistically if 10% of those [873] people are your qualified target market [875] and open up your email and watch your [876] video um you'll have a relatively high [878] percentage response rate from those but [880] I'm just going to hypothetically pretend [882] like off the top of my head here that [883] I'm doing like recruitment companies or [886] something so I'm just going to type in [888] recruitment um and this is now my filter [891] basically [892] recruitment uh job titles owner founder [895] founder and CEO founding partner [896] co-founder uh director founding [898] principle partner partner manager [899] partner account manager um inside the [901] United States at a recruitment business [904] and now I do one more thing here that [906] most other people don't when I do my [907] pass all I do is I run a quick test and [909] this test is basically meant to see [911] whether or not these companies or [912] companies that I might realistically be [914] be interested in working with so all I [916] do is I open up 10 of [921] these I think that's 10 1 2 3 4 5 6 7 8 [926] 9 10 I guess that was 11 but that's okay [928] I open up 10 of these and then all I do [931] is I ask myself is this the sort of [933] company that I could help realistically [935] so is this in my target Niche is this um [937] company Niche whatever it is I mean [938] obviously it depends on like the sort of [939] service that you want to provide the [940] sorts of systems you want to sell the [942] sorts of offers you want to put out [943] there um but is this the sort of [944] business that I can realistically tackle [946] um and I I just ask myself that question [948] yes or no and if the answer is if I if I [950] end up getting more than eight out of [951] those 10 within my target Niche then [953] that means that this is pretty qualified [955] it's not like the most qualified [956] obviously but for me for somebody that [958] sends out a I volume I don't worry too [960] much about like the sniper rifle [962] qualification I care more just about [963] like getting momentum and uh and you [965] know sending Outreach for me this is [967] sufficient so let's actually really [968] quickly do this recruitment advisers [971] this is a recruitment [974] company um actually this looks like it's [977] uh it's a recruitment advising [981] company which works that's fine so [983] that's one this is two this is a [985] recruitment company [986] great this is three that's a recruitment [989] company four out of [992] four this looks to be very specific to [995] Texas realistically like I'm probably [998] not going to work with people like this [999] but you know it's still it's still [1001] technically fine I it's still Sol them [1002] system so five out of [1003] five six out of six I don't know what [1006] this is autonom AI recruitment it's kind [1008] of tough for me to say honestly um [1010] because they don't have any data they [1011] didn't really list it here normally they [1013] grab this data from the LinkedIn [1014] profiles let me just take one more Peak [1015] and see if there's anything okay [1017] Boutique yep that looks good [1020] this is another recruitment [1021] company another recruitment company [1024] another recruitment company awesome so [1025] 10 out of 10 basically 10 out of 10 of [1028] the companies that are that I found on [1030] this list with the leads are people that [1032] I could realistically reach out to and [1034] if they were to respond to me positively [1036] I could probably do something to help [1037] them right like I'm an automation [1038] engineer I work primarily with agencies [1040] and and and recruitment firms and you [1042] know High ticket SAS companies these are [1044] all within my target Niche so I am okay [1047] there's no issues here whatsoever we're [1049] good to run this okay so what we do next [1051] is we grab this URL we just go to the [1053] top of the page copy your url then head [1056] over to um appify what you want to do is [1058] if I just go back to the store over here [1062] and if I just type in what was it codec [1063] crafter I think it was called codec [1065] crafter Apollo scraper this one right [1067] over here the one that allows you to [1069] scrape up to 50K leads since we're [1071] signed in already you know the ux looks [1073] a little bit different all we want to do [1074] is we want to paste this puppy in just [1075] like I did here total number of Records [1077] required just leave it as blend L and [1079] for the Run options what you're going to [1080] want to do is head over to timeout and [1082] just click no timeout make sure no [1083] timeout is selected otherwise you're [1085] going to timeout after 5 minutes it's [1086] not going to work you're probably also [1087] going to need to set 512 megabytes of [1089] memory then you just click save and [1091] start now when you save and start [1093] what'll happen is your free usage on the [1094] left hand side will start being used so [1096] I've already run a couple of demos of [1097] this just before the video because I [1098] wanted to test and make sure this worked [1100] my free usage is now $432 out of five [1103] yours will start at zero and then it'll [1104] just slowly creep up this scraping [1107] process this is going to take a fair [1108] amount of time I mean I think for me it [1109] was like 20 or 30 minutes or something [1111] so what you're going to want to do is uh [1113] you know just make sure check back in on [1115] this tab make sure this little thing is [1116] blue if at any point in time it's it's [1118] red or there's an X or something you [1119] might have got rate limited if that [1121] happens just wait like 30 minutes and [1122] then try again afterwards um and then [1125] when you hit your free usage uh limit of [1127] $5 you'll have scraped somewhere around [1130] 4,500 leads I want to say approximately [1133] if my math is not absolute crap um and [1135] with those 4,500 leads we can we can [1137] move on to the next step okay so I'm [1139] assuming that you've now done the [1140] scraping I'm going to head over to runs [1141] here and I'm going to find a a run that [1143] I did earlier this one um was 2300 [1147] results for $276 so a little bit less [1149] than realistically what you can expect [1150] to do but I just didn't want to wait [1152] forever and I wanted to be able to [1153] proceed with a recording so feel free to [1154] do this down to you know 4,000 or [1156] however many um you can scrape before [1158] your free usage limit runs out and look [1160] at the way this data is structured we [1162] have a list of leads with their first [1164] names we have their emails back there [1165] headlines LinkedIn URLs names we're [1168] going to organization IDs organization [1169] LinkedIn URLs like we actually have a [1171] ton of columns here right we have their [1173] position um I think we have the websites [1175] as well yeah we're going to need the [1176] websites here that's what we're going to [1177] be doing our our Loom videos with um so [1180] we have basically a ton of information [1181] all you need to do here is you need to [1182] click export 2300 results export is a [1186] CSV I'm going to create a new Google [1188] sheet then I'm going to go to [1191] import [1193] upload drag this in this will now go [1196] through my list of 2,300 leads [1199] and then I'm going to [1201] import you don't need to do aend I just [1204] um if I don't do this it creates a new [1206] sheet every time which I don't like cuz [1207] then I have an extra sheet titled [1208] Untitled [1210] spreadsheet awesome so now we have all [1212] of the data that we need we have um the [1214] City Country departments we got the [1216] email address we have tons of these [1218] weird scary IDs we have um employment [1220] history the the name of their title the [1224] um various positions that they've held [1226] and so on and so forth I mean Apollo [1227] gives you a crap ton of data as you can [1230] see here but since we're going to be [1232] using this Google sheet as both our CRM [1234] and our database I'm going to want to [1236] get rid of most of these columns so in [1238] general The Columns that you need are [1239] columns that have some information that [1241] you may use during your pitching so for [1243] instance photo um URL if I paste this in [1246] this might be useful at some point in [1248] time so I'm going to keep this photo URL [1249] column in but stuff like um show intent [1253] this is probably just metadata from uh [1255] Paulo and it realistically doesn't [1257] really have any value to us so feel free [1258] to delete that that state you're going [1260] to want to keep sub departments sure I [1261] mean most of these look like they're [1262] founder I don't really think there's [1264] much of a difference to be honest so I [1265] might delete that too uh you'll find a [1267] bunch of like empty columns so feel free [1269] to delete all of the empty columns as [1272] well um yeah and then you know if we [1275] just kind of like scroll all the way [1276] through here you'll see the vast [1277] majority of them have to do with the [1278] organization and their employment [1279] history so I'm just going to go through [1280] and I'm just going to like sanitize this [1282] I'm just going to delete all the columns [1283] that I don't really need U keep in mind [1285] that like the next time that you do this [1286] you're going to have to make sure that [1287] whatever service you are um sorry [1290] whatever export you're bringing in um [1292] you do the same manipulations on this if [1294] you want to stack them together also you [1296] can think of this as like a simple [1298] recruiting sorry as a simple [1300] organization tool if I call this leads [1302] maybe I separate this into recruiting [1303] and then I give it like a date of I [1306] don't know Jan 20th 2025 um you can use [1308] this use whatever like top level [1310] organizer you want in order to set up [1312] your leads but I'm going to do like a [1314] really simple one just cuz I've never [1315] really been the most organized person to [1316] begin with okay great so I have my [1318] little spreadsheet over here and what [1319] I've done is I've removed 99% of the [1322] columns except for that ugly one and [1324] that ugly one I've removed 99% of the [1327] columns um that don't really have any [1329] value or any predictive utility um [1333] apparently not actually let me just get [1334] rid of a couple of additional ones and [1337] then what I'm left with basically is I'm [1338] left with all of the ones that I'm going [1340] to potentially be using moving forward [1342] like if you think about it I have the [1343] city that's useful country useful um I [1346] have some email status that could be [1348] useful probably not employment history I [1350] have um the name or their title at their [1353] first job uh obviously their full name I [1356] have like some Facebook pages which is [1357] cool LinkedIn company Pages organization [1360] profile picks right uh I have stuff like [1364] their title first name last name their [1367] headline their company name that they're [1369] currently with their website um and then [1371] their LinkedIn URL as well all right so [1373] where does that bring us to we are now [1374] done with the scraping of the leads we [1376] are all good to go there um we're going [1378] to do next is we're going to move to the [1380] giving part of our threep approach um [1384] and in order to do that we're going to [1385] need to record some custom videos I'll [1386] show you how to do that with the [1387] spreadsheet and then after that we're [1389] going to move to sending via DM and [1390] email but yeah if you're at this point [1392] you know you've already you basically [1393] just scraped over 4,000 leads um which [1396] is something that you know back in the [1398] day and honestly today a lot of people [1400] will spend the hundreds if not over [1402] $1,000 for and you just did all this for [1404] $ Zer using like a Nifty little method [1406] that I showed you so fantastic [1409] now it's time to record some videos um [1411] just before we do since we're using this [1412] as our CRM you know I have a couple of [1414] additional columns I've added here I've [1415] added a LinkedIn URL um sorry the [1417] LinkedIn URL is actually part of this [1419] there's also a Twitter URL column but [1421] most of these don't have Twitter URLs [1422] unfortunately um if I were to try [1424] filtering this actually and I were to [1426] try removing all blanks and I were to [1429] select this you can see that only 28 [1431] returned um entries with Twitter URLs [1433] right so you know if we wanted to do [1436] this on Twitter we'd have to actually to [1438] go through another manual step we' have [1440] to find the leads Twitter uh the way [1443] that I usually uh that I used to do this [1444] I don't usually do it anymore CU a [1446] massive pain in my ass is I will take [1448] the first name the last name and then [1449] I'll take the organization name and I'll [1451] actually just like paste this into um [1454] Google and then I'll go like Twitter and [1457] then I'll go X and basically what I do [1459] is you know by me copying and pasting [1461] that in there's just a higher likelihood [1462] that the profile that is returned from [1464] Twitter or X will be the person that I'm [1465] looking for cuz odds are they'll have [1467] like their company listed somewhere more [1468] on their Twitter right this doesn't work [1470] all the time works about 70% of the time [1471] I would say realistically may maybe less [1473] maybe like 50 to 70% um you know feel [1476] free to do that if you want to get the [1477] Twitter URL as well I'm just for the [1479] Simplicity and the purpose of this video [1480] I'm just so I can keep everything as [1482] light as humanly possible and give you [1483] guys the stem with which you can add on [1485] to I'm just going to be doing the double [1487] tap using the LinkedIn URL and then also [1488] their email address so what I've done is [1490] I've filtered all entries that we only [1492] have the email addresses um and I've [1494] removed all blanks that has yielded us [1496] 1,400 out of the 2 300 or so that we've [1499] scraped with emails um so if you're [1501] doing like 4,500 or something you'll [1503] probably get somewhere around [1505] 3,500 and now that we have all records [1507] that have email addresses here um and [1510] then you know um a bunch of LinkedIn [1512] URLs uh we can basically proceed with [1514] the next step of our flow which is going [1515] to be writing a quick template to send [1517] them over a Linkin a LinkedIn DM plus an [1520] email address and then recording a loom [1522] video going in detail about something [1524] that we think that we can give them with [1526] with some amount of value so I'm going [1527] to be showing you guys how to do both in [1528] a second and what we're going to do [1530] first is we're just going to make sure [1530] this Google sheet is all nice and set up [1532] I'm going to give you guys like a couple [1533] of quick and easy copyrighting hacks [1534] that you guys could use and then uh [1536] we're actually going to go through and [1537] then record a loom video going through [1539] the organization I'm not going to record [1540] an actual one I'm just going to show you [1541] guys what the loom video looks like I'll [1542] download Loom and set it up and then [1544] finally after we're done we're just [1545] going to check the send column and then [1548] my kpi recommendation for you is going [1549] to be 15 a day I'll talk a little bit [1550] more about that later that's my daily [1552] prescription you can imagine how if [1553] every one of these takes between 3 to 5 [1555] minutes you do 15 of them that's like [1557] about 45 minutes to an hour hour and all [1559] you do is I don't know you just go X [1561] right you do your first 15 or something [1564] was that 15 that's 17 dam is actually [1566] pretty close um you know on day one and [1569] another 15 on day two and and so on and [1570] so forth okay great so in terms of how [1573] this template is going to work the way [1574] that I like to do it is I have my uh [1576] Loom URL over here and basically what I [1579] do is I I create a formula so you can [1582] create a formula in Google Sheets really [1583] easy just go equal and then what I want [1585] to do is I just want to add some text [1587] and then I want to append this loom [1589] video to it so I'll go concat I'll go in [1592] Brackets and I'll say um [1595] hey and then I'll concatenate it to [1598] actually sorry we can't use concat we [1599] need to go concatenate it's multiple [1601] strings so I'll go hey and then I'm [1603] going to go AA so it should now [1607] say um aa1 it should now say sorry A2 [1613] should now say hey Steven which it does [1616] and then I'm going to add a [1619] comma and then I'm going to [1622] go [1624] um let's think [1635] here okay great what I'm going to do [1637] next is I'm just going to wrap these so [1639] that I can see them all let's go here [1642] and then I'm going to make this a little [1643] bit smaller just so you can see what's [1645] going on and yeah the template's going [1647] to be very very simple very quick and [1649] very easy it's going to be hey first [1650] name I think I can save you SL whatever [1652] this company is around $5,000 this month [1654] I know it's out of left field but I [1655] recorded a quick video to show you how [1657] am a real person I just did this and [1659] then uh we paste in the loom the whole [1661] idea here is just to make people think [1663] that this is well I mean it is manual [1665] but to make people think this is a as [1666] manual a process as possible and that [1668] you did a ton of research because a [1670] second that somebody thinks that you [1671] actually went out of your day and you [1672] recorded a customized video for them [1674] they sort of feel obligated to at least [1676] take a look at it um and we're going to [1677] make use like good thumbnail practice [1679] and stuff like that just to make it so [1680] like they they actually see that we are [1681] on their profile we're actually thinking [1683] of them and talking to them um which you [1685] know is going to massively improve the [1686] the the open rate at minimum so uh yeah [1690] that's this is more or less what we're [1691] going to do uh what system are you know [1693] am I selling I mean this is totally up [1694] to you right in my case I'm just going [1696] to sell like a quick little uh [1697] recruitment CRM which is going to be [1698] pretty straightforward for me to demo [1700] but feel free to sell them like lead [1701] generation feel free to sell them uh I [1704] don't know some sort of cold email [1705] system feel free to pitch them some sort [1707] of proposal generator like really this [1709] is where the whole like you know this is [1710] your business part comes into play you [1712] can sell them whatever the hell you want [1714] this column here is going to be where we [1715] paste the loom URL and now you're [1716] probably wondering what the hell is a [1717] loom URL well Loom is a very quick and [1720] easy um browser uh tool basically that [1722] allows you to record videos you can sign [1723] up on their free plan and I [1726] think I check this out it's $0 but you [1730] only get five minutes yeah you only get [1732] 5 minutes which is unfortunate they give [1733] you 25 videos that just means that [1735] you're going to have to delete your old [1736] videos as I mentioned if you're willing [1737] to spend a couple of bucks makes your [1739] life way easier because you don't have [1740] to do the red deleting right 15 bucks a [1741] month unlimited unlimited recording time [1744] but we're going to do we're going to do [1745] this one just for shits and giggles um [1747] pardon my French because I want to make [1748] sure that even people that have no money [1749] no way to start um financially can at [1752] least get their business up and running [1753] and then maybe later on you know [1755] bootstrap and then reinvest their [1757] profits also it looks like Loom was [1758] acquired by it last and that's new [1760] anyway so what happens is um you go over [1762] here to loom.com [1764] well I guess I can't really do this [1766] because I'm technically I already own [1768] the software so let me go loom.com and [1770] then get loom for free you're going to [1772] want to sign up over here once you've [1774] signed up they'll make you download a [1775] Chrome extension this Chrome extension [1777] is a oneclick thing and now all of a [1779] sudden as you can see I'm recording a [1780] video [1781] both here right and then also down over [1785] there um and our video is basically [1788] going to be mostly a screen share where [1790] we're just showing them our screen we're [1791] going to be on their LinkedIn profile [1792] and then we're going to jump over to the [1793] website and then talk with them about [1794] some stuff um but this way you get a [1796] couple of benefits number one it is very [1798] clear this is a real person right like [1800] I'm obviously a a lot of my YouTube [1802] comments like to pretend otherwise I'm [1803] obviously a real person I'm looking over [1805] the website and then two because the [1807] thumbnail of this video is going to show [1808] their LinkedIn profile it's just going [1811] to seem like super customized people are [1813] going to see in the in the in the meta [1815] image and also in the email like hey [1817] this person is on my LinkedIn what the [1819] hell like this this must be something [1820] that was at least worth of use a few [1822] seconds of my time so that's the idea um [1825] once we're done with this after you're [1826] done with the video basically you get [1828] like a little URL that you could paste [1829] and we're just going to paste it in here [1831] then once we're done all of ours for the [1832] day which is going to be 15 um we're [1834] just going to go through Gmail and then [1835] also send people over a LinkedIn connect [1837] request with the video okay so why don't [1839] we give it a try on this fow he looks [1841] pretty cool pretty well put together [1843] let's just make sure that he is what [1844] we're looking for looks to be the [1846] co-founder of college sports recruitment [1849] so just going to pop this open young [1850] professional the specific focus on [1852] construction sales and a dedication to [1853] Youth [1855] Soccer [1856] um I don't actually think that this lead [1859] is uh qualified actually now that I'm [1861] looking at it this lead looks like he is [1864] not doing a recruitment agency he's [1866] doing the student athlete yeah I don't [1867] really I don't really care about that so [1869] every now and then you're going to get [1870] people like this um feel free to you can [1872] do one of two things you can either go [1873] qualified first you can do like a first [1877] pass um and then you can let me just [1880] change my filter so I'm getting all [1881] these fields uh you can do kind of like [1883] qualified as a first pass and then sent [1886] afterwards or you can just delete the [1887] record completely um so I'm just going [1889] to paste all of this down [1892] below and then I'm just going to delete [1894] the records that I don't really like the [1895] ones that I don't feel are qualified and [1897] then I'm just going to move on to the [1898] next one here which was Jen James let's [1900] open this puppy [1901] up and then let's also open up the [1904] organization URL okay great so it looks [1907] like this person run recruitment manager [1909] of the year I think they are [1911] realistically they are the founder and [1912] director to achieve recruitment LTD as a [1915] season recruitment Andel and acquisition [1916] specialist I'm dedicated to helping [1917] compies secure and retain top your [1919] talent for their business my project [1920] goes beyond a bums on seats mentality [1921] focusing on Long per success and the [1923] right fit for every role that looks [1925] pretty solid um awesome and then they [1927] have a really nice beautiful looking [1928] website looks like she is the face of [1931] said website which is obviously great [1932] that means that I can sell something to [1933] her directly um and yeah now all we need [1936] to do is we need to record our loom [1937] video so let me show you guys what this [1939] would actually look like in practice so [1940] the very first thing that I would do is [1941] I would open up the asset or demo that [1943] I'd be interested in selling so in my [1944] case what I'm going to be trying to sell [1946] is I'm going to be selling this [1947] recruitment agent see project manager [1949] and this is a very simple and [1951] straightforward system um just starting [1952] from the top work my way down it's a [1955] system for when new recruitment leads [1959] okay candidates come into a pipeline we [1961] add them to our flow which looks like [1964] this we have an intake status so this is [1966] when people first come in if you click [1967] on the record you can get a bunch of [1969] information about the person as you see [1970] here this is a template so I just use [1972] the term Peter lockeed for everybody um [1975] but you know maybe you'd have their CV [1976] over here uh maybe you'd have a link to [1978] their resume down over here and you [1980] could customize this and add whatever [1981] Fields you want and maybe after this [1984] what we do is the uh candidate proceeds [1987] based off of whether or not a [1988] recruitment agent likes this person or [1991] not so um I'm assuming that this person [1993] has started the interview process or [1995] maybe the the um candidacy process I [1998] should say um and when they do maybe the [2000] recruitment agent moves them to stage [2001] one when stage one happens it runs an [2004] Automation in the background that [2005] triggers an email sent out to Sarah [2007] which sends something that says hey [2009] how's it going Sarah we're really [2010] excited to have you as part of this [2011] process I just wanted to follow up with [2013] you and ask you a couple of quick [2014] questions let me know what your thoughts [2016] are on X Y and Z maybe inside of this we [2018] send them a form that form includes a [2020] couple of fields which just asks for [2022] their answers to various questions then [2024] when we receive a form what we can do is [2026] we can actually populate this or maybe [2027] move this from stage one over to stage [2029] two um at that point maybe we send them [2031] something else maybe we send them a [2033] quick trial or a quiz or something then [2035] we move them over to stage three uh and [2037] finally we do some sort of interview and [2038] then maybe we finally present this [2040] person to a candidate so basically what [2042] I just did to you is what I'm going to [2043] show to the person that I'm going to be [2044] pitching and I'm sure you guys can tell [2046] like I'm not I'm not a professional at [2047] this I'm not magic at this by any means [2050] um I typically just do a lot of sales I [2051] do like high volume stuff and so because [2054] I do high volume stuff my Approach on [2055] every individual one doesn't have to be [2056] freaking perfect I just do it enough [2058] times and eventually the person that [2059] likes what I have to say um you know [2062] says yes to it so let me show you what [2064] this might look like for somebody like [2065] Jen James he hey Jen my name is Nick I [2068] know you probably don't know who I am [2070] and that's okay I am sitting here on [2071] your LinkedIn profile because I work [2074] with recruitment agencies similar to [2075] achieve um and I I deliver them [2077] somewhere between $5 to $110,000 a month [2079] on a recurring basis so I work with one [2081] right now in New York um they do [2083] executive recruiting specifically I know [2084] it's a little bit different from what [2085] you guys do and basically what I did is [2087] built them out this big fancy end to-end [2089] pipeline that manages all of their [2090] recruitment candidates and I just really [2092] quickly wanted to run you through it um [2094] if you're interested in this sort of [2095] thing I would guarantee it I would give [2096] it 100% to you for free there' be [2097] strings attached and I just wanted to [2099] see like how how you felt about it so [2101] I'm a real human being as creepy as I am [2103] um and I thought that I would just like [2105] R run you through the system over a [2106] quick video just because I think that [2108] this is something that can help you and [2109] I've been looking for people like you in [2110] the UK to help anyway so if you're [2113] unfamiliar with this service it's called [2114] clickup it's just like um a task manager [2116] and basically what it does is it allows [2118] you to um customize it to be whatever [2120] you want it to be and so what I've done [2121] is I've gone ahead and turned it into [2123] like a recruitment candidate pipeline [2125] one that um essentially automates a [2127] large portion of the recruitment uh [2129] process so you know most recruitment [2131] agencies that I work with they tend to [2132] have a number of different stages that [2134] they take uh candidates through and so [2137] um I've just devised a very simple one [2138] here that consists of an intake stage [2141] and then a stage one stage two stage [2142] three an interview stage and then a [2144] presentation stage we actually presented [2146] to the candidate um we can also [2147] disqualify leads or candidates as they [2149] come in through the pipeline and what [2151] I've done is I've just attached all of [2152] these to various automated actions that [2153] do things when you just change the stage [2156] so I'm just going to give you a quick [2157] example example this is one called Marie [2159] Como I'm assuming Marie is applying for [2161] some job and maybe I don't know we have [2163] a client here called workflow Loop that [2165] we're looking to place at some healthc [2167] care company for I don't know like [2168] Health Tech um and basically the way [2170] that this works is when Marie comes into [2172] the pipeline she's given a status of [2173] intake when one of us recruitment people [2175] actually looks over Marie we just give [2176] her a quick click and then we uh you [2179] know can kind of read through her CV let [2181] me do this with Sally um Sally has like [2183] a curriculum V over here she has a CV [2185] and then if we scroll down further have [2187] some Fields here that attach a resume um [2190] they attach uh I don't know whatever [2192] information you want really I guess is [2193] what I'm trying to say so I'm currently [2195] running this a recruitment company that [2196] does over $250,000 a month just in [2199] Topline and they typically take between [2201] 15 to 25% of the first year salary um [2203] and this system works extraordinarily [2205] well it's very very scalable the reason [2207] why is because when you like you know [2209] let's say I'm a recruitment I'm somebody [2210] on the team and I'm looking over Marie's [2212] um resume and I want them to I want [2215] Marie to move to stage one all I need to [2217] do is I just go over here to status I [2218] click stage one and then this is tied to [2221] a number of automated actions that [2222] automatically send Marie an email they [2224] automatically um give her access to a [2226] form and then they automatically [2228] basically ask Marie hey we love uh your [2231] application we think that you're a great [2233] candidate to get to know and and you [2234] know move forward with would you mind [2235] filling out some information really [2237] quickly in the form that we sent you [2239] Marie then fills out this form and then [2241] when she fills out the form she's [2242] automatically moved down to stage two [2244] where now we get some notification that [2245] tells us hey Marie's done this form here [2247] here's a bunch of form info uh here's [2249] here are all the fields that she filled [2250] it is she a good match or not if so we [2252] move Maria over to stage three and maybe [2254] stage three involves some sort of I mean [2257] it depends on how you guys do your [2258] equipment flows maybe some sort of trial [2260] project or some sort of task um before [2262] we move Maria over to an interview stage [2264] and then assuming she passes the [2265] interview stage we then um pump her down [2267] to presenting and actually present her [2268] to the client the really cool part about [2270] systems like this is we basically have [2272] to automate all of it like uh and it [2274] totally depends on what you want I know [2275] that you probably don't have that simple [2277] stage system you know just given how how [2279] Niche down you are with clinical and [2281] non-clinical staff within the NHS you [2283] probably have uh like your own process [2285] you probably know it works really well [2286] here that's kind of like your your [2287] special sauce so to speak so I'd love to [2289] just customize this for you build you [2291] out one it wouldn't cost you a Cent and [2294] um just given the the volume AB business [2295] that I have a feeling you're probably [2296] doing right now I think that the system [2299] would work extraordinarily well for you [2300] and you know you have nothing to lose [2302] essentially giving it a try if this [2304] sounds like something you might be [2304] interested in then just send me a reply [2306] to this email um you and I can set up a [2308] quick 10 or 15 minute call where I just [2310] ask you a couple questions about how you [2311] want this to look and then I can go [2312] ahead and deliver it to you in about 48 [2314] hours or so um before you know we can [2316] chat about actually like implementing [2318] this having some some candidates flow [2320] through this Pipeline and so on and so [2321] forth so yeah I hope you appreciated [2324] this um I know this again was sort of [2325] about a left field but this is just [2327] typically how I do business and how I [2328] acquire clients for my service so hope [2330] you just appreciate the bluntness and [2331] the forwardness I'm assuming that this [2333] does work I'd love to work with you on [2334] like a longer term sort of monthly [2336] recurring basis um you know feel free to [2338] Google me if you're skeptical but I add [2339] a ton of value to companies about your [2341] size with Automation and I'm relatively [2342] well known for it at this point too have [2344] a lovely rest of the day cheers [2346] bye okay great so after that we have a h [2351] video in my case it was 5 minutes [2353] basically on the dot looks like I copy [2355] this puppy over I just go down to my [2357] spreadsheet and then all I do is for the [2360] record for the person that I just did [2361] this video for I just paste this loom [2363] video here and now I have basically [2366] everything I need in order to to go go [2367] ahead and actually send this message so [2369] she's qualified um what I would do you [2372] know if I were actually doing this at [2373] scale for my 15 of the day is I would go [2375] through um 15 of these profiles all with [2378] their own organization websites so [2379] you're going to want to make sure that [2380] like you're filtering out all blanks for [2382] people that only have websites just make [2383] it really easy for you I'd add 15 Loom [2385] videos here and then all I do is I'd go [2387] to the LinkedIn [2389] URLs I would add a connect request and [2393] add a note and keep in mind you're going [2394] to be character limited here so I don't [2395] know if our message is necessarily going [2397] to work work it might be a little bit [2398] long oh no it's [2401] not um and then I'm just going to do a [2403] little bit of [2405] formatting and then I'm just going to [2407] paste it in and you know feel free to [2409] customize this however much you like [2411] like once you have this window open if [2413] you think about it like every additional [2415] second you spend here customizing this [2416] as something you found on their website [2418] or something that you like about them um [2419] it's going to add you some some [2420] additional Pro probability them [2422] accepting your connection request and [2423] then you know moving forward with you uh [2425] but yeah I'm just going to send this [2427] over as [2428] is let me know your thoughts thank you [2432] I'm going to send this over as is and [2434] then I'm going to go over to my email [2436] address then I'll go over [2439] here paste the same thing in then I'm [2442] just going to grab uh Jen's email which [2445] was somewhere around [2448] here I'm actually going to grab her [2450] email I'm just going to go Jen James at [2454] whatever you know achieve [2456] recruitment.com [2457] co.uk I'm just assuming this is her [2459] email but obviously I'm not going to [2460] paste it in uh and then you know for [2463] subject lines kind of depends on what [2465] you want [2466] um just Tred to connect with you on [2470] LinkedIn dot dot dot that works [2472] reasonably well I find um or you could [2474] say Jen just tried to connect with you [2476] on LinkedIn some sort of variation of [2478] that's fine uh the cool part about email [2481] is when you do an email like this and [2483] actually when you do LinkedIn a lot of [2485] the time um you you get this as well in [2486] like the little connection message box [2488] you get like an embedded gift preview [2490] when you do it over email you actually [2491] see how like it's my face and then it's [2494] her profile and so she can actually see [2496] that I'm on her profile right now the [2498] one thing I kind of screwed up with this [2499] video now that I'm thinking about it is [2500] I just didn't scroll up and down at the [2502] very beginning which you're going to [2503] want to do is you're going to want to [2504] scroll up and down at the beginning that [2505] way she doesn't think this is just a [2506] screenshot it's actually like me [2507] physically visiting or you could zoom in [2509] on stuff or whatever but just have some [2510] sort of dynamic for a second and then [2513] yeah that's that's more or less it um [2515] just going to go Nick I'll send this off [2518] and then voila we're done uh you know [2520] we're done one piece of lead Outreach [2522] today which is fantastic so all I would [2525] do if I were in your guys shoes is I [2526] would I I would take this and then I [2527] would scale this approach up um you know [2529] presumably not all these people that I'm [2531] reaching out to Mike Heather Heidi Jeff [2533] Michelle they're not all going to look [2534] at our messages for one but two they're [2536] also probably not all going to be in a [2538] space where they need the message maybe [2539] the person that I just sent it over to [2540] doesn't actually care about this or [2542] maybe I don't know they don't actually [2544] run this business or something maybe [2545] they have like a LinkedIn uh company but [2547] they haven't touched it in like a few [2548] years so a lot of these pieces of out [2550] you're going to be saying they aren't [2551] necessarily going to be qualified um but [2553] given just how easy it is to get up and [2555] running given that there's no additional [2556] cost so you don't need to sign up for [2557] anything no make.com account no nadn [2560] account uh no paid apollo. account no [2562] paid appify account this is about as [2564] close as you can get to like a free [2566] Outreach method that still allows you to [2568] squeeze the highest Roi uh out of every [2571] lead and it's personally the one that [2572] you know I would I would recommend you [2573] do so yeah we just go down the list we' [2576] we'd add all the videos here for uh you [2579] know fill this in with the actual videos [2580] of course we'd qualify all these and [2583] then basically every day uh my [2585] recommendation for you would be to do 15 [2587] and no more than 15 um to start um in [2590] terms of my prescribed here yeah I'd go [2592] 15 per day and then the one thing that I [2594] didn't really cover in this video was to [2595] send them a stripe and Paypal invoice so [2598] stripe and PayPal are both free to sign [2599] up for basically once you have somebody [2601] on a call or somebody that's interested [2603] in you you know sending or receiving [2604] some money and the actual sales call is [2607] a is a whole different story feel free [2608] to check my channel for videos on how to [2610] do and structure the sorts of sales [2612] calls I'm talking about specifically um [2614] you can also jump over to uh maker [2616] school and then grab like an actual [2618] sales skeleton resource over here which [2620] actually guides you through what my [2622] process looks like every time um but [2624] once you have them on the call the [2625] question is obviously how do I you know [2627] make money out of them uh my [2629] recommendation for you is to send them a [2631] free invoice using either this service [2633] here called stripe which allows you to [2634] very quickly get up and running with an [2635] invoice they'll charge you [2637] 2.9% plus I think 30 cents for every [2640] dollar that you make not every dollar [2642] but per successful charge for any [2644] domestic cards and then I think they [2646] charge you some additional ones if [2647] they're like I don't know like outside [2649] of the country or something like that [2651] and then for PayPal um it's it's the [2653] same thing I think their pricing is a [2654] little bit higher and they tend to have [2655] pretty poor exchange rates but all you [2657] need to do is just uh pump their email [2658] into an invoice with like the line item [2661] for whatever the services that you're [2662] providing presumably because you're [2664] going to be offering something for free [2665] at least initially you're going to have [2667] to offer some very big guarantee like [2669] hey I'm going to make you this much [2670] money hey I'm going to save you this [2671] much money hey I'm going to get you this [2672] many booked meetings leads or or [2674] whatever um so presumably your very the [2677] very beginning of your work is going to [2678] be free or it's going to be very low [2680] cost but the second that you're done [2681] with that you can get into charging [2682] actual money to do similar related [2684] Services um the quickest and easiest way [2686] to do that is by charging somebody an [2688] hourly rate for implementation it's not [2689] the most scalable way but it's easily [2692] like the most simple way for beginners [2693] to get up and running um if I could just [2696] right before I call this a day here if I [2699] could grab my trusty Escala [2702] draw um once you're once you're done [2704] with that you know you're probably going [2706] to have some sort of free [2708] project or you know sometimes you'll [2710] find people that are just going to want [2711] to pay you regardless especially if [2712] you're new so it'll be a or b low paid I [2717] usually do the low paid personally when [2719] I have people that reach out to me I [2720] always like to pay them because it makes [2721] them a lot more motivated I just had a [2724] great guy reach out to me and offered to [2725] do um [2727] like social media management for me and [2729] he's like I was like well how much do [2730] you want for this and he was like $1,000 [2732] and I was like I'll pay 1,500 and now [2734] he's doing incredible job but anyway so [2736] both of these are going to go into some [2737] sort of low paid project the simple the [2739] the simplest way to get started here is [2742] with like an [2743] hourly hourly uh is basically just like [2745] the zero to one like if this over here [2748] is if this free project here is like [2750] zero then hourly is like one and [2752] basically like hourly just means uh you [2755] know you could charge I don't know [2757] like let's say $35 an [2760] hour and for every hour of your time um [2764] you know you get $35 and then they get [2766] some sort of value exchange between like [2768] a a service you provide and maybe the [2770] service is you I'm touching up that [2772] system that I showed you guys a moment [2774] ago um on clickup maybe the services you [2776] building some automation or signing into [2778] make.com or who knows maybe the service [2780] isn't related to automation at all maybe [2782] they like your Outreach so much they're [2783] like hey I really liked what you did [2784] with me I want you to do it for me [2786] professionally I'll pay pay 35 bucks an [2787] hour for a plus 10% of closed [2789] deals obviously once you're at the point [2791] where you're actually in a room with a [2792] business owner um [2793] 99% of your your work is done the sales [2796] part although you know most people think [2798] it's the the hardest part the sales part [2800] is also like the highest Roy part every [2801] minute you spend in that call um you [2803] know is is is a minute with basically [2805] infinite opportunity but okay um and [2807] then after you do hourly my [2808] recommendation for you would be to start [2809] selling some sort of like fixed [2812] project so so fixed price [2815] project which now instead of it being [2817] like $35 an hour what you do is you do [2819] like [2821] $2,000 for some sort of like you know [2824] productized [2827] package and then after the um you know [2830] fixed rate and maybe don't do $2,000 [2832] exactly maybe do like I don't know like [2837] 2,100 and uh three or something wa 2,150 [2842] if you just start charging like flat [2844] amounts like 2,000 3,000 4,000 people [2846] often times think you're just pulling [2847] those numbers out of your ass but [2849] basically what you do now is you offer [2851] some productized like fulfilled package [2853] in the $2,150 which is cool and then [2855] from there what you do is you go [2858] retainer or [2862] subscription which is where now you [2864] charge somebody like a a flat amount [2866] maybe [2868] 3,550 and instead of it being an hour [2870] you do per month okay this is typically [2873] how um pricing Pro progresses um you [2877] know typically if you're like a beginner [2878] you start kind of all the way over here [2880] you do the low paid or free stuff then [2882] eventually you go retainer or [2884] subscription um like I do for instance I [2887] hope I spelled beginner right beginner [2890] and let's just go [2893] experienced then over here is sort of [2895] like I don't know like [2898] amateur yeah awesome I hope that makes [2900] sense so just to recap um this [2902] three-pronged approach you can employ in [2904] basically whatever way you want um you [2906] always start with some sort of like data [2907] getting or data finding you need to find [2909] the people that you're going to do in [2910] the Outreach to right from there you [2911] need to give them something that's free [2913] or high value in my case I gave them a [2916] uh well I gave them a walkthrough of a [2917] pipeline that I'm guaranteeing for free [2920] assuming that they're interested in my [2921] offer then I come in and then I [2922] implement the pipeline and then when [2924] they see how good I am the idea is that [2926] I can very easily upsell or cross sell [2927] them to some different service then [2929] after that you need to find a way to [2930] actually deliver this to them cuz it's [2932] one thing to like record a customized [2933] video and have that sitting in your [2934] inbox another thing to actually send it [2935] over and so in our case our delivery [2937] mechanism here was to send via um DM and [2940] email and I gave you a couple of [2941] potential platforms you could do [2942] LinkedIn Instagram Twitter as you saw [2944] LinkedIn was the one that was [2945] automatically enriched um with the uh [2947] Apollo leads that we were getting um but [2949] there are also a lot of ways to get like [2951] Instagram and Twitter profiles and then [2953] uh yeah that's our three-pronged [2954] approach you can mix and match this with [2956] whatever the hell you want and in terms [2958] of how you do this with $ Z as I [2959] mentioned if you add a little bit of [2960] fueld of the fire and you're willing to [2961] spend like 50 or 100 bucks or something [2963] like that this whole process can get a [2965] lot better and you can get a lot more [2966] qualified a lead base um you could [2968] scrape like LinkedIn jobs for instance [2971] instead of necessarily just um you know [2973] um um a basic Appollo list or something [2976] probably get three or four times higher [2977] response rate that way but just given [2979] how limited we were you know this is [2980] where I would start if I had zerar and I [2982] absolutely was not up to paying even uh [2986] you know even even a buck in order to [2988] get my leads so if you guys have any [2990] questions about this let me know really [2991] appreciated all of your views and your [2993] comments on the last few videos of mine [2995] I've had a lot of ESS on YouTube more [2997] generally and all of it is because of [2999] people like you that watch all the way [3000] to the end so thank you very much um [3002] yeah just leave a comment down below if [3003] you guys uh you know want anything in [3006] addition to what I've talked about here [3008] maybe if something that I've mentioned [3009] here wasn't clear otherwise if you guys [3011] can give me a big Sal like subscribe do [3013] all that fun YouTube stuff I'll catch [3014] you all guys in the next video cheers

Video: https://www.youtube.com/watch?v=6b442bN0CyI
Title: N8N Foundational Concepts (AI Agents, JSON, Logic)
[0] what's up everybody in this video we're [1] going to be covering some foundational [2] nadn nodes we're going to be talking [4] about JavaScript object notation [6] commonly abbreviated as Json for short [8] we're going to be talking about [9] different field types in n8n then [11] finally we're going to wrap it all up [13] with how data is represented on this [15] platform and how you can best make use [16] of it without further Ado let's dive [18] into [21] it so if you guys have seen some of the [23] other videos on my channel you'll know [24] that I put a very big emphasis on [26] building things practically I don't [27] really care much for the academic side [29] of things I prefer we just Dive Right In [30] and then teach some of these concepts by [32] actually putting nodes together making [33] workflows that you could sell for [35] business purposes or Implement into your [36] own companies and that's what we're [38] going to be doing today we can't really [39] get away from I'm doing some of the [41] academic stuff with Json just because [43] you know if you don't know JavaScript [44] object notation you are going to have to [46] learn some things like types and objects [48] and what variables are and stuff like [49] that but for the most part we're going [51] to be learning all of these Concepts [52] down here by building two workflows the [55] first workflow is up here and [57] essentially what this does is it feeds [59] in a bunch of lead data to artificial [62] intelligence this is the Google sheet [64] containing four leads with a bunch of [66] information here so we're going to feed [67] in this information AI then what we're [69] going to do is we're going to have ai [70] generate a subject line for an email an [73] icebreaker for an email an elevator [74] pitch for an email a call to action and [76] then a postcript little PS sign the idea [79] here is this is a real workflow that [81] people pay me for and so these are the [82] ones that I want to I want to start with [84] um essentially this will allow you to [85] customize email Outreach that it seems [87] as if you've done a lot of research into [88] the person uh which is very very [90] valuable in a business setting the [92] second workflow is a little bit more um [95] peculiar I guess there's this service [96] out there called source of sources it [98] used to be called helper reporter ataro [100] basically the way that it works is this [101] lovely gentleman here Peter will send [103] you uh a bunch of [105] information uh basically where [107] journalists are looking for [109] Professionals in a certain industry to [112] weigh in on some developments and then [115] if you're a professional in the industry [116] and you give the journalists some I [117] don't know good info they can actually [119] tag you and then like use you in an [120] article it's quick and easy way to [122] basically get listed in a magazine or [124] some very authoritative data source and [126] what this system does is it basically [128] gets an email like this then it pumps in [130] the titles into AI does some cool [132] processing um and then we actually write [134] a draft of that email as if we were an [136] expert in that field which all you need [137] to do is just like quickly review give a [139] once over edit a little bit and then [140] send off to journalists there's another [142] system that I've sold a number of times [143] and so I want the videos that I create [145] on naden to be practical in nature I [147] want them to be on things that you're [148] probably going to be using for business [150] purposes so these are the two systems [152] that uh we're going to be building [153] they're cool systems and all but you [154] know for the purpose of this video I [155] kind of want to build them from scratch [157] so why don't we just exit out of that [158] puppy and then uh oh let me just do one [161] thing actually I'm just going to copy [162] over the prompt here because uh if I [164] don't The Prompt can be kind of annoying [166] to write I don't really want to take up [168] a ton of our time so that's the prompt [169] that we're going to be using for AI and [171] for the rest of this we'll just get rid [173] of that okay the very first concept I [175] want to cover are fixed fields and [177] expression Fields um I'm going to be [179] basically convinced ing you to just use [180] Expressions all the time and I'm also [181] going to show you how to map different [182] field inputs cuz the last time that we [184] jumped around naden we built a couple of [186] workflows but I was sort of glancing [188] over a couple of the um like some of the [189] Nuance behind fields and stuff like that [191] so for the purpose of the demonstration [192] it's going to be pretty easy we're just [194] going to um build the first system out [196] by clicking a button that is going to [198] get a bunch of data from our Google [200] sheet and then we're just going to pass [201] all of that data in kind of row by row [204] into AI um pretty simple pretty [206] straightforward but ultimately something [207] that is very useful and you'll find [208] yourself doing quite a bit if you do [209] Outreach so first things first I'm just [211] going to press tab that's going to open [212] up this trigger thing on the left hand [214] side and then you know if you type [216] trigger here it'll be if you type trig I [218] should say you'll see a ton of options [220] here um you could either do that or you [221] can just scroll down to the bottom where [222] it says add another trigger and then [223] press trigger manually either is fine [225] but for the purpose of this demo I'm [227] just going to do that and basically what [229] I want to do is the second that I run [231] this trigger when I click on test [232] workflow um I want to uh get all of the [235] rows and all the data in my Google sheet [237] so I'm going to go up here to nodes I'm [238] just going to type in sheet we're going [240] to get Google Sheets now what I'm going [242] to do is if you scroll down here you'll [243] see that there's this one node called [245] get rows in sheets that's what I'm going [247] to click on now I've already done a [249] connection before um what you're going [251] to have to do if you want to connect to [252] your Google Sheets account is go to [254] create new connection now because I'm on [255] the cloud hosted offering and keep in [257] mind if you're not on the cloud hosted [258] offering um these sorts of connections [259] are a little bit more difficult you have [261] to go to Google Cloud console and get [263] set up there but because I'm on the [264] cloud hosted offering all I need to do [265] is Click sign in with Google over here [267] and I'll actually go connect to my email [270] account and then it'll create a [271] credential for me which is pretty handy [274] so you can see it's saying it's already [275] has some access just because I've [276] already done this connection but for the [277] purpose of the demo I just wanted to [279] show you guys what that looks like um [281] and then I'm just going to save this [282] connection here with a name so that it's [283] just nice and organized okay and what we [286] want to do is we just want to grab this [287] Google sheet up here right so in NN [290] there a variety of ways um to do this [292] but I'm just going to I'm going to be [293] looking for a document sorry a sheet [296] within a document my bad the document [298] we're going to want to select is from [299] the list we're actually going to go down [300] we're going to choose this one called [302] leads commas space January 27th [305] 2025 as you can see we've already [307] manually found that okay and then the [310] specific sub sheet that we want is this [313] sheet one because I guess that's the [315] only one that we have here so I'm just [317] going to click on this it's going to [318] actually do an API call to Google Sheets [320] it's going to find that there's only [321] sheet one here that I can give it a [323] click and then voila let me just run [325] test step and let's see what happens [326] when I click test okay great so I've off [329] fiscated this data this data is not um [331] actually one for one whoever this this [333] person is I've gone through and I've [335] like renamed them and stuff like that [336] just for privacy purposes but as we see [338] on the right hand side here we we have a [339] bunch of output and we can see the [341] output in a variety of ways tabular Json [343] schema most people and N they like the [346] schema look because it just kind of [347] compresses the information nicely it's a [349] little bit easier for them to see I'm a [350] little zoomed in here too um but uh yeah [353] you know normally like you see most of [355] the node variables which is pretty handy [358] but this Json one over over here this is [360] really intimidating for a lot of people [361] and so we're going to cover this in [363] detail I'm going to show you exactly how [364] you read Jason what all those things [366] mean um but just I just want you guys to [368] know that for the remainder of this [369] course I'm going to be using primarily [370] the Jason and the schema view but I'm [372] actually going to tend towards Jason and [374] the reason why I'm going to be tending [374] towards Jason is because like Jason says [378] all the same stuff that the schema view [379] does anyway um but unfortunately part of [382] the reasons part of the way you learn [383] Jason is just by kind of staring at it a [385] lot and squinting at it and kind of [386] inherently and intuitively understanding [388] the formatting if we're going to be at [389] outputs all day anyway we might as well [391] kind of get you know kill two birds with [392] one stone all of the same data in Json [396] is represented in schema anyway it's [398] just instead of like the quotes around [399] key names and stuff you just have sort [401] of this light gray box um alongside like [403] a type sign here so I guess the point [405] I'm making is we might as well double up [407] and just learn how Jason looks while [408] we're proceeding with the course and [410] that's why I'm going to be using this [411] even if it looks a little bit more [412] intimidating don't worry too much about [413] it okay so I said that I talk about [415] Fields right um so fields in NN just as [418] we're me just as I was covering on in [420] the previous video are stuff like this [422] right we have this sort of Center node [425] config option here for our Google Sheets [426] node um you know one of the fields we [429] selected was this YouTube credential to [431] connect with another one was this [433] resource sheet within document operation [435] document sheet but I want you to know [437] that these are actually all [439] representable in code as well so as you [443] see over here we have two different [444] types of fields one's called fixed and [446] the other's called expression so by [448] default just to keep your life easy and [450] to not like freaky the hell out [452] especially if you're like a Nubian NN [454] they're going to keep all the fields to [455] the fixed type but if you click on [458] expression you'll see that things are [460] now a little bit different notice how [463] when I went to fixed we had like a nice [466] little you know it said um leads January [467] 27 2025 and then when I jump over to [469] expression now we have some big long ID [472] so what is this why is it structured [474] that way and what exactly does any of [476] this mean well if we pay close attention [478] this IDE D field here one lowercase o t [482] r r a T4 C Capital C and then the rest [485] of this big long ID string over here if [488] we go to our Google sheet what we'll see [490] is that that ID string actually matches [492] the URL of our Google sheet [494] exactly this takes me to a wider Point [497] most of the time sorry about that most [498] of the time anytime you're accessing a [500] resource on some API or even just on the [502] internet they will store the ID of the [505] resource which is sort of like a hidden [507] representation of it in the URL so you [511] know one of the examples that I provided [512] the other day was I went over to clickup [514] right and inside of clickup I like [516] searched around for some record I'm just [518] going to click on this here this is this [519] was my old content calendar um how to [521] send 1,000 cold Instagram DMS per day [523] that was one of the things I wanted to [525] do this right up here is the ID of the [527] record 86b 27A 7zm right if I wanted to [532] do something with this through their API [534] this is the ID of the record that I [536] would be calling so once you know that [538] like clickup uh Monday [540] uh like even Gmail basically every [542] service out there they will store the ID [543] of the thing you want to modify or [545] update or whatever just in the URL so if [548] ever a field asks for an ID you can [550] almost always just go to the URL of the [552] thing on the actual user um you know on [555] the actual app like the user interface [557] then you could find that URL thing you [558] just hardcode it in here okay so that's [561] just a just a brief look at some of the [563] differences between fixed and expression [565] basically fix a lot of the time just to [567] to keep you guys um to make sure like [569] we're on the same page here fix is just [571] the simpler version then expression is [573] sort of what's actually going on under [574] the hood so you know um naden just [577] defaults to fix like it just did here [580] because it doesn't really want to scare [581] you away but in order to really unlock [583] the value of NN we have to go to the [585] expression um field and I'm going to [587] show you here why you know I basically [589] just use expression for everything at [590] this point okay so uh looking at the [594] output here what we have is we have we [595] fed in uh we clicked and then we got a [597] click event and that was counted as one [599] item and so nen actually shows you the [602] number of items that are passed on then [604] we pumped that click event into Google [606] Sheets and then that click event [607] outputed four items so now we actually [609] we're working off of array data or [611] tabular data which I'll cover um in a [613] moment but essentially with these four [615] items now what we want to do is we want [616] to pass each of these items into [618] artificial intelligence and we want to [619] have ai tell us something about it [621] before um writing some cold email copy [624] for us to insert into an email or maybe [625] we could just send a Gmail directly or [627] something um so what I'm going to do is [629] I'm going to click on this button I zoom [630] out a little bit what we want is we want [633] um if you go down Advanced AI we want is [636] we want this open AI node and [638] specifically what I want is I want the [639] message a model so if you've seen me [642] connect this in the previous video [644] you'll notice that you know in order to [645] create a new credential you actually [646] have to go and you have to find the API [648] key um from open aai in order to do this [650] this is pretty simple to do uh you just [651] type uh platform. [654] open.com I think it's like account API [656] or something you have to click on um [658] this button here to open the [659] documentation to tell you more but [661] anyway you can basically just create an [663] API key for NN um it's very simple and [665] very straightforward to do so and I've [667] already done this and I've called it [669] YouTube so I'm just going to use that [670] credential just so I don't have to like [671] leak another API [672] key now again we have a ton we have a [674] ton of fields we have resource text [676] operation message a model model from [678] list choose keep in mind the fields are [681] again fixed right it's trying to make it [683] really easy for us to select GPT 40 so [685] I'm just going to go down here type [687] GPT four [690] and then I'm just going to click 4 o and [694] now we actually enter in the text that [695] we're interested in okay and this is [698] really where you're going to start [699] learning the differences between the [700] fixed and the expression so fixed again [702] fixed is just I mean it's what the name [704] implies it's fixed it's text you can't [706] make this Dynamic you can't add [707] variables to it it's the simplest way to [709] get up and running with a node which is [711] why nadn will default to fixed but over [714] the course of the next few minutes I'm [715] going to convince you to basically [716] always just use [717] expression okay so I I saved my prompt [720] somewhere else the first thing I'm going [720] to do is I'm going to add a system [722] prompt so I'm going to go down here to [723] system I'll just say you are a helpful [725] intelligent writing assistant usually [727] the way that you will do um AI calls is [730] you will have a system prompt first then [732] you'll have a user prompt after and the [734] user prompt is where you actually give [735] it the instructions you want it to do so [737] you know in our case it's going to be [738] like hey I want you to write a template [740] um I want you to write a bunch of fields [742] that are templates that we're going to [743] insert in a cold email iter and then [745] after you have the choice to provide a [746] bunch of examples so you could provide [747] an assistant prompt and then you could [749] another user prompt assistant prompt [750] user prompt assistant prompt you can do [752] that however many times you want just to [753] show it how things work for the purpose [755] of this example I'm just going to be [756] providing a single user [758] prompt and what I'm going to be doing [760] here is I'm just going to copy over my [762] prompt [765] below let me paste that in and let's [767] just read through this together your [769] task is to personalize an email you'll [771] do this by taking as input a prospect [773] LinkedIn profile then editing five [775] templates for different sections of the [777] email subject line ice bre elevator [779] pitch call to action and a PS or [781] postcript field if you're unfamiliar [783] with postcript you know at the bottom of [785] an email just say PS I really miss you [787] can't wait to see you that's what a [789] postcript field is we basically want AI [791] to automate that for us because there's [793] a lot of value in making those postcript [795] fields seem human ridden anyway now [798] we're offering it some templates subject [800] line hey name I think I have something [802] for you re and then cool thing about [805] them that we discovered let's just go [807] unique thing about them or their company [811] Icebreaker I know you're doing thing and [813] I've been following related thing for a [815] while so I figured it made sense to chat [817] next elevator pitch the tldr I think I [820] can add 5K a month to their paraphrase [822] business with a few automated systems [825] and then there's a call to action I just [826] did this for a very similar industry [828] company and we had 28350 in a few months [830] they do related things so I'm very [832] confident I can duplicate this at [834] minimum would be 100% risk-free I'd [836] guarantee at least 20 appointments [837] booked or you wouldn't have to pay [839] pretty neat huh so then I give it a [841] bunch of guidelines and feel free to [843] pause the video if you want to take a [844] look at it the last thing that I do is [846] then I say responding JS n using this [849] format and if you've at all used AI [851] before you'll see this Json thing come [852] up again Json Json Json and we're going [854] to cover that in just a few minutes so [856] buckle up okay great so we've given it a [858] ton of uh instructions in the first user [861] prompt so what I do next is I just give [862] it a user [864] prompt with the actual body of the input [867] that I want to give and if think back [869] here um you know what this Google sheet [871] is just just so you guys um are all on [873] the same page as me is I've basically [874] gone and I've scraped a bunch of data [875] about random people on the internet that [877] fulfill some criteria that I have so [879] chief executive officer director of [881] demand generation director of marketing [883] business development manager some [884] Dentistry person or something okay and [886] then I have a bunch of fields here one [888] of the fields I have is I have a summary [889] field where people basically write their [891] own summary of who they are and what [892] they care about we have a ton of other [894] fields as well we have company location [896] we have a description of their title we [898] have um I don't know their their [899] industry and the cool part about AI is [901] you could just feed this into a large [902] language model and have it have it [904] automate something for you have it have [905] it write something customized and so [907] that's what we're going to be doing here [909] the thing is though right how do I get [912] Dynamic data into this so I don't know [914] let's say um one of the things I want is [917] I want to feed the AI the person's full [919] name notice how this is fixed here right [921] if I just typed Amy [923] wabby then that means that every time I [925] do an API call that includes their full [927] name I'm going to have say Amy wab this [930] is fixed it's the same thing every time [931] if you want to make this Dynamic what [933] you have to do a variety of ways to do [935] this but I'm going to use the Expression [936] field is you have to click [938] expression and then you drag the field [940] that you [941] want and then you drop it and you'll see [944] that when I do that we've now just [946] inserted a little bit of code this is in [950] N8 n's um code format the equivalent of [954] the variable that we just pulled from [956] our pinned data or our our data from the [958] uh input and what you see down here is [960] this is separated into two halves the [962] top half is the code representation we [965] said full name just in like regular [967] characters and I can manipulate this how [968] I want then a colon then a space and [971] then there's uh curly bracket curly [972] bracket space dollar sign JS o n. Fu l l [977] n m space and then right curly bracket [980] right curly bracket up here you have the [982] code representation and then notice that [983] underneath here we have result it [985] actually shows us what the data that [987] we're pulling in is from the input which [990] was right over here now I'm going to be [992] feeding it a bunch of data in order to [994] have this personalized I'm going to be [995] feeding in their full name I'm going to [996] be feeding the summary I'm going to [997] feeding in the title but I just want you [998] guys to to notice how these these [1000] variables change between the full name [1003] between the summary between the title [1005] and you're going to notice that there's [1006] kind of a pattern there okay so full [1008] name was that we'll go title I'm just [1011] going to drag this [1012] in paste it in notice how the first one [1015] was JS n. full name second one was js. [1019] tile [1020] right let's see what the third one is [1023] let's go down here to [1025] company company if I drag and drop this [1028] now it says json. compan you know that [1030] the C is capitalized that looks a little [1032] bit new but for the most part it's still [1034] pretty self-explanatory it seems to me [1037] if I were an alien staring at this and [1039] looking to try and figure out what the [1040] pattern here is it seems to me that [1042] every single time I drag and drop one of [1043] these fields in there it says dollar [1045] sign JSO n Dot and the name of the [1048] variable and the name of the variable [1050] tends to be whatever I'm looking at on [1051] the left hand side here so what if [1054] hypothetically instead of me doing this [1055] drag and drop what if I were to [1059] actually just try and write this myself [1062] well let's see what happens if I zoom in [1063] a little bit just so we can all see if I [1065] go curly bracket curly bracket you'll [1068] see that I'm now entering sort of the [1070] next level up in NN I'm now manipulating [1073] like code or JavaScript their version of [1075] JavaScript a JM path I believe it's [1077] called um directly in the expression [1080] editor and this is where an editing gets [1082] really powerful because you also have a [1084] ton of built-in methods and built-in [1085] ways you can manipulate this data um [1087] with literally one click one little [1088] button tap without having to drag and [1090] drop all these modules everywhere you [1091] can just do so in the convenience of [1093] your own field editor okay so the very [1095] first thing that pops up is it says [1097] suggest Json if I just type that and [1098] then I press enter you'll see that now I [1100] have action I have access to all of the [1103] fields that I had access to earlier so [1106] instead of me dragging and dropping all [1108] this stuff what if I just wanted to [1109] write the word summary here to grab this [1111] if I just type summary notice how this [1113] now turned green and we've added all of [1115] that information down here to the [1116] results tab all that information is here [1119] how cool is that so now you know if I [1122] want to continue on I'll go industry [1125] I'll go dollar sign Json industry voila [1129] next we're going to go company location [1131] I'm going to go um json. company [1134] location voila notice how it's trying to [1136] autofill this for me right I'll go title [1139] description dollar sign Json do to itol [1142] description voila and I basically have [1145] the ability to do this um infinitely [1148] depending on how nested the data is in [1149] the Json structure of the input I'll run [1152] through how to do all of that um in a [1153] moment but I just want you guys to sort [1154] of pattern match look from the outside [1156] in how am I actually referencing all [1158] these variables from from previous [1160] calls okay great so to me you know is [1162] somebody that does this sort of [1163] personalization all the time if we click [1164] on this little button here we can [1165] actually open up we we could see all of [1167] the um code and all of the text to me [1170] somebody that does this all the time [1171] this looks like sufficient amount of [1172] information for us to personalize an [1173] email off of so I'm actually just going [1174] to call it there and we're actually [1176] going to just run this puppy but [1177] basically what's going to happen is [1178] we're just going to be feeding in all of [1180] this stuff to artificial intelligence [1182] and we're going to be saying Hey Man [1183] based off of all of Amy's info I want [1185] you to tell me something about her and [1187] then I want you to write an email um [1189] based off of the template that I [1190] provided you earlier the last thing I'm [1192] going to do is I'm going to go down here [1193] and press output content is Jason give [1194] this a click and then I'm not going to [1197] modify any of the options here [1199] um but I'm just going to click test [1201] step okay so what just happened or what [1203] is occurring as we speak is I'm feeding [1205] in four items to open a I'm basically [1208] Blitz C going item one item two item [1210] three item four and it's happening all [1212] at once before they show us the output [1214] of each of these so that's why it takes [1216] a little bit longer than usual um but [1218] this is more or less what's happening [1219] under the hood okay great and we just [1221] received an output um so what I'm going [1223] to do is I'm just going to zoom out a [1225] little bit just so we could see this in [1227] completeness and I'll use schema for now [1228] just to make it easier for you guys and [1230] kind of wraps all in one line here sorry [1232] wraps um you know uh you don't have to [1235] like scroll all the way to the right to [1236] see it but let's take a look um the [1238] output was content subject line ice [1241] breaker elevator pitch call to action PS [1243] so it actually went it outputed five [1245] fields for us and we can use those [1248] fields in future nodes very easily the [1251] first thing and the subject line was hey [1253] Amy think I have something for you [1254] regarding boosting online strategies the [1256] Icebreaker was I know you're leading [1258] creative web Solutions and net [1259] directives and been following Innovative [1260] marketing strategies for a while so I [1261] figured it made sense to chat the tldr I [1263] think you can add 5K a month to your [1265] client Focus internet marketing efforts [1266] with a few automated systems the call to [1269] action I just did this for a very [1270] similar it consultant company we hit [1272] this amount they do e-commerce and [1273] marketing too how cool is that so I'm [1275] very confident I can duplicate this at [1276] minimum would be 100% risk-free i' [1278] guarantee at least 20 appointments book [1280] you wouldn't pay PS even if we just chat [1282] I'd love to hear about what you're doing [1283] with video marketing that sounds pretty [1285] cool to me right if I were to receive an [1287] email like this you know aside from the [1289] subject line which is a little bit vague [1290] boosting online strategies but you can't [1292] fault the AI for not being perfect 100% [1294] of the time um you know even if I were [1296] to get something like this it would seem [1298] as if uh you know like the person that's [1300] reaching out to me did their did their [1302] research at minimum and is reaching out [1304] to me sort of in a personalized [1305] customized way as opposed to just like [1306] blasting me a big sequence so uh what [1309] else do I want to do with this well if [1310] you guys you know remember back to the [1312] beginning of the video that there [1313] weren't just two or three nodes here [1314] there was um there was a node that [1316] updated the Google sheet so I'm going to [1317] show you how to update the Google sheet [1318] then what we're actually going to do is [1319] we're going to take this one step [1320] further and I'm actually going to draft [1321] some emails to send to Amy and the rest [1324] of the people here so actually the first [1326] thing I'm going to do is I'm just going [1327] to go over here and pin this output the [1329] reason why is because if you think about [1330] it me calling um open AI there that was [1332] a little bit like computationally [1334] expensive it took me a little bit of [1335] time I don't actually want to have to [1336] rerun that over and over and over again [1338] pinning the data just allows me to [1340] capture that cach it and now I can just [1342] like test all subsequent nodes using [1343] that which is very [1345] straightforward okay so what I want to [1347] do I want to update this Google sheets [1348] so I'm going to click here search nodes [1350] I'll type sheets and what I want to do [1351] is I want to um update row and [1355] Sheet I'm going to select my credentials [1357] Again YouTube the resource will be sheet [1359] within document the operation will be [1361] update [1362] row let's instead of using the fix let's [1365] actually just use the Expression so I [1367] can show you how this works just going [1368] to grab the ID of this field or of this [1371] sheet paste that in there voila then the [1375] sheet that I'm going to be picking it's [1376] just going to be sheet one so notice [1378] that the top here we use the Expression [1380] field um View and then down here we just [1382] use the fix so it actually use the [1384] Expression Field view to do an API call [1385] to their back end to discover that sheet [1388] one was the only sheet um and then we we [1390] selected it there we can also just feed [1391] in an expression and as you see when you [1394] go from fixed to expression for the [1395] specific sheet type just says GID equals [1397] z GID equals z just refers to the first [1399] sheet um basically here so we're we're [1402] always going to be selecting the first [1403] sheet but anyway for this I'm actually [1405] going to go from list and then I'll just [1407] go sheet one keep this simple [1409] okay now it's going to be fetching a [1410] bunch of columns for us and basically in [1411] order to do this update what we have to [1414] do is um we have to grab the data from [1417] the previous nodes and then we have to [1418] update every single column here with [1420] that data if I were just to you know [1422] scroll all the way down and update the [1425] columns that I care about like subject [1427] Icebreaker elevator pitch call to action [1428] postcript um it would just leave the [1430] rest of these blank which is kind of [1432] annoying if I'm being honest but I don't [1434] want the rest of these to be blank and [1435] these to be filled I want all of this [1436] data because I'm just going to import [1437] this into some cold email to later right [1440] so what we have to do is now this is [1442] kind of the initial idea behind this [1444] system I'm going to go through and I'm [1445] going to update every single one of [1446] these I'm using the expression Tab and [1448] then I'm going to be pulling data in but [1450] I'm not going to be pulling data in from [1451] here I'm going to be pulling data in [1452] from one node behind it so you guys [1454] could see what it looks like in in code [1457] basically okay so the first thing we [1458] have to do is we just need a column to [1459] match on in order for um the automation [1462] to know which row should be updated we [1465] have to find data that includes that [1467] email so I'm going go email then the [1470] first thing I'm going to do is I'm going [1471] to scroll down here to the previous node [1474] um not the open AI node but the Google [1475] Sheets node the one that like first [1477] listed us the data I'm going to drag [1479] this feed that in there and you'll [1481] notice that the format now looks [1483] different than it did before previously [1485] we had a dollar sign Json do item right [1488] now we have a dollar sign and then a [1490] bracket a a single quot sign the name of [1493] the node another single quote sign and [1496] then another bracket and then we go do [1497] item dojason email so when you when you [1500] access node data from more than one node [1502] back you have to use this new format [1504] here which is kind of annoying but [1505] you'll see how easy it is when we just [1507] like kind of copy paste and spam our way [1509] through so uh how about this civility [1512] I'm going to go to expression I'm going [1513] to paste this in then instead of email [1515] I'm just going to go [1517] civility how about this first name let's [1520] paste that in there we'll go first name [1523] how about this first name suggestion [1525] paste that in there go expression go [1528] first first name [1529] suggestion how about the last name I'm [1532] going to paste this in here go last [1534] name how about the full name I'm going [1537] to paste that in there go expression [1539] we'll go full name how about the title [1541] I'm going to paste this in there I'll go [1543] title profile URL so you can see you [1546] know we're picking up the pace a little [1547] bit it's getting a little bit faster and [1549] faster [1551] company company legal [1556] name company phone [1560] and I'm just going to go ahead and um [1561] cut to me having actually filled all the [1563] stuff out just for brevity okay elevator [1566] pitch call to action looking good and [1570] then last but not least we'll do um I [1573] think it was just PS or was it postcript [1575] yeah Sor it was just PS for that this is [1577] the one situation which uh the column [1579] name is a little bit different from the [1580] variable name down here okay now that [1582] we're done with that let's just quickly [1584] cover um just some little differences [1586] here in the formatting just so we can [1588] get a runup on the Json which I'm about [1589] to teach you you scroll all the way up [1591] here you'll see that some of these [1593] actually most of these followed this [1594] format it was oops sorry about that [1598] let's go over here it was um curly brace [1601] curly brace dollar sign the name of the [1604] node in single quotes do item. Json do [1608] whatever the value was do summary in [1610] this case this one was do regular [1612] company URL this one down here was vmid [1615] you'll notice that a few of these are [1617] actually a little bit different a few of [1618] these [1619] in particular the ones with [1621] spaces uh like the the variable names [1623] with spaces they weren't just dot you [1625] know the name it was a square bracket [1628] single quote and then the name of the [1631] variable that we're referencing the [1633] reason why we had to do this instead of [1636] just doing the dot and then the variable [1639] name is because Jason in JavaScript [1641] object [1642] notation you know you you can't query I [1645] mean the technical term is you can't [1647] query um you know like a key that has [1649] spaces basically just because spaces [1651] aren't really represented so you know if [1653] we scroll down here to some of these [1655] variable names first space name space [1657] suggestion there's a bunch of spaces in [1658] there right so the way that you get [1660] around this in uh nadn formatting is [1663] instead of calling let me get that [1665] specific example company legal name or [1668] was it uh first name suggestion so the [1671] way that you get around this is you [1672] can't just go first name suggestion [1675] because that kind of breaks the [1676] formatting here right the way you can [1677] get around this is two things one you [1679] can make it so that the input data AKA [1680] The Columns in your Google sheet are all [1682] just one word so if instead it was first [1684] name suggestion this would be fine you [1687] could also do something like first name [1689] suggestion some people do that format I [1690] don't really like that I don't know why [1693] what I do is um called camel case it's [1695] kind of like a programming convention [1697] and here we can get into like a a [1699] lifelong mutually assured destructive [1701] battle where Some people prefer camel [1703] case other people prefer underlining um [1705] but I'm team camel case so go team camel [1707] case [1708] um instead you know if we want to [1710] represent the spaces what we have to do [1711] is we have to go brackets here um single [1714] colon first name suggestion another uh [1717] another quote sign and then another [1718] square bracket so don't don't sweat the [1721] small little formatting stuff too much I [1722] just wanted to give you guys like the [1724] best way that I found to learn this is [1725] literally just to like spam a bunch of [1727] examples um that's what I did when I was [1729] picking this stuff up I didn't read a [1730] bunch of books on JavaScript object [1733] notation or expressions or whatever I [1735] just spammed a bunch of examples and the [1736] human brain is such that if you squint [1738] it long enough you'll sort of figure it [1739] out [1740] intuitively okay great so now that we've [1742] mapped all these let's actually go and [1743] let's um let's update this data right [1745] that's the whole point of this so uh now [1746] that we've mapped all the day if I click [1747] test step and then I go over here to my [1749] Google sheet scroll all the way to the [1751] right you see and it just took us a [1753] second but you see that we just boom we [1754] just updated all four of these [1756] simultaneously we got the subject line [1758] for Amy subject line for Joe subject [1759] line for Mercedes subject line for Susan [1761] same thing with all the elevator pitches [1763] call to actions post scripts you'll see [1765] that the the the copy of the email is [1767] pretty similar but um it it changes so [1770] this one's I know you're leading [1771] creative Web Solutions I know you're [1772] into leveraging customer voices I know [1774] you're focused on building relationships [1775] I know you're advancing digital [1776] Dentistry these are all basically like [1779] reframing or [1780] paraphrasing um the things that they [1782] said in their profile which ultimately [1785] uh you know is meant to make them go [1786] like oh okay this person did their [1787] research they read a little bit about me [1789] so that's pretty cool um why don't we [1790] take this one step further now why don't [1791] we pin this and then I'm actually going [1793] to create a Gmail draft in my inbox just [1796] so we can see what's going on here so [1797] I'm going type draft create a draft I'll [1800] connect with my Gmail credential and [1802] this is before I did the naming [1803] convention so it was probably number [1804] three we're just going to create a draft [1807] the subject line is going to be let's [1809] just go to fix now that we know how to [1811] do this it's going to be [1814] jason. uh subject right [1817] here and then the actual message it's [1820] going to be pretty interesting but I'll [1821] show you I'll show you how we put it [1822] together first thing we're going to do [1823] is we're going to go Json Dot and then [1825] what I want to do is I want an [1826] icebreaker [1829] uh sorry I don't want an ice breaker I [1832] want to go Hi and then I want to grab [1834] the person's name so I go jason. [1837] firstname right [1838] here so hi Amy comma then we have the J [1843] the Jason Icebreaker next up I want to [1845] go Jason do uh sorry dollar sign Json do [1848] and then what were we doing here was it [1850] the elevator pitch yeah it was the [1851] elevator pitch paste that in there then [1854] we want to go dollar sign Json do what's [1857] the next one call to action beautiful [1860] then we also want to go dollar sign Json [1862] Dot and I'm sure you guys can guess what [1864] the last one is but very quickly make [1866] sure you do make sure you know uh [1868] postcript now if we open up this thing [1871] in the bigger example window you see the [1873] email says hi Amy I know you've been [1874] leading creative Web Solutions and net [1875] directives been following Innovative [1876] marketing strategies for a while so I [1877] figured it made sense to chat the tldr I [1879] thinking can add 5K a month to your [1881] client Focus internet marketing efforts [1882] with a few automated systems I just did [1883] this for and even if we just chat I'd [1885] love to hear about what you're doing [1886] with video marketing I guess I need [1887] actually need to add a PS sign here and [1889] it looks like none of these have periods [1891] actually I think this last one has a [1892] period but not all of these do so just [1894] because I was a little bit um fast and [1896] kind of Designing this and I didn't put [1898] periods over I'm actually just going to [1899] add the periods directly into the [1900] expression [1901] editor I'm go PS here okay and now if we [1904] open it up this is what it looks like we [1907] got periods everywhere cool wonderful [1909] and then we have a little PS sign here [1911] even if we just chat I'd love to hear [1912] about what you're doing with video [1913] marketing very very cool awesome awesome [1915] so now that we have that pin data um why [1917] don't we just draft these emails so I'm [1919] going to create a draft I'm not actually [1921] going to send this because I don't just [1922] want to spam a bunch of these people [1923] I've also changed the email addresses [1924] and stuff so I'd get a bunch of bounces [1926] we're just going to test step it's [1929] executing we just executed four nodes so [1931] now if I go over here go to [1933] drafts you'll see here that we have hey [1936] Susan think I have something for you [1937] read digital industry oh geez I'm [1939] realizing I didn't put the um email [1940] address in actually yeah I did not put [1943] the email address in I just did the [1945] draft in options you have to go to email [1947] then we wanted is we just want to drag [1948] that back here Jason email to get that [1951] address let's create four more drafts [1953] just for shits and gigs and why don't I [1955] just delete the ones that I just [1957] generated uh right over [1960] here going to just discard [1963] these and then you see that the four [1965] that I just did now had just popped up [1966] and they also have the email addresses [1969] there so yeah that's that with that [1971] example um I think at this point you [1973] guys probably have an intuitive [1974] understanding of how these fields work [1976] and hopefully I made a case for why you [1978] should just always use expression like [1980] there's no real need to do fixed because [1981] if you think about it like you could [1982] just write the same fixed thing like if [1984] I wanted to type hey you think I have [1985] something for you regarding marketing [1986] strategies and I just wanted to send the [1988] same thing every time I could do so with [1989] the expression view of the field right [1992] like same thing it's just here I also [1994] have the ability to U [1996] modify uh code a little bit and like do [1998] something if I wanted to so I personally [2001] am always going to be using this moving [2003] forward and the reason why sorry it can [2005] be kind of a lot to see if you muck [2007] around with just always put a dollar [2008] sign first if you're referencing data [2009] from the previous node uh and the reason [2012] why is it's just going to be the easiest [2013] for me um you know you get all the [2015] variables up here anyway it's no big [2017] deal so we're doing subject stick that [2018] in there we got the subject line we are [2020] good to [2021] go so uh I think we probably learned a [2024] fair amount about the fixed fields and [2025] expression fields at this point um the [2027] last thing I wanted to cover I say [2028] mapping different field inputs here the [2029] last thing I wanted to cover [2031] was uh if we go back to Gmail [2035] here and if we scroll down to [2038] actually this is a bad example when [2039] don't we go back to open [2041] a you see here how um I selected the [2045] rooll field and it was fixed and then I [2047] selected from a drop down user assistant [2049] system whatever well I can actually just [2050] go expression and what you see here is [2053] this is just text that we are feeding [2055] this API the uh the node we're actually [2057] just writing user so instead of writing [2059] user you could also write assistant this [2060] fix stuff this is just made to make our [2062] life a little bit easier but anytime you [2064] want to get the actual data [2065] representation just move over to [2066] expression so what is some examples of [2068] that well like you see these simplify [2070] output and output content is Json fields [2072] we go to expression you'll see that what [2074] we're actually passing is we're passing [2075] this True Value we're literally just [2077] writing [2078] true um Opa content is Jason if we move [2081] it to expression you can see we're [2082] actually just passing true here for [2083] output content is Jason the point that [2085] I'm making is um all of this is [2087] basically just um you know if we just [2090] strip away all of the basic simple stuff [2092] you can start getting into what's [2093] actually going on behind the scenes how [2095] we're actually communicating with these [2097] nodes the that we're actually [2098] communicating with these nodes in [2099] practice is we're sending the term [2101] true now the reason why this one has [2103] quotes around it I believe is because um [2106] true is a special case it's called a [2107] Boolean which I'm I'm about to cover [2109] right now um so I believe you need these [2111] quotes just for nadn to like not bug out [2113] at you just one of those unfortunate [2115] peculiarities to the platform but that's [2117] that for fixed fields and expression [2119] Fields okay next up let's talk more [2121] about JavaScript object notation and if [2124] you guys already know Jason if you've [2125] already experimented and and understand [2127] the various formatting types available [2129] here feel free to skip on until we move [2131] on to how data in NN is represented um [2133] should be about 15ish minutes or so but [2135] for everybody in the audience that [2136] doesn't understand JavaScript object [2138] notation I just want to go real deep [2140] into it and I want to make sure you [2141] understand everything about Jason [2142] because ultimately as opposed to a lot [2144] of other no code platforms naden it [2147] doesn't ignore code or try and shove [2149] code away it actually Embraces code so [2151] understanding a little bit of some of [2152] the um code types like Jason for [2154] instance makes you way more powerful [2157] this is really what like everybody that [2158] makes money with this platform uses we [2160] just use Jason to send data back and [2162] forth um and you know if you don't know [2164] Jason everything's going to be a little [2165] bit trickier for you okay so what's the [2167] best way to um intuitively understand [2170] Jason well what I'm going to do next is [2172] I'm going to walk you through the [2172] various data types in Jason uh I'm going [2175] to give you just like a brief little um [2177] structure and format and then we can [2178] actually just walk through Jason kind of [2180] Step by Step depending on different [2181] variables and stuff like that so I'm [2183] just going to go and type in Json [2184] formatter this is just the simplest and [2187] freest to Json formatting platform I [2189] found online as you can see we got tons [2191] of ads in the middle here you don't pay [2192] anything to use it but basically what's [2193] happening under the scenes is behind the [2195] scenes is it's running um with every [2198] time you press a keystroke it's just [2200] double checking to see if it's inv valid [2201] Json it's actually pretty useful for us [2203] because we can we can verify if [2204] something is indeed Jason or not just by [2206] looking at it this isn't the only way to [2207] do it obviously we could do a ton of [2209] different things we could I could open [2210] up like a code platform like vs code or [2212] something and do the same thing but I [2213] just wanted to keep this thing [2214] accessible for all of us all right so [2217] zooming in here um just so I don't get [2220] ads in my face 247 so what is Javascript [2223] object notation basically Json um is [2227] just a way to represent data in a [2231] structured and standardized [2234] format that minimizes the number of [2237] characters and it also minimizes the [2239] ambiguity so that when we send data to [2242] and from some API or something we could [2244] do so as efficiently as possible [2247] so the way that Json works the way that [2250] you send and receive data is based off [2253] of two um two concepts the first concept [2256] is a key so I'm going to write a key [2258] here this key is going to involve my [2259] name the first name is going to be sorry [2262] um the the key name is going to be [2264] called first name so the key is just you [2266] can think of it as like the name of a [2268] variable so the variable is called first [2271] name but what the variable equals is a [2273] whole different matter and that's where [2275] the value comes in [2278] so first name I'm going to set to Nick [2282] so this here is proper or well-formatted [2284] Json it's not yelling at us or anything [2287] like that it's it's it's actually good [2288] which is nice so this is an example of [2290] one of the simplest JavaScript objects [2293] that you could build it is a one key uh [2296] one value object the key being first [2298] name and the value being Nick you've [2301] undoubtedly seen examples of this before [2303] if you tried working with any no code or [2305] coding platform um you know n8n included [2309] the thing is in Json there are a few [2312] simple but consistent formatting quirks [2314] that you just have to pay attention to [2317] so the first is there are a variety of [2318] different data types now as you can see [2321] here what I've done is I have this open [2323] curly bracket and then close curly [2324] bracket I have the key name over here a [2327] a colon that's just these two dots and [2329] then I have the [2330] value but what I've done is I've wrapped [2333] everything in these double quote signs [2335] here so first name double quote Nick [2337] double quote quote the reason why is [2338] because these uh the the data type that [2341] I'm going with here is called a string [2343] it's actually a particular data type A [2345] String is just like written text okay so [2349] this is if if instead of first name I [2351] say [2352] ID this here this is a string uh data [2356] type but it's not like you don't only [2359] have strings available to you although a [2361] lot of platforms forer strings you also [2362] have a variety of other data types [2363] here's another data type we have access [2365] to this is number data type it's numeric [2369] so in order to um you know send and [2371] receive numbers you don't actually have [2373] to wrap them in quotes this red here [2375] just corresponds to it being linted or [2377] or formatted or whatever by this Json [2380] formatter as a number data type so this [2382] is still valid Json even though we don't [2383] have the quotes around this okay this is [2387] not valid Jason right this does not mean [2390] anything because we're using string [2392] characters uh and we're inserting it in [2394] something that the software that we're [2396] going to be using and is going to be [2398] expecting to be a number so basic rules [2401] of thumb are you can't just write a [2403] string without wrapping it in [2405] quotes and the unfortunate reality is [2408] numbers can be both numbers and [2410] strings so three ways to do X maybe we [2414] call this titles right the three here [2415] this is a number right but we are still [2418] wrapping this within the quotes of a [2420] string however this is different from [2423] this and so in practice the reason I [2426] harp on this is because because in [2427] practice this usually doesn't matter [2429] that much no code platforms will take [2430] care of like the type conversion for you [2432] between number to string um if you're [2434] using a number if you're sending it as [2436] like just the three without the quotes [2437] around it um for the most part that's [2439] that's okay you'll be able to use this [2440] as a string later on but in like pure [2442] JavaScript in a couple of programming [2444] languages you can't actually just like [2446] if you wanted to I don't know run a [2447] function after this that added a number [2450] um you know maybe it was like here let [2453] me show you number of things then title [2463] template let's say I had some function [2465] where I wanted to add the number of [2467] things to the beginning of the title [2469] template so that it said three ways to [2471] create n and inflows five ways to create [2473] an inflows 15 ways to create an inflows [2476] some programming languages wouldn't let [2477] you do that in which case you'd have to [2479] convert this to um you know a string and [2481] then you could just go number of things [2482] plus title template equals 15 ways to [2484] create na [2486] inflows okay great so we've covered [2488] numbers we've also covered uh and [2490] numbers I believe they have some fancy [2491] name int or or technically they could be [2493] floats they could be a number of things [2494] but um in our case we're just going to [2496] go numbers next up I want to cover a [2498] couple of additional data [2500] types so one of the data types is called [2503] Bo so a boou stands for Boolean Boolean [2506] just means zero or one true or false so [2509] true see how this just turned into [2510] orange instead of gray um true is an [2513] accepted Bull and you don't actually [2514] need to wrap uh quotes around this true [2516] in order order for it to technically be [2518] valid Json now for the most part I will [2520] always just wrap quotes around all this [2521] stuff anyway because as I mentioned they [2522] do type conversions and it doesn't [2523] really matter to me too much but I just [2525] wanted you guys to sort of explain why [2527] sometimes you see stuff that is not [2529] wrapped in quotes and that's one of them [2531] you also have a few higher level data [2533] types and one of the higher level data [2534] types um that I'm going to show you guys [2536] I'm going to show you two the first is [2537] I'm going to show you an array an array [2539] looks like this it's with square [2540] brackets so you have a left square [2541] bracket and then a right square bracket [2543] and the other is another JavaScript [2546] object and the really cool part about [2548] Jason is you can infinitely NE Nest [2550] different data types within the values [2554] of uh of of a key so I could [2557] theoretically wrap an array which is [2560] just a number of things and then inside [2562] of that [2563] array I could wrap a number of other [2567] JavaScript objects that go infinitely [2569] deep and I'll show you guys how to do [2571] this in practice but maybe we'll just go [2573] items and here we'll go first name Nick [2577] here we'll go first name and then we'll [2579] go Sally then here uh let's just do two [2581] so I don't run off the page so now what [2584] we've done is we've created Json where [2587] we have a key called items then inside [2590] of said key we have an array and inside [2593] of set array we have two more objects [2596] both objects have the key called first [2599] name and then they have different values [2601] the first has a value of Nick the second [2603] has a value of Sally now to make [2605] people's lives easy usually the way that [2607] this works is you will do some level of [2610] uh formatting like this string [2612] formatting just to make your life really [2614] really easy you'll be able to [2616] see like where the item starts and then [2619] there's usually like a fair amount of [2620] indentation and I don't know the exact [2621] amount of indentation but usually it [2623] looks something like this now at a [2624] glance you can kind of see the structure [2626] of this it's sort of nested you have um [2628] this top level array and inside of the [2630] array you have two objects first name [2632] Nick first name [2633] Sally okay great so let's create a [2636] hypothetical Jason object and just [2638] because I know the most about myself I'm [2639] going to be creating this for myself [2641] let's hypothetically just create a Json [2643] object and let's just do like a user [2645] object okay so what I'm going to do is [2647] I'm going to go user that's going to be [2649] the key name then I'm going to go uh [2652] colon and then I'm going to create [2654] another another [2657] object inside of my user object I'm [2659] going to have first [2660] name first name is Nick we have a last [2663] name my last name is saraf [2667] um I'll have City My City for the time [2670] being is Calgary I'll have um Foods he [2676] enjoys or [2678] Foods let's just call it food [2679] preferences right because if you say [2681] Foods he enjoys now you're um [2683] insinuating that has to be a he and then [2685] what if you add a user in the future [2686] that is a woman do you want to change [2687] the key name no obviously not so food [2690] preferences I'm just going to add an [2691] array and inside of my array are going [2692] to be a bunch of strings so one of my [2694] food preferences is um I don't know tie [2698] I'm going to have another one that is uh [2700] I don't know like Japanese okay so I [2702] like Thai food and I like Japanese food [2704] and apparently I like absolutely nothing [2705] else have have a very strict diet okay [2708] cool and then why don't we add [2710] um let's just add one more and then I'm [2713] just going to add one called friends [2715] hypothetically um but because as we all [2716] know I have absolutely no friends um and [2718] then inside of friends we're going to [2720] add a another object we're going to add [2722] an array and inside of that we're going [2724] to have first name we're going to have [2726] Peter my uh dearest and longest friend [2729] of course thank you Peter then [2731] underneath that we're going to have um [2734] last [2736] name Griffin because I am [2739] now uh love and Family Guy and that's [2743] one of my friends and then I'm just [2744] going to copy this over I'm going to add [2746] a a comma because you need a comma in [2748] between all items in an array and also [2749] all items in an object so we have our [2752] object here it's a pretty intense user [2755] um object we have a first name last name [2757] the city the person lives in the food [2759] preferences we have a list of friends [2761] right the reason why I go into this much [2764] uh detail here to create this object is [2765] just because I want to impress upon you [2767] that you can make an object arbitrarily [2768] detailed you can make it as detailed as [2770] a human being could ever possibly want [2772] and a lot of the time you'll see that [2773] these apis that you're accessing these [2775] these calls that you're making to these [2777] different nodes that return you data [2778] about a particular software platform [2780] they will be really really deep and they [2781] will have nested data like six or seven [2784] things levels deep essentially so the [2788] easiest ones to use in my experience are [2789] just the ones that are all um you know [2792] surface level you just have like a user [2793] object and a first name and then a last [2795] name a city and then maybe some food [2796] preferences but in practice you know we [2798] need to be a little bit more capable and [2800] understanding how data is structured in [2802] JavaScript object notation is uh [2804] probably like half the battle to be [2805] completely honest so I believe I've [2808] covered everything I wanted to cover the [2809] last thing I'll mention is um you can't [2811] have a comma I believe be the last yeah [2814] it doesn't allow you to have a comma for [2816] the last item in an object or an array [2819] so notice here how we have a curly [2821] bracket then we have the keyname user [2823] then we have another object sign and [2825] then we have the key name and then the [2827] value the key name and the value the key [2828] name and the value between each of these [2830] we have a comma but just know that at [2833] the last item in an array or the last [2836] item in an object you can't have a comma [2838] so you just need to remove that if I [2839] press format or beautify which is just [2840] my button that tells me everything's [2842] okay um then you see that it is indeed [2843] formatted and beautified everything's [2845] everything's all right [2847] Okay cool so that's the Meandering um [2849] you know that's sort of how to [2850] understand this stuff from a bird's eye [2852] view a moving forward when I'm when be [2853] doing is just to make our lives a little [2855] bit easier I'm going to be showing you [2856] guys in every module or every node I [2858] should say on what the Json is of the [2860] input and the output and the reason why [2862] is it's just going to make it a lot [2863] easier for us to um ultimately you know [2865] reference stuff and then do cool things [2867] with the data so I go back to our Google [2869] Sheets example from earlier I'm just [2870] going to move the input sorry I'm going [2872] to have the output be Json and you'll [2875] see that in this case what we have is we [2877] have an open Json curly [2879] bracket then we have a bunch of top [2881] level keys so row number over here well [2885] that's a key and you can see that it's [2886] represented as a two very similar to [2888] what we talked about earlier right [2890] you'll notice that the formatting here [2891] is a little bit different notice that [2892] this one has an underscore and then [2893] these other ones are all camel case and [2895] some of these are capitalized because [2897] these are within quotes none of the [2898] stuff really matters but just showing [2900] you guys that there's a there's a [2901] variety of like conventions that people [2903] do some people like capitalizing things [2906] some people don't [2907] so my recommendation to you just to keep [2909] everything really clean and expected is [2910] just to pick one format and stick with [2912] it if you like the underscores use the [2913] underscores for everything if you like [2914] the camel case like me use the camel [2915] case for everything but anyway civility [2918] is mrss first name Amy first name [2920] suggestion it's empty you know when [2921] something is empty in Jason you just use [2923] these quotes notice that every item here [2926] has a comma in between it last name [2929] comma full name comma right just going [2931] all the way down and then if I zoom out [2934] I scroll you'll see [2937] now what do we have here this was just [2939] one item so if I just click on this [2940] little blue um left curly bracket it'll [2943] actually Nest the item for me and you'll [2946] see that inside of this item are 38 [2947] other items but it'll just Nest it for [2948] me and then I can see the next one now I [2950] can see the next one now I can see the [2951] next one right we only have five so [2953] that'll be it but now I want to show you [2955] guys a little bit about how anaden [2957] formats stuff um because it's a little [2959] bit different than Jason I just showed [2960] you but once you understand this uh [2962] basically everything from here on it [2963] will be Child's Play notice how the very [2967] first character that you see on the [2969] output page on the Json is a square [2972] bracket if you think back to the example [2974] that I gave you earlier if we click out [2976] of this Pizza Hut Ed as much as I love [2978] pizza head uh Pizza [2980] Hut uh this array [2983] here starts with the square brackets and [2987] so we see over here we have a square [2988] bracket as well that means that this is [2989] an array basically so the way that data [2992] is represented in NN is all data on the [2995] platform is represented as an array of [2998] objects okay so if I scroll down here to [3001] how data and NN is represented all of it [3003] is an array of objects all of it will [3006] basically be those two square brackets [3008] on the outside of a number of items and [3011] you could have as many items as you want [3012] as we saw we had four back over there [3015] and inside of those four items we had an [3016] additional 38 items nestled um inside [3019] but all data is an array of objects [3021] meaning that that's how you send and [3023] receive multiple um objects remember at [3026] the beginning here we had one item well [3028] that we just outputed a single uh [3030] variable there well now after this [3031] Google Sheets call we're doing four [3033] items those four items are represented [3035] in our Json as an array inside of which [3039] is another object that has the key name [3041] row underscore number civility first [3043] name first name suggestion and so on and [3045] so on and so forth so all data in naden [3048] is an array of objects the number one [3050] gotcha that I always see when beginners [3052] start out with this is they end up not [3055] fully understanding how many objects the [3057] previous node sent or is sending or the [3060] current node is receiving and so then [3061] when they try and reference a particular [3063] item inside of the data structure they [3066] find that it just doesn't exist or uh [3068] that they need to like index it they [3069] need to slice in to find a specific um [3071] um item inside of the array of items or [3074] some other problem but this is the [3076] number one problem that I see in [3077] practice just running through Reading [3079] like NAD and help threads and stuff like [3080] that that people struggle with on this [3082] platform so if you understand this the [3084] fact that all inputs and all outputs are [3086] an array of items represented as follows [3089] and now if you understand how to format [3090] Jason what Jason looks like and now [3092] further if you just make it so that you [3094] look at the Json and not necessarily the [3096] table or the schema format every time [3098] you're sending or receiving data you [3099] will solve the biggest gotcha that [3101] people have with Ann it's just going to [3102] be a lot easier for you moving forward [3105] um to you know create flows you're [3106] you're basically going to take so much [3108] of the load off that most other people [3110] spend like hours and hours and hours [3111] trying to debugging I'm right from the [3113] get-go which is ultimately what I wanted [3114] to do here okay great so now we know [3118] that data in NN is represented as an [3119] array of objects so how do you actually [3121] reference that data you guys remember [3123] earlier in that example here where we [3125] were using um this Google sheet module [3129] sorry this Google sheet node I should [3130] say and if we scroll down here we were [3134] updating a field using data not from the [3137] previous node but from a few nodes back [3140] well basically if I go back to Jason [3142] here what we could see is we can go one [3144] node back to open a two nodes back to [3146] Google gole sheets three nodes back to [3148] when clicking test [3149] workflow okay let's just go to this [3151] Google sheet in order to reference [3154] data actually in this case we will use [3156] the schema because you can actually see [3157] sort of them logically top to bottom in [3159] order to reference data more than one [3161] node back what we have to do if we just [3163] want to redo this email one we go dollar [3165] sign dollar uh sorry we go curly bracket [3167] curly bracket dollar sign okay then what [3170] we want to do [3171] is we go um this left uh round bracket [3177] then we have access to all of our [3179] earlier nodes we can select the current [3181] node open a we can also select Google [3182] Sheets and we can also select when [3183] clicking test workflow we want is the [3185] Google Sheets and then if you just dot [3187] index if you put a period then you'll [3189] get an [3190] item and the reason why I bring up this [3192] item is because basically all of this [3196] stuff is buried under this do item [3200] syntax and it's kind of annoying but in [3203] order to reference I don't know the row [3204] number what we have to do is we have to [3205] reference the Google sheet [3207] then we have to reference the item and [3209] then we have to reference the row [3211] number sorry then we have to reference [3213] Jason then we have to reference the row [3215] number why because n actually hides some [3219] of this information from us we don't [3220] actually see the nested data structure [3223] all we see is the nice representation of [3224] it okay so this isn't actually [3226] represented this way despite the fact [3229] that it looks kind of like it is the way [3231] that this actually looks kind of [3232] underneath the scenes behind what NAD is [3235] showing us is it looks like this and if [3237] you understand this you'll understand [3238] how to reference basically any item in [3240] edn so this is equivalent to what we're [3243] seeing here what we actually have is [3244] there's an additional two layers between [3246] um us access accessing the data through [3248] the dot thing it's actually item. Json [3251] and then we have the row number ability [3252] first name first name suggestion stuff [3254] like that okay so that means that when [3256] we want to access it kind of just just [3257] looking over here the very first thing [3259] we have to do is we have to reference [3260] the Google sheet then think about it [3263] logically then we have to reference the [3264] item so go item [3267] then we have to reference the json. [3269] Json and then we have to reference the [3271] row underscore number if we want to like [3274] that and then we get that data okay so [3277] big issue big misunderstanding I would [3279] say with NN um unfortunately their [3280] documentation in my experience is not [3283] clear enough to really elucidate what's [3284] going on here unless you have a [3285] programming background um but just want [3287] you guys to know that this is how it's [3288] done when you reference nodes that are [3290] more than one module back if you wanted [3292] to just reference something in the [3293] previous node it's a lot easier you go [3294] dollar sign and then you go [3298] JSO then you can just go immediately [3300] into the the varibles [3301] message. content or something like that [3304] do subject line for instance all right [3307] so let's start looking at some of these [3308] foundational nodes over here because I [3310] think at this point we've done uh what [3312] four different workflows and I think you [3314] guys probably have a reasonable [3315] understanding of how to put a workflow [3316] together now as well as some of the more [3317] nuanced portions of NN like the way that [3320] they do their Json um you know some some [3322] of the the nuances behind uh burying [3325] names inside of various keys and how to [3328] do arrays of objects and backtrack and [3331] all that fun stuff let's actually cover [3332] like nodes because nodes are ultimately [3333] what you guys are going to be using on a [3336] daily basis after we''re done that then [3338] I'll I'll rebuild this flow up here and [3340] I'll show you guys how all that stuff [3341] works under the [3342] hood this will allow us to use some of [3344] the more um I guess code oriented [3347] features of Ann then I think after this [3350] point like you guys have a reasonable [3351] enough understanding to build most [3353] things it's just a matter of like what [3354] can you build and how exactly you put [3356] the various Lego blocks of showny [3357] together that's what the subsequent [3359] videos in this course are going to are [3361] going to ultimately just show you it's [3362] going to be non-stop building 24/7 baby [3365] anyway so let's cover these foundational [3367] nodes um first thing is we're going to [3369] cover nodes for doing things so HTP [3371] requests web Hooks and open nodes and [3373] we'll cover nodes that modify flows so [3375] if filter merge split into batches there [3376] are a couple of other ones but these are [3378] the ones that we're going to be focusing [3379] on at least for today so you know in [3381] terms of nodes that do things um if you [3383] guys aren't un aren't familiar with um [3385] HT TP request this stands for [3388] hypertext uh I don't know hypertext [3391] transfer protocol and what we're doing [3394] when we do an HTTP request is we're [3397] doing the same thing that your browser [3398] does when it goes to a website so just [3400] like when I go to [3401] google.com I'm sending a request to [3403] Google receiving a bunch of information [3406] what this web page looks like and then [3407] I'm using my browser Chrome to render it [3409] into the beautiful wonderful image you [3411] have in front of me on the HTTP request [3413] ises the same thing it just it just [3415] Returns the thing to you in in the code [3417] you don't have that rendering portion so [3419] I'm going to do a get request here and [3421] the get request is just the simplest and [3423] most basic request and this is [3424] ultimately what you're probably going to [3426] be using for for most cases and the URL [3428] I'm going to be doing is just my own [3429] left click. a so left click. just for [3432] the purposes of this discussion looks [3434] like this we build hands-off growth [3435] systems for B2B Founders there's a bunch [3437] of information about what our clients [3438] get our leads the lovely Joe Davies left [3440] me a testimonial I should probably touch [3442] this website up at this point it's been [3443] the same for a while but anyway I'm just [3444] doing an HTTP request using a method get [3448] to left click. with no authentication no [3450] nothing we're just going to see what [3451] happens so let me click that test [3454] step and the response that we've [3456] received is again an array of objects [3460] our one item or our one object has a [3463] keyname data then inside of that key [3465] name you'll see that there is a ton of [3468] code HTML it's called okay and just [3471] because this is not the easiest to see [3473] here I'm just going to go to schema view [3474] so you can see a little bit more of it [3477] but [3478] basically this here is the code of my [3480] website this is what my website looks [3482] like to the browsers um you know and [3484] like what ultimately my browser uses to [3485] render it you can see it says left click [3488] space vertical carrots space Ai and [3490] ampon this is just a symbol that um [3493] allows it not to break any characters [3495] process optimization left click is an AI [3497] driven performance optimization agency [3499] is cutting exect to scale your company [3500] this is all the code right it's pretty [3502] badass um and so if I were to go to left [3505] click and then I were to go to [3508] inspect if I were to open this up this [3510] is like the Chrome Dev tool which allows [3512] you to see the code of the website it's [3513] the exact same thing that's over here in [3516] the bottom left hand corner right [3518] literally no differences whatsoever um [3520] you built your agency will scale it the [3522] only difference is some symbols like the [3523] Amper sand or maybe the at sign they [3525] just have like little Replacements here [3526] or there so they don't break any um [3528] string formatting so that's the HTTP [3531] request why why does an HTTP request [3533] matter and why would we want to do an [3534] HTTP request well the reason why is [3537] because you can do pretty cool stuff [3538] with this like if I go um HTML then I [3542] say extract HTML content what we can do [3545] is we could use the code of the page to [3547] pull out all of the text okay so why [3550] don't I just go text I'll go p uh let's [3551] just do H1 H2 H3 H4 H5 H6 let's do p I'm [3555] going return this value as text and then [3557] I'm going to return uh let's just test [3559] this and see what happens what we're [3561] doing is we're basically feeding in um [3564] the HTML to this um like we're feeding [3567] in the HTML and then we're using uh [3569] various CSS selectors they're called to [3571] extract a bunch of text for us and it [3573] looks like I didn't do this right [3574] because we're not actually retrieving [3575] anything let's just try P for [3578] now we'll do with this you're seeing [3581] already that we've extracted a bunch of [3583] P texts we've extracted basically like a [3585] specific type of [3587] tag inside this website that starts with [3591] a P okay now we can do the same thing [3593] with a variety of other tags let's say I [3594] want to do H1 this is going to return [3596] all of the um top level selectors [3599] basically so let's do H1 [3601] test we build we build hands-off growth [3604] systems for B2B Founders that's pretty [3606] cool if I return an array let's return [3608] all of them we build hands-off growth [3609] systems for B2B Founders a better way to [3611] build Ops what our clients get if I do [3614] uh I think if I want to select multiple [3616] I just would I just do p like this H1 [3618] and P yeah there we go okay so now I'm [3621] getting all the text to the website we [3623] build hands off growth systems for B2B [3624] Founders find the perfect offer automate [3626] your lead acquisition solare project [3627] management a better way to build Ops [3628] this is all the text of the website and [3631] all I needed to do in order to feed this [3632] in was I basically went through and then [3635] I fed in a bunch of elements which I [3636] know just correspond to text like this [3640] um and then I press test step it went [3642] through and it extracted all of them [3643] into this big fat array which is really [3646] cool now like if you think about it I [3648] can actually do some pretty cool stuff [3649] with this I could have [3651] ai tell me something about the site very [3654] easily [3656] you're helpful intelligent uh website [3659] scraping [3660] assistant we'll go got to add my [3662] credential first we'll go down here and [3665] I'm just going to have ai tell me a [3668] little bit about this website return in [3670] Json just some data I'll do that is my [3672] system prompt and then here your task is [3675] to take as input a bunch of scraped [3679] website text and return as output a [3683] Json Json that follows this [3688] format I'm going to say summary I'm [3692] going to say um three interest three [3696] unique [3697] points we'll do an array we'll do um [3701] probable customer demographic okay I'm [3704] going to have a return an object [3708] um we'll see contact [3712] information if any and then we'll do um [3716] I don't know some sort of like array of [3718] objects okay and then that's that's what [3721] we're going to have a return we're going [3722] to Output the content as Json and then [3723] as input you know add a message what we [3726] want to do is we just want to join this [3728] is I'm being output as an array right [3729] now right arrays as we see are many [3732] options or many different um things on [3735] various lines what we want to do is we [3736] want to take all of this um this output [3738] data and we just want to turn it into [3740] one big long string the way you do that [3742] here is I would use the Expression Tab [3745] and then I'm just going to add some [3746] lines so the AI knows that this is my [3747] input then I'm just going to go json. [3751] text and then dot I'll just go join join [3754] is just a way to convert um an array of [3756] items into just one big long string and [3758] the thing you put inside of the join is [3761] you just put what you want to separate [3762] it by so in my case I'll just separate [3765] it all with a new line if I enter the [3767] detailed editor here you can see that [3768] now I've just turned all of this into [3770] one giant long string I'm going to feed [3772] this into Ai and I'm going to have it [3773] just tell me something about the website [3776] so this took us just a few seconds and [3778] we already have a scraper that's [3779] basically capable of coming up with and [3781] then outputting a summary of what I do [3784] three unique points that separate me [3786] from the competition probable customer [3789] demographic information maybe I can use [3790] to do something then contact information [3793] if any and it looks like it separated [3794] that into a sub object that says method [3796] book a call details get started today [3798] platform website as I'm sure you guys [3800] could imagine I spent 15 seconds putting [3802] this puppy together if you guys wanted [3803] to maybe scrape emails or do something [3805] like that you you could put something [3806] together that does this pretty easily so [3808] that's the HTTP request module pretty uh [3810] node pretty simple pretty [3812] straightforward the next thing I want to [3814] show you is I want to show you basically [3815] the inverse of the HTTP request node [3817] instead of you um you know instead of us [3820] uh sending data I want to show you a [3822] quick and easy way that we can receive a [3824] little bit of data if necessary um and [3826] it's nowhere near as hard as you think [3828] there are a variety of different ways [3829] that you could do this but I'm going to [3830] show you guys a really simple and easy [3832] one uh that I personally use all the [3834] time it's called the web hook [3836] so I'm going to go over here then I'm [3838] going to type in web hook starts the [3841] workflow when a web Hook is called [3843] basically what a web Hook is is it's [3844] just a server URL that you spin up [3848] almost like my website left click and [3850] every time that server gets a request to [3853] it it'll show up here with all of the [3855] data why is this so valuable well it [3857] allows us to do a million things connect [3860] workflow to workflow um add up and [3863] create our own API Integrations do a [3865] variety of things that otherwise you [3866] wouldn't really be able to do without [3868] them this is basically the glue that [3869] holds the internet together and this is [3871] a quick and easy way for you to make [3872] your own piece of that so this is what [3874] the web hook Fields look like we have a [3875] test URL production URL don't worry [3877] about the distinction there for now [3878] we'll just use test URL HTTP method we [3881] want to allow to access our service we [3883] could do um think we might actually [3885] allow multiple I don't know one of these [3889] I think allows us to do multiple but [3891] we're just going to go with get for now [3893] the path we're going to leave the path [3894] is fixed the path is just this URL [3897] string um authentication we're going to [3899] turn this off we don't want any [3901] authentication um they recommend that [3902] you have authentication but for [3904] Simplicity sake I'm just not going to [3905] have any because otherwise it might be a [3906] little bit too much at once then we're [3908] going to do respond immediately what I'm [3910] going to do is I'm going to set up a [3911] test event for this URL okay I'm going [3914] to copy this and then I'm going to very [3917] quickly actually I don't know if I can [3919] do this with the same um uh same [3922] workflow actually no I can't because the [3923] workflow is already running so I'm [3924] actually going to make another workflow [3926] really quickly and I'm going to use that [3928] to call this web hook to get some cool [3931] data so why don't I create a [3934] workflow we'll just call this three and [3936] in Concepts and then we'll go web hooks [3939] HTTP [3940] requests I'm going to make a new HTTP [3943] request here it's going to get this long [3946] thing that I've done over here okay I'm [3948] going to test it then over here I'm [3950] going to grab that data and as you can [3952] see like what just happened if you were [3954] paying close attention is this just ran [3956] the second I sent the data from this [3957] node which is in another workflow over [3960] to this node which is on the current [3961] workflow we received a ton of info and [3963] the info that we received was received a [3965] big object one item inside of our array [3967] of objects here so a single object with [3970] the key name headers which had a bunch [3972] of other data [3973] underneath pams query body web hook URL [3977] execution mode test so this might look a [3980] little bit dry and a little bit boring [3981] to us right now but what's the value [3983] here the value is you can run something [3985] from one workflow send it to another [3986] workflow really easily so in our our [3988] first example we sent no data but what [3990] if I go back to my other workflow okay [3993] that's number three here and then I send [3994] some query parameters and I say first [3997] name and I say Nick then I go here last [4000] name survive then here maybe I go uu ID [4005] that's just like user ID and then I type [4007] something like this now if I go back [4009] here then I listen for a test event I go [4012] back here and then I send the test event [4015] now when I receive it not only do I get [4016] the headers sorry the headers over here [4019] not only do I get the pams inside of our [4021] query are the variables that I just sent [4024] over inside of Jason first name last [4026] name uu ID so man I can do so many cool [4029] things with this it's crazy I could [4032] connect this to any web service out [4034] there just give this URL as the URL [4037] where the events are sent and then voila [4039] I basically have like an infinite [4041] machine I'll show you guys a quick [4042] example right now using clickup [4045] but you guys can extend this example and [4047] do whatever the hell you want with it so [4050] clickup is just this um you know project [4052] management platform that I have that [4054] allows you to send out web Hooks and [4056] most services that are good will allow [4057] you to do stuff like this but you see [4060] there's a call Web hook feature here I'm [4062] going to go back to my web hook and I'm [4064] going to copy this URL now this is for [4067] get only I don't actually remember if [4068] clickup sends a get or a post so we're [4070] going to see what happens here and then [4072] what I'm going to do is I'll just have [4074] um status change we're going to say from [4079] specifically [4080] hook to specifically um [4085] outline and we're going to create this [4087] and basically what this means is when I [4088] change a field called status inside of [4089] my my project manager it sends a web [4092] hook over to this [4093] address so hook to outline um I'm going [4096] to find something that's hook maybe this [4097] one [4099] here now what I'm going to do is I'm [4100] going to go over [4103] here listen for a test event [4105] then I'm going to change this to outline [4108] and I don't remember if it's a get or a [4109] post request so we might have to wait [4111] and um try two or three this [4114] unfortunately does not respond to non um [4117] me like the the methods that are not the [4119] same methods are you know kind of a a [4121] deeper story but basically there are a [4123] variety of ways you can query a website [4125] or a web service um HTTP most commonly [4128] you'll do either a get or a post um in [4132] the specific instance of clickup it [4133] looks to me like they're probably using [4134] post I'll go HB method I'll go [4137] post now I'll listen for this test event [4139] I'll change this back to [4141] hook then I'm going to change this back [4143] to outline and now that it's outline um [4146] we're waiting for this this post request [4148] let's see if we we receiving it from [4150] clickup okay great looks like we [4152] received it now what did we receive in [4156] reality well excuse me I'm like really [4159] close to sneezing but I've decided not [4161] to so I won't uh before we updated the [4164] query field now we're updating the body [4166] field we see it's built into clickup and [4170] what what we what we did clickup has a [4171] number of default things that they send [4173] over when you do this web hook [4174] integration one of them is the ID of the [4176] record now there's the trigger id id the [4178] trigger payload ID uh the name of the [4182] thing which was three chat gbt prompt [4183] engineering hacks you need to start [4185] using next some [4187] hooks some order intext some information [4190] about the person that created it the [4192] point that I'm making is we just created [4194] our our own integration with clickup and [4196] it took me like 30 seconds realistically [4198] after I got off the HTTP method um hump [4201] so in practice uh you know sometimes [4203] apis like click up I'm sure they have [4205] API documentation somewhere but [4207] sometimes they just don't tell you right [4208] at the point of creating the web hook [4209] whether it's going to be a get or a post [4211] request so if your get request doesn't [4213] come in just change the HTTP method to [4214] post and then rerun it with the post uh [4217] example and then one of those will work [4219] which is pretty cool okay so that's how [4221] you do it as a test URL ultimately [4223] though we don't just care about having [4225] this workflow be um like sort of a sort [4227] of a test we want it to be live and so [4229] when your workflow moves to production [4231] AKA you publish it and you make it live [4233] to actually interact with the internet [4235] what you're going to want to do is [4236] you're you're going to want to go over [4237] to this production URL and then copy [4239] this URL and update all of your web [4240] hooks to send here um this will enable [4242] you to activate this if it's in test [4244] mode you actually won't be able to [4245] activate this um just I guess for safety [4247] or security purposes it just makes that [4250] the testing of of web hooks [4251] unfortunately involve an additional step [4253] um the the transition to publish it [4255] unfortunately involve an additional step [4257] but it also makes your workflows a [4258] little bit more secure so that's how you [4261] do web hooks um the last thing I'll [4263] mention are these open Ai and AI nodes [4265] now I'm going to have many many videos [4267] um after this one be all about AI agents [4270] since that's obviously the big thing [4271] that's blowing up right now what I'm [4273] going to do here is I'm just going to [4274] cover them uh super super briefly I'm [4276] not even going to like run anything but [4278] I just wanted to show you guys that na [4280] is very AI native and so whereas I've [4282] been doing some very basic um open AI [4284] calls with this open AI module there's a [4286] variety of things you can do you could [4288] create an AI agent which generates an [4290] action plan and executes it uses [4292] external tools you can have open AI [4294] messaging assistant or GPT this is what [4297] we've been using um some basic llm [4298] chains and a bunch of like specific [4301] tools that are used to do things like [4302] categorize information summarize [4304] information and so on and so forth um so [4307] AI agent just to give you guys a very [4309] brief example probably is one of the [4311] most intimidating looking modules or [4312] nodes but it's actually one of the [4314] simplest in practice when you create an [4316] AI agent it'll automatically open up [4318] this when chat message receive node on [4320] the side and then you'll see that down [4321] at the bottom of my screen there's an [4322] additional button that allows me to chat [4324] with my with my model but in order to [4326] make this work what we need to do is we [4328] need to hook this up notice how there's [4329] this little um warning here we need to [4332] do is we need to go down a chat model we [4334] actually need to select the AI module or [4336] AI node that we want the AI service I [4338] should say that we want to use for most [4341] intents and purposes I use open AI this [4343] is just the best to me but you could use [4344] olong mistol Google Gemini anthropic [4347] feel free to play around with this for [4348] whatever your use Cas is or whatever [4350] your data privacy security um [4352] requirements are so I'm going to go down [4354] to my open AI chat model the model I'm [4356] going to be using for this is going to [4357] be gbd4 I just find it has better um [4360] answers and then now you'll see that the [4362] warning sign is gone now we have an [4364] additional node I can drag and drop here [4366] and now I can go to chat and I could say [4367] hey how are you [4370] doing we've essentially opened up our [4372] own chat window hey I'm just a computer [4374] program but I don't have feelings but [4376] I'm here and ready to assist you thanks [4377] chat gbt um and on the right hand side [4380] probably the most valuable part about [4381] this is you could see a log of what is [4383] happening and how many nodes were called [4386] in order to get you the result this is [4387] important because the whole point of AI [4389] agents is their ability to call other [4391] tools to do things for you so this says [4395] system you're a helpful assistant human [4397] hey how are you doing this is just their [4398] prompt setup so the input to open AI was [4402] this right here and because we I don't [4404] know we just asked how how it's doing [4405] and so on and so forth um you know it [4407] didn't it didn't really do anything [4408] special there were no additional tools [4410] this is the same thing as you just [4411] sending a message to chat gbt [4413] essentially now in order to make an AI [4415] agent like really work you're going to [4416] want to add two things the first thing [4418] you're going to want to add is you're [4419] going to want to add some sort of memory [4421] if an AI agent doesn't have memory then [4423] basically if I go back here to chat and [4426] then say what did I say in my last [4428] message it will have no context or no [4432] idea I don't have any access to past [4434] messages or personal data each session [4435] is independent basically this is like a [4437] one it's like it's like a send a [4439] question receive an answer sort of [4441] window but we don't want that we want [4442] this to actually have access to our chat [4444] history wanted to see what we've been [4445] talking about over the course of the [4446] last like 20 or 30 minutes and be able [4448] to reference those so there variety of [4450] ways to do this basically you need to [4451] implement some sort of database um and [4453] I'll show you guys how to implement some [4454] more complex databases in the future but [4456] the simplest one the one that naden [4457] provides right out the gate the one that [4458] most people on YouTube are going to be [4460] talking about is this window buffer [4461] memory window buffer memory basically [4464] just allows to store it here inside of [4466] the test window which is the easiest to [4468] do and the default is five messages so [4472] basically every time you send it a [4473] message it will send up to five past [4475] messages but just for the purpose of the [4477] discussion I'm going to go 10 so now um [4481] what I'm going to do is I'll go to chat [4482] and then I'll say hey how are you [4487] doing then I'm going to say what did I [4489] say in my or what did I ask you in my [4493] previous message [4497] and you'll see that it's asking how it's [4499] doing right so we're actually now [4501] accessing the previous uh message using [4503] this buffer memory and on the right hand [4505] side you'll see here that the log has [4507] gotten a little bit more intense too so [4509] basically we called the AI agent up at [4511] the top the next thing that happened was [4513] we went through the buffer memory we fed [4516] this in and basically added this to some [4518] big long stack of message [4520] history then we fed that in plus the [4524] previous message [4525] then we said hey what did I ask you in [4527] my previous message this is the input [4529] that is currently being fed into the [4530] model on that second call and then we [4533] went down into buffer memory we saved [4534] all of this again and then we kind of [4537] came up and then and sent the answer how [4539] about [4542] now cool so now we're three levels deep [4544] and as you can see um you know this is [4546] just a quick and easy way to load the [4547] memory make sure that we're always [4549] having some sort of topical contextual [4550] conversation uh which is pretty cool now [4553] the real juice in AI agents the reason [4556] why they've gained so much popularity um [4558] is just because of this tool section [4560] here where you can essentially um call a [4563] tool that or call an action just like we [4566] were doing before procedurally you can [4568] call it using Ai and you can [4569] automatically format and get information [4571] from different tools so there a variety [4573] of tools that are just sort of set up [4575] for you a table Bas row calculator Gmail [4578] Google Calendar Google Docs Google Drive [4580] all this [4581] stuff what I'm going to do in this [4582] example just cuz I don't want to spend [4584] all day on it um before I do my more [4586] detailed AI agent tutorials so I'm just [4588] going to select Google Calendar I'm [4590] going to create a new credential sign in [4591] with my Gmail [4595] account and then I'll go over [4598] here I'll close this [4600] window now that I've uh I've connected [4603] my Google Calendar agent what I'm going [4605] to do is I'm going to select my specific [4606] calendar which is Nick at left [4608] click. and then now that it's connected [4611] to my AI agent um this is the create [4613] event I don't want to create just want [4615] to get so get all of my events basically [4617] from my calendar okay and then in [4618] addition to that what we have to do is [4620] we have to use this dollar sign from AI [4622] feature here and we just have to paste [4623] that into the expression field um what [4625] this does is this just tells AI hey I [4627] want you to provide uh you know your own [4629] details for the value of a field in our [4632] case I wanted to feed in some options [4634] that say Hey you know I I want you to [4636] grab data that is after this date but [4638] before the state so if I'm asking [4641] AI like hey what's going on can you tell [4645] me what I'm doing tomorrow and I'll just [4647] say Jan 28 [4648] 2025 um the whole idea here is AI now [4651] has access to my calendar it also has [4653] the ability to call that that API then [4656] it can actually go and retrieve specific [4658] events from my calendar and then return [4660] them here so as you can see I have this [4661] call U me and my my buddy Zach and then [4663] it just has all of this information um [4666] okay great how are you more generally [4669] you know I can also just chat with it [4670] like I'm chatting to chat gbt or [4672] something like that um so I don't always [4674] have to use like the tool that I'm I'm [4675] calling and the idea is you basically [4677] stack on 3 four 5 10 15 20 of these [4680] tools although I find in practice when [4681] you get um past maybe six or seven [4684] instead of calling a tool what you want [4685] to do is you want to call another agent [4686] which then decides to call a tool it's [4687] basically like a big uh almost like a [4690] search tree or something um but anyway [4692] that's more or less the AI side of [4694] things um the last thing I'll mention [4696] here is this open AI modu uh this open [4700] AI node doesn't just have the message a [4702] model text action like we've been doing [4704] before there's a of other things you [4705] could do you can create an assistant [4707] delete an assistant list assistants [4708] message assistant update assistant [4710] analyze images you can generate images [4712] generate audio like you have a you have [4714] a ton that you could do here which is [4715] pretty sweet if I go down to generate [4717] audio and I'll say um I don't know Nick [4722] is awesome and very pretty and I [4724] generate it using the Nova voice click [4727] this test step not only you know not [4729] only can I generate text and stuff like [4731] that but I can also have this generate [4733] me an audio output um that I can then [4735] listen to variety of cool things you [4737] could do with this Nick is awesome and [4740] very pretty you're damn right I am um [4742] variety of cool things you can do with [4743] this but definitely don't sleep on the [4745] AI nodes uh you know don't just like [4747] stick to the one that I've shown you [4748] guys so far okay great so those are the [4751] foundational ones in practice with n [4753] you're probably going to be using these [4754] quite often um what I'll do next is talk [4756] about some nodes that modify flow and [4758] here A bunch more that like you're [4759] probably just going on you're going to [4761] want to read their docs and add them to [4762] your toolkit because this is like an [4763] everyday sort of thing the first is an [4765] if the second is filter the third is [4767] merge and the fourth is split into [4769] batches so let me show you guys a very [4772] quick and and simple example of the if [4774] if I go [4775] here and then I add my own trigger uh [4778] and I just want to trigger manually oh [4780] sorry it looks like I already have one [4781] somewhere in here right so let's just [4783] repurpose this um manual trigger for an [4786] example workflow and then I'm going to [4787] build down below this example trigger [4790] I'm going to click it and then what [4791] we're going to do is we're going to use [4793] the edit fields [4795] we're going to go down to Json this is [4797] just a handy dandy tool that allows you [4799] to set your own inputs and outputs so I [4801] can now set my own I'm output and I [4804] could say first name Nick last [4808] name uh surve and if I if I test this if [4811] I test my whole workflow you'll see this [4813] broke because um SAR was not in quotes [4815] there got to make sure that all of your [4816] strings are in quotes I check out the [4819] Json you see the output of this module [4820] is now first name Nick last name surve [4822] okay I'm just going to pin this now [4824] let's say I want do something else you [4825] know if [4827] the uh I don't know if the input is Nick [4830] I want to do something really cool I [4833] want to provide prize I don't know um [4837] $100 if the input is Nick I want to go [4840] through my my sequence and then I want [4841] to generate another variable called [4843] prize and I want to I want to have it be [4844] $100 okay but I only want to do that if [4847] the input is Nick if the output is [4850] something else then I want to have my [4854] prize be just $5 so Nick gets all the [4857] prizes here he's very greedy okay so how [4859] do you actually implement this sort of [4860] logic well the simplest way is if I [4861] click this plus button and I just type [4863] if you'll see I'll have this this node [4865] pop up that says if wrote items to [4867] different branches true or false so I'm [4869] going to add that in there and what I'm [4870] going to say is if first name which by [4872] the way we could still just drag if we [4874] wanted to we could say if first name is [4876] equal to Nick then proceed through the [4880] true node which is up here then if not [4884] we're going to want proceed through this [4885] false node Isn't that cool so now we [4889] basically have two things that are [4890] occurring okay prize up here was 100 [4894] prize down here was [4896] five now what I'm going to want to do is [4898] I'm just going to want to test this from [4899] end to end show you guys what this looks [4901] like so I just clicked this button it's [4903] now going to execute my [4905] workflow and sorry just realizing that [4907] it's executing this [4911] workflow um just going to delete this so [4914] This is the only trigger here I'm going [4915] to click test workflow this is now going [4917] to run and I just want you guys to see [4919] what's happening um I clicked test [4921] workflow we then edited our fields we [4923] added Nick as the first name we then [4926] went to the if and then as we saw here [4928] first name was equal to Nick meaning [4931] oops if I double click this again the [4933] output is now only going down the true [4935] Branch with one [4937] item and then the uh upper Branch was [4940] illuminated it's green and then that's [4942] how we get to edit Fields with the prize [4943] equal to 100 $1 now if I change this [4946] instead of Nick if it's like uh Sally or [4950] something and if we run this again what [4953] you'll see is the [4954] data is flowing through here because I [4956] didn't unpin it so it's unpin it if we [4959] if we test this now what you see is the [4961] data didn't go through the top uh route [4963] anymore it went through the bottom route [4964] okay great so now with this example here [4966] why don't we just pretend like we're [4967] emailing somebody so I'll go draft an [4971] email going to create my thing here and [4973] we'll say congrat [4975] youu [4976] won good expression then what I want is [4980] dollar sign jason. pise right over here [4983] so congrats you won $5 how cool is that [4988] c title [4990] loser uh okay great and then I'm going [4992] to go here and I'm going to create a [4994] draft voila I have it now if I go back [4997] here to my SOS media queries page uh I [5000] see it says congrats you won $5 there's [5001] nobody to because we didn't set the [5003] email to but pretty neat huh we do the [5006] same thing with this $100 [5010] field go over here you'll see that I [5012] just copied like all of the same logic [5014] it says congrats you won json. prize [5016] it's great out right now because there's [5017] no data coming in but you'll see that [5019] it'll work if I change the um input back [5021] to Nick then if I test this I'll see [5024] It'll follow the top route and then also [5026] send me an email okay great so now let's [5027] look to use the filter node um what I [5029] have here is I have my little first name [5032] Nick here um what I'd like to do in says [5034] I like to just change this a little bit [5036] so instead why don't we [5039] say uh instead we'll create a uh an [5042] array of names and inside of this we'll [5044] have Sally John and then Nick okay and [5049] so now if we test this we see three [5050] entries in an array called names we have [5052] our top level array which contains an [5054] array of of objects and we have our [5056] object and inside of that we have uh [5058] parameter or sorry a key whose value [5060] equals a list of other objects or an [5062] array of other objects I know the [5063] terminology can be kind of a lot and [5065] unfortunately um there are many ways to [5067] refer to the same thing so if something [5069] doesn't make sense just bear with me [5070] here and will in a moment okay great so [5074] let's say what we want to do is if any [5077] of these names correspond or sorry if [5080] this names array includes Nick then um I [5083] want to continue with uh the flow so [5086] I'll go array then what I want is I want [5088] to see if this array of of names feed [5092] that in here can contains and I just [5095] want to say Nick I'm going to test this [5097] out what you'll see is that we've kept [5099] it because it does in fact contain Nick [5102] which is pretty cool if instead we [5103] wanted to see if it contains Peter we [5105] test this that you'll notice that we are [5107] now following the discarded route okay [5109] there's kept and then there's discarded [5111] the thing is um it just goes down the [5113] same flow whereas if sort of split into [5115] two there's a true and a false route [5117] this one actually just like continues [5118] and proceedes down the same flow if [5120] something matches the filter it will [5121] continue something doesn't match the fil [5123] match the filter than it won't so what [5126] we could do if I just paste in this [5127] Gmail node so we could basically build a [5131] very similar flow um but what we could [5133] do is if it is kept then we could send [5136] uh you know we could send a prize of [5138] $100 instead we could hardcode that $100 [5141] in so I'm going to do is I'm going to [5143] check to see if it's kept okay so right [5144] now name contains Peter it's probably [5146] not going to be kept right so test [5147] workflow it's going to stop right here [5149] does not proceed any further If instead [5151] I change the filter so that it um [5153] contains Nick then we test it what you [5155] see is we're going to move on and we're [5156] actually going to like proceed with the [5158] rest of our flow so this filter here [5159] just allows us to kind of stop if um you [5161] know it doesn't match our condition or [5163] or continue and you can add as many [5165] conditions as you want you can go and or [5167] or um you can add whatever sort of logic [5169] you'd like I used array logic here too [5171] but there's also a lot there's like [5172] string you could check to see if [5174] something exists or matches a rigex [5176] number um date and time Boolean array [5178] and then there's also a bunch of object [5180] ones as well so that's filter pretty [5183] straightforward I would say um the last [5185] thing is uh well there's two more [5187] there's one called merge and then [5189] there's split into batches what I'm [5191] going to do here is I'm going to have [5192] two routes or two outputs of a module [5195] and then I'm going to combine them back [5196] into one and I'll show you guys what I [5197] mean with this remember earlier how we [5199] had some HTTP request um what I'm going [5202] to do is I'll go first name [5207] Sally and I'm going to [5210] have let's just say second [5212] name actually let's go [5215] um person one go person two just for the [5219] purpose of this example we're going to [5220] have two people person one Sally person [5222] to his Nick okay next what we're going [5224] to do is we're going to add an AI node [5227] you know down to open Ai and then I'm [5228] just going to message them all then here [5231] I'm going to say write a [5233] detailed fun story about and what I'm [5236] going to what I'm going to do is I'll [5240] go I don't know person one so jason. [5243] person [5245] one this example is sort of silly if I'm [5248] honest because we could just hardcode [5250] the names in there but I just wanted to [5251] do this to show you guys how this logic [5253] um of the merge node work I'm going to [5255] select GPT [5258] 40 and then I'm you know because it's is [5260] just a very quick and easy example I'm [5262] not actually going to add a user [5264] prompt okay it's now going to go and [5266] it's going to write me a fun story about [5268] jason. person one person one was Sally [5270] so we're going to see it in a [5272] second very fun thank you very much for [5275] the detailed [5277] story Q Jeopardy [5280] music Q other elevator [5283] music all right it's taking its sweet [5285] ass time could be for a variety of [5286] reasons I might have like a little bit [5288] of rate limit action going on on my end [5289] just because of all the examples that I [5291] provided but could also be something [5292] else I don't [5294] know let's see [5297] here okay cool looks like it did once [5300] upon a time in the vibrant city of [5301] elmsworth Where the streets hummed with [5303] the rhythm of Hope ful dreams and [5304] endless possibilities okay so we just uh [5307] you know we just wrote a cool story [5308] about Sally what what you can do in NAD [5310] is you can actually connect the same [5312] output to multiple um multiple future [5315] nodes so what I've done is I've you know [5317] I have one over here which I'm going to [5319] rename write story about uh [5322] Sally then I have another one over here [5324] which I'm going to say WR story about [5328] Nick then down over here I'm going to [5331] say write a story about person to two [5334] instead of person one which is you know [5335] now going to equate to neck right if I [5337] test the step same thing is going to [5339] happen it's going to call GPT 40 it's [5341] going to write me a cool [5342] story the issue is if you think about a [5345] logically we now have two routes we have [5347] one top route that writes a story about [5349] Sally another bottom route that writes a [5350] story about neck um so if we wanted to [5352] do something with these stories like I'd [5353] kind of have to repeat the same logic up [5355] here let's say I wanted to email this to [5356] somebody well I'd have to Gmail up here [5358] i' also have to Gmail down here right I [5360] have to duplicate it and it then [5362] provides a pretty simple and easy [5363] built-in way to avoid that it's called [5364] the merge node so you can merge M data [5367] of multiple streams once data from both [5368] is available so if you just click on it [5371] you'll see that there's a mode aend or [5372] combine or SQL query I'm just going to [5376] stick with aend for now I'm just going [5378] to feed in these [5381] inputs and in this way what I can do is [5383] I could actually just write you know one [5385] Gmail node here instead of two um and [5387] maybe I could like append both of these [5389] stories or something but let me actually [5391] show you um what this looks like now I'm [5393] actually going to test this workf from [5394] end to end as you see it it first does [5396] the top [5398] route and you can see this is orange [5400] because it's like filling out the um [5403] story about Sally right now this is [5404] currently active it's waiting to fill in [5406] the merge the second this is [5410] finished and I think I probably should [5412] have set some character limit to the [5413] story because now I'm thinking about [5414] it's probably writing a lot rip my [5418] tokens and then after it's done with the [5420] story about Sally it's going to go and [5423] just going to do the same thing WR a [5424] story about Nick um hopefully this [5426] finishes before the next ice age okay [5428] that took way too long but uh just make [5429] sure you put in some sort of limits next [5431] time you do one of these calls otherwise [5432] you'd be waiting here until the end of [5434] time however what we see as our final [5437] product is the top route completed and [5439] then populated the merge and the bottom [5440] route also completed and populated the [5442] merge now we had one item from the top [5444] route one item from the bottom route and [5447] we also carried forward one item from [5448] the top route one item from the bottom [5449] route but what you'll see is the output [5450] of this merge is now two items instead [5452] of one reason why it's two items is [5454] because we use the the append so now we [5457] have uh you know the story number one [5459] and we have the story number two [5461] basically we don't actually have to just [5463] output two things we can actually just [5464] output like one item instead um but [5466] because in nadn um outputs are arrays of [5469] items you kind have a choice there now [5471] since we output two items what we could [5473] do is we could add our little Gmail node [5475] stick that down here connect [5478] it then I'm just going to pin this and [5482] what I could do is I could email myself [5484] um this [5486] story I could a story about just cuz I [5489] back myself into a corner here I need to [5490] write kind of like a little bit more [5492] difficult of line of code but I don't [5494] have access to Nick here right like I [5497] don't have access to a single variable [5499] that contains the Val that I'm looking [5500] for this is person one Sally person two [5502] Nick so I mean I could select person one [5505] but then my second run would also say [5508] Nick right so both of these would say [5510] story about Sally story about Sally even [5512] though they'd have different stories so [5513] I'm going to do is I'm going to say um [5516] I'll look at the actual [5518] story so I'll [5521] go uh sorry I'm going to go to the merge [5524] I'll look at the actual story here which [5527] now that I think about it is actually [5528] just [5529] Jason I'll go message I'll go content [5532] then if it includes the term [5535] Nick then I'm just going to return Nick [5538] otherwise I'm going to return Sally [5540] that's how that works so if this [5542] contains Nick I'll return Nick if not [5544] I'll turn the ter I'll R I'll return the [5546] term Sally this is just a kind of a [5548] shorthand way to use the if um else [5551] logic same as what we had before so I'm [5553] just going to pop this puppy [5556] open um and let me take a look at the [5559] data story about Nick Nick was an [5561] ordinary guy with an extraordinary dream [5563] I wanted to become the first person to [5564] ride a unicycle all the way across the [5566] United States then Sally Once Upon a [5569] Time the quaint town of Lavender Hill I [5571] think uh this was the one where I Ed out [5574] or something because of the rate limit [5575] unfortunately so it doesn't look like it [5576] generated me anything more than once [5578] upon a time in the quaint town of [5579] Lavender Hill but I'm sure we could yeah [5581] like I could rerun this let me just make [5583] sure that the prompt is a little bit [5586] shorter less than 100 words let's just [5589] do [5591] that and then good uh awesome we should [5595] be good now to actually produce this [5597] puppy let me just go over here and [5599] delete [5600] these examples that I don't need in [5603] preparation for the next run and cool we [5606] we warmed up to [5608] Gmail now we have a story about Sally [5610] who's a curious hamster and then I am a [5612] curious inventor lovely wonder why uh [5615] they use the term curious both times but [5618] anyway I hope you guys see now that like [5619] basically the merge connects two things [5621] together on the if statement sort of [5622] does the opposite kind of creates two [5624] routes [5625] right yeah this just kind of neat when [5627] you contrast and compare them like that [5630] so I believe now we have everything we [5632] need except for the into batches uh run [5635] split into batches is kind of a little [5637] trickier of a thing to conceptualize so [5639] I'm going to show you a real example [5641] from a source that I use to extract a [5642] bunch of data so let me take a quick [5645] peek here at um I think I was doing deep [5649] personalization system yeah so I created [5651] a video on a deep personalization system [5652] a while ago and as part of it um what [5655] I'm doing is I'm waiting over here for [5657] data to come in through a web hook I [5659] send in data to this web hook and then I [5662] use it to call an API that gets a bunch [5664] of data set items data set items are [5667] pretty big right as you can see over [5668] here it's a bunch of data but specific [5669] leads but notice how it says 128 items [5672] above right anytime you output more than [5675] one item in n8n what you can do is you [5677] could Loop over every item then you [5680] could perform something individually on [5682] just that item and then once you're done [5685] with that you could go back to the loop [5686] over and over and over and over again [5688] until you're completed so in my case I [5691] had a lot of items in this I had 128 for [5694] Christ's sake right and what I wanted to [5696] do is I wanted to run my five column [5698] personalization flow similar to what we [5699] saw earlier and then I also wanted to [5700] add a road to my spreadsheet now [5703] unfortunately every time I did that I [5704] consumed one API uh call and a lot of [5707] these platforms have pretty intense rate [5709] limits so instead of me um one issue I [5713] always found I found very frequently was [5714] I just kept on getting timed out it [5716] would say 400 error or 403 error or [5719] whatever basically the Guist of that is [5721] that you know I'm over the rate limit [5723] and they're not allow me to make any [5724] more requests for a certain amount of [5725] time so what I did instead is instead of [5727] me just submitting all of those requests [5729] simultaneously I added this to a [5731] loopover items and then I added a [5732] designated weight node the weight node [5735] is a simple node in NN that allows you [5736] to wait for a certain number of seconds [5738] in my case five and in this way I was [5740] able to basically take one item go from [5743] start to finish wait 5 seconds and then [5745] loop back and then proceed with my next [5747] item I basically just went you know one [5751] after the other after the other after [5753] the other over over and over and over [5754] and over again so that's just to give [5756] you guys some context on what that [5758] actually might look like if I go down [5760] here and I set um my items here I'm just [5763] going to use a future a feature in nadn [5765] that allows you to automatically set [5767] like your own test data so I'm going to [5768] say you know there there's first item [5771] and then there's second [5773] item um and my data for that where is [5776] the edit Fields right over [5779] here I zoom way in you'll see that I'm [5782] not outputting two items right so what I [5785] can do is I can go Loop over items split [5787] in batches you set the batch size to one [5791] what it'll do now is it will go first [5793] item and then second item what I'll do [5795] is when you add a loop over items it [5797] immediately adds a replace me node and [5799] this is what you're supposed to [5800] basically replace with the thing you [5801] want to do so in my case I just want to [5803] wait 5 seconds so I'm just going to go [5805] over here and go [5806] wait wait exactly 5 Seconds what I want [5810] to do is for the loop route for the [5812] route that is going to be Lo looping [5813] over my items so basically for every [5816] item you can think of this as I want to [5819] await and I want to wait 5 Seconds very [5823] cool then the output of this needs to [5824] feed back into the input this is kind of [5826] like the tricky [5828] part so um when you go through a loop [5830] I'm going to click a test workflow I'm [5832] going to generate two items and then I'm [5833] just going to pull one item out of that [5834] and I'm going to wait 5 seconds I'm [5836] going to go to the second item and I'm [5837] going to wait 5 seconds is this going to [5839] do anything no but notice that there's [5841] both a loop route and then there's a [5843] done route basically in n8n once you're [5845] done with the loop route it just [5846] automatically goes to the the done route [5848] so I could do something like this and [5850] maybe I send myself an email let's just [5853] draft and then let's say um you [5857] know done [5860] looping you successfully waited 10 [5866] seconds awesome so we're going to wait 5 [5869] seconds and then 5 seconds and then [5870] we're going to Gmail okay so that's it [5873] I'm going to test this [5874] workflow that's the first 5 Seconds [5878] here and that's the second 5 Seconds [5882] here and once this is done we can now [5885] send over an email draft or queue up an [5887] email draft I should say which is right [5890] over here I should note that I may have [5892] ran this twice I feel like I just ran [5894] this twice um looks like it's carrying [5896] all of these here oh yeah sorry it'll [5899] it'll output all of the records that you [5901] feed it in basically so I fed it in um [5903] two records and the third run it went [5905] and then fed both of those records in as [5907] input to my Gmail Branch um what I could [5909] do is I could just feed in uh I I could [5912] take these two items and I could convert [5913] into just one item by by combining them [5915] um and then I wouldn't have to deal with [5916] this which is kind of neat so that's [5918] probably what I would do in practice I [5920] wouldn't actually proceed here with two [5921] items I would just do one there's a [5924] really cool built-in way to do this in [5926] nadn just called execute once so if you [5928] just go to the settings page of any node [5930] and then just click execute once you [5932] basically stop the multiple executions [5934] regardless of the number of elements [5935] that preced it so I just clicked execute [5938] once instead of me sending two emails [5939] now it's only going to send one that's [5941] run number [5943] one that's run number two then it'll go [5947] and it'll feed one item as an output so [5950] if I refresh this now instead of two I'm [5952] only going to have one quick and easy [5954] hack um and yeah you know because we're [5956] building stuff live hopefully you guys [5958] get to see the applications of this in [5959] real time as we put something together [5961] all right so now I think we are at the [5962] point where we can realistically build [5964] out substantially more complicated flows [5966] what I'm going to do now is basically [5967] run almost like a test of sorts where [5970] we're going to take all the information [5971] that I just tried to shove into your [5973] brain and we're going to use it to build [5974] out a flow that actually does something [5976] business um business worthwhile a flow [5978] that I've sold many times before a flow [5980] that's made people a fair amount of [5982] money so this is what the flow looks [5984] like right now I'm actually going to [5985] simplify it I've decided to do it a [5987] little bit simpler just over the course [5988] of the last like 20 minutes thinking [5989] about it but basically just to keep [5991] things make a long story short there's [5992] this out there called SOS um and I [5994] mentioned this at the beginning of the [5995] video they send out like a a query every [5998] day from journalists uh where the [6000] journalists are looking for people that [6002] match their criteria to answer questions [6004] so uh for instance you know this one up [6007] here is from Jordan Rosenfeld who's [6009] saying seeking Healthcare and Medicare [6010] specialist to weigh on how RFK junor and [6012] Doctor M at o might affect benefits or [6014] Healthcare if appointed know that this [6015] is usually like us specific I think they [6017] have kind of like a like a global arm [6020] sometimes too but most of those is going [6021] to be USD uh us specific and then it [6024] says hey um I'm looking to speak to [6026] people in a nonpartisan way about the [6027] possible changes of things like Medicare [6029] healthcare insurance these are two [6030] stories specify what you're commenting [6032] on can be both robust and longer answers [6034] or prioritized you must have the [6035] relevant experience will link back to [6036] your site please include pronouns [6037] there's a lot going on here right [6039] basically what we want to do is we just [6040] want to take this whole long [6043] email and we just want to extract all of [6046] these so this would be [6049] one this would be one this would be [6055] two this would be three and so on and so [6058] forth and we want to feed this into Ai [6060] and we just want AI to give us a very [6061] simple answer hey is this relevant to me [6063] based off of some characteristics I'm [6065] going to give you and two if it is can [6067] you like pre-draft an email for me so [6069] pretty pretty simple pretty [6070] straightforward stuff right let me show [6072] you how straightforward this flow can be [6074] given what you now know and I want you [6076] to treat this as like a test basically [6077] like you've made it this far um let's [6080] actually see if you could build [6081] something out that's that's business [6082] worthwhile if something that I'm saying [6084] doesn't make sense uh pause the video [6086] and look for the specific part that I've [6088] covered the the concept in CU that's [6090] that's basically the purpose here I just [6091] want you guys to be able to reaffirm [6092] your knowledge and show you how now you [6093] can do something pretty cool okay so the [6095] first thing I'm going to do is I'm just [6096] looking for a Gmail trigger there I'm [6098] going to select my credential sorry not [6100] create a new credential I'm going to [6102] select my credential Gmail account 3 and [6104] the way that this module or node works [6106] is it extracts emails for my inbox that [6108] match my specified filters and it does [6110] so in the timing uh that I give it so [6112] every minute hour day week month X [6114] custom whatever I'm just going to say [6116] once a day for now it's going to be [6118] zeroth hour zeroth minute simple stuff [6121] the event I'm looking for is message [6123] received then what I need to do is I I [6124] need to add a filter down here and [6126] there's one called search where I [6127] basically just look for emails from SOS [6131] luckily for me they're all formatted in [6132] very similar ways SOS media queries so [6134] if I want to get all the emails from SOS [6136] this is just what I do now I don't just [6137] want to get any email I just want to get [6138] the specific email just to show you guys [6140] what I'm working with later on we'll [6142] then um separate it so it's just SOS [6144] media queries it will work with any of [6145] them but for now I just want to grab [6146] this one here's what you do you just go [6150] subject then you'd feed this in this is [6153] a Gmail operator so just use whatever [6155] same filtering mechanism you do for your [6157] own emails in Gmail uh and just feed it [6159] in over here and it'll work fine okay [6161] now let's test this out let's grab the [6163] data we've received a ton of data uh [6165] this is an object with 11 items inside [6169] but this simplifies sort of working [6172] against us here um the Gmail trigger [6174] just natively always has simplify on we [6176] actually want to get rid of this I'm [6177] going to go to expression just like we [6178] know how and press and type in false [6181] this is the Same by the way as just [6182] turning this off I just wanted to be [6183] clear that I always use the Expression [6185] field and now I'm going to get the [6187] actual data of the email which is way [6189] more as you could see here instead of [6191] whatever it was 12 or something now it's [6193] or six now it's 13 and uh the headers [6196] object has 27 items buried in it just in [6199] and of itself the thing we're looking [6201] for is this text variable which is the [6202] same is what we had before tell friends [6204] to join source of sources it's always [6205] free want to know how to strengthen your [6207] relationship with journalists blah blah [6209] blah we're then going to pin this so now [6211] we have access to all of this Json in [6213] future nodes and I think I got lost here [6216] with my Gmail [6217] trigger and now let's actually go ahead [6220] and let's let's split this data let's [6222] basically get our data so that it's just [6224] a bunch of these how how how are we [6226] going to do this just think about this [6228] we got a bunch of text processing [6229] features available to us we know a [6231] little bit about the Json uh JavaScript [6233] and and stuff like that but what are [6235] some ways we might actually [6236] realistically be able to do this well [6238] the way that I see it is the great news [6240] about um source of sources and the [6242] previous uh service called har is that [6245] they just have the same like characters [6247] everywhere so they have a bunch of stars [6248] here then between every story is [6251] basically just like these underscores so [6253] underscores there underscores there [6257] underscores there so when you see a [6260] similar pattern like this it becomes [6263] very easy for you to like process this [6265] in a no code tool using a term or a [6267] function called split where you [6269] basically just feed in a whole big [6270] string and then you just split it based [6271] off some that you want so I'm probably [6274] I'm going to probably need to split this [6275] twice the first thing I'm going to do is [6276] I'm going to split based off this up [6278] here and then you know there's like this [6281] top section and then there's going to be [6282] this whole bottom section then after [6284] that I'll grab the bottom section I'll [6285] split it based off of this probably then [6288] I'll just be able to get like the [6289] individual sections if that sounds like [6290] rocket science to you right now don't [6291] worry we're going to go over here press [6293] edit [6295] fields and what I'm going to want to do [6297] is for now I'm just going to go manual [6298] map and click add field this allows me [6300] to create my own variable basically [6302] based off of um you know the the [6304] previous module so I'm going to type [6307] above uh [6310] actually yeah let's let's just call this [6314] below and then what I'm going to do is [6316] I'm going to feed in where is this text [6319] a it's right over here I'll go to the [6321] expression field and I'm just going to [6322] type dollar sign Json Dot and what I [6325] want is I want text okay so now if we [6328] open up this big fat editor here we got [6330] all the text right here pretty sweet [6331] right we don't want all the text we only [6333] want the stuff that is uh below this [6336] line so I'm going to copy this and then [6338] I'm just going to go over here and press [6339] dot now we have a bunch of functions and [6341] I haven't covered all these functions [6342] yet I will in the future videos um but [6345] one of the functions that I use all the [6346] time it's called split just press split [6349] and all we need to do now is we just [6350] need to feed in the thing that we want [6351] to split it by so I'm going to Fe in [6353] what I just copied a moment ago okay and [6356] now instead of just seeing the string we [6359] actually see an array and this is what [6360] arrays look like when they're output in [6363] um nadn it says bracket array and then [6365] colon space and then we actually have [6367] the whole array here and this array is [6369] split based off of wherever this was so [6373] I think it's going to be split right [6375] over here the last character before it [6376] will say information week okay so we go [6379] information week I'm going Zoom way in [6383] and yeah that's what the array looks [6385] like right we have we have a we have a [6386] comma so this whole thing was a string [6388] then we have um quotes and then a comma [6390] a space and then we have another quote [6392] and this is the beginning of everything [6393] underneath it which is awesome for us [6396] okay so this is basically what we get um [6398] and now the really cool thing that n [6400] allows us you do is it allows you to [6402] pull objects out of an array so this is [6404] an array with two items inside of it the [6407] one string that's everything above those [6409] lines this little star line then another [6411] string that's everything below the Star [6412] Line we can just go do last and now [6415] we'll just pull out the actual string [6416] itself which is this all of this how [6420] cool now what else we could do is [6423] theoretically we could just split this [6425] again we could split this again and then [6427] extract everything split based off of [6430] these characters so I go do split feed [6434] this in now we have another array right [6437] how many items are in here I don't know [6438] let's find out so I'm going to test the [6440] step you click on test step and now we [6442] have a bunch different items so yeah [6443] just make sure you like set the array um [6446] here anytime you're screwing around with [6448] data otherwise I believe they have a [6450] field like auto type convert or [6451] something um I haven't used that one [6453] before type conversion errors or [6454] something um I actually just set the [6456] specific uh data type that I want in [6458] this case I'm creating an array I'm [6460] splitting stuff to turn it into array so [6463] uh I'm going to be doing so with this [6464] array drop down okay but anyway now we [6466] have a big array pretty cool [6468] right and it looks like we have 19 items [6471] in total what I want to do with this is [6473] first of all I'm going to pin [6475] this second of all I'm going to go over [6477] here to extract titles and I'm just [6479] going to copy this because I don't want [6480] to have to rewrite the whole prompt I [6481] think that would probably take like [6482] 15ish minutes or so once when all is [6484] said and done um what I want to do is I [6486] want to um grab this data which looks [6489] just like this and all I want to do is I [6492] just want to feed this into AI now and I [6494] just want to have ai tell me hey am I [6496] good you know if I'm good then go ahead [6498] and like draft an email if I'm not good [6500] then um then don't and I know just from [6503] experience that this is sort of split [6504] into two parts [6506] here so I'm just going to copy this [6511] over I'm going to use it to create my [6513] prompt okay what does this prompt look [6515] like you're a helpful intelligent [6516] Administrative Assistant very on brand [6517] for me that's a system prompt then hey [6520] I'm a business owner specializing in AI [6521] automation marketing and software then [6524] what I'm going to say is below is an [6525] email requesting [6528] [Music] [6529] a uh BL an email requesting [6533] Let's do an email request from a [6536] journalist looking for a [6540] story about sorry information about [6544] their [6545] story then just going to paste a bunch [6547] of data [6552] in your task is to determine whether it [6555] is relevant to me and if so pre-draft an [6559] email [6565] that answers their questions using my [6568] tone of voice and I'll say casual [6570] Spartan some [6572] information about me I own 1 second [6576] copy here are my [6580] links then I will [6584] say uh sorry I just got a lot going on [6587] here cuz I'm piecing This Together [6589] between two different [6590] um prompts but anyway some information [6593] about me I own one second copy a [6594] successful AI marketing copy R came up [6596] my name is Nick here my links don't use [6597] unless asked [6599] links and [6600] then um below is a request by a [6604] journalist for outreach write us a sync [6605] Spartan email responding to each [6607] query say Spartan email be concise use [6612] the following [6615] format [6617] okay then I will say [6623] if it is relevant return a Json [6626] object as [6629] follows [6631] true email body email body goes [6638] here if it is not [6644] relevant return false for relevance and [6647] leave email body [6651] blank some information about me [6656] good use the following email format [6659] email template when responding to [6661] relevant inquiries [6666] cool make sure to respond in [6670] Json very sweet okay great and now all [6673] I'm going to do is I'm going to [6676] provide as [6680] input um the specific item that I am [6684] referencing so what you'll find is when [6686] you're referencing a an array like this [6689] what it'll do is it'll grab the specific [6691] item of the array So json. Below Zero I [6694] don't actually want that um what I want [6695] to do is I I basically want to Loop [6697] through this array and then for every [6698] item I want to feed this in as input um [6701] this is selecting the first item here [6702] with the zero everything is zero indexed [6705] so this is0 1 2 3 four and so on and so [6707] forth um so in order to do that we're [6709] going to have to take our data and do [6711] just a little bit of preprocessing first [6719] um we're going to want to combine a [6720] field from many items sorry uh turn a [6723] list inside items here using the split [6725] out node I don't believe I talked about [6727] split out but rest assured all this does [6730] is it turns an array into a bunch of [6732] items so you can run them one by one [6733] okay great so below no other fields and [6735] now we have 20 items on the right hand [6737] side and now basically we can feed in [6739] every one of those 20 items to AI [6743] so all I'm going to do now is I'm just [6745] going to feed in uh this below [6747] field and now instead of me having to go [6749] json. items St below zero below one [6752] below two because we are now splitting [6754] this into a top level uh array instead [6756] of before how it was uh an array and [6759] then the curly bracket below and then [6761] another um array with like 20 records [6764] now it's just below below below below [6765] below it's going to run basically once [6767] for every item that we've received so [6770] yeah that's that um we should be able to [6772] get get some Json here uh I don't want [6774] to run it on all 20 as a test though cuz [6776] all we're doing is testing so what I'm [6777] actually going to do is I'm going to go [6778] in between these and type in limit limit [6781] allows us to restrict the number of [6782] items so I actually only want to run [6784] this twice to start and I want to see [6787] what happens so I'm actually going to do [6788] this on two items then we're going to [6790] see what those two item outputs are and [6792] if they're good then we'll continue [6793] we'll pin them and then move on and if [6795] not then we won't we'll be able to [6796] modify them before we actually waste 20 [6798] uh tokens worth of data and I'm just [6801] going to pin all the data moving forward [6802] forward and then I'm going to go over [6803] here to limit and then I'm just going to [6804] press test [6806] step okay I'm going to pin this now so [6808] now we have the two items I'm going to [6810] go over here and then I'm going to test [6811] this [6813] step looks like we are now producing and [6816] it looks like both of these were false [6818] so I'm going to want to up this limit [6819] just a little bit maybe we'll try three [6822] last items instead we'll overwrite the [6824] data that's pinned we'll pin it again [6827] I'll go back to extract titles and now [6828] we're feeding in the last three [6830] Enterprise geni users yeah this is [6831] probably me [6835] Edge Ai and stuff looks like they kept [6837] their AI entries at the end so that [6839] makes [6842] sense and we're now doing three API [6846] calls it looks like uh there were two [6849] TRS so true up here true up here this [6851] looks like it was just junk data so we [6853] could actually cut that out show you how [6854] to do that later um but now we actually [6856] have like emails drafted hey Pam I own [6858] one second copy accessible blah blah [6859] blah here's a big answer to all of these [6861] questions that's pretty cool all we need [6864] to do now is we just go Gmail we draft [6867] oh you know [6868] what uh we need to grab the email don't [6871] we yeah I don't think I actually grabbed [6873] the email address of the [6875] person yes I did not so let's actually [6877] change our prompt a little bit let's [6879] edit it so that we actually output the [6880] email [6881] too so I'm going to go back here I'm [6884] actually going to [6886] go [6889] um email address [6895] um discovered or let's just go their [6902] email okay there you go it should [6906] probably be [6909] sufficient let's actually test this one [6911] more time so now we should actually [6912] extract their email address as well [6913] assuming the AI does what I what it's [6916] silly human Overlord tells it to [6920] do and now that we have the the the [6922] email um address will actually be able [6924] to like use that to feed into a draft [6926] yeah I kind of forgot about that so [6927] we'll go back to Gmail I'm going to go [6929] draft create a draft credential Gmail [6933] account 3 resource draft operation [6935] create then I'll say [6938] re and then I'll say SOS inquiry I'm [6943] going to go a message and then all I'm [6944] going to do is I'll go back to my schema [6946] just going to drag my email body in here [6949] then I'm going to add an option called [6951] uh [6952] no we'll go to email and then we're [6954] actually just going to feed that puppy [6955] in there and now we can actually test [6958] this out on three so let's go one two [6961] three so you have three items all them [6963] just wrapped up we go back to my email [6966] inbox go down to [6968] draft we'll see that uh I created one [6971] for each it looks like I created an [6973] additional one but anyway I'll cover [6974] that in a second the first was this one [6976] to this lovely Pam lady very nice second [6980] was this other one to this lovely John [6981] fella [6984] very cool uh everybody followed my email [6986] template no issues and then yeah it [6988] looks like we just used one additional [6990] um [6991] email I think the reason why we sent [6993] that additional email is because we [6994] technically outputed an item so I wonder [6997] if we could just not output an item that [6998] would be one way to do it [7002] um yeah we could just not output the [7004] item or you know we just add a filter [7007] like I uh was showing us how to do so [7009] before [7012] so if uh let's just go down here let's [7016] go Json [7021] dot let's go item [7024] three we'll go down to um jason. email [7029] no. [7030] relevance message. content. [7035] revance so basically if this is equal to [7040] false um then sorry this is equal to [7043] true then we'll continue and then if not [7044] we won't so we should get two right yeah [7048] there you go we uh kept two items and [7050] now we're only going to be sending [7051] emails on the two items that passed our [7053] filter so just because I always like to [7055] do um an endtoend flow I'm just going to [7058] discard some old drafts here delete [7060] everything and then run this one final [7062] time just to show you guys what all this [7064] looks like we will um use the Gmail [7067] trigger edit the fields split them out [7069] uh I'm going to have the limit B3 items [7071] just for now because I don't want to [7072] like draft a bunch of emails extract the [7074] titles add a filter and then create [7076] three drafts let's run this from start [7078] to [7079] finish we're now extracting the [7088] titles and by sorry extracting the [7090] titles I mean we are um filtering and [7092] creating an [7094] email and then the end result is we have [7097] two drafts in our inbox which is kind of [7098] neat and if we wanted to take this even [7100] further what we could do is we go go [7102] down to Gmail and then we can add a [7103] label to this message just to make it [7105] abundantly clear I select the message ID [7109] that we just created it's going to be [7111] right over [7112] here uh I could just call this public [7115] relations or [7116] something and [7118] now basically it'll just automatically [7120] apply a label to these drafts inside of [7122] my inbox that I just know that these are [7124] you know these are public relations [7125] inquiries basically um these are not you [7128] know other email drafts for some [7130] purpose and that's kind of cool of a [7132] flow but I'm actually just going to [7134] stick that right over there and then [7135] because I'm already getting mixed up [7137] with the extract titles I'm just going [7138] to say filter and respond to email or [7142] maybe create email body there you go a [7145] little bit simpler so yeah we used a ton [7147] of new functions here um we use the [7150] split I then use the split out I don't [7152] actually use all of these super often we [7155] did use the filter which I talked about [7156] and covered and then the limit is just [7158] basically like an internal tool that I [7160] like to use to uh make sure that not [7162] screwing around with token usage or [7164] spending a ton of like executions or [7166] anything like that um I think this [7167] system is a lot cleaner than that other [7169] system that I was going to build with [7170] you guys before it's also a little bit [7171] more simple here I have just a ton of [7172] code unfortunately but we'll get rid of [7175] that we'll use this as the two templates [7180] for us then I'll also just make this [7183] nice and easy to [7184] see and yeah I hope you guys appreciated [7187] this um just so that we could do a quick [7189] recap and because in my experience doing [7192] a recap of the stuff is sort of how you [7193] remember it uh we started off by talking [7195] a little bit about Fields specifically [7197] two types of fields there were fixed [7198] Fields And Then There Were um expression [7201] based Fields I sort of made a case for [7203] you as to why you should probably favor [7204] expression based Fields over fixed [7206] Fields wherever possible because you can [7208] do the exact same thing anyway and you [7210] also just get like a ton of code options [7212] so I always just to a little expression [7214] um I then showed you how all of these [7216] different field inputs even like the [7217] little toggle buttons these really are [7220] just Expressions at the end of the day [7221] you know if it's a gole button it's true [7222] or false if you're selecting a Google [7224] sheet or something and there's actually [7225] an ID behind it and so now you know a [7227] lot more about sort of the underlying [7229] data and the way that NAD structure [7231] stuff I then covered Jason JavaScript [7234] object notation in probably pretty [7235] excruciating detail hopefully that [7237] wasn't too boring but we covered a bunch [7239] of different variable types just to [7240] recap them there was a string there was [7242] a number there was a bull or Boolean [7244] true or false uh there was an array and [7247] then there was also another object so [7249] you could bury JavaScript objects inside [7251] of JavaScript objects there were key [7253] names values we learned a little bit [7254] about the formatting with quotes um as [7256] well as commas and and brackets and that [7258] sort of stuff but the reality is if you [7260] just like stare adjacent long enough [7261] kind of give it a good squint or two [7263] eventually it'll start making sense and [7265] that's why I've now changed all of the [7267] input and outputs inside of our nadn [7269] course tutorial to to favor adjacent [7271] JavaScript object notation just so you [7272] guys could see it and kind of get used [7273] to it from there we covered a little bit [7276] about how data is represented in naden [7278] so specifically all data all inputs and [7280] outputs in naden are structured as an [7282] array of objects so there's some top [7285] level you know curly or uh square [7287] bracket and inside there's just a bunch [7288] of those JavaScript objects nestled in [7290] it and if you want to reference the most [7292] previous um node then all you need to do [7295] is just use this little dollar sign JS o [7297] n syntax if you want to reference nodes [7300] from 2 3 four or n nodes Back N standing [7303] for in whatever number um then you would [7306] do the dollar sign but then you'd have [7307] to like specifically reference the name [7309] of the node um no big deal um anen [7312] actually does a lot of that selection [7313] for you and there's usually a little [7314] drop down or toggle button that you can [7316] just click to get there we talked about [7318] how to reference earlier Fields how to [7320] do some backtracking with like dot [7321] notation and square bracket notation [7323] then I also covered some common gotches [7325] the most common gotch in naden just to [7326] be clear is people don't understand that [7328] it is an array of objects that you're [7330] referring to and so um naden will run [7332] once per item in the array and so if you [7335] think that you know if you're trying to [7337] reference one item but you're really [7338] referencing all of them obviously you're [7340] going to get an error message it's not [7341] going to work likewise if you're trying [7342] to reference a number of items but you [7344] only reference some subset of them [7346] you're going to have some error uh [7348] message and you know you're going to get [7349] that Dreadful red text that I think we [7350] all hate so much so understanding that [7352] everything is just an array of items and [7354] array of objects this goes a long way [7355] towards insulating you against that [7358] finally we covered some foundational [7359] notes we started off with the HTTP [7361] request node which allows us to [7363] basically request or do the same thing [7365] that your browser is doing when you [7367] access a website pull all of the code [7369] and then I also showed you guys how to [7370] do cool stuff with AI ey where you take [7373] the extracted or parsed components of [7376] that node like uh you know maybe like my [7378] my my left-click website and then turn [7380] that into some sort of air structured [7382] data like a summary like some [7383] interesting tidbits about that website [7385] maybe the contact details if you could [7387] find it I then covered a little bit [7388] about web hooks if you guys are familiar [7390] if you guys remember web hooks are just [7391] like the glue that holds so much of the [7393] internet together I showed you guys how [7394] to send a request from one workflow and [7397] and receive it in another workflow then [7399] I also showed you guys how to use a [7400] third-party platform in this case [7402] clickup but you can really use whatever [7403] the hell you want to send a request upon [7405] some trigger that now I'm like [7406] connecting nadn and clickup with my own [7408] native integration without even [7410] necessarily having to know too much code [7412] or or anything like that and then at the [7415] tail end there I covered um the open Ai [7417] and AI agent nodes the real value of n8n [7421] in comparison to most other no code [7422] tools in addition to its ability to [7424] self-host is their AI agent [7426] functionality that just works fresh out [7427] of the box so rest assured we're going [7429] to be covering a lot more of that moving [7430] forward but we built a very simple [7432] example where I essentially asked my AI [7434] agent what was going on for the day and [7436] then it pulled data from my calendar [7438] intelligently while also still being [7439] able to like talk back and forth in [7441] natural language we covered some nodes [7443] that modify flows as well including the [7445] if the filter the merge the split into [7448] uh batches or bundles we covered the [7450] split out and then finally we also [7451] covered while I was building that last [7453] example the limit and then from there I [7455] showed you guys how to build a super [7457] simple and easy essentially email [7459] autoresponder type flow but one that [7462] does a very high leverage high value [7464] business purpose which is parsing out um [7467] defining whether a a a journalist [7469] inquiry is relevant to us or not then if [7470] it is actually writing out an example [7472] based off of a template I had a lot of [7474] fun putting this together and I can [7475] already tell that my voice is starting [7476] to go so probably going to call it there [7478] but if anybody has any questions about [7480] this just leave them down below and if [7481] you guys have any suggestions for future [7483] videos on nadn or some other no code [7484] topic then please send them over do all [7487] that fun YouTube stuff like comment [7488] subscribe and I'll catch you all on the [7490] next video thanks

Video: https://www.youtube.com/watch?v=OLwEtOEF36A
Title: The 3 Best AI Automation Agency Niches in 2025
[0] hi everyone I scaled my AI automation [1] business to $72,000 a month and in this [4] video I want to talk about the three [5] best AI automation agency niches in 2025 [9] I'm not just going to give you the niche [10] I'm going to give you problems to solve [12] solutions that you can sell them then [14] I'm even going to talk about how exactly [16] I would scrape and then reach out to [18] these people today if that sounds like [20] something you guys want to learn let's [21] get in the [23] video okay I'm going to cover these [25] three niches in a second just before I [27] do I want to talk about what makes a [28] niche great to begin with the reason why [30] I have to do this is because our [31] industry moves super quickly it's not [33] enough just for me to give you these [34] three niches on a silver platter which I [36] will but I don't just want to do that I [37] also want to give you guys the skills [39] you need to be able to pick any niche in [41] the future even if the underlying [42] fundamentals of this technology change [44] which they surely will by the way [45] happens every few months so what makes a [47] great Niche uh three rules of thumb [49] first digital so not brick and mortar [52] second mid ticket plus that means over a [54] th000 bucks per deal and third as few [56] regulations as possible no Hippa stay [58] away from Healthcare stay away from [60] legal to give you guys some more context [62] like you can think of niches in a couple [63] of different ways they can either be [65] brick and mortar that is a physical [67] business out there in a real world with [68] a storefront or they can be digital [70] which is something like what I'm doing [71] something like what a lot of digital [72] agencies do uh the issue that I find is [75] many automation agencies just because [77] they're new and these businesses are [78] accessible they will start with brick [80] and mortar ones and then they'll find it [82] very difficult to scale and make money [84] my recommendation is you go digital [86] wherever possible now there's some [88] reasons why the first is it's very hard [90] to Source break-in mortar leads if we're [91] being practical digital leads are very [93] easy uh consider how difficult it would [96] be to find a list of Knoxville HVAC [97] companies versus just creative agencies [100] across the United States like one is [102] specific to Knoxville they probably only [104] a few HVAC companies that operate in [105] that jurisdiction uh whereas the other [107] is like basically I mean it's worldwide [109] but in our hypothetical across the [111] United States there could be tens of [112] thousands hundreds of thousands so you [115] can in practice get 10,000 plus leads in [117] just a few days for a few hundred maybe [119] even less money that if you guys have [120] watched my Elite scraping tutorials the [122] second reason is that most [123] brick-and-mortar clients just do not [125] understand the value of automation [127] anywhere near as much as digital ones [129] because the work that they do on a daily [130] basis just does not involve these sorts [132] of Technologies think about Lucy who [134] owns a flower shop down the street is [136] she really going to understand the value [138] of like a lead generation system is she [140] even going to be able to employ a lead [142] generation system or maybe a CRM or or [144] project manager or proposal generator [147] and that sort of stuff probably not um I [150] don't mean to knock brick and morar [151] business owners I know a lot and they do [153] fantastic some of them do much much [154] better than I do financially but they [156] just tend not to deal with this sort of [158] stuff on a daily basis whereas digital [160] business owners do they understand crm's [162] project managers they understand uh [164] systems at least from a bird's ey view [166] most of them just because that's sort of [167] what they have to do on a daily basis so [169] when a client understands the value of [171] your service you can obviously sell them [173] for a lot more money than if they don't [175] the third big thing is that brick and [177] morar budgets in my experience are often [178] a lot smaller the reason why is because [180] reach is sort of limited and you have to [181] contend with an additional line item [183] which is rent right for the most part if [185] you run a digital business you do not [187] need to pay for rent and rent a lot of [188] the time can be a fair amount of money [190] it can be sub a substantial portion of [192] like an average brick-and border [193] business's um total you know operating [195] budget so if you think about Lucy at [197] that flower shop she might make you know [199] $155,000 a month on like a good month [202] her rent might be $2 or $3,000 of that [204] more so if you're in like one of these [205] ritzy ass cities like NYC or something [207] probably much more so the last thing is [209] that implementing stuff in real life is [211] a lot tougher in general than [212] implementing stuff solely through um [214] some digital interface like we are doing [215] as automation Specialists so you know a [218] lot of the time if you work with these [219] brick andw businesses if you want to [221] economize or optimize their processes [223] you need to do things in the physical [224] world too like if somebody comes to your [227] the cashier register or whatever um you [230] give them an iPad or something to have [232] them put their information in instead or [234] maybe they can opt into some some [235] special thing for instance um that sort [237] of stuff takes a lot longer to get a [239] feedback loop because you have to tell [240] the owner hey you know put that iPad on [242] your front desk we're going to open up [243] to this link I want you to do X Y and Z [245] thing and then you actually have to test [247] it out physically in reality and there [249] are a number of things that can go wrong [250] with that so just to be totally [251] pragmatic here and it's not that any of [253] these problems in you know individually [255] are like super massive and disqualifiers [257] but just to be pragmatic if you put all [258] them together the bottom line is the [260] internet is where the money changes [261] hands it's a lot easier to work on the [263] Internet it's where you should be [264] working too the second thing is mid [267] ticket plus so that just means that [270] great niches are ones where a single [271] customer Nets the company $1,000 or more [274] sorry if we jumping ahead you can of [275] course go lower than that but you will [277] lose one of your primary points of [278] Leverage the reason for this is because [280] when you work with mid ticket plus [282] businesses you have a couple forms of [283] Leverage the first is you have sales [285] leverage that just means that if you can [287] add a single customer to a mid tick plus [291] business whether it's through some lead [292] generation whether it's some through [294] through some reactivation campaign the [296] simplest systems ever if you can get [298] them a single additional customer you [300] will often pay for your own expense for [303] months or years so it's very easy for [306] you to justify the money that you are [308] charging a mid- tick plus business the [311] second form of Leverage is people [312] leverage mid tick businesses because [315] they tend to be more expensive tend to [316] involve more people in the actual [318] Service delivery or fulfillment and when [320] you have a lot of people you have a lot [321] of opportunity to automate stuff so um [325] you don't just get sales leverage up [326] here you also get people leverage and [328] then I just threw this in um this is [330] sort of anecdotal but in my experience [333] when I work mid ticket I work with [335] richer people I work with people that [336] are a little bit more they think about [337] bigger things right more bigger picture [339] thinkers people that tend to have a [340] little bit more money um so there's a [342] lot more referral opportunity for you [343] it's a lot easier for you to consolidate [345] your reputation as an automation [346] engineer and then a lot of the time [347] these relationships are just better [349] they're just more professional right [350] people just tend to reward you more and [352] appreciate the professionalism that you [354] put in so I always go with mid ticket [356] plus now um it's basically my rule of [358] thumb the Third third and the last big [360] rule is uh fewer regulations so I don't [364] know how much of this stuff you guys [365] have done at this point that you're [366] watching my video some of you guys might [368] be at the you know starting line of your [369] business 01 to $3,000 other guys might [372] be at 20 3040 $50,000 whatever but one [375] thing that I could say confidently is if [377] you have a choice to work in two [380] potential universes one with a ton of [382] Regulation and then one with very little [384] regulation you're basically always going [386] to want to favor the one with little [387] regulation because regulations just make [389] everything harder great niches are in [391] industries that have either very few [393] regulations or they have regulations [394] that in practice nobody gives a [396] about so I'll give you an example a [398] healthcare especially United States wide [401] wide can really suck because you have to [403] use hippo specific automation platforms [404] you you have a bunch of like data [406] control policies you have to anonymize [408] customer data you have to like you can't [410] just use their first names or last names [412] you can't just use like an API call to a [414] large language model um you have to like [416] host your own you know you have to use [418] all these Alternatives that are 10 times [420] the money basically the point that I'm [421] making is all of this additional work is [423] going to add at minimum 5 to 10 times [425] the work and you will probably not get [428] paid 5 to 10 times the amount for the [429] work so just right off the cuff working [431] in a highly regulated industry that [433] slows you down and adds a lot of [434] friction uh tends to just make all of [436] this way harder now the caveat argument [439] there that a lot of people give to me is [440] well Nick if I work in this industry [441] that has a lot more regulation a lot [442] more friction to get into then naturally [444] the supply of the market will be a lot [446] lower as well meaning it'll be easier [447] for me to come in there'll be fewer [448] other competitors and so on and so forth [450] and I understand that but um I think it [452] makes much more sense especially if [454] you're at the earlier side of your [455] journey to compete in high volume [457] Industries Industries not necessarily [459] where there's little Supply but actually [460] more Supply um because you know you're [462] not only making money but you're also [464] taking on uh like a lot of [465] self-education when you work with a [467] higher volume of leads for instance you [469] tend to learn and and pick up the [471] fundamentals of running a digital [473] service businesses specifically in this [474] case an a automation business a lot [476] faster Alex rosi talks a lot about like [478] this idea of debt like technical debt [480] education debt um client management [482] skills debt and I think that this is [484] sort of in the same vein so even if the [486] supply is less um yeah it adds a minimum [488] five to 10 times the the implementation [490] cost and you're not going to get paid [491] five to 10 times the [492] amount and then yeah you know I just [494] wanted to say that new emerging or [496] non-local markets are better um there [497] are technically regulations around [499] basically everything these days but in [501] my experience only Healthcare and legal [502] are enforc and practice now just to [504] cover everything I'm not I'm not a [505] lawyer and this is not legal advice this [507] is just my own experience working across [509] these Industries okay are you guys ready [511] to actually get into these three niches [512] I'm not only going to cover the niche [514] itself I'm going to cover how you can go [516] out and scrape leads in that Niche how [518] you can pitch them primarily using cold [520] Outreach and then ultimately the exact [521] systems that you can build and sell for [523] them let's get started all right the [525] first Niche is hi touch software as a [527] service so if you guys aren't familiar [529] with software as a service it is a [531] business model where you will sign up to [533] some sort of software on a subscription [535] basis they will provide a service to you [538] like Adobe Photo Photoshop Premier Pro [541] instantly smart lead clickup monday.com [543] Panda do whatever they'll provide some [545] service to you on a monthly basis and as [548] a result you'll you'll pay them some [549] sort of recurring subscription now one [552] thing that some people might not know is [553] that SAS is actually split into uh two [556] I'm just going to go with two types for [557] now in reality um you know depends on [559] who you're talking to but there's low [561] touch SAS and then there's hi touch SAS [563] low touch SAS is just most of the [565] software platforms you're probably [566] familiar with it's stuff like pandadoc [568] it's stuff like uh monday.com stuff like [570] Trello the way that low touch works is [573] it's low touch so there are very few [575] customer touch points with a real person [577] in that business typically the vast [579] majority of it is automated you will [580] enter your email address you'll enter [582] your password you'll create an account [584] you'll pay a little bit of money and [585] then voila you have access to the [586] software platform sounds pretty sweet [588] right but there's another variant to [590] that and that's called a hight touch SAS [592] hi touch SAS just means uh it's it's [594] still a software as a service model but [597] it tends to be very expensive it tends [599] to solve just one particular need and [601] usually very very well and extensively [604] tends to be marketed more towards [605] Enterprise people and it's not automated [608] instead of it being an completely [610] automated sign up process usually the [612] way that high touch SAS works is you [614] have to sign up for a demo you'll be [616] assigned a an account executive or an [618] account rep and then these people will [620] both demo the service sell you get you [622] signed up and then help you implement [623] the thing into your business so these [626] sorts of businesses because they require [628] sales demos they're high cost like a [631] managed service and they have high [632] customer lifetime value tend to print [635] money um when you when you work with [637] them and when you manage to get a high [638] touch SAS business as a client so I have [640] over 1400 people across my automation [642] communities uh maker school and make [644] money with make and everybody that's [646] doing High touch SAS right now or at [647] least everybody that's sending a [648] sufficiently high volume of outbound [650] Outreach to high touch SAS T tends to be [652] crushing it why is it good let's just [654] cover it um one by one the first is it's [656] mid ticket plus um are often several [658] hundred or thousand per month think [660] about like a $500 manag subscription if [662] you manage to help them get a client [664] that stays on for one year that's [666] $66,000 in their pocket that's excluding [668] upsells which some of these businesses [669] literally like live and breathe off of [672] many customer touch points um so that [674] means that you can automate a lot of [675] these things kind of like before you [676] know the more people in a business [678] typically the more room for automation [680] this typically solves a very strong need [682] especially for Enterprise companies and [684] then many of these businesses have [685] annual revenues of 78 figures the cool [687] thing about this is um they can also [689] into funding situations many of these [690] high touch businesses because they're [691] geared in Enterprise and they solve [693] these super specific needs a lot of them [695] to do with like you know Ai and [696] Technology nowadays uh you know they can [698] raise big funding rounds and they have a [699] lot of money to spend so not only do you [701] work with people that have more money [703] they also have a lot of money to spend [704] and not all that money is their money [706] which is pretty sweet so it's not enough [708] just for me to talk about a niche um [710] although you know after this I'll show [711] you how to sell them and I'll show you [712] the products and services to pitch um [714] let me actually show you what these [715] businesses look like here's one called [717] sen bird sbird basically is like a some [719] Enterprise level communication and chat [722] API service do I know what the hell any [724] of this stuff means I'll be honest not [726] really um but that's because they're not [727] marketing to me they're marketing to a [729] very specific customer Avatar which they [732] sell for a lot of money if we go to [734] their pricing page here you see that [735] even their lowest paid plan is 400 bucks [738] a month and that's s like their lowest [740] monthly active user plan if you scale it [741] up to 10K it's 500 bucks a month for [744] this thing what if the average customer [745] stays on for 18 months right 18 * 500 is [749] $99,000 um customer lifetime value if [752] you charge somebody like 3,000 bucks a [755] month if you get them a single customer [756] and maybe you get them five a month or [757] something but if you get them a single [758] customer you pay for yourself for three [760] months which is fantastic so um you know [764] that's sbird another one here is called [766] check what you'll find with a lot of [767] these sorts of businesses when you go [768] searching and and doing the lead gen is [770] not all of them will actually have [771] pricing pages in fact the majority of [773] them won't the reason why is because [775] they want you to have to get in touch [777] with a person in order to um actually [780] move forward with the process so this is [782] me just doing a bunch of silly BS [784] because I just want to you know submit [785] my form and have them contact me um but [788] basically what's going to happen when I [788] click the submit button is they're going [790] to assign me to a demo rep most likely I [792] haven't actually filled out the specific [793] page but most likely they're going to [794] assign me to some sort of demo rep [795] they're going to book me in on a [796] calendar and then they're going to try [798] and sell me because you know it's a [799] higher ticket I'm higher touch service a [802] last example here and I know I talked [803] about not working in the healthcare [805] industry but I figured you know I just [806] wanted to be as comprehensive as [807] possible um a lot of these Enterprise [809] companies do work in regulated [811] Industries like healthcare IMO health is [813] one of them same sort of vibe right this [815] website has worked with tons of these [816] massive businesses before and if you [818] want to connect with them if you want to [819] work with them you need to schedule a [820] demo as you can see like it's fairly [823] in-depth somebody has like contact you [825] walk you through your needs um and you [827] know because the service is so expensive [829] and because it solves such a valuable [831] service usually um you know companies [833] like this can get away with it okay [835] enough talking about you know what this [837] company uh what this industry or niches [839] and why it's so valuable let's actually [841] get into how to sell so if I were uh you [844] know tackling this right now and I had [845] no resources no knowledge of this no [848] expertise or or anything like that this [849] is exactly what I would do and I mean [852] I'm raising a hypothetical as if I did [853] not know any of this stuff but I do and [855] this is what I'm actually doing so the [857] first thing that I do and you kind of [859] have a couple of choices here you can [860] either get a bunch of Apollo leads for [862] SAS companies you can just go on [865] apollo.io you can log in or make an [867] account I guess [871] and the way that Apollo works is you [872] basically have the ability to create [874] giant lists of companies so go to [876] company or I don't know maybe I'll go to [878] Industry and keywords and then you you [880] can pick an industry here so maybe you [882] want to work specifically looking for I [884] don't know [885] banking um [887] Insurance uh Financial Services business [890] businesses and that sort of stuff okay [892] what you do is you go in you apply [894] whatever filters you want and I'm not [896] going to walk you through the specific [897] filters because obviously this is [898] entirely up to you you get lists of [901] companies from Apollo and then you [902] enrich these using the tools that I'm [904] going to talk about in a second um you [906] you search specifically for SAS for [908] companies that are above maybe I don't [909] know 11 to 50 people so they typically [911] tend to work more Enterprise uh you use [913] the term managed when you're doing the [914] searches you use a variety of terms that [916] like hone in on businesses like this if [918] you're not sure what those are just [919] check out alternatives to these three [921] services and then build like a keyword [922] list based off of that so that's one [925] approach you could do another approach [926] you could do is you could literally look [927] on indeed or LinkedIn jobs for [929] um you know literally you could just [931] look for the term uh I guess I got a [933] sign in here so give me one [936] sec you could look for uh the term [940] software or [942] sales so I could go for sales and I'm [945] not going to do Calgary which is where [946] I'm at but I'll do [948] sales and then I'm going to do a [950] slightly higher salary like [953] 100,000 and then there are some [955] additional filters that I could do here [956] I could look for like midlevel to [958] executive level sales um I could look [960] for full-time roles I could look for [962] locations industry software development [964] Insurance like I mentioned financial [965] services this sort of stuff then I could [967] also throw in a couple of other keywords [969] um and you know these keywords are [970] constantly changing they're kind of up [971] to you but maybe you type in like SAS [973] sales or something what you'll see is [975] you'll see a lists of businesses now [977] because I'm in Canada and uh you know [979] LinkedIn likes to show you results that [981] are in the country that you are in [982] obviously because a lot of them have [984] regulatory requirements and stuff like [985] that I'm seeing Canadian businesses if [987] you're here if you're in the United [988] States somewhere else you're going to [989] see different ones but these are the [991] sorts of businesses that ultimately you [992] can apply to and the value in doing this [995] approach is when you get a list of these [998] you can scrape them using a tool like [1000] appify I mean if you scrape uh you know [1003] lists using appify so if I just type in [1006] LinkedIn jobs over here if you scrape [1010] that list using appify what you end up [1012] getting is you end up getting the [1014] company name the company URL giant [1017] description of the business the location [1019] hell you get stuff like salaries um you [1021] know experience levels required sectors [1024] okay all you do is you just pump in the [1025] URL in here and then with all this stuff [1027] all you need to do and I'm saying all [1029] you need to do a lot but literally all [1030] you need to do is you just get the [1032] decision maker emails using a service [1033] like any mail finder if you've never [1035] used any mail finder before it's super [1037] simple you just [1039] go and type in the first and last name [1042] of the person and then um you know the [1045] term uh sorry the the website domain [1048] specifically [1049] and what you'll do is you'll pump this [1050] in and it'll literally return you a [1052] verified email maybe about 30% of the [1054] time and an unverified email the other [1055] 70% of the time of a person at that [1058] company you can also use uh something [1060] called a decision maker search over here [1062] where you look specifically for a person [1064] at one of these businesses so if I just [1066] go back here I go to sendbird and I grab [1069] that [1072] website and then I'm looking for CEO [1075] owner president founder [1077] whatever if I search we can actually go [1080] and we can find the email address of one [1082] of the people that you might be able to [1083] contact at that business in this case [1085] the co-founder and [1086] CEO so uh I would literally do this okay [1089] I'd get a giant list of these people and [1091] then all I would do is I'd send them an [1092] email that says hi noticed you were [1094] hiring for account Executives I do [1098] really cool thing that solves the need [1100] that you are looking for right now for [1101] an account executive but I do it using [1104] systems I just delivered amazing result [1106] for somebody else and I believe I can [1108] give you similar results I believe in [1110] this so strongly I will guarantee X doll [1113] in the next 60 days X leads in the next [1116] 60 days X doll saved in the next 60 days [1119] or you're not going to pay a cent is [1121] this worth a chat you send uh I don't [1124] know a th000 2,000 3,000 of these every [1127] week it's best if you personalize these [1130] using artificial intelligence and if you [1132] don't make the email seem templated [1133] because people like being talked to as [1135] if it's like a real person to a real [1136] person they don't want to know that [1137] they're in a sequence [1139] if you do something like this then [1140] you'll be able to sell the system I'm [1141] about to show you and I think I said [1143] previous here but I meant to say um [1144] subsequent for at least $1,500 a pop and [1148] then you'll be able to take that and [1149] then and then segue that into some sort [1150] of monthly recurring service where you [1152] could have it for three four 5 10 [1154] $15,000 a month depending on the company [1156] and depending on the needs that you [1157] fulfill now once you have that what [1160] problems and systems you actually sell [1162] well here are two really simple ones [1163] that you can throw right off the bat the [1165] first is a lead generation personalized [1167] cold email system what I've found is a [1169] lot of these high touch SAS businesses [1171] especially ones that are founded more of [1173] more than a couple years ago they rely [1175] on super bloated sales teams and [1176] outdated Outreach products that are [1178] usually a byproduct them interfacing [1180] with Enterprise companies so much they [1181] tend to just have like shittier software [1183] because they're bigger more bloated uh [1185] they have more red tape and they move a [1186] lot slower so you can deliver an insane [1188] amount of value just getting one of [1191] these businesses sales [1193] teams getting them you know a 100 [1196] mailboxes signing them up to instantly [1198] or smart lead or something doing some [1200] targeted lead scraping similar to what [1202] we just did in order to get this deal [1205] okay apiz lead scrapers at the time of [1206] this recording $1.20 per a th000 leads [1208] crazy and then sending them Mass [1211] sequences that are personalized and [1212] customized that you know solve the [1214] problems that the uh target market or [1216] target audience is looking for you could [1218] sell them the system you could even go [1219] as far as building in some sort of AI [1220] autoresponder to manage this scale set [1223] meetings with um you know closers and [1225] demo people on their team then [1226] automatically forward those meetings to [1228] them if you build this for the right hi [1230] touch SAS company you can build way more [1232] than $1,500 if you were to do this for [1234] something like senir you would be able [1235] to prove some sort of results in them [1237] you probably get away with like $10,000 [1239] or more so a lot of potential there the [1241] second system is a lot of these [1243] businesses naturally have bloated sales [1245] processes you could very easily build a [1247] personalized proposal system and or CRM [1249] for them um it's basically a cakewalk [1251] once you build a template uh the very [1253] first time you can just copy and paste [1254] this over and over and over again [1255] regardless of the business so long as [1257] it's in a similar vertical so so what [1259] this means if you're unfamiliar is [1261] agencies and high touch sasp assises [1263] both have very similar sales flows [1265] typically you need to book a demo or a [1268] discovery call now High touch SAS [1270] businesses will show off the the the [1272] service in the uh disc in the demo call [1275] that's why it's called a demo they're [1276] demoing the service agencies will [1278] usually do what's called a discovery [1280] call where they just tend to get to know [1281] more about you but usually what happens [1283] after this call is you'll either move [1285] into a closing call and then after that [1286] you'll send some sort of proposal or [1288] will just immediately send a proposal [1289] for services uh the lad is what I like [1291] to do but that is most of these company [1293] sales flows so what you can do to make a [1296] long story short is you could build a [1298] system that just makes this way faster [1299] instead of you having as a salesperson [1302] to write up some big long proposal draft [1304] with a bunch of details and stuff like [1305] that what you can do and what I've [1307] implemented dozens of companies now is [1309] you can just give them a simple form and [1311] you can say hey before you end the sales [1312] call I just want you to fill out this [1313] form this form asks for a bunch of [1315] simple information like their name their [1317] email address uh their company and then [1319] maybe some some quick bullet points on [1321] the problem they're facing and the [1322] solution that they want you type that in [1325] this might take you less than 30 seconds [1326] to a minute during or at the end of the [1328] call you press enter and then it goes [1329] into a system and automatically [1331] generates a proposal I've built this [1332] system out and showed this on my channel [1334] many times anybody here that has watched [1336] a couple of my videos will know um so [1338] feel free to check out my channel just [1339] type in like proposal generate and [1340] you'll find a couple and I've also done [1342] this with the lead generation to [1343] personaliz cold email system so both of [1345] these systems are literally you know you [1347] can go to my gumro download the [1348] blueprints for for free uh and then get [1349] going and and you know start selling [1351] these to make a ton of money so that's [1353] Niche number one let's cover Niche [1355] number two now I've talked about Niche [1356] number two uh back in in 2024's video [1360] where I covered the three best AI [1361] automation agency niches um but luckily [1363] for us um this Niche has not changed [1365] this Niche is still printing and in fact [1366] I go as far as to say it's actually [1368] printing even more money if you look at [1369] the success rates across my both [1371] communities um than it was previously I [1373] don't know if this is just because more [1375] recruitment companies are now problem [1376] aware and solution aware they understand [1378] that automation is a very simple and [1380] easy way to make them tons of money uh [1382] or if we're just getting better at [1383] selling to them but yeah people are [1385] really loving recruitment right now and [1386] recruitment is Ling them back so in case [1388] you don't know how recruitment works if [1390] I run a recruitment company basically [1391] what I'm doing is I'm finding candidates [1396] and then I'm placing those candidates in [1398] somebody else's business so let's say my [1402] client is a roofing business this is uh [1406] not realistic but let's say they're [1407] roofing business and they're looking for [1409] a very specific set of roofing skills [1411] for their next hire they would reach out [1413] to me and say Nick I know you run a [1415] recruitment company can you recruit a [1417] highquality roofer for me I say of [1419] course so and I go out I have my systems [1422] and my job posts and I list a bunch of [1424] things looking for uh roofers I find 10 [1427] roofers I interview each of them and [1429] then I get like three that are amazing [1431] what I do then is I present these [1432] candidates to the roofing company and I [1434] say which one do you want this guy wants [1436] 80,000 this other guy wants 85 and and [1438] this guy wants 75 they say I want the 75 [1441] one then all you do to get paid as a [1443] recruitment company is you typically [1444] take a percentage of the first year [1446] salary that's like the simplest way to [1448] do it there are other ways obviously [1450] some flat rates some percentage of [1452] multiple year salaries but typically in [1453] my experience a simplest way is a [1454] percent of the first year salary um this [1457] sort of business model can do really [1459] really well okay uh typically [1461] recruitment companies have to handle a [1462] high volume of both applications and [1464] candidates so anytime a business handles [1465] a high volume of something small [1467] percentage improvements can really big [1469] results if you know the average [1471] recruitment agency um in order to [1472] fulfill their work for a client handles [1474] 300 applicants and if you can build a [1477] system that just makes them 10% better [1479] at handling these apps or 10% faster [1481] that's worth a ton of money to the [1483] recruitment business and they're happily [1484] pay you money in return to solve that [1486] problem another thing is in that example [1488] I mentioned before with $75,000 for [1491] roofer right let's say you take 20% of [1493] the first year salary hypothetically and [1495] again this isn't realistic because most [1496] of the time it's not like roering [1498] Roofing is not something that people [1499] typically go to recruitment companies [1500] for but anyway um 75,000 time 20% is [1504] 15,000 so as a recruitment agency you [1507] will make $115,000 just making that [1509] placement as you can imagine this is [1511] pretty high lifetime customer value [1512] especially if the customer comes back to [1514] you right if a single client requests [1516] one placement a year and they tend to [1517] stay with you for three years 15,000 [1519] time 3 is $45,000 that is a massive [1522] customer lifetime value and if you get [1523] them a single client they're going to [1525] like you a lot the last is um you you [1528] know recruitment tends to be digital [1529] first there's so many pain points [1530] regarding sourcing screening and [1532] communicating with candidates no rent no [1534] brick-and-mortar business you can [1535] systemize a lot of this digitally and [1537] then use it to acquire clients for them [1538] too let me give you some examples before [1540] I dive into what to do this is [1542] recruitment Partners Incorporated I [1543] believe these guys maybe in Calgary [1545] that's probably why I picked them I just [1546] like Googled recruitment partners and [1548] they happen to like you know be the [1549] first thing that popped up so you can [1551] see they're um pitching both candidates [1552] and employers candidates being people [1554] that are looking for jobs employers that [1556] are looking for candidates to fill their [1557] jobs [1559] and yeah I'm not going to harp on this [1560] anymore I think most of you guys [1561] probably understand what recruitment [1563] looks like this is an executive [1565] recruiting firm executive recruiting [1566] just means um placing CET and B people [1570] uh and these tend to be obviously [1571] substantially more money upon a [1572] placement meaning these companies have a [1574] higher customer lifetime value for the [1576] clients that do get in their Network [1578] it's not uncommon for you to make over [1579] $100,000 on a single client and let's [1582] actually get into how they sell these [1583] puppies so if you wanted to sell a [1585] recruitment agency today and what I'm [1586] seeing people do across my to automation [1588] communities um over 1,400 people in [1591] total maybe like 50ish people or so [1594] right now are targeting recruitment [1596] there are looking on indeed and Linkedin [1597] jobs for recruiter roles they're [1600] scraping recruiter roles using something [1602] like appify they're getting decision [1604] maker emails using something like any [1606] mail finder and then they're sending an [1607] email very similar to the last email [1609] offering a guarantee um and and [1612] essentially saying hey noticed you were [1613] hiring for this job I do really cool [1614] thing helping recruitment businesses [1616] make this much money and I just [1617] delivered $95,000 for another [1619] recruitment company I can give you [1621] extraordinarily similar results maybe [1623] even better and I want to guarantee my [1624] service since I know you don't know me [1625] and I want you to feel comfortable and [1626] confident about this is this worth a [1628] chat same thing as before if you run a a [1630] cold email campaign here if you [1632] personalize them using AI you'll get [1633] much better results and if you don't if [1634] you run this at scale um you can make a [1636] ton of money I had somebody in my [1637] community go from I believe making $ Z [1640] to over $80,000 in just a few months [1642] employing this exact approach that I'm [1643] telling you the systems themselves that [1646] you could sell uh they're three the [1648] first is a candidate placement system so [1650] you know I talked about candidate [1651] placement earlier being the main thing [1652] that recruitment companies do right uh [1655] they often juggle hundreds of applicants [1657] per position and then their job as a [1659] recruitment agency is filtering those [1660] applicants down into the highest quality [1662] subset before presenting them to the [1664] client well you can basically solve all [1666] of this with some automated hiring [1667] pipeline I've built this out a couple of [1669] times on my channel already basically [1671] what you do is you build out an end to- [1672] end pipeline in a tool like clickup [1674] Monday or a similar platform and all you [1676] do is you stage it you say I don't know [1680] first pass um [1682] interview uh second pass uh interview [1686] and then maybe like considering for for [1689] um presenting for presentation or [1690] something maybe have four or five of [1692] these stages what you do is when a new [1695] candidate comes in they come into the [1697] CRM with the status first pass and then [1700] you as a recruitment person or a [1702] contractor you go through this top to [1704] bottom you just verify which ones Mak it [1705] into this into the interview stage when [1708] you move them or click their stage and [1710] change it to interview basically you [1712] will automatically send them an email [1714] with like a link to a calendar booking [1715] or something that like gets them to the [1716] next stage of the process after that [1718] stage they're now an interview the [1720] people that pass you just move them to [1721] the next one second pass then they [1723] automatically get a bunch of assets [1724] resources questions that sort of stuff [1727] you can do this in whatever freaking way [1728] you want I'm just throwing out random [1729] ideas here that may or may not actually [1731] be super great I don't know if I'd [1733] phrase it as first pass interview second [1734] pass interview I'd probably go like [1736] first pass um trial um interview second [1740] interview or something to be like super [1741] secure uh but the point I'm making is [1743] you could just automate the hell out of [1745] what is traditionally like a very [1746] involved manual process and now the [1748] recruitment agency staff is just a QA [1750] person this can print money for [1752] recruitment companies it can massively [1753] reduce margins which tend to be pretty [1755] high because it's such a people focused [1756] industry and it just makes things a lot [1758] more organized it also allows you to [1759] upsell a system which I'll talk about in [1761] a second the second thing you'd sell is [1763] a lead generation a personalized cold [1764] email system as you could see this isn't [1767] the first time I'm bringing this up and [1768] the reason why is because lead [1769] generation systems are by far the number [1772] one most in demand thing right now in [1774] all of these niches I'm going to be [1775] showing you except for maybe the next [1777] one but there are other lead generation [1778] approaches you could use and the reason [1780] why is because lead generation is just [1781] the bottleneck that most businesses have [1783] right you could solve the tightest [1784] bottleneck um typically you're worth a [1786] lot of money so anyway recruitment [1788] companies struggle with consistently [1789] finding new clients or job openings [1791] older firms especially rely on these [1793] outdated methods like expensive job [1795] board subscriptions which can charge [1796] them hundreds or thousands of dollars a [1797] month month a total waste of time so [1800] what you can do is you can solve this [1801] with a cold email Leen system in a [1803] nutshell and I've documented this [1805] multiple times on my channel but you buy [1806] 10 domains you link 30 mailboxes to [1808] Smart leader instantly you warm them up [1811] you Source 4,000 leads and by the end of [1813] month one you will have reached out to [1814] all 4,000 of these people with a [1817] response rate of around 4% assuming that [1818] you use some of my copyrighting tools um [1820] you'll have generated about 160 replies [1822] many of which will have turned into [1823] justifiable sales opportunities [1825] hopefully you know at least a at least a [1827] third Maybe quarter of these um will [1829] will result in positive replies and then [1831] of that maybe like 50 60 70% will [1834] convert to meetings that's still a lot [1835] of meetings and you can um you know [1837] obviously provide a lot of value to [1838] recruitment company with a customer [1839] lifetime value of 5,000 10,000 15,000 [1844] $220,000 okay the last system I want to [1846] cover is an automated dashboard system [1851] so the way that recruitment agencies [1852] work is you know as I mentioned they [1853] typically deal with very high volumes of [1855] people and because of that they have [1856] many opportunities to collect data the [1858] issue is the vast majority of [1860] recruitment companies do not collect [1862] data or at least if they do their data [1863] collection sucks but here's the really [1865] cool thing you could use this as an [1867] upsell to the system that I talked about [1868] earlier because if you think about it if [1870] you have an automated hiring pipeline [1872] where in order to trigger something to [1873] happen automatically you need to change [1875] a status well you can also trigger them [1878] being added as a new row in a Google [1880] sheet or something or some sort of like [1882] logging um and then the second that you [1884] start logging people well now you can [1886] connect this to data visualization [1887] software for the specific stack I'm [1889] going to tell you guys about is you go [1890] to Google Sheets you make some new you [1893] know like recruitment [1896] database you have like the first name [1898] the last name the email address the [1902] stage and a bunch of other information [1903] about the candidate right when you [1905] trigger a status change inside of the [1908] CRM that you built for them then all you [1910] do is you add a new uh row to this uh uh [1913] database okay and then you just keep on [1916] going and then what you do is you [1917] connect this is something like looker [1918] Studio looker studio is just like data [1921] visualization dashboard software that [1923] just connects to the data source that [1925] you just created a moment ago Google [1926] Sheets and allows you to visualize the [1928] number of people at different stages so [1930] now you know okay I had 108 people make [1934] it into the first pass then 75 people [1936] make it into the interview then 33 [1938] people make it to the second pass then [1940] 15 people make it into the interview [1942] then four people um were presented for [1944] placement the second that you give a [1946] recruitment company data like this [1947] that's that granular one they're going [1949] to love you and two they're going to be [1950] able to make data driven decisions that [1951] make their company a lot better so as [1954] you can see lots of opportunities here [1956] on the recruitment problems and systems [1957] and uh obviously if you follow a similar [1960] approach to Niche one's approach you can [1962] make a ton of money selling these the [1965] third big Niche and the one that I'm [1966] personally now a part of is coaches and [1968] consultants and this industry is blowing [1970] the hell up right now it's one of the [1971] fastest growing in my opinion if you're [1973] unfamiliar with what coaching and [1974] Consulting is if you think about like [1976] agencies agencies typically provide the [1978] service which is the building or the [1980] marketing or the paperclick ads or [1982] whatever coaches and Consultants they [1984] help agencies or they help other [1986] businesses provide the service so they [1988] provide like a strategy tactics they do [1991] coaching they uh you know do like [1993] accountability they do they do testing [1995] they do higher level stuff basically the [1997] point that I'm making is they just [1998] provide a bunch of auxiliary support to [1999] the business to make the business better [2001] at servicing the needs of their clients [2004] things can get pretty complex in B2B [2006] because if you think about a lot of [2006] agencies you're B2B to begin with so [2008] it's like of a B2B agency delivering [2010] work for another B2B agency and that [2012] first B2B agency is being coached by [2013] like a B2B coaching consultancy practice [2016] uh but the point that I'm making is [2017] coaches and Consultants are just like [2018] auxiliary they typically don't provide [2020] the actual service they just inform you [2021] how to provide the service so why is it [2024] good it's very high ticket some of these [2026] agency coaching programs are tens of [2028] thousands of dollars per year um I run [2031] some agency coaching programs right my [2032] community is maker school and make money [2034] with make and they're not tens of [2035] thousands of dollars a year U my most [2037] expensive was $1,382 a year as of the [2039] time of this recording but you know a [2041] lot of the other ones are super high [2043] ticket $50,000 [2045] $100,000 especially masterminds and [2047] stuff like that so if you can get them a [2049] single additional client obviously you [2050] can bring home the bacon yourself the [2052] second reason is because it most often [2054] involves information products coaching [2056] is just all about information it's [2057] strategy tactics guides accountability [2059] systems that sort of stuff and these are [2061] typically very leveraged with no real [2062] inventory or fulfillment and then the [2064] third is a lot of these businesses can [2066] be pretty profitable they have very [2067] large sales and marketing budgets that [2069] are primarily manually driven so you [2071] know people will like run ads they'll [2073] run I don't know Instagram shoutouts on [2075] on certain profiles they'll do a variety [2077] of things in order to Market their [2079] coaching or consultancy practice um but [2081] these are primarily manually driven and [2082] you can automate the hell out of these [2084] so to be concrete here are a couple [2086] examples one is me and I'm just going to [2088] exit out of that before my YouTube video [2089] starts playing and screws up with my [2091] audio um another one that's probably [2093] more relevant is this is just some [2094] program that a friend of mine I think [2096] joined called client Ascension some of [2097] you guys may be familiar with um oh geez [2100] the name isn't coming to me right now [2101] Daniel I think yeah Mr Fazzio uh anyway [2104] this is a program that like helps you [2106] grow your agency or B2B business up to a [2108] certain amount of money this is [2109] typically what they look like um and you [2111] know odds are if you can help this guy [2114] Daniel with his business and you can [2117] offer even one or 2% improvements to [2120] maybe his bottom line or his margins or [2122] something this is probably a several [2123] hundred, month business you'll be [2125] delivering a lot of value and you'll be [2126] able to be reciprocated [2128] reciproca uh you know compensated in [2131] kind so how do you actually go about [2133] selling them well I'm a coaching [2136] consultant so you're kind of hearing [2137] this from you know like the The Source [2139] here this is exactly how people have [2142] sold me in the past the successful ones [2144] anyway and this is exactly what I would [2146] do if I were looking to sell to this [2147] Niche myself the first thing is I would [2149] scrape YouTube I would scrape school and [2151] I'd scrape all other social media where [2152] coaches hang out I use appify that I'll [2154] sh you that in a second I then look for [2156] crossplatform information like I try and [2158] get their Tik Tok I try and get their [2159] Instagram I try to get their Twitter and [2161] X profiles I basically try and get [2162] everything if you want to look at a [2164] practical example what this might be I'd [2167] go [2167] to uh appify over here okay and then [2173] there are variety of scrapers that we [2174] could use probably the simplest one [2176] would be like YouTube channel fast [2180] YouTube channel scraper or maybe um [2182] YouTube channel scraper there a variety [2184] of them but basically what happens is [2185] you feed in some parameters and then it [2188] returns you like the titles of all their [2189] videos it returns you um like their [2192] descriptions and stuff like that it [2194] returns you you know if they have an [2195] email you can use an email Channel [2197] finder I you can get a bunch of [2199] information about like their links and [2201] Linkedin and Instagram and stuff like [2202] that you get Source from there what you [2204] do after that is okay so now you have um [2206] you know a bunch of their information [2207] and you stick it in a Google sheet what [2209] you do is you pass all of this [2210] identifying information to gbd4 or an a [2212] large language model and you do with a [2214] personalization prompt that says hey [2216] here are the last three that this person [2218] created here are the last three posts [2219] this person made here's a bunch of stuff [2221] and then you just have it create a [2222] personalization prompt that says I don't [2224] know uh loved your last post on like uh [2229] I don't know like pushing through [2230] adversity in uni I had a really similar [2233] experience I just wanted to like tell [2234] you about it or something you have some [2236] personalization prompt where then an [2238] artificial intelligence or large [2239] language model takes the last few posts [2242] that are topical and relevant and then [2244] converts that into a oneline um [2246] Icebreaker sort of variable that you can [2248] add to a cold [2249] email then what you do is you create a [2252] custom asset so this is something like a [2255] Google doc this Google doc will solve a [2257] very simple problem for them it will [2259] create a bunch of highquality YouTube [2261] titles for instance or outlines for [2264] Content or uh competitor analysis or [2267] example funnels for a new community [2269] product basically what you do is you get [2271] AI to take all this data and then [2273] generate a really quick and easy little [2275] hit of value which may not even be that [2277] valuable um I'm reminded of this guy [2279] that sold me successfully just uh like a [2281] week and a half ago I think an invo I [2283] just I just sent him like I think I sent [2284] him over $500 now he reached out to me [2287] and he said hey Nick here are 20 YouTube [2290] titles at Rock by the way if you're [2292] watching this you crushed it man he said [2293] hey Nick here are a list of 20 YouTube [2295] titles um I know that I have to give you [2297] some value in order for you to take me [2299] seriously so take them uh I'm not like a [2301] cheap skate copywriter you can do [2302] whatever you want with this and then if [2304] you find this interesting at all just [2305] send me a message back here you go and [2306] then he just gave it to me and then [2308] there were 22 titles and of them I liked [2310] like four or five of them and then I got [2311] value out of it before the guy even [2313] tried to talk to me he created something [2314] for me before you know I even uh I was [2317] even required to give anything back so [2319] if you do this you can do this [2320] completely automatically by the way he [2321] probably did it manually God bless his [2323] soul but you can do this completely [2324] automatically then people will freaking [2326] love you for it and uh your reply rates [2328] on email campaigns like this you're [2329] going to be like at least 5% probably [2330] closer to 10 15 maybe even 20 so what [2333] you do then is you enrich and find email [2335] addresses for each coach using something [2337] like any mail finder which I've already [2338] showed you and then you just send them [2339] all an email then because you've already [2341] produced an asset you also DM them [2344] across all of the platforms you could [2345] find using those scrapers so their [2347] Instagram Tik Tok Twitter uh you know [2350] YouTube whatever school all those [2352] platforms just to make sure they see it [2354] then you say hey here is a list of X [2356] thing that I think will do y for you [2359] it's totally free no strings I want to [2361] work with you but I know value is how [2362] you get there so if you find this [2363] interesting just shout back if not no [2365] hard feelings thanks you can just copy [2366] and paste this thing for all I care Oh [2368] keep in mind there probably going to be [2369] several hundred other people copying and [2370] pasting it too so you might want to vary [2372] the words or something like that um but [2374] but but something like this would work [2375] extraordinarily well I know because it's [2377] worked on me a number of times I've seen [2378] it work on a ton of other people and [2379] this is what people in my community are [2380] now starting to do to see results as [2383] well so what you want to do is you want [2384] to run all this stuff at scale book [2386] meetings and then pitch them on any of [2387] the three NE systems uh two next Systems [2389] sell them for 1.5k plus I think you can [2392] sell them for a lot more than that to be [2393] honest and here are the systems that I [2395] would sell to coaches and Consultants [2397] the first is an AI coach so a common [2400] need in many low and mid- ticket [2402] coaching offers one in my case and one [2404] in a lot of the other communities and in [2405] groups that I'm a part of is some sort [2406] of Q&A that's typically one of the line [2408] items or deliverables provided as part [2411] of you joining this community like hey [2412] if you have any questions about how to [2413] build an agency or if you have any [2415] questions about how to like create [2416] automations just drop them down below [2418] and somebody in our group will get back [2419] to you this is great but what you'll [2421] find in practice is a lot of these [2423] questions end up being variants of [2425] earlier questions so this is like the [2427] same same sorts of questions repeated [2428] over and over and over and over again [2429] essentially you've already answered is [2431] either a video or maybe a text post [2433] somewhere else or something of that [2435] nature so here's what you do instead you [2438] offer these people an AI coach you take [2441] all of the videos that they've ever done [2443] you take all of the YouTube posts all of [2445] the community posts all the school [2447] Circle posts whatever and you [2450] convert this into a retrieval augmented [2453] generation chatbot this is just a fancy [2456] term for like the AI assistants or [2458] something that like searches data up in [2460] a database and then you call it AI Nick [2464] or something and then next time anybody [2466] has a question before they post it in [2468] the group they just ask AI Nick this [2471] will work like 70 80% of the time if you [2473] do a pretty good job it's not going to [2474] answer all the questions because it's [2475] it's Rag and rag is known to have a [2477] little uh you know to be bumpy at times [2479] but this is going to handle 70 80% of [2480] all questions because it's basically [2481] just fuzzy search over a database of [2483] answers to [2485] questions if you do this you could [2487] literally completely automate like one [2489] job or two jobs or three jobs depending [2491] on the size of this coaching company on [2493] day like one cuz does doesn't take much [2495] more than like 24 hours to put together [2497] so you can literally automate like [2498] several Jobs worth the very first or [2500] second day the other thing you could do [2503] is you could actually give them this as [2504] a product to sell to their members you [2506] could say hey this isn't just something [2508] that's included in our program if you [2509] want access to AI Nick pay us $15 extra [2511] dollars a month or something and this [2513] thing will handle you know all of the [2514] questions you have it'll do a really [2516] good job of it's not perfect but it'll [2517] do a really good job you use that as a [2519] first pass so not only are you are you [2521] saving them of margin but you can also [2523] have them sell this as a product to [2525] double or even triple de so a lot of [2527] people are doing this right now um I [2528] know a lot of other people in like the [2530] AI automation agency space are doing [2532] this with their own Brands I haven't [2533] really done this because I think that [2535] there's a lot of value in my reputation [2536] in personally responding to these things [2538] but off the top of my head I could tell [2539] you there's like 500 people that that [2540] would eat this up right now if you just [2542] serve it to them on a silver [2543] platter so that's number one number two [2546] is a coaching management system so [2548] typically the way the coaching companies [2549] go from my experience is they tend to [2551] grow really quickly there's some Trend [2553] like uh smma or in my case AI or [2555] automation or or AI agents and with this [2558] trend there's a lot of opportunity to [2560] make money so creators and coaches like [2562] myself will make content about it and [2564] typically the growth curve looks [2566] something like this because uh you know [2569] so many people are interested in this [2571] the you know it's like selling shovels [2572] during a gold rush or something so many [2574] people are interested in this that so [2575] many people join the program the very [2577] quickly the person that runs said [2578] program does not have enough resources [2580] they don't have enough people in order [2581] to fulfill the thing that they promis [2582] the people that they would would do so [2585] what tends to happen is they tend to [2587] hire shotgun and they just tend to hire [2589] as many people as possible they get [2591] customer success managers coaching [2593] managers uh uh csms like account [2595] Executives whatever terminology you want [2597] to use for them they end up with this [2598] really bloated ass team that technically [2601] does the job but they're all very [2602] inefficient and they tend to be very [2604] different in terms of how they do the [2605] work because you didn't really have the [2606] time time to train them all up to some [2608] standard well here's where my coaching [2611] management system are cm it's very [2614] Cory it's very Cory of me um here's [2618] where this comes in handy Jesus I'm such [2619] a dad you can you can basically build a [2623] similar CRM or project management system [2624] what I've shown you guys [2626] before except what you do is when a new [2629] person comes into the coaching program [2631] you just round robin assign them to one [2633] of the many coaches that you have on [2635] staff then this coach has a number of [2637] stages just like our hiring system there [2640] might be week one where you know when [2642] somebody enters week one they're [2643] automatically delivered a bunch of [2644] assets Google Drive folders [2646] automatically unlock they're [2647] automatically given a bunch of templated [2649] resources uh then when they make it in a [2651] week two some other stuff gets unlock [2653] for them they receive another email with [2654] a bunch of info maybe there's a quiz at [2656] the end of week two when they finish the [2657] quiz they move on to week three [2659] basically this is a an intensive [2661] end-to-end coaching management system [2663] that delivers the same coaching [2664] experience that the people are currently [2666] doing just in like a completely and [2668] utterly standardized way um and this is [2670] the sort of system that can honestly [2672] like make a ton of money for the [2674] coaching company they can eliminate a [2675] few of their coaches for one not that I [2677] want to hire or fire csms but if you can [2680] you might as well um and then it can [2683] standardize the quality of the service [2684] and allow you to to to improve it this [2686] can end up being like one of the most [2687] foundational parts of a coaching [2688] business to be honest um and you know if [2690] you can deliver the thing that becomes a [2692] foundation to the rest of their their [2693] company their livelihood and their [2694] revenue obviously they're going to [2695] compensate you all for it [2697] so that's personally how I would do it [2699] um remember in order to sell them you [2700] could just scrape YouTube School [2701] whatever medium that they're great on [2703] using something like appify personalize [2704] the hell out of it create an asset and [2706] then send it to them alongside some [2707] personalized messaging the reason why [2709] you're doing it across all these [2710] platforms is just because you're [2712] probably you'll have probably spent like [2713] 10 cents using AI to create this thing [2716] you might as well maximize the [2717] probability that it gets seen just sort [2718] of like recouping your sun cost and then [2721] the reason why you sell the AI coach and [2722] the coaching management system is just [2723] because these are problems that people [2724] tend to to suffer from so just one quick [2727] review before I wrap this video up uh we [2729] had three niches we had high touch SAS [2732] okay High touch SAS is mid ticket plus [2733] lots of customer touch points they have [2735] very high revenues these are sorts of [2737] businesses you typically want to work [2738] with we had recruitment recruitment [2740] agencies typically deal with a ton of [2742] people and when there's a ton of people [2743] in high volume there's a lot of [2744] opportunity to make money they also have [2746] very high customer lifetime values and [2748] then the third was coaches and [2749] Consultants coaching and Consulting is [2751] blowing up right now they're super high [2753] ticket and since they involve um [2754] information products and margins tend to [2756] be good companies like this typically [2757] have very large sales and marketing [2759] budgets that you can help with I hope [2761] you guys appreciated this video I tried [2763] to make it as practical as possible for [2764] any aspiring AI automation Freelancers [2767] or agencies if you guys have any [2768] questions or suggestions about this [2770] please drop them down below but I love [2771] doing videos more on the strategy and [2773] the tactics uh although you know I also [2775] really enjoy doing videos doing the [2777] actual building as well thanks so much [2779] again if you guys could do me a solid [2781] like subscribe comment do all that fun [2783] stuff to bump me up in the YouTube algo [2784] I'll catch you on the next one cheers

Video: https://www.youtube.com/watch?v=r6uX3btBgvw
Title: N8N For Everyone (AI Agents, Workflows, & More)
[0] hey this is the start of a comprehensive [1] tutorial on NN that will span many hours [4] and take you from a total beginner in [6] n8n or maybe even no code more generally [8] and turn you into a proficient [9] automation engineer this course is [11] practical you're not going to learn by [12] dry Theory or academics we're actually [14] going to get you building stuff that [15] makes a difference in the real world in [17] particular things that make money [19] because one of the main use cases of no [20] code tools are obviously for business I [22] started and scaled my own automation [24] agency to $72,000 a month using no code [26] tools like nen so the goal here is to [28] impart some of that pragmatic business [30] knowledge as opposed to just keeping [31] everything academic if that sounds good [33] to you then buckle up and let's get into [37] it okay we're going to start this video [39] by signing up to n8n I'm actually going [41] to walk you through what that process [42] looks like from start to finish I'm [44] going to be using their Cloud hosted [45] offering today the reason why is it's [47] just a lot easier for total beginners to [48] get up and running versus self-hosting [50] but I want you guys to know that I'm [51] going to be covering self-hosting in [53] depth over the course of the next few [54] weeks after that we're going to do a [56] live Hands-On review of nad's Builder [58] we're going to cover the canvas the work [60] flow um nodes and then after that I'm [62] going to be creating three simple but [64] effective workflows to actually have you [66] guys get something on the page so to [67] speak you'll actually have created three [69] simple workflows before the end of this [71] video so if that sounds good to you [73] without further Ado uh this is Ann's [75] website as we could see secure AI native [77] workflow automation very sexy I really [79] like their branding you can see they [81] worked with some big freaking names [82] Adobe is using n now send and blue [85] Pearson um Splunk and I've never heard [87] of those guys but they sound funny so uh [89] top right hand corner I'm just going to [91] click get started and the first thing [92] it's going to ask me for is my full name [94] so I'm going to give it my full name [95] then it's going to ask me for my company [97] email I'm going to give it a company [99] email so I'm going to ask me for a [100] password I'm going to write down an [102] example password and then for account [104] name I'm just going to go Nick [106] youtube.app ncloud keep up with our [109] constant improvements through a [110] newsletter no thank you um what I have [112] to do here is just because uh I'm crazy [114] with it sometimes they think that I am a [116] robot I need to select a bunch of images [118] that match a mountain that kind of looks [120] like a mountain that looks like a [120] mountain I don't know about that but [122] let's see what happens it is [124] embarrassing how uh commonly how common [127] it is for me to get these things wrong [129] anyway they have some little onboarding [130] stuff using type form I'm not going to [132] harp too much on that because odds are [133] this will be different by the time [134] you're looking at it and then I'm not [136] going to invite any team members to my [138] workspace I really like their onboarding [140] they have um fantastic onboarding they [141] have a little quick start guide over [142] here on the right hand side as the [144] workspace starts up as you can see it [146] didn't cost me anything to like launch [147] said workspace the cloud plan gets you [149] up been running like ASAP so despite the [152] fact that onboarding typically do change [154] and yours might look a little bit [155] different as of the time of this [156] recording it is pretty dang sweet okay [158] and now I just received a notification [159] saying that my workspace is online I can [161] click Start [162] automating and we'll actually dive into [165] um NAD proper they use a little dark [167] mode action which I really like so very [169] clean very Sleek as you can see they [171] automatically sign you up to a trial uh [172] when you get started you'll have 14 days [175] in said trial with 8,000 executions [177] total I'll cover what all that stuff [178] means uh in a minute no big B deal the [180] terminology of nadn is pretty simple and [182] straightforward which I like so just [184] covering the dashboard really quickly [185] top to bottom I'll talk about the things [187] that are important the things that you [188] don't really need to know you want to [189] actually use in practice let me just [191] exit out of this little top bar here uh [193] first things first this button over here [195] allows you to create so you can create [197] either a workflow and you can create it [199] in a specific project so I only have one [201] project here called personal which is [202] why that's all it's giving me you can [204] also create a credential so credentials [206] are how you connect to various software [208] platforms and apps in n8n [210] uh and then you can also create a new [211] project so add a project button down [213] here you also have an add a project [215] button up here no idea why they do that [216] but they do um as I mentioned things are [219] separated into projects we don't have [220] any workflows here but when I add one [222] you'll see It'll be listed then we sort [224] of have um some of the same data here as [226] well we have credentials if I click on [228] this credentials I can actually create [229] um a credential up here too nothing [231] magic um if you're on the cloud hosted [233] offering you will have this sexy admin [235] panel the purpose of which I have yet to [237] fully understand uh no the purpose of [239] this is basically just to monitor your [240] trial you can change nadn version [243] versions if you need to you can change [245] nadn versions if you want you can change [247] the versions if you need to um select [249] your time zone and and you know do some [250] other settings in practice you basically [252] never really have to change any of this [253] stuff so don't sweat it too much aside [255] from that one of the most powerful and [256] valuable parts of n8n this little [258] dashboard it's actually down here in the [259] bottom leftand corner under admin panel [261] it's called templates and this sets NN [264] apart from a lot of the other no code [265] tools that you could choose um they [267] basically have some of the highest [268] quality workflow automation templates uh [271] publicly available and completely free [272] to use um out there on the internet this [275] is the simplest way to get up and [276] running if you guys don't know how to [278] build a flow and after you're done [280] watching this video I'd highly recommend [282] you guys to just bookmark this and just [283] spend a few minutes scrolling through [285] clicking on various systems that you [287] might want to create um and just [289] understanding a little bit more about [290] how professionals or people that are a [291] little bit more well versed with then [293] might put things together there's a lot [294] of opportunity here obviously to um [297] template out you know big chunks of [298] flows you otherwi build and some of [300] these flows to be honest are literally [302] good enough where you could just click [303] sales and you could find like one or two [305] of these flows that like does exactly [307] what you need um before you even uh you [310] know you had put any work in so for [312] instance if you wanted to scrape [313] business emails from Google Maps so the [314] use of any third party apis that was a [316] system you were tasked to build maybe as [317] a service or for your own business you [319] can literally click on this button and [320] you could import the flow it would take [322] you like 5 Seconds not hard at all and a [324] lot of the time the developers will [326] document the hell out of it too they'll [327] do video tutorials and and all that [329] stuff [330] so yeah that's probably the most [331] valuable part of this whole page to be [333] honest aside from the workflow Creator [335] uh but let's actually dive into the [337] juicy bits which are obviously what [338] you're here for by creating a workflow [340] so that takes us to the canvas when you [343] open up a new workflow you are sent to [345] this page where you could see um a lot [347] of cool stuff this is basically the [348] workbench where all of your n8n flows [350] are going to be created I'm going to [352] walk you through this top to bottom [353] let's start on the top leftand Corner [355] this is where you can name your [356] workflows so I'm just going to name a [357] workflow and I'm going to call it um um [359] you know n8n [362] course you can see here you can also add [364] a tag n8n uses tags to organize their [367] workflows in projects which I'll show [368] you in a moment but let's just create a [370] new tag and let's just call this YouTube [371] let's say I'm going to be creating a big [372] YouTube tutorial so I want to tag [374] everything here as YouTube if it's if [376] it's part of my um nadn course and then [380] uh over here on the right hand side you [381] have the ability to activate your [383] workflow you do need a trigger for that [384] which I'll cover in a moment you could [386] share your workflow here which means you [388] can add users to your account and then [390] give them access to a workflow pretty [391] neat there's a workflow history or [394] revision history if you make a mistake [396] or something during your nnf flow you [397] can just click this button it'll [398] actually restore the version of the [400] workflow that you want so they have very [402] good persistence they actually show you [404] it um live which a lot of other na sorry [406] a lot of other no code tools don't then [409] top right hand corner you have this sort [410] of like click more button where you uh [412] can duplicate a workflow so if I click [414] this button it'll actually just like you [415] know create another one I can download a [418] workflow when you download it you'll [419] download loed into Json which is pretty [420] neat JavaScript object notation this [422] allows you to then send it to anybody [424] else that you want and then they can [425] like import it and speaking of import [427] you can import either from a URL so [429] there could be like a Json um there [430] could be a Json file hosted on a URL [432] over here and then you could also host [434] it uh just import it from the file too [436] so that NAD course over here I could [438] just click that button and then um it [440] would import that workflow that I just [443] exported there's also some settings [445] obviously there are a bunch of like um I [448] don't want to call these higher level [449] but there're sort of like configuration [450] options with execution order where there [452] are a variety of different ways that n [454] USS to execute workflows there's some [456] error handling workflows um you know [459] some some ways to time things out after [461] a certain amount of time we're not going [462] to cover this because in practice I find [463] you rarely need to use this when you're [465] actually building like business uh you [467] know flows for business purposes that's [469] ultimately what the purpose of this [470] whole tutorial and course is about um [473] but you know rest assured there's ample [474] documentation and all this stuff the [476] really cool part about n in is how well [477] documented it is is basically everything [479] you could possibly need I'm not going to [481] switch to the old canvas it's just like [482] a slightly different way that it looks [484] moving forward this is probably going to [485] be the predominant mechanism just [487] because it's so clean and sexy and [489] useful which you'll see okay now [491] speaking of the actual canvas itself um [493] if I just scroll around here I'm holding [495] my two fingers on my little touchpad you [497] could also do this with like the mouse [498] wheel if you want I'm moving around the [500] canvas right you see these little dots [501] that are equidistant from one another um [503] this sort of shows you where you're at [506] in the bottom left hand corner you'll [507] notice that as I do that there's this [509] little white box sort of in the middle [511] what this is is this is sort of like a [512] mini map I don't know if you guys have [513] ever played video games like uh [515] Starcraft or Warcraft or League of [518] Legends or Call of Duty or whatever it's [520] basically the same sort of thing you [522] have a mini map here um and you can [524] actually you can drag the canvas like [525] I'm doing right now or you can actually [527] just drag the mini map too which is kind [528] of neat we can zoom way out we can zoom [530] way in this is sort of nifty and [532] honestly sometimes I just play with this [533] for like 10 or 15 minutes at a time [535] before I remember that I should probably [536] be building workflows that make people [538] money um so that mini map is kind of [540] cool in the bottom Le hand corner you [541] have a couple of buttons and these are [542] like quick access easy buttons these are [544] just useful when you're building out [546] workflows um if you just press this [548] button it'll basically just like fit [551] back to um like I don't know like it'll [554] it'll zoom out to an appropriate amount [555] that allows you to see most of the nodes [556] here the cool thing is n makes very [558] heavy use of uh hot keys so if you [561] actually just instead of clicking this [562] button just press one you just snap back [565] so [566] one one one pretty cool it basically [570] just centers this box or centers the [572] average location of all of the boxes [574] when you have multiple nodes um in the [576] center of your screen there's also some [578] plus and minusing action going here you [580] can press plus to zoom in or you can [582] press minus to zoom out in practice I [584] don't really use these when I'm building [585] just because I have my little touchpad [587] and mouse wheel and I can just do this [588] and when I do this my head gets spinny [590] and it's very fun you then have um reset [594] zoom here so you can go zero or one I [596] don't really use that in practice if I'm [597] mad zoomed in and then you have a little [599] way to report bugs um I never report [601] bugs granted uh I don't know maybe we [604] have some white Knights here that want [605] to make the platform better or something [606] okay the last thing I want to cover is [608] and you can't really see it cuz my giant [610] ass head is in the way but in the bottom [611] right hand corner of the screen you can [613] click this button to ask an AI assistant [615] says Hey Nicholas I can answer most [617] questions about building workflows in [618] nadn for you for specific tasks to see [620] the ask assistant button in the UI how [621] can I help and the reason why I wanted [623] to cover this is because this has got to [624] be one of the most useful features in NN [626] and this really sets it apart from the [628] vast majority of other no code platforms [630] especially like make I think zapier has [631] an AI assistant feature now as well [633] because this AI assistant is actually [635] useful you can actually use it to sort [637] of co-build things um it has access to [639] all of the nadn community forums so any [642] post that was basically ever made that [643] describes a solution to a problem it [645] will technically have access to and it [646] can pull it like with reasonable [648] accuracy uh and then it's also [650] integrated into your Builder so it it [652] has access to the the actual build [653] itself sometimes you have to give it a [655] little bit more context about what it is [656] that you're doing for it to like really [657] figure it out yeah this a assistant I [659] want to say it's not perfect but it [661] covers at least 30 or 40% of all the [663] queries that I have for n&n so my usual [665] debugging workflow which you guys will [666] see if we run into a bug later hopefully [668] we do fingers crossed uh I'm going to [670] use the a assistant sort of a first [672] pass okay great so that's that um I [675] think we now know everything except for [677] obviously the big juicy elephant in the [678] room which is adding a first step if I [680] click on this middle button here you'll [682] now see on the left hand side we've [683] opened a bunch of options um and [686] essentially what we're doing when we add [687] a first step is we're adding a trigger [689] first step of any flow in N is always [691] going to be a trigger and so on the [693] right hand side we have a variety of [694] different triggers we could choose from [696] we could trigger manually this runs the [698] Flow by clicking a button in nadn good [700] for getting started quickly it is very [701] good for getting started quickly and I'm [702] going to show you our first uh module or [705] sorry our first workflow is going to be [706] built like that on app event so this [708] runs a flow when something happens in [711] one of the many apps that you can [712] connect to nadn so if I click this you [713] can see there's there's Action Network [715] active campaign Acuity ad dollo maybe [718] you want to do a trigger when new thing [719] gets added to an air table or when a new [721] project gets added to a Santa or maybe [723] you want to I don't know when you [725] receive a new um clickup task or I don't [728] know you get a new Gmail or something or [730] a new GitHub repo or ghost post was made [732] right if I scroll through here there [733] there are a couple of hundred triggers [735] as of the time of this recording and [736] nadn is always looking to add more so [739] the cool thing is you can very quickly [740] if there's one of the platforms that are [742] listed here click this button and then [743] you could say oh okay um let me see [747] better example oh okay know a new air [749] table event just occurred and what is [751] the air table event in particular um I [753] don't know it's going to be like a a new [755] thing that was added to a row with a [757] with a specific field for instance you [759] could very quickly get an an practical [760] integration up and running super super [762] quickly anyway I don't actually want to [764] use this so I'm just going to drag on [766] the canvas and then I'm going to press [769] delete and it's going to delete that [770] module sorry the node if I right click [773] this you can see I can also do a variety [776] of things to this but the one that I [777] want in this case is a delete so that's [779] I'm going to do and I'll show you how to [780] do all the the other things that you saw [782] a moment ago just over the course of [784] building okay so if I go back to this [786] open nodes panel a top right hand corner [787] you'll see that there's a hotkey I can [789] just click the the tab button instead of [790] doing this manually so that's what I'm [791] going to do I'm just going to press tab [793] so that's what I just did and it just [794] opened this up automatically um let's [797] continue down uh aside from just on app [799] event you can also do things on a [800] schedule so you can run a flow every day [802] hour or whatever custom interval you [803] want which is pretty neat so if I click [805] this you can see on the right hand side [806] here or left hand side here we can [808] trigger the interval to be seconds I [811] might run this thing every 30 seconds I [812] could run this every minute I could run [814] this every hour days weeks months they [816] also have like a programming um sort of [818] term here called KRON which is just a [820] specific language setup where you could [822] write an expression that does something [823] I don't know every third Sunday of years [827] that are odd numbered for instance I'm [829] just going to now click delete so we can [832] delete that out press tab to open up [833] this right hand side panel and then [835] continue you can also do what's called a [837] web hook call if you guys are unfamiliar [838] with with web hook calls I'm going to [840] cover it later on in the course but [842] essentially the really cool thing about [843] NN and a lot of other not code platforms [845] it is it allows you to set up your own [848] URL just like this up here right Nick [851] youtube.app n. Cloud where when anybody [855] tries to access that URL or sends or [858] receives data from or to that URL you [860] can basically get notified and you can [862] use that as the the beginning of a [863] trigger um for one of your flows and the [866] benefit to this too is you know how [867] earlier I showed you guys that they [869] didn't had a bunch of um you know native [871] Integrations about like 200 or something [873] like that where you could connect with [874] the Q you could do clickup you could do [875] Gmail all that stuff well a lot of the [877] time especially if it's a new platform [879] you don't actually have that native [880] connection yet and the benefit of having [882] web hooks is they allow you to create [883] that connection yourself and in these [886] tools most of the time they'll have a [887] thing um called like a like a web hook [889] listener you can set up your own web [891] hook listener to be this URL here and [894] then nadn can just listen to data being [896] shuttled to and from those platforms [898] which basically in effect allows you to [900] create an infinite number of [901] Integrations connect to tens of [902] thousands of different apps and [904] ultimately become the automation God [905] that we both know you want to be okay [907] anyway so I'm going to click that out [909] and I'll cover all of the uh fields and [911] everything like that that you saw there [912] earlier next we have a very Nifty one [914] which we're going to be using today [915] called the on form submission if I give [918] this a click and then I add just some [920] very base details here um let's just say [923] name sorry let's just do example [926] form enter example data [930] what's your name we'll go Peter if I [933] click test the step now we're actually [934] going to open up a little form that I [937] could use to fill data out and when I [938] submit it this basically begins my my [941] flow which is really neat so in practice [943] like in business flows you don't usually [945] use this too much but I'm going to show [946] you a simple um workflow that we can [948] build today that will there's also when [950] called by another workflow this runs the [952] flow when called by the execute workflow [954] node from a different workflow the [955] reason why this is so valuable is [957] because a lot of AI flows will use this [958] so if you want to learn how to build AI [960] agents and stuff like that the when [961] called by another workflow um execute [964] workflow nodes the the that relationship [965] there is very common and you'll see me [967] do it a lot over the course of the rest [968] of this tutorial then there's also on [970] chat message which is very valuable so [972] this runs a flow when a user sends a [974] chat message um for use with AI notes as [976] we could see you could ask AI just using [979] a little chat interface hey can you [980] check my calendar to um I don't know [983] double check that I'm not double booked [984] for for 11:00 a.m. it'll actually go [986] through um this little chat window [988] trigger and then use that to begin the [989] rest of this flow there a few other ways [992] um you could do an email trigger IMAP [995] error trigger this one's actually really [996] Nifty and most other no code tools don't [998] have this when there's an error in [1000] another workflow you could trigger this [1002] workflow to do something with there are [1004] a couple of like metadata things with [1007] naden where you could set it up so that [1009] when you create another workflow [1010] somewhere in your naden project you [1012] trigger a flow when one of your flows [1015] starts or when one of your workflows is [1017] activated you could do something and [1018] there a variety of actions here we'll [1020] cover actions in a moment and then [1021] there's um this SSE trigger which nobody [1023] really ever uses in practice for my [1025] understanding so I won't sweat it all [1027] right awesome so that in essence are all [1029] of the triggers in order for us to check [1031] out and learn some of the actions we're [1032] obviously going to have to go and create [1034] a flow right in order for uh a flow to [1036] be a flow it needs a trigger something [1038] that starts it and then an action [1039] something it does now that we finished [1041] the first part let's actually just go [1042] and start building um you know our our [1044] three workflows so you guys can see how [1047] to actually do things in nadn it's one [1049] thing to sort of look at things from a [1050] canvas point of view it's another thing [1051] to actually get in the weeds get your [1052] hands dirty start manipulating Fields [1054] okay I just jumped over to my other nadn [1056] account which contains these examples [1058] and I just wanted to show you one more [1059] thing that I I haven't mentioned yet you [1061] see how this is now this little like [1063] yellow note um with manual trigger send [1065] an email to someone we'll start by [1067] learning how the manual trigger works [1068] we'll also cover creating a brief [1069] connection then using it send a [1070] templated email this is just how I'm [1071] going to document um a lot of our work [1073] moving forward because it's very [1074] convenient but what is this this is [1076] basically a piece of documentation that [1077] you can just insert inside of your your [1078] own NN flows anytime you want it's very [1081] simple if you go to the top right hand [1082] corner just go down a bit There's a [1084] sticky note which you can do with the [1085] hotkey um shift and then s so if I go [1088] shift S I just added a bunch of notes [1090] I'm just going to command Z or control Z [1092] just to go back um but yeah you can just [1094] add a note anytime you want and notes [1095] are really cool in end because they [1097] allow you just to document things you [1098] don't just have to use notes when you're [1099] trying to teach or show somebody [1101] something in fact my recommendation I'm [1103] just pressing one to Center this my [1104] recommendation is to use notes for [1106] yourself to document workflows for [1107] yourself um just so that you know let's [1110] say you build a system for a client or [1111] for your own business and it works [1113] really well so you don't have to check [1114] in on it for 6 months but six months in [1115] you want to change something well now [1117] you're not like basically having to [1119] relearn the whole workflow now you have [1120] like a note which I don't know documents [1122] or teaches you a little bit about it [1124] okay so the very first system we're [1125] going to build and basically the thing [1127] that is going to allow us to get up and [1128] running to learn how the rest of the uh [1130] nadn ux works is we're going to start [1132] with a manual trigger then we're just [1133] going to use that to send an email to [1135] somebody the reason why this is valuable [1137] is because it's going to show us how to [1139] actually trigger a workflow like [1141] ourselves we're also going to learn how [1143] to test a workflow and I'm going to run [1144] you through how the fields in nadn work [1146] as well we're going to create a brief [1148] connection to my Gmail then we're going [1150] to use that to send basically the hello [1152] world example if I click on this [1154] actually let me update that basically [1156] our quote unquote hello [1159] world okay great so I'm going to drag [1162] this add of first step over here and [1163] let's actually do it let's click add a [1164] first step and let's add this trigger [1167] manually flow click that node move it [1170] over to the left hand side and now as [1172] you can see we have a node in our [1174] workflow that says when clicking test [1176] workflow awesome I'm now going to click [1178] this plus button what this enables us to [1181] do is basically do um some Next Step so [1183] what I'm going to do next is I'm going [1185] to add an action this is our trigger [1186] remember it has this little um [1188] electricity lightning icon next to it [1191] what I'm going to do is I'm going to do [1192] probably the simplest thing that you can [1193] do in naden which is just send an email [1195] I think most of us are probably using [1196] Gmail at this point um I'm going to go [1199] Gmail over here and what I want is I [1201] just want to scroll down there's so many [1202] message actions I got a label delete a [1204] message get a message do whatever the [1205] hell I want but the one that I want is I [1207] want send a message so I'm going click [1209] Send a message and two things will [1212] happen the very first thing that will [1213] happen is we just connected an action to [1215] our trigger node and so our canvas is [1217] now updated it has two parts to it which [1219] I'll show you in a second the second [1220] thing is we are now faced with this [1223] screen this is basically you know [1225] there's like the the bird's eye view [1227] canvas screen where you see all the [1228] nodes laid out but this is a screen that [1230] pertains to that particular node and the [1232] really cool part about the way that nadn [1234] lays it out is this Gmail node which we [1236] just added um it's sort of In The Middle [1238] on the left hand side here we have the [1240] input to the node on the right hand side [1242] we could see the output of the node so [1245] n8n and one of the reasons I love it so [1246] much is because it tries to show [1248] everything to you uh linearly and [1251] logically everything that comes in to [1254] this node that we added will be coming [1255] in through the left hand side which I [1257] think looks like the right hand side on [1258] my thing so let's go over here it'll [1260] come in through the left hand side then [1263] it'll hit your node your node will do [1266] something with that and then it will [1268] finally uh proceed uh out the left hand [1270] side as an output so very simple [1273] conceptually and I can't really [1275] overstate how valuable this is just as [1277] somebody that's worked with like you [1278] know over a dozen no code tools at this [1280] point to have it laid out like this um I [1282] think shows that the team spent a lot of [1283] time and energy figuring out what like [1285] the most ideal ux was for development [1288] okay so I'm going to ignore all of this [1290] input data stuff and and we'll we'll [1291] cover all of that later um just over the [1293] course of building what we're going to [1295] do now is we're going to click this [1296] credential to connect with so I've [1297] already actually already connected my [1299] Gmail account but I'm going to pretend [1300] like I haven't just because I want you [1301] guys to be able to follow along here so [1303] what you have to do is you have to click [1304] create new credential now there are a [1306] variety of ways to connect one of your [1308] accounts to NN there is ooth or ooth 2 [1313] and then there are also service accounts [1315] I highly recommend anytime that there's [1317] an ooth or o 2 option available you guys [1321] go with oath 2 to keep to make a long [1324] story short ooth 2 just refers to you [1327] clicking a button like sign in with [1330] Google and then you being able to select [1333] an email address with which you can sign [1335] in all you then have to do is actually [1338] sign into to the service in my case I'm [1340] already signed in to my own Gmail [1341] because I'm using Chrome and it already [1343] does that then you click continue and [1346] now you can close this window and even [1348] tells you how lovely and you'll see that [1351] it now has connected the account [1353] basically meaning that all of the stuff [1355] inside of my Gmail is now accessible to [1357] nadn I can actually do things with it [1359] using various triggers and actions so [1361] we're going to exit out of this now and [1363] you can see that we're now connected to [1365] Gmail account 3 okay next up we have a [1367] couple of fields we have resource this [1369] just allows us to choose what thing we [1371] are manipulating so message label draft [1373] thread for now we're just going to keep [1375] it as message you can poke around with [1376] that after you're done this then the [1378] operations so we could do a ton of [1380] things here we can add a label delete [1381] get get many Markus read Markus unread [1384] remove label reply send and send and [1386] wait for approval lots of options here [1388] we're just going to click Send for a [1389] Hello World example and now we get to [1392] the juice of it which is the two field [1394] so in my case I'm going to be sending [1395] this to myself which is Nicholas sarv [1398] atgmailcom and I'm going to be putting a [1401] subject and you can see it's already [1402] autofilled the hello world so I'm [1404] actually just going to go hello [1406] Nick we have a bunch of email types here [1409] those text and HTML for Simplicity I'm [1411] just going to go with text but I want [1412] you guys to know that HTML is a [1413] programming language that allows you to [1415] make your email pretty you guys have [1416] ever signed up to like a newsletter [1418] service and there's all these images and [1420] and and you know banners and stuff like [1422] that that's because they're using HTML [1423] so you can learn how to do that yourself [1425] and then you can send stuff like that [1426] through naden pretty easily but then [1429] finally we have the message so I'm just [1430] going to say hello [1432] Nick and then I'm going to say it's nice [1436] to meet you [1439] okay great and now we've gotten to the [1440] point where the vast majority of this is [1442] done we do have some extra options down [1444] here I want you to know that basically [1446] all um nodes that you can manipulate [1449] will have some form of extra option you [1451] don't have to memorize every option for [1453] every node because there are hundreds of [1454] nodes as I mentioned um generally [1456] speaking they're just a couple that are [1458] valuable I know just off the top of my [1460] head that the Gmail node has one that's [1463] this append naden attribution naden will [1465] try and Market themselves all the time [1468] uh so if you do not turn this off they [1470] will say this email was sent by nadn [1473] it's not a big deal most snow code [1474] platforms do this but just make sure you [1476] actually turn it off if you want to use [1477] it for some sort of business use case [1480] Okay and then that's that I'm just going [1481] to head over to my personal email here [1483] just open that up just so we could see [1485] so you see I have a ton of um you know [1489] red emails here and I'm just going to [1491] click test step I'm now going to send [1493] the email you can see the left hand side [1495] filled out first it said when clicking [1497] test workflow cover that later but the [1499] most important thing is this output [1500] field has now populated and we see here [1503] it's a it's kind of like a table right [1505] with a column called ID another one [1507] called thread ID and then finally label [1509] IDs so anytime that you send or receive [1513] data in n8n from one node to the next um [1516] you're generally speaking going to have [1518] some sort of um object that is created [1520] as a result this data object um can take [1523] a number of forms and n and can [1524] visualize in a number of forms the way [1526] that they do by default for this type [1528] typ of data is they do table view which [1529] is where it's separated kind of into [1531] columns like this there's also Json this [1533] is Javascript object notation this is [1535] what a lot of programmers and people [1537] that are a little bit more familiar with [1538] no code are going to prefer because this [1540] is just uh you know it's like a standard [1541] convention JavaScript object notation [1543] they know what the um brackets mean and [1546] I don't know instead of it being um kind [1547] of left to right like this which can be [1549] squ squished it's sort of top to bottom [1551] instead there's also schema this is [1553] generally what I find most people in [1555] naden prefer they prefer schema views [1558] views are great um you know they're just [1559] sort of like a they're sort of like [1561] Jason it's just instead of them being [1562] written in code it's just sort of a [1564] little bit cuter and it's wrapped in [1565] like a little Bubbles and stuff so this [1568] data is the same as this data and this [1570] data is the same as this data they're [1571] all just different ways of showcasing um [1573] what the information looks like to you I [1575] should also note that you can search the [1577] output which is cool um a lot of people [1579] even season professionals that nadn they [1581] like have never clicked this little [1582] search button so give it a try if you um [1584] are looking for a particular filter [1586] let's say the object that is output is [1588] huge and you'll see you can output a ton [1590] of different parameters here but you [1592] want to just see if the output contains [1593] something you can do so very quickly [1594] just using this then only that field [1596] will show and then you can very quickly [1598] manipulate that as necessary um you can [1600] also do a couple of other things like [1602] pin data um and I'm going to cover [1604] pinning data later uh and then kind of [1606] like one of the neat things you could do [1607] as well is you could actually manipulate [1609] the output data so you could pretend [1611] like this just output a different ID [1613] maybe instead of 1 1949 it was 18 [1616] to1 3 or something [1619] the reason why this is valuable because [1620] is because um it will then allow you to [1623] propagate that data moving forward and [1625] as you can see we just changed that [1626] number it used to be 1 1949 now it's [1628] 1823 so when I search 1949 we don't have [1630] two Fields coming up we only have one [1632] right if I want to search for the 181 I [1634] go 18 there we go okay great so that's [1638] what what happened in N andm but why do [1639] we give a crap about that we don't what [1641] we care about is did I receive the email [1643] okay and now you can see we just [1645] received that email if I give it a click [1647] it now says hello [1648] commas space Nick with an exclamation [1650] point Nick left click. that's the [1652] connection of the account that I made [1654] then it says hello Nick it's nice to [1655] meet you fantastic amazing great thank [1658] you nadn for this lovely email just for [1660] shits and gigs I'm going to click this [1662] append nadn attribution just retest it [1663] just so you guys can see what that [1664] attribution is like um but as I [1666] mentioned I wouldn't really recommend it [1668] for business purposes he just got this [1670] little almost email signature it says it [1671] was sent automatically with [1673] NN okay so I'm just going to turn that [1675] off and then voila we're basically done [1676] our first example this is the world of [1678] NN um if you've made it to this point [1680] you now literally know how to set up a [1681] simple trigger and a simple action you [1683] can do a lot of stuff with what we've [1685] just covered honestly if you take the [1687] tips and sort of the the workflow here [1690] um you know you can put together [1691] probably like 10% of all workflows at [1693] this point um so as you can see you know [1695] it's it's sort of simple to get up and [1696] running as long as you have a couple of [1698] core fundamentals down as long as you [1700] know what triggers and actions are and [1702] obviously um you know uh if you did not [1704] know what you were doing before you [1706] tried to do it it would be a little bit [1707] tougher so you have the benefit benefit [1708] of my foresight but flows in a nutshell [1711] are not really more complicated than [1712] this you always have some trigger then [1714] you have some thing that happens and [1715] then you have the action which is this [1717] Gmail so let's kick this puppy up a [1720] notch instead of just doing um an email [1723] why don't we do an email but let's also [1724] add Ai and then instead of a manual [1726] trigger where we just click the thing [1728] and then it runs why don't we use a form [1729] to begin our our workflow [1732] instead so the very first thing I'm [1733] going to do is I'm just going to delete [1736] this I'm just going to scroll down here [1738] the form fill a autoresponder and what [1741] we're going to want to do as our trigger [1743] is instead of it being trigger manually [1745] like we did before we're going to go on [1747] form submission just that I could show [1749] you um how to do things a little bit [1751] more um complicated like things that [1753] don't just rely and yeah it's going to [1755] try and add it um all the way back up [1757] here so I got to go drag it down uh just [1760] so we could see how do you get data in [1762] from a resource that like isn't this [1764] canvas instead of us just clicking a [1766] button let's actually trigger it based [1767] off something so the way we're going to [1768] do it is on this on form submission note [1771] so I give this a click um you'll see [1773] that now there are way more fields and [1774] this can actually be pretty intimidating [1775] it's the first time that you've ever [1776] mucked around with something like [1778] this so don't worry it's actually not [1780] that scary um we'll we'll make it pretty [1782] simple up at the very top here we have [1784] some form URLs there's a test URL [1786] there's a production URL right now it's [1788] not really worth knowing the difference [1789] between the two just know that this is [1791] the URL of your form so you'll be able [1792] to send this to somebody you'll say hey [1795] um I'm really excited to get up and [1796] running with you thanks so much for [1797] paying the the invoice all you need to [1799] do is fill out the information on this [1800] form and my team will get started you [1802] use this as an onboarding form uh next [1804] you have an authentication uh you can do [1806] basic off none basically in our case um [1809] this just refers to how you want to [1811] secure the form in our case we don't [1813] want to secure the form at all we just [1814] want to use it now we need to create a [1816] form title so maybe let's just go [1817] onboarding [1819] form form description this is an [1821] onboarding form for left click fill out [1824] the fields and our team will get back to [1827] you shortly as you can tell I'm building [1830] this example I guess I'm I'm framing it [1831] as an onboarding situation where you're [1833] working with somebody and you just sign [1835] the deal so you send them over a form [1837] and that form includes a bunch of fields [1838] with information they need to fill in [1839] order to get started with you so uh what [1842] is your name maybe we'll do the the [1844] first one so we'll go first name well I [1848] mean we should probably already know [1849] their first name before we onboarding [1850] them but for the purpose of this example [1851] let's roll with it we have a bunch of [1853] different fields we could choose here we [1854] could do text text area password number [1858] file email drop- down list and date so [1860] there's a lot going on but let's uh roll [1862] with first name [1863] first the second one let's do last [1868] name and let's just use my own [1870] information as placeholders so I'm going [1872] to do Nick as the first placeholder [1873] Sarah as the last placeholder let's make [1875] both of these fields [1877] required let's go down here let's go [1879] email address now because it's an email [1883] we can actually choose a specific type [1884] of form field I'm going to choose email [1888] the reason why is because I want to [1889] force people to put in a properly [1890] formatted email if I'm going to use this [1892] flow to send an email to somebody [1893] obviously I'm going to need to make sure [1894] that email is valid what if somebody [1896] typed in this instead or what if [1898] somebody typed in that instead both of [1900] my emails wouldn't go through it break [1901] my flow this sort of pre-planning is [1903] necessary when you're putting together [1905] more complex no code um flows because [1907] you just want to make sure that like the [1908] data is correct from the get-go the data [1910] is uh bad so will the rest of your flow [1912] so will be the rest of your flow okay [1915] great and then let's just ask for a [1916] phone number [1918] and down over here you can see that we [1919] have access to a bunch of different [1920] fields there's number you might [1922] immediately think that a number is the [1923] one to go to um I don't think I'm going [1926] to do number for this uh I don't think [1927] there's a a native phone number [1929] formatting field if we did number then [1931] that would mean that people wouldn't be [1932] able to put a format in like this for [1935] instance so I kind of want people to be [1937] able to so instead I'm just going to go [1939] text and then I'm just going to add a [1943] placeholder and the idea is this is just [1945] going to tell them sort of what sort of [1947] format to use for their number we're [1949] going to go [1950] required okay great down here we can now [1952] choose when we want this form to trigger [1954] so when do we want it to trigger when [1956] the form is submitted so that's what [1957] we're going to use and then down here we [1959] have some other options we could choose [1960] like a pen n8n attribution I'm just [1962] going to turn that off there's uh button [1965] labels we can change the button label if [1966] you want let's get started I think the [1969] default one just is a submit um and then [1971] there are a variety of other ones here [1973] which I'm not going to cover right now [1974] because I want to keep things simple and [1976] straightforward awesome so now that we [1978] have this I'm just going to click test [1979] step this is going to open up my form [1982] and you can see this honestly is not a [1983] bad looking form so I'm going to go Nick [1986] sarv Nick left click. I'm just going to [1989] add [1990] a sort of examply E phone number and [1993] then click let's get [1994] started what happens when I fill this in [1997] if we just make this a little bit [1999] smaller and we couldn't see this in real [2001] time but what happened right there was [2003] the output populated and so now we [2005] actually have all of these fields [2006] accessible to us in our na flow first [2008] name last name email address phone [2010] number submitted at form mode as well [2012] form mode uh wasn't and submitted at [2014] these weren't fields that were put in by [2016] me when I filled out the form these are [2017] what are called metadata and the cool [2019] part about metadata a lot of the time is [2021] uh you can use this metadata to do [2022] something cool with so you know we could [2024] very easily use this to update a Google [2026] sheet or something with a list of [2028] submitted at dates so that we could [2029] always be tracking and sort of um know [2031] like which uh which form entry made it [2034] in at which time we could distinguish [2036] between test and production workflows [2039] production being a live [2040] workflow any who so now that we have [2044] access to all this data what I want to [2045] do just to make my life simpler is in [2047] the top rightand corner I'm going to [2047] click this little pin button the value [2050] in pinning the data in NN and this is uh [2052] kind of different from most other noode [2053] platforms but the value in pinning the [2055] data is by pinning the data we will have [2056] access to that same data on all nodes [2059] that are Downstream from the trigger [2061] node or the node that we are pinning the [2062] data from and this is valuable because [2065] as you'll see nen's whole testing flow [2067] involves you know in in future nodes or [2069] subsequent nodes testing using data from [2071] the previous node and if there is no [2073] data from the previous node you are [2074] going to have to fill out that data in [2076] order to proceed so this is just going [2078] to save us a little step now that we've [2080] done the form submission what I want to [2081] do is I want to send this to AI okay so [2084] I'm going to give this a click and I'm [2085] going to go over here and I'm going to [2087] type in I'm open [2091] AI from here we have a variety of ways [2093] that we can communicate with our AI I'm [2095] going to scroll down until I get one [2097] called message a model this is the [2100] simplest um AI module that you AI node [2104] that you guys could possibly use this is [2107] basically chat GPT it's just instead of [2109] us using chat GPT um on their website [2111] you know chat. open.com basically going [2113] to be communicating with it now through [2115] API which is way cooler and enables way [2117] more cool use cases so credential to [2119] connect with um as you can see I already [2121] connected my own open AI account I'm [2123] going to go to create new credential [2124] just to show you guys how this works now [2126] unfortunately this ises not yet have an [2128] oo2 uh connection so that means that as [2131] I mentioned previously you're not going [2132] to be able just to like give that click [2134] uh give that button a click and then [2135] have it open up the signin with Google [2137] button instead what you're going to have [2138] to do is you're going to have to add an [2139] API key your question is probably Nick [2141] how the hell do I do this the good thing [2143] is naden is very gratuitous and [2145] forthcoming with documentation so if I [2147] didn't know how to do this I would [2148] actually click on this button open [2150] docs go down over here and then I would [2153] look through to see how to do this [2155] documentation sorry how to do this [2157] connection and just because I want to [2159] show you guys like I know how to do this [2161] connection but I want to show you guys [2162] if I didn't know how to do this [2163] connection um how i' how I'd approach it [2165] I would literally follow the [2166] documentation one by one by one so to [2169] generate your API key log into your open [2171] a account or create an account so I [2172] already have an opena account I'm just [2174] going to go platform. [2177] open.com that's how you get sort of like [2179] their main [2181] API from here let's go back to the docs [2185] open your API Keys page as you can see [2187] there's even a button there it says API [2189] keys so I'm actually just going to go um [2193] API D keys because that's the link that [2195] they just gave me a moment ago right so [2197] I'm going to paste that in it's now [2199] going to take us to our API key page [2202] next up what do it say create create new [2205] secret key to create an API key [2206] optionally naming the key and then copy [2208] your key and add it as the API Key 9 [2209] that sounds simple create new secret key [2212] YouTube example awesome and then going [2215] to create my secret key we now have a [2218] secret key that I can copy so I'm just [2220] going to go back to nadn and then paste [2221] in my API key boy is that a long API key [2224] great now we're going to save and as you [2227] see it says credential successfully [2228] created this credential is currently [2229] private to you now one thing that I [2231] didn't cover when I created the [2232] credential to the Gmail was you can [2234] actually rename these credentials to [2235] make your life a little bit easier so [2236] I'm just going to call this [2238] YouTube so now I know that this is like [2240] my YouTube example and obviously I could [2243] have much better naming conventions for [2244] this stuff but sum me cool connection [2247] test tested successful we're good to go [2248] we can now exit out of this and we have [2249] now connected to the credential um with [2252] the API key meaning this is now hooked [2254] up just like we can now uh previously we [2256] could get all our Gmail information in [2257] nadn now we can get all of our open ey [2260] information in [2262] nadn okay great so a variety of fields [2264] here like text assistant image audio [2267] file custom API call I'm just going to [2268] stick with text because I just want to [2269] talk to the model over text operation is [2272] going to be message a [2273] model model we get to choose from a list [2276] now as of the time of this recording the [2278] most popular model just scroll way down [2281] here is GPT 40 this one but I'll be [2285] honest these models change pretty quick [2286] so by the time of this uh by the time [2288] that you are watching this might be a [2289] couple days after I recorded this might [2291] be a couple months the model's probably [2293] going to be different um I would just [2294] head on over to like open ai's model [2298] page and then I just look to see what [2300] the current recommended one is the [2301] flagship model for instance as you see [2303] GPT 40 is kind of like in the driver's [2305] seat here um has a bunch of data on it [2307] um and I just sort of use that to to I [2309] guess guide me if you're using another [2311] service then um you know it won't be in [2313] the exactly the same place but I think [2314] you guys get the [2315] idea okay great now we can Define our [2318] prompt you know when you talk to chat [2319] gbt and you say hey I want you to do [2321] this thing well there's actually a term [2323] for what you just did you prompted chat [2325] GPT and specifically you did so using a [2329] user prompt you're the user so that [2331] makes sense basically the user prompt is [2334] what you want chat GPT or want in our [2336] case GPT 40 to do for us but there's [2339] actually one other prompt that you don't [2340] really get unless you're using um a no [2342] code tool like this it's called the [2344] system prompt this is used to set the [2345] model's Behavior or context for the next [2347] user message so we're going to click on [2349] system first and the way that the system [2351] prompt works for AI is the system prompt [2354] tells the model how to identify so [2356] basically I'm saying Hey I want you to [2358] identify as uh you know world class uh [2361] philosopher I want you to identify as a [2363] PhD in genomics I want you to identify [2365] as a helpful intelligent writing [2367] assistant and however you you put your [2369] system prompt the better it'll be at [2371] that specific thing more generally it's [2374] a little bit of nuance there I'm not [2375] going to go into it too much but in my [2377] case I'm just going to say you're a [2378] helpful intelligent email writing [2380] assistant then I'll go period so that's [2383] what the system prompt is now we're [2384] going to click add message and then the [2386] next prompt I'm going to do is a user [2388] prompt if I click on Roll though you'll [2389] see there's also an assistant prompt [2391] this is pretty interesting what what you [2392] can do with the assistant prompt is you [2394] can pretend that the assistant has [2396] actually already said something in your [2397] chat chain if you want it to act a [2399] certain way you can give it examples of [2401] how you want it to be anyway in my case [2403] I'm going to do something very simple [2404] I'll go user then I'll say your task is [2407] to customize an email using the [2410] following [2411] data now I'm going to go enter enter [2414] this is going to make this stretch set [2415] I'm actually going to open this up a bit [2417] more then I'm going to go um and I'm [2420] going to drag this first name in [2422] here you see when I drag the first name [2425] in here something changed we just went [2426] from fix fixed to expression why did we [2430] do that well basically fixed is almost [2432] always just going to be static text okay [2435] we don't want static text we actually [2436] want to uh connect a variable from a [2439] previous node into this open AI module [2442] or open AI node call so I'm going to go [2444] back to expression to show you guys how [2446] this works all you need to do if you [2448] want to connect the input of the [2450] previous node into the current node is [2452] just drag it and then drop it where you [2454] want it so now this is popular [2457] ating the um result is populating with [2461] the actual data from the test if we zoom [2463] in way here you can actually see it says [2464] result your test is to customize an [2466] email using the following data then in [2468] green it says Nick here it says curly [2470] curly dollar sign JSO n with a square [2473] bracket like this is really intimidating [2475] and scary well this is just the code [2477] representation and this is the actual [2478] thing that just got populated okay so [2481] that's how we're going to do this I'm [2483] going to say first [2485] name and then Nick then we're going to [2489] go last name and I'm just going to go [2491] and drag last name in [2494] here I'm going to go email address and I [2498] think I might have just deleted that so [2499] let me just do this one more time last [2501] name [2502] beautiful email address Nick left [2506] click. phone [2509] number drag this puppy in [2512] here cool that looks pretty good to me [2516] and now what we're going to do do is I'm [2518] going to click I'm going to leave [2519] simplify output um as [2522] is then I'm just going to write my email [2524] template so I'm going to go down here [2525] and go email [2527] template hey [2530] name let's go first [2533] name how are you thanks for submitting [2538] your [2539] request your brief or onboarding form [2543] moment ago I see here your number is [2546] number [2548] let's do phone number I'm just putting [2550] this text into the AI sort of like knows [2552] what to fill in if you think about it [2554] has the first name over here and if you [2555] think about it I could just filled all [2556] this stuff in procedurally but I'll show [2557] you why I'm doing this in a second we're [2558] actually going to like level up the data [2560] to make the customization a lot more [2562] valuable um I see here your phone number [2564] is blank and your email is [2567] email could you let me know if I'm [2570] missing anything thanks neck okay great [2575] so now what I'm going to do is remember [2576] how we pin the data before all we need [2579] to do in order to test the step now is [2581] we just go up here top right hand corner [2582] click test [2584] step you test the step is actually [2586] sending this whole thing to Ai and now [2589] we have a bunch of content it's a [2591] subject Welcome to our program back sln [2594] back sln if you guys are unfamiliar with [2596] what the back slns mean here back sln [2598] just means um like a new line so this is [2600] trying to write us a whole email and [2601] it's doing so with new line characters [2603] instead of new lines just cuz AI has no [2605] real way of like creating a new line [2607] um without this so this is basically [2609] just a new line character hey Nick how [2612] are you thanks for submitting your [2612] onboarding form a moment ago I see here [2614] your number is 64500 5000 and your email [2617] is Nick left click. could you let me [2618] know if I'm missing anything thanks Nick [2620] that's pretty neat why don't we just pin [2622] this [2623] output and why don't we hook this up now [2625] to another email [2627] module and just to show you guys how um [2630] useful it is to know a little bit of [2633] like NAD and Hoot keys if you just go [2635] back to the previous email module we had [2637] if I just hold command and C same thing [2639] as right clicking and pressing copy see [2641] the copy to click boo event just came [2642] down and actually just paste this and [2645] I'm basically now just pasting the same [2647] module I had before and then I'm [2649] connecting it to the output of the open [2651] AI module and you'll see here this is [2653] now accessible to us as input the [2655] content is which is pretty cool right [2658] I'm noticing actually that this includes [2659] a subject line I don't like this so why [2661] don't I go back to AI then I'll just [2664] tell it don't include this subject line [2667] let's do that and let's test it let's [2669] unpin Let's test the data and now that [2673] it doesn't include the subject line [2674] let's pin it again let's go back to our [2676] next module or next node I should say I [2678] keep on using the term module because [2679] I'm big on make.com it was kind of the [2681] major no code platform I learned and uh [2684] make.com always uses the term module for [2687] everything that and it end uses the term [2689] node for anyway now I'm going to drag [2691] this content field to the [2693] message and as you can see it's already [2695] populating with the email [2697] I'm going to say re your [2700] onboarding form and I'm going to test [2703] this the connections already set up all [2706] of the rest of the parameters are set up [2707] everything's set up because remember all [2708] we did was we just copied that module [2709] with all of the settings in practice I [2711] find I copy modules a lot okay great now [2714] going back to my email you see we have [2715] rear onboarding forms I'm going give [2717] that a click now it says hey Nick how [2719] are you thanks for submitting your [2720] onboarding form a moment ago I see here [2722] your number is 6045 5000 and your email [2725] is nickle hook. can you let me know if [2727] I'm missing anything thanks Nick the [2728] reason why this is sort of like an AI [2730] example right now is because we actually [2732] just used AI to like format to to write [2734] this email for us but if you think about [2735] it what we've done so far is we haven't [2737] really done anything that you can't just [2738] do by dragging and dropping the first [2740] name into the email module instead so [2742] next up I want to do something that's a [2743] little bit more creative uh I want to do [2745] something that paraphrases what a person [2747] said or summarizes it and in order for [2749] me to do that I'm going to have to go in [2751] and I'm going to have to change the way [2752] that the form was a second ago but any [2754] who we've now done a different Hello [2755] World example basically um the hello [2757] world example we just did was instead of [2759] a manual trigger of us just clicking [2760] test step we now have a form that [2763] triggers this so let me make a couple of [2765] adjustments to the flow and then we'll [2767] actually run through the form one final [2768] time and we'll see what it all looks [2769] like when we put things [2770] together the adjustments I want to make [2772] to this form I don't just want to ask [2774] for all this [2776] information I want to ask for um let's [2779] say design [2781] preference I'm going to add a drop-down [2783] item and I'm going to say sleek [2787] I'm going to say um [2789] minimalistic I'll say [2792] luxurious then over here I'll say [2796] playful then I'm going to add another [2797] form field I'm going to say give us a [2800] brief description of your brand or maybe [2803] we'll just say um brand [2806] description my [2809] brand or maybe we'll do company [2813] description and I'll say left click is a [2818] um left click builds growth systems for [2822] B2B agencies and creative teams enabling [2825] them to scale without having to manually [2829] reach out to prospects let's just do [2831] something like that we'll make that [2833] required now what's one more thing that [2835] I could do that might be new [2838] H we'll ask [2841] it timeline and we'll say how quickly [2846] let's say uh 3 to 6 weeks there you go [2848] we'll go required field awesome okay so [2850] now I'm going to click test the step [2851] it's going to overwrite the pin data but [2853] now it's going to open up our form and [2854] it's going to have way more information [2856] here right so I'm going to go Nick sarf [2858] nickl [2861] click. um design preference I want my [2863] website to be minimalistic company [2865] description left click build Sleek [2867] growth [2868] systems High performing grow [2873] systems for B2B agencies and creative [2876] teams and then the timeline is I want [2878] like 1 to two weeks okay let's get [2880] started awesome fantastic we now have [2882] all the information that we need in the [2884] output panel here I'm going to pin this [2886] data to make it accessible to subsequent [2888] moduls now I'm just going to go in here [2889] and edit the prompt a little bit and if [2892] you think about it I don't just want to [2893] edit it with you know information about [2895] the the name and stuff like that that's [2896] not super relevant to me what I want to [2897] do [2898] instead is your task is to is to [2901] customize an email template using the [2903] following [2904] data let's just add in more information [2907] here let's go design [2909] preference drag this puppy in I want to [2912] give it more data to do the [2913] customization [2917] with down here I'll go timeline we go [2921] one to two [2922] weeks okay great and so basically [2924] instead of what I had before which is [2925] hey first name how are you thanks for [2926] spting your onboarding form a moment [2929] ago I loved reading [2934] about thing about company [2937] Let's [2940] do let's go paraphrase company [2944] description I see [2946] here that you're looking for design [2954] preference a design preference sort of [2959] site and you're looking to have it done [2969] would you mind confirming your number [2973] for me one last time I'm going to say [2977] formatted phone [2979] number right also okay and obviously [2983] they know the email because we're [2984] sending it cool this looks pretty good [2987] to [2987] me don't include the subject line let's [2990] actually give this thing to go now let's [2991] click test step we're going to feed all [2994] this data in let's see what our email [2996] looks like like hey Nick how are you [2998] thanks for submitting your onboarding [2999] form a moment ago I loved reading about [3001] how left click build High performing [3002] autonomous growth system for B2B [3003] agencies and creative teams I see here [3004] you're looking for a minimalistic sort [3005] of site and you're looking to do it [3006] within one to two weeks would you mind [3007] confirming your number for me one last [3009] time 604 700 5000 right you let me know [3012] if I'm missing anything thanks Nick so [3014] basically what we've done is we've um [3016] taken in some of the information here [3018] and then we've paraphrased it um I guess [3021] in this case we didn't actually [3022] paraphrase this looks like an exact one [3024] for one h [3033] cool okay great let's test this one more [3035] time just to make sure that we got a [3036] personalized but customized thing that's [3041] paraphrased cool looks pretty good um [3044] what I'm going to do now is I'm going to [3045] go down to our Gmail [3047] module take the data I'm going to test [3051] it we've now sent an email and we should [3053] have received another one called re your [3055] onboarding form this is the customized [3057] email which looks pretty nice and sexy [3060] and now that we figured out how to do [3061] this testing one by one by one why don't [3063] we actually test the whole thing from [3064] start to finish okay let me just um yeah [3067] let's actually just run this whole thing [3070] so I'm going to go down to the bottom [3072] instead of us testing the module one by [3074] one which is where we click on it then [3075] we click that test step we're actually [3076] going to test the whole workflow so I'm [3077] going to click test [3078] workflow it's using the pin data it's [3081] running [3082] through uh we don't actually want to pin [3084] the data so I'm going to click unpin [3086] okay now it's time to test out this flow [3088] I'm just going to go back to the form [3089] submission and I'm just going to do a [3090] little bit differently to how we did [3091] before I'm actually going to copy this [3092] form you all myself click test workflow [3095] any let me exit out of that and I'll [3097] show you guys you guys can actually just [3098] test this from anywhere I'm just going [3099] to go back here open up an incognito tab [3101] paste it in and this is the same input [3103] now right so I don't know Nick um [3106] sarif uh we'll go Nick at left click. [3110] we'll do phone number then design [3112] preference minimalistic company [3114] description NY Donuts sell Sleek [3117] high-end [3119] donuts with a creative [3122] TL we're big on uh I don't know let's [3126] do our favorites are [3130] chocolate [3132] and pink sprinkles or something uh [3135] timeline would be like 3 weeks or so [3139] then I'm going to click let's get [3140] started it's now going to submit it and [3142] I just wanted to show you guys this is [3143] like a live form like you can you can [3144] use this anywhere you want to test this [3146] thing you you don't have to just like [3147] click that button um what just happened [3148] in the background was these just went [3150] green green means that you know the the [3151] the flow has now been completed um and [3154] that node has been done so this node [3157] completed this middle node completed and [3158] that last node completed that means that [3160] if I go back to uh my page here I should [3163] be able to see set input so hey Nick how [3166] are you thanks for submitting your [3166] onboarding for a moment ago I love [3167] reading about how NYX Donuts I'll Sleek [3169] high and donuts with creative twirl I [3170] see you're looking for a minimalistic [3171] sort of site you're looking to do it in [3172] about 3 weeks or so um you know the data [3175] here was different we're parap raising a [3176] fair amount which is pretty cool would [3178] you mind confirming your number for One [3179] Last Time 604 500 5,000 right could you [3181] let me know if I'm missing anything [3182] thanks Nick very cool very [3184] cool okay beautiful so that's the uh [3188] second example here with form fill and [3190] some AI autoresponder um worth noting [3192] here that our a autoresponder sent [3194] something immediately but you can also [3196] use a delay like hypothetically if [3198] somebody fills that out you don't really [3199] want to send it immediately so why don't [3200] we just cap this off with like a quick [3202] like 120 second delay to connect it um [3206] all we do is we drag we exit um both of [3209] these connections we drag this over here [3212] and then we drag that over there and now [3213] basically we have um the form submission [3215] coming through AI then figures out what [3217] it wants to say we wait for 120 seconds [3221] and then we send the Gmail pretty NE [3222] right cool so big fan of that flow um [3225] you can manipulate and you know improve [3227] that flow however you want obviously [3229] this paraphrasing here was pretty [3230] lowlevel in week but you could do a ton [3231] of things you could ask it to generate [3233] you a list of questions to ask the [3234] onboard e for instance you could um have [3238] it uh I don't know suggest a bunch of [3241] actions based off of some form Fields [3243] there's a lot that you could do when you [3245] want to make the flow production ready [3247] or live you'd have to click on [3249] production URL this would then be the [3251] form that you would use instead of the [3252] test one then you'd have to activate [3254] your Flow by clicking this button up [3255] here in the top right hand corner so now [3258] basically any time that uh the [3260] production form URL is filled out we [3262] will fill out this flow and then send an [3264] email which is kind of neat right [3267] not saying that this is what you guys [3268] should do right now I just wanted to [3269] show you guys what that process looks [3271] like when you actually activate a module [3273] or a node or [3274] workflow okay great now let's use one [3277] final example to show you guys and level [3278] this up a little bit show you guys how [3280] you might actually use this in a real [3281] business flow so maybe instead of an [3283] onboarding form which is kind of a [3284] contrived example here instead we have a [3285] calendar booking what we want to do is [3287] when somebody books on my calendar um I [3289] want to reply to them and I want to make [3290] it seem like it's a personalized reply [3292] then after that I want to add a new rad [3294] to my CRM where I'm storing all this [3295] data okay okay so there are going to be [3297] a couple of moving pieces here um and [3299] I'm just going to keep everything very [3300] light but I'm also going to walk you [3301] through the process step by step first [3303] of all I have a cal.com [3305] setup Nick D left click internal so you [3309] can book internal calls with me if [3311] you're on my team using this calendar as [3313] you can see 1:30 p.m. is open what I [3315] want to happen is when I give this a [3319] click I basically want to use this to [3322] trigger a flow that immediately sends [3324] them over an email and it's an email [3325] from Nick it's an email from me saying [3327] hey you know just saw you booked it in [3329] really looking forward to chatting with [3330] you it's going to substantially improve [3331] the perceived personalization of this [3333] flow it's going to make people think [3334] that I'm paying private and and [3336] one-on-one attention to them which is [3337] great then what I want to do is I want [3339] to take that data and I want to use it [3340] to fill in a row inside of my CRM I'm [3343] using a um thing called clickup here for [3346] my CRM sorry wrong account let's go over [3348] here I'm using um a Crum called clickup [3351] clickup is a fantastic high quality Crum [3353] that allows you to do a ton of stuff um [3355] but for the purpos of this example I'm [3356] just going to be filling in this [3358] creative agency template CRM that I set [3361] up a while ago basically what I want to [3362] happen is when somebody fills out the [3365] calendar booking I want to add them over [3367] here to this meeting booked um status so [3369] that I have their first name their last [3371] name their email address some other [3372] information about them company oneliner [3375] maybe some meeting URLs let's actually [3377] get to like business uh flows now [3379] because I think honestly after like an [3381] hour you guys know more than enough to [3382] do it and let me show you guys what an [3384] actual automation build for something [3385] like this NN would look like okay great [3388] so the very first thing we have to do is [3390] we just have to set up our trigger here [3392] so I'm going to go over to three NN [3395] examples and then I'm going [3398] to just going to remove this on form [3400] submission trigger reason why is if you [3402] have um triggers in nadn um when I test [3405] the workflow it's going to test the the [3406] other trigger so we just need one [3408] trigger per flow I'm going go down here [3410] and what I want to trigger is I just [3412] want to see if there's a cal.com node [3415] cal.com is the service that I'm using [3417] the variety of other ones there's Kenly [3418] as well which I know many people use [3420] very popular but I'm going use cal.com [3421] and what I want is my trigger is I want [3423] on booking [3424] created so I have uh credentials that I [3427] can add here what I'm going to do is [3428] I'll go create new credential and then [3430] you can see here I need to find my API [3432] key for um cal.com there's also a bunch [3434] of docs over here in my case I know [3437] where my docs are you can see that I [3438] have YouTube NN example expires in 24 [3441] days I'm just going to delete that I'll [3442] make a new one [3446] then I'm not going to have it uh sorry I [3448] am G to have it expire just in case my [3451] silly brain forgets to update this I'll [3453] save I'm going to copy this I'll go back [3457] here to my API key I'm just going to [3459] paste that in the host is autofilled [3460] it's always api. cal.com so don't worry [3462] about that then I'm going to click save [3464] this is now going to successfully create [3465] my credentials I'm now going to go over [3467] here type YouTube just to make sure that [3468] I I name it right and everything I'll [3470] save and test it one more time exit out [3472] okay so the variety of events that I [3474] could use here the one that I'm going to [3475] want is it's called booking created but [3477] I want you guys to know you could also [3478] trigger a flow like this when a booking [3479] is canceled you do it when a booking is [3481] rescheduled when a meeting is ended even [3483] you also have some options here um which [3485] are a little bit more advanced I'm not [3486] going to get into all them but [3488] essentially these all to set like [3489] metadata and other um payloads and and [3492] and stuff like that for more advanced [3493] flows where you need to tag people and [3495] know where they're coming from and that [3496] sort of stuff anyway so what I'm going [3498] to do is I'm going to click test step [3500] when I do it's now listening for one of [3502] my bookings so I'm going to go over here [3503] to internal actually you know what I [3505] think I have a a better [3507] one um instead of internal don't I have [3511] one that's [3513] for Discovery calls it's probably a [3515] little bit better yeah let's do that so [3518] I'm going to go in and I'm going to book [3519] a meeting with myself uh I'm going to [3521] pretend my name's Peter Jackson and my [3524] email address is just going to be my [3527] longer email address here I'm going to [3529] fill in my gross monthly Revenue at 20K [3532] and for additional notes I'll say I'm a [3534] big fan of your YouTube channel and [3537] would love to know more about how I can [3540] grow past 20K then I'm going to click [3543] confirm after I click confirm I'm just [3545] going to open up this page again because [3546] I want to watch the event come in live [3548] and as we see the event did indeed come [3550] in live we have a ton of fields here [3551] trigger event created at Booker URL type [3554] title oh my God does it go on and on and [3556] on and on because remember at the [3557] beginning of this and we were just [3558] getting started with a simple flow I was [3560] like sometimes calls have a lot of [3562] fields well this note out put a ton of [3564] fields so what I'm going to do to make [3566] sure I don't lose this is I'm going to [3567] pin this and then what I want to do is I [3570] want to feed [3573] this into I don't know where my event [3577] went all right cal.com trigger let's [3578] just drag this all the way down here [3580] let's Zoom way in again what I want to [3582] do is I want to feed this into a Gmail [3584] node now if you guys remember my [3585] previous hack was just going to the [3587] Gmail node selecting it command C [3590] command V very [3593] clean and then I'm going to go double [3595] click on this I have all the data [3597] accessible to me and now instead of this [3599] I'm just going to say re recent meeting [3602] and then I'm just going to say hey [3604] Peter instead of just text why don't I [3607] do an HTML email just to show you guys [3608] what this might look like if you want to [3610] write an HTML email a couple things you [3612] have to know a new lines are this [3615] BR so if you want to add two new lines [3617] you'd go br br hey Peter just saw you [3622] booked booked a and let's go type [3627] let's drag this over here [3630] blank [3632] call looking forward to learning more [3635] about you slthe business then I'm going [3639] to say br [3641] br thanks BR [3644] Nick so when I send this email via HTML [3647] it'll say hey Peter new line new line [3649] that'll be two lines just saw you booked [3652] at just saw you booked a discovery call [3655] looking forward to learning more about [3656] you slthe business then it'll go new [3658] line new line then it'll go thanks then [3660] it'll go new line then it'll go neck in [3662] terms of um you know what this looks [3665] like let's see if we could customize [3666] this a little bit more maybe I'll go REM [3669] meting with and then I'll grab the first [3671] name [3672] in so I say REM meeting with Peter [3676] perfect and in terms of the email [3678] address I'm going to be sending this to [3679] I'm not going to hardcode this at [3680] Nicholas SF now I'm actually going to [3681] enter in Peter's email which is [3683] apparently going to be this value key [3685] which will always say Nicholas gmail.com [3688] with this [3689] example um and then I think at this [3691] point we've now filled out everything [3693] right send htma Yep looks good let's [3695] actually test this send myself an email [3698] and we've now received a um status of [3700] sent which is [3701] cool so you can see I've received two [3703] emails the first was um cal.com letting [3705] me know that I just booked a meeting [3706] with Peter and the second one is the [3708] email that I'm supposed to be sending or [3710] receiving as Peter hey Peter new line [3712] new line just saw you booked a discovery [3714] call looking forward to learning more [3715] about you the business new line new line [3717] thanks Nick that's pretty sweet right [3719] looking forward to um that conversation [3721] with Peter but I got to be honest I [3723] think that we could probably customize [3724] this a little bit better I don't really [3726] like the way that this is um so small [3728] and minimal so why don't we do a little [3729] bit of like um date customization you [3732] guys see on the left hand side here [3733] there's a start time and an end time [3734] well this is in a very particular format [3736] datetime format that we can convert into [3738] natural language instead of this how [3740] cool would it be if we could say hey [3741] looking forward to our chat on Tuesday [3743] on Saturday on Wednesday [3748] CU and what I'm going to do is I'm going [3750] to drag in the start time [3752] here and what you'll find is because of [3755] the format of NN which can be a little [3757] bit intimidating if you're not familiar [3758] with it we have these curly brace curly [3761] brace a dollar sign Json Dot and then [3763] the variable name start time well the [3765] cool thing about an is if I put a period [3767] here I can actually do a ton of stuff [3769] with this like I can do a ton of stuff [3771] with this what I want to do is I want to [3773] convert this to a date time then I want [3776] to format this and the way I want to [3779] format this is I want to format this as [3781] a date so I don't go [3784] DD no M A sorry there's a specific date [3790] time uh [3792] formatting key thing here so I'm going [3794] to read the formatting guide really [3795] quickly and we're just going to find out [3797] how to say like Monday or Tuesday or [3800] something okay see this so it's cccc [3803] looks like so that's the token that I'm [3805] going to use or maybe it's E I don't [3807] know let's try both we'll format as [3810] e awesome see you Friday perfect you see [3813] how um that we're sort of just like [3814] iteratively developing or iteratively [3816] editing this and it ends really cool [3818] because it actually shows you the value [3819] of the thing that you are currently [3820] manipulating down here so the purpose of [3823] this is not to have me for me to expect [3825] you guys to know how to do any of this [3826] date uh formatting for now I just wanted [3828] to show you what might be possible with [3829] a little bit more complex JavaScript and [3831] Json formatting down the line This dot [3834] notation is really valuable just allows [3836] you to very quickly manipulate things in [3838] my case I called this variable json. [3840] starttime I then converted it to [3842] something called a datetime variable [3844] then I formatted it as a day of the week [3846] and that's why it says Friday okay great [3849] so now that I have that let's test this [3851] flow let's just double check that Friday [3853] was formatted well everything looks good [3856] to me and now let's move on with that [3858] last part of our example which is going [3859] to be taking this and using it to update [3861] uh my CRM which is clickup so I'm going [3864] give this a click give this a click up [3866] and then I'm going to go click up what [3870] I'm going to do next is I'm going to [3872] scroll all the way down to tasks what I [3875] want to do is I want to create a task [3878] okay great now we have the ability to [3879] choose our credentials so if I go to [3881] create a new credential you can see that [3883] it asks me to connect my clickup account [3884] I'm going to click connect it'll now say [3886] do you want to connect with NSM I'll say [3889] yes the window can now be closed [3892] beautiful and why don't we do that one [3894] more time we'll call this YouTube [3896] click [3897] save awesome now I'm going to exit out [3899] of this and now we have access to the [3901] credential for for YouTube for my [3903] clickup account so basically if you guys [3905] remember what I wanted to do a moment [3906] ago was every time a new calendar [3907] booking comes in I want to add a row to [3909] this meeting booked um space and I want [3912] to say Peter Smith person's first name [3914] um status we don't have the project type [3917] or email or company name or anything [3918] like that unfortunately so I'm just [3920] going to leave most of this out why [3921] don't we just um hide these columns for [3924] now but but I just want to show a proof [3926] of concept to show you guys that we can [3928] indeed get the data in and we're going [3929] to put the meeting URL here as well [3930] which is going to be [3932] nice and future videos we show you guys [3934] how to build crms like this and connect [3936] them um using [3937] naden okay awesome so now let's head [3940] back over to this clickup module or [3941] clickup node rather and uh we'll go [3943] operation create what I want to do is [3944] create a task the team name is NSM it'll [3947] go and it'll find the space name which [3949] will be template creative agency it'll [3951] find the folder name which is CRM the [3953] list name will be sales I know this [3955] because if I look on the right hand [3957] side right this is NSM this is my [3960] template creative agency this is my CRM [3961] folder this is my sales list so I'm just [3963] going down top to bottom and connecting [3965] them then we'll have a name here and [3967] I'll be able to add the name now what do [3969] I want to be the name the reason why I [3971] picked this as an example is because [3973] we're going to be manipulating data from [3975] a node that's not just the previous node [3976] but it's actually a couple nodes back [3978] now and as you can see this previous [3979] note here all we have access to are a [3981] bunch of Gmail things right ID thread ID [3983] labels label ID if you want to go one [3985] step back what you have to do is you [3986] have to open up this cal.com [3988] trigger so basically what we have here [3991] is at the very bottom this is the very [3993] first node that we executed this trigger [3995] this is the second node we executed the [3997] most recent node is always going to be [3998] on the top and then every node that's [4000] connected to the the previous node um is [4002] just going to go lower and lower and [4004] lower and lower so if we had a 20 node [4005] flow for instance the very first node in [4007] our flow would be down here second would [4009] be here third would be here working all [4011] the way up until the final most recent [4013] one or the previous one up at the top [4015] but anyway now I want to access data [4016] from my c.com trigger so that is two [4018] nodes back so it's not going to be um [4021] you know immediately behind us but we [4022] could still open and access stuff as [4024] needed what I want to do now is the name [4026] of this record if you think about it I [4027] want it to be the first and the last [4028] name of the person I just wanted to say [4030] Peter Jackson so I'm going to go here [4032] Peter and you'll notice that the syntax [4034] here changed pretty substantially but [4036] we'll cover that later then I'll go [4037] space and then last [4039] name so now it says Peter space Jackson [4043] That's the name of the record okay [4046] so why don't I why don't I do this why [4047] don't I go back to my Gmail let's just [4050] pin this not that it matters I'll go [4052] over here what I want to do is I just [4054] want to test the step and show you guys [4056] what it looks like when something gets [4057] updated in my clickup you guys see that [4059] Peter Jackson was just added how cool is [4061] that we've now just bridged the Gap and [4063] we've added Peter Jackson who was [4064] previously inside of nadn whose data we [4066] got from click uh from cal.com which is [4068] a totally different software platform [4070] and we put it in clickup but you'll [4072] notice that you know a couple things are [4073] off here I want to make the status [4075] meeting booked and then I also want to [4078] fill out this meeting URL so in order to [4080] do this with clickup what we have to do [4082] is we have to go and we have to fill out [4083] what's called a custom Fields Json this [4085] is kind of annoying to do in clickup to [4087] be honest um I wish that there was an [4088] easier way to do this uh maybe at some [4091] point in time clickup will provide an [4093] easier way to do this through their API [4094] but hey what are you going to do so in [4096] order to do this what we have to do is [4097] we have to go down here to where it says [4100] add um additional Fields rather what we [4104] have to do is we have to number one set [4106] the status name manually we have to set [4109] it to meeting booked okay and we also [4111] have to go over here and add custom [4112] Fields Json now this is pretty annoying [4114] to do unfortunately in um n8n we have to [4118] basically figure out what the ID of the [4121] field is before we fill it out and then [4123] in order to do so we also have to do um [4125] use this format with like a square [4126] bracket then a space left curly bracket [4129] quote ID quote um colon space quote [4133] quote then inside of there we'll have [4134] the ID then we we have the value which [4136] is the thing we're going to fill it in [4137] with sometimes you have to do this I [4139] know the ID already um so I'm just going [4141] to paste that in and then I'm just going [4143] to paste in the rest of this as well for [4147] Simplicity in this case um I'm just [4149] going to go expression go back here ID [4152] will be this and then the value is going [4155] to be the meeting URL so what I'm going [4157] to do is I'll go here I'll go [4159] meeting maybe I'll go URL There You Go [4162] video call URL I'm going to drag this [4164] over here here between these two quotes [4168] Okay so now if you look at the Json that [4170] I'm sending it is now uh in the right [4172] format that uh clickup is requesting [4175] don't worry too much about the code [4176] aspect of this I put this in here just [4178] to show you guys that like there is some [4179] knowledge that will make it a lot easier [4181] for you to do specific things that you [4182] want to do for instance if you didn't [4184] know this it would probably take three [4185] or four more nodes in order to get there [4187] and that's okay um everybody needs to [4188] start somewhere but in future videos as [4191] we cover all of the different functions [4193] and Dot notations of nadn um stuff this [4195] sort of just adds fuel to the fire okay [4197] great so now I'm going to test this one [4199] more time we'll go back to click up and [4203] we'll see what we just did we just added [4204] Peter Jackson except now we've done so [4207] with the status that's say meeting book [4208] and also with the meeting URL of the [4209] call that we're going to have so in this [4211] way we've created a very simple flow [4214] that when a new cal.com meeting comes in [4217] we reply with an email and then [4218] immediately after we log it in our CRM [4221] this sort of thing is crazy effective [4224] for small to mediumsized businesses a [4226] lot of them lack organization and they [4228] don't really understand how to do these [4229] sorts of connections well the great news [4231] is you can now you know assuming that [4232] you you've built this out on your own [4234] and I highly recommend you build [4235] alongside me you can now do this sort of [4237] thing not just for clickup but for any [4239] CRM out there and not just for calom but [4241] for any calendar booking platform out [4243] there at the end of the day they all [4244] they're all more or less the same [4247] awesome so the last thing I'm going to [4248] do I don't call any build done until I [4250] test it end to end so I'm just going to [4252] remove the pin data here sorry got to go [4255] up here top right hand corner click [4257] unpin then click unpin then what I'm [4260] going to do is I'm going to test this [4261] workflow from start to finish on actual [4264] data if we double click on this it's [4265] listening for a test event so we have to [4266] actually go fill it out I'm go back to [4268] my calendar now I'm just going to make a [4270] second test booking at like a slightly [4271] different time let's open up a tab here [4273] and let's do it uh we'll go 2 p.m. this [4276] will still be Nick well let's say Sally [4279] oh what did I say lozenge or something I [4281] forget what her last name was I think a [4283] lozenge is the thing you put in your [4284] mouth you are [4286] sick okay anyway [4289] confirm this is now going to go through [4291] the booking flow go on my calendar [4293] apparently book me uh and then if we go [4296] over here you'll see that we just pulled [4297] in the data with Sally lozen apparently [4300] if we go to our clickup we'll go down [4301] here and we'll see Sally lozen was now [4303] put in which is pretty neat so yeah um [4307] that's that for our third NN example and [4309] just to cover things what we did here [4311] was we didn't just learn how to use an [4313] app trigger like cal.com do do an API [4316] connection using an API key um you know [4319] send emails and stuff but we also learn [4320] how to reference data a couple of nodes [4322] back which is very important um and [4324] ultimately you know most of the complex [4325] fls that have value will be you [4327] referencing data from all over the [4328] freaking place not just the previous [4330] node so I hope that this makes sense [4332] what I'm going to do is I'm going to [4333] save this um and I'll make this [4335] accessible for you guys to play around [4337] with note that we do not have the [4338] trigger nodes in this that's okay you [4340] guys now if you've made it to this point [4341] of the video know everything you need to [4342] know to get to the same point um future [4344] videos as I mentioned are going to be [4345] covering a lot of the more code oriented [4348] stuff that I just did here for that last [4350] section with the IDS and the Json and [4352] the dot notation in detail just so you [4354] guys can add fuel to the fire and you [4355] know get a lot more competent with nadn [4357] and no code in general I hope you guys [4359] appreciated this first Deep dive into [4361] practical building with nadn uh future [4363] videos are going to be a lot more of the [4364] same and we're also going to start doing [4366] things like n AI agents in nadn very [4368] quickly if you guys have any suggestions [4370] for future videos feel free to drop them [4371] below I get a lot of my ideas from my [4373] audience at this point aside from that [4375] leave a comment um like do all that fun [4377] stuff from the YouTube algo and I'll [4379] catch you on the next one cheers

Video: https://www.youtube.com/watch?v=XlYQa0GgfaU
Title: 5 More Automations You Can Sell Today for $1,500 (Or $10,000)
[0] hey my name is Nick I scaled my [1] automation agency to 72k a month with 1 [3] VA and the entire way that I was able to [5] do this was selling the right systems as [7] an automation agency there are a ton of [8] systems that you theoretically can sell [10] but not a lot that I think you [11] realistically should sell if you want to [13] make multiples in your time so the [14] purpose of this video is to show you [16] five more automations that you guys [18] could sell today for between $1,500 to [21] $10,000 I built all these systems using [23] a mixture of N and make.com and we going [26] to be including all the templates Below [27] in the description so feel free to [29] repurpose them use them for whatever the [30] hell you want if that sounds good to you [32] let's get into [34] it all right so I'm going to be showing [36] you these systems in a second I've built [38] them out in n8n and then I've also build [40] a bunch out in make.com you guys are [41] going to get to see both but just before [43] I show you guys the actual systems I [45] just want to talk a little bit about [46] what makes a highy automation a high [48] automation to begin with and the reason [50] why we need to cover this if you think [51] about it is because our industry moves [53] really quickly AI is a very [55] intrinsically fast-moving sort of [57] technology so is a lot of these [58] automation platforms that we're using [60] and while learning specific systems is [62] great you know if you think about it the [63] systems that I and you are going to be [65] selling today are not necessarily going [67] to be the same ones we're going to be [68] selling a year from now because business [69] needs are going to change they're going [70] to be new software platforms that solve [72] these problems um and so what's [74] important is not necessarily learning [75] the exact systems uh but the underlying [78] principles that enable you to choose [81] good systems to sell in the future so [84] briefly uh there are three components to [86] a great High Roi automation the first is [88] it needs to be something that produces a [89] clear clear deliverable clear [91] deliverable in this case is a document [93] it's an email it's a CRM it's a line [95] item I said email twice there sui uh Etc [98] essentially this is something that like [100] the customer can actually touch and feel [102] or can get us close to it while [103] interacting with a computer the reason [105] why and I'm going to cover this in a lot [107] more detail in a second is just because [108] you know automations are systems right [110] and that might mean something to you and [111] I what the hell does that mean to like [112] an average small to midsized business [114] owner right they're hiring us because [116] they're not very technical most of the [117] time the second is that your system [119] needs to solve hot button paino and this [121] is something that generally just impacts [122] revenue or profit and the third is you [124] just need a way to template the vast [126] majority of your system and this is [127] typically done through no code platforms [128] like nadn make.com zappier um or you [131] know copying and pasting scripts [132] whatever the hell you want to do so [134] let's chat about this first one uh [135] producing a clear deliverable [137] essentially in order for your system to [139] be good and in order for you to be able [140] to scale it and sell and make any sort [142] of meaningful amount of money with it it [144] needs to produce something tangible for [146] the client tangible in this case means [148] you know a document means an email it [150] means a CRM system some sort of asset uh [153] some sort of line item Okay the reason [155] why is because systems are by Nature [157] immaterial they are processes and [159] software infrastructure like to a lay [161] person is very difficult to visualize [163] your goal is to turn this from some [165] weird scary intimidating Black Box sort [167] of idea into something your client can [170] actually imagine touching or feeling [172] something they could see for themselves [174] these are going to produce immediate [175] results this is also going to mean that [177] they are much easier to quantify than [178] it's going to allow you to claim [179] straight forward wins which are going to [180] snowball you into being able to do [182] things like at higher ticket retainers [184] and so on and so forth um the reason why [186] I'm harping on this guys is because [187] there are tons of systems out there that [189] you guys will see scrolling through [190] YouTube while doing your binge system [192] stuff and they're great and all but very [194] few of them are systems that if you were [196] able to put it in front of a client and [197] ask them hey do you want this for this [199] much money very few of those systems [201] would get a resounding yes and the [203] reason why is because they're sort of [204] built for it's almost like they're built [206] for like a YouTube audience they're [207] built for like the developer audience [209] they're not NE necessarily built for a [211] small to midsize business customers that [213] you know are looking to to have some [214] practical need fulfilled so these points [217] that I'm making here like if you if you [218] really want to make money in this [219] industry these are things that you just [220] sort of you sort of have to get um [223] here's some quick examples the first [224] might be like a PDF generator okay so if [227] you build a PDF generator system for the [229] customer it needs to produce something [231] physically that the customer can touch [233] so white paper quote estimate maybe the [235] customer fills out a form every single [237] time a form is filled out they get [238] something they receive an email says [240] congratulations you just you know [242] generated some new PDF right another one [245] may be a comprehensive CRM that your [246] client can navigate through a beautiful [248] Aesthetics uh you know colors and and [251] buttons and stuff like that this isn't [253] just something that the customer is [254] going to use okay it's something that [255] every single person on their team is [257] going to use every day week and month [259] thereafter you get to claim the win [261] every time they're staring at that thing [263] which to be honest is going to be the [264] vast majority of their workday the last [266] might be like a cold email system that [268] generates an email every time it's [270] responded to right every time that you [272] get a a positive response or something [274] or maybe every time a response comes in [275] you filter it through AI you say is this [276] a good response is the customer going to [278] like this okay sweet if so voila I'm [280] going to send them a nicely packaged [282] email maybe I'll like spend a few extra [284] minutes designing it so the customer [285] feels like they're getting a high [287] quality product they can see feel and [288] touch so even if your system doesn't [290] need deliverables in order to work I [292] recommend that you modify your system to [293] include them um and then you know [295] ideally you just find systems that [296] produce deliverables as a a consequence [298] of their operation [300] so that's very important the second [302] thing I want to talk about is it needs [303] to solve some sort of hot button pain [305] point that a business is experiencing um [308] if it's not you're typically not going [309] to be able to charge anywhere near as [310] much money and uh yeah you'll just [312] typically have like a worse go of it [313] during the sales process you're going to [315] kind of be fighting an uphill battle so [316] don't fight an uphill battle fight a [318] downhill battle they're way easier I'm [320] just look at Obi-Wan so simply put [322] businesses pay more for solutions to [324] pressing problems what is a pressing [326] problem uh anything that impacts your [327] ability to generate Revenue save money [330] or free founder time these are the three [331] big ones you know if a business is [334] struggling with generating revenue and [335] they have like a specific need that you [337] could solve to help them with that they [338] will pay you a lot of money to have that [340] solved same thing with bleeding money or [342] same thing with the founder running all [344] over the place feeling extraordinarily [346] stressed and and and like their life's [348] uh like their life is chaos all the time [350] obviously the more urgent this need the [352] easier the sale so the systems that make [354] the most uh sense to sell are ones that [356] deal with urgent [357] needs so some examples this might be [360] let's say you run uh like a B2B agency [363] or something and you have a team of [364] fulfillment staff and they are currently [366] just waiting around kicking rocks [367] because they're I don't know there's no [369] design work for them to do um that means [371] every single month this business is [373] bleeding a few thousand per person [376] paying them to just sit and wait around [378] this is a very urgent need not only are [380] they losing money there they're also [381] losing money in opportunity costs since [382] they're not making any new sales to [384] begin with so you know if you could [386] solve [387] this and at least fill the pipeline you [389] can think of it as uh the the business [391] let's say this I don't know two [392] fulfillment staff and you're paying them [394] $3,000 each if you can at least fill the [396] pipeline so that they break even on that [398] you're saving a business $6,000 how much [401] money is a business willing to pay you [402] to save them $6,000 probably between [405] like three I don't know $2 to $3,000 [408] realistically uh another example might [409] be you're running some B2B SAS product [411] maybe your support team is overwhelmed [412] and getting so many inquiries and [414] there's so few people and because that [415] response times are lagging and and now [417] there's major turn what your need is [418] there is customer support you need [420] systems that enable customer support or [422] you need the ability to hire uh you know [424] customer support staff if you could [426] solve this and if you could reduce their [427] turn by like 5% or whatever then [430] mathematically you will have increased [432] the lifetime revenue of that um mrr by I [435] think 5% right like mathematically so [438] they're making a million dollars a month [439] or something you've just given them [441] $50,000 I think unless I don't know I'm [443] being dumb but you're making a lot of [445] money for them so they're willing to pay [446] you a fraction of that to solve it [448] another might be that you I don't know [449] you're running some some other business [451] maybe you are a copywriter and you're [454] invoicing your clients and your invoice [455] processing blows and that means well you [457] send a lot of invoices and you get a lot [458] of work maybe like 20% of them um just [460] don't pay you right or they don't pay [462] you on time if that is the case your [465] need is a better invoice process and if [466] you solve that then you can basically [468] take the portion of the amount of money [469] that is in accounts receivable or [470] outstanding basically and then you could [473] like charge a fraction of it to solve [474] that problem so yeah I'm just trying to [477] harp on you guys that you know the real [478] problems that you solve that make money [481] in this industry like when you solve [482] them you can charge a fraction or [484] percentage of that price um this is [486] called value based pricing it's [487] something that I and many high earning [489] automation companies do because every [491] time that you know a problem is not [492] solved it costs a business some [494] theoretical sum when you build a system [496] that solves that theoretical sum you're [498] basically putting a bunch of money back [499] in their pocket which is freaking [500] amazing okay need number three or rather [503] Point number three is that you need to [504] be able to build this using templates [506] whatever your system is you should be [508] able to copy and paste 80% % of it then [510] maybe make some minor tweaks the reason [512] why is because this minimizes your work [513] while also letting you generate a [515] tangible return on client investment [516] ASAP and then you're also um basically [519] minimizing buyer remorse which is a [520] really big one like when a customer pays [522] you something especially for a [524] consulting or a technical service that [525] they can't really conceptualize the [527] value of when your customer pays you [529] something and then they don't get [531] something in return for like a month [533] that entire month they sort of have this [534] little buyers remorse thing where [536] they're like well I'm out a bunch of [537] money for the service but I haven't [539] actually got that like the value that [540] I've been paying for it just yet um and [542] the longer that goes on typically the [544] harder it is to to upsell clients to get [546] them on long-term retainers uh basically [548] your goal as an agency any any sort of [550] agency or freelancer really any service [552] business just to minimize buyer Remorse [554] by generating a tangible return on their [555] investment and you do that using [557] templates if you get a new client you [558] can build a system for them in three [560] days or something that solves a need [562] starts actually delivering an Roi that [564] situation um you those sorts of [566] situations I should say are the ones [567] that get you long-term client retainers [569] and that you know get the clients um to [571] be absolutely Overjoyed working with you [573] so the cool part about systems is by [575] nature they are templat right we're [577] dealing with immaterial software [579] products code stuff like that you can [580] literally just copy and paste it and [582] then voila you're done 90% of the time [585] that means that all you ever need to do [586] really is just build a system once and [588] then you just get to like reap the [589] Returns on that uh for however long [591] you're selling that product um the [593] theoretical ideal system just while I'm [596] on that is a system that is entirely [598] deliverable through a or completely [600] automatically I want you to think about [601] this uh if you know you are delivering [603] some sort of website building service [605] hypothetically and then you know you [607] sign the deal when you sign the deal you [609] trigger a form to be sent to the client [611] that asks all the questions and then [612] when they fill it out they instantly get [613] their website like the the the [616] scalability of this sort of business is [618] theoretically infinite all you need to [619] do is just get as many people in the [621] front door as humanly possible the back [622] end takes care of itself I mean [623] obviously you're probably going to have [624] some revisions or something but I think [626] you guys are seeing the point that I'm [627] making um so it's difficult to attain in [630] practice I've personally never done this [631] I've gotten reasonably close but usually [633] just with lower ticket stuff um but uh [635] yeah you know that's just something to [636] something to shoot for here's some [639] examples again uh the first might be a [640] CRM template you can duplicate in the [641] client environment on your platform of [643] choice that might be I don't know notion [645] a sauna clickup whatever um the second [648] might be a series of blueprints the [649] import of the client make.com or NAD [651] environment that you only ever have to [652] make minor tweaks to afterwards maybe [655] you are trolling through upwork looking [656] for uh systems so what you do is you [658] don't just type systems or automations [660] you actually typee like email systems or [662] email automations and then you have like [664] four or five uh templates or blueprints [667] for these systems that like kind of [668] closely match what the customer is [670] looking to they're not n they're not all [671] the way there but they're like 90% of [673] the way there well you could just say [674] hey you know like I'm I'm going to build [675] you out the system and then instead of [678] you having to build it from scratch now [679] you you at least get 90% of the way [681] there with the template you basically [682] get to leverage and and and Arbitrage [684] your time uh you know instead of you [686] doing uh all of the work from 0% to 100% [689] % you do the work from 90% to 100% but [691] you get to charge as if you were going [694] from 0% to [695] 100% the last example here might be a [697] creative brief your client fills out [699] which triggers a flow that generates a [700] Business website sort of like my API [702] example okay I think we're done with [704] that dry stuff let's actually show you [706] what these systems are because I know [708] that's what everybody here's waiting for [710] I want you to know that you can build [710] these systems exactly as they are [712] written down or you can produce [714] variations of them they fulfill the [715] requirements above or they're built in [717] such a way that you can modify them to [718] do so like you can swap clickup to [720] notion if you're using notion instead of [722] click up or whatever um I also have [724] talked about and blueprints for all [725] these systems scattered through my [726] YouTube channel uh except for one I [728] believe um and I'm going to be recording [729] a video of me building that um [731] momentarily and you can also find These [733] Blueprints and these templates uh on my [734] gum Road and there are also many that [736] have been built more than once on [737] different platforms so you know if [738] you're working on zapier or something [741] and the system is nadn that's okay you [743] can absolutely just like build the [744] system on zapier um you know look at the [746] blueprint stare at it um and grock it [749] and then just look for like equivalent [750] modules at the end of the day all no [752] code platforms these days are basically [753] the same anyway all right so the very [755] first system I'm going to show you guys [756] is a deep personalization system that is [758] built in n8n as I mentioned you can [760] apply this to any no code platform that [762] you want I'll show you how to do that in [764] a second but um from a bird's eye view [766] what the system is is it's a it's a [767] series of prompts that allows you to [769] customize the hell out of outbound [772] Outreach completely automatically we are [774] going to scrape the data from a web [777] service that allows us to pull email [779] addresses from publicly available [781] profiles we're then going to Loop over [783] it get LinkedIn profile data from that [786] feed that into Ai and then add it to a [788] spreadsheet which we can then tie into [790] some cold email platform like instantly [792] now the reason why this is so valuable [794] is because it's not your run-of- the- [795] maill personalization it's not just like [796] you're doing the the first line of an [797] email like most people do what we're [799] doing is we're personalizing every [801] aspect of the email that is going out [803] and we're doing it at scale and on mass [805] um so much so that the person that will [807] receive this email is going to think [809] holy crap this guy really did his [810] research this is going to make it seem [812] almost as if this is not a cold Outreach [814] anymore but but like it's warm Outreach [816] because you know everything about the [817] person you know their whole career [818] history you're asking insightful [820] questions you'd only know if you'd [821] actually like read them and so on and so [823] forth so what you're basically doing [825] with this system is you're producing an [826] AI engine that reaches out to a near [827] infinite number of people per day and [829] you're only upper bound on how many [831] people you want to reach out to um is [832] going to be the email inboxes the number [834] that you have using your cold email [835] platform and then the um amount of money [837] that you're spending on Ops here are the [839] things that it solves first of all it [842] solves money it solves reply rate solves [844] leads these are usually the biggest [845] bottlenecks in any business and they're [847] the hardest ones to fulfill as well so [849] right off the bat this is [850] extraordinarily valuable the second is [852] it produces a clear deliverable these [853] are customized leads in a spreadsheet [855] some sort of cold email platform it's a [856] CRM it's all three and then as a [858] byproduct delivers replies you actually [859] get replies in your inbox right and you [862] get more replies than you do with [863] basically any other sort of cold email [864] enrichment system uh because you're [866] doing deep personalization but you're [868] doing it well and I'm going to show you [869] how with some some Nifty prompts that [871] I've set up here you can also create [873] templates to make your work easy um you [875] know you can just copy this into the [876] client na environment if you wanted to [878] or you could just run all this on your [879] own account you can build this in all [880] major no code platforms and you can sell [883] this from anywhere from $1,500 to 5,000 [885] USD fixed price that's with no add-ons [888] you can also charge an hourly rate to [889] implement this although I wouldn't [890] recommend that um as well as some sort [892] of monthly maintenance fee and many [894] people in my communities which are now [896] over uh almost 1,400 people as of the [898] time of this this video I have sold [900] systems like this for for substantially [901] more than 5,000 USD a pop not to mention [904] if you take into account things like [905] Revenue share equity share that sort of [906] stuff um you know this number a lot of [908] the time can can double or even triple [910] so let me actually run he guys through [911] what the system looks like um as I [913] mentioned built this out in n8n uh I [915] know that most of my viewers are [916] probably more familiar with make at this [918] point just because the bulk of my videos [919] have been on that on no code or [921] automation platform so just to give [922] everybody some context um this is a web [925] hook which is basically synonymous [926] across all platforms you are getting an [929] event from some service the event that [930] we are getting in this case is going to [932] be appify appify um for those of you [935] that are unfamiliar is a Marketplace [937] that allows you to scrape things [938] essentially and all you really need to [940] do most of the time is just enter in [941] like the URL of the thing you want to [943] scrape and you're good to go so turns [945] out there's this one um scraper called [947] the Apollo scraper which allows you to [950] scrape a um basically a big lead [953] aggregator service called Apollo and [955] then from that you can extract up to [956] 50,000 leads per search for a price of [959] just a120 per thousand leads most of [961] these are going to have email addresses [963] and here's an example of the data that [964] you would get pretty sweet right so all [967] you need to do is you just go into [968] Apollo and you you make a search you say [970] I'm looking for CEOs in California or [972] something and then it will actually go [974] and it'll try and pull you every CEO in [976] California as well as their email [978] addresses their LinkedIn URLs uh it's [980] kind of magical if you think about it [982] that way from there what we're doing is [984] we're doing another call to apiz a API [987] which I'll show you guys uh when when we [989] actually run this thing from start to [990] finish and that just retrieves the [991] actual items that we just scraped then [993] We're looping over each of these items [995] and in nadn when you Loop over and this [997] is just sort of like saying uh you know [999] for the first entry I'm going to do all [1000] this stuff then I'm going to Loop over [1001] and do the same thing for the second [1002] entry then I'm going to Loop over and do [1004] the same thing for the third entry the [1005] reason why we have that is just because [1007] some API limitations some of the apis [1009] that we're using some of the services [1011] that we're using I should say they have [1012] like right limits and so we just want to [1013] space it out after that we have an if um [1016] and we're basically saying hey if we got [1018] the email address then we can proceeded [1021] what we do next is we use another [1022] service called [1024] lead. lead magic is a pretty nifty [1026] service that essentially allows you to [1027] feed in a LinkedIn URL uh via API once [1031] you feed in a LinkedIn URL what you get [1033] as a result is you get the entire [1036] LinkedIn profile in all the fields or [1038] all the fields that matter I should say [1040] um so I just fed in my own which was [1042] linkedin.com [1044] Nicholas that handsome bass right over [1046] there um who that uh and then as a [1048] result got headlines um I got like an [1051] about section I obviously got a ton of [1053] information about you know like uh uh [1055] where I work and so on and so forth and [1057] the idea is what we do with that is we [1059] feed that into Ai and we basically have [1061] ai personalize um a bunch of Outreach [1064] for us and before we add to a Google [1066] sheet and in terms of what the data [1068] actually looks like at the end of it I [1069] have a bunch of data that I scraped here [1071] just 10 records um for just a bunch of [1074] people in I don't know I guess Aerospace [1075] or mechanical engineering if we scroll [1077] over to the right this this is basically [1079] what we get as a result we get subject [1081] lines we get ice breakers we get [1083] elevator pitches we get call to actions [1085] and then finally we even get a little PS [1086] field and I'll show you what all that [1087] looks like in our actual qu Emil [1089] platform so this is pretty sweet um this [1091] is sweet uh not necessarily just because [1093] it's you know built in NN or I don't [1096] know we're doing the personalization but [1097] kind of like we're we're chaining [1099] together three or four of these [1100] different services that independently [1102] don't really do anything but when you [1103] combine them all you can essentially [1104] completely automate something that's a [1106] pretty laborious part of most people's [1107] work now the end result from this so [1109] what we get is we get a lead inside of [1112] well we don't get a lead inside of but I [1113] made this General enough that you could [1115] just import the leads into whatever your [1116] platform is um but I'll show you you can [1118] get a lead inside of a cold email [1120] platform like instantly that allows you [1121] to then scale up the number of emails [1123] that you send and the way that it works [1125] as we fill variables like Icebreaker [1127] elevator pitch call to action same ones [1128] you saw a second ago and then PS as well [1131] as subject line um and then in that way [1133] basically all of our emails seem [1135] extraordinarily unique but they still [1137] follow a structure right of the main [1139] issues with AI being used in cold [1140] Outreach I found is just that it [1141] typically doesn't follow structure and [1143] kind of fall apart okay great and the [1144] last thing I want to do just before we [1145] wrap up here is I want to show you what [1147] this flow actually looks like um in n8n [1149] we have to just limit the number of [1150] items that are coming out the other side [1152] unfortunately otherwise it uh just gets [1154] a little bit weird and can be a little [1156] bit much so let me just do that really [1158] quickly uh and basically what I'm going [1161] to do is the way that this flow works is [1163] it it looks to see if there's an email [1164] address but because not every record is [1166] going to have an email address I'm just [1167] con going to connect this little false [1169] output to the um uh next module as well [1172] normally this would stop if there were [1173] no um email addresses this time it's [1175] going to proceed just so we could see [1177] what all the logic looks like but if you [1178] were to run this for yourself just make [1180] sure to take that out okay now let's [1182] head back over to appify Let's click [1183] Start and let's scrape this [1185] puppy uh as I mentioned this is going to [1187] be scraping this Apollo resource but I [1189] mean apify is amazing uh it sort of [1191] understands in their applications allow [1192] you to scrape anything that you freaking [1194] want I've used it to scrape Instagram [1196] before Tik Tok Twitter uh Reddit right [1199] use it to make like an automatic [1200] newsletter generator which I'll show you [1201] guys in a moment um it is a very very [1203] powerful platform and if you configure [1205] it right you can do basically whatever [1206] the hell you want with it which is quite [1208] nice okay great so it just found our uh [1211] flow it's now requesting the LinkedIn [1213] profile doing the five column [1214] personalization let me just show you [1216] guys what this actually looks like in [1217] practice I'm it's just going to add that [1219] to our Google [1221] sheet let me just make sure that this is [1223] oh sorry if we go back here we see that [1226] we've added uh person and uh what else [1229] we did was we went and we customized the [1231] hell out of the [1234] Outreach pretty [1237] neat damn that is pretty [1240] neat and then looks like we've just done [1243] that for the second lead as [1246] well and then uh yeah you know this [1248] basically just goes on and I believe I I [1250] set a wait of I don't know how long is [1252] my waight that's like 5 seconds or so so [1255] you can set the weight at whatever you [1256] want I just did 5 Seconds cuz I didn't [1257] want this API to get overwhelmed um [1259] sometimes the Google Sheets API for me [1261] anyway um kind of uh times out or rather [1264] not times out but but gets rate limited [1267] so the benefit there is you know once [1268] you have the spreadsheet um all you need [1270] to do is you just you know go over here [1272] you download it um as a CS Fe and then [1275] you head over to instantly which in my [1277] case is the service that I'm going to be [1278] uploading the emails to um and then you [1281] click uh leads you click add leads then [1283] you can just drag and drop this in it's [1284] the same thing for smart lead and for [1285] anything else the end result is you're [1287] going to essentially get an email that [1289] includes all of these columns right so [1291] if I could just show you guys an example [1293] on one of [1294] them you know this email let me just add [1297] to step this is basically something like [1300] the email that you are going to be [1301] sending um so this is pretty hyper [1303] customized right uh you know one of the [1305] things about this company that they keep [1306] on mentioning all the time is their [1307] focus on Innovation and this and that [1309] and that you basically get to slap that [1311] in there you got a little PS here which [1312] also makes it seem um kind of human [1314] written uh the subject line is [1316] customized you know if you were to send [1318] this to some uh and have multiple levels [1319] of personalization the likelihood of an [1321] open and of ultimately them doing [1323] something with it is a lot higher so I'm [1325] just going to turn this off because um [1327] it's just going through and and [1328] continuing to chug and consume Ops in [1330] the background then I'm going to [1331] download [1332] this then we're going to head back over [1334] to the next system okay the second [1336] system I want to talk about is a search [1338] intent lead scraper um this is something [1340] that I did a video on just a few weeks [1341] ago and it's similarly involved in cold [1344] email you're going to see a lot of [1345] things um that I build that I sell and [1347] make good money with to revolve around [1349] some sort of Outreach just because this [1350] is typically the most scalable way to [1353] employer apply Automation Services in [1355] such a way that you can make money with [1355] them but essentially what this is is [1357] this is a way to scrape leads but not [1360] just scrape leads generally using the [1361] same approach we did earlier but to [1363] scrape them with specific intent so the [1366] reason why it's called search intent is [1367] because what we're doing is we're [1368] actually scraping job listings instead [1370] of people we get these job listings for [1373] companies that have listed hey I want to [1375] hire a sales associate or a business [1377] development representative or an [1378] accounting executive and the reason why [1379] we're we're scraping that is because we [1381] know that if a company has put up a job [1382] post for account executive or sales [1384] representative or something like the [1386] need that they have is they need more [1387] leads and they need more more sales and [1389] they're willing to literally spend money [1391] to solve that problem so the second that [1392] you search for leads with intent like [1394] that you can typically multiply not only [1396] the average ticket price of the service [1398] that you're selling but also just make [1399] the entire interaction a lot easier so [1402] yeah this solves money reply rate [1404] unqualified leads no leads in the queue [1406] uh disorganized sales process unutilized [1408] sales team and ultimately chaos it also [1410] produces a clear deliverable in the form [1412] of um you know an email address which is [1414] pretty sweet and then a series of fields [1415] in a Google sheet or some sort of cold [1416] email platform um as I mentioned you can [1419] create blueprints on all major no code [1420] platforms this one's going to be [1421] make.com but yeah you know you could [1423] template out the Google Sheets template [1424] whatever you want and in terms of the [1426] price it's very similar to the previous [1427] system in so far that we're selling [1428] between 1,500 to 5,000 USD although I [1430] should note that you know if you are [1432] selling this as a super high ticket [1434] service if you're selling this to like [1436] B2B um tech companies or uh like um one [1440] of my community members did this with I [1441] think it was a manufacturing company or [1442] something it sold for over [1444] $600,000 um not this system for $600,000 [1447] they use this system to sell one of [1449] their clients um a total ticket size of [1452] $600,000 you can you can sell this for [1454] substantially more especially for those [1455] big industrial applications so let me [1458] run you through what the system actually [1459] looks like um this is built out in [1461] make.com instead of NN and it again uses [1464] appify to get scraping results then get [1466] data set items so very similar what we [1468] saw before in NN we then search through [1471] a Google sheet we then add a row if the [1473] job is new and then we also filter the [1475] job before searching for a decision [1477] maker using a platform called any mail [1479] finder um after this we then retrieve [1481] the the enrichment results from any mail [1483] finder research the decision maker using [1486] perplexity which is quite neat generate [1488] an ice breaker which is similar to what [1490] I was showing you guys before just a [1491] little more shallow this time then [1493] automatically add it to our database and [1495] then instantly um so that sounds pretty [1497] well and good but what exactly does any [1499] of this stuff mean um well let me show [1500] you guys what uh yeah let me show you [1502] guys what like an actual um uh result of [1505] this would look like first thing I'm [1506] going to do is I'm going to go to my [1507] Google sheet here okay and what we have [1509] as a result is as you guys could see we [1511] have an ID we then have a tracking ID a [1514] reference ID we have the link to the [1517] specific job post and this is from quite [1518] a while ago so I don't know if this is [1519] actually still be valid okay yeah looks [1521] like they're still hiring this company [1522] tremendous is hiring an SDR sales [1524] development representative which is [1525] pretty sweet um you know the title the [1527] company name name company LinkedIn [1529] company logo we're getting a ton of [1531] fields here um the thing that matters to [1533] us is this description what we do is we [1535] take this description here and we feed [1537] it into Ai and say hey is this something [1539] that we could sell a system to [1541] realistically you give it a list of [1542] systems you say hey we sell X Y and Z is [1545] this a job that we could realistically [1547] apply to if the answer to that is yes [1549] what we do and as you can see this a [1551] pretty big database I got to scroll all [1552] the freaking way down to the [1554] right we get their email address and [1557] then from there we also write um you [1559] know an entire uh pitch basically um [1562] that says hey you know I dig your [1564] mission um it's really cool to see the [1565] transition from blueto to NFC within [1567] blue bite which is the name of their [1568] their business and stuff which is pretty [1570] cool right now let me let me show you [1572] what this actually looks like when you [1573] add this um what we do after that is we [1576] retrieve the result and I'm just going [1578] to run this once to show [1580] you and I believe we need oh my bad I'm [1583] actually out of credits which is why [1584] this isn't uh working wonder if I just [1586] ran this whole thing how many of these [1588] I'd realistically get uh let me just [1591] turn this on and see what happens screw [1595] it this is now going to open up a ton [1597] just run like a million simultaneously [1600] and I was just looking for one that [1601] actually made sense um you can see that [1602] we actually got a CEO of a company um [1604] and then after getting the co of the [1606] company we research this person using [1607] perplexity which is pretty sweet the end [1610] result of this is we got some content [1612] about this person hey you know this [1614] person's the CEO and co-founder of this [1616] here's some key points about him then we [1617] got a ton of information about this [1619] particular person which is amazing as [1622] I'm sure you can imagine you can combine [1623] this with the Icebreaker thing we did [1624] earlier then we generate an ice breaker [1627] here um then we add it to our database [1631] uh which was right over here right or [1634] actually you know we might have a I [1635] might have a different database actually [1636] for this specific one but anyway we add [1639] it to um our database afterwards which [1641] is pretty sweet then uh we also send it [1643] over to instantly which is cool [1645] instantly being our cold email platform [1647] so yeah lot of uh move and steps here [1649] but just for the sake of time I'm not [1651] going to go through every module like I [1652] did with the previous flow just because [1653] I think most people are familiar with [1654] how make.com works at least on my [1656] channel um suffice to say this blueprint [1659] will be down below in the description [1661] and the really cool part about systems [1662] like this is uh one of the reasons why [1664] I've sort of Niche down and I provide a [1665] lot of growth systems like C email is [1667] because the second you start selling one [1669] well one sort of naturally leads into [1670] the other so hypothetically you know [1671] what what if you sell this to somebody [1673] for 4,000 bucks or something and then [1675] after you sell them a deep [1676] personalization system on top that that [1678] takes the data that we generated here [1680] takes some additional data that we're [1681] generating from maybe like lead magic [1683] that API that requests LinkedIn profiles [1685] then we stick it together well now we're [1687] upselling them now we're selling them [1688] two Services as opposed to just one the [1691] third system I'm going to show you guys [1692] is a YouTube parasite plus content [1693] Improvement system as you guys can see [1695] this is a pretty long system I detailed [1697] it in one of my earlier YouTube videos [1698] but in a nutshell what this does is this [1701] scrapes YouTube videos it gets the [1703] transcripts of those YouTube videos then [1705] it uses AI to find gaps in that content [1707] to to make it better the AI then writes [1710] content for you using the tips that [1713] we've provided as well as the source [1714] document then it lets you repurpose that [1716] content for social media YouTube scripts [1719] and more we basically do a bunch of uh [1721] content types like Facebook and and [1723] Twitter and so on and so forth and [1724] automatically can even post them so this [1727] is a pretty sweet system to sell um [1729] because you know a lot of uh well I want [1731] to say that this it depends on the sort [1733] of business that you s this to but SAS [1735] companies tend to like this sort of [1736] stuff because uh they typically have [1737] like well to find competitors whose [1739] YouTube channels they could scrape um [1741] and you know like they could take video [1742] ideas and then repurpose them uh you [1745] know Brands tend to like the stuff like [1746] like influencers and stuff because they [1748] tend to have like five or 10 people in [1749] their Niche that are doing similar [1750] things to them you can think about me [1752] and and you know my my competition on [1753] YouTube for instance we could parasite [1755] them immediately the second that they're [1757] done recording a video and posting it I [1759] could immediately flip that around and [1760] then start creating some sort of new [1762] better content that solves the needs of [1763] the market even cooler than they did um [1766] but anyway the point that I'm making is [1768] uh this produces a clear deliverable [1769] social media post content scripts it [1771] solves some hot button needs it's [1773] templat and you can actually sell this [1774] anywhere from 1,500 to 5,000 USD fixed [1777] price um I know a lot of people have [1778] sold for for less than this amongst my [1780] groups um but I think that you know if [1782] you go anywhere less than like $1,500 [1784] system like this you're definitely [1784] underpricing yourself uh and you can Al [1787] obviously make tweaks to the system now [1788] in terms of how the system works um it [1790] starts by triggering an appify actor to [1792] run and it's going and and pulling a [1794] specific appify actor that I think we've [1797] um not looked at precisely ourselves [1799] YouTube vide subtitles or caption [1801] scraper basically what we're doing is we [1803] have a sheet full of YouTube videos to [1806] scrape okay and you can populate this [1808] very easily using another appify actor [1810] if you want like there are a variety of [1811] systems out there that dump YouTube [1813] videos that you scrape into this but I'm [1814] just assuming you already have one [1815] because I didn't want this to be like 17 [1817] scenarios long um but basically once [1819] once you you get a YouTube video The you [1821] every YouTube video has some video ID [1823] over here and what you do is you take [1825] that video [1826] ID you search the row so you get it and [1829] then you feed it into this app IFI run [1831] and actor module this is where you paste [1834] the URL or the ID I got yeah I guess the [1836] URL in this case not the ID of the video [1838] that you want to scrape this then runs a [1840] caption scraper so then we watch the [1843] actor runs we will get the data set [1845] items we're going to do a bunch of [1846] processing um to basically get the [1848] transcript into a reasonable format for [1850] us um so what I'm doing here is I'm [1852] calling GPT 40 with um a prompt that [1854] basically says something along the lines [1857] of hey we're in content based on YouTube [1859] transcripts what I want you to do is I [1860] want you to summarize it write an [1862] outline with it write some suggestions [1863] about it and then output it in this Json [1865] format here uh and then from there we're [1868] actually taking the suggestions and [1869] using them to upgrade the outline that [1871] we generated from a previous step and [1872] this is kind of neat um most people will [1873] try and apply it to the actual content [1875] itself but if you do this to an outline [1877] rather than the actual content itself [1878] like if you feed in an um an outline and [1880] say hey this is an outline of content I [1882] want you to make this outline better [1884] then when you take that outline and then [1885] feed it back into AI to have it rewrite [1887] the whole thing [1888] uh you know you end up a lot more [1890] flexible and there's a lot less like [1891] plagiarism stuff involved you're not [1892] just like changing the wording here or [1894] there you're actually like doing it with [1895] an outline so yeah there a bunch of [1897] rules there you guys feel free to check [1898] it out in the um in the template and [1900] then from here we generate social media [1902] posts the social media posts we start [1903] with are um just the Classic ones so I [1906] think there's Facebook brain okay so [1907] Twitter post Instagram Facebook yeah and [1909] then LinkedIn um so we generate these [1911] four social media posts using AI after [1914] that we then generate a YouTube script [1916] using AI as well so this is a script for [1918] a complimentary video that uses as input [1920] that outline we then smooth out the [1922] script and then we generate an Instagram [1924] post a Twitter post Facebook post [1926] LinkedIn post YouTube script even then [1928] we update our rows which is pretty cool [1930] so yeah this is you know obviously [1932] pretty involved if I go over here to uh [1936] sorry let's go back over here if I go [1937] over here to the right hand side you see [1938] we have the Instagram [1940] post we have the Twitter post oh we even [1944] have the YouTube script so at the end of [1946] it you know you get a bunch of um [1948] content and data now um you know is this [1951] stuff that I think would perform really [1952] well on on Facebook or Instagram as as [1954] is right now no I don't think this would [1956] perform really really well um and the [1958] reason why is because I typically always [1960] recommend that my clients have like a [1962] two- pass system where they basically [1963] have a human in the loop which make now [1965] has a feature for by the way where after [1967] it's done creating something you add it [1968] to your queue and then you say something [1970] along the lines of hey you know this is [1972] ready for QA human comes in you know it [1974] changes the wording a little bit here or [1976] there to try and make it a little bit [1977] closer what it is that your um brand [1980] tone of voice is and the reason why I do [1981] that is because in practice like while [1984] you know it can be quite impressive um I [1986] think to generate this much content all [1988] at once uh usually it does not [1990] understand brand tone of voice or Style [1993] Guidelines anywhere near as well as a [1994] human being would U but anyway yeah and [1996] here we have like a big long YouTube [1998] script so you can see 10 whole pages [2000] feel free to check all that stuff out um [2002] that is system number three system [2005] number four is an automated newsletter [2007] production system which is quite similar [2008] in nature I want to say instead of us [2010] using appify to find uh you know YouTube [2013] uh scripts or sorry uh YouTube videos [2015] and then converting those into you know [2017] captions and extracting the captions and [2019] doing fun stuff with that what we're [2020] doing instead is we're actually scraping [2022] Reddit so the system takes data from [2025] Reddit specific subreddits that you [2026] specify uses AI to process them and [2029] filter them then if it's within the [2031] realm of what we'd consider to be a [2032] highquality newsletter item um it [2034] processes them summarizes them and then [2037] adds them to a nicely formatted [2038] newsletter in MailChimp from here you [2041] basically have a completely automated [2042] newsletter production system you can run [2043] as often as you want you can run this [2045] puppy once a day you can run this puppy [2047] hell once an hour run this puppy once a [2049] year U whatever sort of you know clip [2052] you want to run a system like this on um [2054] you are free to so I'm just going to [2055] jump over here and show you guys what [2057] this looks like we'll go to Reddit post [2059] database in terms of the um structure of [2062] the database as you guys can see I just [2063] use Google Sheets for everything it's [2065] the simplest database out there what you [2066] do is you feed in a few few subreddits [2068] so we fed in uh some uh communities [2071] called Singularity artificial [2073] intelligence open AI um I think there [2076] was one more artificial intelligence [2077] like with one L or something doesn't [2079] look like we got any post from them [2080] though um and then appify will go and [2082] it'll it'll scrape a bunch of these give [2084] us a bunch of posts right which looks [2086] pretty [2086] cool what we do is we take these posts [2089] and then we use them to generate [2091] something here so we have a second [2092] database this database then creates [2095] basically um a whole pitch so um I [2098] pretended my newsletter like my [2099] newsletter was called The Loop welcome [2100] to Loop Cutting Edge AA news explain in [2102] simple English in this week's issue [2104] spicy thing one spicy thing two spicy [2106] thing three and then we actually go [2108] through and we we use the filtering [2110] logic that I've set up before to show [2111] you in a second to write this whole [2112] thing which is pretty neat um this is [2114] probably one of the higher value flows I [2116] would say um I'd sell this from anywhere [2120] between 1,500 to $10,000 fixed price I [2123] should note that I haven't actually sold [2124] this specific system for $10,000 fixed [2127] price I just put system together myself [2129] live on camera a few weeks ago so I have [2131] yet to but um I'm confident that a [2134] system like this could probably get even [2135] more for the right business just because [2136] the end result is like very curatable [2138] content and you could use this sort of [2140] thing for anything you don't just need [2141] to use it for a newsletter you could use [2142] this to like make YouTube short scripts [2144] or something um very modifiable um and [2146] you know it's sort of like the the [2147] Nugget for a variety of systems in terms [2150] of what it looks like if you just lay it [2151] out um we do watch actor runs we get the [2153] data set items same thing as before we [2155] then filter posts using AI this is kind [2157] of kind of like the Crux of this if you [2158] screw this part up the rest of it [2160] doesn't really work uh so what we start [2162] with is Q Jeopardy music we're designing [2166] a newsletter that contains news and [2168] exciting in uh developments in AI your [2170] task is to filter out irrelevant Reddit [2171] posts so they don't make it to our [2172] newsletter here are a bunch of rules and [2174] then return relevance in Json using this [2176] format true or false what we do is we [2179] then add this to the first datab base [2182] assuming that it is relevant and then we [2184] have a second half to this flow what the [2187] second half this flow does is however [2188] often we want to schedule our newsletter [2190] which in my case was Monday at 6 we then [2192] go through grab all of the posts and [2195] it's not just all the posts but it's all [2196] the posts that have our filter of post [2199] status equal new and this is kind of [2201] like an interesting hack that allows you [2202] to only pull from um posts that are [2206] posts that we have not actually created [2207] a newsetter for so as you can see all [2209] these are published on the right hand [2210] side these ones are all new so any ones [2213] that are new we um we then add to that [2215] Quee and then we proceed through ically [2218] generating headlines and Snippets [2220] generating introductions and titles then [2222] we even go as far as adding them to [2223] MailChimp and then sending the [2225] newsletter to all of the subscribers of [2226] that in mail champ so pretty neat stuff [2229] um as I mentioned I haven't actually [2230] sold that specific system for anywhere [2232] near $10,000 but I'm confident that you [2234] could sell systems like this very easily [2236] for that amount of money just given um [2238] how similar it is to these other systems [2239] that have proven success behind them so [2241] the first person in my community is to [2242] sell this particular system send me over [2244] a DM and maybe I'll make a video about [2245] it okay great last one is a copy and [2248] paste automatic hiring system which I [2250] think is pretty badass um I've been [2252] using this and selling this for well [2255] over two years now or just coming up on [2258] two years now and essentially what this [2259] is is it's a hiring system that [2261] eliminates the need for any sort of back [2263] and forth with candidates what we're [2265] doing is we're turning hiring from like [2266] this very uh I don't know like [2269] one-on-one timec consuming thing into an [2271] automated process that uses a form that [2273] they fill out to request the job that [2276] then lets you automatically accept or [2278] decline then if you accept proceeds [2281] forward with a trial request then if [2283] they do a good job on the trial then you [2284] can you know extend them an an an [2286] interview or an onboarding opportunity [2288] so this solves a bunch of hot button [2290] pain points hiring takes forever our [2291] margins suck we don't have enough staff [2293] everything's always disorganized hiring [2294] is cost efficient chaos um as you can [2297] see it's also very pretty which produces [2298] a clear deliverable we got nice colors [2300] we got names we got portfolios links [2302] it's in a [2303] CRM um you know you can template It Out [2306] by simply cop and pasting a service like [2308] this which is super straightforward and [2310] easy um in in clickup by the way which [2312] is the service that I used to put this [2313] together then you can also sell it from [2315] anywhere between 2K all the way up to [2316] 10K um that's no add-ons uh if you [2318] wanted to like do some add-ons to this I [2320] don't know use AI to like run the first [2322] pass of the CV filters you totally could [2324] um you could also charge them an hourly [2326] rate to implement it or make tweaks and [2327] then a maintenance or management fee on [2328] the hiring system um this sort of stuff [2330] crushes with recruitment businesses [2331] because recruitment businesses despite [2333] having like their whole business be [2335] essentially this process um just for [2337] whatever reason cannot systematize it I [2339] don't know so yeah in terms of what the [2341] specific system looks like this is the [2343] CRM template that I've put together here [2345] as you see I've added some documentation [2347] called how this pipeline works so I even [2350] go through and this is for my own [2351] business I actually use this in my [2352] business but just to give you the tldr [2355] um we have a General application form [2356] that somebody fills out when they fill [2358] it out they're add another new applicant [2360] to show you guys what this form looks [2362] like if I go to type form over here this [2364] is basically it a nutshell what role are [2366] you applying for who am I because this [2368] is to work with my business I have [2370] definitely do not have that many [2372] subscribers oh I must have added an [2373] extra zero that's funny I guess I'm at [2376] 40,000 [2377] now thank you very much um contact [2380] details please enter your name and email [2381] address below portfolio we ask for [2383] portfolio location of the person start [2386] date as soon as they'd be able to begin [2389] weekly availability and this is kind of [2390] a Nifty thing that uh like I do and and [2393] have done with all of my agencies [2395] because my business partner at the time [2396] brought it up and I thought it was [2397] brilliant but I basically see nobody [2399] else do it it's where you ask the [2401] applicant for the hourly rate that they [2403] want when you ask an applicant for the [2406] hourly rate that they want they [2407] basically I mean you think of this as a [2409] little bit evil but they basically start [2410] competing against themselves and they uh [2413] usually you know what we do is we'll [2414] we'll say in the job post like on indeed [2417] or something um average hourly rate $25 [2420] they see this and they'll bid 23 you're [2422] thinking okay well 23 versus 25 that's [2424] not that much but it's like that [2425] actually is it's 8% you you immediately [2428] added 8% to your uh cost of goods sorry [2431] you've reduced 8% to the employment part [2434] of your your cost of goods or services [2436] which is crazy um and then you know if [2438] there's somebody that is extraordinarily [2439] talented they pitch a lot of money and [2441] when they pitch a lot of money you know [2442] that shows you that shows yourself that [2443] they're very confident that they believe [2445] they're very good at what they do which [2446] is also a positive so anyway the way [2448] this hiring system works is you will [2449] fill out this form after you're done [2451] filling out this form they're added [2452] under the new applicant field for the [2454] role that they applied to so Peter Smith [2457] Steve and Nix for instance I mean [2458] obviously these are fake names but um [2460] yeah they're added under here with all [2462] of that data then what happens [2464] afterwards is you have the ability to [2466] confirm and then request a trial if you [2468] move them over to request a trial what [2470] happens is they're automatically sent a [2474] um templated email with a task that they [2476] should finish now if they're a video [2478] editor for instance which is what I was [2479] hiring for here let me show you guys [2481] what that form looks [2484] like track your time using clockify or [2486] another time tracking app your task is [2489] to create a short form 15 to 30 second [2492] clip here's a [2494] brief quite in-depth brief here's a [2497] Google Drive link to upload the thing to [2500] and then the way that our company does [2501] it is we pay people for trials we're not [2503]  so that's why we ask them to [2505] track their time send me an invoice when [2508] I send them an invoice I pay them within [2509] 48 business hours by card wise um or or [2513] whatever so yeah great system um this is [2516] pieced together with not only uh the the [2519] CRM here which I will provide available [2521] to you guys um as a clickup link you [2523] guys feel free to Just Produce the exact [2524] same one by the way um in a Google sheet [2526] or notion or whatever you want so you [2528] can see the columns here aren't [2529] necessarily rocket science but uh it's [2532] cool not necessarily just because it's [2534] you know a clickup thing um it's just [2537] cool because it's like a basically [2540] Universal approach to hiring that I [2542] think extends Beyond just [2544] systems all right that's that for [2547] uh five more systems that you could sell [2549] today to make between $1,500 to $110,000 [2552] I hope you guys appreciated this if you [2553] guys have any questions about any of the [2555] systems that I put together just let me [2556] know drop them down below um I've done [2558] videos on the majority of them up until [2560] this point I think I'm probably going to [2562] have to re-record the video on the [2563] hiring system because I uh created it I [2565] think when I was at like 500 subs or a [2567] th000 subs or something and probably [2569] didn't have a lot of reach so not a lot [2570] of people understand the functional [2571] utility of something like this I'm going [2573] to be building out the nadn tutorial for [2575] that deep personalization system as well [2577] I'm going to be doing that live just to [2578] show you guys my thoughts as I put it [2579] together so aside from that everything [2581] else you can find on my YouTube channel [2583] uh and I'll make sure to include all the [2584] resources and everything else you need [2585] below really appreciate it if you have [2587] any suggestions for future videos or [2588] content I Source most of my ideas from [2590] my audience at this point thank you very [2592] much to everybody that has done so so [2593] far and I'll catch you on the next video

Video: https://www.youtube.com/watch?v=JNI1kdkxaLo
Title: Make.com vs N8N in 2025 (AI Agents, Key Features, & More)
[0] hey my name is Nick I made over a 100 [1] Grand last month with no code tools like [3] make and now nadn both these platforms [6] have gotten super popular recently so in [8] this video I wanted to basically give [9] you guys a comprehensive breakdown of [11] each from somebody that actually uses [12] them but also not just from a nerdy [14] academic perspective but in terms of [16] real business utility like these [18] platforms ability to drive dollars I'm [20] also going to cover the differences [22] between them I'm going to talk about [23] what the building process looks like on [24] nadn versus make.com I'm actually going [27] to like create the same system on both [29] platforms you can see that difference [30] play byplay I'll show you the relative [32] cost of each platform give you guys a [34] financial breakdown and finally we're [35] going to round it out with which one I [36] would personally choose moving into the [38] new year especially if I were completely [39] new to this and doubly especially if I [41] wanted to make real money selling [43] services on them so if you guys are [45] looking to use no code in your business [46] or maybe start an agency doing [48] automation or something of that nature [50] then this is the video for you let's get [51] into [53] it okay buckle up cuz we got a lot to [55] cover as I mentioned we're going to [56] start by breaking each platform down [58] first will be nadn where we're going to [60] chat about the context kind of some [62] background information what nadn was [64] made for uh the name of nadn which most [66] people don't know I'll chat about some [68] Concepts that are fundamental to nadn [70] but don't apply to other no code [71] platforms stuff like their canvas [73] workflows uh nodes and some of their [75] looping logic then finally we're going [76] to chat about AI agents which is one of [78] the big reasons why NN has gained a lot [79] of prominence recently um finally after [82] that we're going to do a Hands-On ux [84] review which is where I actually go into [85] the dashboard play around with the tool [87] just walk you through everything from a [88] bird's ey view after after we're going [90] to do the exact same thing with make.com [92] contexts Concepts a Hands-On ux review [94] and then we're going to get to [95] everybody's favorite part which is the [96] actual building where I am going to [98] build the exact same system in both make [100] and nadn I'm going to contrast the [101] approaches they're in you're going to [102] learn a lot about the different sorts of [103] logic required like the skill levels um [106] programming knowledge and so on and so [108] forth after that we'll cover some major [110] differences in ux and functionality I'll [112] kind of go line by line and talk about [113] my own experience is somebody with many [115] many years doing no code um before doing [117] a financial comparison and then I will [119] give you guys the secret sauce at the [121] very end and tell you what I would [122] choose hopefully that makes sense let's [124] dive right into it so the very first [126] thing we're going to do is break down [127] each platform I'm going to be taking [129] more of an economic perspective when I [130] do these breakdowns um the reason why is [133] because I just notice a lot of people on [134] YouTube are like talented with these [136] platforms but they'll put together [137] systems that like wouldn't actually work [139] in practice I find if you wanted to sell [141] them to a client if you wanted to use [142] them in a business like there's a lot of [144] talk about AI agents right now for [145] instance and I think like superficially [147] a lot of the the functionalities can be [148] really cool but but you know I ask [150] people well okay like how much money [152] does this actually make and a lot of the [153] time they kind of come up with Jack [155] for an answer so uh I'm I'm going to [157] show you guys some practical ways that [158] you guys can make money with both of [159] these platforms andm make.com and then [161] as I mentioned I'm going to uh you know [163] uh I'm going to be talking about some [166] more in-depth reasons why to use one [168] versus the other so obviously let's get [170] started with naen um I'm going to give [171] you guys some background contacts first [173] things first I just took a screenshot of [175] their page just a few minutes ago this [176] is what it looks like as you guys can [177] see they're very much positioning [179] themselves as AI native workflows that's [182] in contrast to you know zap make.com and [184] a couple of other platforms that you [186] know while while uh talking about AI I [188] don't really think make it like the [189] whole pitch but these guys have a lot [191] behind them now right like they work [192] with Pearson Adobe Works send and blue [195] uses nadn World Central Kitchen I don't [197] know what that is but if a logo's got a [199] globe on it odds are it's pretty big so [202] let's start by talking about some [204] context and then uh let's let's run [206] through the rest of it in turn now [209] really interesting fun trivia fact of [210] the day that nobody's ever going to give [212] a if you if you understand um n was [214] actually initially called node mation [216] and is very much the new kit on the [217] Block so notation to nadn no idea but [221] apparently that was not a logical [222] stretch for some and so now we call it [224] nadn n includes a number of features [226] that most other no code tools do not the [228] most important one and the one that gets [230] a lot of Buzz is this concept of [232] self-hosting which is the ability to [234] host nadn on your own server instead of [238] pay a platform every time you send or [241] receive data using it so this is in [243] contrast to make.com it's in contrast to [245] zappier it's in contrast to basically [247] every other platform out there and it's [249] it's very very rare in the no code space [251] which naturally resonates with people [253] that are a little bit more developer [254] oriented like you know if the main Crux [256] of the differences I can set up a [257] self-hosted server with it if that's one [259] of the reasons why you're going to use [260] it obviously that sort of rationale is [262] going to appeal more to like the [264] developers amongst us right now nothing [266] comes for free if you want to self-host [268] it is going to take some more technical [269] just set up I'm planning on making [270] videos on that and a bunch of other n [273] and a and stuff in the future so if [275] that's something you guys are [275] considering then definitely stay tuned [277] for that but just know that nothing [278] comes for free you know if you make [279] something that's just like a lot better [281] A lot of the time it's going to require [282] you a little bit more work now another [285] big part of naden is that they're open [286] source so bird's eye view that just [288] means unlike the majority of other no [290] code tools out there you can actually [291] like look at the code of nadn which is [293] pretty whack if I click on this button [294] here I open this up and just you know [297] scroll through this is a GitHub repo [299] GitHub B a place where you could just [300] store up scripts and code and share them [302] with people um this is the whole giad [304] repo for for NN so literally all the [306] code for the whole thing is here um they [309] are not secretive with you know how they [312] put this thing together make does not [314] have this um you know zapier and other [316] no code platforms do not have this or if [318] they do it's usually some limited subset [320] of the the code that um you know they [322] don't necessarily reveal to everybody so [325] you know what that means is in practice [326] if you guys were looking to take nadn [328] and then like I don't know let's say you [329] make a you make a business with it or [330] some API or something you could [332] theoretically like you know hire up some [334] developers and have them actually tweak [336] the source code of n then itself to like [337] make it work better if you run into some [339] major work uh sorry some major block or [341] something uh you can you can actually [343] solve it with code now as I mentioned [345] this is a double edged sword because [346] more freedom means more responsibility [347] thank you Uncle Ben I don't think that [349] was his quote but um you know nothing [351] comes for free but the really cool part [353] about nen and you know kind of this [354] point that I'm going to keep on harping [356] over the course of the next hour or so [357] is you don't actually have to self-host [359] it um I don't self-host it a lot of [361] people don't self-host it the Big [363] Technical block for most people in [364] getting started with NN is the [365] self-hosting thing but you absolutely [367] don't have to the pricing actually ends [369] up being pretty comparable to most other [370] no code platforms if you don't so uh you [373] know like hosting is really self-hosting [374] is really cool and it unlocks like a [376] whole new side of the no code platform [378] but they also totally have just have a [380] like a cloud-hosted offering that you [381] can pay for and that's fine too so this [383] is definitely Best of Both Worlds you [384] could tell that it's the new kit on the [385] Block because they're just offering a [386] lot of these like next Generation [388] functions which is neat [390] and then yeah you know they they [391] definitely lean heavily on the dev [392] friendly side of the no code Spectrum um [395] they have a pretty straightforward [396] interface it's not really as polished I [398] would say as most other ones nor is it [399] as intuitive but once you get used to it [401] can obviously be very [402] powerful okay we're onethird of the way [405] done the text before we jump into [406] building the second thing I wanted to [408] chat about are some Concepts now what I [410] have in front of us is I have an actual [412] snippet of um an NN canvas a canvas is [415] just like the visual surface upon which [417] you drag and drop modules and as you see [419] here we have this thing on the left [420] which says execute workflow trigger goes [422] into like this code module we do some [424] fun filtering magic aggregating and then [427] we add a label to it looks like a Gmail [430] um what's going on here I have no idea [432] we're going to have to jump into the [433] actual ux of the platform and be able to [435] click on any of these puppies but [436] essentially um this just is an [439] illustrative tool to show us what each [440] of these three major Concepts in an are [443] the background here is just the canvas [444] that's this little thing with a bunch of [445] dots the workflow is just respond [447] corresponds to this whole thing and then [449] the the nodes are just the individual [450] things here so execute or Flor trigger [452] that's a node code that's a node I bring [454] this up because each of these have [456] different like definitions and and [458] Concepts between no code platforms so [460] it's just good to sort of understand um [463] uh you know their differences before we [464] actually dive in because I'm going to be [465] throwing a lot of terminology at you and [467] you know anytime you're in more of like [468] a programmer sort of thing automation [471] definitely being one of them I'm [473] definitions can be can be super [474] important so yeah that's that um in [477] terms of inputs and outputs nadn is kind [479] of unique and how it structures like the [481] the view um the inputs are just always [484] on the left outputs are just always on [485] the right so pretty straight forward [488] your work is here in the middle which is [489] just transforming the inputs to outputs [491] in some way so uh yeah you know the [494] input is the thing that feeds into the [495] node if I were to scroll back up here um [497] for the purposes of of posterity you [499] know this is the input here and then [502] this is the output to this so this you [505] know text classifier I mean that module [507] in particular is not here but I don't [509] replace the term Tex classifier with [510] code and this is basically just like a [512] bird's eye view of of of this these are [514] the inputs and the outputs uh [516] credentials um are you know reasonably [519] simple to understand they use these [521] credentials to sign into all of these [523] different platforms like no code tools [525] are just glue right glue is fantastic [527] but it doesn't really do anything unless [528] you connect stuff to it or stick it on [530] stuff right so just like glue um no code [533] platforms need other platforms to to [535] connect to and credentials are a very [537] hot topic um in no code tool cuz some of [539] them handle credentials really easily [541] some of them handle credentials really [542] shittily um I'm happy to say that nadn [544] handles credentials reasonably well it's [545] not the best I personally think make [547] handles them better which I'll show you [548] in a moment but um yeah you can connect [550] with a variety of methods oo 2 just [552] means you'll get a little sign in with [553] the platform button so you know if you [555] want to set up a cool flow which is with [556] like a Google drive folder Google sheet [558] or Google Gmail or something a lot of [560] the time you can just click sign in and [562] little signin window will pop up it'll [563] connect to your account and then voila [565] you're done that's in contrast a lot of [567] the time to doing stuff like API key [570] um you know handling client IDs client [572] secrets and stuff like that which is [573] really annoying okay and then finally we [576] have this concept of executions and [577] execution just means a run of a workflow [579] basically if I just scroll back up here [582] right that this whole thing you know if [584] I just click go and this runs through [585] from left to right that' be considered [587] one execution and this seems pretty [589] straightforward and pretty simple but I [590] bring that up because this is very [591] different to how make.com Works which [593] you'll find out uh in in a few minutes [595] make.com does not bill you based off of [598] execution in this manner bills you based [600] of something called operations so that's [602] very important to know and now that I'm [604] glad that we do we can move on to the [606] next step which is AI agents so one of [608] the biggest and most decisive reasons [610] why anaden has blown up as much as it [611] has is because of AI agents you may be [614] here because my YouTube title had the [616] term AI agent in it or maybe you are [618] just more interested in the AI agent [620] side of things than you are the [621] procedural automation side of things and [622] that's totally cool a agents are [624] definitely very powerful um essentially [627] n8n has decided very intelligently to [629] put a module in their uh like platform [633] called the AI agent it's literally just [635] like a module you can go on the right [636] hand side you click AI agent I want to [638] add an AI agent to my flow and whether [640] this is because of foresight or [641] something else and this has really [642] helped them helped them grow and you [644] know it's become a core feature of what [646] uh most naden flows that are like you [648] know do cool things involved so to keep [650] things really simple basically you know [652] when you talk when you talk to chat GPT [653] or something it's just a text interface [655] right you send a text and then it [656] returns you some text what AI agents are [659] or at least the way that um nadn defines [661] them is instead of just sending you back [663] text and that just being the interface [665] you can actually connect an AI model [667] like chat GPT or something to a tool and [670] you can choose or create one of those [672] tools and then when your AI model [674] receives a request or receive some data [676] instead of just sending you back some [677] text it can actually go and it can [679] execute something using that tool you [682] know maybe there's some weather API or [684] something it can actually go and it can [685] like call the weather API receive that [688] data and then use like some little [691] decision-making logic to like wrap that [692] in like a nice present and send it back [694] to you you know instead of it just being [695] like7 they'll say Hey you know uh it's [698] 17 make sure to like wear a coat or [700] something uh I don't know maybe you want [702] to figure out what Peter said to Sally [704] three weeks ago in the group chat right [706] you send that to your chat GPT model and [709] chat GPT thinks hm how am I going to [711] find this out well I should probably use [713] the uh you know read group chat flow and [716] then it goes through and it actually [717] like executes a flow that reads through [719] your whole group chat calls your little [721] group chat API or whatever returns that [723] data and then answers your question that [725] way you can obviously do a ton of other [726] stuff you could like create content you [728] could uh I don't know compose freaking [730] songs there's a million one things you [731] can do with AI agents and I'm going to [733] talk a little bit more about that later [734] but you know just to keep a long story [736] short a agents are one of the big [738] components that naden has over basically [740] all other no code platforms it's one of [741] the reasons why it's doing so well so [743] you're no longer just prompting chat gbd [745] statically you're now installed an AI [746] agent module as a decision maker in your [748] business and the way that I see it is [750] most of these flows are very much in [752] their early stages but there's a lot of [754] Market enthusiasm behind a agents so NAD [756] end going full AI native with this [759] feature is probably one of the key [760] reasons why they've grown so much and [762] why they're going to continue to grow [763] over the coming months and [765] years okay so that's that for Theory [768] let's actually jump into some Hands-On [769] ux let's actually play around with nad's [772] dashboard and yeah let's just learn by [774] doing which I believe is a much more [775] effective way than us just reading [777] through a slideshow so I just jumped on [778] to n8n I am here at nix ar. app. nn. [783] Cloud this is because I am running this [785] through their Cloud offering as I [787] mentioned I'm not self-hosting naden I [789] have a self-hosted instance but I don't [791] really play around with it too much um [793] and essentially let me just run you [794] through what the user interface of [796] anaden looks like cover some common [797] questions kind of before you have them [799] then we can actually jump into a [800] workflow and just play around with it a [802] little bit and uh you know add some [803] modules and that sort of thing so bird's [805] eye view we obviously have the logo in [806] the top left hand corner nothing special [808] there we have the home the home is just [810] a list of all of your workflows you can [812] sort them based off last updated last [815] created name uh you can filter them [818] based off of whether or not they have [819] tags you can obviously organize them [821] however you'd like statuses uh I don't [824] know owners if you have multiple people [825] in your organization you have an area to [828] store credentials in your home as well [830] so if you have any connections to [832] various services that you use to send or [834] receive data I don't know in my case I [835] have a Gmail account here clip clickup [837] account cal.com account IMAP account [840] this is where you'll store them and you [841] can click this button to add more if you [843] want I'll run you through what all that [844] stuff looks like when we do our [845] practical example on the left hand side [848] uh this dashboard is also broken down [850] into projects and so projects are in my [852] opinion kind of a crappy way um for an [854] to to organize different workflows um so [858] you know I have one here that's called [859] personal this is the default one that I [860] believe nidn sets up for everybody when [862] you make an account and there a variety [864] of different ways you can organize [865] things um as you can see I've sort of [867] loosely organized mine I tried [868] organizing mine based off of just a [870] specific flow you know this is for a [871] YouTube comment scraper that I put [873] together a while ago uh you know I also [875] tried making like a templates folder but [877] essentially this just allows you to uh [878] you know better organize the workflows [880] in your team sorry workflows in your um [883] NN account and then you can also assign [885] people to work on different projects so [887] you could actually add users that could [889] work on this project but not this one [890] for instance which just provides you an [892] additional level of segregation most no [894] code platforms have this so I'm not [895] going to harp on it but uh yeah that's [897] more or less the way that that's set up [898] one thing that I should mention is that [899] um credentials are not natively or by [901] default stored across projects which is [903] kind of annoying so you know like if you [905] just wanted to use this as like a top [907] level way to organize this isn't like a [908] folder like you can't just drag this in [909] here and then everything's okay um you [912] actually do need to go and you need to [913] like specifically share credentials [914] between projects because I guess the [916] idea is you know you might want [917] different people to use different [918] projects in your team um you know for [920] security and safety click this button to [922] add more and then down here we have a [924] bunch of commonly misunderstood Pages [927] I'm just going to click on admin panel [929] quickly to walk you guys through what [930] that looks like essentially when you're [932] running their um Cloud offer they take [933] you to a little a little dashboard here [935] which shows you the number of executions [937] you have the number of active workflows [938] you have and then you can also manage [940] like your billing information and that [941] sort of stuff which is pretty neat so as [943] you see I'm on the pro monthly plan um [946] my time zone you know uh there's some [948] features surrounding what executions to [950] save uh you can click this button to [951] restart your workspace it actually sends [953] a request to the server to turn it off [955] and and then there's some billing [956] information here which I'm just not [957] going to get into for privacy purposes [959] will show my card and so on and so forth [961] um they also push their forums really [963] hard and that's just because they [964] actually do have a fantastic Community [966] um you know it's probably one of the [967] most active communities out there on any [969] no code platform I think the N Community [971] is a lot more active than the make [972] Community which we can check out later [974] as well but uh yeah that's that's more [976] or less this from a bird's eye [977] perspective um we just go back here [980] you'll see there are a few other Pages [982] there's templates now n organizes um [985] this templates page really well [987] essentially they allow this open [989] marketplace where people can create [991] their own flows and then just put them [993] up for you um to download in like a [995] second and so they also have a really [998] cool canvas feature inside here where [999] you can actually like play around with [1000] the scenario just live on their website [1003] uh which is sweet and then they document [1004] them all really really well so a lot of [1007] um a lot of potential here just to get [1008] up and running with like you know the [1010] barebones um I want to say skeleton of a [1012] flow instead of you necessarily always [1014] having to like build everything from [1015] scratch you can just find something [1016] that's like 80% of the way to what you [1018] were planning on doing and then just M [1020] Massage it a little bit it's also [1021] obviously a great learning tool I really [1023] like the templates [1024] feature after that you have a variables [1027] page uh variables is just sort of like a [1028] way to store account uh accessible [1031] information I don't know I could like go [1034] um account owner name and then I could [1035] say Nick or something like that the [1037] benefit there is anytime I create a scen [1040] um not a scenario rather but anytime I [1041] create a workflow um I can use this [1044] variable now to reference this value so [1048] this is what I would use in uh the kind [1050] of pseudo code that they use and I'll [1052] walk you guys through that when we [1053] actually build it a flow we then have a [1055] list of executions here which is kind of [1056] neat um this is just a list of basically [1058] every run that has occurred in your nadn [1060] instance I'm using Cloud so in my case [1062] this would be on their server but if [1064] you're using your own it'd be on your [1065] own server then you have a little help [1067] section here um a list of updates over [1069] here on the left hand side they're very [1071] consistent with their updates um and [1073] then uh yeah they're also very um I want [1076] to say helpful when you describe bugs [1078] and and stuff they kind of like template [1079] out all the error messages and and [1081] everything like that uh because in my [1083] opinion anen is probably one of the the [1085] better active developer communities just [1087] given that it's open source and stuff [1089] all right great so we just nerded out [1090] over a little dashboard um what does [1092] this actually mean for us well I'm [1093] actually just going to dive right into [1095] um you know the canvas and we can poke [1097] around with some system that I built [1099] before so this is a simple email [1101] autoresponder I just said email [1102] autoresponder on the Le hand side RB [1104] just stands for rebuild um if you guys [1106] are new to this channel I uh have [1107] created a bit a long like make.com [1110] course a while ago that taught everybody [1111] how to get up and running with simple [1113] business [1114] utility uh scenarios as they're called [1117] and make you know like very simple two [1118] or three module flows that like can [1120] actually drive revenue and make your [1122] business better and what I'm doing now [1123] is I'm just rebuilding them all in na10 [1125] just to prepare myself for a course that [1126] I'm going be creating on this platform [1128] but essentially this email autoresponder [1130] functions really similar similarly and [1132] very simply it starts with a Gmail [1134] trigger Gmail trigger just means uh this [1137] is if we double click on [1139] something that watches my Gmail every 15 [1141] minutes so credential to connect with I [1144] connected to my Gmail account but I can [1146] also click create new credential then [1148] it'll ask me to sign in with my Google [1149] account is kind of neat just going to [1152] close this um then there are a bunch of [1155] variables here that I could set I could [1156] set mode how quickly do we wanted to [1158] check my Gmail so every X and then X is [1162] 15 I could have Al also just picked 15 [1165] um sorry I could have picked every [1166] minute every hour every day could it in [1169] every week every month so you guys see [1171] inid in provides you a a ton of I guess [1174] flexibility and a lot of their built-in [1176] nodes are [1177] fantastic you can select a variety of [1179] events in this case I guess it's just [1180] message reive for this module um you [1182] have the ability to kind of make some [1183] changes we could simplify the output and [1185] then we could also add some filters so [1186] in my case I just added a filter for [1188] emails that I was receiving with the [1189] subject new leite now the really cool [1191] part about NN is it allows you to fetch [1193] uh test events um and just handle [1195] testing really easily which I'm going to [1196] cover in a lot more detail later but [1198] essentially if I just click this button [1200] you know this is the input of my flow I [1201] click a button then um what I receive [1204] here in my little query is this goes [1205] through my Gmail account and actually [1207] finds an email that fits this filter [1209] subject new lead and you can see it [1211] returns me a ton of fields here right [1212] this is in Json JavaScript object [1214] notation but they variety of other forms [1216] let's just use schema that's probably [1217] the simplest for us and you can see that [1219] it gives me a ton of data it goes and it [1221] fetches an email that contains this and [1223] one of them is here hey Nick uh Nick [1225] here thanks for reaching out I [1226] appreciate your kind words about Peter's [1227] content happy to help get you started I [1229] just let Sam my partner know about this [1230] he loves Peter's work too so it's great [1232] timing it'll give you a reply in a few [1234] minutes to dive into more detail this is [1235] an actual email in my Gmail account um [1238] that we've just we've just pulled up so [1240] that's pretty sweet uh the really cool [1242] part about the ux is you actually get to [1244] adjust this and you can make this as big [1245] as you want so I don't know if you just [1247] wanted a bunch of space in the middle [1248] you can you can do this it's kind of [1250] neat uh I'm more used to uh a few other [1253] no code platforms so [1254] NAD dedication or focus on minor aspects [1258] to use user experience to me has been [1259] very pleasant but okay so we just [1261] covered one node obviously there are a [1263] variety of nodes in this workflow [1264] there's an open AI node if I double [1266] click on that it'll open up here and [1268] there's also a Gmail send message node [1270] as well but as you can see node [1272] structures don't change you know they [1274] kind of all looks the same we have some [1276] input on the left hand side we have some [1278] area where we can manipulate parameters [1280] in the middle and then on the right hand [1281] side we have some like weighted to get [1283] output and then you know in this middle [1285] section you know there's just a bunch of [1286] fields and these fields tend to depend [1288] on uh What uh module you are using so [1291] that's kind of like what the actual um [1293] step-by-step process looks like if [1295] you're were to be playing around an N [1296] putting pieces together and stuff like [1298] that if we head over to the top right [1299] hand corner you'll see there's an open [1300] nodes panel if I give that a click well [1302] now we can see that um you know they [1304] variety of options available to us if we [1305] wanted to extend this flow or do [1307] something different to it so for [1309] instance um I could search a ton of [1311] nodes here but let's hypothetically say [1313] that after we send this Gmail message I [1315] wanted to do something in a project [1317] management platform um one called [1319] clickup if I type clickup here you'll [1321] see that nent actually already has a [1322] native integration with clickup and they [1324] tend to have pretty good native [1325] Integrations it's not the best but it's [1326] pretty solid the second that we click on [1329] it you'll see that it exposes a bunch of [1330] different actions we could do we could [1331] create checklists we could create [1333] checklist items we could create comments [1335] folders I mean like basically anything [1336] that you can do on clickup you can do [1338] through the nadn API connection as well [1340] so I don't know maybe I want to create a [1343] task there you go give that a click the [1346] second you create it you need to select [1347] a credential to a to um connect with and [1350] so I could click create a new credential [1351] here Click ooth 2 and then sign into my [1354] clickup account but in my case I already [1355] have a credential so I don't actually [1356] have to do that just yet and you can see [1359] again now we have a bunch of different [1360] fields here right so obviously you need [1362] a little bit of playing around with any [1363] no code tool to understand what each of [1365] these do um but if you did want to you [1368] know whip up a flow that does this or [1370] get a template as I was mentioning [1371] earlier that maybe does these first [1372] three parts and then add on some [1373] additional functionality uh you could [1375] literally do so just by clicking this [1377] plus button typing in the plat that you [1378] want and then dragging that little arrow [1381] over into the subsequent module very [1383] straightforward stuff um very cool and I [1386] like how easy it is to drag and drop and [1388] move around this canvas and stuff like [1389] that as well okay great so I think you [1392] guys probably understand most of what's [1394] going on inside of both the canvas and [1396] the dashboard um the last thing I'm [1398] going to mention is uh as you know I've [1400] talked about earlier testing is a pretty [1402] big part of any no code building process [1405] they have the ability to test workflows [1407] very easily if you just click test [1408] workflow it'll go through left to right [1410] and basically execute all of the [1412] scenario uh all of the the nodes in the [1414] workflow the reason why we can't run [1416] this is just because I've added a new [1418] new node to the right hand side of this [1421] um which you know was not properly [1422] configured so if I delete that if I [1425] Mouse over this and you can just drag [1427] select an element and then delete it and [1429] then test the workflow you'll see that [1431] it actually goes through and visualizes [1432] the running of all of us which is pretty [1435] neat so when the nodes turn green we now [1438] see the workflow is executed [1439] successfully if I double click on any of [1440] these I can go in and actually see what [1442] the output was for that node run which [1444] is pretty sweet so that was the output [1447] of this node if I feed into the next [1449] node you see that it went in here on the [1451] left hand side we then transformed it [1453] this is the output of that node which um [1456] you know uh sort of depended on the AI [1458] logic here in the middle and then on the [1460] right hand side that's the output of [1461] this node and then this is the output of [1462] that Noe when you send a message through [1464] Gmail it just kind of tells you hey [1465] how's it going here's the ID of the [1466] message you send so on and so forth if I [1468] actually go into the email address that [1470] I used to send this we can actually see [1472] it right over here hey Sam Nick here [1474] thanks for reaching out I actually just [1475] received that email a second ago so this [1478] is hooked up it's live it's ready to go [1480] and yeah in a nutshell that's um sort of [1482] how nadn looks there's obviously a [1484] little bit more detail hidden behind a [1486] lot of these um toggles and drop downs [1488] and stuff but I think I'll leave it for [1490] there and then uh we'll pick up going [1492] into more detail as actually build out [1494] um our our example system in a [1496] moment okay great so with that taken [1500] care [1500] of let's move on to make.com now [1504] make.com it's pretty similar in I guess [1508] Theory to nadn but there are a couple of [1509] fundamental differences which we should [1511] chat about so first of all um here is [1513] their landing page I again just went out [1515] and then in a few minutes took a [1516] screenshot of it and pasted it over here [1518] nothing special as you can see they are [1520] nowhere near as dialed into the whole AI [1522] side of things it just says build [1523] systems # withm make well let me tell [1526] you uh they're a little bit older of a [1527] platform and because cuz they're a [1528] little bit older of a platform um I [1530] don't know maybe they just don't have [1531] their finger on the pulse as much or [1532] something like that but um you know they [1534] they haven't really taken as much to the [1535] whole AI agent Revolution I want to say [1537] they've certainly made some changes [1538] especially recently but um yeah [1540] definitely a little bit further behind [1542] on that AI front that's not to say that [1543] it's not a great platform and you can't [1545] do really cool things with it um I have [1547] built my career off make.com and I've [1548] made well over a million dollars using [1550] it so just to give you guys some [1552] background make.com formerly called [1553] integrat was launched back in 2012 um [1556] that actually is a plus if you think [1557] about it cuz that means that the had a [1558] long time to iterate and improve their [1560] product as well as gather user feedback [1563] also does mean that a fair bit of the [1564] platform was built using older [1565] Technologies so there's a bit of a [1566] trade-off you're not going to find it as [1568] Snappy as NN like we were playing around [1570] with it a moment ago um but uh you know [1573] the the the value there is that the SE [1575] the features that they do have tend to [1576] be extraordinarily well uh grooved I [1579] want to say now it's simple but it's [1581] also close source so in contrast with NN [1584] if you know nadn Brands itself as open [1586] source and flexible make.com kind of [1588] Brands itself as like Hey we're closed [1591] but we're really really easy for you to [1592] pick up you could do something that you [1594] know adds value to a business in five [1597] minutes maybe even less so you're not [1599] going to be fiddling with code you're [1600] probably not going to be fiddling with [1601] servers unless you've done something [1602] super wrong and you're definitely not [1603] going to be fiddling with any [1604] self-hosting [1606] make.com um actually just manages [1608] everything in the cloud for you so all [1609] you really have to do is just drag and [1610] drop modules across the screen you don't [1612] have to deal with any of like the devop [1613] stuff now you know just for [1615] self-awareness purposes what I showed [1616] you back there with nadn was Cloud [1618] hosted as well so they're sort of on [1620] Level Playing grounds if if we're [1621] talking sheerly cloud hosted but if you [1623] were to self-host it which um as I [1625] mentioned I may record a video on at [1627] some point in the future and there are [1628] plenty of other videos that you can [1629] check out right now on YouTube about the [1631] topic if you'd like uh you do have to do [1632] a fair amount of like development work [1634] you have to sign up to a server you have [1636] to add environment variables you have to [1638] you know connect to a repo and that sort [1639] of stuff even authentication in make.com [1642] is very very straightforward they [1644] include a ton of built-in native [1645] connections way more than uh nadn does [1648] probably owing to the fact that they're [1649] a little bit older um and all you really [1651] have to do is just click create a [1652] connection 90% of the time you will just [1654] automatically connect to your account [1655] and then that's [1656] it now as I mentioned they have a ton of [1658] Integrations uh basically if it has a [1660] ready-made module for your favorite [1662] service it's a one-click sort of deal [1664] and then voila you know you have a [1665] module that actually connects to some [1667] API or does some business thing they [1669] have a very large user Community owing [1670] to the fact that they've been running a [1671] little while longer than naden has so [1673] there's obviously a lot of tutorials [1674] templates and uh Blueprints and [1676] scenarios I've definitely added [1678] substantial percentage of that recently [1680] um but yeah that just means you get a [1681] workflow up and running in a few minutes [1683] so if I could just contrast the two [1685] platforms just kind of philosophically [1687] um you know make is is polished very [1689] simple uh probably fewer things that you [1691] could do development wise but you know [1694] it works and when it works it works [1695] really well whereas nadn is definitely [1698] more of the developer friendly flexible [1701] you can do way more things with it um [1703] but you you know you do kind of need to [1705] know a little bit and there are some [1706] gotchas and stumbling blocks which we'll [1707] see later all right let's chat a little [1708] bit about the concepts in make.com they [1711] are quite different from nadn so it's [1712] very important to know the difference [1713] between them I'm going to cover them [1714] from a bird's ey view this is what a [1716] make.com flow looks like instead of a [1719] workflow like an nadn this is referred [1721] to as a scenario instead of nodes like [1724] those little square ones that we saw [1725] earlier these circular ones are referred [1727] to as modules um a trigger is sort of [1730] like the thing that begins the flow and [1732] an action is everything else triggers [1735] just have this little circle with I mean [1736] you know in this case it's little [1738] electricity icon but it can be a number [1739] of things um and yeah the core building [1742] block of everything is just the the [1743] scenario it's a flowchart of [1745] interconnected modules I mention here so [1747] we're going to dive in and actually play [1748] around with this but before we do there [1750] are a few differences between how they [1752] handle things um and I just wanted to [1754] cover them here the first is bundles so [1757] um basically the way that make.com will [1760] work is it it'll alert you every time [1762] that um a module runs more than once or [1764] rather if I if I back up a couple steps [1767] um when a mod runs uh if it outputs [1771] multiple bundles of data okay if the [1774] output of the module is more than just [1776] one thing it's a collection of things a [1778] list an array whatever you want to call [1780] it then every subsequent module runs a [1782] bunch of times and so they alert you to [1784] this with these little bubbles when you [1785] run stuff this ran once this run seven [1787] times now the reason why I bring this up [1789] is because um this is a core part of [1792] make.com sort of philosophy um that's [1794] different from Ann's nadn had an [1797] execution which is basically when the [1799] whole workflow gets executed that's one [1801] execution well make.com doesn't work [1803] that way it works in terms of operations [1805] so instead of the entire U workflow [1807] counting as one execution basically [1810] every time a single module runs here it [1812] counts as one operation and you're build [1814] based off of your operations usage so [1817] for instance a flow like this you know [1818] we're one little um run of the module on [1821] the left hand side and seven runs of the [1822] module on the right hand side this would [1824] amount to eight operations and it's very [1826] important if you want to like understand [1827] the billing and how it scales there are [1830] also a few other things like filters [1831] that's what this little gear icon is in [1833] the middle which I'll touch on and then [1834] routers which allow you to branch and do [1836] cool things to create complex paths um [1838] and that's one of the reasons why I [1839] really like make.com it's just very [1841] simple and straightforward I would say [1843] once you get it um but you know the [1844] operations uh billing and stuff like [1846] that is definitely one of the cons now [1849] uh previously like before with n8n um [1852] you know I I showed you guys a little [1854] snippet of code there a little bit of [1855] Json with um I believe it was like the [1857] account variables uh make.com sort of [1860] abstracts a lot of that code stuff away [1862] into just these nice little bubbles this [1864] is a green little bubble called sheet [1865] look how friendly it is if you drag and [1867] drop it into this field here you'll be [1869] referencing the sheet you can see we [1871] dragged and dropped this email address [1872] module which is this one right over here [1874] um so they they like to abstract a lot [1876] of the complexity behind just nice [1878] pretty cute [1879] ux and then uh yeah you know in general [1883] and you know feel free to take a look at [1884] this resource I'm obviously going to [1886] include it down below in the YouTube [1887] description but in general they just [1889] abstract a lot of their complexity away [1890] it makes a lot easier to build and [1892] troubleshoot automations even if you [1893] have a very limited Tech background so [1895] make.com is definitely like the beginner [1897] friendly of the bunch um now I'm going [1899] to do a Hands-On ux review and show you [1901] guys what it actually looks like to [1902] build stuff with all right so some user [1904] experience differences already as you [1906] could see this is the dashboard area of [1908] make.com there's a lot more going on if [1911] I'm honest than n8n and I think that's [1912] just because this is an older software [1914] platform so they've just found room to [1915] stick a bunch of everywhere um but [1918] if I just go to the very top left hand [1919] corner we have this dashboard here with [1921] a ton of different buttons we start with [1922] the organization page which is just the [1924] company essentially your your company [1926] account and uh you have pretty clear [1929] visualization of your operations given [1930] how that's sort of like how you're build [1932] and how they make their money they try [1933] and put that first and foremost so so [1935] you can see I I'm on the Pro Plan here [1936] with a price of 62 bucks and I purchase [1938] 40,000 Ops a month and basically I've [1940] used 1,324 of those operations they [1944] break it down into like a daily graph so [1946] I could see um and you know as I'm sure [1948] you could tell I'm using substantially [1949] fewer operations than I'm paying for so [1951] this kind of tells me I might be able to [1952] downgrade my plan realistically although [1954] in the last few days I've used a little [1955] bit more they have a little data [1957] transfer widget here I'll be real in [1959] practice nobody ever cares or uses this [1961] unless you're doing super like visual or [1963] video heavy applications in practice [1965] very few people are um there's a way to [1968] upgrade your plan here obviously these [1969] guys are monetized as hell you could buy [1971] extra Ops over here you can enable [1973] operations Auto purchasing which you [1975] know if you um hit the 40,000 cap in my [1977] case I just automatically buy another [1978] 10K more uh and then we have a bunch of [1981] other tabs here and I'm not going to [1982] cover every single one um just because [1983] there there's a lot to go off of but [1985] probably the key are um the teams so you [1988] could actually add users to specific [1989] teams this is sort of analogous to the [1992] projects in nadn where you have [1993] different users that are capable of [1994] working on different projects so you can [1996] see I have two users here um this is [1998] just one of my emails this is another [1999] one of my emails but I can invite [2001] however many I want with different types [2002] of [2004] roles and then another thing that I want [2006] to I want to touch on is is if I go down [2008] here on the left hand side and then go [2009] to scenarios this is sort of where like [2011] the vast majority of your uh like work [2014] is is realistically going to live this [2016] is a list of all the scenarios in my [2018] account as you can see I have a fair [2019] number because I've been working with [2020] make.com for quite a while um and on the [2022] left hand side here we have folders [2024] which is how I organize them so um [2026] because it's organized A to Z I put a [2028] little naming convention here with z0 [2030] that means that this is always going to [2031] be the top so example builds is always [2033] at the top 01 sales and marketing all [2035] flows that correspond to sales and [2036] marketing kind of stick them here [2038] management Finance archived this is an [2040] iterators agors master class one of my [2042] YouTube courses and this is NSM Nix rif [2044] media which is sort of like my my [2046] YouTube brand so as you can see here [2048] there's a ton of information and just [2050] breaking it down kind of Step by Step [2051] you have a list of active scenarios here [2053] and then inactive scenarios here and [2055] then Concepts which are something that [2057] basically nobody on make.com from my [2059] understanding nobody that actually makes [2060] money with it actually uses [2062] unfortunately um but anyway let's [2063] actually click into one of these [2065] scenarios and just play around a little [2066] bit let me see what would be a good one [2068] to do let's do this new ghost.org sign [2072] up to email roadmap let me show you guys [2074] what this looks like when I give this a [2076] click we're now entering the overview [2078] and the overview includes the title of [2080] the scenario up here um the diagram [2082] which is sort of like how it works and [2084] on the right hand side it also includes [2085] all of its run history so as you can see [2088] you know make and NN like they have the [2090] exact same core building blocks they [2091] just frame it and represent them a [2093] little bit differently a very big and [2095] common question I get is Nick um you [2097] know what can nadn do that make.com [2100] can't or what can make.com do that NN [2102] can't the reality is both platforms can [2104] do the exact same thing it's not a [2106] matter of if you can do something it's [2108] just about how easy and how quickly you [2109] can do it so anyway moving on if I give [2112] this diagram a quick click I actually go [2114] into the scenario editor and now I'm [2116] actually capable of you know changing [2118] and mucking around and essentially [2119] manipulating the scenario to walk you [2122] guys through how this works if I click [2124] on this uh module here it'll open up [2126] this ghost.org sign up and then I have [2128] this URL anything called a web hook in [2131] any no code platform is basically just [2133] like a it's like a trigger that you can [2136] send a request to to start a flow and so [2139] um services like ghost have uh ways to [2144] send requests and then you can catch [2146] those requests and then begin whatever [2148] flow you want this is my trigger [2149] obviously so basically what happens is I [2151] will catch a web hook request from the [2154] service ghost.org which is by the way [2156] just my blog and basically anytime [2158] somebody signs up and enters their email [2160] address over [2162] here um we go through the rest of this [2164] flow and then it sends an email if I [2166] open up this little module you can see [2167] that we're actually in like a module [2169] editor now and we can see that there are [2171] Fields here with those bright shiny [2173] colored variables like we saw earlier if [2175] you click on one of the fields it'll [2177] actually open up all the data coming in [2178] from previous flows so you see member [2181] current previous now I'm not going to [2183] click current here just because there is [2185] undoubtedly going to be some user [2186] information but this is essentially just [2188] stores and caches the last request so [2189] you can actually see the data that the [2192] the last um run of your scenario um [2194] output so uh very similar in nature to [2197] the input and the output flow in NN I [2200] will say I don't really think it's it's [2201] laid out anywhere near as nicely if you [2203] think about it the input to this email [2204] module should be the web hook but it's [2205] kind of over here on the right it's you [2207] know automatically changes depending on [2210] um where you are on the not the canvas [2212] but on their like little editor window I [2214] don't know I'm not as much of a fan I [2215] definitely like what Nan did with that a [2216] little bit more but yeah that's more or [2218] less how that works just like we had [2220] different fields in NN we also have [2221] Fields um in make for every module so [2224] since this is an email module some [2225] expected fields are probably going to be [2227] subject right content type [2231] content scroll down a little bit here [2234] actually at the bottom there's a show [2236] advanced settings here make.com you know [2238] owing to the fact that it tries to be as [2240] user friendly as possible they hide away [2241] a lot of the complexity so most of the [2243] time if you want to do like the super [2244] cool you got to show the advanced [2245] settings to basically everything but as [2247] you can see we could add um copies we [2249] could add blind copies CC's bcc's we [2251] could change the from Fields the sender [2253] the reply to add some references that's [2255] some headers priority you know even me [2258] at this point I've been using this [2259] platform for I mean probably over half a [2261] decade at this point at least um you [2264] know I don't know what every field does [2266] there's just no real point to um and [2267] that's really the cool part about make [2269] you don't really have to the only fields [2271] that you actually have to know are the [2272] Bold ones so you have to you know you [2274] have to have a connection you have to [2275] save the message after sending you have [2277] to have a to an email address content [2279] type but that's about it as long as you [2281] have those you're basically good to go [2283] speaking on connections by the way if [2284] you click on this ad button at the top [2286] you can then set up whatever connection [2288] you want and um basically if you're [2290] sending an email you kind of need to [2292] connect to your email provider so [2293] there's three different types there's [2294] Google there's Microsoft and then [2296] there's one called others which is just [2298] like a catchall for all other email [2299] accounts I don't know you have one with [2300] hosting or or something like that this [2302] is probably what you'd click so if you [2303] wanted to set up like a Google for [2305] instance you can then add a a name over [2307] here and let's just say YouTube [2310] example I click save it'll actually open [2314] up U my Gmail and it allow me to pick [2316] one of my accounts which is kind of neat [2318] then I can like click an account [2319] authorize it and then it's literally you [2321] know as simple as like a two button [2322] click away um to authorize your flow [2324] which is pretty nice second that that's [2326] done you know would normally say [2328] congratulations authorization completed [2330] then you're good to go I just exited it [2331] out halfway through so that's not going [2332] to happen with me but yeah Okay cool so [2336] just doing in parallel to what I was was [2337] doing with the nadn stuff how about if I [2339] wanted to add something to this why [2340] don't we um add our clickup example from [2342] earlier there are variety of ways to add [2344] a new module in a make.com flow the [2346] simplest one is on the right hand side [2347] here it says add another module if I [2349] click this it'll create a shadow module [2351] here which I can then scroll all the way [2354] through and find the platform or service [2355] that I want to [2356] implement now um just for you know the [2359] purposes of this uh example I'm just [2361] going to scroll a little bit you guys [2364] see that little scroll um you know thing [2366] in the top rightand corner here look at [2368] how little it's moving I could scroll [2371] all day [2372] basically all day and we wouldn't even [2375] make it halfway through this is a [2377] testament to just how many modules there [2379] are in make.com make.com being older and [2383] better um uh maybe not better but like [2386] better propagated or whatever better [2388] marketed at least um you know means that [2392] it's connected to a ton of platforms a [2393] ton of platforms have native integration [2394] so you could find basically anything [2397] that you could ever possibly want on [2398] here and if you can as I mentioned it's [2400] pretty easy to do so with um to to do a [2402] connection anyway with web Hooks and [2404] stuff so click up let's uh do the same [2406] thing we were doing before create a task [2408] okay we already have my connection set [2410] up which is nice from here we just need [2412] to colle connect to the specific [2414] workspace and then yeah as you see [2416] make.com just owing again to its ux they [2418] abstract away a lot of the complexity [2420] right like the next field is only [2421] popping up when I fill out the previous [2423] field because it doesn't really want to [2424] scare me it doesn't really want me to [2425] get overwhelmed so [2427] uh I'm not going to go through and and [2429] run the whole connection but you know [2430] basically what's happening every time I [2431] click this button is it's actually [2433] calling click UPS API it's getting the [2435] data and then it's listing them for me [2437] and then finally at the very end you [2438] know we have a bunch of fields that are [2439] filled so that's how you would add [2441] something to a make.com flow now there [2444] are a few more buttons I want to click [2445] down at the uh check out down at the [2447] bottom the first is this run once [2448] remember at the end of our nadn example [2450] we had a little button at the bottom [2452] where we can test the workflow this is [2453] basically the same thing in make.com so [2455] now because this is a web hook it's [2456] waiting for data so in order for me to [2458] test this I would have to send some data [2460] to it but there's also this um little [2462] green check mark that says immediately [2464] his data arrives I can actually turn [2465] this on or off as I want so if I turn [2467] this off it's not going to be U running [2470] obviously if I turn this on this web hle [2471] will be live and it'll actually just go [2473] through my flow in the background [2474] anytime I receive a request aside from [2476] that a bunch of other buttons which I [2478] think in make.com are just laid out a [2479] lot simplier simplier is that a word I [2482] don't know um I don't English good uh [2485] and then there are a bunch of other [2486] settings here which are sort of above [2487] the pay grade for the explanation that [2488] I'm providing right now but if you spend [2490] any amount of time in make.com you will [2493] inevitably uh you know interact with [2495] them okay great so that's where we are [2498] with make.com basic ux next up I [2501] actually want to go through and I want [2502] to build a system with both platforms [2504] it's one thing to just watch me talk [2506] about a platform or poke around it's [2508] another thing entirely to build [2509] something that's like business [2510] functional that actually drives some [2512] sort of outcome and that's really what I [2513] was referring to at the beginning of [2515] this which is uh when I said that I want [2517] to take more of like an economical view [2518] on these platforms you can build [2521] anything with this stuff I mean this is [2523] like a programming language it's just a [2524] visual programming language right so [2526] just like you could program anything in [2528] practice you could also drag and drop [2529] anything in practice but I find a lot of [2531] the time if you're using a no code [2533] platform it's because you want to like [2535] do something for a business right A lot [2536] of the time it's not that you want to [2538] like compose symphony orchestra music or [2541] paint a van go like you're you're [2542] probably here because you want to make [2544] some freaking money and you don't want [2545] to have to spend the time and energy [2547] that you need to learn programming to do [2548] it and the thing that I'm seeing is [2550] there's a big disconnect between people [2551] that like get on these no code platforms [2553] and they make these flows and then the [2555] ability of these flows to like make [2556] actual money there's a big disconnect [2557] there and and in this video what I [2559] wanted to do is I wanted to show you [2561] guys a practical example that I know has [2563] made me and a lot of other people money [2564] as well and these flows are a lot [2566] simpler than the complex ones that you [2568] probably see thrown all over social [2570] media and Linkedin and Twitter uh you [2572] know the flows that actually end up [2573] making you a lot of money they tend to [2575] be the simpler ones that you know you [2577] look at from afar and you're like I can [2578] put that together in 10 minutes well if [2580] you could put it together in 10 minutes [2581] it's a pretty good start the one that [2583] I'm going to do today is an email [2584] categorization system so most companies [2586] still use emails as their primary form [2588] of coms but those emails can get pretty [2590] overwhelming after all especially for [2592] contact at emails info@ emails and hello [2595] mailboxes reason why is because these [2597] tend to aggregate mail from many sources [2599] so a very common need nowadays is to [2601] categorize each email and this is [2603] usually done through labels you if [2605] you're using Gmail or something there a [2606] bunch of labels you can create I'll run [2607] through how that works in a moment but [2610] what we're going to do here is I'm going [2611] to build a system that basically takes [2613] in an email it'll use that as a trigger [2616] then it'll use artificial intelligence [2618] to categorize that email depending on [2620] its contents once we've categorized that [2622] email we are then going to add a label [2624] to it and then if it is one of a few of [2626] the categories and I I have no idea [2628] because I haven't actually put this [2629] thing together yet we're going to do it [2630] all together and live if it's one of uh [2632] you know like the the low Roi categories [2635] the not very urgent categories we'll [2637] mark it as red just so that we can get [2638] closer to inbox zero and not have a [2640] bunch of stuff clogging up our mail [2642] after I'm done with all this I'm going [2643] to share both the nadn uh like share [2645] link I I'll download it I'll make it [2647] accessible and the make.com blueprint in [2649] the description so if you guys are just [2650] starting out on these platforms maybe [2652] you can kind of play around with it [2654] practically yourself in order to help [2655] make a decision okay great so let's [2658] actually jump in and build this platform [2661] I'm going to start with naden just [2662] because I started with naden for my [2664] explanations I think that makes more [2665] sense then after that we're going to [2667] move over to [2668] make.com so the very first thing I'm [2670] going to do is I'm just going to leave [2670] our example scenario or oh boy you can [2673] tell the make.com is coming out of me [2674] because every second word I have to like [2676] be like all right what's the NN term for [2677] this um I'm going to exit out of the NN [2680] workflow and I'm going to add a new [2682] workflow and this workflow is going to [2684] be our email categorization system now [2688] the very first thing I'm going to do is [2691] I'm going to explain a hotkey um instead [2692] of me going up here to the top right [2694] hand corner clicking a button every time [2695] if you just press tab it'll open up [2696] automatically pretty neat right I'm then [2698] going to type in Gmail press enter and [2700] then the trigger that I want is on [2702] message received okay so on message [2705] received what I want to happen is I want [2706] to categorize the email now the [2709] credential I'm going to connect with I [2710] have a bunch of different accounts I [2711] could but I'm just going to create a new [2713] credential I'm going to sign in with [2715] sign in with [2717] Google and then let me think I have a [2719] ton of accounts here but why don't I use [2720] Nick at left [2721] click. select all make sure you trust [2724] the source that is connecting to your [2726] account then I'm going to click continue [2729] as you see uh a little bit of Polish is [2731] still necessary it's has got connected [2732] the window can be closed now okay fine [2735] and now we uh we have this green [2737] notification that the account was [2738] connected I'm going to exit out of this [2739] and now that it's connected we can [2740] actually do stuff with it what stuff [2742] good question let me um first of all set [2747] some parameters so what how quickly do [2750] we want this to pull our email inbox [2752] every minute every hour every day every [2754] week uh I don't know for the purpose of [2756] this demonstration I'm just going to [2757] pull this like every let's just do every [2760] like two No 1 hour hypothetically I mean [2762] this is completely arbitrary right CU [2764] I'm just doing this for a test but maybe [2765] we just want this to run once an hour [2768] the event is going to be message [2769] received and then there's this little [2770] simplify button here I'm going to keep [2772] this on for now but I'll I'll turn this [2773] off afterwards and I'll show you guys [2774] why and then there's some filters here [2776] we can add a filter so we could include [2778] spam and trash if we wanted to we could [2780] add a filter for label names right I got [2782] a ton of labels here as you can [2784] see um you know there's a bunch of other [2786] stuff I'm just going to exit out of this [2787] uh we could search for specific um [2789] emails using Gmail filters so I don't [2791] know [2792] subject Nick you are so awesome there [2795] are way too few of those in my mailbox [2797] okay and then add filter uh read status [2799] unread unread and red read emails right [2802] anyway the point that I'm making is [2803] there's basically just always going to [2805] be a ton of settings on anything to do [2806] with a major API like Gmail now that [2808] we've done this why don't we just go and [2810] we fetch a test event it's going to [2812] fetch a test event here and as you see [2814] the test event that we fetched was the [2815] email that I just sent from another [2817] email address of mine a moment ago which [2819] says hey Sam Nick here thanks for [2820] reaching out I appreciate your kind [2821] words from blah blah blah blah blah um [2823] this was the input me fetching the test [2825] event this is the output now what I'm [2827] going to do just the purposes of this [2828] demo is I'm just going to pin this if [2830] you go to the top right hand corner [2831] click pin what you're doing is you're [2833] basically just forcing naden to just [2834] always use this as the test data moving [2836] forward and this is important to do [2838] because it just simplifies your flow it [2839] also means like anytime I want to test [2841] this I don't just have you know I don't [2842] have to go back here and click this [2843] button all the [2844] time okay great so that's that why don't [2846] I jump over to my actual Gmail account [2849] now why don't we um see what sort of [2853] labels we want to [2854] create so why don't we do this really [2856] quickly um you see how here on the right [2859] hand side of I actually already have a [2860] bunch of labels already because I've did [2862] something similar in the past so cold [2864] Outreach General Q&A gumroad [2866] notifications invoices and receipts mmwm [2868] maker school public relations [2870] sponsorship request transaction emails [2871] unknown actually these are these are [2872] fine so I'm just going to use these [2873] labels but if you want to make new [2874] labels you just click on this button [2876] make make whatever label you want here [2879] you can also Nest labels under parents [2881] which is pretty neat um but I'm not [2882] going to do that the gum notifications [2885] are because I still want to have gumroad [2886] notifs I just don't necessarily want to [2889] um like I don't want to like archive all [2891] of them but I I just don't want my inbox [2893] to be filled with them because I get [2894] like 10 downloads every few minutes okay [2896] great so uh if you think about it [2897] logically you know we just we we've [2899] successfully enabled our flow to like [2901] get data from my email address what do [2903] we have to do now well we need to do [2904] some sort of processing and [2905] categorization after we're done with the [2907] processing or categorization then we can [2909] uh assign it a label and that's about it [2911] and the cool news is in n8n um and not [2913] in make.com but in NN uh this feature is [2916] very easy to do I'm just going to open [2917] my nodes panel and then I'm just going [2919] to type in [2920] categor actually I lied I'm going to go [2922] to Advanced [2923] Ai and then I'm going to go down to text [2927] classifier not categorization but text [2929] classifier this will classify my text [2932] into distinct categories which is pretty [2933] neat I'm going give that a [2935] click now um we have this window here [2937] that says text to classify you'll also [2940] see on the left hand side says wire me [2941] up so what we need to do and I kind of [2943] annoying that uxy that we have to um [2945] exit out of this every time but hey I [2948] didn't invent it uh what we have to do [2950] is we have to drag the little plus over [2951] to the right hand side connected this [2953] little almost magnetic clip here and now [2955] we've connected our flow so the data [2957] will flow from the Gmail trigger over to [2959] the text classifier pretty neat we [2961] double click this you'll see that that [2962] pinned data from before is now present [2964] on the left hand side now we can [2966] actually do something with it so if you [2967] think about it logically like what what [2969] is it that we want to classify we want [2970] to classify the data right the text I [2974] will say this doesn't actually include [2975] the full email um so uh we need to fix [2978] that remember how before I said there's [2980] a simplify button I'm actually going to [2981] unclick this and then I'm going to click [2982] fetch test [2984] event and now instead of it being um you [2987] know just those few Fields like we saw [2988] earlier we actually have way more detail [2990] and includes the full email as well this [2992] is just one of those quirks of this [2993] Gmail trigger module uh node that you [2995] just have to know uh fortunately in [2997] order to be able to use right but okay [2999] great so if you think about it what is [3000] the text I want to classify it literally [3001] asks me here this little window use an [3003] expression to reference data in previous [3004] noes or enter static text what I want to [3006] classify is I want to classify this text [3009] okay and as you see um this now is [3012] populated with some code essentially [3013] which is kind of neat um this is one of [3015] the reasons why n can be pretty [3016] intimidating if you're a total newbie to [3018] you know programming and just systems in [3020] general because you see code like this [3021] with the curly brackets and you're like [3022] what the hell's going on what the hell's [3023] a dollar sign what's JS n right what's [3026] text does any of this make sense um but [3029] essentially what this is doing is this [3030] is referencing the previous uh node that [3032] was run and then it's pulling out the [3034] text parameter or text variable which is [3037] this one right over here and NN just [3039] happens to have a naming convention [3040] where uh the previous node that was run [3042] is always just dollar sign Json and then [3044] they also have a convention where if you [3046] wrap uh a text with these two curly [3049] brackets on the left hand side and the [3050] right hand side it converts it from just [3051] like static text into some sort of [3054] function so that's just me explain [3056] explaining a little bit about how this [3057] works keep in mind all no code platforms [3059] of their own unfortunately sometimes [3060] annoying conventions but this is nadn so [3063] um as you see something really helpful [3064] here is it shows us what the data that [3066] we are now populating this text to [3068] classify field is we're actually pulling [3070] it directly from this text uh variable [3072] right then it says result hey Sam Nick [3074] here thanks for reaching out I [3075] appreciate blah blah blah blah blah so [3077] that's nice our next step is we have to [3079] make categories if you think about it [3081] logically what I want to do is when an [3082] email comes in I want to categorize it [3084] and then label it so I need to I need to [3085] create the categories that I'm going to [3086] be using to add the label in order to [3089] find this out I'm just going to go back [3090] here and just just take a quick peek at [3092] everything cold Outreach General Q&A [3094] gumroad notifs invoices and receipts [3095] mmwm and maker school public relations [3097] sponsorship request transaction emils [3099] unknown I'm going to start with cold [3101] Outreach so add category cold Outreach [3105] there's a description field too which [3106] I'm going to talk about in just a second [3109] but for now I'm just going to add a [3111] bunch more categories and let's just do [3113] you know what instead of doing what like [3115] five or six or whatever let's just do [3117] four yeah that's simpler we're not going [3120] to go through all of these next we'll [3121] just do General [3126] Q&A next we'll do gumroad [3130] notifications um and then next we'll do [3132] invoices and [3134] receipts okay great so um nadn actually [3137] has this built-in text classifier just [3139] so you guys know under the hood what [3140] this is doing is this is using [3141] artificial intelligence to take a query [3144] and then assign it a category based off [3146] of a text here so um the very cool thing [3149] is I actually I don't need to do [3150] anything aside from just like give it a [3152] category name and it'll actually do like [3153] pretty [3154] reasonable um which is pretty neat uh so [3157] I could literally just like run it and [3158] then it would do fine but it's good [3160] practice in situations like this in any [3162] sort of categorization flow to always [3163] add an unknown and the unknown is just [3165] like the the the catchall in case the AI [3167] doesn't really know what next step to do [3169] um so that's what I'm that's what I've [3170] done down here just added a little [3171] unknown variable but honestly this is [3173] honestly sufficient for us to like move [3175] forward with this um we're going to test [3176] this really quickly and then see if I [3177] need to add a description if not we'll [3179] just proceed click test [3181] step uh it says a model sub node must be [3184] oh yes a model sub node must be [3185] connected um the way that this text [3187] classifier works is you need to hook [3188] this up to an AI model and that's one [3190] thing that I forgot here um just zooming [3192] out uh now that we're back on the canvas [3194] we can see that we've basically added a [3195] bunch of categories here this is [3197] basically a bunch of like if statements [3198] hey if the category is called Outreach [3200] then we can continue this way if the [3202] category is General Q&A continue this [3204] way if it's gumroad continue this way [3206] that's pretty neat but in order to make [3208] this work we need to add this little [3209] model um which I forgot about so the way [3211] that text classifiers work again is they [3213] send it over to AI um NAD then is pretty [3215] flexible in that it allows you to choose [3217] the ad that you want to do the [3218] classification with so if I click on [3219] this button you can see have a bunch of [3221] different models I could choose from the [3223] one that's most popular and probably the [3224] one that most of you guys are going to [3225] use is open AI [3227] one um up here it tells us what it's [3229] connected to which is this open AI [3231] module which is kind of neat I like that [3233] part of their ux but anyway um I've [3235] already set up my open account [3236] credentials if you wanted to add your [3238] own you'd click create new credential [3240] here then it'll ask you for the API key [3243] if you don't know anything about this [3244] just head over to the open docs and [3246] it'll tell you where you find all of [3248] this so it'll actually say hey if you [3249] want to generate your API key go here [3251] click on this page click create secret [3253] key and then copy the key and added in [3255] hey go over here paste the organization [3257] ID in so for posterity I'm actually [3260] going to go and do that okay great so I [3261] have the organization ID right over here [3263] in my open AI account I just went to [3265] Beta orat form. open.com setting [3268] organization [3269] sgen and then I have the organization ID [3271] so I'm just going to give that a little [3272] click head back over to my nadn [3275] organization ID paste that in then I'll [3277] grab the API key as well the way that [3279] you get the API key here is you got to [3281] go to the API key section create a new [3283] secret key and as you can see I already [3285] had one that's nadn testing actually [3286] let's just go nadn uh [3289] YouTube example N8 n [3295] testing um I don't know if I need a [3297] project I'll just click default and then [3298] all create secret key I have a key that [3301] I can [3302] copy I'm GNA go back over here and I'm [3304] going to paste it in dang that's a long [3306] key then we're going to click save okay [3309] great now we've connected to open AI [3310] we're done with that rigma roll we can [3311] move on on the model that we're using [3313] GPT 40 mini I'm just going to use GPT 40 [3316] in all honesty though like you could use [3317] basically whatever model you want for [3318] something that's simple it'll perform [3319] reasonably [3320] well okay now that that's good let's [3323] just make sure that everything else is [3325] filled out and now let's try testing the [3327] step cool so what this has done is it's [3330] basically passed into our um open AI [3333] model down here and then it's outputed [3336] code based off of a specific format that [3338] naden provided it for the functionality [3340] of this module which is Json I then it [3342] said cold Outreach true General Q&A [3344] false com notifications false invoice [3346] and receipts false unknown false so it's [3347] saying hey this Outreach is cold [3349] Outreach which is which is basically [3351] true right I mean it is is obviously [3353] responding to something of the nature of [3355] cold Outreach which is nice so um we [3358] also see that the ux change quite a bit [3360] up here um and the reason why is because [3362] the second that you use a text [3363] classifier any sort of if else or or [3365] true or false um it separates the [3367] outputs into branches so it's telling us [3368] that like the cold Outreach Branch [3369] worked with the general QA Branch [3371] gumroad notifications Branch invoice and [3372] receipts branch and unknown branch that [3374] didn't work so just for the purposes of [3377] this example why don't I send myself an [3378] email that I want classified as an [3380] invoice and receipt then let's see if it [3382] does a reasonable job and if it does [3383] then we can proceed with this and we can [3385] actually finish the rest of our flow [3386] so first things first I'm going to go [3388] over here and then I'm going to unpin [3389] this then I'm just going to go over to [3392] um a different email address what did I [3393] connect to was it Nick left click on I [3395] believe it was yeah so I'm going go over [3397] here and then let's actually send myself [3402] an email from this here all right so [3404] what I'm going to do now is I'm just [3405] going to email [3406] myself and I'll [3409] say re invoice for [3412] a39 [3414] e f [3417] LG processed hello Nick your invoice [3422] for blank is below please see attachment [3428] thank you head office cool so I think if [3432] anybody were to receive an email like [3433] this you'd probably say that it was an [3436] invoice and receipt based email right [3439] now that we're back in nadn why don't I [3441] then um check and and fetch a test event [3443] and see what happened [3447] okay so scrolling through this puppy you [3449] can see is we've received the email that [3452] says invoice for a39 EFG process that [3455] sounds pretty invoy to me let's see what [3457] the text classifier thinks of this just [3459] going to double click it we have the [3460] email here let's test step let's see [3463] what the output is called Outreach [3465] branch no General QA gumber [3467] notifications invoices and receipts [3468] Branch one item fantastic so you see [3471] this is correctly classified our email [3473] as being in the invoices and receipts so [3476] that's great uh what do we do with this [3477] now well we basically want to add um [3479] some labeling functionality to it right [3481] so now that we've done the Gmail trigger [3482] why don't we just click over here um and [3484] then why don't I go to Gmail again what [3487] I want to do is add label you can see [3488] this literally the first message action [3489] which is great I'm going to connect this [3491] to my Gmail account I believe it was [3492] number two the resource is message [3495] operation AD Label that's good message [3497] ID label names or IDs oh nice yeah I can [3499] actually just pick wonderful cool um [3502] let's add this to the first step so [3503] that's cold Outreach right [3507] uh I don't know why we don't have any [3508] data here maybe we need to rerun this oh [3510] you know why it's because our uh cold [3512] Outreach Branch did not execute actually [3514] the only thing we we technically have [3515] access to which is one of the Annoying [3517] Parts about this is the invoices and [3519] receipts Branch right now so I'm just [3521] going to duplicate this by copying and [3523] then pasting command C command V and [3525] then I'm going to grab this invoices and [3526] receipts connect it to my Gmail you'll [3528] see we now have the data accessible to [3529] us in the left hand side then I'm going [3531] to scroll down here to where it says [3532] invoices and receipts then for message [3534] ID I just want to grab this value right [3537] here again we're going to fill in with [3539] jason. ID okay so now what I'm going to [3541] do is I'm going to test the step and you [3544] see that it did indeed uh label my email [3546] which is quite nice um so now we have [3549] the the email labeled I go back over [3553] here I give this a click you see it now [3556] has invoices and receipts on it which is [3557] pretty [3558] neat okay cool now if we were to test [3561] the rest of this so gumroad [3562] notifications uh General Q&A and cold [3565] Outreach what we need to do do is we [3567] basically need to [3569] um uh we need to run each of these [3572] routes essentially so I'm just trying to [3575] think of the simplest way for me to do [3579] this um I could just set some mock data [3583] right yeah I could just set some mock [3585] data so let's do the cold Outreach again [3587] so in order to edit the data you just [3589] click on this button here I'm just going [3591] to scroll down to where it says text and [3594] say hello Nick [3597] I am interested in selling you a product [3600] or service would you respond please [3603] thank you alter ego save now if we [3607] scroll down to text you'll see that that [3609] is the uh value of this so the future [3612] modules Now text classifier for instance [3614] should be taking in that text as an [3616] input if we test this now the cold [3618] Outreach branch is going to [3620] run and now from here we can actually [3623] get that data in then drag the message [3626] ID in to our text classifier which is [3628] pretty neat okay great um from here on [3631] out I'm just going to duplicate these [3633] one for General Q&A two for gumroad we [3636] have not invoices and receipts and then [3638] we have for [3639] unknown the thing about n8n um which I [3642] don't really like it just calls [3643] everything like um it just iterates [3645] things so it's Gmail Gmail 2 Gmail 3 [3647] Gmail 1 Gmail 4 for instance be kind of [3650] neat if I don't know there was some more [3651] context around this and it wasn't just [3652] iterating numerically but it is what it [3654] is uh so General Q&A here gumroad [3657] notifications [3658] here and then unknown if I can select [3663] this we'll go down over here then for [3666] General Q&A um we can actually just use [3668] this message ID and this should work [3670] because we're just taking the um the [3672] exact same name of the variable from the [3674] previous run I'm just going to change [3676] this so that instead of cold Outreach it [3679] is uh was it gumro notifs hold on I [3682] think it was General Q&A [3684] right yes sorry that was General Q&A so [3687] go end General Q&A good this one here uh [3691] will be gumroad [3695] notifications this one down here [3696] invoices and receipts as we've already [3698] talked about and then this one down here [3699] will be unknown delete this and then [3701] we'll go [3702] unnown [3704] perfect very [3706] cool okay sweet now um last thing I'm [3710] going to do just for my own Simplicity [3711] is I'm going to rename all these you can [3712] do this with a hotkey F2 so click uh [3716] this rename this and then I'll say label [3719] cold [3721] Outreach and I'm just doing this for my [3723] own sanity I just know myself and I know [3725] that if I don't do this you know like a [3728] month from now when I look at this I'll [3730] say what the hell are all these [3735] for um invoices and receipts oops you [3739] can also just reverse anything by uh [3742] command v um command Zing it this one [3745] was invoices and [3747] receipts and this last one here is [3755] unknown can never spell unknown properly [3758] the first time you guys ever get that [3760] it's just like some word that your [3762] fingers do not want to [3763] form some evolutionary lineage is like [3766] no you must not okay great so yeah [3769] that's that's more or less that that's [3770] the system to be honest we are we are [3772] done this we can now send it whatever [3774] emails we want it'll just go through [3775] through the thing labeling them um [3778] there's also a couple of other things [3779] like you think that we could do like for [3781] instance if it's a gumro [3783] notification um you know maybe in [3785] addition to me adding a label I also [3787] want to mark it as red so I kind of want [3789] to do both um [3791] logically oh sorry this was gum roads [3793] let's go back here logically if I wanted [3796] to do that then I could just add another [3798] module [3802] Gmail then instead of add label Mark a [3804] message is read and I just add this over [3808] here and voila you can think of it it as [3810] like lower Roi um lower value emails I [3813] don't really care [3814] about I could probably just go dollar [3817] sign json. ID and this would reference [3819] the previous [3821] node um as long as it outputs a node [3823] that includes an ID right we just really [3826] quickly test this and make sure yeah [3828] yeah it does include a message ID which [3829] is nice now we're marking that as red [3832] maybe uh yeah and and then also maybe we [3835] want to do that for the cold out reach [3836] too because we you know if somebody's [3837] reaching out to us cold odds are we [3839] don't really give a and then here [3841] I'll just say Mark Mark [3843] red and here I will also Mark [3847] red beautiful and that's our flow um [3850] just for the purposes of this test why [3852] don't we go through and we just add [3854] questions uh do a gum Road note if one [3857] um we've already done the labels invoice [3859] and receipts but then we'll do one for [3860] unknown as well so I'm just going to [3862] edit my text again then for text instead [3864] of this we'll do hello Nick this is a [3867] notification from gumroad your order is [3870] ready thanks [3872] gumroad that is now the text we are then [3875] going to classify this [3877] text the output is now going to be [3879] gumroad we can go down our gumroad [3882] notifications we can test the step I'll [3885] now label my email as gumroad very cool [3887] right uh we can do the same thing with [3889] unknown maybe I will go over here and [3892] then what if I were to hypothetically to [3894] get an email that was [3898] just I don't know some alien that does [3901] not know English does not know human [3904] language and only speaks in hexadecimal [3906] sends me an email what's it going to CL [3908] classify it as hopefully unknown right [3910] so the unknown Branch worked and then [3912] let's just do one final one for [3914] posterity the general Q&A so we'll go [3917] text I think it was down here right not [3920] sure why it's not coming up high neck [3922] just had a general question about XYZ [3925] would you mind helping me with [3929] cool then we are going to run this [3932] puppy go down my general Q&A branch and [3935] then we will go over here test this and [3938] we'll run that flow as well so yeah I'm [3941] not exactly sure how long that N1 flow [3943] took but as I'm sure you guys could tell [3945] you know if you know a little bit about [3946] no code whether or not you're a [3947] professional with N1 or the specific [3949] platform you can usually get by um it's [3951] fairly reasonable and and fairly [3953] straightforward now that I built that [3955] system in NN I think you guys have a [3956] reasonable understanding of like how to [3958] do simple things with this platform keep [3959] in mind that I didn't have any complex [3961] logic here there were no uh uh looping [3963] flows or anything like that which can be [3964] a little bit more complicated for naden [3966] I just wanted to show you guys what like [3967] an actual business ready flow could look [3969] like with just a few minutes of work [3971] what we're going to do now is we're [3971] going to build this exact same system [3973] but we're going to do it in make.com [3974] instead so you guys could see the [3975] parallels um and then the differences [3978] too so let's open up new scenario let's [3982] call this email [3984] categorization let's call it system and [3987] then in make.com instead of uh what we [3990] were doing before where we had to pull [3992] the emails consistently there's actually [3994] a much easier way to do this you could [3995] actually just go straight off of a mail [3997] hook so well actually no I don't think [4000] I'm going to do that I'm going to try [4000] and build the exact same system let's [4002] not get complicated I take that back [4004] we're going to click this purple button [4005] and we're going to type in email and [4007] we're going to type in watch [4010] emails now we're going to make a [4012] connection it's Google restricted for at [4015] left click. going to call this YouTube [4020] example then I'm going to again do the [4022] connection just like I did with n8n for [4024] nickf that email [4028] there from there we are now connected [4032] and as you can see it automatically [4033] deletes the window and stuff just kind [4034] of nicer ux which is cool um and then [4037] from here I can select the folder that I [4038] want to watch my emails in so the folder [4040] I want to watch is just my inbox [4041] honestly the criteria for this will be [4046] all emails sure uh sender email address [4049] recipient email address subject I don't [4052] know about subject let me check what was [4054] the email that I just got left click um [4058] re invoice for a whatever processed [4060] let's try [4062] that let's just say [4064] invoice Mark messages is read no maximum [4066] results one yeah sure that sounds good [4068] so again you know none of these fields [4069] are required uh I'm just going to be [4071] filtering it based off a subject line of [4072] invoice just cuz I only want to get that [4074] email I don't want to like you know get [4075] other people's emails and stuff so great [4078] um we will select the first email [4080] ourselves I guess let's see it should [4082] sort it out for us um there we [4086] go if I right click this and I run this [4088] module only what do we get now we get [4091] the data from my email address we've [4093] effectively hooked this up now just like [4094] we did previously Inn to make.com we' [4097] now gone from Gmail which is a [4099] standalone platform to make now we have [4101] the data here we can actually do cool [4102] stuff with it all right so uh hello Nick [4105] invoice for whatever is below please see [4107] attachment hello thank you head office [4108] how do we actually go about categorizing [4110] this well unfortunately make.com does [4112] not have a built-in categorization [4114] feature so we actually have to like do [4115] it ourselves but that's okay because [4117] I'll show you guys how easy it is all we [4118] need to do is go to apps open [4121] AI then down here you'll see there are a [4123] ton different modules you could choose [4125] batches upload files generate audios the [4128] one that you're going to want in 99% of [4129] cases is going to be created a [4132] completion this created a completion [4133] prompt um is is BAS basically like the [4136] bread and butter of working with AI in [4139] make.com so select a method will be [4141] create a chat completion model will be [4143] GPT [4145] 40 then we're going to um write our own [4149] prompt and now this is you know not just [4151] a text classification thing which kind [4152] of does handle a lot of the work in the [4154] background for you but we're we're going [4156] to do the AI stuff ourselves and so as [4158] you can see you know there's differences [4160] between these platforms like make is [4162] much easier in terms of user interface [4164] everywhere else but then they lack some [4165] of the AI features that nadn has nadn is [4168] definitely a little more developer [4169] oriented and there's some code thrown [4171] around and stuff like that um but you [4173] know it's easier to use the AI features [4176] so you know any um developer system [4178] prompt what we have to do is you are a [4180] helpful intelligent um let's do [4183] administrative [4185] assistant then under here we'll go user [4187] and then I'll say your task is to [4189] categorize incoming emails into the [4192] following labels and I believe we had [4195] cold [4197] Outreach [4199] um let's just do this cold Outreach uh [4203] was a general Q&A gumroad notifications [4206] invoices and receipts [4209] unknown return your answer in Json as [4216] follows we'll say [4219] category then I'll say category goes [4221] here so I'm basically telling it hey [4223] this is what I want you to do [4226] um I want you to return your answer in [4227] JS n this is like a code format that [4229] na10 use to sort of hit away from us um [4232] like this so category might be cold [4233] Outreach General Q&A gum notifications [4236] invoices and receipts or unknown I'll [4238] show you why I'm doing this in a second [4239] but just in order to make this flow work [4241] well we need to do one more thing we [4242] need to head to this response format [4244] button and then go Json object and then [4246] parse Json response this is just sort of [4248] a quirk of using this particular module [4250] um but it's it's one that we have to use [4251] in order to make this work right okay [4254] great one more thing is go to add [4255] messages and then go user then the text [4258] content we're just going to add in the [4260] text content of the email so that's that [4262] pretty simple pretty straightforward as [4264] you can see make is pretty colorful with [4265] it I'm going to click okay now next up [4268] what I'm going to do is you know if I [4269] click run once the downside about make [4271] versus n8n is is a big um issue is the [4273] testing flow if I want to uh test based [4277] off of like old data I can't I need to [4279] rerun the flow over and over and over [4281] and over again I'm convinced that make [4283] specifically does this because they're [4284] trying to get use as many operations as [4285] seemingly possible and this is kind of [4287] like a quick little hack that can get [4288] you to spend a few more cents here or [4289] there um as opposed to just cash the [4291] data for you make it really accessible I [4293] don't know I might just be a conspiracy [4294] theorist who knows they're turning our [4296] frogs gay but uh yeah anyway uh let's [4299] actually run through this and let's make [4300] it happen the way that I would do this [4302] in practice is make.com allows you to [4304] rightclick a module and run it only so [4306] then you can actually insert your own [4308] test data so anyway we have a bunch of [4310] categories here why don't I do the first [4311] one hey Nick um [4315] I know we haven't talked before but I [4317] would like to sell you a product or [4320] service would you mind dot dot dot so if [4324] I provide this email to my [4326] categorization system what should I get [4328] pause the video if you don't have the [4329] answer right away I should be providing [4332] um I should be getting cold email as a [4335] response so if I go down here to the [4337] output which is all of the variables [4339] that this particular API call outputs I [4341] go to result the category is indeed cold [4344] Outreach pretty cool all right let's run [4347] this again I'll just do one more for [4348] posterity hey Nick I had a general [4350] question about uh this dot dot dot and [4354] we'll click okay what should we be [4356] getting now we should obviously be [4357] getting General Q&A so as you can see [4358] these a models do pretty well with [4360] basically no Direction like we didn't [4361] have to give it any context or anything [4362] it did all [4363] right okay what do we want to do now um [4366] well I actually want to see if I could [4368] label an email I actually don't know if [4371] we could do this in the emails module [4373] interestingly enough [4375] no I think we have to move an email I [4377] don't know I guess we'll find [4380] out let's see if there's labels [4383] here because some platforms call things [4385] folders yeah okay no so um this is a [4388] general purpose email module and because [4389] it's a general purpose email module it [4391] doesn't use the term label which I [4392] believe is Gmail or maybe Outlook [4394] specific um instead it calls them [4396] folders so what we do is we move it from [4397] The Source folder to the destination [4399] folder so let me run you through how [4401] this would work in make.com as you [4402] remember in NN we had like 10 modu or [4405] something in make you can theoretically [4406] do this in like uh three you could have [4408] the watch emails Ai and then this one [4410] here um and I'll I'll run you through [4411] what that looks like first thing we have [4413] to do is you have to go to email ID and [4415] then I'm just going to scroll through [4417] until I find the email idid variable I [4419] need to map so that's good then for [4421] Source folder and then destination [4423] folder for Source um my incoming emails [4425] are always going to be an inbox if you [4427] think about it right the destination [4429] folder this is the thing that's going to [4431] depend um you know hypothetically if I [4433] click hold Outreach if I click on this [4435] little um tab thing map I actually get [4438] the name of the category um for the [4441] destination folder so I don't actually [4443] have to like manually click it here I [4444] can actually dynamically map it which is [4446] crazy right so I just want to make sure [4448] that the label names are the same as the [4450] categories that are being outut cold [4451] Outreach was cold Outreach General Q&A [4452] gumber notifications invoices and [4454] receipts and unknown right if I click [4456] here and I click result you see that the [4458] category name is the exact same text so [4460] what I could theoretically do is I could [4461] just map this to be the category [4465] so now instead of me having you know [4468] what we had before which is if we just [4470] go back here we had one two make that [4473] count if you want three four five 6 7 8 [4476] nine right so far we only have three um [4479] three in our flow which is pretty pretty [4481] sweet honestly a lot simpler I would say [4484] um so yeah that's that for now uh one [4487] more thing I'm going to do is I'm going [4489] to add a another module um called Mark [4492] an email is red just going to stick that [4494] on on the very [4495] end and I'm going to add an email ID [4498] here from the moveing email um you can [4501] select you know all of the variables and [4503] make all the way back to the very first [4504] one in the flow so we could select this [4506] one so maybe I will select this one it's [4508] it's always just better practice to do [4509] the first one and then the folder that [4512] this is going to be in if you think [4513] about it um it's going to be this folder [4515] right because we just moved it to this [4517] folder a second ago so that should Mark [4520] our email as red the thing is we don't [4521] want it to mark it as red on all of them [4523] we only want to mark it as red on some [4524] of them so so in order to do that make [4525] Doom is this filter function which makes [4527] it really easy so let's only mark it as [4529] red if it's a gumroad notification I [4531] believe that was uh or no in cold out or [4535] cold [4538] Outreach the condition I'm going to look [4540] for is I'll look to see if category is [4542] equal to cold Outreach or if category is [4546] equal to gumroad [4549] notification if we are fulfilling this [4552] filter if um an only if it is gumroad [4556] notification or cold Outreach will we [4557] proceed so we basically taken that other [4559] flow which was honestly pretty big um [4561] and just made it like a lot a lot [4563] simpler so let's actually see what this [4565] looks like I'm going to go [4567] um let's run this module only uh let's [4570] choose where to start first sorry I just [4571] want to make sure I'm always getting the [4572] same email [4575] here let's go right over [4577] here click okay just make sure that all [4580] of our data is set up right I believe it [4582] is [4589] cool yeah we should be fine anyway let's [4591] just give it a go click run [4593] once beautiful and it looks like it ran [4596] through as you see here this filled with [4598] a zero number that's because it was not [4600] Gum Road or cold Outreach but let me [4601] show you what all the data look like um [4602] make.com outputs the outputs through [4605] these little Bubbles as opposed to like [4606] left to right like NN does so as you can [4608] see it pulled this email hello Nick your [4611] invoice for blank is below please see [4612] attachment thank you head office that's [4613] the one that we wrote I don't know 15 20 [4615] minutes ago AI then outputed a result [4618] which was invoices and [4621] receipts we then use the move an email [4623] module it only outputs the uh Return of [4627] the ID of the thing it just moved so [4628] nothing fancy there and then because [4630] this did not run it did not do anything [4632] if I go back to my email [4634] here then I go to uh where was this [4639] invoices and [4640] receipts we see that the invoice was [4643] processed now I probably should have [4645] been smarter about this because we use [4647] the same email ID to test all the naden [4649] flows we've also labeled as cold air [4650] reach and general Q&A and gumhead [4652] notifications but um the most recent [4654] label was invoices and receipts which is [4656] why it's here so that's that in make.com [4660] as I'm sure you guys could see um these [4662] systems are honestly pretty similar um [4664] they're not you know the exact same but [4665] if you think about what they can do yeah [4668] they're they're quite similar they have [4669] different ways or Paths of getting there [4671] um but if you dial back the complexity [4673] you know one code platform on no code [4675] platform is another no code platform [4677] which is the same as another no code [4678] platform you could have done the exact [4680] same thing that I did here in zapier you [4682] can do it [4683] in uh I don't know there a bunch of [4685] other no code platforms that are coming [4686] up the names are sort of escaping me at [4688] the moment so that's where we're at with [4690] that um let's move on to some major [4692] differences in ux and functionality just [4694] to round out this uh review because I [4696] know we're getting pretty high up there [4697] in terms of time if you're still with me [4700] um what the hell is wrong with you know [4702] I'm just kidding if you're still with me [4703] uh this is going to be another 20 or 30 [4705] minutes or so of us talking about module [4707] availability Json and code integration [4709] the flow control differences the testing [4711] authorization flows that sort of stuff [4714] I'm also going to mention some AI [4715] features AI agents obviously being the [4717] big one um before we close it out so [4719] yeah let's start with module [4720] availability I've also included a winner [4721] here so I think that the the the winner [4723] in module availability is make if we go [4725] back to NN here and then I um click on [4728] this plus area on the right hand side [4731] then I type action in an app and I [4733] scroll through me wrong there are lots [4735] of platforms but I don't know in total [4738] maybe a couple hundred right these are [4740] all the platforms that NN is natively um [4743] connected to whereas if we go back over [4745] here to make we click on this plus [4746] button scroll [4748] through I mean that's probably to where [4750] na10 was so I don't have a numeric way [4752] of figuring this out but I'd say [4754] make.com is probably at least 15 to 20 [4756] maybe 25 times as many platforms and [4759] that's not taking into account um [4761] Community platforms and stuff either [4763] although I don't really know if that's [4764] fair [4765] considering that NN probably has some [4767] Community functionality as [4768] well but yeah I guess the point that I'm [4770] making is since make.com has been around [4773] a little bit longer if you're just [4774] looking for like direct out-of thebox [4775] connections that just tend to work [4777] make.com is probably your your your [4779] better bet um it's definitely [4780] substantially more streamlined to get up [4782] and running as opposed to you having to [4784] make your own API calls or that sort of [4785] thing okay the next is Json and code [4788] integration so um you know as I [4791] mentioned earlier if we click on label [4793] General Q&A we scroll in a little bit [4795] message id json. id this is pretty [4797] interesting because we actually have [4799] like code in our no code or low code [4802] tool I should say and the really cool [4804] part about it is naden actually allows [4806] you to use JavaScript just natively in [4808] any of these fields as long as you um go [4810] over here and click expression so for [4812] instance if I just like you know I don't [4814] know wanted to do something to this [4815] json. ID okay I wanted to I check if it [4819] starts with the number three or [4821] something uh like I I can do that I can [4824] I can literally do that um let me check [4826] what this actually was this is a one I [4828] click one here you see it just turned to [4830] True two false one true so I can't [4833] understate how crazy this is to me as [4835] somebody that you know kind of like back [4837] in back in the hood man like the [4839] make.com hood things were rough out [4840] there we didn't have any JavaScript or [4843] anything like that uh we we had to make [4845] do with like built-in make.com functions [4847] the second that you sprinkle a little [4848] bit of code onto your no code platform [4850] like like basically everything becomes [4852] possible very very quickly and easily um [4855] you know make doesn't really want to let [4856] you do that because obviously if you [4857] could just like do something like this [4859] with one little you know like a few [4860] characters then how are they going to [4861] make their money right like obviously [4863] it's uh the Simplicity and effectiveness [4866] of the no code automation platform in a [4868] way is directly opposed to their ability [4870] to monetize if it's being built on a per [4872] operations basis so naden definitely [4875] wins there's no comparable feature in [4876] make.com the only thing that's even [4878] somewhat [4879] comparable is they uh there's this third [4881] party service called customjs and this [4883] isn't even like a like makes company [4885] like this is some other company that [4886] like built a way to do this you can [4888] actually like add some code yourself in [4890] JavaScript but as you see it's nowhere [4892] near as Dynamic you don't get any [4893] feedback you don't know when the code [4895] was sent or received uh you don't have [4898] little tool tip windows that pop up it [4900] just nowhere near as as Dynamic and you [4901] actually have to pay another platform in [4903] order to run JavaScript inside of make [4905] which is hilarious so Jason and code [4907] integration and then wins hands down [4908] there's no it's not even close um I [4910] could show you you know a bunch of other [4912] stuff here like you could literally make [4913] your own JavaScript window you could [4915] write as much code as you want here um [4917] but I'm not going to CU I think it's [4918] pretty clear who wins that one okay the [4920] next up is flow control n8n wins flow [4922] control now what is flow control um [4925] essentially you know earlier I was [4927] talking about there being uh a number of [4928] ways to or I was talking about how this [4931] is one of the simpler flows that you [4932] could build [4933] right um you know how uh this is sort of [4937] like in One Direction it's uni [4938] directional you don't have like Loop [4939] backs and stuff like that and it can get [4941] pretty complicated with that stuff but [4942] in general it's it's much more powerful [4944] and Nuance than anything that make.com [4946] could hope to do um a good example of [4949] this is just this text classifier as you [4950] see this Gmail trigger feeds into a text [4952] classifier which natively outputs like [4954] five different if then statements okay [4957] cold Outreach General Q&A gumad [4959] notifications invoices and receipts [4960] unknown it just automatically does this [4962] built-in if we wanted to do something [4963] similar here in make.com with a [4967] router which is the equivalent um [4969] function that kind of splits flows [4972] up I would have to [4977] go and add a filter for every route I [4980] have to say you know category has to be [4983] equal to um you know cold [4987] Outreach I have to label it and then I [4989] have to do that like you know six times [4991] however many times I did um so you know [4995] for one we we just tend not to have that [4997] built-in kind of filtering or or uh [5000] what's the term flow [5002] functionality on the other hand um I [5004] find Loops are just a lot better done in [5006] nadn now I'm not going to show you an [5008] example of a loop here but you can [5010] actually just like natively Loop things [5012] back into each other in nadn um it's [5014] kind of crazy to me just to be able to [5016] do that to drag the output of one [5017] function into the input of another there [5019] is no native way to do this in make like [5021] I can't kind of do that and the main [5023] reason why is they just don't want to [5024] like you know over complicate the hell [5026] out of the process for you um so instead [5028] the way that it works is if your [5030] previous module outputs multiple bundles [5032] then all um subsequent modules will run [5036] for the same number of times or they [5038] will run the same number of times that [5040] there are bundles in the previous module [5042] if I give you guys a very simple example [5044] with a parse Json module which is just a [5047] way for me to convert um JavaScript [5049] object notation into something that's [5051] accessible by [5053] make.com if we go array and then I go [5057] here and [5058] then go one [5062] two if I were to run this [5065] what would happen is my first uh module [5068] would run once because I just outputed [5070] an array I just converted this into [5072] make.com format so an array was um [5075] produced with three elements then [5077] iterated over this array which basically [5080] just means to turn an array of elements [5082] into three separate runs so this is run [5084] number one bundle one run number two [5086] bundle two run number three bundle three [5088] then it ran the set variable module [5089] three times if I make um the value of [5092] this the value [5094] I run this [5096] again you'll see that I don't really [5098] have like a looping feature but we do [5101] run the same number of times that the [5103] number of bundles in the previous [5105] section are run uh the same number of [5107] times as there are bundles in the [5108] previous section what I mean by that is [5110] if the input to this is uh one bundle [5113] then the output is that same bundle but [5117] we didn't just input that one bundle we [5119] output three and then three outputs were [5121] made simultaneously so bundle operation [5124] three rather is um has a value of three [5127] operation two has a value of two [5129] operation one has a value of one because [5131] that is the value that I extracted from [5133] the particular bundle run um from that [5136] par Json module at the beginning so [5138] without really beating a dead horse at [5140] this point I'm just going to um call it [5143] there but n10 is is certainly far far [5146] better than make.com in flow control um [5150] they have the ability to filter just [5152] like makom does but then also have [5153] built-in IFS Loop over items they can [5155] merge data from two different data sets [5157] uh they have built-in error handling [5159] it's [5160] fantastic another thing I want to bring [5162] up is testing if you guys remember [5164] earlier when I was attempting to test [5165] the um na10 flow all I did was I pinned [5168] an [5169] example and then I could actually [5171] manually modify the content of that [5173] example here then all I needed to do was [5176] I just ran the subsequent modules or [5178] subsequent nodes rather one by one right [5181] and it always just used that same input [5183] I can't overstate how valuable it is to [5185] have that ability in a no code tool [5188] because the alternative is basically [5190] make.com where if I want to run [5192] something from left to right I basically [5194] need to make an API call to my email [5196] server every single time I do that so [5198] there's no caching of data there there's [5199] nothing that easy if you wanted to build [5201] that in you'd actually have to manually [5202] do that by using something like a set [5204] variable [5205] module setting it to whatever you [5209] want and then on all Downstream modules [5212] having to reference that set variable [5213] module for your testing and then anytime [5216] that you wanted to switch from um [5218] staging or uh yeah staging to production [5221] basically you'd have to switch [5224] back um over and over and over and over [5226] again um which means You' have to go [5228] through every module and then change the [5229] email body variable back to uh you know [5232] the text the email text variable over [5234] and over and over again and that's [5236] really annoying it's also annoying [5237] because they kind of charge you a little [5238] bit more for it so not even close NAD 's [5240] just much better with testing [5242] authorizing and connecting make wins for [5245] sure um I know that I showed you some [5246] pretty simple connection flows here [5248] where all you need to do was log into [5250] your Gmail but in reality NAD 's [5252] connection flows are substantially [5253] harder most of the time um if you wanted [5255] to connect I don't know like a Google [5256] sheet or [5260] something actually you know what now you [5261] could probably do one click off right [5263] yeah okay I take that back you can do [5264] one click off here but previously if you [5266] wanted to do um I don't know something [5268] like a Google Drive you would have to [5271] create a credential and then you would [5273] have to go and use um you basically have [5276] to like do a whole API connection which [5278] is obviously extraordinarily [5279] intimidating for new users so like [5281] really you're going to have to go into [5283] the um you know Google Cloud console and [5286] get the ooth redirect URL the client ID [5288] the client secret and you have to read [5290] super annoying but also very [5292] intimidating documentation on how to do [5294] this um which you know honestly you [5296] could screw up and it could take you [5297] forever and you could be totally dead [5298] ended whereas if you wanted to do the [5300] same thing with make.com you would just [5302] add a you know a Google drive module [5303] here [5305] and the connection to this is literally [5306] just again sign in with Google it's sort [5308] of a oneclick sort of deal so very [5310] straightforward U make.com even despite [5313] the fact that they have like 10 times [5314] the built-in modules um it's just much [5317] much better there so make definitely [5320] wins uh on that respect for web Hooks [5322] and mail hooks um make wins as well it's [5325] extraordinarily simple and this isn't [5327] going to make sense unless you have like [5329] a um no code background but it is [5332] extraordinarily simple to set up a a [5335] custom basically event handler in [5337] make.com all you do is you click add you [5340] make new web hook let's just do YouTube [5343] example I've had to start writing [5344] YouTube example because I went through [5345] all of my connections a little while ago [5347] and there were like 8 million that were [5348] just [5349] ASDF um I'm just going to say YouTube [5352] example um you know n8n versus make web [5356] hooks um it they just give you an [5358] address and you can just send a request [5359] to this address anytime you want and [5361] then something will automatically [5362] populate here it's crazy if you think [5363] about about it um in nadn you know they [5366] have an equivalent feature if you go [5367] down to web hook but I find in general [5371] um it's just it's just a lot clunkier [5372] and it's a lot more annoying to use um [5374] you know if you were to listen for the [5375] test event I I don't know in my limited [5377] experience admittedly I might have less [5379] than you know 200 hours or something [5381] like that on naden in total at this [5383] point um the NAD web hooks are [5385] substantially more annoying to deal with [5387] um if you do the wrong request type [5389] instead of a get or you do a post or [5391] something like that they won't just tell [5392] you that you did the wrong request type [5394] type you'll just be stuck here waiting [5396] uh there's a difference between test [5397] URLs and then production URLs which you [5400] know is important if you're like a [5401] computer program or something but the [5402] vast majority of non-technical folks [5404] they won't remember to change um the [5405] test to the production and likewise and [5407] then they ask for some sort of like o [5409] usually by default so it's a lot more [5411] secure don't get me wrong but if you [5413] want to get up and running with this [5414] stuff make is is definitely Superior [5416] another issue is uh there's no built-in [5418] mail hook feature make basically coin [5420] the term mail hook but now it's like a [5421] very uh you know like a lot of people [5423] expect this a mail Hook is just like a [5425] web hook it's just instead of a web hook [5427] um it's an email address so if you send [5430] an email to this address like if I go [5432] back here and if I were to just make an [5434] email I could actually like have a flow [5438] set up that um you know basically like [5441] does something every time you send an [5442] email to this address think of the uh [5444] possibilities and opportunities here you [5446] could basically instantly you know [5448] create a system that that that you CC [5450] something and it does something else it [5452] it adds a record to clickup or if you [5454] BCC or something like that maybe it [5456] automatically starts following a user on [5458] a social media platform like the um [5460] abilities here for male Integrations [5462] particularly are Limitless so if that's [5464] something that you're looking to do a [5465] lot of you know definitely look more [5467] towards [5468] make um AI features uh I hope that this [5471] is self-explanatory but um n8n wins [5473] hands down uh I know I covered the text [5475] classifier here but the biggest module [5477] and probably the most popular one is the [5479] AI agent module here as I mentioned the [5482] really cool part of the AI agent if I [5484] just exit out of this and kind of scroll [5486] down is it is even has this inherent [5489] chat feature which is crazy um but uh [5491] there's nothing like this in make.com [5493] make's not even close you basically have [5494] to rebuild the wheel every time you want [5495] to do something like this so uh you know [5498] when a chat message is received and you [5500] can even you could chat with the model [5501] right here it will go and it will call a [5504] chat model of your choosing so open AI [5507] chat model going to select my [5510] credentials uh sure let's do GPT 4 mini [5514] then it'll also talk to a uh memory [5518] store that you have which stores five or [5521] however many messages you want from your [5522] past conversation history and then [5524] depending on that you can choose a tool [5526] that you want it to do which is pretty [5528] crazy so uh I don't know this is the the [5531] simplest API in the whole wide world um [5534] I don't know if I'm actually going to do [5535] a tool usage I'm trying to like find a [5536] very simple example maybe we'll we'll do [5539] the Gmail API and then we're just going [5541] to read through [5545] um let's not send let's [5549] get maybe get many we're going to [5552] simplify [5553] them and then now we're going to chat [5555] with our little AI agent hi how's it [5559] going all right AI agent is already here [5562] and ready to help you what can you do [5565] for [5571] me it can retrieve information do email [5574] management task assistance and general [5576] advice like that's pretty crazy could [5578] you retrieve my [5581] last retrieve my most recent [5585] um most recent email from info@ left [5589] click. we're just going to send it an [5591] email sorry send it a message ask it to [5593] retrieve the most recent email from info [5595] left click. it's then going to call my [5597] little [5599] tool and it's going to take a while for [5601] that tool to obviously consume and do it [5603] whatever it is that it needs to [5606] do but then it goes through and it finds [5608] the tool in my email inbox just using [5610] natural language and as you can see I [5611] set that up in like 3 seconds right so [5613] it includes a snippet includes all the [5615] data and all that stuff um you can make [5617] this arbitrarily complicated I added a [5619] single tool here you could add 500 I [5621] mean you probably shouldn't add 500 but [5623] what you can do is you can add five and [5625] then one of the other ones you can add [5626] is another AI agent which filters some [5627] other stuff essentially what you're [5629] doing is you're you're making this big [5630] decision tree which is pretty neat and [5632] you can chain together however many of [5633] the things that you want um it does [5635] start to break down after a certain [5636] point and I won't say that it's like [5638] super business um capable at the moment [5640] but it's very clear that this is going [5641] to be the future of the vast majority of [5644] businesses they're just going to have a [5645] agents that wrote decisions and do [5646] queries so yeah not even close nen wins [5650] hands down if you're looking to get more [5651] involved in AI agents and that's like [5653] kind of the the the next step you want [5655] to take then nen's the one for you [5658] sharing and collaborating functionality [5659] and it then also wins on that front um [5661] if I just go over here if I wanted to [5664] share this flow which you know it's kind [5665] of two parts so let me just delete this [5666] a agent sorry buddy you're not taking my [5668] job just yet we click share over here [5671] sorry not share well we could we can [5673] collaborate with other people on our [5674] workspace very easily with that button [5676] but if we go over here and then we click [5678] um download uh you can basically um very [5682] quickly and easily download like a [5684] blueprint file or a Json uh which is [5686] similar to um what make.com allows you [5688] to [5689] do and what this data is is it's [5691] basically like a code representation of [5693] all modules in your flow along with all [5695] the connections and like the positions [5696] on the page and all the test data and [5698] stuff like that which is obviously [5699] pretty neat [5701] right the benefit to this though is if [5704] you think about it um there's also the [5705] ability to import from a URL um which is [5708] kind of new so you can actually import a [5709] workflow from a URL you can remember how [5712] earlier we said that there were a bunch [5713] of templates well this is what's [5714] happening under the background you can [5716] actually just click any one of these [5717] workflows and instantly just import it [5719] to your um workspace you can also copy [5722] the template to your [5723] and I could just paste this in and it [5725] literally just like paste in this huge [5727] Lego block like thing and as you can see [5729] you know you can get arbitrarily big and [5731] complicated with this stuff I mean you [5733] know this flow could be I don't know [5735] could start here or go all the way down [5736] here there could be 8 million modules [5738] involved not that I recommend you build [5739] flows out of 8 million modules but I [5740] think you guys see what I'm saying um [5742] with this copy and paste stuff make.com [5744] is a lot more annoying I find with this [5746] um you have to use this little import [5748] blueprint thing and they have to choose [5749] a file on your computer um there's [5751] nowhere near as big of a template [5753] Library available like there are [5754] templates don't get me wrong I just find [5756] that the templates are nowhere near as [5757] nuanced or as valuable and this is [5759] coming from somebody that like actually [5760] uses these to make real money um these [5762] are usually just one or two step flows [5764] and like yeah they're cool and stuff and [5766] that's nice but nowhere near as detailed [5768] as like the thriving developer open [5769] source Community um that nadn has [5772] unfortunately so your ability to [5774] collaborate is definitely impacted [5776] hotkeys nadn definitely crushes it with [5778] hock keys not just um uh like the the [5780] availability of the hock keys but also [5782] the fact that they like teach you [5783] everything if you Mouse over stuff um [5785] it'll just tell you what hotkey you need [5786] to click in order to have it happen so [5788] top right hand corner here I'm mousing [5789] over this plus button it says hey man [5791] quick clicking this button next time [5793] just press tab instead right um variety [5795] of other examples of this but yeah they [5797] lend themselves to this little test uh [5799] text interface quite a bit which I like [5802] and uh you know there aren't very many [5803] hocky in make.com at all if I'm being [5805] honest aside from just like the built-in [5806] ones in your browser like you know you [5808] can tab through fields for sure but [5810] really like that's it I can just tab [5812] through Fields is there really nothing [5813] else [5814] if I wanted to um copy something the [5817] copy paste you know cut I mean like [5820] these are all things that are obviously [5822] native to my U native to my computer not [5824] really built into make.com and I [5827] consider it such a shame because I think [5828] make.com could be so much more easy to [5830] use with some hock keys but they are [5831] really just targeting that total Noob [5833] demographic I would say um note taking [5835] and documentation naden wins for sure um [5837] if I wanted to document a flow in [5839] make.com for this I would have to click [5840] on this notes feature I'd have to right [5843] click on this go add a note I'd say you [5846] know note about [5848] XYZ then click exit out of this I right [5850] click this add a note note about [5856] ABC not only is this just not very [5858] intuitive like it the only way to see my [5860] notes is I have to physically go down [5862] here to notes and then give it a click [5863] and then and only then will I see it not [5865] only is this not very intuitive it's [5867] just it's very limited with like what [5868] you can do I mean sure you could make [5870] this really long if you wanted to I [5871] guess [5873] but I don't know there's like no there's [5874] no formatting um you can only see it if [5878] you click on the button you have this [5879] little arrow I guess what I'm trying to [5881] say is Ned end just does a much much [5882] better job on those you guys remember [5884] that template that I just copy and [5885] pasted a moment ago if I copy this again [5886] then go back here like if I paste this [5889] puppy in just look at the way that this [5891] is documented right you have a variety [5893] of different formatting um options [5896] natively accepts markdown which is just [5897] a text formatting method you can drag [5899] and drop these to be visible anywhere [5900] you want um there's so much information [5903] basically on everything that you can you [5905] can like document any flow that you [5907] possibly want for you or somebody else [5910] in your team for instance so that makes [5912] it just a lot easier and clearer to use [5913] in general so I hope I'm not convincing [5916] you to use you know NAD over make.com [5918] necessarily um what I'm going to do next [5919] just tell you guys what I would do if I [5920] were in your shoes um oh sorry one more [5923] thing we have some Financial comparisons [5924] to do I spoke a little too early okay [5926] let's do the financial comparisons and [5928] then at the end I'll talk about which [5929] platform I would use if I were in your [5930] shoes right now and I were kind of at [5931] the start line of my business versus if [5933] I were sort of halfway through so [5936] Financial comparison wise um now I think [5938] you know how each platform Works [5939] realistically let's now turn to the [5941] major topic that is on most people's [5943] minds and is honestly the main reason [5944] why most people choose one platform or [5946] the other um the financials involved so [5949] how much money could you realistically [5950] expend to spend on realistically expect [5953] to spend on each platform if you wanted [5954] to what I'm going to do next is I'm [5955] going to break costs down below so you [5957] guys can make the best decision for you [5958] um to keep things relatively equal [5960] across each of these I'm going to be [5961] using a hypothetical example where you [5963] just need to run the system that I built [5964] 2,500 times per month or a little under [5966] 100 times per day so 2,500 times per [5969] month I don't know it's like 80 times a [5971] day or something like that um I'm [5973] assuming that you know you get 80 emails [5975] a day that may seem a little crazy for [5977] you but I guess if you think about it [5978] logically if you're running like a big [5979] info at email or hello at or something [5982] 80 emails a day while on the higher end [5983] of the number of emails you might [5984] receive it's actually not that crazy to [5986] consider so we're going to start by [5988] doing a financial breakdown of NN and [5990] then I'm going to do a financial [5990] breakdown of make.com as well if I start [5992] with the [5993] um nadn Financial breakdown which [5996] apparently disappeared for some [5998] reason let's exit out of this puppy and [6002] see if I start with this n8n financial [6005] breakdown um basically the way that [6007] their pricing works is and I I've [6008] clicked monthly on all of these you can [6010] also buy annual plans and I think the [6011] pricing is a little bit different but [6013] not by that much um [6015] n8n is absolutely 100% free if you self [6020] host it I'm going to cover that in a [6022] second but I just want to make sure that [6023] everybody here knows that's like one of [6024] the main draws of the the self hosting [6026] feature now I'm going to be comparing [6027] this on a cloud hosting to Cloud hosting [6030] um basis just because doesn't really [6032] make sense to compare apples to oranges [6033] let's compare oranges to oranges to [6034] start if you were to compare oranges to [6036] oranges and then go Cloud um based [6039] hosting for both naden and make.com [6041] here's what it looks like um you will [6043] pay $24 a month for 2,500 workflow [6047] executions and five active [6049] workflows what is a workflow execution [6052] to be clear a workflow execution is [6056] this one run of this is a workflow [6059] execution so that runs 80 times a day [6062] you're consuming 80 workflow executions [6063] a [6065] day um you are allowed five active [6068] workflows what is an active work if we [6070] go back to personal here I'm just going [6071] to save this flow and exit out and go [6072] back to the dashboard five would be five [6076] systems that are clicked to active so [6079] one two three four five that is all you [6081] would be able to do for $24 which to be [6084] honest pretty crappy the fact that they [6087] limit the number of active workflows you [6088] have on the $24 month plan that's kind [6090] of crappy um so not very good there [6093] because I mean I can think of a dozen [6094] scenarios where well scenarios is a [6096] funny word uh I can think of a dozen [6098] instances where you could have where you [6101] would need substantially more than five [6102] to do even like some of the more basic [6104] things in a business so I really don't [6106] like how they limit the number of active [6107] workflows it's probably like the [6108] shittiest part of their pricing model to [6110] be honest but obviously you know the [6112] cell phone posting comes in handy and [6114] anytime you're over five that's [6115] typically what people do so if we were [6117] to run a scenario 2,500 times um you [6120] know obviously this would be under the [6121] $24 a month plan because we have one [6123] active workflow uh that's how much it [6125] would cost €24 I should say per month [6128] now let's chat really quickly about the [6130] self-hosting if you self-host an NAD [6132] workflow you don't pay them a dime your [6134] only costs are the server that you are [6135] going to be using to host your na10 open [6138] source instance that's it so most of the [6140] time in practice server costs like at [6142] the beginning and end of the range might [6143] be 5 to 10 bucks a month the higher end [6145] of the range you might be spending like [6146] 30 40 50 bucks a month if you have like [6148] a pretty good server if you want to [6150] spend like a couple hundred bucks a [6151] month or whatever you'll have like the [6151] best server ever but you probably don't [6154] really need to unless you're doing [6155] something me mega Enterprise so what [6158] that means is you know you can kind of [6159] get away with five bucks a month and [6160] theoretically on that five bucks a month [6162] you could like probably scale to over [6164] 100,000 workflow executions so like [6166] that's 40 times what you're getting for [6168] €24 a month you know um there's so many [6171] options like there's there's render [6173] that's one uh service digital ocean easy [6175] panel I mean I can throw out like 500 [6177] here and I know a lot of people have [6179] like a lot of these companies have [6180] actually reached out to me being like [6181] hey Nick can you do a video on [6182] self-hosting N using our platform [6184] because it's blowing up right now I [6185] never have um but when I do end up [6187] making that video I'm just going to pick [6188] whatever one is the best not necessarily [6190] whichever one sponsors me um but yeah [6193] you can you can get you know servers and [6194] all these for like five to 10 bucks a [6196] month is and then you could run 100,000 [6198] workflow executions and since a workflow [6199] execution in nnn is very different from [6201] a an operation consumption in make like [6204] this is pretty huge right if the average [6207] make scenario has 10 operations or 10 [6210] modules and it run it takes 10 [6212] operations every run like theoretically [6214] this is like a million operations a [6215] month for like five bucks a month so [6217] that's what's really attractive to a lot [6218] of people that do make.com uh and that's [6220] one of the reasons why a lot of people [6221] are switching over to [6223] NN now in terms of scaling though not [6225] captured in our example um the key point [6227] in NN is how affordably it scales [6230] make.com doesn't really scale very [6231] affordably a single scenario can seee [6232] many Ops usually between 5 to 25 I want [6235] to say um n8n will only ever count a [6237] single workflow on their Cloud offering [6240] additionally if you're doing self-hosted [6241] you can run an infinite number of [6243] workflows for the same or slightly [6244] elevated cost per month which is nothing [6247] so that's pretty cool obviously um [6249] anaden has uh quite a lot of Big Deck [6251] energy there if you could just self host [6254] your make thing and just never have to [6255] pay them how great would that be right [6257] moving on let's do a make.com financial [6259] breakdown so as you see here there [6260] variety of plans on the monthly side of [6262] things there's free plan there's a core [6264] plan a Pro Plan teams plan Enterprise [6266] plan I should note that um you [6267] technically don't have like a free plan [6269] here for the cloud hosting it's just the [6270] self hosting so technically like [6272] make.com is more accessible um at the [6273] lower levels you can get started for [6275] free right you don't actually have to [6276] pay a dime nor do you have to know any [6278] computer programming or anything you can [6279] actually get up and running for $0 but [6281] generally if you want to do anything [6282] meaningful in a business you're going to [6284] need you're going to need core or up um [6285] the good news is core starts at just [6287] $159 so $10,000 offs a month pretty [6289] simple um when I wrote this I thought [6292] that our scenario would include five [6294] modules I believe it only ended up [6295] including four right yeah it only ended [6297] up including four so um this is actually [6300] even less than this uh so the logic that [6302] I did here with five was I said you know [6304] if we run this 2,500 times a month we [6307] have five modules which get executed 5 * [6309] 2,500 is [6311] 12,500 12,500 would be over the limit of [6313] most built-in $10,000 on Ops month plans [6316] like core for 1059 or Pro for 1882 or [6319] teams for 3412 so you'd have to upgrade [6321] um that would then cost 1882 per month [6324] on this plan on 20,000 instead um but [6326] you know because we're doing this for [6327] just uh I don't know four times 2500 [6330] technically this fits under the core [6331] plan for $10.59 a month which makes make [6334] a lot more cost effective than nnn's [6336] Cloud hosted offer for this example uh [6338] this does make it less cost effective [6339] than their self-hosted offers still in [6341] most cases because you can usually get a [6342] server for less than this um and that [6344] server would be able to run like 100 [6345] times this right now the issue with [6348] make.com I would say pricing wise is it [6350] just scales really fast um most [6352] scenarios are going to include a ton [6353] more modules than our little example did [6355] with five or four I should say and a lot [6358] of the time there'll be some sort of [6359] looping functionality where you might [6360] run the scenario once but you have 50 [6362] bundles so 50 Time 5 or four is [6365] instantly 200 and if you run that like [6367] more than a few times a day you [6368] basically you're like using your entire [6369] month's operation budget with just one [6371] scenario so that kind of sucks um yeah [6374] I'm not going to graph it for you guys [6375] but essentially it's like more [6377] affordable at the beginning and then it [6379] like spikes way up and what's [6382] interesting um depending on how long you [6384] guys have been in you know the no code [6386] business for is this is basically the [6387] comparison between zapier and make.com [6390] um a few years ago zapier was kind of [6391] the one that was like you know scaled [6393] way the hell up and if you were like a [6394] pro and you wanted to like get better at [6395] this stuff you'd move over to make but [6397] now that same determination is kind of [6399] being made between make and and NN and [6401] it makes sense if you think about it [6403] because the market itself in no code is [6404] getting more sophisticated like I don't [6406] know five or 10 years ago I mean how [6408] many people were out there developing no [6409] code stuff fewer right but over the [6411] course of The Last 5 Years like of those [6413] people have become really good and the [6414] median ground of the market has become [6416] reasonably good so if you're really good [6418] or reasonably good it makes sense that [6420] you'd start going towards more developer [6421] friendly applications right that's just [6424] logical anyway which one should you [6425] choose drum roll please this is probably [6428] what most people here were waiting for [6430] Nick what would you choose if uh you [6431] were in my shoes let me tell you it [6434] depends I'd pick uh I'd pick one or the [6437] other depending on circumstance so as I [6440] mentioned before almost all noode [6441] platforms are capable of the same things [6443] if you can do something and make you can [6444] absolutely do it in NN it's not just a [6446] matter of is this possible it's a matter [6448] of how many steps would be required in [6450] order for me to do this how difficult [6451] would this be right so I I really want [6453] to like prove that to you guys that you [6455] can do anything in either one and that's [6456] why I buil that same system in both and [6458] we had relatively different approaches [6460] for them now simple answer to the [6462] question is make is going to be easier [6463] for simpler things naden is going to be [6465] easier for more complex and [6467] operationally intensive more expensive [6468] things so you if you find yourself doing [6471] easier things more often if you're not [6473] very technically competent you know it's [6475] easier for simple applications nadn is [6477] going to be better for you if you're [6478] operationally intensive spending a lot [6480] of money on make OPs and that sort of [6481] stuff so let me give you guys some [6484] context and then tell you exactly what I [6485] would do if I were starting um naden [6487] clearly markets itself as for developers [6489] by developers it's growing very quickly [6491] especially in the last few months makes [6493] sense because as I've mentioned here [6495] it's a New Concept so as time pass the [6497] market has gotten more skilled so users [6498] want better tools right now make.com [6501] markets itself is for everybody despite [6503] not being accessible or open source but [6505] it's a much simpler tool to get up and [6506] running with and beginners often find it [6508] more intuitive as you get more [6509] experience with programming though its [6511] built-in features will get limiting and [6513] then costs will scale reasonably quickly [6516] so if I were starting over again like if [6517] Nick you know day one man like what [6520] would you pick today 2025 just heading [6523] out into the automation world uh whether [6525] I wanted to build something for myself [6527] or you know for for for my clients or [6529] whatever what would you [6531] do I would go with [6534] make.com the reason why is because the [6536] barrier to entry for me to build [6538] something that produces actual tangible [6540] business value like today that drives an [6542] Roi for my own company or the companies [6544] that I work with that I'm selling [6545] services to is lower it's simpler it's [6548] easier to get up and running with that's [6549] all I care about all I care my whole [6551] Paradigm you know if you guys watch the [6552] rest of my content get up and running [6554] quickly say yes to everything figure it [6557] out later right so it' be very easy for [6560] me to learn and then start seeing a [6562] payoff and that payoff would feed back [6564] into my motivation to learn which would [6565] ultimately cut my learning curve right [6568] what I would do after that is over the [6570] course of months or years naturally I'm [6572] going to get better at this stuff [6573] because you get better at stuff that you [6575] do more often so as my skills and needs [6577] develop I would start looking into NN as [6579] a natural progression of my journey it [6581] is very clear that nadn is where the [6583] future of all of this stuff is going [6586] nadn is devouring market share and it's [6588] growing very quickly and their AI agent [6591] functionality in particular is just blow [6593] the hell keep blowing the hell up over [6594] the course of the next years so I [6596] definitely start doing that and the [6598] benefit there is as you could see most [6601] of the the the concepts that underly [6603] these different terms they're really the [6605] same right like a node is a module um [6607] nodes and modules both have fields that [6609] you drag and drop different you know [6610] little colored things to uh there's [6613] there's testing involved in flows and [6614] stuff right like if you start with [6616] make.com it'll probably take you and you [6619] know you get to a sufficient level it'll [6620] probably take you 20% of the time and [6621] otherwise would it taken you had you [6623] just started with nadn off the bat so [6625] your total time investment is not you [6627] know I have to learn a whole another [6628] thing from scratch so it's two times as [6630] much no it's really like 1.2 times as [6632] much it's 1.2 times as much and then you [6634] get to deliver value very quickly for [6635] your clients and for your own businesses [6637] you you you keep motivated because it's [6639] a simple platform then you also you know [6641] as your skills naturally develop get to [6642] pick up the harder and harder [6644] continue challenging yourself and [6645] growing so that is what I would do if I [6648] were starting over again tldr I'd go [6649] with make to begin with and then [6651] eventually I'd move over to to [6653] NN okay thank you for watching this [6656] guide that takes us to the end of the [6658] walkth through I really hope you guys [6660] enjoyed I had a lot of fun putting all [6661] this stuff together obviously if you [6663] guys like the content that I put out um [6665] I run two programs that teach people how [6667] to build automation companies scale [6669] their automation agencies uh and you [6671] know essentially build [6673] Lifestyles um that are on the the upper [6675] echelon of what most people think is [6677] possible the first is called maker [6678] school it's a simple daily [6681] accountability program if I can open the [6683] tab it's a simple daily accountability [6685] program run by me where you essentially [6689] have a list of tasks that you do every [6690] single day um and those tasks are [6692] primarily lead generation oriented they [6694] revolve around a few tried andrue [6696] dedicated lead gen channels that that [6698] worked for me and for almost a thousand [6699] other people at the time of this [6700] recording and I coach you through it [6702] there are tons of videos you know little [6704] three four minute Snippets here there I [6705] think a total it's over 200 now um I [6707] give you templates I walk you through [6709] some underground methods I used to find [6711] high high paying qualified automation [6712] leads and then you also get one monthly [6714] group call with me where you can [6715] literally ask me whatever you want I [6717] stay on for like two hours once a month [6719] two and a half hours sometimes depends [6721] on how badly I need to pee and uh yeah [6724] you know if you guys want to like hear [6725] me answer all of your questions that's [6726] kind of where you do it I also run a [6728] community called makemoney withm [6730] make.com now as I mentioned here nat10 [6732] is taking the Lion Share of um you know [6735] new automation interest and their AI [6737] agent stuff is picking up so I may [6738] change the name depending on when you're [6740] watching this is something that just has [6741] more to do with General General [6742] automation than specifically make.com [6745] but essentially this is the next step [6747] after make money uh maker school after [6749] you get those first few customers after [6750] to get the ball rolling what you do is [6752] you get into this program makemoney [6754] withm make.com where I'm still coaching [6755] you but I'm coaching you at like a [6756] higher level I'm also involving you uh [6758] more often in consultations so instead [6760] of it being once a month it's once a [6761] week and then I have courses and [6764] programs therein that are more to do [6765] with like scaling a business necessar [6767] rather than necessarily just getting up [6768] and running so I'm going to leave links [6771] for both of those in the description I [6772] don't want to like pitch you know I want [6774] to keep the the value of my content at [6776] like 99% me giving stuff to you 1% me [6778] talking about it but given the fact that [6779] this video is probably over 3 hours by [6781] this point I think that's uh probably on [6783] brand for me if anybody has any [6785] questions about this let me know if you [6786] guys want a video about something that [6787] maybe I I didn't cover here um then [6789] please shout and if you guys are a fan [6791] of na10 you guys want to learn more [6792] about the platform I'm going to be doing [6793] a big video series um just over the [6795] course of the next few weeks where I do [6797] things very similar to what a different [6798] make.com I'm going to show you how to [6799] make actual Revenue with this platform [6801] I'm going to show you how to build [6802] systems that don't just look good but [6803] they actually do good um you know really [6806] just pull the wool out from from over [6808] your eyes thank you again for your time [6810] looking forward to the next one have a [6812] great rest of day everybody

Video: https://www.youtube.com/watch?v=c2MkGCfYe4w
Title: The YouTube Parasite System (ChatGPT Growth Hack)
[0] what's going on everybody Nick here got [1] a great system for you today where we're [2] scraping YouTube videos we are then [4] going to be processing their transcripts [6] then we're going to use AI to come up [8] with new and interesting twists on that [10] content um before ultimately repurposing [13] that into a bunch of different content [14] formats including Facebook Instagram [16] LinkedIn uh Twitter we're even going to [18] create a new YouTube script based off [20] all this let's do this thing all right [21] so we're going to build this in a sec [22] but I want you guys to know that I [23] haven't actually done this specific [25] system before I'm going to be building [26] it alongside you live so you're going to [28] see the detours that I take along the [29] way you're going to see my thought [31] process is narrated as an automation [32] developer and the reason why I do this [34] is because I want people to see what an [35] actual development process looks like I [37] don't just want them to see like the [38] pretty final picture so to speak I think [41] it's a lot more informative this way so [43] yeah um I have an idea of how I think [45] the system is going to work but I don't [47] entirely know whether or not the system [48] is going to work and we're going to [50] figure it out as we go along um Tobias [53] here said would something like this be [54] possible for YouTube meaning scrape [55] transcripts of new released videos of [57] channels we want to use as a starting [59] point and then have it create post off [60] the material so when he said that uh my [63] first thought was probably and uh I [65] spent about 5 minutes just thinking [66] through how I'd do this um and and [68] here's here's what I've come up with so [69] this is just my tentative outline I [71] don't actually know 100% if this is [72] going to make sense but we're going to [73] we're going to figure it out as things [74] go along usually what I'll do is I'll [76] like start with some end goal in mind [79] and then I'll just work through three or [80] four possible variations of how I might [82] do it um this process takes me 5 minutes [84] and then you know I end up with some [86] list here so what I'm thinking we're [88] going to start with is we're going to [89] scrape some some YouTube videos [91] obviously because that's going to be the [92] data source we're then going to get the [94] transcript of the YouTube videos I don't [96] actually know how uh I'm going to go [98] from from here to here to be honest [100] because uh some scraping sources and [103] some resources that you use they [105] actually include the transcripts built- [106] in um other others have some sort of [109] like buggy functionality here and then [110] others I don't have that at all so [112] depending on which one we use we may get [113] the transcript if not we may actually [114] have to like transcribe the text using [116] some AI platform um what happens after [119] is I'm thinking we're going to summarize [120] the transcript then we're going to check [122] the summary to see if the content fits [124] our filters so like you know if we're [126] creating content for curating content [128] really to be repurposed on our own [130] Brands it needs to fit our brand tone of [133] voice it needs to fit sort of the things [134] that we talk about so what I'm going to [135] do is I'm going to set up an AI prompt [137] that looks at some examples of maybe [139] past content that we've done or uh I [141] don't know just like funnels the content [142] and ensures that any new content that [144] comes into this funnel or queue or [146] database um is going to be something [148] that we would actually post so that's [149] it's going to be pretty [150] cool after we're done with that uh we [153] are going to store it in a database with [154] a unique ID the database in this case [156] just going to be a Google sheet so very [157] straightforward anytime that you hear [158] database you can just basically replace [160] it with like Google sheet and 99% of the [162] time you're going to be fine so that's [163] what we're going to do next and then if [165] new we're going to use AI to turn the [166] transcripts into highquality structured [168] posts for various platforms I don't [170] entirely know what platforms just yet [173] but I'm thinking we're probably going to [174] do uh like I just want like two [177] fundamentally different kinds of [178] platforms here so you guys could see I'm [179] thinking we're going to do some sort of [180] like Twitter pre-draft I guess it's [182] called X [183] now um or uh we'll we'll also do [186] something longer form so maybe like uh [190] LinkedIn and then I think on top of that [192] and really this is just like to [193] demonstrate the the value of this we're [195] also going to um generate uh like an [198] like an outline for our own [200] video and I'm going to try [204] experimenting with um maybe like a [207] script or something I'm going to try [208] experimenting with an I don't know if [210] this going to work but I'm going to try [211] having this model that I pass it through [213] come up with something unique that it [214] can add to this because I don't just [215] want it to be like a one for one sort of [217] plagiarism thing I've gotten a couple [219] comments as to a few of my previous [220] posts where people are like well like [222] you know is this just copying the guy's [223] posts and I think that's a that's a [224] reasonable claim to make now don't get [226] me wrong I don't really care much for [228] the morality or ethics behind [229] repurposing publicly available Twitter [231] posts people are going to or sorry um [232] YouTube posts people are going to copy [234] [ __ ] anyway you should see the number of [235] people that have copied my videos I'm [236] not worried about that um this isn't [238] like a you know like like a moral thing [240] I just wanted to show you guys how to [241] actually like make the content even [243] better maybe add some new twists to it [244] add some some value um and then after [247] all said and done we're going to post [248] these on our personal company pages so [250] this is what I think is it's going to [252] look like um this is not actually that [253] complicated like of a flow to be honest [255] we'll probably get this thing done in [256] like half an hour to an hour unless I am [258] fundamentally misunderstanding something [260] but yeah I'm just going to show you [261] everything that I'm going to do along [262] the way so the very first step about [264] scraping YouTube videos there are a [265] variety of ways that you can scrape [266] YouTube videos the way that I'm probably [268] going to use and if you watched my last [269] last three or four live builds you're [271] probably like oh boy what's he going to [272] say next um is it is it appify and yeah [274] it's going to be appify and I'm not [276] saying this because I want you guys to [278] only use appify just because it tends to [280] have the vast majority of scrapers um [282] that I use for like this sort of content [284] repurposing purpose so appify is a [286] Content uh sorry it's a scraping [288] Marketplace which has hundreds of [290] scrapers developed by mostly real actual [292] other people Like Ur that do things like [295] extract data from Tik Tok uh get data [297] from Instagram you know in our case [298] we're going to be doing YouTube so [300] scrape videos from YouTube scrape shorts [302] scrape comments I've done the comment [304] scraper um as part of my Approach that's [307] actually what I'm doing right now like [308] I'm I'm doing this video because I used [309] a comment scraper to scrape my comments [311] and then pass that through Ai and tell [312] me if this is something people wanted [314] there are hundreds of not thousands of [316] different scrapers here that you can use [317] for basically any purpose and because [318] it's a Marketplace people tend to [320] compete on cost and stuff which keeps it [321] reasonably cheap for you so uh I'm [324] realizing this says LinkedIn parasite [326] system let's just go YouTube system must [328] have duplicated that from a template [330] uh so what I'm going to do first is I'm [332] just going to look for scrapers that are [335] built uh like pre-built for me rather [337] than woring about making my own if I had [338] to make my own it might take way longer [340] it probably be dozens of steps here in [342] terms of programming and rate limiting [344] and I need to you know proxies and and [346] [ __ ] like that appy just takes care of [348] all that stuff for you so my go-to [349] anytime I have a new scraping project [351] just start with something that's that's [352] pre-built if it does 90% of the job for [354] you that's probably sufficient so I'm [357] just going to open up like three or four [358] of these and the reason why why is [359] because I just want to see um I guess we [363] want the video scra [364] right I want to see we got a caption [367] script right that's perfect if if you [369] know I can just get something low cost I [372] want to like compare these with each [373] other okay this one gets the transcript [376] that's perfect if we can get the [377] transcript from videos we are freaking [379] balling here oh that one looks cool [381] topaz Shing gun my Naruto Bros uh okay [384] cool let's double check this so this is [386] a YouTube script you pay $5 for a th000 [388] videos so what do you get you get [390] videos titles met description metadata [392] that might include the transcript I [393] don't know I'm just going to command F [395] and type transcript I'm not seeing [397] anything here so I'm just going to go to [398] my next tab then I'm going to type in [400] transcript again I'm not seeing anything [403] this a short scrapers that makes sense I [404] clicked the wrong one this is subtitles [406] caption scraper [408] transcript yeah I see one over here too [410] I'm going to give a [411] click [414] um this looks like a subtitle right [418] here so this is this looks like [421] workable author app IFI video [423] description so are these different [424] videos if these are different videos [426] then [427] yeah are these all the these are all the [431] same oh you know what it scrapes one [436] video but then it has all of the [439] subtitles here okay well I mean this is [440] workable like we we might be able to [441] work it and it's like 15 bucks a month [443] so if this works we are golden um [451] okay video URL or ID so I guess actually [454] if you think about it we we kind of have [455] to go back one step we have to get a [456] list of videos that we want to scrape [457] right so not actually not actually just [459] the transcript so my system's going to [462] have to be a little bit more complicated [464] um let's just do like a let's do a step [467] zero [469] here uh where we scrape list of videos [473] to scrape and then I'm just going to [476] drag that stick that on top here and and [480] did kind of [ __ ] with my whole perfect [483] flow there cool uh so yeah we are [485] actually going to have to get like a [486] list of videos now I think about it dumb [488] but anyway uh from here looks like we [491] have three or four scrapers we could use [493] I'm I'm probably just I'm just going to [494] jump into like whatever [498] one and [500] then see how things [505] go um all of these cost a little bit of [508] money I I think I'm probably just going [510] to start [512] with uh sorry there was a transcript [516] here [517] right no so I guess I'm going to start [520] with h we just have to make a call so [523] this one's a try it free no credit card [525] required I don't know if it's 100% [527] actually [528] free but I'm just going to give that a [531] try and the very first thing I want to [533] do is I just want to verify whether or [534] not this actually can generate a you [536] know uh video transcript so hold on one [539] sec cuz my video is going to play when I [540] go on my [542] Channel all right sweet I stopped it two [545] mes would be too much and for the [548] purpose of this why don't I just get [549] like a shorter video I don't want to get [551] yeah let's do this one back before I [552] understood how headspace worked so I'm [554] going to I'm going to share this I'm [555] going to get the share [557] link I'm just going to open this up in a [558] new tab but I'm going to um turn all of [560] my audio down hopefully this doesn't [565] play and the reason why I did that is [567] you know you saw how the link changed [568] there at the end right so YouTube uses [570] um different links for sharing versus [573] uh which tab am I in this one here uh [576] versus um actually playing okay so now [579] that this is ready I'm just going to [582] give this a go and we're just going to [583] see if we can scrape the transcript [585] generally I always like to start with [586] like the core data that I'm going to be [588] manipulating in this case it's obviously [589] going to be the transcript so we just [591] wanted to double check and see whether [592] or not the transcript can actually be [594] scraped with this actor um if so then [596] we'll continue using it if not then we [597] won't so I'm seeing a bunch of cerilla [599] so pollution LEL so I don't know I [604] imagine this is Russian my Russian ain't [606] so good I think uh this is basically [608] just telling us that we can't because [610] there's some problems so this actor is [612] probably not going to work let's move on [613] to another one here video subtitles [615] caption [616] scraper I'm going to try this one for [619] free it says I'm going to delete oh it's [622] cool that we can feed in a list of [623] videos here it's going to be helpful uh [625] language optional can we just do auto [627] yeah know I think we're just going to do [629] we're going to fetch the autogenerated [630] ones cuz that's totally fine for us and [631] then I'm going to paste this in and [632] we're going to click uh start it's going [635] to tell me that I have to rent this we [636] get two free days so it's not going to [637] cost me a buck to do this so I'm just [638] going to go okay and then save and start [642] let's see what sort of data we get from [644] this actor um and that will inform us as [646] to how we're going to proceed with the [647] rest of this now because it's one you [649] know video This should run reasonably [651] quickly you can see I'm also being build [653] for usage so I've been build. 2 cents. 3 [657] cents so far [659] um a good way to see if the actor is [661] actually working is just going to the [662] log and just seeing if there's tons of [664] issues and errors [665] here so I'm not seeing any issues I'm [668] going to go back to [670] Output I don't know what happened there [673] okay yeah great okay now we have good [676] God this thing's huge can we just get [678] like one thing with the whole freaking [680] no we can't that's sort of silly um I [684] mean ideally we just get one thing with [685] the whole transcript this is giving us [687] like the line by line [690] it's not that big of a deal we could [691] just um join the whole thing into a [693] script inake which is the platform we're [695] obviously going to be using so yeah it's [697] not that big of a deal I think I'm just [700] going to run with this for now um now [701] I'm going to put this into make so I I [703] just want to verify okay we have the [704] data in appify can we get this data to [706] my no code platform because my no code [708] platform is going to I'm just going to [709] call this like YouTube scraping system [714] um because you know it's one thing to [715] have it in appify it's another thing to [717] like actually be able to automate it so [718] to do this I'm going to go to get data [719] set items under the appify module I'll [721] go back to my appify link and then what [723] I want is I want the storage Tab and I [724] want to copy the store ID here sorry um [728] go to data set make sure this tab is a [729] data set copy this data set ID paste it [733] in here I'm going to sign into my um my [736] account because I have multiple [737] connections and then I'm just going to [739] return all of the things so 100,000 just [742] to be safe I'll click run this module [744] only we're now connecting with appify [747] and we're getting this so as you can see [749] this is quite a big like quite a lot of [752] data right I mean this is actually much [753] bigger than I normally do and it looks [755] like for about a half hour video lovely [758] rest of the day bye-bye we're already at [760] uh we're already returning like 900 so [764] that's kind of annoying but anyway we [766] obviously got the data now in my head [767] I'm thinking okay like why don't I just [769] go and I see whether or not I can turn [771] this into just one big transcript it'll [772] make it a lot easier for me to like feed [773] this in a chat GPT so I'm just going to [775] say transcript and then what I'm going [776] to do is I'm just going to join all of [779] these [781] um hold on a second ah sorry we can't [784] actually do this because this is being [786] output as multiple bundles right one two [788] three yeah so actually what we have to [789] do first we have to aggregate this to an [790] array because the um join feature is an [794] array only function so I'm going to go [795] down here to array aggregator drag that [798] puppy in the source module I'm going to [800] set as get data set items and then for [802] aggregated Fields really you think about [807] it I should just do everything [810] CU who knows if I'm going to need access [811] to some of this data [814] later okay great and then in set [816] multiple variables what I'm actually [817] going to [818] do is I'm going to [822] um actually have to run this first to [825] get the [826] data so We're looping through a th and [829] now we're going [832] here we've turned all this into an array [834] ideally with a TH or 95 [837] entries cool so we've just converted [839] this into something more workable now [842] what we need to do is we just need to [843] map this [844] array to extract only the thing that we [847] want which is the [849] text so I'm basically going to return a [852] primitive array with only the text [854] variable [855] here and [857] so to show you guys what this looks like [861] if I run this [863] again we are now getting um this big [866] array with the whole transcript and now [868] that it looks like this all we need to [870] do is we just need to join this so we [872] need to connect all of the array [873] elements and just stick it into one big [874] string and I'm just going to do so um by [876] using a space [878] delimiter so I'm going to click okay now [880] I'm going to run it one more time and [881] let's see the output it's just going to [883] be one huge transcript which is [886] beautiful okay so now there are a couple [888] things that I'm thinking about like when [890] I you know and I'm not building the [891] system linearly by the way right we know [893] that we're going to have a couple steps [894] before we're going to have a couple [895] steps after this is just the core step [896] so it's the very first thing that I want [897] to do but if you think about I know that [900] uh there's limited context windows for [904] AI so context window GPT currently sure [907] I've already searched this up as you [908] guys can see let's see what the context [911] window [913] is okay so context length of GPT 40 is [918] 128,000 are these the maximum context [921] windows so um for context this stands [925] for 128,000 tokens now tokens to words [930] looks like in English a word is 1.3 [933] tokens so 128 / 1.3 it's but 98,000 [938] words can I actually get this in [940] characters tokens to characters it's [942] probably simpler okay one token is four [945] characters in English that seems pretty [948] simple one token is equal to three [949] quarter words so one token is equal to [951] four characters [952] so sorry so I guess I did the math [955] so uh 28,000 * 4 about is about 500,000 [960] so I just need to make sure that the [961] inputs if you think about it are less [965] than like ideally be way shorter than [967] this but I need to make sure they're [969] less than uh probably about half of this [972] because I'd want the input to be half no [974] actually no no no never mind probably [975] about 300,000 400,000 I would say the [977] longer the contacts sorry the longer the [979] prompt that I'm providing obviously the [980] more money it's going to cost me to do [981] this big content summarization stuff but [984] uh that's sort of what what's running [986] through my head right now like I don't [987] want this to cost forever uh like a [988] million billion dollars so what I want [991] to do is I just want to get like um I [993] want to get a feeling [995] for how many characters this is so I can [998] see so this is 34,000 characters so um [1002] considering that my kind of token limit [1004] here is 52 like this is that's crazy [1007] right 512,000 [1008] 34 my video is half an hour and it's [1011] 34,000 characters how long would a video [1013] really need to be if it were to make it [1015] to 512,000 probably be stupid long so [1018] actually if think about it I don't [1019] actually need to do any any funky [1020] special math here I'm just going to like [1022] feed this whole thing in even if it's [1023] twice as long and it's 70,000 characters [1025] I mean it's still like one 1/8 17th of [1029] the total context window of the model so [1031] it should be okay it should understand [1032] everything that's being said and we [1033] should be able to use this to convert [1035] this into some sort of [1036] content okay with that out of the way [1038] I'm going to go to open AI I'm going to [1040] create a completion here and while I'm [1043] at it why don't I just name some of [1044] these so this is going to [1046] be um con catenate into [1052] string this is going to be okay and I'm [1054] going to want to generate a bunch of [1055] things here if you think about it like I [1057] have the opportunity here to [1059] generate not just uh not just uh like [1064] whether this is not not just a summary [1067] but I have the opportunity to generate [1068] like four or five different outputs I [1070] could generate like a Twitter post I [1071] could generate like a like a LinkedIn [1072] post I could generate like a YouTube [1074] video script so I want to do this as in [1077] as intelligent a way as possible [1079] possible and so what I'm thinking of [1081] doing is right now I'm thinking I will [1084] take this big long concatenated string [1087] that I've just gotten as the transcript [1088] of YouTube video and I'm going to turn [1090] that into an [1091] outline now this is a form of structured [1094] data that I can do a lot with once it's [1096] in an outline I can then take this [1098] outline and then I could use it to [1100] recreate a post or to add new things to [1102] it speaking of adding new things I think [1104] this is a good opportunity as well for [1107] AI to suggest some new topics ideas that [1109] we can [1110] combine so why don't I just call [1114] this process [1116] transcript and then what I'm going to do [1118] here is I'm going to go into my gp4 [1121] module go to gp4 is 01 mini really [1126] fast I don't actually know which one's [1128] smarter maybe we'll try Owen mini for [1131] today then I'm going to do messages and [1133] the first thing I'm going to do is I'm [1134] going to add a system prompt that says [1135] you are a helpful intelligent writing [1138] assistant this is just how the model is [1140] going to identify so I'm saying hey your [1142] identity is a helpful intelligent [1144] writing assistant if you think about it [1145] logically this is sort of like the the [1148] the number one place to steer the model [1150] it's less important now but you know [1152] let's say you are um you know taking off [1155] at some I don't know this is like some [1156] big land mass here and there's some Port [1159] over here okay and you are in a [1163] ship I should be able to make this text [1165] smaller there you go [1169] and you know you are trying to get to [1172] some destination [1174] here and in between you guys a bunch of [1177] water you want to go over [1178] here if you think about it I'm just [1181] going to write D for [1184] short this is my [1187] destiny okay we're gonna we're gonna [1190] we're going to go here the angle of the [1194] direction that like the direction that I [1196] go at the very beginning is very [1197] important [1199] if I'm off even like one degree here I [1202] go in a completely different direction [1204] to if I'm here completely different [1207] direction than if I'm here completely [1210] different direction than if I'm here [1212] right this distance here might only be [1217] like one little degree but then the [1219] result is I end up let's say like 500 [1222] [ __ ] kilometers away from my [1226] goal so this basically the system prompt [1231] at the beginning of your prompt you have [1234] the highest likelihood of making a [1235] decision and steering the model in the [1238] direction that you want to go okay and [1240] this is um sort of my my idea behind you [1243] want your model to be exactly what you [1245] know you you you want to provide these [1247] instructions and you want the model to [1248] identify as as smart uh uh a model as [1252] humanly possible so I say you're a [1253] helpful intelligent rting assistant [1254] because that's what I want I want it to [1255] be helpful I want it to be intelligent [1256] I'm sure there are better ways to [1258] optimize this you probably can write [1260] some super crazy long system prompt but [1262] this works for me in like 90% of cases [1264] so it's what I'm rolling with um but [1266] that is just in a nutral explanation [1267] what the system prompt works I'm saying [1268] this because I've had a few comments and [1269] DMS and stuff being like hey you know [1271] what exactly does system prompt do the [1273] next is a user prompt so this is where [1274] we give it the instructions we should [1276] really just call this the instruction [1277] prompt instead of user but anyway um we [1282] are [1284] generating content based on YouTube [1286] video transcripts so I generally just [1288] give it some instructions uh some [1290] context of my task then I say your task [1292] is to take as input a full transcript of [1295] a YouTube video convert [1299] it and [1303] output variety of parameters let's [1308] say I'll say [1310] summary [1312] um several paragraph summary of the key [1316] findings of the transcript [1320] outline a detailed chapter [1325] heading chapter style [1332] outline of the transcript written as if [1334] you were outlining a [1337] book [1339] um [1342] suggestions [1346] three three added [1349] three twists you three twists [1353] or three uh let's do three pieces of [1356] added value three pieces of three ways [1362] we could modify the content to improve [1368] it discuss different [1371] ideas provide higher [1376] quality information Etc see and [1380] then social media [1383] posts hey Twitter post uh Twitter care [1387] length car length 280 I think I think [1390] it's going to be [1395] 280 a LinkedIn post [1399] medium um let's [1401] do 1,000 [1404] cars and a YouTube script [1409] WR let's just [1412] do 10,000 [1416] cars this looks reasonable I will say [1421] um that does not copy the [1426] original that includes similar content [1429] as the transcript but written [1432] differently let's just do that okay and [1435] then let me just see if there are rules [1437] we'll say write um I always do this [1439] because I don't like how AI tends to [1441] just write a bunch of [ __ ] and it [1443] goes Super flamboyantly and everything's [1445] extravagant and amazing and dive and [1447] delve I don't like that so I like to say [1450] right in a [1452] casual but Spartan tone of voice No [1456] Frills um output your response in Jason [1462] using this format and now we're going to [1464] create the Json format here so I'm going [1466] to go summary [1469] um [1474] outline and let's do markdown an ATX [1477] markdown format um [1481] suggestions and we're going to do an [1484] array of [1488] strings and then social media [1493] posts we'll go post and then I'm going [1496] to have an object where it is is [1501] Twitter um linked [1505] in and [1507] then YouTube [1511] script should be good let me just double [1513] check that this is actual good Jason the [1515] reason why I do this even though it [1516] doesn't [1517] matter uh is because I want the model to [1519] be as smart as possible if it starts [1520] seeing some issues in the way that I'm [1522] giving it instructions on the Json um [1525] then it'll probably be a lot less likely [1527] to do so [1529] okay great this looks pretty solid to me [1530] um now I'm going to go to the prompts [1533] engineering again then go user one more [1535] time and I'm just going to feed in the [1535] text right and I I just want to see what [1537] the output is um it's hard for you to [1539] obviously make uh suggestions or changes [1542] or anything like that if you don't know [1544] kind of like a core input last thing [1546] I'll do is I'll go to response format [1547] click Json object parse Json response [1549] very important otherwise you're not [1550] going to get the uh text as an output as [1552] adjacent and generally speaking just [1554] just some background on the prompt [1555] engineering side of things I just like [1557] to be as straight forward and no [1559] [ __ ] is humanly [1561] possible [1562] um looks like the system prompt is not [1565] supported with ow and mini so I'm [1566] actually just going to go to GPT 40 I'm [1568] not sure what this means I don't really [1569] have the word withth all to fix [1570] it going go back to GPT 40 and then [1574] we'll click [1576] okay um but yeah I like to just be as [1578] plain and as No Frills as humanly [1580] possible with this [1581] stuff uh and another rule that I always [1584] like to think of is just try and get [1585] something on the page as quickly as [1586] humanly possible because if you don't [1588] like if you make all of these [1589] assumptions in your head about whether [1590] it can up with the transcript and the [1591] summary and blah blah blah um you're [1592] usually going to end up being [1593] disappointed so I'd rather just like [1594] know what the what the actual result is [1597] okay so the Json format looks good [1598] summary outline suggestions post that's [1600] nice summary [1603] cool [1605] outline I'm going to need a much more [1607] detailed outline than this if I'm going [1609] to want to generate content with this [1610] later I'm going to want more detailed [1611] for sure [1616] suggestions I don't like these suggest [1618] suggestions what I want is I want [1619] suggestions on the content I don't want [1621] downloadable checklists or real life [1623] studies well actually I guess that's not [1626] that bad this is technically still [1627] content suggestion expand on the theory [1629] with specific example successful [1631] abols guess we could do that my idea is [1634] I'm going to feed in the outline and the [1636] suggestions and then I'm going to to [1638] another prompt and we're going to have [1639] it like create some better [1641] content okay uh I don't like the Twitter [1645] posts [1650] YouTube post is all right I guess sorry [1651] the um LinkedIn post is all [1661] right this is obviously a little Limited [1663] in terms of length [1669] but [1672] H yeah I don't I don't really know how [1674] much value there is in generating a [1675] YouTube script to be honest but I just [1677] wanted to show you guys that you gener [1678] multiple different types of content okay [1680] well let's tackle this one at a time [1682] first of all the summary I don't like [1683] that it's as in this video Blah Blah [1684] Blah Nick outlines blah blah blah um I [1687] would prefer it just to [1690] say I would prefer it to [1694] write well actually I think i' prefer it [1696] to write in the first person than the [1699] third person so I'm I've outlined a [1703] process for building effective [1704] no-brainer offers and sharing insights [1706] that help my agency reach this much [1708] money like if you're going to be you [1709] know doing this content yourself you [1710] don't need this level of summary then [1712] the outline I want it to be a lot more [1713] detailed like I I like this but I want [1715] the um like the subheadings the uh [1718] bullet points to be substantially more [1719] detailed than this the suggestions yeah [1722] on second thought these seem fine and [1723] then the posts here with the Twitter and [1726] the LinkedIn I don't really like the way [1727] that they're written so let's just go [1728] through these one at a [1729] time we're going to try providing some [1731] more [1736] instructions okay I'm going to say [1740] write in a firstperson [1746] POV or use a firstperson POV for [1750] everything you are the [1755] Creator [1756] [Music] [1757] um an ATX markdown [1761] format go into [1765] extreme levels of detail in your bullet [1770] points you should be able to recreate [1774] the you should be able to recreate the [1776] content from this uh from the [1780] outline most of the content using solely [1784] the outline let's try this suggestions [1786] three ways we could modify the content [1788] to improve [1791] it twists different [1795] ideas uh [1800] areas we could add more context Etc [1804] social media post a Twitter post a [1806] LinkedIn post post include Sim write [1809] these do not [1811] sell don't add call to actions in these [1816] posts cool this looks reasonable to me [1819] um what I'm also going to do is I'm [1820] going to compare the quality of GPT 4 to [1822] um to 01 as well I'd be very curious to [1825] see um whether 01 can do better because [1827] this is like multi-step prompt there's a [1828] lot going on here so if we can have it [1830] like output three or four um Chain of [1833] Thought steps in between I think it [1834] would do much better I'm going to change [1836] the temperature to 0.8 as well Max [1838] completion tokens I'm going to set to [1840] can we do [1844] 8,192 let's see let's try this one more [1846] time now I'm about to [1849] sneeze nope ah nope got to got to handle [1853] on [1853] it that is strength right there that is [1856] some willpower [1859] ah [1860] okay now we have [1866] outputed everything written in first [1873] person I think the outline should still [1875] have more detail I think like definition [1877] of high leverage and automation X Y and [1879] Z like basically we should say what it [1880] is but uh this is much much better than [1884] before and this is great this summary is [1886] awesome let's just just see what the [1888] suggestions look like Implement more [1889] real life case studies explain more [1890] about automation tools and how they can [1891] be leveraged effectively discuss common [1893] challenges face and creating Nob brainer [1894] offers and how to overcome them I'm [1896] going to want this to be a little bit [1897] more unique maybe even spicy I'm not [1899] sure maybe if I use the word spicy this [1901] will be better um H [1906] twist be unique be extremely unique and [1912] spicy and what was my other issue with [1915] this the outline [1919] don't just [1924] say for instance don't just say [1932] leverage I discuss leverage say I [1935] discuss leverage the [1938] concept of [1941] multiplying your output through [1944] intelligently [1951] um simple machines like automations can [1954] multiply your output [1956] through I've constructed intelligently [1960] cool all right all right we're going to [1962] go okay here I'm going to click run once [1964] and we are going to look at this and [1965] then I'm going to cross compare this now [1967] with um the output [1970] from um gpt1 as well and I'm going to [1974] basically just see which one I like more [1977] and whatever one I like more is just the [1978] one I'm going to move forward [1981] with cool [1983] summary no changes there [1987] outline cool o this is [1990] great [1993] nice yeah yeah okay so this has done [1995] basically exactly what I wanted right so [1997] every heading now has like explanations [1998] of basically what what they mean what [2001] look it even gives me like a little [2002] formula for the risk minimization that's [2004] great suggestions introduce a segment [2007] where i deconstruct a failed offer now [2008] this is great incorporate customer [2010] testimonials or case studies yeah fine [2011] add a live demonstration setting up a [2012] new Briner off from scratch look at this [2014] this is sweet okay awesome awesome this [2015] is [2017] great this is all right I mean the [2019] Twitter post is not perfect but whatever [2021] you can obviously spend as much time and [2022] energy as you want um flushing flushing [2025] all this stuff [2026] out cool so now that we have this [2028] transcript I'm just going to build out [2030] the rest of the kind of the middle part [2031] of the logic which is um we need to send [2032] this and put this somewhere right so uh [2035] I'm just going to go to Twitter X form [2038] and then [2042] um let's go create a [2046] post oh I'm going to have to create a [2048] connection here that's pretty annoying I [2051] don't remember how I did this before [2052] give me one second to think about this [2055] deeply okay depth of thought completed [2058] um why don't we go back [2059] here jump over to Twitter and what we [2064] need to do is we need an X developer [2066] account let's go over over [2069] here set this puppy up [2075] cool then we need to create a custom [2080] application [2081] INX developer portal sound for a free [2084] count describe your make use cases [2085] select checkboxes [2088] submit um I feel like I've already done [2090] that right projects main I think I did [2092] this forever [2093] ago so why don't I actually just like [2096] rebuild all of this stuff for you guys [2098] how do I delete [2100] this am I [2102] blind these are my keys and tokens right [2105] but I don't actually want this I just [2106] want to delete it so you guys could see [2109] how to put this [2111] together [2117] H fascinating I don't actually remember [2121] maybe I need to edit it ah there we go [2123] delete app [2124] cool example app Aug 12 [2129] 104 okay so now we're going to go here [2131] I'm going to click add app I'm going to [2133] say um I don't know tweet [2137] poster no [2141] uh let's just make this really [2146] unique okay now I have my API key API [2148] key secret bear token so I just wanted [2150] to double check what do I actually need [2151] to make this happen client ID and client [2154] secret so I don't think this is my [2157] client ID and client secret but I'm just [2159] going to copy this and why don't I just [2162] put this here in a set multiple [2165] variables module let's just go API [2167] key and then I'll go API key [2172] secret and then also go Bearer [2175] token just in case I need it later I [2177] just want to have it [2179] cached okay and then app [2183] settings then user authentication so [2185] setup [2187] I want read and write and direct [2192] message I want uh automated apps and [2196] Bots I [2197] think app info callback URL H this is [2201] interesting um I think I need like the [2204] integrat Callback URL so let me just go [2206] to these instructions here so I'm just [2208] going to copy the Callback URL paste [2211] this [2213] here and this so I need two actually [2219] and then I'm going to add this paste [2221] this in then I'll go back here and then [2223] for website URL copy this paste this [2227] in the rest of the stuff looks pretty [2229] good so I'm going to click yes okay now [2231] I have the clan Ting Clan okay great so [2232] now I'm going to go back to this module [2235] create a connection paste in the client [2238] ID paste in the client [2240] secret click save probably going to have [2242] to sign into Twitter now I imagine yep [2245] that's fine [2248] don't mind if I [2252] do do I remember what my Twitter [2254] password is hold on a [2257] sec Twitter Nick Sur okay yeah that's [2260] definitely [2262] that uh this going to be a tough one [2269] guys ah sweet I did actually in fact [2273] remember B aut full and now we have the [2276] connection on to Twitter lovely I feel [2280] like this is such a common question [2281] actually I should probably like make a [2282] video just on this anyway then we paste [2284] the text uh text content of [2288] Twitter there's some advanced settings [2290] here I wonder what these are media ID so [2292] you can actually upload media and then [2293] link it Place ID direct message link oh [2295] that's cool a lot of post exclusively [2297] for super followers only quot post all [2298] right we don't need any of that stuff so [2300] uh then I'm going to say create X [2304] poost I'm we go to LinkedIn create a [2307] user text post here and yeah we do need [2310] a router if we're going to do this I'm [2312] already uh connected but the [2314] authentication is a lot easier you just [2316] click add and then you connect to your [2317] account the post in this case will be [2322] LinkedIn uh and then you know what I [2324] also [2325] want to upload my script somewhere so [2328] I'm going to go Google Docs I'll go [2330] create a [2332] document and I'm going to want to upload [2334] this YouTube script let's call it [2338] YouTube [2340] script what I [2343] need so I want how to create no-brainer [2346] offer which is going to be the first [2348] element the content of this is just [2350] going to be this [2353] here um did I write this as text yes I [2356] did okay great and then the document [2358] location I'm just going to do like the [2360] index [2361] here that looks pretty solid so now I [2363] have the X post being created then I [2365] have the LinkedIn post being created [2366] then I have the [2367] Google doc being created all good stuff [2370] um this Google doc is going to contain [2372] the YouTube script right and I'm doing [2373] this just to show you guys that you can [2374] you can output basically whatever the [2376] hell you want here if you wanted to make [2378] this higher quality content just for [2379] LinkedIn or just for uh Twitter or [2380] something then you know spend spend a [2381] little bit of additional time uh doing [2383] so and then why don't we why don't I [2387] also show you guys you know if I were to [2388] build out the system why don't why don't [2389] I show you how to do the um suggestions [2391] improving the quality of the outline as [2394] well yeah let's do that so actually just [2397] before I do this why don't I go over [2400] here and add an additional [2402] prompt and I will say [2406] upgrade transcript maybe upgrade [2410] outline upgrade content upgrade [2414] outline um and now that we have GPT 40 [2418] here your helpful intelligent rting [2419] assistant we're generating high quality [2421] content based on YouTube video [2422] transcripts your task is take us input a [2426] an outline [2428] for a YouTube [2430] video and then implement the provided [2433] suggestions to make it significantly [2436] more [2439] detailed okay [2440] great rules WR a casual but bur tone of [2443] voice no for use a first- person POV for [2445] everything you are the [2447] Creator I don't think we need this [2449] anymore output your response and [2452] Jason you'll be provided a list of three [2456] suggestions [2457] and the outline modify the [2462] outline leaving as much of it the same [2465] as you can no modify the outline and [2469] add detail output your response in Jason [2472] using this format we'll [2475] go modified [2479] outline keep the outline in markdown etx [2482] format modified outline will be here and [2485] then uh yeah I should be good I'm going [2488] to go and now feed in the [2495] suggestions and then I just have to [2496] reproduce this unfortunately so I'm [2499] going to feed [2501] in actually let's do the let's do the [2503] outline [2505] first then after that I'm going to go [2508] suggestions it's an array with three [2511] elements the first element is this one [2515] the second element is this two and the [2518] third element is [2520] this [2524] three and then we're going to keep the [2526] output as Json pars Jason response Max [2528] tokens fine whatever um all right sweet [2531] okay great and yeah I'm realizing I'm [2532] doing this sort of backwards because now [2533] I'm upgrading the outline but I just [2535] wanted to show you guys what this looks [2536] like in practice first we have to [2537] process the transcript get the [2538] suggestions then we have to upgrade the [2539] outline right this is sort of like a [2542] more Dynamic kind of uh loop we are [2544] getting it to create suggestions on the [2546] content then feeding those suggestions [2547] back in alongside the content you can do [2548] this arbitrarily as many times as you [2550] want just to like get new twists on the [2561] content cool wow this is much more [2564] detailed [2567] now nice oh this is [2570] great sweet so now we also have like a [2574] core piece of content that we could like [2576] yeah leading into upsells example offers [2578] we we have a core piece of content now [2579] that we can actually like modify and and [2580] do other stuff with like if you think [2581] about it what we could do is after we [2582] process the transcript and then upgrade [2584] theine we could actually use another gpg [2585] call and use that to create new content [2588] for x and um LinkedIn and Google Docs as [2592] well I guess in this case I was just I [2594] was just trying to show you guys how to [2596] like generate said text but um if we're [2600] going to be going all this way then we [2601] should totally upgrade all of [2603] us so actually what I should do here is [2606] I should now generate content and then [2611] what I'm actually going to do is this [2612] first step here I'm just going to just [2613] going to make it a lot simpler I'm not [2614] going to feed in the um social media [2617] posts I'm going to actually generate the [2618] social media [2620] posts based off of this so I'm get rid [2623] of that we're just going to get rid of [2624] the post object completely it's going to [2627] make it a lot simpler um and I think the [2629] summary is still useful so I'm going to [2630] keep it we might need it at some point [2631] in the future and I don't know cost very [2634] minimally [2635] cool then upgrade the outline then we're [2637] going to [2639] generate [2640] social media posts [2645] beautiful and then I'm now going to feed [2647] this instruction in we are generating [2650] high quality content based [2652] on content for social media platforms [2656] based on a provided [2660] outline I will say your task is take as [2662] input an [2664] outline and then I actually let's just [2667] paste this [2668] in and then produce social media posts [2672] for Twitter LinkedIn uh why don't we [2675] just do more Twitter Facebook LinkedIn [2680] YouTube uh what else do we got really [2682] what are the other major social media [2683] platforms Instagram I guess Twitter [2685] Instagram Facebook [2689] LinkedIn and Linkedin as well as a [2692] YouTube [2694] script then for rules I'll go [2698] and I'm actually just have chat gbt help [2700] me with [2703] this I just held option press space and [2706] I'm using chat GPT which is a desktop [2708] application on Mac [2710] OS um I'm adding uh specs and guidelines [2715] for social media [2719] generation post generation I know [2722] Twitter LinkedIn and YouTube modify [2728] the below post to include [2733] Facebook Facebook and Instagram as [2737] well I'm not doing this because I [2738] necessarily would have um like in [2742] practice I just wanted to show you guys [2743] how I tend to use large language models [2745] in AI in my own work so I basically I [2749] mean you know I'm writing a prompt for [2751] an AI using an AI now [2754] right okay uh no refs cool I'll put your [2759] response in Jason and we'll go let me [2761] see [2762] here [2765] Twitter [2768] Instagram [2770] LinkedIn [2773] Facebook YouTube oh I shouldn't be [2777] capitalizing these either you generally [2779] don't want to capitalize the first [2780] character of a variable YouTube [2784] script I think this should be good [2786] anything I'm missing LinkedIn YouTube [2787] Facebook Instagram Twitter no I think [2789] that's [2790] fine medium visually [2793] engaging designed a pair no we're [2798] okay [2803] okay YouTube script contain uh including [2807] a YouTube script that breaks down the [2810] outline in detail and then I'll say [2814] write in the first person POV [2818] you are the Creator [2820] okay awesome so now we're actually going [2822] to generate these social media posts [2824] we're going to feed those in and we're [2825] chaining three prompts together here [2826] right so the first AI model does [2828] something to the transcript the second [2829] one grabs the outline of the thing that [2831] we just did uses it to upgrade the [2833] outline and then the third um takes the [2835] outline and use it to generate a bunch [2836] of high quality social media posts [2838] presumably high quality social media [2839] posts that are now now pre-drafted for [2841] us to go in there and do stuff [2843] with um yeah so now I need to basically [2846] fles like the database logic and stuff [2848] and I'm I'm not actually going to leave [2849] the posting part uh for the very end [2851] just to show you guys you could [2852] automatically post this if you wanted to [2853] um but I'm probably not going to I'm [2855] just going to create a big database to [2856] store all the stuff and then whoever [2859] wants to can do whatever they want with [2861] it okay and looks like the result is [2865] out [2867] cool this is pretty I don't know how I [2870] feel about the [2871] star LinkedIn Facebook cool and then [2875] Long YouTube post [2879] okay ideally we'd have way way longer of [2881] a YouTube script so [2884] H um you know what I could do if I [2887] really wanted like a super long YouTube [2889] script I could go through the outline [2891] chapter by [2893] chapter then at the very end I [2897] could feed in I think I should do that I [2901] think I should split this based off of [2902] headings and then I should feed in the [2904] whole thing and just tell to like remove [2907] any [2909] repetition yeah that's probably what I'm [2911] going to do okay let's just make this [2912] way better I mean because right now the [2913] script is kind of trash right so I'm [2915] going to take this script what I'm going [2917] to do is I'm going to take this outline [2918] sorry and then I'm going to [2921] um separate it based off the presence of [2925] these so these two number signs I'm [2928] going to have it write like a very [2929] detailed section for each so one for [2931] introduction one for high leverage key [2932] concept one for understanding the [2933] automation hisory one for crafting no [2934] brainer offer leveraging templates [2936] examples [2938] blah um I'm going to feed it in the [2940] summary of the post as well just so it [2942] kind of gets the [2944] idea and then after it's done with that [2948] I'm going to pass the entire thing [2950] through GPT for and just say hey you [2952] know if there's any repetition or [2953] anything that sounds weird here because [2954] you're repeating the same thing from one [2956] section to the next then let me [2958] know but I don't think there will be [2962] let's do that instead of this the [2963] YouTube script part is just not not high [2965] quality at all so I'm just going to add [2967] one more GPT for prompt and [2972] um yeah we're not going to do the [2973] YouTube [2979] script uh let's remove this [2985] too let's [2987] generate generate YouTube [2990] script what we are going to do is we're [2993] going to have [2995] to um [2998] um going to have to go to the iterator [3001] sorry using the wrong one [3003] here what we're going to feed in is [3005] we're going to [3007] split um this outline modified outline [3011] based off the presence of uh this and [3014] then a space I [3015] believe this is going to turn this into [3017] a big array we're building an no-brainer [3019] offer and then we'll have an next [3020] section the next section the next [3022] section um and then I'm actually just [3024] going to [3027] cache [3029] this I'm going to say [3032] outline I'm actually just going to take [3034] as [3037] output the input of this section here [3042] because I just want to run a bunch of [3043] tests on this very quickly I don't want [3044] to have to use God knows how [3048] many [3050] um operations in order to do so so now [3053] I'm just going to unlink this drag this [3054] puppy all the way over here [3057] and then we're going [3059] to get your ass over there and then uh [3064] I'm going to feed in the outline test [3065] variable instead let's see what happens [3068] that's okay so now we are iterating [3071] through this is the first bundle second [3074] bundle third bundle fourth bundle fifth [3078] bundle sixth 7th 8th 9th cool so now we [3082] have all of the text looks like we're [3084] just going to ignore that first one [3088] so I'm going to feed it into the generat [3091] a YouTube script Modo [3092] now like line by [3095] line and then what I'm going to do is [3097] I'm going to set thing where it says [3099] bundle order position not equal to one I [3102] don't want that first bundle to get in I [3103] just want all the other [3108] ones so now we're going to generate [3110] YouTube script um procedurally like [3113] chapter by [3115] chapter we're generating high quality [3117] content for social media platforms uh [3119] we're generating high quality YouTube [3124] script script for [3127] YouTube upcoming YouTube [3130] video [3132] titled [3135] um what is the upcoming YouTube video [3137] titled [ __ ] I guess I don't have access [3139] to the rest of [3141] this let's just stick that here so I [3143] could finish this prompt [3148] hm I need to click okay here to refresh [3151] the variables this ever happens to you [3153] you can just click okay and uh give it a [3156] refresh what is it going to be titled [3161] um let's go as early as [3164] possible there you [3166] go I'm going to [3171] say we already have [3177] we are doing this section by section [3181] your current section [3184] is and then I'm going to feed in the [3188] section which is this [3193] value a summary of the entire video so [3196] you have [3197] context is and then I'm going to feed in [3200] the summary [3203] variable here [3209] your task is to take as [3212] input this [3214] section your task is to is to produce an [3219] engaging script [3223] section piece of script for this [3228] section let's then [3231] do [3233] um output in markdown ATX format [3243] using [3244] H2S and [3249] h3s your first [3251] um heading should be and then we'll go [3256] the title of the [3258] section do not add [3261] ctas uh [3267] section should be extremely indepth and [3270] written in a casual but Spartan tone of [3274] voice no [3278] FRS right in the first person and then [3281] let's just remove this and go output [3282] your response in [3284] Jason using this format we'll go [3287] generated [3288] section cool um and then after we're [3291] going to feed it [3292] through so we're going to provide [3295] actually we don't actually need to [3296] provide [3296] anything yeah cuz we already provided [3298] the the text up here so that looks [3301] pretty good um we do need to C you know [3303] we need to cash the summary [3304] unfortunately because um we're getting [3307] the summary from earlier [3310] so I'm just going to save this go back [3313] here and just see like an earlier [3316] run and it doesn't look like we have a [3318] single run here really come on man oh [3321] yeah we do this just lied to me we'll go [3324] back here to um one actual execute ution [3326] I'm just going to grab the summary from [3327] this and just paste it in manually [3330] summary [3331] here we'll go back to the diagram and [3334] then I'll just use this as a test [3338] sample uh because if I didn't then I [3342] just have to jump in there and change it [3343] all the time sorry did I really not save [3347] my work you're [3349] serious come on man seriously I need to [3353] re I need to redo all this no [3362] uh can I process a previous [3365] version 1015 I think I think that's the [3368] oh no no no no no that sucks 10 10 oh [3373] that's [3376] terrible oh I hope to God this has some [3379] incling of my [3382] prompt no no it does not okay well [3384] that's annoying I'm gonna have to [3385] rewrite this I'm not going to include [3387] that part in the video so I'm going to [3388] cut it out just for time purposes [3389] make.com guys not even [3391] once let's go to uh [ __ ] what was the [3395] system called [3398] YouTube scraping system [3401] okay history let's go to this fabled run [3405] the one that screwed everything up um [3407] process transcript and what I'm sucking [3410] out of that is the [3412] summary cool I'm going to go back [3415] here close this and voila I still have [3419] everything in place thank you thank [3424] you let's just do some standardized [3426] formatting here [3429] too okay this looks good um we are going [3434] to grab the outline we're going to [3435] iterate through it we're going to [3436] generate a bunch of these and then once [3438] I'm done generating a bunch of these I'm [3439] going to [3441] uh contate them all back together with [3443] another set let's do set multiple [3445] variables I don't [3447] why I don't there's no need uh no reason [3449] to just use the set variable module [3451] really you don't waste any Ops and it [3453] just allows you to recreate stuff [3454] anytime you want then I'll [3457] go concatenated um script and then I'm [3461] just going to join oh sorry actually I [3464] need to use an aggregator [3465] now we'll go aggregator again I'm just [3468] going to get the multiple bundles and [3469] I'm just going to stick them into one so [3471] the source is going to be the iterator [3472] this is the thing that makes the [3473] multiple bundles and then it just needs [3475] to be equivalent [3476] I'm just going to select all the [3478] fields and then here what I'm going to [3480] do is I'm going to [3482] jooin the output and unfortunately we [3485] don't have access to it because we um [3487] need to fix this first to [3490] join [3493] um oh sorry we need to [3497] map this array we need to get [3501] result but it's not enough for it to be [3502] the result we need array. result. uh [3508] we need something called result [3510] generated script I think let's just see [3513] how did I word this in order to map you [3516] need to um use the actual key name not [3518] just what it thinks the key name [3520] is just delad this because we definitely [3523] don't need that uh result. generated [3526] section okay result. generated section [3530] then we need to join that and I'm just [3532] going to join it with a new line [3536] okay okay and let's go back here ensure [3539] everything is fine I think so click [3542] okay then let's click [3545] run oh what's going on here we don't [3548] have the schedule in the right place [3549] there you [3552] go uh hold on I'm still referencing [3555] something from a previous module which [3556] is a [3558] problem so I'm just going to make sure [3562] that I don't actually need this [3567] where am I referencing this oh [3571] right there we [3574] go [3577] okay we iterated [3579] through cool cool all I'm not generating [3582] the text generating the script I should [3584] say much higher quality script than [3585] before like you know I figure guys if [3587] you're going to do this you might as [3588] well do it [3589] right um the the value of doing it with [3592] this approach is GPT will use usually [3596] have like a soft character or token [3598] limit output so if you try and get it to [3599] Output really long content you're like I [3601] want it to be really long it might only [3602] generate you 500 Words and you're like I [3604] want it to be longer and it'll generate [3605] you like 100 extra ones I want it to be [3607] really long it'll only get you like 50 [3609] so this way we're doing so we we're [3611] basically just generating section by [3612] section we're going pretty detailed and [3613] then I'm just concatenating all that [3614] stuff together at the end um after all [3617] of this is said and done we're just [3618] going to have like a big um a big chunk [3620] of text essentially and then with that [3622] big chunk of text we'll uh yeah we'll [3625] we'll like basically a full script so if [3627] somebody wanted to teleprompter this [3629] they [3630] could um what I'm going to do is I'm [3632] going to take the script the X poost the [3636] LinkedIn post the Facebook post I'm just [3637] going to dump it into a uh a spreadsheet [3639] so I'm going to go here to the Google [3640] Sheets and then I'm just going to make [3642] my own and we're just going to call this [3645] content [3647] database let's say YouTube scraped [3649] content [3651] database you think about it logically [3653] we're going to need uh like a Twitter [3655] post going to need like a Facebook post [3657] we're going to need like a [3658] LinkedIn post we're going to need like a [3660] YouTube script I think we should just [3663] store all of these as their own Google [3665] docs to be honest rather than just link [3667] the plane text here because there might [3669] be some formatting or something or or I [3671] don't know sharability reasons it's [3672] probably what I'll do uh what else did [3674] we have we have Facebook oh Instagram [3677] right let's do this Instagram Twitter [3680] Facebook LinkedIn okay cool and while I [3682] was doing that um you know I did that [3684] cuz I wanted to make sure this could [3689] work now we have a very long script [3692] right much much longer so why don't I [3694] just take the whole length of this [3695] really [3698] quickly and then I'm just going to feed [3700] this into word counter and just see what [3702] the length of this [3705] is 37,000 characters so what I what I'm [3708] now going to do I'm going to do one [3709] final GPT for call I know it's quite a [3711] lot but I'm going to do one final one [3712] and I'm just going to say remove any [3714] inconsistencies with the script [3716] like hey you know are there areas where [3717] I'm repeating myself because sometimes [3719] the model the model has access to very [3721] isolated information here right it can [3723] only see the section it should write [3724] plus a summary so it might repeat itself [3727] a couple of times because it doesn't [3728] really know the context of the other [3729] ones so I'm just going to say smooth out [3733] script I'm just going to call it [3736] that and then here I'm going to write um [3738] another [3739] prompt The Prompt your helpful [3741] intelligent writing assistant we're [3741] gener a high quality script for an [3743] upcoming YouTube title video title blank [3747] um I'll [3752] say YouTube video I will say however our [3757] script was generated section by [3761] section and so each section lacks [3764] context on the sections next uh lacks [3769] context lacks the context of The Wider [3772] script [3776] your task is to take as input the [3782] script script and smooth out any [3786] inconsistencies [3788] repetitions or [3791] unnecessary [3794] sections you then you will then output [3797] the response in markdown ATX [3800] format cool now [3808] um leave all this out I'll put your [3811] response in [3813] Jason let's say formatted script and [3817] then I'm going to feed in my input my [3819] input is going to be this giant ass [3821] concatenated script script and say um [3827] poorly or maybe disjointed script when [3831] don't we do that might be a little bit [3834] better and then we'll [3837] say smooth script uh clean [3841] script I don't want to like um give it a [3844] word that implies that it should chop it [3846] down a [3848] lot final [3850] script let's go rough draft script [3854] cool uh oh [ __ ] maximum completion [3856] tokens [ __ ] I just realized I don't know [3857] if we'll actually be able to do this um [3862] H GPT 40 [3866] output length Max [ __ ] 4 8,000 o output [3869] token limit [3871] 496 16 384 oh man that's not probably [3875] not going to [3877] work well wait wait a second wait a [3879] second what was the word [3880] counter 37,000 so [3884] 37,6 191 divided by 4 9,197 okay [3888] actually you know what this is probably [3889] going to work on things up to about an [3890] hour [3892] long uh yeah never mind I take that back [3895] thank goodness that would have [3897] sucked okay uh let's actually run this [3901] now and I don't want to have to do all [3903] this again so what I'm actually going to [3904] do for my test is I'm just going to copy [3906] this whole thing [3907] in yeah let's not actually run it on [3909] real [3910] data let's run it on cache data that way [3913] I just don't have to wait and consume 8 [3915] trillion tokens right okay rough draft [3918] script [3919] boom okay let's [3923] go here [3926] drag this [3927] in and see the final product and then [3930] I'm just going to read it really quickly [3931] ensure that it's like an okay script [3933] it's not total [ __ ] hopefully it's not [3934] total [3936] trash fact that it's being output as [3938] Jason I think it'll be all [3939] right uh [3941] whoa no no that is not good this is very [3945] very very [3949] short H that's not good at all we don't [3953] want it to make any changes like this [3956] we wanted to just [3964] um rules keep the [3968] script the [3969] same [3972] only change [3975] something if it's unnecessary or [3980] repeated the [3983] length each section should look very [3988] similar your output should look very [3990] similar to your input with minor [3995] changes very minor [4001] changes um I'm going to feed it the [4004] input in not as rough draft script go [4007] input [4008] script and we'll just go output script [4010] maybe this will help [4015] oh you know what actually sorry it's [4017] probably my token limit I set 8,192 [4020] token limit [4023] right um did [4025] I a Max completion tokens here we go [4028] maximum number of tokens to use low [4030] values may cause it to be truncated High [4031] values may use a lot of open AI credit [4032] or reasoning models such as the own [4033] models Val s reasoning up tokens uh [4036] 16384 is that I think [4042] so maybe explicitly saying 16384 will [4045] help [4048] like if you think about it my my input [4050] here on word counter was 5,991 91 words [4053] so I want something that's like probably [4055] 4,000 words or higher I don't want [4057] anything shorter than that otherwise [4059] probably illustrates that there was a [4061] major problem here if I put 4,000 words [4064] um 4,000 words would be approximately [4066] equivalent to like 7,000 tokens or [4069] something that's [4071] fine and this will I you know as I [4073] mentioned work on anything up to an hour [4077] the fact that it's taking a really long [4078] time to generate is a really positive [4079] signal for us it's telling us that like [4081] odds are it's generating a bunch of [4082] tokens right now which is [4086] great crossing my [4088] fingers I like what I'm hearing or [4093] not it's funny because I you know I [4095] wanted this video to start off as hey [4098] you can very easily scrape appify and [4099] then I put a bunch of sections and now [4101] halfway through this video I'm like wow [4103] we could totally build like the most [4104] epic content generator with very similar [4106] flow and I'm thinking hm you know I [4107] should probably update my content [4109] generator to be a little bit simpler and [4111] to employ strategies like this um as [4113] opposed to what I was doing before which [4114] I was doing some very interesting like [4117] outline based prompting with arrows and [4122] stuff okay so now we're at that point [4124] now where it's getting so long that I'm [4126] starting to think that uh something [4127] weird is happening I might be running [4129] into some upper token limit or I don't [4131] know might be rate limited or maybe it's [4134] broken who knows [4136] but that's taken a little too [4140] long definitely not a fan of how long [4142] this puppy's [4145] taken okay result output [4150] script much better much better okay I'm [4153] just going to copy this I'll go to my [4155] word counter the input was 5,991 words [4158] okay the output was 5,989 words wow we [4163] actually added some interesting [4166] I'm going to be very clear about what [4168] the changes were I'm going to go to diff [4169] checker.com paste in the changed text [4174] here I'm going to paste in my original [4177] text [4180] here and I'm going to find the [4186] differences so it's removed a bunch of [4189] the same introduction sections which is [4192] good why don't I just look at the [4194] removals removals or where that so [4198] removals this section [4203] here [4206] H what is the difference here one lesson [4209] is it over promising under delivering [4211] I'm not seeing any any changes here at [4215] all oh or or sorry is it saying that [4218] they removed this in the yeah sorry I [4220] think they're saying they removed this [4221] in the output or something or maybe this [4224] did not have this this had this and this [4232] didn't are they just saying that they've [4234] added [4236] space [4239] H [4244] strange yeah I'm [4246] seeing seeing very little change here [4249] yeah so this is this is the stuff that I [4250] don't want welcome to this video [4253] right so that's not good we don't want [4256] this um doesn't look like my Approach [4259] necessarily is worked [4265] unfortunately how can we fix this [4268] thinking out loud [4274] here we [4279] could we could try a different model so [4282] while I'm doing all of this why don't I [4283] try a different model let's try one of [4285] those o1 models and see if we can [4289] um you know just leverage smarter or [4292] more intelligence basically I think I [4293] want this one the [4297] preview and I'm going to [4301] run sorry there's no system prompt in [4303] the o1 I forgot about that so I'm going [4305] to go back here just really quickly [4306] remove the system [4309] prompt click run once [4312] again temperature does not support 0.8 [4315] okay all right all right all right we [4315] got to go change a couple of other [4317] settings here cuz this model only has [4320] a response format type Json object is [4323] not supported with this model okay okay [4327] okay we'll go response format [4330] text let's just go empty [4333] actually [4335] uh what else what [4338] else let's just remove this Jason [4343] part okay okay we got the [4347] result result is still pretty [4351] long but it does look like we were [4353] truncated we were cut [4356] off why were we truncated or cut [4359] off I'm going to [4362] go um can we go [4365] back I'm going to feed in the [4368] output then I'll also feed in the [4373] input oh I fed it in his Jason too which [4376] might have screwed things up a little [4381] bit okay and then let's find the [4383] differences oh now this has a ton of [4389] differences oh this is great [4392] wow oh I get it it added a whole new [4394] section at the [4396] beginning wow this is way more [4401] intelligent wow [4407] oh man it's even using the term [4412] leverage has some minor changes [4416] here yeah yeah yeah [4418] yeah wow wow wow this is great it's like [4421] readjusted and mooved things [4424] around and it's removing a bunch of [4427] restatements of the same [4430] thing just completely removing things [4433] that we've like duplicated which is what [4434] I wanted [4441] cool okay well um listen this is [4443] fantastic the only issue is obviously [4445] this ends a little faster [4448] right well actually I guess it just like [4450] removed it [4451] completely we are we are really close to [4453] the ending I don't know why it did [4457] that is this a token output issue it's [4460] paste in [4462] the 5,991 sorry that's the intro let's [4466] um let's [4468] copy the what am I copying here am I [4471] copying both of these things the up [4473] put's 5,8 words 3,17 oh this is actually [4477] really close to the character limit [4478] 3,176 9id by 4 it's about 8,192 so you [4482] know what I'm thinking it's probably [4483] just caps out at 8,192 damn this is good [4486] though this is what I want yeah this is [4488] like an actual script that I'm thinking [4489] I could probably use on my own channel [4491] like that's how that's how high quality [4493] it is so like I don't use Scripts or [4495] whatever obviously cuz I've just been [4496] yapping on and mumbling but um you could [4499] totally do something like [4501] this well I guess what we need to do in [4504] order to make this work then is we just [4505] need to make sure the output script is [4507] almost always less than uh 8,192 tokens [4511] to be [4511] honest so let me check 01 preview output [4516] token [4522] length no weird [4526] 120,000 tokens for both ow one preview [4528] own mini [4530] 32,768 output tokens and 65,000 for ow [4533] and mini I bet you if I used ow and mini [4535] it would be stupider though right I mean [4537] it has to be [4539] stupider I'd imagine it's [4542] stupider man how the hell are we going [4544] to solve that that's beautiful that's [4545] exactly what I [4547] wanted [4552] uh could I [4555] the output length a [4558] double maybe it's just because I set the [4560] output length wrong maybe we'll do [4566] that yeah let's just try this one more [4568] time um while that's generating and [4569] taking sweet ass time let's just finish [4571] this database [4572] feature okay so in order to do this I'm [4575] just going to go back um because uh make [4579] does not allow you to click into these [4581] other modules while we're running um an [4584] execution I'm just going to go back to a [4585] previous execution I'm just going to [4587] pull all the data of that previous [4589] execution out the idea being um I I need [4592] to get a bunch of headers of the data [4593] that I [4594] want so I'm going to go to [4598] diagram and then I'm going to go way [4601] back probably like [4604] here to see this get data set items [4607] appify [4608] module and it looks like we are [4611] outputting this information here [4616] video description video keyword so I'm [4618] just going to want to copy [4619] this go here and say generate a list [4624] generate nope generate a list of CSV [4627] headings based on the key names here [4630] copy and pasting into sheets paste this [4633] in it's now going to generate me a [4637] list when this is done I'll be able to [4639] copy this over to [4643] here why don't we do [4647] this uh hold on actually let's just take [4650] this and paste this down here let's go [4652] over here and then go um data split text [4657] to columns then I'll go here and then [4660] paste this in then I'll make these the [4663] headers of my column of my thing we have [4665] Instagram post Twitter post Facebook [4666] post LinkedIn post YouTube script [4668] YouTube script is the big boy that's [4669] what I'm like you know obviously it's [4670] the thing I care about the most because [4673] uh I've had a lot of fun putting this [4675] together so far so I'm going to go [4677] enter and [4679] then just sort it like this then [4682] basically what I need to do is I need to [4684] I need to create four Google Docs one [4685] with the Instagram Twitter Facebook [4686] LinkedIn YouTube script and then I just [4689] need to add the Google Doc links right [4690] here which is going to be [4691] straightforward I don't need the text [4693] column now that I'm thinking about it I [4694] don't need the duration [4696] column I don't need the start column [4698] either author yeah video keywords video [4701] description video length video title [4702] video URL video ID awesome so everything [4704] else looks fine [4705] cool and while I was doing that this [4707] just finished [4709] operating and it finished with the whole [4711] script oh [4713] incredible yeah yeah yeah it made it it [4715] made it oh nice so you know must have [4718] been an issue with the output length [4720] maybe because it goes multiple times it [4721] calculates it differently I don't know [4722] but this is this is great this is [4724] exactly what I wanted that's so cool oh [4727] man it's moments like this that like I [4728] get genuinely impressed again with these [4730] models it's been way too [4732] long okay uh H I'm going to [4737] now let's see here copy and paste this [4741] Behemoth and I'm going to add a sleep [4743] module over [4746] here because I know this is going to [4749] consume a ton of my [4750] tokens so we're going to sleep for let's [4753] say 5 seconds after we generate each [4755] YouTube script [4757] section even on the last one it'll sleep [4759] for 5 seconds then it'll feed it into [4760] open AI beautiful and then once we're [4763] done with this um we're just going to [4765] create Google Docs [4766] basically I could create [4772] four I don't think I'm going to do that [4774] I'm G to use a router like I will create [4777] for but I'm just going to split [4780] it so we're going to call this um [4783] Instagram [4786] post actually let's feed in the title [4788] instead title's probably best if you in [4791] Title [4792] First Instagram [4795] the content of this [4797] output going to be the [4800] Instagram and then uh I guess we should [4803] make a Google drive folder first [4807] actually so after this is done let's [4810] create a [4812] folder this folder is going to be [4815] generated [4818] here I'm just going [4821] to generate a Google drive right now [4825] called YouTube content [4829] scraper I'm going to feed in this as the [4833] location of the [4835] folder we're going to call this the [4837] title of the [4840] video and then we are going to share [4842] this folder the role will be reader um [4847] yeah screw it let's just share uh no we [4849] want a we want a [4851] writer [4853] anyone and then I'm going to now [4857] generate a Google doc the Google Doc [4859] will be specifically inside of this [4861] location it's a new Doc location will be [4863] here and then because I already have the [4864] title in the Google drive folder I don't [4866] need this we'll just say [4868] Instagram [4872] okay and then I'm going to do the same [4874] thing for [4875] Twitter and then um LinkedIn and then [4878] Facebook and then also my YouTube script [4881] so 1 2 3 4 I'm just going to Auto line [4884] these make them prettier and then I'm [4886] just going to go [4890] Twitter [4892] Facebook oops no need for me to clone [4895] that my [4897] bad then uh LinkedIn and then YouTube [4901] script that's G to be the big [4904] boy awesome um now that we have all that [4907] all we need to do is just go in here and [4908] then change the variables so this one [4911] was Instagram I'm gonna go Twitter it's [4913] going to be Twitter [4915] this one is going to be uh [4920] Facebook this one is going to be linked [4926] in this one's going to be oh you know [4929] what we can't actually do that with the [4930] YouTube because right before we [4932] do we have to um convert this into [4935] markdown so I'm going to go sorry we [4938] have to convert this from markdown into [4939] HTML so HTML to markdown there we [4943] go sorry I mark down to HTML is what I [4945] wanted markdown to [4947] HTML can delete [4950] this then Mark down HTML I'm going to [4952] feed in the markdown of my mega post [4955] here [4957] beautiful I'm going get the HTML out of [4959] that and then this is what I'm going to [4960] feed in as the [4966] text and I'm realizing that I [4968] didn't change these [4973] titles and this was Twitter okay [4978] now that most of this is [4981] done we [4983] should have everything we need in order [4986] to actually run this on live real [4990] content before this I'm just going to [4993] feed in one more sleep [4995] module in between each of these for five [4998] seconds because just given the sheer [5000] level of token usage I have a [5002] feeling that I'm going to be running [5004] into some upper limits [5008] here um and then I need to run through [5011] and just change some of these variables [5013] so where it says generate YouTube script [5015] if you guys remember I had I was using [5017] the wrong variable um because I was just [5019] like using the same title so I'm going [5021] to go back here to my title then I'm [5024] going [5025] to feed this [5027] in we are doing this section by section [5030] our current section is value summary of [5032] the video is here so I'm going to delete [5033] all of this [5035] and then put in the actual summary of [5037] the video which was right [5041] here um that looks good and then smooth [5045] out script [5047] here I just fed in the whole script [5051] right so we can't actually do that we [5053] actually have to go all the way [5062] down then I'm just going to feed in the [5064] whole input [5065] script where did I get the input script [5071] um I believe it was right here right [5077] outline test [5078] variable or concatenated script yes [5081] there we go now this will be on live [5088] data and then am I using anything else [5092] that I don't have to be [5096] outline test variable it's feeding in [5099] here this outline test variable needs to [5101] be the modified [5105] outline I think this is good I believe [5108] if it's not then it's what it [5112] is okay I'm going oh you know what no no [5114] no no no no no hold on do not no Force [5118] the stop okay one more thing we need to [5121] do we need to add all of these posts [5124] right [5127] logically [5128] um we need to add all these posts and I [5131] think I just realized I'm not going to [5132] have access to these if I do it this way [5134] that's so annoying yeah sorry we can't [5136] actually use this routing we actually [5137] just have to do this in a straight line [5139] why because I need access to these links [5141] if I'm to use this to update a [5142] spreadsheet so one [5145] two [5147] three even though it's not really as [5149] visually [5150] pretty four we could also run um like an [5155] um an incrementer function that just [5157] like goes through each of these and then [5159] for one it goes Instagram for two it [5160] goes another thing for three it goes [5161] another thing but uh I don't really want [5163] to do that okay after we generate the [5165] YouTube script doc now we're just going [5166] to go to Sheets we're going to go add a [5168] row now I just need to connect this to [5171] this Google sheet here so I'm just going [5173] to copy in the ID and I'm just going to [5175] enter manually because I know what all [5177] this is Go sheet one the column range is [5179] going to be A to [5180] Z this is now going to have all of my [5184] values um every last one of my values [5188] and then if you think about it what was [5190] a we go to my Google sheet here it was [5193] video ID so I should just have all these [5194] variables like one for one here so I'm [5197] going to go video [5202] ID video URL title length [5205] description then video URL title length [5211] description then I believe we had [5214] keywords author and then Instagram [5216] Twitter faceb yeah keywords and then [5217] author so go one more time I'm going to [5221] have to scroll the way down here go [5222] keywords because it's an array I'm just [5224] going to join these keywords with a [5228] space and [5230] then this last one here is going to be [5232] author looks like it's yeah then after [5236] this we just pull in all the data here [5238] so Instagram Webb [5242] link um Twitter Webb [5245] link actually can just search up Webb [5247] link here make my life [5249] easier Facebook LinkedIn and then [5253] YouTube for column L awesome just check [5256] this this is column L right yes it is [5259] and I Think We're Off to the Races here [5261] I think we actually have everything I [5262] don't know if this is going to work but [5262] we have to run an an test to find out [5264] right so let's give it a [5267] go let us see what Horrors our work has [5272] created [5275] cool cool and uh yeah so that's kind of [5278] that middle section there um the last [5279] thing that we need to do logically is we [5281] need to take uh we basically need a [5285] method that pumps in a bunch of search [5287] URLs here so outputs you know B [5290] basically outputs a a video transcript [5294] so there are a variety of ways we can do [5298] this I think what we should probably [5302] do is [5305] is we should probably do the run inside [5307] of YouTube Sorry inside of appify and [5311] then by doing it inside of apify um [5313] we'll just watch the actor runs here [5315] whenever the actor run is completed then [5317] we will trigger the rest of this I think [5320] for Simplicity sake I believe we should [5323] just run this once so we should run that [5326] YouTube transcript stuff just just a [5328] single time this finished really fast so [5331] I'm kind of hesitant here I don't know [5332] if this actually did my thing [5334] it didn't know we're missing something [5336] here unfortunately the messages that I [5338] fed were just the introduction that's [5341] all why we only generated one I don't [5345] understand that would mean that in the [5346] outline [5348] we oh oh it just use single markdown [5358] [ __ ] [5360] huh uh [5365] H let's think here we split this based [5368] off the space [5373] right [5375] um okay you know where it says modified [5377] outline upgrade outline we need to just [5379] like give it some clear [5381] directions we just need to say output [5383] each chapter heading as an [5391] H2 cool there you go [5395] now we can run this puppy again um but [5396] anyway you know we did this with like [5397] the shitty short stuff so let's just go [5400] through and make sure that everything [5401] else worked even if the actual AI part [5406] didn't uh okay I'm just going to make [5409] all of these a little bit [5411] bigger so looks like we got all the data [5414] all the fields are filled yeah no [5415] problems there actually [5417] cool I am just going to reset the colors [5421] on this um because when you deal with [5424] uh make.com and Google Sheets it'll just [5427] and you add a row it'll just copy the [5429] formatting on the previous one and now [5431] that we fixed that I think this should [5432] probably be be better so we're going to [5434] run it again and then basically what I'm [5436] thinking of is uh you know this run [5439] right here right YouTube video caption [5441] scraper I think we should just feed it [5443] in one at a time it probably be much [5444] simpler than if we do multiple so what [5446] what we should [5448] do is inside of make there's a way to [5450] watch to see if an actor run is [5452] completed so if it has completed [5455] we'll then trigger the rest of our flow [5456] we'll grab the default data set [5459] ID excuse me and then we will use that [5462] to trigger this beautiful lovely [5464] sequence that I put together [5466] painstakingly and then after that um we [5470] will if you wanted to trigger this on [5472] multiple what we' do is we'd have a [5473] Google sheet the Google sheet would have [5476] the video URLs the videos you want [5479] processed and then that database [5482] would run when you want it to so you [5485] trigger the Run manually I imagine so [5489] you just click Start scenario and then [5491] it'll go through and then trigger this [5492] flow for all of the fut all of the rest [5494] of them and then in that way um I think [5497] this would be the simplest to [5498] manage and then we would just update and [5501] say processed at the very [5503] end I think that's the way that we're [5505] going to do it so for instance this is [5507] sheet one here this deals with the the [5509] actual scrape content we just go sheet [5510] two and then what we do is we go like [5512] YouTube video link [5515] we go YouTube [5518] URL and then [5520] status okay so me just copy these two [5523] because these already have the [5524] formatting that I want we'll just say [5528] video URL and then we'll say processing [5533] status when something is added to the [5536] sheet you will say [5541] um awaiting [5545] when it is done it will say [5551] processed this will be the [5553] Q and then we need another [5557] scenario and this other scenario is [5559] going to be responsible for watching [5561] this and then running [5563] it so we'll go let's make this one [5566] number [5567] one call this YouTube scraping [5570] system [5572] um run [5575] scraper this will go to our Google sheet [5579] search [5581] rows it will search rows [5585] where uh wrong one it'll search rows [5589] where status is equal to processed so [5591] we'll go spreadsheet ID and then I'll go [5593] YouTube scraped content [5596] database sheet name will be sheet two [5599] for now you know you can make this [5601] whatever you want processing status must [5603] be equal to [5605] awaiting okay then we're only going to [5608] return URLs of YouTube [5611] videos like this [5613] one let's say that haven't been [5618] processed this will [5621] then trigger an appify module which will [5625] run an [5627] actor this has a red little circle next [5629] to it just because um I don't really [5632] know to be honest this will now run set [5636] actor we're going to do this um using I [5640] believe it was called the caption [5641] scraper YouTube subtitles was that what [5644] it was called let's double check genial [5646] candle stand yeah so we go genial candle [5650] stand integr will wait until the actor [5653] run is finished uh maximum time for the [5654] run is 20 seconds no I don't really want [5656] to wait input [5659] Json we need to grab the Json form of [5663] this [5664] so I'm just going to go Jason copy that [5666] move back here and then paste this in [5669] what I want start URLs is I want a [5670] single URL and I want it to be the video [5672] URL there we [5675] go and you can set this to run on [5678] 15minute intervals you can set this to [5679] run whenever the hell you [5681] want oh geez there was some issue [5684] why where did this issue come from [5687] execution was request did I [ __ ] you [5689] know what I think by me modifying the [5690] title I stopped the freaking run [5693] oh that kills me okay we're gonna have [5695] to wait a while longer um anyway YouTube [5697] scraping system run scraper this will be [5700] watch runs and generate [5703] content [5705] there and then I'm just going to go over [5707] here and I'll go watch actor runs this [5709] is what's going to feed into the module [5712] and this is a web hook based event which [5714] will watch for the actor to finish um [5716] the run I believe this is the most [5719] efficient way to do [5720] this I think that there's no more [5722] efficient way [5725] when you want to add something you fill [5727] out a form maybe like a type form or [5729] something and then it adds a new entry [5731] to this with youtube.com whatever [5734] awaiting then once it finishes [5737] running you know this this triggers the [5739] appify Run once this finishes running we [5742] then run through this whole sequence and [5744] at the very very end what we do is we we [5748] add a row to the first thing with all [5750] the information but the second one which [5752] is our Q um um we'll search for a [5755] YouTube video URL equal to the initial [5757] YouTube video URL and then we'll go to [5758] the processing status and then um switch [5760] the status from a waiting to [5762] processed so that way we have a Q here [5764] in sheet two which really should be [5766] sheet one if you think about it but we [5767] did this [5769] backwards um that you add to and then [5772] you have the actual like content [5773] generation side of the database which [5775] actually like you know fills it in and [5776] stuff like that yeah to me this is the [5779] simplest way to do it I think this is [5780] probably what I am going to do for time [5783] Reasons I'm just going to um stop the [5785] the Run well I'm not going to stop the [5786] run I'm going stop the video and then [5787] I'll just um double back after we're [5790] done okay looks like we are now wrapping [5792] up the generation we smooth out the [5795] script generating all the documents [5799] here looks pretty solid I'm liking [5802] this oo very [5804] cool [5807] nice anything in a break you know it's [5810] very rare that my scenarios work on the [5812] first run like this good [5814] god oh boy I'm kind of concerned now um [5817] let's just remove this first entry if [5819] you guys remember that first one was [5820] just like um from a previous round that [5822] was broken just open up our little [5827] content it's going to do some all [5829] tabbing back [5832] here Instagram content Twitter [5835] content Facebook content LinkedIn [5839] content and the freaking YouTube script [5843] which is 10 [5844] Pages not bad not bad at [5849] all now you can do a lot with this a ton [5852] of things um you could take this content [5855] and then you could actually like write a [5857] whole chapter with this as you as you [5859] guys could see this is actually really [5861] detailed um you could [5865] automatically I don't know you could [5866] like completely a generate the stuff if [5868] you want and actually the approach that [5869] I'm doing here like you can use this to [5871] run faceless YouTube channels to be [5872] clear um I think a lot of people [5874] probably [5874] are they generate things section by [5877] section by [5878] section they have some scripts smoothed [5880] out like that average word per minute um [5883] right now is about 150 or so so this is [5885] like 25 minutes of just like constant [5887] speaking with a uh with an llm you could [5890] easily generate like very in detail 25 [5892] minute videos on it um but you know for [5895] the purpose of this I'm just assuming [5896] that like you're actually part of some [5897] some content agency or something and [5899] we're generating these posts here so [5901] that the people on the team just have a [5903] rough draft that they can go off of [5905] basically um and you know maybe somebody [5907] would touch up the script before it's [5908] published I don't know but any the last [5910] thing we need to do is we just need to [5911] add that search row [5913] module sorry uh Google Sheets search [5916] rows module we want to search sheet two [5922] the reason why is we want to double [5923] check and basically see um whether or [5927] not we have the link from the queue in [5930] the database so sheet two what we're [5932] going to do is we're going to feed in [5934] video URL and we'll just see if this [5936] video URL is equal to one of these very [5938] first variables forever ago this one if [5941] it is equal to we're going to return it [5944] okay now assuming that we return it all [5947] we then need to do is we just need [5950] to um update this so sheets update [5955] Arrow then all we need to do is we just [5957] need to get the same [5959] sheet YouTube content scraper [5963] update a [5964] row why is this doing it this way this [5967] is [5969] weird not really sure what happened [5971] there uh YouTube scrape content sorry I [5973] think I was referencing a folder instead [5974] of a database sheet two and then we just [5976] need to get the row number that we just [5978] output from search row so row number and [5980] we just change the processing status to [5984] processed now we have a Q which uh [5987] watches tasks and then we have the [5988] actual thing itself and you know we [5990] could do some other stuff like we we [5991] could technically link this specific [5993] record to that if we wanted to we we [5995] could make it as complicated as we want [5997] but I think I'll stop there this video's [5998] already gone a lot longer than I [5999] initially thought it would uh yeah so [6002] then processed what I'm going to do is [6004] I'm just going to save this [6007] now first I'm going to connect my watch [6010] app if I runs what I'm going to do is [6012] I'm going to um just change the data set [6014] ID so that it's the default data set ID [6016] from the first appify watch actor and [6019] then I'm going to save this and I'll [6021] copy both of these over [6024] and this will be the first blueprint [6026] which actually fires off um the [6029] scraper so we'll we'll do [6032] this then this will be the second [6035] one [6038] which um actually runs through the whole [6041] content generator which looks freaking [6043] awesome to me I'm pretty stoked about [6045] it cool so that's that um I'm going to [6049] hopefully not cry myself to sleep with [6050] all the tokens that I've been using [6052] obviously this sort of approaches be [6053] pretty token intensive right we're [6054] generating a boatload of content um but [6057] I hope you guys see how nuanced the [6058] content is it's not just like your [6060] typical cookie cutter AI BS especially [6062] that last section because we were using [6064] a much more advanced intelligent model [6066] to process the transcript um another [6068] thing that I think is worthwhile [6069] pointing out here is just so that we've [6070] we Chang the content like it's a little [6072] bit different from the original um you [6074] can play around with that all you want [6075] to get is detailed and you know new as [6079] as as possible like you could I don't [6081] know you could do a ton of things you [6082] could like take the title of the video [6084] or maybe the the the summary and then [6086] feed it into perplexity and say Hey I [6088] want you to return some interesting data [6090] about this and then you could have that [6092] data come in and then you could feed it [6093] into your modification module and say [6095] Hey I want you to change the outline [6097] based off the results from this data [6099] that might be useful for some sort of [6100] News application I'll leave it at that [6103] um but yeah had a lot of fun putting [6104] that system together if you guys any [6105] questions about the sort of system feel [6107] free to drop them down below if you have [6108] suggestions for future ones I'd love to [6110] hear them um as you guys could tell I'm [6111] getting a lot of my recent build [6112] requests directly from my audience so it [6114] means a lot to me that you guys keep on [6116] providing the ideas and I think I'll [6117] help uh sort of Pay It Forward by [6119] actually building them out as long as [6121] it's just something I haven't done [6122] before I want to keep this reasonably [6123] new aside from that if you could like [6125] subscribe do all that fun YouTube stuff [6126] I'll catch you on the next one really [6127] appreciate your time cheers
y um you know if you wanted to send [1087] multiple locations you have to pass a [1089] Json body as a post method with utf8 [1092] encoding this is just s so silly and [1094] this is the sort of stuff that just [1095] really drives me up the wall like this [1097] is just extremely inaccessible there are [1099] many different ways to say this you [1101] don't need to pass adjacent body um you [1105] know they could have just given you the [1106] exact URL that you could have copied and [1108] then pasted but they didn't because they [1110] want to seem like you know they're [1111] sophisticated intelligent whatever [1113] developers man they can drive me up the [1115] wall sometimes um anyway yeah so that's [1117] uh yeah that's basically the two [1118] differences in our case we're doing get [1120] requests I'm going to go empty and then [1122] now that we have defined the [1123] specifications I think the first one was [1125] latitude [1126] right let me scroll all the way over [1129] here uh first was latitude then [1131] longitude so what we have to do is we [1132] have to feed in the [1134] latitude of this record which we just [1136] pulled in under mappable column values [1139] location lat and then long so we have to [1142] feed in the latitude [1146] first location latitude and then we have [1149] to feed in [1151] the longitude as well let's do this and [1155] then let's go longitude and then the key [1158] um is just uh the same key that we're [1160] going to over use over and over and over [1162] again a good design pattern uh that you [1164] can use is you can store the key [1166] separately um like a variable if you [1169] ever wanted to hot swap it or something [1170] so you could just call this [1173] um I don't know set key or something and [1176] we could call this like API key and then [1180] we could grab this [1183] exact key stick it in here you can [1187] imagine we could also do this the [1188] latitude and the longitude if we wanted [1189] to but I don't really want to uh okay [1192] great now that I have everything set up [1193] let me just auto adjust this let me save [1195] this and let me run this we'll see if [1196] there are any issues so we grabbed the [1198] information just fine set the API key [1200] just fine and then we called the API and [1203] then we got a status code of 200 just [1204] fine and then the data that we got [1207] includes the condition an icon for this [1210] which is cute um the temperature and [1213] then um the location of where we're [1215] we're making the request to based off [1217] the latitude and the longitude what I'm [1219] going to do here is I'm then going to [1221] use this to customize an email just to [1222] show you guys how you would apply this [1224] to AB business use case uh let's just [1226] create a draft this time [1229] and then I'm going to do the two as the [1232] email module so email text email so I'm [1235] going to use this one here that's called [1237] email subject uh I don't know this will [1239] just be like some Outreach so let's just [1240] say quick [1242] question let me see if I can grab their [1244] name from this as [1245] well the name is up here um I don't want [1248] to go through the rigar roll of like [1250] doing all the maths I'm just going to go [1252] split name uh we're going to do the [1256] space so let's do space and then if you [1260] guys remember this design pattern from [1261] previously we're just going to get the [1262] first [1263] entry and a hot tip for you guys that [1266] are doing Outreach at scale uh if you [1268] just lowercase some of the elements in [1270] your in your subject line a lot of the [1272] time you're improving conversion rate or [1273] um at least open rate because people [1276] will think that like it was written by a [1277] real person and not a robot so I'm just [1280] going to do the same thing [1282] here um High blank and then these BRS [1285] are just spaces and then [1289] oh you know what why don't I use this as [1291] an example to show you guys how routers [1292] work too yeah let's do that because I [1295] haven't actually discussed routers [1298] yet so I'm going to go over here and [1301] then what I'm going to do is um okay if [1303] you think about it logically we want to [1304] send different emails depending on the [1307] weather right so if the weather is above [1311] let's say 15 we want it to be like hey [1314] you know weather's looking great out [1316] here in California [1318] how are you doing right we just want to [1320] do that as sort of like a drop in sort [1322] of customization example that you can [1324] replace um if the weather's below a [1327] certain number then we want to say like [1328] hey you know frigid ass weather we're [1331] having anyway so in order to do that [1333] simply um there are two or three design [1335] patterns the first is you can just [1337] manually route every response and what a [1339] router is is a router allows you to just [1341] choose different outcomes depending on a [1343] situation that you've defined beforehand [1345] so what you do is you select a router [1347] module like I did back there then you [1348] connect a router module to uh one of the [1352] routes and then all you do is you copy [1353] and paste the initial route so copy and [1356] paste copy and paste and then this ends [1359] up looking like [1361] this um if you Auto align it'll look a [1363] little prettier [1365] obviously and then uh what you do is you [1368] set the route using the filter and so if [1372] I wanted I would say hot let's just say [1374] over 15 C what I would do is I would [1377] find the current temp c and I'd say if [1382] this is greater than [1385] 15 go through this then I would say [1389] mild let's say 0 to 15 [1393] C then I would say if [1398] this um temperature [1401] here is greater than [1405] zero and [1408] temperature is less [1410] than [1412] 15 and then I would say cold and then I [1416] would say less than z [1418] c if the temperature is less than zero [1423] okay so now I have basically three [1425] routes and all these routes are mutually [1426] exclusive if you go down hot you're not [1427] going to go down mild or cold if you go [1429] down mild you're not going to go down [1430] hot or cold if you go down cold you're [1431] not going to go down hot or mild [1433] obviously uh and then what you can do is [1435] you can just customize this with [1436] whatever you want your email to be so we [1438] could say um nice weather we're having [1442] I'm in and then let's put [1447] California like you and wanted to [1449] connect about X Y and [1453] Z let me know if you have time to chat [1456] next [1458] week [1461] thanks neck right and then I'm just [1464] going to copy and paste this and stick [1466] this in three [1473] pretty good weather we're having this is [1475] like the lowest hanging fruit and email [1476] customization by the [1485] way I'm just trying to not cringe it if [1489] I actually got an email like this but [1490] anyway I'm just using this as an example [1492] um anyway and then uh and then what you [1494] do is you test the logic so we're [1496] testing this running through through um [1499] oh it looks like I I need to verify this [1501] a little bit better oh yeah I'm not [1502] using the right email here so let me [1505] pretend that I'm using this email this [1508] is probably [1512] better so I need to verify this [1515] puppy sorry that sounds like there's [1517] some housekeeping going on some very [1519] violent [1522] housekeeping uh and then I think it was [1524] this one maybe I'm [1526] mistaken yeah so I might have to rify [1529] all these just sort of [1536] annoying and down here I'll [1541] reverifying to try one more [1545] time uh didn't draft it probably because [1547] this folder location was wrong let's see [1549] invalid credentials failure um I don't [1552] really know what that's supposed to mean [1554] maybe I didn't actually swap out the [1556] uh let try that one more time now that [1559] I've swapped it [1561] out looks like it's [1570] working yeah no it didn't work either [1572] because unknown mailbox right so uh you [1575] have so I tried mapping this because I [1577] uh there was some error here and it was [1579] because I wasn't connected to the inbox [1580] so just make sure that when you do this [1583] um you have an actual mailbox in your [1586] email server [1588] um there are a bunch that you can just [1590] choose with a drop down one of them is [1592] like all mail the other's inbox the [1593] other's drafts I guess since we're [1595] creating a draft let's just do this in [1597] drafts um and then if you wanted to [1600] hardcode that in you would write um [1602] square bracket Gmail square bracket [1604] drafts like this so I'm just going to do [1606] that [1611] here and then I'm going to run this [1613] puppy one final time there we [1616] go awesome um so now this has actually [1618] been generated for us and if I go to my [1621] email and then go under [1622] drafts you'll see that we have the email [1624] generated uh and it says quick question [1627] Phoenix hi Phoenix pretty good weather [1628] we're having I'm in California like you [1629] want to Connected about XYZ let me know [1631] if you have time to chat next week so [1633] you can imagine how uh you could make [1634] this flow arbitrarily more complex um if [1637] you wanted to like add like a gp4 module [1639] in the middle or something like that and [1640] then do stuff with the data that you [1642] pulled you could probably just feed this [1644] entire string in all of this current [1646] stuff and then just say customize this [1647] email based on this input great so [1650] that's that now you guys know how to [1651] connect more or less any two software [1653] platforms together using um some very [1656] specific but [1658] unfortunately difficult for most people [1659] to understand um API stuff in make.com [1662] super simple and straightforward I think [1664] as long as you follow more or less the [1666] general design pattern and principles [1667] that I've discussed earlier in the video [1669] apis don't have to be difficult at all [1671] and what I find too is the second that [1673] you understand them at least to this [1674] like surface level degree it basically [1676] instantly unlocks an entire new world of [1679] Integrations that you can build for [1680] yourself and then also an entire new [1682] world of let's say jobs or gigs or [1684] positions that you can get as a [1686] freelancer or as somebody that's [1687] employed so I hope that's been helpful [1689] to you if you guys have any questions or [1690] comments or anything please leave a like [1692] comment subscribe and we'll kind of pick [1694] it up from there and if you have any [1695] requests for specific videos that you [1697] want me to do then please leave them [1699] down below the reason why I did an API [1700] video is because somebody reminded me [1702] that I hadn't talked about it yet and I [1703] just figured

Video: https://www.youtube.com/watch?v=QJ7Kinz7wgk
Title: Make.com CRM Automations & How to Build A Scalable Sales System
[0] what's going on everybody welcome to [1] another video in our course make.com but [4] for people who want to make real money [7] today what I'm going to be teaching you [8] is how to build an automated highquality [11] CRM or customer relationship management [13] platform using make.com as our driver I [16] routinely sell these systems for between [18] 5 to $10,000 to other clients I've built [21] out more or less the exact same system [23] that I'm going to show you for my own [24] businesses which now do well over $ [27] 70ish th000 a month and really this is [29] just one of those high value fundamental [32] operation skills that I think anybody [34] that's doing automation as a service [35] should know so if you're an experience [37] Mak of you're just some newbie getting [39] started this video is for you stay tuned [41] and let's get into [47] it okay so what is it that we are doing [49] in practice today well it's quite simple [52] we're going to set up a CRM in a project [55] management software called clickup [57] that's number one you don't have to be [59] familiar with with clickup to understand [60] what we're going to do in this video [62] clickup can be subbed out for literally [64] any project management software out [65] there you could even hypothetically use [67] Google Sheets and achieve the same [68] result although I personally like using [70] a dedicated platform because it's just [72] sexier um after we've set up the sort of [76] foundation in our customer relationship [78] management system so we're going to set [79] up fields and columns and all that sort [80] of stuff we're going to automate a [83] couple of key aspects of the process if [86] you've watched previous videos uh one of [88] them included like a proposal generator [90] where we did basically something similar [91] in Monday so I'm not going to build out [93] that aspect of it but you can imagine [95] how you can integrate any sort of [96] function like that like a oneclick [98] proposal or some automatic status field [101] thing um in make.com and just have that [103] added to the step and basically what I'm [105] going to build out for you today is is [107] it's going to be like a a nub that you [110] can then build anything else out for [113] your own system or your own CRM or your [114] own business the reason why is because [118] crms in and of themselves are aren't [120] very powerful they're simply places to [122] put data where you can read through them [126] later like your customer's birthday or [129] their first name their last name the [130] place they went to school and that's not [133] really the high Roi part here the high [135] Roi part is taking that data and then [137] using it to template out sales [139] activities do things like track uh [141] revenue or cash collected or dashboards [143] that sort of thing and just make sure [145] that your sales team always just knows [147] what's going on at every point in time [148] those are those are the higher [149] activities and so um this the CRM that [152] I'm going to build it's just going to be [153] like a a very standard template with [155] only a few columns um what I want you [157] guys to do is if you're building this [158] out for your own business or if you're [160] building this out for your clients make [161] sure to add another like five or 10 [163] times the fields here make sure that all [165] the information you're getting about [167] your customer is relevant to your [168] product or your offer or whatever you [170] need uh because the more information [172] that you have typically the more [173] information you can template out uh you [175] can do cool things with it like I don't [177] know Auto autogenerate voicemail drops [178] or something like that like like I've [180] done tons of that and it's pretty [181] amazing but you can only do that if you [183] know you actually collect the [184] information okay anyway before I beat [186] myself to death here waxing poetic um [188] here's what the serum looks like [190] specifically so I have an uh basically I [193] have a bunch of leads so one's called [195] hyic marketing the other's Jeremiah [196] Watkins the last one's taly right these [199] might be companies these might be people [200] whatever I've left this uh potent [202] purposefully ambiguous we then have a [205] date updated field uh which simply is a [208] default Field in clickup uh where you [210] can like click uh new column and then [212] just write like date so date Clos date [214] created date done whatever clickable [215] will just automatically update this [216] field every time one of the various [218] other fields in the record is changed [220] this is usually just really good to get [222] into practice of having an any CRM [224] there's then a contact email obviously [226] and we're probably going to contact them [227] through email so that makes sense [229] there's a prospect status which is in [231] this case um I've broken down our [233] pipeline into the following five steps [235] these steps are basically like the core [237] flow of any agency or coach offer um you [241] can add more steps here as needed but I [243] would usually recommend always having [244] this uh flow at minimum and then [248] depending on the specifics of your offer [249] maybe adding one or two more steps after [250] that generally speaking the fewer steps [252] the fewer places for to go wrong [254] and the fewer places for leads to sort [255] of stagnate so the flow in our case is [258] uh there's an intake field which we just [260] call interested um presumably if they're [262] in your CRM they're interested in your [264] product so I think that's a fair [265] assumption you can call this whatever [266] the hell you want intake Q unprocess [269] whatever then there's a meeting booked [271] field uh meeting booked means like they [274] are in a discovery call calendar [277] somewhere and they're just waiting to be [278] called and so maybe this is like a [280] Google meet or some like that where [282] people are just like waiting um on the [284] call they've like kind of filled out [285] your calendar link and you know they [287] booked it and this is something that I [289] do want to automate I'm not sure if [290] we'll be able to get to the point of [291] automating it today just spending on [292] time but this would be pretty cool to do [294] so a lot of the time people um have to [296] like manually update from intake to [298] meeting booked and that just gets like [299] really unreasonably annoying um then we [302] have a waiting proposal so presumably if [304] you're doing a one call close which is [306] what the system is called um you know [308] now we have the meeting booked so we [310] have some type of outcome maybe they [311] really liked our service what do we have [312] to do now we have to send them a [313] proposal or some type of like sales [315] activity to move the process forward [318] after that we need a stage just to show [319] them that that is done so we are [321] currently waiting on the client to do [322] something and this is important because [324] this is probably our highest value stage [326] right if if a client has made it to the [327] stage we've invested or if a prospect [329] has made it to the stage we've invested [330] a lot of money into them um the company [332] that you're working for maybe has [333] invested a lot of money into them and so [335] you know anything that we can do to [336] nudge up the conversion rate at this [338] point by a percentage or two is [339] important U which is why it's always [341] pays to have a separate field for it so [343] you can start automating things like [344] follow-ups and that sort of and [346] then finally we have a one stage and [347] then a loss stage and the idea here is [350] that when a client moves to one or a [353] prospect moves to one they are [354] transformed into a client and then they [356] actually um get rid of themselves [358] completely from the the CRM or from the [360] leads list anyway because they're no [362] longer like somebody that the sales team [364] is supposed to be taking care of they're [366] somebody now that like the Fulfillment [367] team or the client management team or [369] the customer success team uh is taking [372] care of and is their responsibility um I [374] always operate on a principle of to to [376] minimize diffusion responsibility [377] somebody just left me a pretty [378] insightful comment on this yesterday the [380] day before and so basically I always [381] just want to have one team responsible [383] for one thing if there is a sales team I [385] want them to be responsible for the [386] sales activities if there's a [387] fulfillment team I want them to be [388] responsible for the Fulfillment [389] activities [389] the fewer people you have going back and [391] forth between various silos um usually [394] the better and that's not to say that [395] like people shouldn't have data [396] transparency in a business it's just to [398] say that in practice you know the people [401] that you hire for to do sales activities [403] are very different from the people [404] you're going to hire for to do like [405] fulfilment activities so just try and [406] minimize their overlap wherever possible [408] and so what that means is after they [410] move to one I'm just going to move them [411] over to this client's list here called [413] client example build I've added like [415] some random BS um columns here like [418] client type High ticket client email uh [420] Nick at left click Nick left [422] click. um yeah and then I have a source [427] field this is just meant to show you [428] guys that you can track stuff like [429] Source automatically there's an assign e [431] column obviously which is just where [433] you're going to say hey this person owns [435] this lead or this person brought this [436] lead in and then I also have a discovery [438] call URL column which is pretty [440] interesting and I may or may not get [442] into that I don't totally know yet if [444] I'm being honest um but uh yeah if I do [447] then we'll we'll talk about it at the [449] end and then if I don't then boohoo um [452] it'll be a [453] mystery so as you see I've built out a [455] couple of these um I built this out a [459] few minutes ago you know about 15 20 [460] minutes ago just to like ensure that I [462] could build this out in front of [464] everybody so I'm going to do that again [466] now and I'm basically going to like [467] recreate this over here I'm just going [468] to do it uh for the purposes of showing [470] you guys how to do something like this [471] in clickup so if you want to do this and [473] click up yourself first thing you do [474] click that plus click list call it [476] whatever you [478] want [480] now the way clickup works is um we're [483] going to add a record that I'm just [484] going to call myself uh you have a bunch [486] of columns here which you have total [488] customization control over I don't want [490] due date so I'm going to right click and [491] go down to hide column I don't want [493] priority right click and then hide [495] column this plus button when you click [497] it you can add new Fields so I'm going [498] to add a couple new Fields one is a [500] dropdown this I'm going to call stage [503] I'm going to have several options here [504] I'm going to have intake I'm going to [506] have what I just say meeting booked [509] I'm going to have uh waiting [513] proposal good God I'm old proposal [517] scent uh and then the last one we're [519] going to have no we're going to have two [520] more we're going to have one and then [521] we're also going to have lost okay great [523] uh you can add colors here if you want [524] to make it all sexyy so what I'll [526] usually do is I'll just like pick a [527] primary color [529] like I don't know pink no pink is sort [532] of weird let's do this and then I'll [534] usually just try and like make uh I'll [536] just alternate the darkness I guess [539] guess of the leads the further that we [541] go down the pipeline uh and you don't [543] have to do this this is just me being [545] sort of OCD I just really like the way [546] that it looks um I like when I open up [549] my pipeline for it to be nice and sexy [551] and everybody on my team to say wow uh [555] Nick are you an artist so that's what [558] I'm going to do [559] here um and I'm just going to take an [562] undo unreasonable amount of time to do [565] it as [566] well okay great that looks just about [568] done [569] [Music] [570] go back here and then maybe we'll just [572] make this really dark one and then lost [574] is just going to be red because lost [577] should make you cry and bleed okay so [580] now we have a stage uh column just just [582] pretend this person has intake that's [585] nice move this all the way over here um [588] assign e I'm just going to set to myself [589] and what else do we need here we need I [592] want a date updated colum so date [595] updated let's move that over here [597] anytime anything here is changed this [599] this column will update kind of [601] self-explanatory I'm going to add [603] another drop down we're going to call it [604] Source platform um this is going to be [607] just a way for you to like identify [609] which area people are coming from maybe [610] a Facebook and Instagram whatever [612] actually let's do [615] that I always like to make things more [617] actionable and and relevant [620] um what other fields did we have here [622] that I'm forgetting contact email oh [624] yeah obviously we need to host their [626] email [626] somewhere just going to call this [628] contact [630] email this may or may not great because [632] I actually have another field with the [634] same title yeah yeah I can't do [637] that let's just call this um lead email [641] sure okay and then we'll stick this over [644] here I'll add my own email here for [646] brevity and then you can imagine how [648] depending on your own communication [649] platform you can add your phone numbers [650] you could add your home address you [652] could add uh the times of day that they [654] shower I don't know you can get as [656] granular as you want with this stuff uh [657] I'm not going to in my case because this [660] is just a demonstration and it's [661] supposed to be very simple last thing [663] I'm going to do in order to organize [664] this data better is let me see if I [666] could actually copy and paste this how [667] do I duplicate records and click [669] up okay not going to do that I'm just [671] going to add a bunch of new [672] ones uh Peter Wick let's do Sarah [677] mats and then let's just separate their [680] stages so I can show you this and we'll [681] Pretend This is like an active [684] Pipeline and left click is getting [686] packed these days huh the price success [690] s is going to be me for all them maybe I [692] got myself on Facebook I got Peter on [695] Instagram and then Sarah on Facebook so [697] the last thing we're going to do is [697] we're going to group these if you see [699] right now these are all Todo um I don't [701] really care about the to-do I've created [703] my own stage field here that's different [704] from clickup built-in status field I [706] would recommend that you guys do this um [708] the rationale behind it is if you're [710] like a person that's heavily involved in [711] clickup um you can't really create [714] subtasks uh with different statuses than [716] the parent unfortunately or at least you [718] couldn't when I started doing all this [719] stuff maybe you can now click Up's [720] always updating U but as a result I was [722] like just create my own stage field [724] anywh who uh when you Group by stage [726] then it looks like this so you can see [727] how as people progress through your [728] pipeline they go from top to bottom [730] which is sort of logical right keeps [731] things organized for your salespeople [733] all right great uh we have this uh leads [736] example build and then I also created [738] one called clients example build exact [740] same sort of idea I mean I think at this [741] point it's it's simple enough that I [743] don't have to uh rebuild it but you know [745] we have two offers or whatever that [748] people come in on there's like a high [749] ticket offer and there's a low ticket [750] offer so maybe uh I signed one second [754] copy on my low ticket offer and their [756] client email is Nick it left clicky oops [759] I don't know what happened there okay I [761] guess by clicking it I opened my email [763] uh software so and then I exited out of [766] clickup [770] boohoo okay I'm back just edit that [773] because I do not like the way that that [775] looks okay wonderful so um yes where [778] were we so so we're back at the leads [780] CRM now we've essentially at this point [782] built the foundation of our CRM we have [785] the scaffolding we have um you know [788] everything basically ready all we need [791] to do is now fill that in with cool [792] automations that actually like allow our [794] serum to do things that are high value [796] High Roi and so from this point on now [798] we can finally use make um I know a lot [800] of the guys that are watching this for a [801] lot of the people that are watching this [802] are probably like hey what the hell it's [804] supposed to be a make tutorial we just [805] spent like 15 minutes covering something [806] that isn't make but uh you know a lot of [809] the time for in automations you're just [810] going to have to learn how to build [811] these things out so I wanted to make it [813] as clear as possible how you do it and [815] clickup depending on the platform you're [816] using there are different ways that this [818] sort of thing can happen you can use [820] like uh like clickup has built-in web [822] hooks which make it really easy to [824] automate Things based off status changes [825] so if I stage if I change a stage from [828] intake to meeting booked for instance I [829] can send it a web hook somewhere else [830] and then do something with that which is [832] obviously really cool and so what I'm [833] going to do here is when something [835] changes to [837] um let's do awaiting [840] proposal so after the meeting has [843] occurred when the status of the stage [845] changes to a waiting proposal we're [846] going to send the lead a quick email and [848] that email is basically just going to [849] thank them for the call and let them [850] know that we're going to send them over [851] a proposal sometime in the next like two [854] or three hours purpose of this is going [856] to be to confirm intent to make sure [858] that you know the conversations that [859] we're having are consistently High Roi [861] to deliver that sense of professionalism [863] and to basically prep the person for a [865] sales proposal we want them to know that [866] we are about to sell them on something [868] we want them to be ready for it um so [870] this is a good example of a change that [872] I've made in a ton of companies that [874] yields like uh 2 or 3% Improvement in [876] conversion right super simple right but [878] you would be surprised as to how many [880] salespeople because they're busy doing [882] the that really matters which is [883] selling I forget about Minor [884] optimizations like this so that's the [887] first thing we're going to build out [887] we're going to build out when the status [889] is a waiting proposal how to send over [890] an email then I'm going to [893] um let's build out a flow that when the [896] meeting is booked it'll automatically [897] update the the uh stage from intake to [900] meeting booked that that would be good [902] as well and then if there's anything [904] else that comes up over the course of [906] the next few minutes just as I'm [907] building this then I'll I'll add that in [908] as well but I think that probably [910] suffices to show you guys just the [911] potential of automating stuff with uh [913] with a high through pits I will say uh [916] you can get as gr as you want with this [918] a big flow that I used to really like [920] was every time a lead would be added I'd [921] send them like a wonderful customized [923] flowery message with gp4 uh I then embed [926] like a calendar link and that calendar [928] link would allow them to book when they [929] booked I would then grab the email from [931] the booking use that to update their [933] record here I would say meeting booked [935] and then I'd send them a bunch of like [937] customized follow-up messages afterwards [939] basically confirming that they're going [940] to show up to the call so like four [942] hours out I was just like hey Peter man [944] you know I was just on your Instagram [945] looking at your dog picks and thought [947] that they were great uh just letting you [949] know that I'm all good for the call in [950] four hours right we had a big problem [952] with meeting drop off and this is just a [953] good way of minimizing that uh and then [955] we'd have the call and then depending on [957] how I classify the call if it was like a [959] good call or a bad call or whatever I [960] would send out one of those customized [962] emails I would then automatically [963] generate a proposal wait 10 minutes send [965] over the proposal to them immediately [968] afterwards um I've experimented with [970] doing things like creating uh [972] artificially generated videos using the [974] columns in a CRM like this like man you [976] can go as granular as you want so I just [978] want you guys to know this is going to [979] be the nub that we build everything else [980] onto after and if you guys want to see [983] me build out one of these processes [984] specifically just let me know uh let me [986] know down in the comments and then I'll [987] see if I can add that the stack okay so [990] first thing that we're going to do is uh [992] after a meeting is um yeah basically [996] what we want to do is we want to send [997] them a message when we move the status [1000] to a waiting proposal and that's super [1002] easy to do so I'm going to go back over [1004] here and I have a bunch of other silly [1007] automations so I'm just going to create [1008] a new [1010] one and what I always like to do uh when [1012] I do serum stuff is just to name it like [1014] where's the the origin source so I'll [1016] say click up um [1019] stage changes to what was it awaiting [1025] proposal stage change to awaiting [1028] proposal and then we'll say send [1031] followup email okay great I'm going to [1034] add a web hook listener here got mail [1038] hooks web hooks we going use this one [1041] I'm going to add a new web hook I'll say [1043] click up stage change to awaiting [1046] proposal this is about as organized as [1048] will ever be and then I'm going to go [1050] back to here and the way that you add [1052] things like web Hooks and stuff like [1053] that and click up is you go to the [1054] automations tab in the top right hand [1056] corner uh click add Automation and then [1059] um in my case I know exactly where to go [1061] because I've done this multiple times [1062] but you can click through and just see [1064] the potential of the various things that [1066] you could automate and clickup um [1067] basically clickup just lets you send a [1069] web hook whenever the hell anything [1070] happens very simple so in my case um I [1072] want when a custom field changes the [1074] field that I want to select is stage and [1077] then when anything changes to a waiting [1079] proposal I then want to send a web [1085] hook okay great so uh I have the web [1088] hook URL just copy that in so I'm going [1090] to click create awesome when custom [1093] field changes then call Web hook you can [1095] document this as much as you want down [1096] here for the purposes of brevity I'm not [1098] going to uh but I do recommend that [1100] people usually do that and I'm going to [1101] run this and I'm just going to test what [1103] that happen what happens when I do that [1105] so let's say we just had a meeting with [1106] Peter Wick we're now Ching the stage to [1109] waiting proposal uh we just sent over a [1111] web hook make received it and you'll see [1113] make gives us tons of information about [1114] this we get the ID of the record as it's [1117] represented in clickup which is [1118] important we're going to use that later [1120] we get the name we get the status field [1123] we get uh custom Fields right we get the [1126] assign field the lead email contact [1129] email Source platform there're all these [1131] custom Fields basically that I filled [1132] out that we actually get now as a result [1135] of just that simple ping so that's [1137] awesome click up you just do literally [1139] anything with any of this information [1141] and you can imagine how you could build [1142] out any flow um that you know is [1145] responsible for changing stages or [1146] whatever but any uh that's simple enough [1148] so what I'm going to do here is now I'm [1149] going to just open an email module and [1151] what we want to do is we want to send an [1156] email I am going to send Save the [1158] message after [1160] sending and then we're just going to put [1162] it in sent mail the email address that [1164] I'm going to use we may have to [1167] pull another value out of this so custom [1171] field see there's a value Peter at L [1173] click this may work this may not I'm not [1175] 100% sure um you know what why don't we [1178] get in the habit of just like calling [1180] that clickup uh actually getting the [1183] clickup record first that's a good habit [1184] to get into okay so um basically what I [1187] want to do is I want to add a separate [1189] module called the clickup get task [1191] module because what I want to happen is [1193] when we send the web hook back sure we [1195] do technically have all of the [1196] information or most of the information [1198] here but I want to send another request [1200] over to click up to get it formed in a [1202] very nice and simple way that's a lot [1203] more maintainable than this um web hooks [1205] you know for the purposes of compression [1207] and a bunch of other developmental [1208] reasons um are usually sort of difficult [1210] to deal with directly and so if you guys [1212] remember back in my uh proposal video [1214] where we were automating proposals I got [1216] the web hook and then I used that to [1217] like call Monday again with the ID of [1219] the record we're going to do the exact [1220] same thing here we're just going to use [1221] the payload ID to get the field um so [1224] clickup has a module called get a task [1227] makes that pretty simp simple um we're [1229] always going to select map and then the [1231] ID that we're going to use is this [1232] payload ID don't use that ID up there [1234] that's just a long one um that [1236] references the web hook specifically now [1238] I want to test this I want to make sure [1239] that this worked so what I'm going to do [1241] is I'm going to go back to Peter Wick [1243] and I'm just going to copy this URL up [1245] at the top this this is the ID is [1246] represented by clickup you can also find [1248] it here I'm going to go back here run [1250] this module only this will allow us to [1253] test I'll click ID and I'll see if it [1255] got it okay great I got it so as you see [1257] we have all the fields and then there's [1259] also a field here called custom Fields [1262] with the lead email field which is what [1264] I want uh and it's just like much sexier [1266] and easier and more maintainable so [1268] we're going to use that sure it'll [1269] technically add one additional execution [1271] to our cycle uh but I'm okay to make [1274] that tradeoff if it means that you know [1275] it's just a lot easier to to deal with [1278] um a lot of the time when you do [1280] something like this and you kind of [1281] screw up like [1283] me you have [1286] to uh res save this module which is sort [1289] of annoying um and by resaving the [1291] module you sort of like allow it to [1293] access previous module flows so that's [1295] just what I did um in the clickup module [1298] the email address [1300] is where is it here ah yes lead email [1304] and so now what we're going to be doing [1305] is sending the email there um subject [1307] line thanks for the [1310] call and [1311] then um I'll do a couple things here I'm [1315] using HTML tags here because I want to [1316] make sure this email's properly [1317] formatted but you don't have to um I'll [1320] say hi blank thanks for the call earlier [1324] just letting you know that I'm working [1326] on a [1330] proposal work on a proposal immediately [1333] and have something over to you in the [1335] next two to three hours stay tuned and [1338] let [1339] me know if you have any questions okay [1343] I'm going to add another couple BR tags [1345] here for [1346] spaces I'll do that again here and then [1349] I'll say thanks and then I'll go BR and [1351] then um I don't know if you have one [1353] salesperson this is a lot easier if you [1355] have multiple salespeople what you can [1356] do is you could go down to this assignes [1359] tag you could grab the username and then [1361] you could split the username by a space [1363] we're going to do this in a second and [1364] then just grab the first uh the first [1366] name there U but in our case I'm not [1368] going to do that I'm just going to write [1369] Nick it's hardcoded it's easier and uh [1371] in this hypothetical example I am the [1372] only salesperson what I'm going to do [1375] here is I want to reference their first [1376] name right the issue is um I don't have [1379] a column called first name in my CRM and [1381] you'll find a lot of older more [1383] Antiquated crms don't actually have that [1385] column uh or or functionality s I'm just [1387] making sure my microphone isn't running [1389] out of battery um so what you do in that [1391] case is you know we only only have a [1392] full name column Peter Wick so I'm [1394] actually going to pull that data uh and [1397] then I'm going to split it using the [1399] text separator split function this is [1401] really cool and I use it all the time [1403] and if you go to this a and then if you [1406] scroll down to split you'll see how it [1407] works [1408] you basically split a a string into [1410] multiple strings based off of the [1412] appearance of of a character so what I [1414] want to do is basically based off the [1415] appearance of a space I want to split [1417] this into two and then I want to grab [1419] the first so a high split task name [1423] splitting it by space and then another [1426] design pattern that a lot of people use [1427] in make is the write get get is a way [1430] that you get an element from an array [1431] based off its place in the array and so [1433] it starts at one so it's one indexed as [1435] opposed to zero indexed if you guys are [1437] familiar with that from programming but [1439] basically um if we think about it [1441] logically we just took the name Peter [1444] Wick separated based off of space now we [1446] have two elements one's called Peter [1448] one's called Wick and now we're getting [1450] the first of that element so the Peter [1452] so get uh we just had the array and then [1455] I'm just going to write one and that [1457] should work probably about a 95% chance [1459] that it does I may have screwed [1460] something up but uh if I did then we'll [1462] see how to debug stuff as well um let me [1466] just run this module as a test so I [1467] always like to do this I'm going to use [1469] Peter Wick oops as that and then the [1472] example is going to be Nick at left [1474] click. a which is my email [1477] address see I'm uh laying down them [1480] booked meetings here and then oh [1482] somebody wants me for thumbnail design [1484] well that's very nice oh wow somebody's [1486] re-editing my thumbnail dude that's [1489] sick wow look at that some guy just did [1492] that for me for free beautiful well [1494] thank you very much uh viev or I'm not [1498] butchering your name I like what she did [1499] to my [1500] shoulders very nice um if I have the [1503] time I will absolutely jump on a call [1504] with you man thank you any who uh cool [1507] so now I'm going to test this so I'm [1508] going to test this [1510] scenario we're going to see how that [1512] worked I'm going to go back to my own [1513] personal email I got it uh thanks for [1516] the call looks like it came from info [1517] one second copy hi Peter thanks for the [1519] caller just any prop me have someone [1521] over next 3 hours stay tuned let me [1522] questions thanks day great this is [1524] exactly what we wanted fantastic what we [1527] have now is we B basically have a way to [1529] inform somebody that you are going to be [1530] sending the proposal immediately after [1532] improve conversion rate by like 1 or 2% [1534] maybe 3% if your current sales process [1536] is really shitty um fantastically simple [1538] example of how you know you can start [1540] automating CRM operations but an [1542] important one nonetheless so I'm going [1544] to save that and I'm just going to keep [1545] this on for the purposes of the rest of [1548] this okay so now let's do the second [1551] feature which was when a meeting is [1553] booked in our calendar let's [1554] automatically update the stage from [1556] intake to meeting booked um aside from [1559] that I think that's more or less it from [1561] like a top level optimization [1562] perspective and this is probably given [1563] you enough ideas so that you guys can go [1565] forward and kind of spread your wings [1567] and fly uh but any who this is a very [1569] commonly requested feature in a lot of [1571] CRM setups that I do uh and so if you [1573] think about it there are two main sort [1576] of calendars that you can use at present [1578] one's called Kenly uh the other's called [1580] cal.com and what we're going to want to [1583] do in our CRM and what most salespeople [1584] do at this point just because calendars [1585] are just a massive Improvement whatever [1587] hell we were all doing before uh which [1589] was Madness is basically when you send [1591] over your calendar when somebody books [1593] in it we want that to automatically [1595] update the CRM record that it's [1597] associated with uh to meeting booked [1599] just so that like we can keep things [1600] easy to track in the pipeline we know [1602] what the current like meeting booked [1604] value is let's say if you assign like a [1606] certain amount of money to every sales [1607] call or whatnot um and yeah very simple [1610] and easy to do so as I mentioned before [1614] there's Kenly and there's cal.com I [1615] prefer cal.com I'd recommend everybody [1617] watch watching this use this I'm not [1618] affiliated with them whatsoever maybe if [1620] they have an affiliate program I'll hop [1622] on but uh yeah cal.com is just like [1624] qualitatively Superior to cly I think [1627] the only difference is price I think [1629] cal.com may be a little bit more money [1632] yeah it's like two or three extra [1633] dollars a month for way more [1634] functionality um to be specific you get [1637] significantly more web hooks so that you [1639] can't you can send web hooks when a [1642] booking is created uh a booking is [1645] canceled a booking is requested you can [1647] receive pay pay directly through through [1648] cal.com and you can like differentially [1650] triage things depending on whether [1652] payment went through or it didn't go [1653] through you basically just have a lot [1654] more freedom uh and this is what it [1656] looks like in practice so if I click [1658] open cal.com actually logged in here you [1661] see that there are a bunch of different [1662] event types that I've created and these [1664] are various event types for various [1665] features and systems that I'm I'm [1667] setting up I had a sales call sort of [1670] system called the agency demo call which [1671] I'll use as a demonstration it's [1673] appropriately named demo um the actual [1677] link itself looked like this if anybody [1680] is curious so uh when you sign on I [1682] think it just looks way better than cly [1684] 2 if I'm honest you get the title little [1686] description the place where we're [1687] meeting which in our case is a Google [1689] meet um then you get a bunch of [1691] questions that you can sort of fill out [1693] uh which I really like and you know you [1695] got the email address the mobile phone [1696] number I always ask for gross monthly [1697] Revenue because it helps frame the [1699] conversation in terms of hey I'm here to [1701] help you make Revenue you need to be [1702] transparent with me uh will you [1704] absolutely 100% be able to make your [1705] selected time uh this is always just [1707] because I I want to minimize the amount [1709] of uh flaked bookings that I get CU my [1711] time is valuable as is yours and you [1713] should try and just minimize that [1714] however possible um I don't think this [1716] disrespects anybody's intelligence [1717] although I've heard uh a few other [1719] salespeople and stuff like that um [1721] believe that but anywh who um this is [1723] going to be the process that the [1724] customer goes through right so you can [1726] imagine how if uh we had a lead Peter [1730] Wick and let's say he's an intake you [1733] know a standard operating procedure for [1734] our sales team might be hey once they [1736] get into intake the first thing thing [1737] you need to do is send them a warm email [1739] welcoming them to whatever and then [1741] maybe see if you can jump on a call with [1743] them if possible we didn't add a phone [1745] column here but imagine there's a phone [1746] number column uh and so that's what [1748] happens you know new person comes in we [1750] assign them to the salesperson in this [1752] case I am the salesperson I get a [1753] notification and click up I pick up my [1755] phone I give them a call I try and sell [1757] them on the idea of like whatever our [1758] program or product is and I say hey it'd [1760] be great to book a discovery call with [1761] you where we can go into this in more [1763] detail I'm going to send you over a link [1765] to my cal.com or like myal [1768] uh feel free just to like you know book [1769] from there and then uh our team will [1771] handle everything else right they say [1773] sure you send them over the email and [1774] then this is the page that they see uh [1777] let's pretend that they book a time and [1779] let's pretend that we actually go [1781] through with [1783] this I'm going to just put a random [1786] phone number here this is probably [1788] somebody's actual phone number so please [1789] call them and tell me how it went I'll [1792] fill it out a bunch of information okay [1793] great and then I'll I'll put I'll put [1794] this in um I'll get everything ready [1797] rather now in cal.com one of the cool [1799] things that I mentioned is you can you [1801] can choose web hooks so I have created a [1803] web hook here a long time ago for this [1805] I'm going to add a new web hook in [1806] make.com and basically when a booking is [1808] created in cal.com I'm going to catch [1809] that web hook I'm going to match the [1811] email address of the requests to the [1813] email address in our CRM and then if we [1816] have a match we're going to update that [1817] to meeting B so um let's set up a new [1822] make [1826] scenario and let's [1829] do well like this is actually the exact [1831] one that I was working on before just as [1833] a demo for the video so why don't I just [1834] use [1836] that um because this is a demo I'm just [1839] going to start from scratch so click [1842] this click web hooks custom web hook [1845] then we want to set up a new web hook [1847] we'll say calendar agency demo call [1851] calendar [1854] booking we have now an address I'm going [1856] to copy C this I'm going to go back to [1858] web Hooks and then you can create a new [1860] one I mean I already have one set up so [1861] I'm just going click edit and then I [1863] will delete the current subscriber URL [1865] which is where the web Hook is going to [1866] be sent and then I'll paste in the [1868] make.com one and then here are all the [1871] triggers that I talked about so you can [1872] do canceled re rejected requested [1874] payment initiated reschedule paid [1876] meeting ended meeting started recording [1878] download link ready and instant meeting [1879] created I don't even know what half of [1881] these mean uh but suffice to say this [1883] just gives you a lot more freedom to [1884] Define flows like especially when you're [1885] doing booking paid if if you're doing [1887] like a paid consultation sort of offer [1889] uh it's quite valuable this secret field [1892] basically just means like I could pass [1893] in a password and then in make.com I can [1896] check to see that that password exists [1898] as it's written here just a security [1900] feature to prevent random bot traffic [1902] from like firing your web hook I don't [1904] really use that I don't think you're [1905] ever going to have a real problem with [1906] it and then the cool part about cal.com [1908] is they allow you to test your web hooks [1910] so I'm actually just going to run this [1912] here in make and then I'm going to ping [1914] ping a [1915] test and then looks like it was sent and [1918] then it was received so this is what the [1921] payload looks like tons of information [1923] coming from cal.com here which is nice [1925] uh We've confirmed that that works [1926] basically so I'm going to click [1928] save okay great uh I may have to refresh [1931] this now I think about it I hope I don't [1934] uh okay let's do [1937] this click [1940] confirm yeah we're going to try to fire [1943] this oh yeah sweet so we caught it uh [1946] great [1948] okay and we're going to open up this [1949] payload um collection here what we got [1952] so calom gives us a ton of stuff we get [1954] the booker URL we get the type agency [1956] demo chat we get the title agency demo [1958] call we got a bunch of information in [1959] the description uh the fields that are [1962] important to us are user field responses [1965] would it be mobile no Revenue no promise [1968] no [1969] ID where the heck the email oh yeah here [1972] it is sorry it's under responses and [1974] then email uh and this is the value that [1975] we're going to check uh basically [1977] against our CRM so what we're going to [1979] do is we're going to grab that value and [1981] then I'm going to uh list all of the [1984] leads in our lead [1986] CRM um some people particularly the more [1990] theoretical Among Us will say that this [1992] is a shitty way to do this um because [1996] what if you have like a million tasks or [1998] something I've never really cared about [2001] that um if I have to use a few extra Ops [2003] to get you know the record that I'm [2005] looking for so be it and I'm totally [2007] cool with that uh and so in my case yeah [2009] it's very simple um clickup lets you [2013] filter based off the list ID and so I [2015] need to go over [2018] here I need to get the list ID and I've [2021] sort of Forgotten where that [2023] is I don't actually remember so bear [2026] with me here as I grab it I think it's [2028] in copy link paste the link I think this [2032] 90171 I think that's the list ID I don't [2034] know for sure so we're going to test [2036] this [2038] just going to run and see what [2042] happens yeah yeah okay great so um and [2045] click up the then this is just uh [2047] specific to the clickup platform and [2049] click up the list ID is this uh string [2053] right here there's something starting [2055] here and then there's a dash and then [2056] there's a big string in the middle and [2057] there's another Dash and then there's [2058] another number um so if you wanted to [2060] grab the list ID to do any like API [2062] functions you would just click on the [2063] list here and then you would uh double [2065] click on that and copy it but anyway [2067] I've just verified that this flow works [2069] we are listing all of the um records and [2073] you can see it listed all three of them [2075] which is nice and just to be safe I'm [2076] going to list let's say 50 I don't think [2078] we're ever going to have more than 50 [2079] records in here at the same time I'm [2082] going to order it by updated at that [2084] just means that we're always going to be [2085] looking at the fastest ones uh the most [2088] recently updated ones first and then [2090] what I'm going to do is I'm going to [2093] update or edit a task with cust [2097] fields which is this module right over [2100] here and clickup has a bunch of [2102] different modules that you could use to [2104] edit things um but they for some quaint [2108] or quirky reason they disambiguate [2111] between tasks with custom fields and [2112] then tasks without and so in our case we [2115] added a bunch of custom Fields like the [2116] stage and um you know the email [2119] addresses and stuff like that and those [2121] are the fields that we want to update [2122] obviously and so we're going to need to [2124] use the edit aask with custom Fields [2125] module down here I'm selecting the very [2128] the specific folder that the list that [2130] I'm interested in is in which is list [2132] example build right here with three [2133] tasks clickable will tell you how many [2135] tasks are in there just to help you find [2136] it and then uh we want to reference a [2138] specific task ID so what we want to do [2141] is I'm going to click map then I'm just [2143] going to go back here and get the task [2145] ID and I'll show you how why this works [2147] in a second so basically we listed all [2149] the tasks before what I'm going to do is [2151] I'm going to filter so that I'm only [2152] getting a record with the custom field [2155] equivalent to the thing that I want [2156] which is the email address equal to and [2158] then I'm going to grab that that ID um [2161] if you scroll down here you'll see there [2162] are a bunch of fields that we can change [2165] and these are all fields that are uh [2167] these are the custom Fields down here [2168] these are all fields that are in clickup [2170] that we've created so contact emails the [2171] field delivery is a field Source [2174] platform is a field stage so on and so [2177] forth uh these are from I think just my [2179] more General CRM for the the business [2181] that I run once I can copy so these [2183] aren't really relevant to us these are [2184] just some extras but uh anyway the field [2186] that we're interested in a stage and [2187] what we want to do is we want to update [2188] that to meeting booked so we click [2191] okay last thing we need to do is we need [2193] to basically filter uh and in make.com [2196] you can filter arrays and then you can [2198] grab just one element in an array um [2201] really nicely and and and effectively so [2204] that's what I'm going to do here this [2205] isn't the simp this isn't the safest way [2208] to do it again there are a couple of [2211] other ways that you could accomplish the [2212] same result but it's the fastest and so [2214] I usually do the fastest so what I'm [2217] going to do is I'm going to add a filter [2218] and then if you guys remember um we [2221] wanted an email address field so I'm [2224] going to scroll all the way down here to [2227] custom fields and then a lead email I [2230] believe is the name of the field right [2232] lead email okay great and we're only [2235] going to allow this to pass if the lead [2237] email in [2238] clickup is equal to the email that we've [2242] received from our web hook so if you go [2245] down to responses and then email [2247] we want to match against this value [2249] right here and so we want to say hey I [2252] want you to when a new meeting is booked [2255] to grab the event and grab all that [2258] information and then I want you to go [2260] into a click up and just list all the [2261] records that we currently have and then [2264] I want you to match it so that this [2266] thing only proceeds if the email and [2269] clickup of the record that we found is [2271] equivalent to the email of the payload [2273] that we received and in that way we're [2275] we're going to kind of match up the two [2276] records so I'm going to say [2280] email equal to let's say lead email [2284] equal to we can just do this go booking [2287] email now clickup allows you to define a [2290] bunch of different filter Fields so you [2291] could do text operators equal to equal [2294] to case in senstive not equal to [2296] contains um this is going to be another [2298] thing a lot of developers probably [2299] disagree with me on but I like to be [2301] very general because I want this to work [2303] most times and so you can imagine how if [2306] we were just to write equal to which [2308] doesn't which is very case sensitive if [2310] somebody were to write their email [2312] address like this let's say it's Peter [2315] left click. if somebody were to write [2317] their email address like this maybe they [2320] had a little spelling mistake or [2321] something like that um that would not [2324] process if we just use the equal to [2326] filter and so what I always like to do [2327] is I always like to use the equal to [2330] Case and sensitive filter for anything [2332] that requires manual input because I [2334] found that that's a pretty common [2335] failure mode [2337] okay great and then just from a like [2339] make design perspective I always like to [2341] be able to read the filters and so I'll [2343] usually this is just my OCD talking I'll [2345] have uh modules be about three little [2347] circles apart and then this is like a [2349] much bigger one here um so um I'm [2352] allowing myself to read the filter for [2354] maintainability reasons all right sweet [2356] so now that I have all that stuff set up [2357] what I'm going to do is I'm going to run [2358] this I'm actually going to test this out [2360] like practically using one of these [2364] records why don't we give Sarah some [2366] love Sarah deserves some l so uh I'm [2369] going to now book on the calendar as if [2372] I was Sarah so pretend that I just [2374] received a link to this [2377] calendar you know maybe um the [2380] salesperson just emailed this over to me [2382] and I want to book on the 21st at 10:30 [2385] a.m. my name is Sarah Mathers my email [2388] is Sarah left click. let me just make [2390] sure I spelled that right Sarah left [2392] click. good my mobile phone is the same [2394] as before I am stacked I'm making 120k [2398] I'm a boss and then yes I promise [2401] show for my [2402] appointment this scenario is running and [2405] we're waiting so I'm going to click [2406] confirm and we're going to run the [2409] test request received we listed them all [2412] and you'll see that one record ended up [2414] going through the filter so if we listed [2417] them all we had the Sarah mats record we [2419] had the Peter Wick record and then we [2421] had the Nix record if we click on this [2423] little button we'll actually get to see [2424] the records that made it through or it [2425] didn't so so uh in this case the lead [2427] email that made it through was equal to [2429] Sarah left click. because this condition [2431] was uh was met email equal to payload [2435] responses whatever and there's a little [2437] check mark there and so what that meant [2439] is that was the record that made it so [2441] when we edited the task with custom [2443] Fields the ID that we supplied if you [2446] guys remember was the task ID up here [2449] which is equivalent to Sarah Mathers [2451] which is [2453] nice and so what this means in practice [2455] is if we go back to our lead CRM you'll [2457] see that Sarah status is now changed to [2459] meeting booked and so now we have like a [2461] dynamic reactive CRM that doesn't [2464] require human input for every step of [2466] the [2466] process now you can imagine how you can [2468] apply the same [2470] idea not just to the um stage field but [2475] you can apply the same idea to anything [2477] you could for instance have a form that [2478] your sales people fill out at the end of [2480] every call and what you do is you catch [2482] that form as it comes in and then [2484] depending on a certain field in that [2486] form maybe it's like what's the outcome [2488] of the call depending on that field you [2490] could update certain things you could [2491] maybe update the stage to lost you know [2494] if it was bad or maybe you could update [2496] a field [2497] like um projected value or something [2500] like that and then start dealing with [2502] financials and start adding information [2503] there um so there's a lot of freedom [2505] that you have when you design these [2506] flows in clickup and in make.com you [2511] just need to sort of know what you sort [2513] of need to know like a vague outline of [2515] what it is that you can do before you [2517] you get to the point where you yourself [2519] can actually do it and that's really the [2520] purpose of this video just to show you [2522] that you can build a Dynamic Self a [2524] kneeling pipeline uh basically [2526] completely on your own last thing I'm [2528] going to show you is when something [2529] moves over to this one status we're just [2530] going to move it to the client's example [2532] build folder but that's really easy to [2533] do in Click up you just click [2534] automations add [2536] automations and then again we're going [2537] to go when a custom field changes the [2539] custom field is going to be stage when [2542] it changes to one we are going to can we [2545] move [2547] move to list there we go and we're going [2549] to move it [2550] to the clients example build [2554] folder and [2556] then yeah that should be [2559] it what we want basically to happen is [2561] let's say we close this deal with Sarah [2563] matthers let's move this to meeting book [2565] just so that our pipeline looks a little [2566] more full let's say we close this deal [2568] with Sarah matthers so maybe we go [2570] through the whole rig roll sending our [2571] proposal whatever uh now she's one [2573] what'll happen is clickup has built an [2575] automation that is is waiting to see [2576] when the stage is updated to one so [2578] that's uh list one right here so when [2582] custom Fields uh changes from anything [2584] to one then move to list client example [2589] build and unfortunately the clickup [2591] build can be pretty boring and slow so [2594] I'm going to refresh that okay great [2596] it's no longer here if we go to client's [2598] example build you'll see that there is [2600] now a new record in here called Sarahs [2603] now it's currently with the empty status [2604] because we didn't actually assign it a [2606] client type so what we could do for [2608] instance is we could create another [2609] automation back [2611] here where after you know Sarah moves or [2614] something like that we go over here and [2616] then like I don't know update field or [2617] change field let's do custom field we [2620] could then set a custom field and we [2622] could add whatever we wanted here um of [2625] course though this is Click UPS [2626] automation Builder not makes.com which [2628] is not the purpose of this course so [2629] I'll leave that as brief as possible [2632] suffice to say though yeah that is how [2633] you build a high quality self and [2635] healing pipeline um I know that this was [2637] more of a CRM thing than it was a [2638] make.com thing uh but I think now that [2640] you guys understand how to build out at [2642] least a few simple flows in make.com [2643] using web Hooks and reactive systems [2645] like this uh it'll take you very far and [2648] um the rest of these videos are going to [2649] basically show you how to build more and [2651] more complex systems using similar sorts [2653] of ideas thanks so much for watching if [2655] you guys got any comments questions [2657] anything like that just feel free to [2658] leave it down below in the uh in the [2660] YouTube video like I'm very reactive at [2662] this point in time I'm seeing a lot of [2664] success recording these videos which has [2665] been nice to all of your lovely support [2667] so um I'm also re extending the offer if [2669] you have a specific system you'd like me [2671] to build on camera then let me know as [2673] long as it's not super crazy complex and [2675] it would take me five hours I will [2676] probably do it um yeah this just [2679] something that I really like to do and I [2680] hope that comes across clear looking [2682] forward to the next video I'll leave the [2683] blueprints in the notion do thanks so [2685] much and [2694] byebye [2713] [Music] [2724] you

Video: https://www.youtube.com/watch?v=sGyj2HYZIEQ
Title: Make.com Webhooks (How To Connect Platforms Not Natively In Make)
[0] what's going on everybody welcome to [1] another video in our series make.com for [4] people who want to make real money and [6] in this video I'm going to show you guys [7] how to integrate make with basically any [10] CRM or project management system you [11] guys want using web hooks which are [13] probably one of the least well [15] understood features in make for reasons [17] that I do not understand myself uh it's [19] super simple to get up and running and [21] this video is going to show you how to [22] do everything so if you are an experienc [24] makeev or if you are somebody that's [26] trying to learn the fundamentals for the [27] first time it's probably one of the most [29] commonly requested use cases you're in [31] for a treat let's get into [37] it okay so I said we were going to [39] integrate make with monday.com but how [41] exactly are we going to do so well the [43] use case in this video is going to be [45] when I change a column called stage to [49] generate proposal I want that to trigger [51] a make scenario which goes out there and [53] then generates a proposal for us and I [55] want to do this using web hooks because [56] web hooks are real time they're [58] instantaneous uh they're just the best [60] solution for this particular problem um [62] so yeah we want to we want to template [64] out a proposal essentially just using [66] Monday and make.com uh I've set up a [68] random proposal here in uh Google Slides [71] which is probably the easiest way to get [73] up and running with proposal templating [75] if you've never used it before all you [76] basically have to do is just open up a [77] Google slide you can pick one of the [79] templates they provide whatever and then [81] uh anywhere that you want to put a [82] variable all you need to do is just put [84] two curly brackets and then like the [86] name of whatever the variable is that [87] you want and like you you make this up [89] so I just made up company name and I'm [91] going to Define it in make so I don't [93] know let's say you want um like a [95] company name here uh this is a [97] recruitment company example in my case [98] so I have like a rle name here which [100] we're going to help with um you could do [102] stuff like first name stuff like last [104] name prepared for whatever you could [106] even get a lot more um nuanced with it [108] if you wanted to use AI to like write [110] out large portions of the proposal [111] you're going to know how to do all that [112] stuff by the end of the video and I'm [114] just going to make sure as simple as [115] humanly possible um so if you use [117] monday.com you could literally just copy [118] a flow like this and save your sales [120] team anywhere from like 20 to 30% of [121] their time energy and money cuz proposal [123] is just such a pain in the ass but if uh [126] you're new to Monday and you've never [127] seen this before basically all crms work [129] in a similar way uh you have the name [131] column which is just where what defines [133] the primary or unique key of the record [135] so in this case we have a fictional [137] company called PA Incorporated uh coo we [140] have a stage column which is just a [141] bunch of different statuses you can [143] imagine how this is a pipeline from [145] start to finish the beginning stage is [147] Discovery call middle stage is proposal [148] sent third stage is uh Master Services [151] agreement stent maybe there's a stale [153] stage a one stage a loss stage you can [155] obviously Define these however you want [156] but this is how this particular company [157] decided to do it and then there are a [159] bunch of other columns for just personal [160] identifying information stuff that may [162] or may not be useful in the future or [164] stuff that the sales team wants to see [165] so yeah you can make this as complicated [167] or as simple as you want uh but this is [169] just the example that I picked because [170] it's a real world example this is [171] something that I'm actually developing [173] for a client as we speak okay so how do [175] we actually get up and running with this [177] well I mentioned we're going to use web [179] Hooks and and in monday.com using web [181] hooks is super simple all you need to do [183] is go over to the top right hand corner [185] of the page where it says [187] integrate and then look up web hook [191] there'll always be a default integration [193] for web Hooks and then you basically can [195] choose from one of the I don't know like [198] 25 options here or something uh the one [200] that's probably the most common is going [202] to [203] be when a status changes to something [205] send a web hook now in Monday a status [207] field is like one of those dropdowns [209] that I just show you like our stage [210] field uh and so Monday basically [212] provides a way to send a web Hook when a [215] status field changes to something which [216] is obviously super helpful and [218] beneficial for us now it's going to ask [219] us to choose an account we actually [221] don't have one yet so I'm just going to [222] click use another account and here it's [223] going to ask us to connect our web hook [225] URL so if you guys use make.com now [228] things are probably starting to get a [229] little familiar if I want to do web hook [232] in make let's assume that we just open [233] this puppy up uh we go down here type [237] web hook and then up at the top you'll [239] get this sort of like triangular uh [242] three node sort of thing what we're [243] going to be clicking on is custom web [245] hook which uh it says it's instant it [247] triggers whenever the web hook receives [249] data from technical terms a web hooks [251] are just vastly improved versions of [254] like polling systems uh in the past you [256] used to have to send a request to a [258] server every like five minutes or [260] something like that to see if some data [261] had been updated web hookers allow you [263] to do that instantly basically that [264] server will now just send you the data [265] when it's ready so I'm just going to [267] call this monday.com example web hook [270] let's do uh the date as well and then [273] I'm going to click save and then you'll [275] see that when you set up a web hook in [276] make.com when you set up basically like [278] a bin just awaiting some type of data it [281] gives you a whole URL up here and when [284] this URL is accessed that's how your web [286] hook will will fire essentially so make [288] is now listening for the data and we'll [289] determine the data structure from the [290] incoming data automatically to initiate [292] this please send your data sample to the [294] web hook address displayed above so I'm [297] going to copy this address to the [298] clipboard I'm going to go go back here [299] and I'm going to paste it in and now we [302] have the same web hook URL basically [304] from make.com being connected to Monday [307] now there's some Nuance to this and not [309] all platforms require what I'm about to [310] show you but monday.com doeses [312] specifically and sometimes this is good [314] to get in the habit of sending what's [315] called a web hook response so that's [317] what I'm going to do in a second [318] basically because monday.com has a [321] specific um requirement what they want [323] you to do is first they're going to send [326] over a request with a challenge [328] parameter and then you need to return [330] that as a response in order for them to [331] verify that like you're legit this isn't [333] just like some random server you're [334] sending data to uh and I know that can [336] sound pretty complicated so let's just [338] let's just take it at face value first [339] I'm going to click okay and then I'm [341] just going to run this and now this is [342] just going to be waiting data and then [344] connecting and it's going to say that we [345] failed to communicate with the URL [347] provided if we go back here you'll see [349] that the Run was actually completed and [350] there was a request that was sent and [352] received and if we click on it we'll see [354] that uh we received a bundle with a [356] variable called challenge with a long [358] sort of unique string and so what we [360] need to do is we actually need to send [361] this back to monday.com in order for [362] Monday to verify our web hook request so [365] if you think about it from Monday's [367] perspective why are they doing this [368] because they want to make sure that [369] anywhere they're sending data to is like [370] a legitimate place the way that you [373] solve this is you go down to web Hooks [374] and click web hook response as an action [377] you always want to send a 200 and then [379] the format that it's it's expecting is [381] what's called Json so JavaScript object [383] notation Json is just a curly brace and [386] then another curly brace and then inside [388] of that in this specific case [390] uh if we check here verification will be [393] first sent with a challenge parameter [395] that needs to be returned as a response [397] um so the key has to be called Challenge [400] and then the parameter has to be uh that [403] long string that starts with cz8 MN all [406] that stuff and so this is basically Json [408] format um we have an ID which in this [411] case is a string which is which is [413] encapsulated in these quotes and then we [415] also have another string that we're [416] returning as a challenge if this seems [418] complicated to you or if you're not [420] really sure how this works don't sweat [421] it monday.com is one of the only um crms [425] that require you to do this but I [426] thought I'd start with a hard one so we [429] send it back we receive the request here [431] and you see that module one has a [432] challenge which looks long and now it [434] starts with a t and a six then if we go [436] back here uh you'll see that we the [438] input to the module was this challenge [440] object that we set [442] up and then if we go back here you'll [444] see that monday.com accepted the request [446] and now it's asking us to change and [447] actually Define What stages we want [449] so sometimes you'll have to do that um [451] you can also just get in the habit of [453] doing this yourself I mean you know me [454] at this point probably I'm really [456] Scrappy I all I care about is getting [457] the MVP out as quickly as possible so [459] once I verified this I'll usually just [460] delete it I don't give a um what [462] we'll do now is we'll Define the column [464] that we want to watch so in this case if [467] you guys remember the column was stage [469] and then what we want to do is we want [470] to monitor when it [472] changes to generate proposal here so now [476] the rule is when stage changes to [478] generate proposal send a web Hook from [480] Monday okay and we'll add that to the [483] board so now we have sort of a rule set [485] up which is quite [487] nice okay okay now what I always like to [489] do is test so I'm going to run this I'm [492] going to go back here go to this column [494] where it says parent Incorporated and [495] then change it to generate proposal then [497] I'll move back here and what happened we [499] received the request and the really cool [501] part about Monday is in the request that [503] is sent it doesn't just include like the [505] fact that the stage was changed it [507] includes a bunch of information about [509] that record so we have uh the app that [512] it's coming from we have the type called [513] update column value the trigger time the [516] subscription ID the user ID all of this [518] random information that may or may not [520] actually be relevant to us now I know [522] from personal experience that there is [524] one piece of information that is hyper [525] relevant to us it's called the pulse ID [528] uh the pulse ID is basically called like [529] the record ID in Monday and what I mean [532] by this is if you click on this notice [533] how the URL changes to slash pulses [536] slash and then this 605 879 4861 almost [540] like a phone number you notice that [542] that's the same um key or yeah that's [545] the same key as this parameter here [547] pulse ID uh and so this is basically how [549] Monday represents the ID of a record [551] internally and so what we want to do is [554] now that we have the pulse ID we want to [556] send a request to Monday for this pulse [559] ID so that we can get all of the other [561] fields here like the company name for [564] instance or the role name or all of that [567] other information okay [570] so what we're going to do here now is [571] we're going to go to [572] Monday and there are a bunch of [574] different modules that we could use to [575] select but the one that's relevant for [577] us is going to be called get an item [581] right over here I'm going to drag it [586] out now the way that this works is we're [588] going to use this ID and then we are [591] going to grab the pulse ID here so 605 [594] 879 4861 and then I'm going to click [597] okay and now what should happen happen [599] is when we update this record um when we [601] change the status to get proposal or [604] generate proposal we should also [606] automatically pull the Monday ID uh and [608] then the whole record and that's how [610] we'll get all the other information [611] we'll get the D Link the estimated St [613] we'll get all this stuff so I'm just [615] going to change this back to Discovery [617] first and then I'm going to change it [618] back to generate proposal and we're [621] going to wait to catch the web [622] hook and you know sometimes this can [624] take anywhere from like 5 Seconds to [626] like 30 seconds um you know Monday is [629] like caching uh these queries so it [631] doesn't always happen immediately it [633] looks like this time is about 10 seconds [634] or [635] so so we Reed the same values that we [638] did [639] initially and now we've actually gone [641] through and we've gotten the item and [643] the way that we catch the get the [644] specific data about the item is under [646] mappable column values so you'll see [649] that there's a status field there's a [651] date one there's a date to there's a [654] person there's a link to contacts [657] there's an email address on file which [659] is just fake uh we have all of the [661] fields that we would ever possibly need [663] basically now in order to go out and and [665] generate a [666] proposal so what do we want to do um I'm [669] just going to use the deal name as the [670] company name so I mean that's not [672] entirely accurate because this say pair [673] Inc coo here but that's that's probably [675] just the simplest so let's just pretend [677] the deal name is the company name and [679] then I'm going to use this roll column [680] over here as well and I'm going to use [682] that to scaffold this [684] proposal so I'm going to go back here [686] now and now that I have the item I'm [688] going to to create a Google [694] slide there are a bunch of different uh [696] presentation options we can choose the [698] one that matters for us is this one here [700] create a presentation from a template so [702] we're going to create a new presentation [703] by replacing all tags like curly brace [706] curly brace variable curly brace curly [708] brace so this is what I mentioned [711] earlier and we're going to first um I'm [716] going to select this first so what do I [718] want to call this consult Consulting [719] proposal yeah let's see if we can find [721] Consulting proposal in here yes we can [724] it's the first result [728] awesome okay and then for title I'm just [730] going to call it proposal 4 and then [733] we're going to just make it be the name [735] that looks [736] good um these fields here copy a [739] presentation choose a drive I usually [741] just always leave them the same there's [742] some Nuance here um like if something [744] isn't in your Google Drive it's just [746] shared with you then in order to find it [747] you're going to have to go down to [748] shared with with me um sometimes you can [751] map the ID as well for instance if you [753] know the proposal ID for some weird [756] reason or maybe you're using it from [757] somewhere else this is the proposal ID [759] here you could theoretically go copy a [762] presentation by mapping and then just [765] paste in this proposal ID um so you [767] obviously have you know a lot of options [768] but just to keep things simple I'm going [770] to use by dropdown and then I'm going to [772] select it uh manually like [774] this okay great and you'll see that [776] there are some values that are sort of [777] pre-filled waiting for us uh the reason [779] why this happened is because we inserted [781] these curly braces in the Google slide [783] and so when you do that um it make.com [786] recognizes these when it goes in and [787] like you know looks through the file uh [790] and then this is how you this is how you [791] actually go through and replace them [792] which is pretty cool so what variable do [794] we need for the company [796] name well we need the uh name right here [800] so pair Inc for instance what name do we [803] need for the role name well we need and [807] the unfortunate thing is you can't [809] always see what the um variable name is [812] here like uh Monday is not very good [815] with sending over the variable names and [818] so you see it's like we have link text [820] email formula numbers yada yada um not [824] not very good in order to find that uh [827] what you do is you do what's called [828] Monday developer mode and I'm not going [830] to go through you know how to get Monday [832] developer mode um but you know feel free [834] to just Google how to like get Monday [836] developer mode when you click the three [838] brackets on the column it'll actually [840] show you what the column ID is uh and [842] that's only if you're in Dev mode which [843] I am so now I know that the column ID of [845] the field that I'm interested in is is [847] called roll so in order to find it I [849] just go back here sorry it's called text [852] so I scroll down to where it says text [853] you see it already says coo so I kind of [855] already knew that already um and then [858] we're good to go now we can choose to [860] add this um to just whatever your Google [863] Drive is we can also like create a [865] Google drive folder before and then put [867] this inside of that Google drive folder [869] if you want to remain more organized I'm [871] going to keep this as simple as possible [872] but suffice to say it's all very [874] straightforward um It'll ask you for the [876] new document location so let me just [878] click here and choose and I'm just going [880] to choose a backslash which is just like [882] the root of the [884] folder okay great that looks pretty [886] solid to me so now we have three steps [889] set up we have the trigger which [890] receives the web Hook from Monday then [892] we have an intermediary step which you [894] can kind of think of in developer terms [896] as like your database lookup I mean this [898] is a CR RM which is slightly different [899] but for all intents and purposes you're [901] like looking up values in Monday and [903] then we have a Google slide at the end [905] uh which is going to like generate a a [907] document for [908] us now I want to go one step further and [911] I want to take the URL that's generated [912] from that Google slide and then I want [914] to put that back in monday.com and what [916] I want to do is I want to put it under [918] this column here called proposal so that [920] when a salesperson changes the status to [922] generate proposal they immediately get a [924] link there that then they can click make [926] some minor edits to that they need and [928] then maybe send out afterwards we could [930] obviously also just send these out [931] directly to the customer we have the [933] deal email address right over here so [936] you know you can imagine a workflow [937] where maybe you change this to generate [939] proposal it generates the proposal and [941] then it automatically sends it to [942] whatever this email address is the sky [944] the limit and you can automate it [945] however the hell you want but for this [947] particular purpose I'm just pretending [949] that maybe you guys still want to [950] customize it or maybe you just want to [951] draft it you don't actually want to send [953] it so uh first things first I'm just [955] going to test this to make sure that [956] this flow works so I'm going to select [959] this I'm going to change the status back [961] to Discovery and I'm going to go back to [964] generate proposal then alt tab over and [967] you see module one was fired then module [969] two was fired we got all the data from [971] Monday and now Google Slides is [973] operating and you see that the Google [975] Slides um function completed and you'll [978] see that what it outputs is What's [979] called the presentation ID it doesn't [981] actually give you a link or anything [983] like that uh and that's kind of you know [985] difficult for us because we want a link [986] uh we can't really use this presentation [988] ID very effectively um I am going to [991] just because I understand how these work [992] I'm going to access the presentation ID [994] directly just so we can see the example [996] um but this isn't really what we want to [998] do um okay great so we see that this [1000] worked it was Consulting for pair [1002] Incorporated right here's the company [1003] name a brief look at recruiting your [1005] next coo was the was the rle name um I [1008] also added the variable name in the [1009] header and in the footer and stuff so [1011] that was updated too uh so you know you [1013] see that this is possible and it works [1015] um but why don't we now work on [1016] generating that link and then updating [1018] The Proposal column that would probably [1020] make it as simple as possible so the way [1022] that you do that in make.com is [1025] basically uh the Google ecosystem [1027] differentiates between a Google doc and [1029] a Google sheet a Google slide and then [1031] just like a Google drive file and so all [1034] of these are technically being generated [1035] in Google Drive and so we need to use [1037] the Google drive module in order to [1040] access this and uh and make it sharable [1043] so if I click this you'll see there are [1044] a million in one different modules that [1046] I could use the one that we interested [1048] in is one called get a share link which [1051] is right over here so this allows you to [1052] get a sharable link for a file or folder [1055] and the reason why Google has separated [1057] these is because you know there are many [1059] instances in which you want to create a [1060] presentation but you don't actually want [1061] to share it they just wanted to give you [1063] the option to do that without [1064] necessarily uh you you know draining [1066] their own internal [1068] resources so uh we're going to get a [1071] share link um let me think about this I [1074] should probably [1076] use this one here [1079] so I'm connecting to the account that [1080] has access to that file that I just [1082] generated uh I'm now going to choose a [1084] drive it's probably going to be in my [1085] drive we're going to select a file not a [1087] folder the file ID is up next and as I [1090] mentioned Google drive files um you know [1094] are homologous with uh the IDS or the [1097] file IDs in Google Drive or homologus [1099] with like the Google Doc ID or the [1100] Google sheet ID or the Google [1102] Presentation ID and so in this case it's [1104] just called the presentation ID we'd [1106] basically stick that in here and then it [1108] would find that file in the Google Drive [1110] ecosystem now there are there's some [1112] Nuance here um if you aren't familiar [1114] with the way that Google does rols [1115] usually when you share like a Google doc [1117] or a Google sheet or something you can [1118] Define the level of permission that you [1120] want to give somebody in my case I know [1122] that the level of permission I want to [1123] give somebody is the writer [1125] permission um and I want to generate [1127] this for anyone so I don't just want to [1129] they don't have to be a user at my [1130] domain or anything like that I just want [1132] anyone to be able to see [1133] it and then um allow file Discovery it's [1137] just going to be uh AC to no I don't [1139] want people to be able to just like [1140] browse Google to find this uh I only [1142] want them to be able to uh find this if [1145] you know this is like explicitly given [1146] to them okay great so what I'm going to [1149] do now is I'm just going to test this [1150] directly the way that I'm going to do [1152] that is I'm going to copy over this [1153] presentation ID so I just control seed [1156] and then I'm going to rightclick the [1157] Google Drive get a share link module and [1159] then run it I'm going to paste this [1160] presentation ID in so I'm getting the [1163] hardcoded ID from the Google slide that [1165] I just generated and I'm using it now to [1167] one time one module test [1170] this so I right clicked it scenario [1173] owner is completed and now we're going [1174] to double check to see what the share [1176] link is you see how the output of the [1178] module has a share link right down here [1181] exactly what we want and then I'm going [1183] to paste this in and we're going to see [1186] our accessible file so obviously that's [1189] not the file that we want because this [1190] is still uh templated so this doesn't [1194] have the correct [1196] um uh like this uh uh doesn't have the [1198] correct variable filled in and I think I [1200] know the reason why pretty sure my [1202] dumbass just copied over the completed [1205] the template rather than the actual file [1207] so let me see if I can get the actual ID [1210] that I wanted right over here yeah there [1212] we [1213] go let's run this with the actual [1216] presentation [1218] ID okay there we [1220] go now this one will say pair Inc [1223] beautiful and so now we have access to [1225] the link specifically for um The [1229] Proposal that we just generated what I [1231] want to do now is I want to make this [1232] General and then I want to add another [1234] step in here that goes back into our [1235] monday.com CRM and then it updates The [1237] Proposal column and so how do you do [1239] that well I'm going to go back to Monday [1242] and then I'm going to say we can scroll [1244] through this together until we find [1248] it what we need to do is we need to [1250] basically um update an item or add [1253] information to an [1255] item [1256] so let's see [1259] here update column values of a specific [1262] item that's this one right [1265] here so the column value we're going to [1267] be updating obviously is going to be oh [1270] first we have to select the board ID so [1273] I know that it's called deals that's its [1275] name the item ID that we're going to [1277] select we're not actually going to [1278] hardcode it in what we're going to do is [1281] we're going to map it and what mapping [1283] is is it's just a way to access the IDS [1286] of fields that we referencing from [1289] earlier um which may sound complicated [1292] but essentially um make.com will always [1294] allow you to either try and hardcode [1296] this so every single time that the [1298] scenario runs we only ever want it to [1300] run on you know the record called HSBC [1303] which is down here or it allows you to [1305] make it Dynamic so that you know the [1308] item that we reference depends on a [1309] previous step that we've already set up [1312] and so that's what we want to do here if [1313] you guys remember if we scroll all the [1314] way down to the very bottom of this [1316] whole like variable list there was a [1318] variable called pulse ID which [1320] referenced the [1323] original um record whose stage that we [1326] updated to generate proposal and so [1329] we're just going to reuse this because [1330] that is the item id of the record in [1334] monday.com next step is we're going to [1336] change a column value so go to column ID [1339] here and then if you guys remember what [1341] we want to change is we want to change [1342] the column called St uh no let's do [1345] proposal first and I'll change stage [1347] after so let's do uh [1350] proposal and then we want to add the [1352] link [1353] in and the way that Monday specifically [1355] does links um and I only know because I [1358] develop on this platform all the time is [1359] it allows you to put a URL in and then [1361] it also allows you to put a text field [1362] in you'll notice that there's some [1364] Nuance if you look at the URL field it's [1366] thicker and Bolder than the text field [1369] usually uh fields that are bold in [1371] make.com are required and then fields [1373] that aren't you know that are kind of [1374] skinny um they're optional and so I know [1377] for a fact that all we need to do is put [1379] a URL here so that's what I'm going to [1380] do that we don't actually have to put [1381] any text here but you could if you [1383] wanted to you could call this like [1384] Google drive or maybe you could just [1385] copy of the [1386] link um I do want to change one other [1389] thing what I noticed while I was [1391] developing this was when the record [1394] stage is changed to generate proposal uh [1397] it stays at generate proposal I would [1399] prefer if it goes back to Discovery just [1401] to um inform the rest of the team that [1404] this is done so I want them to be able [1406] to go from Discovery to generate [1407] proposal they'll see the status change [1409] back to Discovery and that'll notify [1411] them that they're basically good to go [1412] this is a minor ux pattern but I [1414] recommend using ux patterns like this [1416] wherever possible otherwise you know if [1418] you have a team with a big 20 30 40 [1421] person sales team uh it can get pretty [1423] prettyy complicated and people can kind [1424] of forget which things have been [1425] generated which things haven't so I'm [1427] going to go back here to [1429] stage select that and then under index [1432] and label I'm just going to click index [1433] Monday has different ways for [1435] representing um these things but both [1437] are equivalent [1438] and then I'm going to scroll down and [1440] I'm going to change the stage back to [1442] Discovery and then I'm going to click [1444] okay so if you're following along this [1447] scenario so far does five things the [1449] first is it waits to catch a web Hook [1452] from Monday and that web Hook is sent [1454] out when the stage changes to one called [1457] generate proposal when that happens we [1459] receive a bunch of information on the [1461] front end including the ID of the record [1463] that we're interested in what we do is [1465] we take that record and we put it into [1468] monday.com using this ID field that [1471] allows us to then pull all of the data [1473] from that specific record including like [1476] the deal length the last activity the [1478] owner the close date The Proposal field [1481] the role field the deal email address we [1483] basically like we'll query [1487] monday.com next what we do is we use a [1490] pre-created Google slide template to [1492] generate a proposal and then fill in [1495] that proposal variable with a bunch of [1497] the custom fields that we just pulled [1499] from [1499] Monday and then because Google doesn't [1502] natively allow you to share that link [1503] with other people what we're doing is we [1504] are getting a share [1507] link and then the final thing that we do [1509] is we will add that link back to the [1512] monday.com record in the proposal column [1516] and then we also update the stage back [1518] to [1519] Discovery so now that I think we all [1521] understand what exactly is going on [1523] let's run it in full from start to [1525] finish I'm going to click run so that [1527] it's [1528] I'll go back to Deals here and what I'm [1530] going to do is I'm going to update this [1531] generate proposal and I'm going to try [1533] and tab back so we can see it catch okay [1537] great and we [1538] did now it's getting that item it's then [1541] generating The Proposal in Google Slides [1543] it's then generating a share link and [1545] then finally it's adding the column [1548] values that we wanted it to add back to [1549] Monday so let's go to Monday and see [1551] what [1551] happened if you'll see the proposal [1554] field has now been filled out with a [1555] long Google Drive Link and this is now [1557] the link to that finished proposal we [1559] can give it a click through it should [1560] say proposal for pair Incorporated which [1562] it does a brief look at recruiting our [1563] next Co awesome then if we go all the [1566] way back to the left the stage field is [1567] now back to discovery which is adequate [1570] user um basically like a user experience [1572] update so anybody that's using this now [1574] knows okay we're good to go we can [1576] proceed with the next step of the [1577] process all right so that may have [1580] seemed simple to you Monday and make.com [1582] Veterans out there or it may have seemed [1584] unreasonably complicated to you make.com [1587] uh newbies out there but I assure you [1589] that this design pattern is basically [1591] all you need to know to do anything of [1593] relevance with a CRM and then a third [1596] party external tool the vast majority of [1599] the time your value as an integrator as [1601] an automations consultant is going to be [1603] to come in and then just to pull from a [1605] bunch of data that's already available [1607] to template out a feature or template [1609] out a document or something like that [1611] and this is an extremely simple design [1613] pattern that in the companies that I [1615] work with saves them anywhere from 5 to [1617] 10% of their margin because now their [1618] sales team doesn't really have to do [1620] anything except for the high leverage [1621] activities that actually make the [1623] company money usually the selling part [1625] so I hope you guys liked this video if [1627] you got any requests for specific [1629] systems you want me to set up please [1631] send them over otherwise like comment [1634] subscribe and we'll see you in the next [1636] one thanks

Video: https://www.youtube.com/watch?v=LbDTsMDLU4c
Title: Make.com Email Systems & AI Autoresponders
[0] what's going on everybody hope you're [2] enjoying make but for people who want to [4] make real money in this video we're [6] going to dive into detail on how to [8] build an email autoresponder system it's [10] going to incorporate email modules it's [11] going to incorporate AI it's going to [13] incorporate a couple of things that even [15] experienced make developers don't know [17] how to do so if that sounds like [19] something you're interested in stay [20] tuned and let's get into [25] it okay so what exactly are we going to [27] be doing in this video we're going to be [29] building out a system that can basically [32] watch for new notifications that look [34] something like this that may be coming [37] from like an agency service or maybe a [39] form fill on a website or maybe uh maybe [42] it's like a new lead notification from [43] Facebook ads or something like this and [45] then what we're going to be doing is [46] we're going to be automatically [47] responding to these emails using AI but [50] in such a way that like you're never [52] really worried about the quality of the [53] response from AI it's going to be like [54] quite quite standardized quite [56] proceduralized now the reason why this [58] is what I'd consider a high system is [59] because there are tons of coaching [61] companies out there and agencies that [64] will get emails and new lead [66] notifications and form fills like this [68] and then they just don't respond to them [69] for hours and sometimes it's days what [72] you can do to extremely quickly increase [74] retention on basically any offer is just [77] to make sure that when somebody fills [78] out a form they're receiving some type [79] of message within the first couple of [80] minutes just confirming that receipt but [83] not just like in a transactional way not [84] just like we've received your email but [86] in like a personal customized way this [88] is probably one of the easiest simplest [90] levers that I could think to pull for [92] high perceived customer experience High [93] perceived customer value and um having [96] little like Snippets of systems like [97] this um in your in your customer [99] acquisition process or funnel can easily [101] improve conversion rate with like 5 to [102] 10% it's stupid simple and it's a system [105] that'll take like literally 15 minutes [107] or so to set up so I wanted to start [109] with this just because tons of people um [112] you know want to process leads better [114] and this is just like a little stem that [115] you can then use to do whatever you want [117] with the lead you could send them an [118] email and then put them in your CRM you [119] could send them an email subscribe them [121] to a mail chimp newsletter uh you could [123] do literally anything with it and that's [125] what we're going to do so uh first [127] things first what we are going to do is [129] we need a way to just thinking about [131] this from a bird's eye view we need a [133] way to trigger a make scenario when we [136] receive a new email so that's the first [138] thing that I'm thinking about then we [139] need a way to digest all of this and [142] then write like a customized email in [144] response or in reply uh which is [146] something that is quite straightforward [147] to do with AI which I'll show you in a [149] second [150] um and then you know to make it smart um [153] like we shouldn't send this immediately [155] we should wait like a couple of seconds [156] maybe we should wait like 79 seconds or [159] something because if you think about it [161] like if we want to imply that it's a [163] human that's actually going through and [164] then writing all of these emails um no [167] human would be able to write an email in [168] 3 seconds that like you know is [169] customized addresses all their stuff so [171] we're going to want to like wait a [172] little while um I think that's about it [175] yeah that seems pretty simple so how do [177] you actually develop a system that I [178] just described in practice [180] um you know and how you know if you guys [182] are running an agency or or a coaching [183] funnel or something how exactly would [185] you guys do this yourself with or [187] without an automation person what I've [189] done here is I've gone to my make.com [191] account and then I've scrolled down [195] to let me just exit out of here I've uh [198] created a new folder called example [201] builds and I'm pretty laggy right now so [204] give me one [207] second okay I've created a folder called [209] example builds [210] click on that [212] folder it'll filter out everything [215] except for um you know everything in [217] everything that's tagged as an example [219] build and so I've already set one of [220] these up earlier just so as I was [221] testing the scenario but I'm going to [222] click create a new scenario and you guys [223] can follow along with me from [226] scratch so assuming that this is an [228] entirely new scenario uh you know we've [230] never even set up an email module before [233] how would you go from this blank screen [235] to A system that catches new lead [237] notifications as they come in in a [238] specific format and then it responds [240] them automatically well here's what I [241] would do click on this button the first [244] thing that I would do is I would find an [246] email module and you'll see that there [249] is a trigger in the email module called [251] watch emails this trigger when a new [253] email is received for processing [254] according to specified criteria pretty [256] simple sounds like exactly what we want [258] now what we need to do here is we need [260] to set up a connection and we need to [261] set up the connection um with the email [265] address that is going to be receiving [266] emails a lot of the time that might be [268] like an info at for you guys or maybe [270] like some sales at email or maybe like [272] the email of a specific salesperson in [274] my case it's this one right here Nick 1C [275] copy.com so I need to basically add a [278] connection to Nick at1c copy.com it's a [280] Google email so it'll be Google off and [282] I'm going to say Nick at1c copy.com and [284] then I'll do February 17224 and click [287] save now we may have to do some [290] two-factor authentication we [291] will [294] see nope so now it just wants to access [296] our make account we'll click allow and [298] now it's like going to be reading uh our [300] our Gmail basically uh and then we can [302] select a folder to choose um this is [304] sort of annoying but you just always [306] have to select a folder so I click inbox [309] okay criteria uh do we want all emails [311] only read emails or only unread emails [314] um I'm going to just do all emails for [315] now because I'm going to want to test [316] this sender email address I mean for the [319] purposes of the demonstration I know [320] that the email addresses or emails are [322] always going to be coming from Nick left [323] click. so I'm just going to be [325] granular [327] um these are recipient email so that [330] might be like outgoing emails I think [331] which I'm not going to worry about [332] subject so new lead notification example [336] is going to be the subject so I'm going [337] to copy this [339] over paste that in phrase uh you can [343] actually select emails based off [344] specific phrases that you see so in our [347] case we don't really need that because [348] I'm just going to process all emails [349] that come in with new lead notification [351] example uh do we want to Mark the [352] messages as red when fetch I'm just [354] going to click no and then maximum [356] number of results being one okay cool [358] that looks pretty straightfor forward uh [360] this should be good uh and then here's [363] like one of the secret sauces that a lot [365] of make devs just don't even fully [367] understand you can choose where to start [369] the processing of this so that you can [371] technically go and back calculate or [373] back log um to do to do test if you've [375] run this before so I'm going to click [377] select the first [379] email it's going to run the filter right [381] now and you see it has three and so [383] looks like the first one was sent here [385] or no back here and so I'm just going to [387] start there so that I can just do a [388] little bit of testing if that makes [390] sense okay great so I'm going to click [392] run and you'll see that it just ran once [395] and it pulled one of the messages that I [397] sent to myself earlier and the message [399] that is sent has all of this information [401] it has text content HTML content sender [405] recipient just all of these fields that [407] we can use in automations later on and [409] you can see it actually didn't just pull [411] that one it pulled uh what looks like [412] all of them and because I set the [415] maximum number of results of 42 which is [416] kind of dumb so I'm I'm going to go back [418] here I'm going to right click choose [420] where to start I'll go back and select [422] the first email again uh because I just [424] always want to be able to to have a test [426] okay great and then let's just run this [428] one more time so we can only get that [429] single email okay great yeah yeah that's [431] the one right there um the reason why [433] you always do this anytime you start [434] some type of email modules because you [435] want to verify that your filter is [436] correct you want to verify that you know [438] you have the fields that you're going to [439] need to build out the rest of the flow [440] and so that's what we just did we got a [442] text content field and HTML content [444] field now uh you may think we need to do [446] some fancy parsing magic like a lot of [448] people that I've developed flows now are [450] going to be like ah well now I have to [451] like isolate the first name isolate the [452] last name do all this fun stuff you [454] don't have to do any of that and [455] this is why these systems take less than [457] like 10 minutes of set up what we're [459] going to do now is we're going to use AI [460] to do all that for us so I'm going to go [462] to open [463] AI I'm going to click on here and then [466] what I'm going to do is create a [469] completion and then connect it like this [471] now in order for this to work you do of [473] course need an open AI account if you go [476] to [477] open.com in the top rightand corner it [479] will say login so you're going to need [480] to give that a quick little login select [482] what you want either chat GPT or API in [485] our case excuse me we're going to want [487] the [488] API log in do all the fun stuff that you [490] need to do basically to get to this page [493] and then you're going to have to connect [495] your chat GPT account or not chat GPT [497] account rather you're going to have to [498] connect your uh openai account so let me [501] just pretend I'm doing this first time [502] it'll ask for an API key and then to ask [504] for an organization ID so I'm not going [506] to actually connect my own API key and [508] stuff but the organiz ID you will find [510] if you go down to settings and [511] organization so you can copy that in and [513] then paste that in and then the API key [515] if you go down to API keys and then you [519] create a new secret key um then it'll [521] automatically generate one for you that [523] you can then paste in there and that's [525] how you do the connection this is going [526] to be the first time if you're watching [527] uh this video course that we've [529] connected without using like Google [530] authentication and there are a bunch of [532] apis out there usually like the higher [533] value ones to be honest where you just [535] have to like print out your own API key [537] and stick it in like this but anyway I'm [539] assuming that you do that you'll click [540] save it'll go through it'll verify the [541] connection I already have an API key set [543] up with with my own business once I copy [545] so I'm just going to use that one okay [547] now uh what do we do well now we're [549] actually running like AI um and if you [552] haven't paid money you may not have [554] access to all the gp4 end points [556] although again if you're watching this [557] video in 2029 maybe we're at like gpt7 [559] or something and just AGI has been [560] achieved um but uh if you need to if you [563] go down to billing uh add a payment [566] method uh then you can just add your own [568] payment method and then should unlock [569] GPT 4 for you uh if not then uh you can [572] also use GPT 3.5 turbo and it should [575] work quite reasonably well I'm just [576] going to use gp4 for this so I'm going [579] to go let's just use the base GPT 4 [581] model now I'm going to Define just some [584] prompts and if this is a first- Time [585] prompt engineering with gpts there are [588] there is a system prompt which is where [589] you tell the system how it identifies as [592] uh you know it's like you identify as a [593] boy you identify as a girl or something [595] uh same thing here it's like you're [597] identifying as a writing assistant a [599] sales administrator uh filter Queen I [601] don't know whatever the hell you want to [602] call it so in this case I'm going to say [604] you're an [606] intelligent email assistant so that is [610] what it is identifying as I always say [612] that it's intelligent just because uh my [614] humble opinion it EES out a little bit [616] of value then you can define a user [619] prompt which is what you send to the AI [620] and then you can also Define a system [622] prompt which is what it sends back to [623] you and usually when you're defining [624] like a system of prompts you have to [626] train it a little bit so you have to [627] give it a couple of examples that's what [628] I'm going to do here here so first I'm [630] going to give it some instructions um [633] let's just have it write the whole email [635] yeah that'd be good let's [639] say you're monitoring a sales inbox that [643] receives inquiries for a coaching offer [647] that I run your task is [650] to digest the sales [653] email and produce a high quality [656] customized response in return [661] make sure the responses are Spartan in [665] nature and don't use any frilly language [667] let's just put it that way okay great so [671] now what I'm going to do is I'm just [672] going to give it a bunch of examples of [673] how I want it to respond so I'm going to [675] go back here click user and then I'm [677] going to paste in um let's do this I'll [680] paste in this so copy I'll paste so this [684] is going to be the message that it's [685] receiving name Michael Jackson type High [687] ticket monthly commitment whatever hey [689] and then what I wanted to do is I wanted [691] to respond with the whole full email [694] text body uh that's high quality and [696] that's like simple and I've created a [698] template for this which is somewhere [700] around here so let me see if I can just [701] open up a new email address and and get [704] it it's probably in draft [706] somewhere yeah there you go that's it so [710] I'm going to go back here and I'm going [711] to paste it in so uh this is what I [712] wanted to send back I wanted to say hey [715] name Nick here thanks for reaching out [718] and I appreciate your interest in my my [719] high tiet e-commerce offer happy to help [720] you get started and I want to say I just [722] let someone on my team know about this [723] and they'll give you a call in a couple [724] minutes to dive into detail looking [725] forward to working with you then I'll [727] say cheers and then I'll say Nick and [730] then obviously uh if somebody sends me [732] over Michael Jackson I'll say Michael [734] and now why don't we customize this a [736] little bit so that [738] um yeah why don't we customize this a [740] little bit just to teach it how it works [742] so hi I really want to get started in [743] your high ticket month e-commerce offer [745] hi thanks rer I appreciate your interest [746] in my high ticket e-commerce offer good [747] happy to help you get started want to [749] know how to get started okay good yeah [750] yeah this is a good template I think I [751] wrote this specifically in response to [752] that um so this is the email that we [754] wanted to to put out um now there are a [756] couple of things here uh to keep in mind [759] um uh spacing and stuff like that can be [761] kind of weird in email so um we may have [763] to go back in here and have it like [765] generate code instead of the actual [766] email these BR tags are basically just [768] like an extra line break between one [770] line and the other um but we'll see how [772] it goes first and then assuming that [773] there are no problems then we'll kind of [774] take it from there um what I'm going to [776] do here is now because I have that one [778] example I'm I'm just going to make the [779] message content uh the [782] text and then we're going to and then [785] the next response is going to be from [786] the [787] assistant um so that's kind of like what [789] we're going to wait for at this point [791] which I'm I'm personally looking forward [795] to okay appears to be a little bit of [798] lag so I don't know if I [802] can yeah had to exit out of that that's [804] unfortunate let's see if that saved yeah [806] no it didn't save so I'm just going to [807] reset that up uh really [810] quickly let's say you're an intelligent [813] email responding assistant I think I [816] said something along those lines and [818] then let me go [820] user [822] um you're currently monitoring an inbox [825] you see I'm using different text as [826] before it's not a big deal as long as [828] you speak in English plain language it's [830] okay you can lose it all and just redo [831] it [832] again email inbox for oh let's do a [836] sales email inbox for my high ticket [840] coaching [842] offer um for every inquiry you receive [846] digest it and respond appropriately make [850] sure to use Spartan no FRS [853] language probably with a customized [856] message that's tuned to the particular [859] Prospect make sure you Spartan no fro [860] language okay great let's do that um [864] just going to save it here by clicking [866] okay just in case we lose that again and [868] and then I'll go to assistant or no I'll [871] go to [871] user I'll paste in that message [877] here and then I'm going to go in and [880] then paste my response as the assistant [884] so and then I'm also going to add in my [887] uh my little new lines and stuff that's [889] very [892] important okay [895] great and then we're going to say hey [897] Michael so hopefully me doing it [901] twice um is enough to really just drive [904] home how this works and then I'm going [906] to add and a uh user prompt one last [909] time and then I'm going to make the [911] message content the text content from [913] the previous email and so I'm just [915] clicking text content and this is going [916] to insert that variable from the [918] previous step in the [919] flow okay that looks pretty simple uh [922] why don't we actually run this thing and [923] see what happens let me just double [924] check model is GPT 4 that's good system [927] okay user prompt all right oh uh there [929] is one more thing that I'll change I [931] love changing the temperature and making [932] it a little bit lower um I've played [935] around with these models quite a bit I [936] find gb4 it's just a little too frilly [937] for me so let's do that I'm going to [940] save this [942] scenario and then I'm going to click run [943] we going to see what happens so we [945] pulled an email now gb4 is writing it if [949] I click here and I go usage or sorry [952] choices one [955] message and now we say hi Peter I'm Nick [957] and I got your message it's it's awesome [958] to hear you're interested in getting [959] into e-commerce we'll teach you [960] everything you need to know start from [961] scratch I've passed your message on to [963] my team and they'll be in touch shortly [964] to explain the process looking forward [965] to helping you start your journey best [966] Nick awesome that's a fantastic email [969] and something that I would have probably [970] sent myself now the next step is just [973] hooking this back up to an email flow [975] and then sending that email directly to [977] the prospect uh what I'm going to do [978] here though is I'm going to add a weight [980] first so that weight gives us maybe like [982] 60 to 75 seconds just so that there's [985] plausible deniability that a human being [986] actually wrote this again we want to [988] have an outsized impact on you know [990] conversion rate and stuff like that so [992] let's just pretend let's just do 90 [993] seconds to start um maybe it'll take 90 [996] seconds if somebody's constantly [997] monitoring an email inbox uh they [999] receive your email might take them 90 [1000] seconds to do it so yeah uh and then I'm [1003] going to go back to my emails and then [1006] I'm going to click actions send an [1009] email and then I'm going to go to the [1011] email inbox here of relevance so that [1013] should be Nick at1c copy.com February [1016] 17th 2024 that's right save message [1018] after sending I do like to save the [1019] message after sending uh the reason why [1021] they have to divide this into two parts [1022] is because of Gmail API specification [1025] issues where Gmail just requires [1027] additional connections basically in [1028] order to save an email uh we'll save it [1031] into the sent mail folder obviously uh [1033] the email address now this is going to [1034] be an interesting one because we're um [1038] oh jeez I don't think I actually [1039] included an email address in here oh [1041] that's kind of [1042] dumb um yeah okay so ideally we'd have [1045] an email address feature in [1047] here so that doesn't work why don't we [1050] send another one here just as I'm doing [1052] this [1054] example let's send it to nick1 Second [1058] copy.com then let's say name [1063] whatever and let's just pretend there's [1065] like an actual email address in here [1067] too um let's just do Nick at left click. [1070] a and you lead notification example okay [1073] great let's pretend this is from [1076] Nick uh let's actually just do like [1080] Noah hey thanks for this I'm new to [1083] e-commerce and can't [1086] wait to get started okay great Yeah we [1088] actually need an email to parse in order [1090] to send the thing to obviously um [1093] so let's make sure we take care of that [1095] too uh very simple and easy way to do so [1097] if you don't want to screw with email [1098] Parcels is just add another gp4 module [1101] and then just give it uh new [1102] instructions your intelligent email [1103] responding [1104] assistant extract the email from The [1107] Following [1110] text and then I'm just going to [1115] do uh let's do [1118] michaelj 289 [1121] gmail.com okay let's just teach it what [1123] we want it to do okay great that should [1126] be good that should be good all right [1129] I'm going to rename this module here so [1130] that it is um right customized [1134] reply and then I'm going to rename this [1136] module here so that it's extract [1138] email just so that it's very clear what [1140] we're [1141] doing and then I'm going [1144] to test this on some text so let me go [1148] back [1149] here and then just see how this [1155] works and it should just output uh Nick [1158] left click. so we're going to go back to [1160] choices one message okay great yeah so [1163] it has the content correctly okay that [1166] was sort of annoying uh but here we are [1168] um so now we need to add that in as the [1171] second email um and so here's a little [1175] hack that I think a lot of people don't [1177] fully understand uh in make.com either [1180] um you see how right now if I were like [1182] go and then click one of these things [1184] like content this little green box pops [1186] up and this green box is like some [1188] special formatting that make.com [1190] provides that's different from um just [1193] regular text well there's actually a way [1194] that you could just like add that in um [1197] and the way that make does it is they [1199] use curly braces so they do curly brace [1201] curly brace and then they'll use the [1203] number of the module so you see here [1204] this says two this here says five this [1206] here says three um you can just click [1209] you can just write the uh whatever the [1211] name of the module is so I'm just going [1212] to do let's say let's just do number one [1215] so [1216] one and we'll just go text content and [1219] then curly brace curly brace you'll see [1221] how uh that's not transform just a piece [1223] of text into like this drag and [1225] droppable sort of variable thing uh we [1227] can actually use that in order to like [1229] access different parts of the flow at [1230] any time that we need so I just wanted [1232] to point that out to you guys um I'm not [1234] going to do that here because I think [1236] it's we're still just a little bit too [1237] simple to be diving into complex flows [1239] like that um but anywh who uh what we [1242] need to do is we need to extract this [1244] email address if we click uh to email [1247] address here sometimes you have to [1249] refresh it uh you'll then see that in [1251] email in uh module number five create a [1254] completion if we go down to choices go [1256] down to message we can access the cont [1258] content so that's what we want we just [1259] want the email [1260] address um the subject line why don't we [1266] do email received talk to you soon for [1270] the content type why don't we do plain [1272] text and then the actual content that [1273] we're going to put in we're going to put [1275] in the text from the previous module the [1277] one that generated the custom email so [1279] we go back down here to module number [1281] two which is this one here that writes [1283] the customized reply we'll go down to [1285] message and then [1287] content now I want to see how this works [1289] um this may be an issue [1292] because uh sometimes email formatting [1295] doesn't add spaces in I should also [1297] remove this module here just for now so [1298] I'm going to right click click onlink [1300] because I don't actually want to wait 90 [1301] seconds to test this let's go back here [1304] and then leave this module up here just [1305] for now and then why don't we start with [1310] that last email that I sent the one that [1313] has [1316] um uh the one that has the email address [1318] in the message body okay great so let's [1320] do that and then let's run it and let's [1322] just see how it [1325] goes we receive the [1328] email we wrote the customized reply [1331] let's check out what that message looks [1334] like cool looks good we then extracted [1337] the email address let's see what that [1339] looks [1340] like cool that's the right email and [1342] then we sent an email [1344] reply let's see what the send was it was [1347] high Noah Nick here appr Your Enthusiasm [1348] about diving in e-commerce this a [1349] thrilling space to be in I've got your [1351] details and someone for my team we'll be [1352] reaching out to you shortly to get you [1353] started on this exciting Journey watch [1354] out for that email all the best neck [1356] that looks great why don't we go back to [1359] the email address that had that sent so [1362] in my case it would be this one here and [1365] this is what it's going to look like on [1366] the back end so as I'm sure you could [1368] tell this is pretty professional and the [1370] fact that you got you get it within 90 [1371] seconds or so uh is very high quality [1374] it's very like uh the sort of like [1376] professional user experience that a lot [1378] of companies that are doing between 300 [1379] to 500k a month want to put into [1382] practice as you saw I built that entire [1384] flow out in just a couple minutes we had [1386] a bunch of road maps uh we we had a [1388] bunch of Road bumps involved where like [1389] you know I didn't set the testing text [1391] correctly or anything like that but one [1393] thing that I think a lot of people that [1396] may be watching this for the first time [1399] um will realize is how you can just use [1401] AI to do a lot of the stuff that you [1402] used to have to use procedural steps for [1404] where you'd like have to parse text [1406] manually and do all that sort of stuff [1408] I will say that AI isn't always 100% [1410] reliable and so there will be some [1411] errors with this method but it's still a [1413] very good and easy way to get up and [1414] running to build infrastructure out [1416] without necessarily having to do all of [1418] like the fancy hard stuff of like [1419] parsing and that sort of so this is [1421] how I would personally build up the flow [1423] uh as sort of like an MVP I'd then run [1425] it for a few days make sure that my [1427] clients or the company that I'm [1428] currently running sees value in it and [1429] then I'd go more into depth into like [1431] developing specific email parsing [1433] techniques that like isolate the name [1435] and isolate the email address and do all [1437] that without AI [1438] but yeah that's more or less uh that's [1440] more or less the first step of that flow [1442] I hope that that makes sense this is a [1444] an example of an extremely common system [1446] that I'll build and you can imagine how [1448] now that we've sent the email we can do [1450] one of a million different things with [1451] that we could theoretically add another [1454] module at the end of this and maybe that [1455] module um is responsible for I don't [1457] know adding it to a CRM so maybe you're [1459] using clickup you would go here you'd [1462] add like a clickup [1463] module and then maybe you'd I don't know [1466] create a new task in a list or something [1468] like that right the options really are [1470] endless um what I'll do now is I will [1472] download this as adjacent blueprint and [1475] then I will make sure that you guys have [1477] access to this I'm going to add it to [1479] that same notion file where I've added [1481] uh everything else about the course so [1482] yeah hope you enjoyed that uh in the [1484] next video we're going to go a lot more [1486] into detail on how to use web hooks I GL [1489] I gleaned over web hooks today um simply [1491] because you didn't really need a web [1492] hook in order to do the functionality [1494] that I wanted to do today but uh in the [1496] future web hooks are extremely important [1497] for connecting platforms that aren't on [1499] make.com to make.com um if you are [1502] getting into like automation agency work [1504] I can't tell you the number of jobs that [1506] I've seen on like requests for proposal [1507] platforms like Fiverr upwork or whatever [1510] that are willing to pay two three five [1512] $110,000 for somebody that just [1514] understands what I'm about to show you [1515] in the next video so extremely high [1517] quality extremely valuable piece of [1519] knowledge to learn uh and we're going to [1520] cover that in the next uh video hope you [1522] guys enjoyed and please like comment [1524] subscribe do all that fun YouTube stuff [1526] see you soon

Video: https://www.youtube.com/watch?v=ohju08rk6Iw
Title: Make.com Basics (No Unnecessary Fluff)
[0] what's going on everybody Welcome to my [2] make.com course make but for people who [4] want to make real money in this video [6] we're going to be covering everything [8] introductory to make.com all the [9] foundational Bedrock Concepts that you [11] need to understand like operations [13] functions modules all that boring stuff [16] before you can actually go out there and [17] make money with the platform this is the [19] only video where I'm not actually going [20] to be building a high Roi system every [23] other video in this course is just all [25] going to be about how do we actually go [26] out and practically build systems that [28] make Revenue so if if you are an [31] experience make developer or maybe you [33] are somebody that just is getting [35] started with the platform and wants to [36] learn more without having to spend like [39] 17 hours learning about boring stuff [40] that doesn't really matter then this [42] video is for you stay tuned and let's [44] get into [49] it okay so first things first why don't [51] we start by signing up for [53] make.com a lot of people draw this out [55] make.com is super simple all you need to [57] do is just go make.com if you're English [60] or just make.com and it'll default to [62] whatever your language is at the top [63] right hand corner of the page click get [65] started free if you're watching this in [66] the year 2029 the website probably looks [68] a little bit different um you're going [70] to be confronted with a signup page that [72] looks like this so I've appropriately [73] written my name as Nick example I have [75] one of my many burner emails I have an [77] example password 890 this is super [79] secure please do not hack me and [81] everything that I hold dear uh and then [83] all you need to do after that is Click [84] sign up for free next step it's going to [87] ask you to verify your email account so [89] I'm going to go over here to one of my [90] many [92] emails and then I'm going to because I [94] have this in an incognito tab just copy [96] the link address and then open in this [98] page now your email address has been [100] successfully [103] verified let me just make sure that is [105] the same example password that I had [107] before and let me make sure that that is [110] the email address that I'm using awesome [112] you will then be confronted with an [113] onboarding SL signup page which is quite [115] self-explanatory but whatever the heck [117] you want none of this stuff really [118] matters [123] sorry make.com um data analytics people [127] just making your life all difficult [128] apparently I'm a student in a company of [130] two to 10 people that are using make.com [134] to learn how to milk a cow or something [135] okay so after all that's done you'll be [137] confronted with a page that looks like [139] this now I'm going to do a couple things [141] in this video number one I'm going to go [142] through every single thing in the [144] make.com ux like literally when I say [146] every single thing I mean every single [147] thing so you know I'm going to make sure [150] that no stone is left unturned just so [152] that I can tell people that this is a [154] comprehensive course that goes through [155] everything that said I'm not actually [156] going to spend any time on anything that [158] I personally feel does not matter I make [160] a lot of money with make.com 99% of that [163] whole ux dashboard thing I just never [165] touch so it's important to understand a [167] couple of these buttons and Concepts and [169] that sort of thing but you don't need to [170] know them in order to do well and in [172] order to do the thing that you guys are [173] all interested in which is driving [174] Revenue now I just signed up for an [176] account realistically what you're going [178] to want to do is you know if if you're [179] watching this video you're probably [180] going to take make.com seriously so head [182] over to subscription change this to [185] build monthly and then buy the $18 82 [188] Cent a month plan uh Pro is everything [190] that you're ever going to need um if you [192] ever have over like a 250 megabyte fall [194] size you've done something extremely [196] wrong uh it also prioritizes scenario [198] execution and quite frankly it's just [199] worth the other $8 a month um totally [202] 100% worth it full text execution Log [204] search all that stuff operations usage [206] flexibility y y I haven't really found a [208] good use for teams yet so I'm just not [210] going to go into that uh but what I'm [211] going to do is now I'm going to sign on [213] to one of my accounts that actually has [215] uh a paid license just so that we could [216] see all of the buttons and everything [218] like that on the left and the right hand [219] sides so that's how to sign up for make [222] uh I don't have a credit card for you [223] all to use so you unfortunately are [225] going to have to deal with that but [227] assuming that you've signed up this is [229] what your setup is going to look like in [232] the top leftand Corner we have the [233] organization tab my organization is 1 [236] second copy because I'm using the [238] make.com account for my agent see one [240] second copy yours will probably be [242] something different we have a bunch of [245] subscription information over here so as [247] you see my current plan is Legacy [248] because I've been with make.com for [249] quite a while back when they were called [250] integrat they had a very different [252] pricing structure back then where I [253] could pay about 99 bucks for 150k Ops uh [256] billing intervals monthly all that stuff [257] this is just subscription information [259] this is an operations graph to show you [261] how many operations you're using now an [263] operation is defined as just one module [265] execution and I'll go into all that uh [266] later but this is something that like [268] I'll just sign on every now and then and [270] just take a look at I don't really use [271] it day-to-day it's interesting sometimes [273] to model like the spikes in operations [275] and ask myself where that's coming from [277] and that sort of thing you don't really [278] have to worry too much about it data [280] transfer you will almost never ever hit [282] this cap unless you're doing something [283] absolutely ridiculous um I was [284] Consulting with somebody once that was [286] using make.com to like build these [288] massive figma flows and they had like 50 [290] gigabytes used per month that is [292] basically never going to happen as you [294] see I'm almost halfway done all of my [295] Ops usage for the month and I haven't [297] even used like 1% of my data transfer so [300] don't worry too much about that um you [301] can upgrade by clicking this button you [304] can buy extra operations on like a flat [306] basis um they'll this will just take you [308] to like a stripe page and you'll kind of [309] go from there you can um also enable [312] auto purchasing here now I I never do [314] this I think that auto purchasing is [315] kind of dumb because the cost for auto [317] purchasing is actually more than just [318] buying extra Ops so it's almost like [321] they punish you for trying to think [322] ahead so don't do any that and then uh [325] down here you'll just have a list of [326] your active scenarios uh but there are [328] better ways to get that information [330] okay anyway as I mentioned I will [331] literally go through all of the tabs [333] here and tell you what they are all [334] about so next up is the teams tab uh I [337] basically never use this you may use [339] this if you're on the teams plan and you [340] have a bunch of teams but realistically [342] probably not something you're ever going [343] to have to worry about users this is [345] obviously just a panel with a bunch of [346] different users at your company you can [348] see we got me we can see we got some [349] other person at the business not super [351] important uh you can just invite people [354] into your make.com workspace if need be [356] um there's a subscription tab here which [358] obviously just covers all of these [359] subscription information that we went [360] over earlier there's then a payments tab [362] which logs all of the past billing [364] periods and all that stuff that have uh [366] uh you know undertaken you can download [368] PDFs invoices received this is important [370] if you have a business there's installed [372] apps here which is you know just a list [374] of all of the various applications that [376] you yourself have installed um make.com [379] allows you to create your own apps which [380] is pretty interesting again that's [382] something that I basically never do a [383] lot of these were just experiments [384] between me and a business partner of [385] mine at the time uh you're probably not [387] going to have to use this or even like [388] worry about this page at all but it just [390] allows you to uninstall stuff on the [392] right hand side um just to you know [394] really max out data security next up is [396] variables not going to click this tab [398] because make.com has some like execution [401] variables or whatever that you can query [403] in order to read things like your [404] execution logs and that sort of thing [406] but if you just click on that it'll just [407] be a list of variables like um [409] organization ID or something and then [411] like a big list and then over here [413] scenario properties I have never ever [415] ever clicked this button I am learning [416] about this with you guys um no idea what [418] the hell this is looks like if you're on [420] some Enterprise plan then you can keep [422] your long list of scenarios organized [425] organization is one of the weakest parts [426] of make.com um it's very very easy to [429] get overwhelmed with like a disorganized [431] flow so I guess they're trying to sell [433] that as an upsell now uh same thing here [436] with Team you'll notice that one of the [437] downsides of make.com is that a bunch of [439] the tabs and stuff like that is the same [440] info um as I mentioned I love this [443] platform but it can be a little bit [444] rough around the edges of times so if [446] you see that just don't worry about it [447] we're probably going to go through the [448] same info two or three times as we [450] progress further now notification [452] options is something that is actually [453] important um there are different ways [457] that you can error out in make.com if [460] you error out once the scenario will [462] give you a warning and a warning is [464] something that um you know it doesn't [467] it's not like the end of the world end [468] all be all I actually receive quite a [470] few warnings every day you know when you [472] have 50 different flows out odds are [474] eventually you're going to be [475] accumulating These Warnings and so I [476] don't actually like getting emails about [478] them I always always set mine to off a [480] lot of the time my warnings are because [481] of like API rate limits or some [483] like that so I always just leave them [485] off I don't worry about warnings however [486] an error is different from a warning and [488] an error is when your actual scenario [491] does not complete because of one of [493] these issues that I mentioned earlier [495] and in that case if one of my scenarios [497] that is making me money is not [498] completing well there's a problem and so [500] I'll actually enable email notifications [502] for that likewise scenario deactivation [505] well that's even more secure if your [506] scenario errors out like three or four [508] times I think [509] um then it'll just turn off the scenario [511] to like avoid you using Extra Ops that's [513] definitely something that I want to know [514] about so I always leave it on so if you [516] are watching this for the first time I [518] would always set these two off on on U [521] but I mean you know maybe you've never [522] used make.com maybe you want to get [523] warnings or whatever then feel free [525] there's another variables tab over here [527] same thing that I showed you [529] earlier then scenarios this is where [531] you're going to be spending 90% of your [532] time this is a thing that actually [533] matters uh list all of your active [535] scenarios list all of your inactive [537] scenarios and list all of your Concepts [539] and you're probably never going to use [540] Concepts don't worry about that um this [543] is what I mentioned earlier about [544] disorganization and so you can see on [545] the left hand side here there are a [546] bunch of these folders um I would [549] definitely recommend like trying to set [550] up folders to organize your life but you [553] will inevitably get disorganized that is [555] simply how make.com Works uh I've [557] experimented with dozens of different [558] naming conventions you can see I tried [559] numbers you can see I tried a a bunch of [561] other things and like sure you can [563] organize things from a bird's eye view [565] but if you're if you're constantly [566] developing things in make.com you'll [567] quickly understand that it's just quite [569] uh it's quite a headache to keep things [571] organized I would at minimum recommend [573] that you have some type of CRM folder [575] some type of project management folder [577] and then maybe some type of HR folder um [579] you can see I've sort of like dialed [580] mine out a little bit more granularly so [582] there fulfillment hiring growth web [583] application payroll blah blah gets [586] pretty deep now I'm going to go through [587] the actual scenarios and modules and [589] stuff like that in a second uh but [591] because this is the part that actually [592] matters I'm just going to leave it to [593] the end and then I'm just going to cover [594] all the other stuff that doesn't matter [596] in like a tenth of the time okay next up [599] are templates now if you are new to [601] make.com you've never used this before [602] this is actually a relatively novel [603] feature where make.com just shows you a [605] bunch of other people's systems usually [606] one or two module flows just to give you [608] some ideas if this is the first time [610] that you're using make I would [610] definitely just scroll through this [612] click every single one and just see some [614] basic concepts see how scenarios are [616] made in make it's pretty damn [617] straightforward I mean like I don't know [620] get telegram messages for new Google [621] Sheets rows so basically every time a [623] new row is added to a Google sheet you [625] will just send out a telegram message [626] pretty self-explanatory but it's nice [628] just to see what's possible with [630] make.com you can do stuff like you know [632] call weather apis right tons of stuff [635] you'll learn some introductory [636] information about rers and that sort of [638] thing give this a solid five minutes [639] like if you're new to this pause the [641] video right now go to us1m make.com [644] templates if you're on the US server and [646] then just scroll through this and just [647] like understand what is possible right [649] there's some stuff about AI it's it's [651] pretty neat that said after you read [653] through it you will never have to use it [655] again so ignore it connections this is [658] basically just a giant list of every [660] authorized connection that you have ever [661] made between make.com and another [662] platform I never ever use this unless uh [665] I receive some API error and in which [667] case I'll jump on here and then I'll [669] just click reauthorize I do that like [670] once every like three months so I [671] wouldn't I wouldn't worry about it web [674] hooks this is important make.com lets [676] you send up uh set up recipient server [679] addresses basically uh which you can use [682] in other services to send a request to [684] uh we use web hooks all the time in my [686] companies and uh in this video course [688] I'm going to show you how to use web [689] hooks as well that said this tab isn't [691] super relevant it just lists all of [693] those web hooks out so um you know [695] you're always going to have some type of [696] like uh security or verification process [699] so sometimes it's nice to just have the [700] URL for your own recordkeeping but not [702] really next up for Keys you can set up [705] API keys in make.com I never ever use [707] this feature I usually just hardcode [708] them directly in the scenario so [710] probably not going to use that either [712] devices this is where you can set up [713] like a mobile phone app uh make.com has [716] a mobile phone app that can be relevant [718] I've set up a a flow with this one time [720] out of like my thousand days or 900 days [723] using this software uh where basically [725] it was like a like a contractor or [727] something like that that like needed to [729] be able to click a button on their phone [730] and use that to start a scenario [732] realistically you're probably not going [733] to ever use this feature so I'm just [735] going to skip past it data stores is [737] really interesting and this is very [739] controversial in the community uh if you [741] guys watch the first video that I did in [743] this course series you know you'll know [745] that I talk a lot about well there are a [746] lot of people out there that like are [747] teaching people how to make make do [749] flows but they don't really use it for [750] money this is a a feature that a lot of [752] those people use this is like a database [754] essentially so make.com lets you set up [756] your own database in make um which is [759] cool but I almost never ever use it [761] because I'm usually like functionally [764] handling or managing some thirdparty [766] service like air table or clickup or [768] some project management platform or [770] whatever and so what I will always do is [772] I will use those data stores as the [774] source of Truth and I'll never screw [775] with my own database really ever just [777] because it's not superr relevant or [779] super necessary to me this just adds an [781] extra layer of complexity in the process [783] and let's be real we're not software [784] developers here or at least most of us [786] aren't um we're just doing this because [788] we want to connect business uh platforms [790] and apps to each other you don't really [792] need like a different database to do [793] that you can just do it directly in [794] those apps and then finally there are [796] just a bunch of data structures that you [797] could set up um data structures I don't [800] really ever use these either um some [802] people disagree with me but I will just [804] always just uh yeah I'm never going to [806] set up like another data structure for [808] me like iteration and MVPs are super [810] important and I just want to get them [811] out the door as quickly as possible this [813] is more like software architecture this [815] is more like data engineering uh not [817] something that's really relevant to me [818] but this does just list all of the [820] various data structures that you you [821] have um and a data structure for those [823] of you that aren't familiar is basically [825] just like a Json object like [827] ID uh I don't know you can basically set [831] up like a like a like a schema or [833] something like that I think it's called [835] where um your apps will expect [839] an object with an ID key and a name key [842] and you can just hardcode that in um way [845] ahead of the curve not super necessary [846] so I'm not going to touch into it [848] anymore my apps similar to the apps that [850] we saw listed before these are just [852] places where you can like create your [853] own make.com apps again probably never [854] going to use it and then we're almost [857] done with the boring uh and then [859] resource Hub which is make.com own like [860] built-in Academy they are supposed to [863] you know help you learn key Concepts and [864] that sort of thing I'll be honest uh as [867] long as you have more than three brain [868] cells you're probably not going to need [869] this uh as long as you have more than [871] three brand cells and you watch my [872] course you're not going to need this uh [873] but you know sometimes it can be [875] informative if you uh you know don't [878] understand some of the fundamental [879] concepts like you know Ops and and [881] modules and how to filter and that sort [883] of thing so feel free to to check this [885] out on your own time not going to go [886] into it notifications uh if scenarios [888] are are paused or if there are warnings [890] or errors this is where you'll get them [892] I will never ever click this button I'll [893] just use my own email uh there's also a [895] little help desk here which you can see [897] does um something similar to the [899] resource Hub there's like a help a [900] community make Academy contact support [902] I've never used this once in my whole [903] life and then there's like a [905] organization or account information up [907] here where you can like check out an [908] affiliate program so I'm like a make.com [910] affiliate for instance uh I should [912] really be plugging that in my videos [913] actually I set up uh you can set up your [915] profile info like your first name your [917] last name your email all that stuff uh [919] you can screw with your time zones you [921] know email preferences the same thing [922] that I mentioned earlier where you can [923] set up errors and warnings that sort of [925] thing so yeah all of this stuff is [927] pretty pretty fairly straightforward um [930] so I'm not going to I'm not going to [931] dial into that okay now we are finally [934] done with all of that boring stuff that [936] doesn't actually involve making money on [937] the internet we can actually dive into [939] how scenarios work uh how to build one [941] for the first time what an operation is [943] what an execution is how filters work [945] that sort of thing by the end of the [947] next 15 to 20 minutes my goal is uh you [949] should know everything that you need to [950] know in order to just like get up and [952] running and automate your emails or [954] something so without further Ado Let's [957] Do It um now that we're back in the [959] scenarios tab here which is the scenario [961] which is the tab that you are actually [962] going to be spending 99% of your time in [965] if you click the top right hand corner [966] of the screen you'll be able to create a [968] new scenario and this Builder here is [971] really the important part of make.com [973] this is make.com really and there are a [976] couple of different buttons on the [978] screen that I want to go through the [980] first in the top left is how you name [983] your scenario so this is the title of [985] your [986] scenario and so I will always get in the [988] habit of just writing out my title first [990] because I want to Define what it is that [994] I want this scenario to do just from an [995] organization perspective before I [996] actually go ah and create it so in this [998] case this might be um turn Google Sheets [1002] row into an email let's just pretend [1005] that we're going to build [1007] that on the bottom left hand corner you [1009] have a button that you can click to run [1011] the scenario once this is a manual [1013] execution and you're going to use this [1015] all the time when you're testing a [1016] scenario underneath that that you have a [1019] way to schedule your scenarios this [1020] basically just turns it on or off uh so [1023] that it now now it's automated you don't [1024] have to do it one time here you have the [1027] ability to schedule at what intervals [1029] you want your scenario to run so maybe I [1031] want mine to run at regular intervals [1032] every 15 minutes maybe I want mine to [1034] run once at this date and time maybe I [1037] want to run it on the 3rd and the 15th [1040] of the month at 4:44 p.m. right you have [1043] a lot of freedom which is really cool [1045] one of the reasons why I like make.com [1047] at bundles in krons there's so many [1050] different pieces of functionality that [1051] you're able to accomplish here next up [1054] you have a save button which is how you [1055] will save the scenario um only losers [1058] ever click this button if you're cool [1059] you will always hold command and press s [1062] so don't be a loser um or I guess [1064] control s if you're on a PC here are [1066] some scenario settings now people wax [1069] poetic about this stuff the only [1071] function I will ever use in this [1072] scenario settings um but button is every [1076] time I create a new scenario I will [1077] always just go allow storing of [1079] incomplete executions and I'll turn that [1080] to yes the reason why is because it [1082] allows you use error handlers which I'll [1083] teach you about in another video there [1086] is an area to do notes I'll be honest [1087] the note future blows and nobody cool [1089] uses it um there is a way to Auto align [1092] modules so let me pretend that I'm [1095] creating a [1096] scenario and we're using Goggle [1101] sheets and I'll explain what all these [1103] do in a [1107] moment [1109] and uh the cool part about make.com is [1111] you can drag and drop stuff you can move [1112] them around however you want right if [1113] you click this autoline button all it'll [1115] do is it'll just bring it back to like a [1117] set distance and make it look kind of [1119] pretty um unfortunately the autoline [1121] feature looks really ugly when you have [1123] a bunch of routers and stuff like that [1125] uh so I don't actually use the auto line [1126] feature ever I'll just like autistically [1128] try and like line it up so that it's [1129] perfect and build out my own uh [1132] basically make.com art uh but you know [1134] it's useful for some people and then the [1136] last uh real button that matters is this [1138] explain flow button uh which is for some [1140] reason an airplane I don't know what the [1142] engineers were thinking there but this [1144] allows you to just see um where the data [1147] is coming from and where it's going I [1149] don't really use this feature that often [1150] but in more complex flows where you have [1152] like a bunch of routers and stuff like [1153] that you may click this button every now [1154] and then just to see okay which route [1156] goes first which route goes second which [1158] route goes third that sort of thing you [1160] then have these three little settings [1162] dots where you can do things with [1163] blueprints and uh Version Control and a [1166] blueprint is basically just like a file [1168] that represents your whole make.com [1170] scenario so I can export a blueprint and [1173] that'll just be like a big Json file and [1175] then if I want import it again into [1177] another make.com account I can and it'll [1179] like it'll have these uh modules kind of [1181] preset and so it's basically just a way [1182] of like sharing blueprints for scenarios [1185] back and forth you still have to do [1187] stuff like connect which I'll cover in a [1188] second uh but it's still pretty cool All [1190] Things Considered okay great so why [1193] don't we actually go ahead and make a [1195] brief little scenario here right showing [1197] is way better than telling uh first [1199] things first you click this button [1202] you'll then be able to use one of like [1205] 3,000 or something software platforms I [1208] would always recommend and I love doing [1211] this maybe once a month just start at [1213] the top here and then scroll down [1214] through every single software platform [1217] odds are you'll see a lot of platforms [1219] that you either didn't expect to see on [1220] make.com or you'll just see a bunch of [1222] features that you know you can use that [1224] might give you some ideas for how to [1225] build out better flows that make you [1226] guys more money so so yeah I'll usually [1229] do this about once a month I'll just [1230] give it a click and scroll through it's [1231] like who Android you can automate [1233] Android it's like yeah you can you can [1235] like use this to automate various [1236] features on your freaking Android phone [1238] it's crazy man so many so many features [1241] um you know I could scroll down this [1243] thing for hours probably clicking [1245] through every single API integration [1246] it's amazing now I'm not going to do [1248] that what I'm going to do here is I'm [1249] just going to use that Google Sheets [1250] example that I showed you guys earlier [1252] because I want to explain the difference [1253] between a trigger and an action so once [1257] you click into one of these apps you [1259] will see a big list of all of the [1260] built-in make.com endpoints uh and [1264] essentially what the engineers at [1266] make.com and the engineers at the [1267] software platform have thought that [1269] you're probably going to want to use the [1271] software for so um there are triggers [1274] and then there are actions a trigger is [1277] adequately named and it's kind of [1278] self-explanatory this is something that [1280] will trigger your flow you see up here [1283] at the top watch new rows is a trigger [1286] what this means is every time a new row [1288] is added to a Google sheet that you've [1290] specified this scenario will run you'll [1293] see there's watch changes this is a [1294] little bit more granular it says [1296] triggers when any cell is updated you'll [1299] see that sometimes you'll require [1301] various add-ons or extensions inside of [1303] your Google sheet in order to make this [1304] work perform a function there are uh [1308] there's another trigger here it's like [1309] an endpoint called perform a function [1311] when uh data is passed to a make [1313] underscore function or an integrat [1315] function in a sheet um and you have a [1318] certain extension installed then you can [1319] you know turn on your flow the vast [1321] majority of the triggers and stuff like [1323] that uh you probably don't need to know [1325] really the only one that I really ever [1327] use is just watch a new row or watch a [1329] new entry into like a database CRM or [1332] project management tool and just use [1333] that to like start some aspect of the [1335] process so any without further Ado I'm [1337] going to click watch new [1338] rows and then what'll happen after you [1341] give that a click is uh little Google [1343] Sheets Mo module or um modal is going to [1346] pop up and then the very first you're [1348] going to need to do if you don't already [1349] have one is you're going to need to set [1350] up a connection and so on your screen [1351] it's probably going to prompt you to [1352] click add so for the purposes of this [1355] video I'm going to pretend that I'm [1356] setting up a connection for the first [1357] time a connection is just makes way of [1360] getting into your systems logging into [1363] your account basically like if we want [1364] to automate things on your behalf we're [1366] going to need to be able to log in on [1367] your behalf and that's what make.com is [1369] doing here so there's some best [1371] practices for connection names but I'll [1372] always write whatever the company name [1373] is or the property name so in my case 1 [1375] second copy and then I'll also write the [1377] the date and this is something that I [1379] only recently started doing but I found [1380] that this is significantly better from [1382] an organization perspective now since [1384] we're using Google Sheets it's going to [1386] ask us to sign in with Google pretty [1389] straightforward and I have a bunch of [1390] accounts set up here but I'm just going [1391] to sign in with my info once I can copy [1396] account this will allow make to do all [1398] of the fun stuff it needs to do see edit [1400] whatever my Google Drive files okay [1402] great and then after that that checks [1404] out um a bunch of I guess options here [1408] uh will also open in order for you to [1411] pick you know the specific Google sheet [1412] that you want and that sort of thing now [1414] one of the reasons I like make.com a lot [1416] more than other platforms is it's [1417] actually quite simple um there are a few [1419] places where you'll probably trip up [1421] like if you're using make.com for the [1422] first time you probably don't know what [1423] the differen is between searching by [1424] path selecting from all entering [1426] manually that sort of thing but you [1427] learn it pretty dang quick if you click [1429] search by path and then if you're trying [1431] to select your Google Drive you know is [1433] it my drive is it the drives that are [1435] shared with me is it the Google share [1436] Drive uh if you you just click this [1438] button you'll see a list of all the [1439] various spreadsheets and Google Sheets [1441] in your account that you can then just [1443] simply one click uh and then connect to [1445] so in this case this is my Phantom [1447] Buster scrap list just some random [1448] outbound um Google sheet that I set up [1451] you can go and you can select the [1452] specific sheet and then you can just [1454] watch for new rows being added to that [1456] like make.com is simple enough that [1458] it'll just walk you through you [1459] generally need to go through in a [1460] trigger and just like select every or [1463] fill out every field because that's you [1464] know usually how you target the data um [1467] but yeah you know you have a bunch of [1469] options and I'm not going to go through [1470] every specific feature of every specific [1471] trigger for every specific platform that [1473] would just be a little too unnecessary I [1475] think um but I am just going to go [1477] through sort of like in general how to [1478] build things out with make.com so yeah [1482] you're always going to want a trigger of [1483] some kind um I don't use an external [1485] database or anything like that I almost [1486] always just use a platform that my [1488] clients or me are building on and so [1490] Google Sheets is like the simplest [1492] example but maybe this is an air table [1494] air table has very similar triggers [1495] where you can watch when a new row is [1496] added you can do do things by function [1498] all that stuff maybe it's clickup or [1501] pipe drive and you can do things like [1502] watch when a new entry is created in [1504] pipe drive or clickup right same sort of [1506] idea Google Sheets is sort of just like [1508] a way for you to get your mental model [1509] of how all this stuff works correctly um [1512] in most of these mod models that pop up [1514] there'll be an advanced settings button [1516] which you can click on to scroll down [1517] more um I basically never ever use the [1519] advanced settings U there are some cases [1521] in which I will but you don't really [1523] ever need to for the purposes of of what [1525] we're doing which is just you know [1526] building up these simple flows that make [1527] large amounts of money usually the [1529] defaults are more than [1530] sufficient okay so that is how we set up [1533] a trigger um let's do a limit of [1537] one let's click okay it'll ask you when [1540] you want to start so maybe we'll do all [1543] and if you're paying close attention [1544] you'll notice that there is another [1546] Circle connected to our module our [1548] module this is the scheduling Circle [1551] that I showed you guys earlier so if I [1553] click on this the same schedule setting [1555] is going to pop up where you can Define [1556] how often you want to run this flow [1559] let's say I want to do it on demand [1560] it'll switch to a little like cute Arrow [1562] now this schu now this scenario is only [1564] going to run when I click the Run once [1566] button right so you have a lot of [1568] options now you want to set these things [1569] up whether it's an on demand sort of [1570] automation or one that's scheduled at [1572] regular intervals if this is scheduled a [1574] regular intervals let's say 15 minutes [1575] what's actually happening under the [1576] scenes is every 15 minutes make.com will [1578] send a request to your Google sheet and [1580] it'll compare the last time the Google [1583] like the last instance of the Google [1584] sheet with the current instance and [1586] it'll see hey have I added any rows for [1588] instance if I have added new rows then [1590] it'll take that as the trigger for the [1592] scenario and then it'll run the rest of [1593] it if it doesn't find any new rows then [1595] it's not going to run pretty [1597] self-explanatory right okay great so [1600] that is a trigger and why don't we do a [1602] module if you want to create um or [1604] extend a flow all you need to do is just [1606] click that little plus sign to the right [1608] and it'll automatically create another [1610] module uh which you can then use to like [1612] select the software platform that you [1614] want to do and that sort of thing so [1616] hypothetically for the purpose of the [1617] demonst ation I'm going to go to email [1619] and then you'll see now that there are [1620] no triggers remaining there only actions [1622] and that's because we've already defined [1623] the trigger before this is the thing [1625] that's starting our scenario um the only [1627] thing we can do here is then like do [1629] something create an action or something [1631] as a result of that trigger and so you [1633] can see with the basic email module [1635] there are tons of different features [1636] that we can do we can create a draft we [1638] can send an email whatever I'm just [1640] going to click create a draft now we're [1641] not actually going to run this I'm just [1642] doing this to show you how the email [1643] module Works um and then you know same [1646] thing as before you can add a bunch of [1649] connections because this is an email [1651] module and not like a specific Gmail [1653] module for instance it doesn't assume [1654] that you're using the Google stack and [1656] so you have to select the connection [1657] type whether it's Google restricted [1659] whether you want to do it through IMAP [1660] whether you want to do it through [1662] Microsoft Outlook whatever um but you [1664] know hypothetically let's just say we're [1665] doing [1668] this I'm going to select another [1670] connection [1673] name we're then going to authorize [1676] another connection you'll see the same [1678] thing happens here it's telling us that [1681] it's going to allow make to read compose [1683] send and permanently delete all of your [1684] emails so just make sure that that's [1686] what you want make to be able to do [1688] obviously it's going to try and push for [1690] as many permissions as possible so don't [1692] really worry too much about that I never [1693] really [1694] do and then yeah now we can actually do [1697] things with this email um the email [1699] module is a little bit quirky [1700] specifically because it asks you to [1701] choose a folder um I always just choose [1703] inbox for whatever I want to do but you [1705] can see here that you can already start [1706] doing useful things you can set a [1708] recipient and maybe I want the recipient [1710] to be me and maybe every time a new row [1713] is added to a Google sheet I want to [1715] send myself a message saying new row [1718] added to then maybe I want to like use [1721] my sheet ID or the sheet name right uh [1725] you can select the content type here [1726] HTML plain text maybe I just want to [1728] write a bunch of text or maybe I want to [1730] be able to write like HTML where it's [1733] like [1736] um [1738] you know there's a link here to this [1740] Google [1744] sheet or something like that which would [1746] render as an actual Link in the person's [1749] account or in the in the email right you [1751] have a lot of options and you can start [1752] structuring this however you want but as [1755] I mentioned it's quite simple make will [1757] usually tell you if you need to do [1758] something that you haven't done I mean I [1760] just tried to remove the recipient you [1761] can't really create a draft for an email [1762] automatically unless you have a [1763] recipient right so you're going to need [1764] to add one any [1768] that is more or less how the scenario [1769] Builder works there are a bunch of other [1772] features that you start getting into if [1773] you want to build more complex flows [1775] like right now we're at the point where [1776] we could just build one giant linear [1778] flow from end to end um but I'm not [1780] going to get too much into them if you [1782] see there's this little gear icon [1783] between modules this is called a filter [1785] if you click on that then you can create [1787] a filter where you know let's say I want [1788] to [1789] do [1792] um maybe row [1795] equals hello [1798] and what you can do is you can set a [1801] condition this will allow you to select [1803] variables from previous modules and so [1806] there is you know row number accessible [1808] spreadsheet ID sheet I have a couple [1811] columns in my specific spreadsheet one's [1812] called geography one's called URL so I [1814] can actually select from that but let's [1816] say [1818] geography has to equal [1820] Canada this will filter out anything [1823] where the geography tab in my Google [1826] sheet [1828] is not equal or is equal to Canada sorry [1832] this will filter out anything that is [1833] not equal and it'll continue the [1835] progression of the row for anything that [1837] is [1838] equal and you can add multiple [1841] conditions if you want you can add or [1843] conditions you have a lot of freedom in [1844] how you want to set up these filters [1846] when a filter is set up the little [1848] wrench icon will change to this filter [1850] icon and so it's just important to be [1852] able to keep that in mind make has a [1853] little bug right now where the filter [1855] name doesn't pop up unless you drag and [1856] drop the the subsequent module and so if [1858] you drag and drop you'll see that that [1860] text that you wrote actually pops up and [1862] so it becomes very interpretable and [1863] very maintainable very easy to see and I [1866] actually want to touch on that feature [1867] just while we're on that topic one of [1869] the reasons why make.com is so awesome [1871] and why I use it even though I know how [1873] to you know write scripts and build [1874] software and stuff like that is because [1876] how interpretable it is which results in [1879] clients at least for my own automation [1880] agency seeing the value in the flows [1883] that I build like if you think about it [1884] if I just write up a big 200 line block [1887] of code and then I just hand it on a [1889] silver platter to my client sure maybe [1892] I'll be like yeah it does the thing that [1893] you asked it for me to create it for um [1896] but there's no real way for them to know [1897] and so a lot of the time they don't [1898] really appreciate it as much but if [1900] instead I build out a make.com flow and [1903] there's a module called Google Sheets [1905] watch new row there's a filter that says [1906] geography Canada there's an email where [1908] it creates a draft right even if I'm not [1911] like a super techy person and I look at [1913] this I'll know that this is doing [1914] something automated um with a Google [1917] sheet and an email and maybe I can you [1919] know actually pin some business value on [1921] that becomes a lot easier to ascribe [1923] successes and really take credit for [1925] like these complex business architecture [1927] decisions uh in make.com versus like a [1930] script and the other really cool part [1931] about it is it's also a lot more [1932] maintainable and what I mean by that is [1934] even if I have no idea what the hell I'm [1936] doing and then you know maybe like uh my [1938] automations guy sends me this scenario [1941] like odds are I can click through that [1942] scenario see where the data is being [1944] pulled from and at least in natural [1946] language any Way start to make decisions [1948] like hm you know what I wonder if we [1950] could pull multiple entries instead of [1951] just one is that a possibility we can [1954] communicate in a lot more business savvy [1955] way which is obviously uh a big [1958] Advantage if you want to grow a company [1959] that makes a large amount of [1961] money okay great yeah so there are a [1964] couple of other features that I still [1965] need to touch on I did mention how there [1967] is um a place where you can select the [1969] variables from previous modules that's [1971] obviously very important um you see here [1974] since this is a Google sheet and I only [1975] have two rows or two columns filled out [1977] one's called geography one's called URL [1979] I don't have any other ones all we can [1980] do is we can just select the C column [1982] select the D column um but usually you [1984] know usually your Google Sheets has have [1986] header rows so it solves that um this is [1990] like the place where you'll actually [1991] input data or functions or do math or [1994] that sort of thing so if I click on this [1995] little gear icon you'll see that there [1997] are some general functions there are [1998] brackets that you can use in make.com [2001] there are um functions like get there [2004] are if if empty switch omit pick [2007] the only ones that I ever probably use [2009] are if if empty I do use get and then I [2013] do use switch I don't think I've ever Ed [2015] omit or pick in my whole life just [2016] because their functionality is taken [2018] care of by other uh by other [2021] functions these are keywords like true [2023] false ignore null erase basically never [2025] use any of these uh and then operators [2027] these ones are important so uh you know [2030] you could say [2032] if I don't [2035] know geography [2038] and then we have to select the equal [2040] sign and then we say [2043] Canada then maybe output true and then [2047] if not output false [2050] hypothetically these functions are [2052] necessary for building out more complex [2054] flows and more [2057] logically involved flows but I'll be [2059] honest a lot of the time you're barely [2061] going to be using these functions all [2063] you're going to be doing in high Roi [2065] systems is you're just going to be [2066] connecting data source a to field B in [2069] another platform maybe you'll schedule [2071] something that checks every 15 minutes [2072] to see if you got an email that matches [2074] these filters and then if you do then [2076] you forward an onboarding email to [2078] somebody else right these are very [2080] simple things they don't really require [2081] a complex uh complex General functions [2085] so I would't worry about that too much a [2086] lot of it's self-explanatory and if you [2088] do wonder if you're ever going to use it [2090] make.com has some pretty good [2091] documentation where you could just Mouse [2093] over and then see the um kind of [2096] document M mentation or the the the [2098] purpose or use case behind a [2101] function okay next up are the math [2104] functions now there's some variables [2106] here that you can automatically insert [2107] like there's a variable for pi this is [2109] going to render to 3.14 or whatever the [2111] hell the other 8 million well [2112] technically Infinity digits of P there's [2115] a random function and so you can use [2118] this and this is something that I will [2119] use um to just automatically create a [2122] random number on every scenario [2123] execution between 0o and one that's [2125] sometimes useful if you want want to [2127] generate a random number between Z and [2129] 10 all you do is you multiply that [2130] random number by 10 for instance there's [2132] some functions here that I use from time [2134] to time um I'll use average sometimes [2136] I'll use sum and then down here there [2138] are some operators like multiplication [2140] division there's modulo right you're [2143] probably never going to need to use [2144] modulo although it can be useful there's [2146] plus minus less than greater than all [2148] that sort of [2150] stuff next we have text and binary [2152] functions there are some variables here [2155] that some people will use from time to [2156] time this will automatically create like [2158] uh uh like a unique ID which is [2161] sometimes useful if you want to like add [2162] entries into a database or whatever I [2164] don't really use it I'll just create my [2165] own unique ID if I want one and then [2167] there are a bunch of text functions and [2169] I will say some of these text functions [2170] are quite useful so the length of a [2172] string you can use this in place of like [2176] uh a lot of filters so you could just [2177] check to see if the length of something [2179] is greater than zero basically if it's [2180] greater than zero odds are that field [2182] exists you could lowercase stuff this is [2185] sometimes useful if you're like when I [2187] was creating WordPress posts [2188] automatically you know the URL a lot of [2190] the time the URL of a post is just like [2194] you know.com [2196] hello how are you doing usually don't [2199] see like big uppercase URLs or whatever [2202] so I would pass all of my uh URLs [2205] through like a lower function for [2206] instance and then around that I would [2208] wrap it with a replace function and the [2210] way that a replace function works is [2212] maybe if you have your [2214] url you could uh search for a new line [2219] and then or sorry an empty no a space [2221] and then every time you see a space just [2223] replace it with nothing or maybe replace [2224] it with a dash or something and that way [2226] now you have no spaces in your url right [2229] there are many features um of make.com [2232] that all to do cool text processing with [2233] this and while text processing isn't [2235] really make.com strength um it's just [2238] nice to have that flexibility and [2239] freedom so length lower capitalize start [2242] case um askie if I'm pronounced that [2245] right asky replace you can trim things [2247] upper substring I'm not going to go into [2249] all this but suffice to say that some of [2251] this stuff is important and you'll see [2253] me use these in the flows that I build [2254] out for a later on in the course next [2257] are date and time functions this is [2258] actually super useful and probably one [2260] of my number one most utilized tabs in [2262] this Creator screen uh the reason being [2265] is because you can set variables like [2267] now and basically the way that make.com [2270] date functions work are like look at the [2273] date right now it says Saturday February [2275] the 17th at 10: 105 a.m. [2279] right that is a text string which [2283] represents a date it isn't actually a [2285] date make.com has its own date time uh [2289] format where you'll just give it a date [2292] and then you can turn that date into [2294] anything from anything you want like a [2296] text string or you can turn it into uh [2299] you know a format where you know maybe [2301] it looks like this instead or something [2302] like that um and so make.com date string [2306] I don't remember remember exactly how [2307] they're written uh but it's something [2310] like [2313] 10603 uh UTC or something like that [2319] um it's going to be something like this [2322] I that is total there is no [2323] vertical pipes there uh but it's going [2325] to look something like this it's going [2326] to be like a long string of numbers um [2329] that make.com knows is a date format and [2332] then you can just turn whatever this is [2334] into anything else and so if I were to [2336] type now that now would be equivalent to [2339] that and then make.com also has a bunch [2341] of functions that allow you to easily [2342] parse the date or format the date [2344] however you want so okay here you go [2346] that's the format right there so [2349] 2016-12-28 T and then like a time and [2352] then some z's or whatever that that's [2353] the date format that make.com actually [2355] uses under the hood and so what I could [2356] do is I could say format date then I [2359] could say now and then I want you to [2361] format it so that it's DayDay slash [2364] monthmonth SL year year year year year [2368] what would happen here is it would take [2370] the current date time it would then [2373] expand it out to that long number thing [2376] that we had earlier so maybe it' be 2024 [2379] D2 d02 [2382] d7t uh you know [2385] 10709 372 Z so it would it would it [2388] generate that and it would format that [2390] into something that is more human [2391] legible like okay it's date date so 17 [2396] SL monthmonth so 02 SL y y y y which is [2401] 2024 so yeah date time is awesome and [2404] it's something that I use very often uh [2406] sometimes I check to see if the dates [2408] are before or after some date that I [2410] catch in my CRM and if so you know send [2413] out an email or don't send out an email [2414] that sort of deal and there are a bunch [2416] of other functions down here that allow [2417] you to do so which I'll cover when I [2418] actually build flows out lastly there [2422] are array functions and I've left this [2423] to the end because arrays are something [2425] that just a lot of people have trouble [2427] with in make.com I don't actually really [2429] use arrays at all and I know that any [2431] make.com developers is are going to look [2433] at me and like crucify me for saying [2434] that but you really don't need to use [2436] arrays if you start catching yourself [2438] using arrays a lot it's probably because [2440] you're trying to optimize operations [2441] which I'll touch on in a sec um and not [2444] necessarily because you have to use the [2445] arrays um so a lot of the flows that I [2447] build out like I could build it out with [2449] like a super long array and I could save [2450] myself a bunch of Ops or something like [2452] that but I never do I'll just build it [2453] as simply as possible from start to [2455] finish and that's a principle that I [2456] think is more important to touch on uh [2458] which is Simplicity like if you're [2460] really designing make.com flows to make [2462] money and to be maintainable you want [2463] them to be a simple as possible nobody's [2465] going to give you brownie points for [2466] building out this complex super crazy [2468] long flow with a million in one routes [2471] uh when you know if you ever wanted to [2473] make a change to that down the line [2474] you'd have to like poke at like 17 [2476] different places and freaking I don't [2477] know draw a pentagram and pray like [2481] ideally your flows would be so simple [2482] that even a novice business owner who [2484] has no experience with automations would [2485] be able to look at it and be like oh [2487] okay we should change this right and [2489] that's what you should really be going [2490] for developers have a tendency to like [2492] showing off and like you know really [2495] identifying with their like complex [2497] procedural knowledge that's not us we're [2499] not here to develop super complex flows [2502] we're here to develop flows that make [2503] money a lot of the time those are the [2504] simpler ones and not the more complex [2506] ones so yeah these are still useful [2509] don't get me wrong and I do use these [2511] every now and then and I'm going to [2512] touch on how to use them in flows but [2514] you know the the array part I think is [2516] just one of the reasons why people have [2518] so much trouble and difficulty getting [2519] up and running with make.com so I'm [2521] going to try and backload that as much [2522] as possible we're not going to have to [2523] deal with too much of [2524] this okay great and then you have some [2527] custom variables here which aren't [2528] relevant and I basically never really [2529] use them so I'm going to skip over [2531] that awesome now um I'm not going to go [2535] ahead and choose a folder I'm actually [2536] just going to go and delete all these [2538] these aren't relevant um suffice to say [2540] this is a good introductory session uh [2543] there are a couple of other buttons down [2545] here stuff like FL control how to repeat [2548] and iterate and aggregate how to route [2550] you know different decisions and that [2551] sort of thing uh there's some built-in [2553] triggers and built-in actions that some [2556] people use a lot in their make scenarios [2558] and then there are also some text parser [2559] modules we're going to get into all of [2561] that stuff when I'm actually building [2562] practical flows out for you live and [2565] then we're not going to worry about any [2566] of that stuff right now thank you very [2568] much for watching if You' gotten to this [2570] point in the course which is technically [2572] the end of the second video maybe like [2574] the one and a half video real istically [2576] cuz I don't really think that first one [2577] counts You Now understand one the user [2580] experienceuser interface of [2583] make.com two you understand the 10% of [2586] steps and buttons and so on and so forth [2587] that actually matter and you understand [2589] that 99% of all the other ones just [2591] don't and uh you're not really too [2593] concerned about that and three you [2595] basically know everything that you need [2596] to know in order to actually start [2597] building out like flows inm make.com uh [2600] that can make you real money and so [2602] that's going to be the focus for the [2603] rest of the course we're going to [2604] actually take those skills that we [2605] learned learned earlier on over the last [2607] half hour or so we're going to use them [2609] in real flows that you can start [2611] applying to your business or a new [2612] business today so if that sounds like [2614] something you're interested in and that [2615] sounds like something you enjoy then [2617] keep watching we're going to get really [2619] fun from this course video onwards [2622] thanks for checking this out please like [2624] subscribe comment and leave systems that [2627] you want me to build below because I'm [2629] going to over the course of the next two [2630] weeks start scheduling those in uh just [2632] so that I can interact with the [2633] community more and you know help you [2635] guys out in your specific automation uh [2638] scenarios okay have a great rest of the [2640] day and talk to you soon

Video: https://www.youtube.com/watch?v=PjKHs-L6Sn4
Title: Make.com But For People Who Want To "Make" Real Money
[0] what's going on guys if you've been [1] following my videos up until now you'll [2] know that I love make.com it's made me [5] about a million dollars in the last 12 [6] months uh it's afforded me a really cool [8] lifestyle and it's allowed me to [9] automate like large portions of my [10] business that I used to think were [11] physically impossible to do so um and [13] odds are if you are here watching this [15] video um you want to do that too either [18] you want to be in the position that I'm [19] in or you just find some of the things [21] that I say about make.com interesting [23] now there's a problem and the main [24] problem is the way that make.com is [26] currently being taught is really dumb [28] it's being taught by a bunch of people [29] that don't really know how to make money [31] on the internet it's being taught in [33] such a way where there's just way too [34] much of an emphasis on like esoteric [36] subn knowledge that isn't [37] actually going to go out there and [38] generate you a positive Roi and I've [41] noticed that problem and I want to fix [42] it so what I'm going to do over the [43] course of the next 10 or 11 days or so [45] is I'm going to record a course on [47] make.com apptly called make.com for [50] people who want to make real money this [53] has been something that I've thought [54] about a lot uh when I first got started [57] watching and reading make.com tutorials [58] I was just like man I don't care about [60] any of that stuff just teach me how to [62] print dude and so uh this is essentially [65] me combating that void in the market [67] right now I've created an ocean doc that [69] includes an outline and the videos that [71] I'm going to be creating I'm also uh [73] leaving a couple of those videos [75] intentionally blank as requests because [77] I know that there are a lot of people [78] that have been watching these every day [79] and I'd love to extend the opportunity [81] to like interact with you guys a little [82] bit more actually build out a system [84] that you guys want me to build and yeah [86] it's going to be an extremely in-depth [89] highquality comprehensive course on the [91] 10% of make.com that actually creates uh [94] and generates Revenue opportunities with [97] completely 100% ignoring the 90% that [100] doesn't so if you've been on the fence [102] about wanting to get started with [103] make.com or this is your first fora into [105] Automation and maybe a friend of yours [107] sent you this video uh don't worry [109] you're going to know everything that you [110] need to know to like print and make a [112] million dollars in 12 months by the end [114] of the series that sounds like something [115] you're interested in then keep watching [116] and we're going to get started with the [117] first video in make.com for people that [120] want to make real [126] money okay so first and foremost what is [129] make.com like maybe you're here and you [131] just have never heard of make.com before [132] maybe it's the first time you've [134] experimented with automation platforms [136] well I'm going to give you the run [137] through make.com is basically a very [139] highquality piece of cloud software that [142] allows you to glue together dozens of [145] different software applications in real [147] time it allows you to basically become a [149] developer without knowing how to develop [151] all you do is drag and drop various [153] modules from place to place and it [155] essentially just empowers the average [157] business owner who doesn't really have [158] the time to learn how to script or do [159] any of that stuff um in such a way that [161] they can usually shave off a significant [163] percentage of their margins or they can [165] build Sales Systems or email systems or [167] crms or project managers or whatever and [170] so make.com in my humble opinion is a [172] superpower if you know how to use [173] make.com anything that you do at any [175] point in time in the next let's say 5 [177] years or so assuming that that's the [178] lifespan of this this software product [180] anything that you do in the next 5 years [182] is just going to be like 10 times easier [184] and so if you think about it logically [185] given how this is just something that [187] makes everything easier it makes sense [188] to spend a little bit of time learning [190] how that works just to ensure the rest [192] of your life is uh as simple and as [193] straightforward as humanly possible it's [196] not hard to get started it's uh software [199] that from time to time has been a little [200] bit rough around the edges but I think [201] that the the initial way that I pitched [203] it as glue is about as accurate as uh as [206] you could ever pitch it like make.com is [208] just glue man it just glues together [211] type form in YouTube or Facebook and [214] monday.com or clickup with uh Phantom [218] Buster I don't know there's just [219] thousands of different software [220] platforms that you can just connect in a [222] very straightforward way get data from [224] one source send it to another place [226] right one of the core functions of [227] business and make.com allows you to take [229] care of all of it so this is an ocean [232] doc that I've set up explicitly for the [233] purposes of walking you guys through my [236] rationale for make.com what the next you [238] know 10 videos are going to be like or [240] so I'm going to make sure to link this [241] in the video description just so you [243] guys have it and just so you guys can [244] kind of see my POV um this is more or [247] less what the next 10 videos are going [248] to be about first of all the goal is I [251] want to teach Freelancers and agency [252] owners and developers how to actually [254] make money with make.com um and I want [256] to make sure that it's as simple as [257] possible you don't actually have to have [259] any make.com experience in order to get [260] started um and then I'm going to walk [262] you through everything from literally [263] like clicking onto the signup button [265] putting in your credit card details I'm [267] going to like do everything for you so [268] that even if you've like never [270] heard of or thought that you had the you [272] were a tech person or had the capability [274] to sign up this platform by the end of [275] my series you will literally have just a [277] giant list of awesome High Roi High [280] producing systems so that's my goal um [283] the format of these videos is going to [284] be the same as my usual format which is [286] long format um I really do not like the [288] ADHD super fast you know 300 Cuts in [292] like 5 Seconds type of that I'm [294] seeing on the internet right now and I [295] find it really difficult to focus so [296] I've sort of like intentionally gone [297] against that grein uh the videos are [299] probably going to be about 20 30 minutes [300] in length um and the big emphasis is [303] going to be on like building practical [304] systems that I and many other agency [306] owners at the S and8 figure levels use [308] in order to like operate their [310] businesses of course there's going to be [312] uh the first couple of videos where I'm [313] just explaining these make.com Basics [315] and these fundamental operations and [317] that sort of thing you can't really get [318] out of it if you want to build a [319] comprehensive course but if you are [321] experienced at m.com you can just skip [323] through those there's nothing of [324] relevance or importance it's literally [325] just going to be me going through the [327] entire ux and UI and teaching people [329] that don't understand some of these [330] Concepts um how they can use them to to [332] make money I'll also include blueprints [335] to every scenario that I build uh [336] blueprints for those of you that aren't [337] familiar with make.com are just a way to [339] like share files between each other so [341] at the end of this you will basically [342] just have a giant library of Json [344] objects that you can import into your [346] own make.com system uh in order to just [348] like scaffold anything that we've built [350] and then I may mention this in the intro [352] but I'm going to be building a couple of [355] these as just like [357] requests excuse me sorry I just just had [359] like a giant bag of chips like a fat ass [362] um I'm going to be building on a couple [363] of these as requests AKA if you wanted [367] like a specific system and you were [368] wondering how somebody like me would [369] build it you leave me a comment and if I [371] think it lines up with sort of the the [372] rest of the educational nature of the [374] course I will absolutely create it and [375] in this way I want to give a little bit [377] back to the community that's been [378] helping me out a lot over the course of [379] the last couple weeks and I just want to [381] show you how practical um you know some [383] some skills can be like you can just [385] take a random Youtube comment and if you [387] know about make.com you can build an [389] amazing High system out of it so this is [392] the outline uh this video here is just [394] what is the series what is make why do [396] people use it what's the main strength [398] versus other platforms are coding Etc [399] and I'm going to get into all that in a [400] second the next is going to be make.com [402] Basics so it's going to be how to sign [404] up how what modules are how to use [406] operations basically all that [407] unimportant I mentioned number [409] three is going to be how to respond to [410] emails automatically with AI and [411] make.com and this is going to be the [413] beginning of my live practical builds [415] where I'm basically just going to get [416] like an idea it's going to be hm I wish [418] I could respond to emails automatically [420] and I'll show you the thought process [421] that is necessary in order to build that [423] out the fourth is going to be how to use [424] web hooks to connect anything to [426] make.com make.com is really cool in that [428] it has like 3,000 or something different [430] software platforms that integrate [431] natively but you'll also find a bunch of [433] software platforms that don't and it [435] turns out most of those software [436] platforms can also be integrated all you [438] have to do is just change a couple of [440] little things in your workflow and so [441] I'm going to show you how to do that to [443] literally like automate anything that [444] you could possibly think of then I'm [446] going to show you uh actual systems that [448] I build on either retainer or [450] subscription for my clients like crms so [453] I'll show you how to build an automated [454] CRM and click up in make.com where you [456] know we're using make.com is almost like [458] a project manager to ensure that things [460] are getting done on time uh ahead of [462] schedule uh leads are being contacted [464] when they should be and that sort of [465] thing the next is I will show you how to [467] automate messaging platforms like slack [469] with make.com and so a big use case that [471] I find a lot of companies that I work [473] with particularly in the coaching and [474] the info product space have is they want [476] to like automate uh slack or Discord or [479] k jobby or or these like message [480] platform onboarding um flows and they [483] want to like simplify it and and reduce [486] Reliance on humans as much as seemly [487] possible uh I've built out tons of [489] companies uh tons of systems for [491] companies between the 150k to 200k month [493] Mark that have helped them scale to 3 [495] for 500k and I'll show you exactly what [497] systems like that look like next I'll [499] show you how to build a hiring system [501] with make.com and a couple of other [503] platforms I'll probably use air table in [504] this case um I've built out these sorts [506] of systems dozens of times I just [508] recorded a video that may have seen on [510] YouTube about this exact thing uh but I [512] just wanted to like show you from the [514] ground up how I would go about building [515] this and this is primarily gear towards [517] like agencies that you know have high [519] turnover and that want to implement [520] systems like this next I'll show you how [522] to scrape websites with make.com so I'm [524] going to use um essentially artificial [527] intelligence to help take random data [529] off the internet and then structure it [531] into a format that you can just plug and [532] play into any app this is going to be [534] extremely valuable if you run some type [536] of like software service or if you want [538] to scrape data from like um like a data [541] source like maybe you want to scrape [542] data from upwork or maybe you want to [543] scrape data from some request for [545] proposal website or maybe you're a real [547] estate agent that needs like regular [548] listings coming in from Redfin or [549] something like that I will show you [551] exactly how to do that in a way that [552] basically nobody else is talking about [554] using what are called hidden [556] apis next I'll show you how to automate [558] PR with make.com um there are a bunch of [561] these like newsletter request for PR [563] statement websites and platforms out [565] there uh like Haro helper reporter out [568] and a couple of other ones [569] and I've built a tons I've built tons of [571] systems that just automatically manage [573] those and then just like passively get [574] links so if you're an SEO agency if [577] you're like a software platform that's [578] looking for exposure this is going to be [580] a video for you and at the very end here [582] before I get into like my request videos [584] I'm going to talk a little bit about how [585] iterators and aggregators actually work [586] in make.com if you're unfamiliar with [588] that iterators and aggregators are just [590] specific functions that make.com [591] provides to allow you to deal with like [593] tabular array data really easily the [595] issue is uh they're very easy to [597] misunderstand and despite you know them [599] being around for like four or five years [600] now U make.com just still has not like [603] released any type of good education on [605] you know how exactly to implement them [607] you don't actually need to know them in [608] order to make large amounts of money [609] like I did not know them for probably [611] the first year and a half but what I'm [612] going to do is have a dedicated video [614] just on iterators and aggregators um [616] that'll just walk you through how they [618] work just in case you need to you know [619] know them for like the 10% of scenarios [622] uh that come up so uh after that I will [625] have a couple of slots open for like [626] request systems that I'll build and I'm [628] just going to leave those to the and [629] just to give people like a good week and [631] a half to two weeks uh to come up with [633] ideas or you know just leave me comments [635] that I can sort of just select the best [636] ones that I think are going to be the [637] most [638] educational okay that at a bird's eye [640] view is the curriculum that's some of my [641] motivation behind it and the last thing [643] that I'm going to touch on before the [644] end of the video is okay why make.com [648] like aren't there a bunch of software [650] products or platforms out there that do [651] similar things well dear reader slatcher [655] um you're right there are a bunch of [657] software platforms out there that do Sim [659] similar things like zapier is one funny [662] note I didn't realize it was pronounced [663] zapier for like the first 90% of my time [666] using it you can use zapier to do the [668] exact same thing that make can just cost [670] you a little bit more money and I find [672] that there's just a little less [673] flexibility and freedom so zapier is [675] sort of for people that are even earlier [677] on in their automation career um but you [679] can do everything that you can do in [680] zapier in make.com and you can usually [682] just do it a lot more performant you can [684] do it a lot more efficient and you can [685] do it at a lot more cost effective sort [687] of margins um there's another platform [690] out there called na10 na10 is what I [692] would consider significantly more [693] complicated than make.com um it's not [696] just because you know I'm more of a make [698] expert than I'm an NA expert I've given [699] it a royal try and I've tried using na10 [702] and a couple of those other no code [703] Builders but I just find make to be like [705] qualitatively Superior in basically [707] every way um it's a lot of the time the [709] operations are faster you can do better [711] error handling you can just do a lot [712] more in make.com uh and that really does [715] like touch on that glue concept A lot of [717] these systems to me seem more like [719] staplers where like you you know you [720] staple something then however the hell [722] you want to like pull them apart you [723] know the two pieces just just just do [725] not work um make Doom is a lot more [727] gentle and it's just a lot more [728] intuitive I think for people that are [729] used to dragging and dropping stuff um [732] and you know as I mentioned it's also [733] cheaper so that is more or less in a [736] nutshell uh why I like make.com over a [738] lot of the other Dragon drop Builders [741] and yeah this is one of probably the [743] funnest most exciting platforms that [744] I've ever used in my life so I hope all [746] of this makes sense our first video that [748] I'm going to do on like actual make.com [751] things is going to be on make.com Basics [753] so if that's something you're interested [755] in if you are an introductory sort of [757] Watcher and you never use make.com [758] you're definitely not going to want to [759] miss that we're going to cover signing [761] up modules operations like every one of [763] the five trillion tabs on the leth hand [765] side bar of make.com screen uh you're [768] going to know everything about the [769] platform by the end of it but I'm just [770] going to make sure to package that in a [771] way where it's very clear what you're [773] going to actually use in day-to-day and [775] then what you're not going to use thanks [777] so much for watching I hope you guys are [778] excited about this as I am if you have [779] any questions comments please like uh [782] subscribe do all that fun YouTube stuff [784] and I will catch you in the next one [786] cheers

Video: https://www.youtube.com/watch?v=KHBkCwVrXvY
Title: 7-Figure Agency Hiring Playbook ($2.4M Earned)
[0] what's going on everybody in this video [1] I'm going to give you the endtoend [3] playbook for how I hire at my seven [5] figure agency this is a system that I [8] developed over the course of about 2 [10] years we are a writing company and so we [12] had very very high throughput and [14] managing our throughput was costing us [16] 10 20 maybe even 25% of our total [18] revenue so building the system [20] essentially enabled us to claw all of [21] that back and in this video I'm going to [23] show you exactly what that looks like so [24] that sounds like something you're [25] interested in stay [28] tuned [32] okay so first things first the entire [34] way that the system works is everything [36] begins with [37] indeed.com we use indeed for hiring uh [40] preferentially over other platforms [42] because we found that upwork which most [44] other agencies of our size used to hire [47] uh usually ends up costing us 30 to 40% [49] indeed is simple and it also allows us [51] to build our own infrastructure and our [52] own system to manage these applicant [54] which makes things really simple so what [56] we'll do like if I were to show you the [58] actual Playbook is we have a job post [61] set up uh we just call a Content writer [63] and we'll set it up in various locations [65] we'll usually set one up in Canada we'll [66] set one up in the United States uh at [69] times we'll set one up in like Australia [71] or South Africa or anywhere where [73] there's going to be a high concentration [74] of people that are good at English they [76] know English they can you know write [77] English [78] comfortably and then uh this is our job [80] application that we will post we will [82] say this job is 100% remote you can work [84] wherever you want whenever you want [85] we're extremely flexible to submit your [87] application use the form at the bottom [89] of this description you'll choose your [91] hourly rate so we actually allow people [92] to choose their hourly rate you'll add [94] your portfolio Etc and then we'll [96] contact you via email best of luck so [99] the rest of this is just like a classic [101] uh job post you guys can probably get [103] chat GPT now to whip this up for you in [105] like 30 seconds but the thing that [107] matters down here is we have a type form [109] so 1 second copy. typeform.com and then [111] that type form includes a source so we [113] can track where the leads are coming [115] from or where the hiring I guess uh [117] applicants are coming from uh and then [119] we can track their location as well [121] which is important because we use that [122] to determine currencies and kind of do [123] conversions and that sort of deal so [125] when you click through that if you are [126] applying for our job this is the screen [128] you're going to get application content [129] writer answer all questions truthfully [131] into the best of your ability best of [132] luck and thanks for replying what [134] happens is you'll click this you'll type [137] your full name so let me just put my [139] coffee cup somewhere where I don't spill [140] all over my Priceless MacBook I'm just [143] going to use myself as an [146] example uh LinkedIn URL [152] anybody wants to connect with me Now's [153] the Time and then a portfolio or website [156] I mean since we are a writing company [158] it's very important for us to see uh the [160] stuff that people are writing about now [162] ideally if you're applying for a [163] position and maybe you're just like a [164] Content writer that's watching this and [166] you're curious about how um agencies [168] like ourselves like actually do the [170] hiring determination um if you are you [173] should create a website for yourself or [174] a portfolio so this would be a place [176] where somebody puts that right like [177] maybe it's just your personal website [178] maybe it's a Blog maybe it's whatever we [180] have made some allowances for new [181] writers um where if you don't have a [184] portfolio then you can create a Google [186] doc just go to docs. new and so we just [187] literally give people a button that they [189] can click to create a Google doc and [191] then we tell them to write a few [192] paragraphs describing the work history [194] now um the reason why I allow people [196] with that portfolios to apply is because [197] sometimes that's how I get the best [199] quality talent for the least price these [200] people are usually new to the industry [202] they're new to writing in general but [203] they really want to make it work and [204] they're more just attracted to like the [206] remote work aspect than anything else so [208] sometimes you just have people fresh at [210] that are just really good writers I [211] wanted to allow them the uh capability [212] to do so without necessarily just [214] forcing you to have a website or a [216] portfolio the uh C uh the catches a lot [220] of people that send these Google Drive [221] links um are locked because they just [223] don't know how Google Drive works so I [224] had to put a little snippet here to [225] remind them um sometimes people want to [228] upload like a Microsoft docx or I don't [232] know just like some PDF file with their [233] portfolio so I allow them to do it here [235] but to be frank I don't really look at [236] these and then I ask where you're [238] located now I mean as you see see it's [239] already location Canada wide but we just [241] like to have people reconfirm that so [243] let's pretend I'm in Canada and this is [245] really the kicker and this is like the [246] secret sauce that I think makes our [247] application process so scalable uh we [249] will ask people for their desired hourly [251] rate and then we're sort of sneaky about [253] it we say our current average pay is and [256] then we give them an anchor and so if [258] you think about this from the [259] perspective of like our value [261] propositions we are offering a very [263] flexible remote uh you know do work on [266] your own time sort of freelance [267] opportunity which is very attractive to [269] people that like autonomy and freedom [271] and so what we've decided to do to make [272] that even stronger of a proposition is [274] we allow people to pick their own hourly [276] rates and then the quality of their work [278] is usually how they justify whatever [280] hourly rate that they want this also [282] allows us to show our job on indeed to [284] literally everybody since we don't have [285] to lock in an hourly rate and all we do [287] is we anchor them to a desired hourly [289] rate by saying our current average pay [291] is in this case 2150 USD per hour which [294] is actually really good pay for Content [296] writing on an hourly basis so it [298] defaults your local currency if you [299] selected United States in the previous [301] page it'll be in US yada yada the cool [303] part about this is we usually get a lot [304] of people oh yeah [306] $2,150 an hour that's funny oh I just [308] realized that uh we can't actually do [310] decimals that's interesting just found [312] that out now um the really cool thing [315] about this is like 80% of people will [316] pitch us below the desired hourly rate [318] of 2150 so we actually get the same [320] quality talent for less money than we'd [321] otherwise get if we just posted a normal [323] job app got to use your heads people um [326] what's your typing speed this is [327] important to us uh because we just want [328] people that can write quickly obviously [330] if you're like pecking at the page and [332] we're paying you per hour it's just [333] going to cost us more uh we also offer a [335] little typing test for people can find [336] out and then we ask people if they use [338] tools so I've used chat GPT word tune [340] grammarly all that sort of thing uh then [343] we ask when you can begin the work so [344] maybe we can start February the 17th [347] 2024 and then if we click um oh yeah we [351] also ask how many hours can you work per [353] week and then uh you know if we click [355] submit here then it'll actually go [356] through and like forward my application [357] to the system I'm not going to do that [359] cuz this is is just for demonstrative [360] purposes but as you can see um the real [362] benefit of setting up your own hiring [364] system and using indeed is that you can [365] funnel people through a pipeline that [366] you create rather than having to be [368] forced to constantly check inde deed or [369] whatever and the way that we've set up [371] our own hiring system is we've set it up [373] in clickup so let's say I fill out this [376] application um everything's good what [377] happens there is we have a bunch of [378] automations that will then collect the [382] request from [384] the uh [386] writer okay I don't know it's somewhere [388] around here [391] but anyway when you're when you when [392] you're done filling out the typ form [393] what will happen is we will then um push [396] that over to this big pipeline which is [399] appropriately called the hiring Pipeline [402] and we'll basically just uh you know [405] iterate through all those fields and [406] then just add them as columns and then [408] we have like basically like a pipeline [409] the same way that we have like a work [410] pipeline or like a CRM it's just like a [412] hiring applicant Pipeline and we found [414] this to be extremely important because [415] this allows just like a virtual [416] assistant or somebody else in our team [418] to quickly thumb through these [419] applications in a format that like works [421] for them um and then rate them and then [422] do like one or two passes uh and I'll [424] show you what that looks like in a [425] second so we just had a bunch of people [427] fill this out as you can see we have 174 [429] applicants um when you are using indeed [431] with like a high throughput system like [432] we are where you post this to like 15 [434] different you know Indeed job [435] applications and 15 different locations [438] um you usually get like you know [439] anywhere between like 20 to 50 [440] applicants a day so this is pretty high [442] throughput because we're like a pretty [443] churn and burn sort of company right we [445] we want writers that are remote uh we [447] want writers that are very flexible but [448] the downside of that is a lot of will [449] just like show up for a few weeks and [450] then leave so we need to constantly be [452] churning here um and we do have some [453] Raiders that have been with us for like [455] well over a year and a half now but they [456] are far few and far in between so what [458] do we see now we see the rate we see the [460] minimum hours we see the source so we we [462] weren't just using indeed for job [464] applications we're actually using um a [465] couple of other places like handshake [467] and zip recruiter uh again the benefit [470] to having a type form is it just allows [471] you to post that link anywhere you want [473] and then still have the leads funnel [474] into the system so very flexible uh we [477] have a rating we have some comments here [480] right some people are like oh you know [481] this person sent me a link or you know [483] some somebody referred me that sort of [484] thing we have a role words per minute [486] hourly rate trial article there's an [489] email field so I don't want to go too [490] far and you know leak a bunch of [491] people's emails okay I think that's it [494] um and then there's like a currency [495] column here where we can actually see [496] the currency that they have so anyway we [498] will pump that type form submission into [500] here and then what we'll do is we'll [502] have like an an HR person assigned to [504] this just go through all of their [506] applications basically from start to [508] finish so they'll go through their [508] portfolio they'll give it a click I [510] don't know who this person is but hey [512] lovely application Brooke fantastic work [515] um and then we will like give them a [517] rating maybe like four out of five five [519] out of five three out of five whatever [520] the second that we give them a rating [521] what happens is they go to the next [523] stage of the pipeline which is number [525] one reviewed now these are people where [527] um usually we'll have like a virtual [528] assistant or something do the first pass [530] but this is uh like a higher priority [532] stage and so this is where we will get [534] like our content manager to then thumb [536] through all of the applicants that have [537] been reviewed basically they have like a [539] a minimum level of quality and this way [541] we allow our hiring manager to save a [542] lot of her time like she doesn't have to [544] spend you know she doesn't have to thumb [546] through 174 applications day she only [547] needs to thumb through five or six and [549] so this is a way that we like convert a [551] process that otherwise might actually [552] cost a company like an agency at our [554] size like 30 or 40 bucks a day and we [556] turn it into one that might cost us $5 a [558] day because reading through five or six [559] apps is as simple as clicking the [560] portfolio being like Oh yeah this person [562] is pretty good and then checking them to [563] the next step of the process okay great [566] so what happens after this stage let's [567] say I really like Claire's work she's [569] fstar rated I've you know checked her [571] thing and I'm the hiring manager what I [572] do at this point is I change her status [574] from number one reviewed to number two [575] request trial not going to do that again [577] because these systems are up and running [579] and I don't want to send cla a trial [580] request without clearing it with my team [581] first but um what that does is we also [585] then have a second form which is a trial [588] request form where we'll actually ask [589] the applicant to write an article for us [592] uh and then we'll actually pay them so a [594] lot of people are afraid to do this but [596] we will actually pay people um to write [598] like a test article and this is what it [600] looks like we'll say thanks for your [601] interest in our content writer position [603] this is a brief set of instructions to [604] help you write your first paid trial [606] article um we'll ask people to track [608] their time because we pay people per [610] hour so it's very important for us to do [611] that um some people will try and skirt [613] this and they'll say that they worked [614] more hours or less but that doesn't [616] really matter to us because the marginal [617] cost of getting an applicant is uh is so [620] low already and then what we do is we [622] have them write 500 Words um 500 Words [624] is ideal for us because it means that we [626] don't really have to pay them too much [627] usually it's pretty short but it's still [629] long enough to demonstrate some level of [630] expertise or Acumen I mean like the [633] entire point of this is you want to ride [635] that sweet spot between like okay I know [637] enough about the applicant to actually [638] make an informed decision but you also [640] don't want to invest too much in [641] somebody that just you're not actually [642] working with that might just like flake [643] and disappear on you remember these [645] people aren't still invested or or [646] leveraged in our company at all they're [648] just random people that we sending over [649] a request then the form will walk them [651] through what the title of the article is [653] the brief um we want a certain tone of [655] voice so we'll send them an article from [656] wired to read through we'll give them [658] some simple instruction instuctions this [659] is just stuff that they' like probably [661] get in the course of working with us [662] when a client um sends them over a brief [665] we do formatting and all that stuff and [666] then what we'll do is we'll ask for the [668] final word count of the Google Doc we'll [671] ask for their full name um just a sort [672] of like a a double up their email [674] address how much time did they take to [676] log and we have like a specific format [678] because our automation needs to pay them [680] uh and then we have like a Google Drive [681] Link where uh we will again just give [683] them some simple instructions to teach [685] them how to like you know add a share [686] link the purpose of this isn't that like [688] we actually need all this by the [689] way the purpose is just hey can you [690] follow simple instructions if anybody [692]  up at any point in this process we [693] just eliminate them and we don't really [694] work with them because this is sort of [696] like lowest hanging fruit right if [697] you're not detail oriented to like add a [698] Google Drive Link probably not going to [700] be detail oriented enough to write like [701] an article that's going to make it into [702] a magazine anyway what we'll do is when [705] we move that person to stage two request [707] article we'll actually send them a an [709] email and the email will basically uh [711] request a bunch of information it'll say [713] hi thanks for application we've reviewed [715] your pfolio are interested in moving [716] forward with a trial article assuming [717] you're sld in the market here's the info [718] you submitted through through our form [719] we'll just reiterate what their hourly [721] rate was and stuff like that just for [723] clarity purposes and then we'll talk [725] about our trials and then we'll send [727] them the link so you know they'll fill [728] out the trial form and then you know [730] we'll kind of take it from there so [732] assuming that they filled out the trial [733] form what we'll do next is we will [734] automatically pay them and so we have an [737] automation setup that will just like [738] send somebody a certain amount uh in [740] Wise um and then you know we have [743] somebody that just checks our wise every [744] day cues the payment ensures that it's [745] not something unreasonable like 500 [747] hours were logged for writing a trial [748] article [750] and then after that when they're done uh [752] they automatically move to the review [753] trial stage we'll use an automation [755] that'll check that form submission [756] obviously link up the email address to [758] the email address in this clickup uh [759] database and then assuming that that [762] works uh then our hiring manager now has [764] literally like a portfolio with a trial [766] article column somewhere around here [768] that I'm not going to go too far uh over [770] to the right to get but we'll basically [772] just have all of that information [774] available in the body of the task yeah [776] there it is so we we'll actually see [777] like a Google Drive link with our [778] automation uh uh having filled that out [781] and then yeah at that point you know we [783] we see their trial article we can make a [784] hiring or a firing decision and then [786] what we'll do is we have an onboarding [788] step so if we move this over to [790] onboarding um then our new team member [793] because that's basically what they are [794] now uh we'll receive an invitation to [797] our slack our slack is where our whole [798] team communicates and so we'll invite [800] them as a guest and then we'll just send [801] them a couple templated messages [803] basically being like hey how's it going [804] you know we loved your trial article [806] thanks so much we'd love to have you as [807] part of the team why don't you get on [809] board for like a 3-week um uh what do we [812] call it it's not like a probationary [813] period we make it sound a little nicer [814] than that but like why don't you get on [816] for like a 3E trial period where we'll [817] pay you like we pay every other writer [819] we'll just see if this is like a culture [820] fit it is extremely important when [822] you're working or starting a remote [824] company to ensure that everybody is a [826] culture fit it's actually not that hard [828] to make sure people are culture fits in [829] remote businesses uh simply because if [831] you're in a remote business you usually [832] like want to meet people and you want to [833] make friends you don't really have a way [834] to do so otherwise and so you're usually [836] sort of on your best behavior you're [838] social and you chip in on slack coms and [840] that sort of uh but it is still [842] important to make sure that like you [843] know the rest of your team knows who [844] this person is the rest of your team can [845] communicate with them um the way that we [847] do this is we ceue up three or four [850] messages to be sent basically every 5 or [852] 10 minutes from different people in our [853] team basically saying hey welcome aboard [856] thanks so much for joining uh it's great [858] to have you here you know like Nick told [859] me so much about you uh you know like I [862] I'd love to see your work that sort of [863] thing and so this in a way just like [866] front-loads the person with like good [867] feelings excitement emot culture and it [869] makes them feel like they're a fit in [870] our team before we even like really made [872] that decision over the course of the [874] next 3 weeks we will then just treat [875] them like anybody else in our team so [876] our manager will then assign them to [878] articles and you know add add them to [880] pieces in our pipeline uh she will then [882] be relatively harsh on editing over the [884] course the first couple of weeks just to [885] make sure this person understands [887] comments and understands that like you [889] know this this is nothing personal it's [890] just like how the business operates [891] you're going to need to like accept [892] revisions and do things like that and at [894] the end of that 3-we period we will go [895] through and we'll back calculate the [897] profitability on each article which we [898] can do automatically which is quite nice [900] and then if the profitability is below [901] our Target margin like if it's way below [903] then we'll just let them go if it's sort [905] of around the same area then we'll have [907] a conversation with them and say Hey [908] listen we really like your work just to [910] be transparent here's where we're at [911] with the profitability here's where we [913] need to be what can we do to help you [914] achieve that goal because we want to [916] keep you around and then if the person [917] is well above their profitability [918] threshold then we invite them to the [920] team and we have like all 20 or 25 [922] members be like hey thanks so much like [924] welcome we're super happy to have you [925] and all that so they receive you [927] know these very positive emotions that [929] all steps through the process which is [930] important um and uh yeah it's how we [933] ensure that people are both culture fits [935] um they're also very profitable for us [937] and that uh we can do this whole thing [939] just in a very short period of time like [941] the average hiring time uh and hiring [943] cycle in agencies is anywhere from like [945] two weeks to like four weeks we get a [947] productive staff member from literally [948] like day three approximately they're [951] actually contributing they're doing [952] pieces even if they're a little bit over [953] our profitability Target that's okay it [955] doesn't really matter we're still at [956] least getting work done so yeah that is [959] my hiring system from start to finish I [961] hope you guys enjoyed that video uh if [963] you're not at this stage in your agency [964] yet and you've just been sort of [965] watching this out of curiosity totally [966] cool if you have any questions about how [968] this process works specifically let me [970] know I know that I barely touched on [972] like the make automations and the actual [974] systems in this video that was because [976] uh there are like 17 of them and I [978] didn't want to get too deep into it but [979] I think as long as you understand the [980] logic flow from a bird's eye view uh you [982] kind of understand you know where I'm [984] coming from and the The Playbook that [985] seven figure agencies like mine use to [987] hire while also maintaining like 50% [989] plus margins okay great please like [992] comment subscribe leave your thoughts [993] down below and I'll catch you in the [995] next video thanks so [997] much

Video: https://www.youtube.com/watch?v=v9f87-aHbzE
Title: non-guru explains how he made $150K with a simple copy hack
[0] what's going on guys I know a lot of you [1] have been asking in this video I'm going [2] to break down my four-step cold email [4] copywriting process this has made me a [6] little over 150k us in the last uh 16 [10] months something like that uh you do not [12] have to be a good writer for this all [13] you have to do is follow a simple [14] formula this works for me and this works [16] for a dozens of other people that have [18] helped produce similar results over the [19] last couple years so if that sounds like [21] something you're interested in let's get [22] into [25] it okay first things first I use [27] instantly. a to manage all of my cold [29] email camp pains it's one of my favorite [31] platforms ever I'm not going to run you [33] through how to get up and running with [34] this platform if you want to watch that [36] I'll leave a video link in the [37] description that covers my actual system [39] from sourcing leads on LinkedIn uh to [41] enriching them and and so on and so [42] forth but this is a campaign that I ran [46] uh [47] like eight months ago N9 months ago [49] something like that I don't know my math [50] ain't so good uh it was about two months [52] long we sent about [53] 4,500 contacts uh we had a reply rate of [56] 12% approximately Allin which if you're [59] in the business business you'd know is a [60] pretty good reply right usually [62] campaigns get anywhere from like 2 to [63] maybe [64] 42% uh unless they're hyper customized [66] and ours were were not customized that's [68] one of the benefits of my email [69] copyrighting approach that led to 187 [72] opportunities is a little bit misleading [74] instantly defines an opportunity as any [75] reply but some of these were out of [77] office replies some of these were sort [78] of just like irrelevant ones so about a [80] third of those were somewhat positive [81] replies and then about a third of those [83] actually led to like booked meetings uh [85] I think from this we ended up with like [86] 12 clients something along those lines [88] so they act client you know process in [91] our case it wasn't like Bonkers but this [93] is a reasonable and totally average [96] campaign performance that you can expect [98] as long as you nail the copyrighting [99] steps and that's why I wanted to show [101] you this it's not going to like win any [102] awards but it doesn't have to be uh you [104] know getting 12 clients over the course [106] of two months is like 1.5 clients a week [108] for a lot of client for a lot of [110] agencies that's more than enough so in [112] short this is the copy that I've sent [115] and what I'm going to do here I mean I [116] used to have a bunch of variants I just [117] cleaned them all up for the purposes of [119] this demonstration what I'm going to do [120] is I'm going to talk about why this [121] email campaign performs so well um I [123] have a four-step copyrighting formula [125] notion doc that I'm going to just run [126] through and give you guys some [127] background and then I actually also have [129] a couple of email roasts where I'm going [131] to go in and then I'm going to fix and [133] optimize uh cold emails from the [135] community that I've sourced I'm part of [137] a great Community uh started by the [138] founder of fat show his name is Joe [140] Davies uh and so I've been talking to a [142] lot of people there so I got a great uh [144] a great example here then I got a great [146] example from my Twitter all this stuff [149] is just write for optimization and [151] they've all cleared it uh with me that I [153] can roast them and that sort of thing so [155] any without further Ado uh let's get [157] into it there are four steps that you [159] need to nail uh if you want to run a [162] copyrighting campaign at scale like I do [164] I'm not saying that this is the only way [165] to do it there are a lot of people out [167] there that have had great success with a [169] different formula whether it's three [171] steps five steps 25 steps whatever but [174] I've tried to simplify it and get it [175] down to just as like a reductionist [178] approach as humanly possible and here [180] are what I found were the four [181] non-negotiables number one you have to [183] mention Logistics so you have to tell [185] them where you found them and you have [186] to tell them why they should give a [188] number two you have to show them [190] background a little bit about yourself [192] what are you capable of doing for them [194] you know give them like your your [195] elevator pitch in a sentence number [197] three you need case studies at least one [199] preferably two or three this is just [201] demonstrating that you know your stuff [202] you can site specific clients and you [205] can site specific results given for [207] other people and then four and this is [209] like non-negotiable you need to have [211] some type of risk reversal this [213] basically means you need to have some [215] type of guarantee you need to have some [216] type of like money back offer if you [218] don't have this uh you're probably not [220] going to make it past like a 2 or 3% [222] reply rate and so the entire reason why [225] I got 12% is because my I just had an [227] awesome offer I had like 100% risk [228] reversal doesn't cost you anything you [230] don't pay if you don't see the results [232] that you're looking for um if you don't [234] do that you just cannot freaking close [236] Cold clients at scale it's just [238] something that you need and I'll go [240] through kind of the context and the [242] methodology behind all these in a second [244] but simply put Logistics is very easy [248] I'll give you a quick example from my [250] campaign here that I ran that generated [253] me uh I don't know I think this one made [255] over $20,000 for total investment of [257] like 400 or 500 bucks right so this very [260] very profitable uh nobody asked for a [261] refund nobody asked for anything this is [263] this is how I did it so first things [265] first Logistics who are you where did [267] you find them why should they give a [268]  um this is like about the most [271] lukewarm example of that and my [273] copywriting campaign still crushed so [275] hey first name I found you on LinkedIn [277] and I figured I'd reach out what are we [278] doing there we're telling them where we [280] found them which is LinkedIn if you [282] don't do this a lot of the time People's [284] First questions are going to be like [285] where did he get my email from how did [287] you get my information why are you [289] talking to me yada yada found you on [291] LinkedIn that's the context and then [293] figured I'd reach out that's like the [295] simplest most lukewarm like hey I just [297] wanted to reach out realistically if you [299] wanted to like hyper optimize this you [301] would have some other custom variable [302] here maybe like found you on LinkedIn [304] and saw you were in the UK or like found [306] you on LinkedIn when I was browsing [307] through Niche Shopify store owners or [310] something like that I just did this [312] because my audience is extremely General [313] so I didn't even really need to Niche [314] down but the more that you Niche down [316] the better that your reply rate becomes [317] because the more uh purposeful the more [319] intentional your emails uh get and [321] generally speaking just the more people [323] like you you should Niche down as much [325] as humanly possible uh don't necessarily [328] do what I did here and just send to [329] super wide audience if you want [330] fantastic results try and you know get [333] at the intersection of like Shopify dog [336] food uh WordPress website owners or some [339]  like that and you'll do way better [340] than if you just talk to like marketing [342] agencies okay great so that's number [345] one uh that's not what I want to do okay [347] great that's number one number two is [349] background so what are you capable of [351] doing for these [352] people so this is my background [355] statement I'm a freelancer who's worked [357] with a number of companies to grow [358] content production incl including [359] company a company B and Company C that [362] is my background super simple um well [365] this is sort of a hacky example cuz I I [367] combine two things actually this is my [369] background um I've split test of this I [371] get significantly higher response rates [373] and then significantly higher client [374] acquisition if I frame myself as a [376] freelancer on the first Contact usually [379] contact 2 three four when we actually [380] get on the call I have a sales process [382] that like eliminates this as a hurdle [384] but this is like the highest uh response [386] rate way um to get interested parties in [389] my Niche this may be different for you [391] you might want to pit yourselves as we [392] are a Content agency we are a Shopify [397] plug-in developer website we you know [400] we're a Content Marketplace whatever the [401] hell you want to do you're going to need [402] to figure that out for yourself but this [404] is how I do my background so I'm a [405] freelancer who work with a number of [406] companies to grow content production [409] okay number three is you need some type [411] of case study what proof do you have [413] that you can actually do the things that [414] you want to do for them and so the [416] reason why I showed this example first [418] is just so you could see how shitty of a [419] case study you need in order to make uh [422] a campaign that can still generate a 12% [424] reply rate and still generate like a 40x [426] Roi I didn't even really have that good [429] of a case study I just said I've worked [430] with a number of companies to grow [432] content production like nordvpn Sam [434] Russian anded these are relatively big [436] companies right they have a fair amount [437] of name recognition but this isn't [438] actually like specific it's not like I [440] helped nordvpn get 47 clients in the [442] last three weeks that's like a really [444] good case study but all I did was I just [445] threw out a couple of brand names I said [447] I worked with these people that's [448] literally you need to do to have like a [450] reasonable case study so if you don't [452] actually have like super crazy results [453] don't worry about it too much you can [455] actually get pretty far just with a [456] really shitty example like this okay [459] great that's that uh and then the last [461] and the most important thing is risk [462] reversal what is the easiest simplest [464] most no-brainer way you can present this [466] offer to remove the possibility that [469] your client or Prospect I should say [470] will say no so what I did here was I [473] said I would love to have a conversation [474] or write up a free trial piece for [476] whoever currently orchestrates content [478] no strings attached Ed again super [480] simple this is all you need to do if [483] you're running a Content agency [485] extremely straightforward my risk [486] reversal is basically I'll write you a [488] free trial piece no strings [492] attached obviously the exact um [496] circumstances this cooperating like I'd [497] love to have a conversation for whoever [499] Cent currently orchestrates content I am [501] looking for like a specific person in [502] the company I'm looking for the person [504] that like makes decisions regarding this [506] uh my targeting is pretty good so [507] usually that's the person that I'm [508] talking to but not always and this helps [510] me you know get that referral uh and [512] then I just finish with a question de [513] you mind pointing me in the right [514] direction thanks I really appreciate the [516] help Okay cool so that is probably the [518] shittiest example literally one of the [521] shittiest examples of an email campaign [523] that embodies these four principles and [525] it still crushes it now let's look at a [527] slightly more optimized version of one [528] of these [529] campaigns this is the writing example [531] that I just covered if I scroll down a [533] little bit and I go down to lead gen [536] example this is a lot more specific so [540] uh we need those four things we need one [541] context I found you on LinkedIn and I [543] thought I'd reach out two we need a [545] background so in this case I wrote I'm a [547] freelancer and built out a system for [548] agencies that generates 20 sales [550] appointments per month without spending [551] a scent on ads this is another real [553] campaign I don't remember how much money [554] I made off this but it was a fair amount [555] it was for my uh for my AI [558] consultancy third I had a case study [560] that was hyper specific in September I [562] helped one second copy get 124 [563] appointments in just shy of 30 days [565] based on the looks of it I'm 100% sure I [567] could do something similar for your [568] company [569] and then four we need some type of risk [571] reversal which I did with no risk and we [573] even guarantee you 20 or more [574] appointments in the first two months [576] then could I show you over 15-minute [578] call this week super straightforward [580] this is what I would call like a good [582] email to send out um this is what I [585] would call the one that I showed you [586] before like a soft sort of mediocre [588] email to send out but the reason why I [590] started with that is just because I [590] wanted to make it clear you do not need [591] to be like a copyrighting god to do [593] really well with this you just need to [594] follow a couple of core principles and [596] just repeat them now if you're reading [598] this you'll probably notice so there are [599] a few particular things that I'll I'll [601] do usually um at the bottom of my emails [604] always write sent for my iPhone this is [605] just split testing when I do set for my [607] iPhone I get like a 05% Improvement in [609] reply rate I think there's still some [611] Boomers out there that are like oh that [612] guy probably just sat down on his iPhone [613] and typed this out so uh you know it [616] helps um I'll usually say something like [618] thanks I appreciate the help or thanks [619] for the time I don't have like a really [621] fancy email signature because I've [623] tested this out and usually including [624] HTML in your emails is like a no no for [626] deliverability a few more of your email [629] else out of like 100 will land in spam [631] and then that'll reduce your reply rate [632] obviously because people are going to [633] look at it um I'll usually have some [635] kind of a soft ass you mind pointing me [637] in the right direction is this worth a [638] call right I I like to make the first [641] step as simple as humanely possible for [642] people to take um to make it easier for [644] me to get the next one this is called [645] like the foot in the door technique and [648] then in many cases I'll brand myself as [650] a freelancer on the initial connect [651] because I find that that's just a lot [652] more personable um again this doesn't [654] actually work for every industry I've [655] tried this with a variety of other [657] clients that I work with and then if you [658] say like I'm a freelancer they'll just [659] be like oh okay some some companies [661] especially higher ticket things they [662] really want like very high perceived [664] legitimacy they want like a big [665] established company that sort of deal so [667] these are just specifics that work for [668] me um the point of this video isn't [670] isn't that the point of this video is uh [672] those four principles that I covered [674] earlier okay great so now that I've [676] covered how that works and I've given [677] you a few examples from my own emails [679] what I'm going to do here is I'm going [680] to scroll down and then I'm going to fix [683] uh maybe fix isn't the right word I'm [685] going to optimize a few emails that I've [688] gotten from two sources one fatos [691] scalers doso community and then another [693] from uh one of the many people that [695] messaged me on Twitter asking me to help [696] them with their cold email so for the [699] scalers at so example we have high first [701] name stumbled onto your website Ur URL [704] and noticed you are using Shopify ever [706] thought of creating a custom mobile app [707] for your store want me to send you a [709] quick video showing how we can increase [711] your store sales by up to 15% within 3 [713] months with an app PS we did the same [714] thing for brand insert name here they do [717] about 9627 million million a year now [719] with a significant portion coming from [721] their mobile app great so that's what [723] we'll start with at first glance this is [725] pretty good this does not have the four [727] principles that I mentioned earlier but [728] it has a few of them and it does a [730] really good job of showing that [731] legitimacy and social proof the issues [733] that I have with this are uh they have [736] one of the most impressive pieces of [737] social proof on planet Earth and they [739] left it all the way down at the very [740] bottom of the email what's the [742] likelihood that somebody is going to [743] read this in their mailbox when they [744] receive like 15 or 20 of these sorts of [746] emails a day and then actually make it [748] all the way down to the part that like [749] distinguishes you which is the fact that [750] you've worked with like almost a billion [752] dollar what's that like nine figure or [754] some company um if you have social [756] proof like that got to make sure it's [757] front loaded got to make sure it's one [759] of the first things that people see so [761] what I'm going to do here is I'm going [761] to I'm going to tighten this up I'm [763] going to imply the four principles that [764] I just showed you and we're going to [765] make this email significantly better and [768] uh you know to the person that sent me [769] this um you know and I'm going to send a [772] message after this uh feel free to split [774] test this against the original campaign [776] see what performs better don't just take [777] my word for it maybe yourich is a little [779] bit different but I can almost guarantee [780] you that if you include my four [781] principles it will okay great so first [784] things first Logistics where did we find [786] them and why should they give a so [788] right now it's high first name stumbled [789] onto your website and notice you are [791] using Shopify this is reasonable this [795] provides a little bit of background [796] context I stumbled onto your website and [798] noticed you are using Shopify I think [800] that you know personally if I were to [801] read an email like this my first take [803] would be stumbled onto I don't really [804] think you stumbled onto clearly you were [805] looking for something so um you know how [808] above I always write I found you on [810] LinkedIn and I thought I'd reach out I [812] would probably write something [813] like hi I found website URL when looking [819] for [821] Shopify stores that do over I don't know [825] let's say like 20K a [827] month and thought I'd reach out [830] something along those lines now you can [832] obviously customize this we could have [834] like a a variable in whatever cold email [836] platform so we could say like estimated [838] Revenue or something like that this [840] would depend on the specifics of your [841] data collection process but uh [843] essentially I found website URL when [844] looking for Shopify stores in this Niche [847] or with that estimated revenue or or [849] whatever I would be significantly better [851] than like hey I just happen to stumble [852] upon your website in 2024 nobody [854] stumbles on your website it's very clear [855] that you are going to be selling them [857] something so you know operating within [858] that frame you want to make sure that [860] like given that you do really well okay [862] great background what are you capable of [864] doing for them so um if you see the this [868] sequence does not currently or this one [870] email does not currently include any [871] background so basically you said I found [874] whatever and then have you ever thought [876] of creating a custom mobile app for your [877] store generally you don't want to do the [879] ask until you've established credibility [881] and you know it's very clear that you [882] know your the ask comes at the end [884] after you Peak their interest and you [886] know uh they sort of have an idea of [888] what you're attempting to to sell them [890] so what I would do in this case is I'd [891] write something [892] like [895] um we create a custom mobile apps [900] specifically for Enterprise Shopify [903] stores in the [906] blank Niche and [909] routinely generate some [913] multiple or more for them no strings [916] attached so I do something along those [919] lines what do we do well we create [920] custom mobile apps specifically for [921] Enterprise shop if I stores in the [922] whatever Niche and routinely generate [925] this much money for them with no strings [926] attached this isn't you know going to [928] win any awards or anything and I don't [930] fully understand what this guy does for [931] a living I don't really know how his [932] business works but from a first kind of [934] principles perspective this just hits [936] all the notes that you know people want [937] to see uh when they are reading like a [940] high quality email okay great so we did [942] number one we did number two let's see [944] what number three is case study what [945] proof do you have that you can do that [947] so this fellow uh put his case study at [949] the very end uh again there's no real [951] reason why you should do that why don't [954] we put this up [956] here the way that you write case studies [959] usually is you want to have like some [960] type of time constraint and so you want [961] to make sure that it was quite recent [963] because uh if you were at like 14 years [964] ago we helped this company people don't [966] really give a so ideally you would [967] have some type of time um indicator here [969] so maybe it was like last or I don't [972] know last year I built an app for [976] whatever the company is that [981] now or maybe I do they do 9627 million a [988] year [989] here [991] and a significant portion comes from [993] their mobile app maybe I'd like try and [994] Define [996] this comes [999] from their app I'm [1003] confident I could do something similar [1005] for you okay great now we have like a [1008] relatively high quality Case Study of [1010] course this isn't at the very beginning [1011] of the email I think if I um like had [1015] full cart blanch over this uh and if I [1017] could kind of like push my own rules a [1019] little bit I would find a way to get [1020] that 9627 million year as high up as [1023] possible so maybe in the subject line or [1025] something you reference that um maybe if [1027] we say subject line is quick Q I did um [1033] or maybe quick Q uh whatever like client [1036] name does [1038] 9627 million a [1043] year or quick Q I want to design an app [1051] for you that does 9627 million a year or [1054] something like that I don't know uh [1055] basically front load some extremely high [1057] Revenue figure just to Peak people's [1058] interest the vast majority of the emails [1059] they receive on a daily basis are from [1061] people that like make no money and have [1062] no money uh usually people out of like [1064] you know bot farms and India or Pakistan [1067] or maybe the Philippines so you can [1068] really separate yourself from that by [1070] dropping High USD Figures it's very rare [1071] that like an app Dev shop in the [1073] Philippines or something like that is [1074] capable of producing these high gross [1075] numbers just cuz the cost of living down [1077] there is so much lower and that sort of [1078] thing uh than in the US so if you have [1080] these super high Revenue figures you [1082] should be trying to advertise it as much [1083] as humanly possible so anyway that's [1085] just one subject line uh you know feel [1087] free to split test it when you see this [1089] but um you know do do like three or four [1091] variants and try and just drop that 962 [1094] um as often as humanly possible [1096] otherwise you can just do something like [1097] quick q and then first name uh you can [1100] experiment with lowercase a lot of the [1101] time I find that keeping subject lines [1103] in all lowercase makes people think that [1105] like you wrote it by hand and you just [1106] made a grammatical mistake that usually [1107] improves your reply as well um so all [1109] these little hacks and stuff like that [1111] can help add the few extra percentage [1113] points to that reply rate and ultimately [1115] that closing rate but anyway let's get [1117] back to the task at hand uh and then we [1118] need some type of risk reversal what's [1120] the easiest simplest most no-brainer way [1121] you can present it to remove the [1123] possibility that they'll say no okay [1125] great so um I found website URL with [1128] looking for shop five stores that do [1129] whatever dollars and thought I reach out [1131] we create custom mobile app specifically [1132] for Enterprise stores in the blank Niche [1134] and routinely generate blank or more for [1135] them no strings attached last year I [1137] built an that for this company they do [1139] ridiculous Revenue a year and more than [1141] 30% comes to their app I'm confident I [1142] could do something similar for [1144] you in this case I would write something [1146] like um is this worth a [1151] 15min [1153] call I'd give [1157] you a fully customized let's say like [1161] app road [1165] map [1167] and we need some type of risk reversal [1169] so it's like okay what can we give them [1171] and then how can we make it completely [1174] risk-free maybe we use that no strings [1176] attached line a little bit later so this [1177] this worth a 15-minute call I'd give you [1179] a fully customized app road map no [1182] strings [1184] attached [1186] um if you don't love what you hear you [1189] don't pay something like [1196] that if I can't improve your store sales [1201] by [1203] 15% in 3 months you don't pay something [1207] like [1211] that and then in this case um the person [1213] that sent me this over did not have [1215] anything to end their email so I would [1216] just write something like thanks for the [1217] time you know whatever your name is and [1220] maybe you know if you want you can write [1221] like X at whatever app company uh you [1225] are yeah so I'll add this copy in the [1229] description of the YouTube video just so [1230] you guys can have it in case you want to [1231] do this for yourself um but if you look [1234] back to what we had initially and then [1235] if you look back to what we had now uh [1237] this email now follows those four [1238] principles it's a little bit longer as [1240] you can see because we've added that [1241] extra little snippet down here and then [1242] we added an extra snippet there uh but [1244] I'm confident that that longer email [1247] although like longer emails are usually [1248] typically bad things I'm confident that [1250] that longer email is going to be worth [1251] it in the long run and then if you [1253] really wanted to optimize this you'd [1254] write something like sent for my iPhone [1255] or whatever okay great so that's that so [1258] um scalers thato example hope that helps [1260] and hope that walks you through some of [1262] my mindset when I'm optimizing emails [1264] that I think are pretty good but they're [1266] just lacking a couple things this is an [1267] example I got from uh Twitter uh I've [1270] just like written X in front of you know [1272] their name and all that stuff so uh [1274] something similar to what I did down [1275] here what these guys are doing in this [1278] case is they basically do lead [1279] generation for real estate companies in [1281] the UK and this is how their email [1283] sounds hey first name I notice that [1284] you're located in the UK I want to reach [1286] out cuz we've been generating client [1287] appointments for Real Estate compan in [1288] the UK we guarantee that you'll get a 3X [1290] return your investment in the first 90 [1292] days or will fully refund you I'd love [1293] to share how we achieved 37 appointments [1295] for X last month using Facebook ads and [1296] AI are you available for quick call this [1298] week to discuss how we can replicate the [1299] success for a company name now from a uh [1303] from a bird's ey perspective this is a [1304] fantastic cold email campaign um they [1307] got basically every note the only real [1309] thing that I would change are the [1310] placement of various lines for instance [1313] hey first name I noticed that you're [1314] located in the UK that's cool um I might [1317] tell them where I found them [1318] specifically it's not like you can just [1320] notice that you located somebody like [1322] through where like did you just like [1323] open up Google Earth and like find a [1325] picture of my face somewhere or [1326] something no obviously [1329] um I found you [1332] on LinkedIn when I was looking for uh [1337] Niche companies in the UK and if you [1340] really wanted to do you know to get even [1343] uh more specific maybe you could [1345] do specifically in uh I don't know like [1348] District or whatever like maybe [1349] Manchester or [1353] whatnot I'm reaching out [1357] because we generate client appointments [1359] for real estate [1360] companies let's do UK real estate [1365] companies let's do uh let's add a [1368] specific number there so we generate [1369] around 30 CLI [1371] appointments for UK real estate [1373] companies per [1375] week uh and I might add some specifics [1377] about your system and why it's different [1378] how it's differentiated using a [1382] system um that requires [1385] 0 in ad [1387] spend maybe let's just do like a fully [1389] automated system that requires zero in [1391] ad spend um a lot of the time when [1393] people pitch leg gen just from my [1394] experience they're doing it through ads [1396] and so uh usually it's like oh like you [1398] know you pay us nothing except for [1399] $5,000 a month media bu campaign so sort [1402] of gets ahead of that [1403] objection [1406] um let's see what else do we got [1416] here I'd love to share maybe i' do last [1420] month I generated 37 appointments for X [1424] company oh I guess this actually do use [1426] Facebook ads so never mind that probably [1427] doesn't work [1429] um I'm reaching out because we generate [1431] 30 client appointments for UK real [1432] estate companies per week using a fully [1434] automated [1436] system [1439] and I just onboarded an extremely [1441] similar client too and maybe we'll just [1443] say company [1444] name last month I generated 37 [1447] appointments for [1450] X using Facebook [1457] ads um what I like to do in situations [1460] like this is offer some type of like [1462] specific Revenue this was a I don't know [1465] like a 85x ro [1469] bu something that just shows them how [1471] unbelievably good this could [1474] be and then we guarantee that you get a [1476] 3X return in your investment in the [1477] first 90 days or fully refund you what [1479] I'd do here is I'd say something like [1481] does this sound like something you're [1483] interested in I'd guarantee [1487] you a minimum 3x return on your [1491] investment in the first 90 days and then [1494] uh this is kind of like a tweak and it's [1495] sort of like a dark pattern um but a lot [1498] of people will say stuff like or we'll [1499] fully refund you I find a much better [1501] way to pitch this is or you don't pay so [1504] specifically just saying or you don't [1505] pay uh because it implies that they [1506] don't actually pay anything up front a [1508] lot of the time they do pay something up [1509] front uh but when you get them on the [1511] sales call and you kind of explain what [1512] your process involves which a lot of the [1514] time in this case is going to involve [1515] media buy and that sort of thing um [1517] they're they're they're fine with it um [1519] so I mean you can use this if you want [1521] you could use the refund language I just [1522] find that refund already like um frames [1525] your product in a negative light it's [1527] like refund is mentally con connoted [1530] connotated with like poor experiences [1532] poor experience is the only time anybody [1533] ever gets a refund but if you know I'm [1535] guaranteeing you a minimum 3x return on [1537] your investment in the first 90 days or [1539] you don't pay I think that alleviates a [1541] lot of that and although it's not [1542] technically correct I think that it's [1543] worth making the sacrifice and [1545] specificity to improve the conversion [1546] rate on the front end explain your offer [1548] and then have them sign up on the back [1550] end okay great and then are you [1551] available for a quick call this week um [1553] good rule of thumb anytime you are [1555] trying to book a call with somebody is [1556] don't ask them if they're AA available [1558] for a quick call always just give them a [1559] very specific sort of number [1564] um let's [1567] do could we have a 15minute call this [1575] week to show you how I do the same for [1578] company name um this person had X or [1581] like they had their name and then they [1582] had like founder and then they had like [1583] their their location uh my advice to [1586] them when they sent me this message on [1587] Twitter was just to move their location [1588] Bali works great if you're selling to a [1590] bunch of Indie hackers but realistically [1591] it's a relatively esoteric sub Niche um [1594] you know that's like mostly on Twitter [1596] uh sure it's the digital Nomad Paradise [1598] but it's like how many of the people [1598] that you're going to be emailing are [1599] really in the digital Nomad Paradise [1601] realistically when people probably read [1602] Bali they're like oh this person's from [1603] Indonesia um you know well what do we [1606] pattern match with people that have sent [1607] us emails in the past from Indonesia hm [1609] they're usually asking for credit card [1610] information up front they're trying to [1611] scam us or something like that uh so [1613] just be very cognizant to that when [1615] you're designing an email okay great [1617] cool so so that is that I think that [1619] probably fairly reasonably walks through [1621] my process walks through my methodology [1624] um as I mentioned I mean my return on [1625] investments with lukewarm shitty milk [1627] toast emails have been absolutely [1629] ridiculous you do not have to be a good [1631] copywriter for this stuff um I would [1632] consider myself a good copywriter at [1634] this point a fantastic copywriter but [1636] when I started a lot of these campaigns [1637] I wasn't and then I just like ran them [1640] for a while made a few tweaks here or [1641] there found that you know my rates would [1642] go up or my rates would go down that's [1644] sort of just how of like gestated and [1646] internalized this knowledge when it [1648] comes to language and you know the most [1651] Punchy and succinct way to write [1653] whatever the hell I want to write so [1654] don't think you need to be good at this [1655]  uh as you saw my first cold email [1658] campaign for 1 second copy was not we [1660] still generated like uh one and a half [1662] clients a week uh with basically like no [1664] uh no ongoing cost or anything like that [1667] aside from like instantly and uh [1668] LinkedIn sales now it's like 200 bucks a [1670] month so you could probably just copy [1672] and paste that same approach to your own [1673] business and do pretty dang well um take [1676] these four steps with a grain of salt [1678] you don't need to use this in order to [1680] succeed this is just what I've done in [1681] order to succeed and you'll probably [1682] find a lot of people out there on the [1683] internet that would either explicitly [1684] disagree with this or they'd say that [1685] like one of these four steps isn't [1687] necessary uh my goal here is just for [1689] this to be a good starting point so you [1690] guys can actually go out make some real [1692]  money with cold email and [1694] then you know fix everything else later [1696] hope you guys like the video if you guys [1698] got any more questions about this just [1699] leave me a comment I'm more than happy [1701] to go through every single one and [1703] respond um please like subscribe and [1706] yeah let me know if you want me to do [1707] anything else thanks so much have a [1708] great rest to day

Video: https://www.youtube.com/watch?v=4GNVAUSePCU
Title: I Persuaded Google to Give Me A Knowledge Panel (In 30 Days)
[0] what's going on guys in this video I'm [1] going to show you how I got a Google [3] Knowledge Graph profile in less than 30 [5] days with a very straightforward simple [8] four-step technique my Google Knowledge [10] grab profile looks like this you see [12] that there is a cool little snippet up [15] at the top with my name and maybe my [17] designation and on the right hand side [19] there's a bunch more information about [21] me this is super high quality extremely [24] simple I did it all for less than [27] $150 in this video I'm going to give you [29] the whole road map so if that sounds [30] like something you're interested in stay [31] tuned and I'll see you in a [36] minute first things first why Google [39] Knowledge Graph profiles what the hell [41] are they why do they even matter well [43] for me it's less of a direct lead [45] generation source and it's more of just [47] a wow this guy really knows this stuff [49] sort of deal like I sell very high [51] ticket systems on um you know like [55] automations and Ai and that sort of [57] thing they're usually worth at least [58] $10,000 and what I find is when [61] somebody's ready to make a purchasing [63] decision and their Mouse is over the [65] sign proposal button and they're just [67] like they just need that little extra [69] push to make them go through the line uh [71] what they'll usually do is they'll do [72] some type of like Google or maybe like [73] mini background check and the second [75] that they see a Google Knowledge grab [77] profile like it's authoritative enough [80] and it's so like high quality and just [81] makes me look like I know my so [82] much they don't really have any choice [84] but to sign up I mean there are tons of [86] rich and famous and powerful people that [88] probably make like a million times what [89] I realistically that still aren't like [92] on Google they don't even have their own [93] new Google Knowledge gra profile and so [95] by having one you are basically [97] instantly associated with like uh you [100] know high quality service provider at [101] minimum and like celebrities and [103] like that at maximum so what I've done [106] here is I've actually compiled a notion [109] document with everything that I did in [110] order to get my Google Knowledge profile [112] in about a month I'll share this with [114] you in the video description super [115] simple extremely [117] self-explanatory um and yeah one why [119] don't we just dive into it and uh see [121] where we land so the first and probably [123] the most important step is you need to [125] sign up for every single social media [126] profile you can and when I say every [128] major social media profile I mean the [130] Instagrams the Tik toks the linkedin's [132] the Facebooks I'm pretty sure I have um [135]  Myspace profile so like you just [138] need to make sure that you're on as many [140] of these as humanly possible and the [141] main reason why isn't because you're [143] going to become famous on Facebook or [145] something like that and uh if you did I [147] definitely would not want to be friends [148] with you I mean all people do on there [150] post shitty pictures of their dogs um [153] the reason why you want to be on [154] Facebook and Linkedin and Instagram and [156] all that stuff is because they are [157] essentially like additional methods of [159] verification that Google and other big [162] companies use just to like uh give you [165] like that Badge of authenticity that you [166] are who you say that you are essentially [168] if they see a first name and a last name [170] on five or six different profiles [171] they're a lot more likely to be like [173] okay this person is is worthy of a [174] Google Knowledge grab profile and more [176] importantly like oh this is like a real [177] human being right not like a bot or [180] something like that attempting to farm [181] traffic so make sure that you're sign up [183] for every social media profile even if [184] you hate them like I hate Instagram what [186] it's done to people uh I still got a [188] profile though the next step is super [191] important you need to set up a personal [192] website and you need to add a bio so [195] this is my personal website here I [197] manage it using a platform called ghost [199] they skewer me on pricing I pay like 500 [201] bucks a year for this totally not [203] worth it not that I don't think ghost is [205] a great company but like it's just not [206] worth to pay $50 or $500 a year just for [208] a Google Knowledge Graph profile file uh [210] helper like this website if I were you I [213] would go on WordPress get myself a [215] managed instance for between $5 to $10 a [217] month and then all you need to do is [219] just like create a biography page or an [221] about page that looks something like [222] this this is mine so I have about Nick [225] sarif make sure the first and the last [226] name are you know the terms you want to [227] rank for um and then this is what I [230] recommend everybody do um all my friends [231] that have tried the same approach I [233] recommend you have a section that's who [234] is Nick sarf and then in the first [238] paragraph right like the most you know [241] hate fueled well maybe not hate fuel [243] write like the most high and hottie [246] journalist that you possibly can make [248] sure it just sounds like super [249] authoritative it's the same way that [250] like somebody would write about Elon [252] Musk or something like that if they're [253] writing his bio so for me Nick surve as [256] a writer and entrepreneur who pivoted [257] from a path in medicine afford a series [258] of successful digital media businesses [260] he's been featured in this big dick [262] magazine this big dick magazine and is [264] an Amazon Kindle bestseller right like [266] that's just that's just super strokey [269] it's [270] you know as show offy as humanly [272] possible this might seem a little cringe [274] to you but it's necessary because Google [276] is going to pattern match that you know [278] they have large language models that are [279] reading through everybody's website [280] making these determinations right [282] they're going to pattern match that with [283] somebody that makes a lot of money uh [285] and somebody that's like quite famous [286] and quite welln and so you want to [287] frontload as much Social proof ass [289] humanely possible into this first little [290] snippet of your bio uh and then you know [293] for the rest of it just write about like [294] what you do the companies that you own [295] and that sort of thing and you'll be [297] fine so yeah like I mean I would was [299] actually featured in these magazines so [301] I'm sort of given like a leg up here but [303] you don't need to be featured in [304] magazines in order to make it like I [306] paid for this Bloomberg submission paid [307] a few hundred bucks Amazon Kindle that's [310] sort of 50/50 like I wrote a 40-page [312] book like 5 years ago and then I just [314] called up all my friends was like yo buy [316] this book right now so like whatever you [319] want to do to get the social proof that [320] you need like do it but don't worry too [322] much about it I guess is my point the [325] other important part is uh you're going [327] to want to to have a like what's called [328] a a uh schema snippet and so if I view [332] the source [333] here of the code on the page and then I [336] go down to number two uh this is what a [338] a schema snippet looks like basically [340] it's like a piece of code on your [341] website that includes a bunch of [343] identifying information about you and [344] then it tells Google how to connect you [346] to other websites on the web that may be [347] mentioning you by name and so this is [349] what mine looks like feel free to copy [351] and paste this if you want maybe I'll [352] I'll add this in the description uh has [354] my name has my email has my birth date [357] so if you want to send me a present in [359] in 351 Days please do uh you know has my [363] brand all that stuff and then the most [365] important thing is it has a same as [367] object and the same as object is an [369] array which contains a list of other [371] websites where I'm named basically by [373] name um and what you want to do here is [375] keep this to about 10 to 15 I think [377] that's best practice right now and then [380] um add as many high domain Authority [381] links as you possibly can in here and [383] make sure to add all the social media [384] profiles that we talked about earlier so [387] my Twitter's up here my Facebook's up [389] here my linkedin's up here all that [391] um if you are doing a WordPress website [393] like I recommended just download like a [395] schema plugin way simpler and easier [397] than trying to finagle all this code on [399] your own uh there are dozens and they're [401] all free so that's what I would [403] recommend okay so uh by this point you [405] now have one a website set up with a bio [408] a schema snippet and you know maybe [410] you're on WordPress or some like [411] that and two you have every social media [413] profile known to mankind including [415] Myspace the next thing you need to do is [417] you need to sign up for what I call free [420] backlinks now let me explain free [422] backlinks are links that you do not have [423] to pay for like when I bought my [425] Bloomberg link I paid several [427] hundred if you want to get listed under [430] a Google Knowledge Graph you have to get [431] a lot of links and then links are [433] expensive so it's a lot of links times a [435] lot of money equals you're going to have [436] a bad time so there's a workaround you [438] don't actually need to spend money on [439] all these links um or at least a lot of [441] the high quality ones you can find these [444] stealth sort of free backlinks that are [446] still du follows that all really require [449] uh all they really require is just like [450] a simple application process where you [452] just submit your name and maybe a brief [454] bio on your website uh and then you know [456] a couple weeks later they'll rank you I [458] compiled this massive list with the help [460] of a guy called Connor Scher on Twitter [462] he basically posts every week or two [463] with like one of the stealth backlinks [465] uh on here uh and it's just how I've [466] like slowly built up my repertoire over [469] time note that this isn't perfect not [472] all of them are going to be du follows [473] and it doesn't even matter if they're a [474] due follow or not I think the um [476] algorithm to determine whether or not [477] you are placeable on the Google [478] Knowledge graft is quite different from [480] like where you rank on Google for a [481] website so just make sure like you go [483] through this massive list here of I [486] don't know if I already guess probably [487] like 50 60 70 maybe 80 websites um maybe [492] more I don't know and then create [494] profiles on all of them and you know [497] what I did here is I just paid a vaa [498] like $10 an hour and I had her do it [500] over the course of like a day or two so [502] very simple very straightforward if you [503] don't have the money or if you know you [505] just want to experience the pr process [507] for yourself the shitty PR process I [509] should say for yourself then feel free [511] to just go through this list this is [512] going to be in the description U but [513] essentially yeah you're just going to [514] need like a first name last name maybe [516] some websites maybe a couple of things [517] that you've done and then like a bio and [520] then they'll almost always Auto approve [522] you within a week or two and then you'll [523] find yourself on Google like if you were [525] to Google me for instance just type Nick [527] and then scroll way the hell down you'll [528] see that those are actually like the [529] first the first links that I had um they [532] were all these just like directories I [534] mean I I got a lot now because you know [536] I've been featured all over the place [537] and this is sort of like a like a [538] Snowball Effect effect where once you [539] get featured a little bit you get [540] featured more and more often but like [542] cod new.org that's 100% like one of [544] those backlinks um proven expert.com [548] 100% one of those backlinks right all of [550] these are or the vast majority of these [552] are just like you know simple little no [555] follows um from this this list and a [558] couple them are do follows which is nice [560] so yeah go through this on your own time [562] um I would recommend just doing this as [563] early as possible like getting a Google [566] Knowledge grab profile is really just [567] given a lift to literally every other [568] business process that I have so I [570] definitely recommend you you know hop on [572] and just go through this sometime in the [573] next week or so if this is the first [574] time you're hearing about it then the [576] last thing you need to do is you need to [577] post regularly on YouTube Twitter uh [580] maybe LinkedIn I wouldn't recommend [582] Facebook or Instagram these just seem [583] like vapid attention horor platforms to [585] me but LinkedIn YouTube and Twitter [587] these seem to have some type of like [588] business adjacency um the reason why you [590] want to post regularly is because you [591] just need to like continuously show [592] Google you are a real person and so part [594] of the reason why I've been making [595] videos every day uh and I'm going to [597] continue to post on Twitter and that [598] sort of thing in addition to the fact [600] that I've just made a ton of connections [601] and I think I have valuable things to [602] say and I want to help people and all [603] that stuff that's going to win me a [605] presidential candidacy um I want my [608] Google Knowledge profile to be strong [609] and I want people to you know constantly [612] uh I want that to be constantly updated [613] with like the highest quality content [614] that I can and I think over the course [616] of the next couple years as I continue [618] to do this like my Google Knowledge grab [619] profile isn't just going to look like [621] this it's going to have like YouTube [622] videos it's going to have like a bunch [624] of photos of me like accepting accolades [626] and all that sort of so I want to [627] get in that habit early and I really [629] doesn't take that much time unless your [630] microphone breaks three times a day like [632] mine did anyway so yeah make sure you're [634] posting regularly maybe do it like once [635] a month or something to start just make [637] sure you have some type of activity [638] because Google uh you know just needs as [641] much like ability to distinguish you [642] from a bot as humanly possible awesome I [645] hope that makes sense I sourced this [647] video from a random comment that [649] somebody left me on Twitter like three [650] or four weeks ago so I'm very much [652] looking for video ideas I'm in the [654] middle of this 30-day video challenge if [656] there's anything that you guys want me [657] to cover that I haven't already touched [658] on just leave a comment below and maybe [660] I can cover in a future video or if you [661] guys want me to do or talk about some [664] other topic that maybe I haven't touched [665] on uh you know just just drop a comment [668] and uh if it lines up with what I want [669] my channel to be about then I'll [670] absolutely record a video on it uh [672] thanks so much for watching please like [674] comment subscribe and I'll catch you on [675] the next one cheers

Video: https://www.youtube.com/watch?v=uuOdz4I9h6E
Title: My $50K/mo AI Content Generator in Make.com (Free Template)
[0] hello everybody in this video I'm going [1] to show you an end to-end content [2] generation system in make.com that [4] leverages AI using the open AI endpoint [7] to produce super high quality articles [9] at scale I've implemented the same [10] system in a variety of seven and eight [12] figure companies and it basically takes [14] the cost of producing content down from [16] usually like between $50 to $100 per [18] piece to literally between 10 to 20 [20] cents it is absolutely unbelievably [23] efficient uh this is the same software [25] at the core of many like article [27] generator AI websites that you know [29] you're paying 5050 to $100 to $200 per [32] month for I'll show you how to do it all [33] for yourself in a few seconds that [35] sounds good to you let's get into [40] it okay so this is super simple and easy [44] Let's uh first walk you through what the [46] flow looks like in [48] make.com uh this is a snapshot of the [50] system as it currently stands we got [52] some tip form stuff at the beginning we [54] got some uh Google sheet stuff in the [56] middle we got some open AI stuff in the [58] middle and then you'll see sort of an [60] interesting design pattern here and this [61] is really where the secret sauce is this [63] is at the core of all the SAS companies [65] that say they'll produce content for you [66] uh you have an iterator module and the [68] iterator module like iteratively [70] produces the content for you section by [72] section uh before dumping it into a [74] Google doc now this sounds pretty [76] complicated so let's just go through the [77] three or four pieces involved this is [79] actually very simple first we have a [81] Google sheet setup I call this my [82] left-click content generation tracker [84] the reason why is because everything in [85] the sheet makes it onto my blog and this [88] is my blog over here feel free to look [90] through it on your own time if you want [91] but you'll see that the pieces are high [93] quality um you know they are written [95] quite well it's like it's 21st century [98] Darwinism at its finest out there right [100] like this isn't stuff that most people [102] would be able to take a look at and then [103] instantly tell its Ai and neither can [106] you know platforms like U you know [108] Google or like zero gbt or whatever [110] these are relatively well written um [113] even for AI pieces it's very difficult [115] for you know content detectors to pick [116] them up so we have this sheet over here [119] that houses all of the content for my [121] blog and really the whole system and [122] you'll see there are a couple of columns [123] there's word count primary keyword [125] secondary keyword internal links [127] external links additional instructions [129] outline doc article doc and then website [131] URL uh so a lot to unpack there but [133] basically in order to create a piece of [135] content you need to provide it a title a [137] word count a primary keyword and then [140] some secondary keywords as well um well [142] you don't need to not all of these are [144] required Fields if you don't the you [145] know system is is usually good enough to [147] like kind of fill in the blanks and [149] interpolate where you aren't um but you [151] know if you wanted to like have internal [152] links to a piece or external links um [154] these are usually quite important for [156] SEO purposes so I wanted to make sure [157] that we can include them it's also that [159] additional instructions column which as [160] you can see is where you can like have [162] your instructions WR in a business [164] casual tone yada yada I don't actually [166] personally use these this is just one of [167] my uh virtual assistants U that thought [169] that it improve the tone of the article [171] so what I'll do here is I'm actually [172] just going to go through the system I'm [174] going to generate an article for you and [175] then while it's generating I'll walk you [177] through uh what the rest of the system [179] looks like so let me just open this up [181] actually let me just duplicate this in [182] another [184] Tab and then that way when it's running [186] in one tab I can just like walk you [187] through every module in the [190] other [192] okay so let me just make sure this isn't [195] connected to anything that I don't want [197] it to connect to and it looks like it is [199] uh I'm not going to actually post this [201] article on my blog so I'm just going to [202] remove [203] everything except for the Google Doc [207] module at the end and then I'm just [208] going to [210] add this in here and then let me just [212] update a row to remove this okay great [216] we are now good to go uh so first things [218] first what I'm going to do is I'm going [220] to run [222] this and now we see that it is currently [224] awaiting data what I'm going to do is go [226] over to a type form which I've apply [229] named SL generator here I'm going to [231] write in a title uh and we are going to [233] do I don't actually know let's do HR [236] automation 101 that sounds pretty fun [238] how many words are the content have 1500 [240] what's the primary keyword HR automation [243] so I'm just going to do one what are [245] some secondary keywords uh automate [248] HR um automate hiring hiring automation [252] process automation let's do AI aihr that [257] sounds good are there any internal links [258] that should be included in the content [260] well internal link for those of you [262] unfamiliar just refers to a link on your [264] website uh that you're going to be [265] posting the piece I'm just going to look [266] up HR and see if anything comes up okay [269] your ultimate to HR automation um [271] interestingly enough this actually is [273] basically the keyword that we're going [274] after but we're not actually posting [275] this so it doesn't matter are there any [277] external links that should be included [279] in this content let's [282] do um just some random Forbes article [285] I'm going to say managing employee [286] resistance automation this is like a [288] high Dr term or high Dr website so [292] that's the external link are there any [293] additional instructions or specific [294] requirements for the content no let me [296] just make sure this is still running [297] okay great this is going to catch our [298] web hook click submit [303] and we are now waiting to catch the [305] content on the generator [309] side and then while all this stuff is [311] generating what I'm going to do is just [312] close out this tab I'm going to close [316] this and it's not generating for some [318] reason I don't really know why um I [322] think we submitted it [326] so [328] weird it's not really coming up is it [331] okay I'm just going to force stop this [335] then oh wait this may actually be [337] running in which case that uh that' be [341] pretty dumb of [342] me let's just catch this and make sure [345] that this is going okay this is HR [348] automation Okay cool so I mean this is [350] the entire reason I use this for testing [352] purposes sometimes type forms web hooks [354] aren't working so I'm just going to run [356] this uh [358] directly and it looks uh looks pretty [360] good although because I reset this um [363] this may post on my [365] blog um I may have set something up to [368] error out over [372] here okay great so now that that is [375] generating why don't we go over to um [378] the original scenario and now I can [380] actually walk you through it step by [381] step so first things first we are [382] listing the responses of a type form [384] that we watched for earlier so when that [387] event happens um we will then pull the [389] data from that previous format Tre I'm [392] not doing anything special here there's [393] nothing no um fields are filled out then [397] we have Google sheet so we have a [399] spreadsheet ID with an account that's [400] hooked up to it uh and then what am I [403] doing here well column A which is title [407] I'm adding the title column B which is [409] how many words should I have I'm adding [411] how many words should I have so pretty [412] self-explanatory and basically just [414] pumping all of the fields that I've [415] collected in the type form into the [416] Google sheet and the reason why is [418] because the Google sheet is just just [419] like the single source of Truth for [421] everything uh what I do after then well [423] then after I add the row I immediately [424] search for the row and what this is [426] doing is this is like grabbing the entry [429] that I just put in and then I'm using [430] that Google sheet as a single source of [432] Truth as opposed to type form so I'm [433] using that data to set variables which [436] we have over here so now title word [438] count primary keywords secondary [439] keywords you see I have a couple of [441] formulas here um if secondary keywords [444] contains a comma for instance then I'm [447] splitting um the secondary keywords and [450] then I'm basically like attaching them [451] in an array structure so if you don't [454] really understand what this is doing [455] feel free to pause the video and then [456] kind of check it out there but [457] essentially this is just this allows me [459] to put it into Json format which is [461] necessary for the instructions that [463] we're going to feed into AI later uh [465] same thing with internal links external [466] links this basically just allows me to [467] handle if uh the person puts in one link [470] or if they put in multiple links same [471] sort of deal here so you may be [473] wondering well Nick why are you [474] splitting this into so many modules do [476] you really need this do you really need [477] this no I don't really need it but the C [479] cost for me of additional of additional [481] couple of operations uh to make the [483] system a lot more maintainable and [485] testable is totally worth it um I run [487] this thing maybe once every couple days [488] so it's like four Ops every day or some [490] something like that uh and that to me is [492] 100% uh very well worth the additional [496] flexibility I have by having like a set [497] multiple various module uh because that [499] means that I could just like [500] theoretically um drag and drop that I [502] could stick that over there and then I [504] could just trigger the entire workflow [505] from a set variables module that I can [506] set myself for testing so very worth it [509] anywh who the actual Secret Sauce in [511] Magic comes here with the gp4 call so [514] I'm creating a chat completion model gp4 [517] first thing I have is a system prompt [519] that says you are a helpful intelligent [520] writing assistant I will always use this [522] format I find it's just like the [523] simplest and easiest uh and then what [525] I'll do is I'll add a user prompt where [527] I say use the following Jason brief to [528] write an engaging comprehensive outline [530] in markdown format ATX that's really [533] important ton of voice 50% Spartan and [535] Casual now if it's the first time you've [537] ever heard of markdown format [539] markdown format is just a way of [541] representing uh Rich text with text what [546] I mean by that is let's say you have a [547] Google [551] doc and let's say you're trying to write [554] uh I don't know a story or something so [557] this is the title of your [559] story this is the subheading of your [563] story and this is the body of your story [567] now all gp4 [570] are uh is the English alphabet A to Z [572] how would you represent the fact that a [575] snippet of text is a title versus the [577] snippet of text is a subheading versus a [579] snippet of text is just like plain body [581] text right obviously this provides a ton [584] of information to the reader so how do [586] you transform this into a format that [588] gp4 can understand and moreover how do [591] you get it to write so that we can [592] produce these like gp4 can't write a [594] heading all it can do is tell you that [596] if something is a heading or not and [597] usually it'll do something like uh you [599] know heading or something and then it'll [601] write that we don't want that we [602] actually want the format of the text to [604] be produced entirely in a format that we [606] can massage and turn into headings and [608] whatnot later well the way that you do [609] it is with markdown format markdown [611] format is really simple if something is [612] a heading one so if something is like a [614] title or whatever then it's just this [617] and you'll see it actually does this now [620] automatically so if I just put a um [623] let's go back to normal text if I just [625] put a single hashtag and then a space [628] then this is technically like [631] corresponds to a title tag if I do [634] two this technically corresponds to an [636] H2 tag [639] three four right dollar signs Cash Money [644] Baby uh and so on and so on and so forth [646] and then if this is just like regular [648] text then you don't have any um hashtags [651] before it and basically this is just a [652] way that we can get by the fact that [654] open AI just doesn't have the the the [656] formatting ability to like create [658] headings or whatnot all we're doing is [659] we're just sending it a bunch of raw [661] text it's giving us a bunch of raw text [662] and then we're using that raw text to [664] create formatting on the back end so [666] hopefully I explain that right okay so [667] the next step is we have a user [670] prompt with an example story that I've [674] created and this is what I want to be [676] feeding it um and so the way that it's [679] set up is I have like a Json I have like [680] a JavaScript object I have a title field [683] a word count field a primary keyword a [685] secondary keyword internal links [687] external links additional instructions [688] you'll see that I use the array format [691] here which is uh a call back to what I [693] was doing earlier where I was setting [695] the variables um so if it was one link [697] then I wouldn't have an array if it's [698] more than one link I have the [700] array down below I then have it output [703] an outline and this is me just kind of [705] training it once or twice that it knows [706] the sorts of things I wanted to talk [708] about and so I'm just having to generate [710] an outline at this step what we're going [711] to do is we're going to turn that [712] outline into a massive article later on [714] using procedural and uh like repeated [717] prompting in a very Nifty way way that I [719] don't think most people realize is [721] possible so what am I doing here I have [723] it generate a an introduction and then I [726] have it generate a bunch of bullet [727] points for the rest of the article this [729] is important I find because if it [731] doesn't generate the introduction [732] doesn't really get the writing tone of [733] voice down um if it just generates the [736] bullet points because we're going to [736] turn these bullet points into paragraphs [738] later uh then you know it's usually [739] missing some context and so that's what [741] I'll do I'll do that once and then I [743] will send it the actual content so title [745] word count primary key whatever and then [747] it Knows by now to produce the content [749] in that format so pretty simple I then [752] have a markdown to HTML module and this [754] is what's responsible for turning that [756] markdown that I just mentioned earlier [758] into text that I can then use to create [759] like a Google doc for [761] instance after that I will create a [763] Google drive folder just to house the [765] document that I am creating and I do [767] this just to keep everything organized [768] so in my case it's like I have a parent [770] folder called left click with my company [771] in it sales and marketing which is a [773] folder underneath that and then an SEO [774] folder with a new folder with the name [776] of the article and then I'll actually [778] create the outline in the Google Doc and [781] I just use kind of weird format o and [783] then the title that's the outline the [784] content is just the HTML from the [786] previous HTML module um and then the [789] documents location is inside of the [790] folder which I Do by pulling the folder [792] ID so pretty straightforward right now [795] um why don't we go let me just see if [798] this generated correctly yeah that looks [800] good so why don't we go and actually [802] take a look at like an example outline [805] well if we go back to our content [806] generation tracker scroll down you'll [808] see there's an article now that was [810] created because you know we're done with [811] the generation stu um called HR [813] automation 101 it has all of the data [816] that I put in internal length the [817] external length all that stuff and then [819] if I go over to the outline dock oh [823] actually I don't actually have an [823] outline Dock and why is [826] that um oh yeah it's because I uh that [830] makes sense I tried running this once uh [833] initially and then it didn't work so I [834] had to x out the video and then try [837] rerunning it but when I reran it I [838] didn't save the way that the module [840] should look so we should actually have a [842] Google doc link over here and over here [845] but we're not going to have that so I'm [846] just going to pull them manually so if I [848] go back here um the outline is right [851] over here we can pull it direct from the [854] module open it up in a new tab and then [857] we have the outline of the uh the [858] article so HR automation 101 today's [860] data digital driven Enterprise Human [862] Resources departments are rapidly [863] embracing technology advents tools and [865] techniques key among them is HR [866] automation evolution is completely [867] changing how we hire manage and develop [868] staff this piece will guide you through [870] the multifaceted real of HR automation [871] highlighting how its intelligent [872] procedures could streamline and enhance [874] your HR operations now keep in mind the [876] reason why uh it's writing like it is [879] writing is because it's attempting to [880] put in the keywords that I asked it to [881] put in earlier and so this is actually [883] relatively SEO optimized you'll see that [885] there are title tags there are H2S H1s [889] there there's everything here and it's [890] because of markdown format when we uh [893] the the output of gp4 was not this the [896] output of gp4 was this [900] oops well [902]  there you go goddamn Google Docs [905] trying to uh improve how dare you um the [910] output from gp4 was this but then [913] because we useed the markdown module to [915] HTML we transform that into a format [918] that you know Google Docs understands as [919] a heading so that's pretty cool right [922] okay so anyway what do we do with this [924] uh outline now well it's pretty simple [926] what we'll do is we will take [929] the outline that we generated actually [930] let me go back here we'll take the [931] outline that we [932] generated we'll then um create it okay [935] and then this is where the magic happens [937] we have an input brief now the input [939] brief is [941] basically um the entire article that we [944] just generated just in markdown format [946] so we're not actually pulling text from [948] here we're pulling text direct from [950] generate outline and so this is going to [953] be relevant in a moment [955] because we then iterate through the this [958] input brief what we do is we'll split [961] this markdown input brief by new line [964] and so now every new line is basically [967] another object in a big array and now [969] we're iterating over this line by line [971] by line so if this was our article for [973] instance this would be one new [976] line let me be more precise this would [979] be one new line this would be another um [983] sorry this would be a new line this [984] would be step one in our array this [986] would be step two in our array this [987] would be step three an our array this [989] would be step four so on and so on and [991] so forth and I think you're starting to [992] see why that's important that's [994] important because we're going to use [995] every new um element in the array to [998] generate a new [1000] paragraph okay so what do we do we [1002] double check to see the section starts [1004] with two hashtags why because in [1006] markdown two hashtags refers to a [1008] heading two so I'm separating or I'm [1010] just only processing sections that have [1013] those two hashtags because that's all I [1015] really care about I don't care about [1016] heading one because we already have an [1017] introduction I only care about heading [1019] twos because I want to generate content [1021] for heading twos and Beyond so if the [1023] section starts with two hashtags okay if [1025] the section is an H2 what do we do next [1028] we then produce text for that section oh [1031] sorry we then set a section input so [1034] what am I doing now I'm then [1036] replacing this value that I just created [1038] here this line with uh the same line [1042] just with an arrow next to it and this [1044] is really the secret sauce this is what [1046] any company that's doing this at scale [1048] uh is doing because gp4 has a ton of [1051] trouble understanding context by adding [1053] a an arrow next to The Heading and then [1056] telling gp4 hey I want you to generate [1058] this heading um you get significantly [1060] better results than if you just ask it [1062] to generate a certain amount of text and [1063] I'll show you in a second but anybody [1065] that's tried this is probably already uh [1067] waving their heads s thinking that this [1069] is impossible there's no way this will [1070] work well it does the actual gbt for [1072] prompt that we're using is you're a [1074] helpful intelligent writing assistant [1076] and then the following is an outline for [1077] an award winning article your task is to [1080] write one section and one section only [1082] the one marked by an arrow tone of voice [1084] 50% Spartan casual I usually use this [1087] because I find the gp4 can be pretty [1089] flowery now what do we do we paste the [1092] section input from previously and so we [1094] will paste that section with the arrow [1097] um on the heading that is relevant to us [1100] why do we do this we do this because we [1102] want gbd4 to have context of what [1104] happened before and what's coming up [1105] after the article uh after the paragraph [1107] being generated if we were to just ask [1109] it to generate a paragraph completely in [1111] isolation it would miss the context and [1113] then if we were to try and Stitch [1114] together all the paragraphs at the end [1115] of it it would read terribly but this [1117] hack gets away from that and it allows [1119] us to generate extremely contextually [1121] relevant articles that are super high [1123] quality and that quite frankly blow most [1125] people away when they read them they' [1126] say this is generated by a robot no [1128] freaking way okay so we'll produce this [1130] section text we'll then set the section [1133] text to be whatever the output was and [1135] then we have a router and this is an [1137] interesting router but essentially [1138] there's a 25% [1139] chance um that I Define by setting floor [1143] by getting the floor of random * 4 plus [1146] 1 uh and I and I'm saying that if this [1148] is equal to three AKA this is one out of [1150] four uh possibilities then I want you to [1153] go back through the text that we just [1155] generated and then I want you to edit it [1158] to break up the flow add bullet points [1159] and subheadings where needed for variety [1161] use markdown ATX [1163] format what I do there is I train it and [1166] basically what I'm doing is I am getting [1167] it to um every now and then with about a [1170] 25% chance I wanted to take a paragraph [1173] or take a collection of paragraphs and [1175] then break that down into bullet points [1176] I want it to vary its formatting uh and [1179] the reason why is because human beings [1180] when we read blog posts we don't just [1181] like reading a bunch of paragraphs one [1183] after the other after the other we want [1184] there to be variety we want there to be [1186] some areas with bullet points other [1188] areas with like subheadings we want some [1190] h3s some h4s thrown in there uh we like [1192] a sense of hierarchy in our content this [1194] also improves um AI uh sorry SEO [1197] outcomes because content like this [1199] usually is more engaging so humans spend [1201] more time reading it which results in [1203] higher engagement rates uh lower bounce [1206] rates and you know that's one of the [1207] reasons why these articles actually [1209] rank okay what do we do after that we [1211] set the section text in this variable [1213] here and then what we'll do is we'll [1215] actually grab the section text down here [1217] and so this is a pretty standard sort of [1219] make design pattern anytime you have a [1221] route and that route isn't always used [1224] uh you will set a variable at the end of [1225] that route and then you will get the [1227] variable immediately on the other end of [1229] that route so that you can reference the [1230] data that you just set and so what I'm [1232] doing is I'm producing section text I'm [1234] setting a variable and then I'm getting [1235] it now what I'm also doing is I'm [1238] setting section text back here what that [1240] means is basically no matter what [1241] happens whether I flow through this [1243] route only or if I flow through that top [1245] route I'm always going to have some [1247] section text that I can get right and so [1250] yeah it's pretty nifty design pattern [1252] that I use quite often um I'm then [1254] aggregating all of the section text and [1256] what this does is it basically just [1257] takes everything that just created and [1258] just turns it into one giant um [1261] paragraph or one giant essay I want to [1263] say I'm then uh processing it using the [1266] markdown HTML module the way that I'm [1268] doing that is I'm splitting the input [1269] brief at uh [1272] H2S and then I'm getting I can't [1276] actually see this because I think my [1277] monitor is a little bit blurry uh but [1279] then oh yeah yeah so I'm getting the H2 [1281] and then I'm I'm getting uh the first [1283] result before the H2 so I'm getting the [1285] introduction and then I'm pasting in [1287] everything that I generated after that [1288] so I have an introduction module and [1290] then I have everything else and then [1292] after that I finally create the article [1293] and then update it in the Google sheet [1295] so what does that look like in practice [1297] well you'll see that this ran through um [1300] eight times and so what did we feed it [1302] we fed it this whole [1304] brief there were 1 two 3 four five six [1308] seven uh there were seven um splits [1311] meaning that there were eight total [1313] pieces of content fed into the [1315] iterator and then reset the section and [1317] put eight times we then produced the [1318] section uh text eight [1321] times and so every time I was feeding it [1324] into gp4 it looked something like [1327] this this is some of its output the [1329] influence of AI and HR as we delve [1330] deeper in the 21st century AI is [1331] permeating every facet of Our Lives one [1333] area where the wizbang tech is making [1334] inroads as human resources where I [1336] shaking things up in the most remarkable [1337] ways you know there's a Forbes article [1340] that's linked here as you can see um [1342] this is just the the iterative thing [1344] you'll see 25% of the time so literally [1347] uh two out of eight times which is [1348] perfect uh it went through and it [1350] improved the formatting by breaking open [1352] the bullet points and that sort of thing [1353] then it iterated it aggregated it and [1355] then created the article now there's [1357] some other um there are a few other [1358] modules here which are relevant to me [1360] specifically um I'm posting this [1362] automatically on my blog so I have this [1364] updated every now and then and then I'm [1365] also creating a message in a slack [1366] channel so that my team knows that a [1368] piece was just added and to you know [1369] look it over and make any changes if [1371] they feel they need to I also have a [1373] custom JavaScript module here uh which [1375] I'm using uh the customjs function for [1378] this is a fantastic pretty nifty [1380] function that just allows you to do text [1381] processing a lot faster than in make in [1383] make usually text processing like this [1385] requires five or six or 10 Ops but with [1387] a customjs module I can just add in some [1390] of my own JavaScript um that like [1392] replaces you know uh basically just [1394] replaces any empty lines or whatever [1396] with dashes which allows me to make that [1398] the URL of my post so if I want to have [1400] like a post like HR automation for [1402] whatever uh for for [1405] instance um I'll basically turn h R [1408] automation 101 into HR automation 101 um [1412] but yeah that that's about it uh the [1413] thing that's relevant to us is the [1414] actual finished piece so I'm going to [1415] take a look at that [1417] now and this is what the article looks [1419] like at the end of it now you'll see [1422] it's not formatted nicely you could [1423] theoretically add a new formatting um [1425] thing if you wanted to so I could add a [1427] space after a [1428] paragraph um I could I don't know change [1430] the font to inter or something like that [1432] and then maybe do 1.5 spacing right so [1435] if you were delivering this to a client [1436] or something like that that's that's [1438] what you could do uh you'll see that [1439] there aren't images here but it's [1440] actually quite trivial to add images you [1442] would just tell AI to um reference the [1444] unsplash.com [1449] um the random unsplash API and then it [1452] would just basically generate from api. [1455] unsplash.com phos like a new image and [1458] then add that to the article anywhere [1460] you want um I just don't do it because [1462] we have our own images like uh you know [1464] charts and that sort of thing that we [1465] like to add you'll see if there's some [1466] links in the article and the actual [1468] quality of the content is pretty good um [1470] in today's dig this is the same [1471] introduction we had previously we have [1472] another introduction afterwards saying [1474] HR is the Cornerstone of my sucess [1475] business responsible for an array of [1476] critical functions from hiring to [1477] onboard and training compliance yet as [1479] with any operational department they [1480] face their own unique set of challenges [1482] enter HR automation a transformative [1484] solution for today's techsavvy [1486] efficiency driven workplaces in essence [1488] here's what it is blah blah blah blah [1490] blah blah so I'll link this piece [1492] specifically in the video so you guys [1493] can take a look at it and read through [1494] it on your own but suffice to say this [1496] is a 200 500 oh wow I went a little bit [1498] over our work count actually but this is [1500] a 2,500 uh word piece of content that [1503] otherwise would have taken you know an [1506] average of let's say like8 cents a word [1508] about $200 to do that we just generated [1511] in I don't know three minutes for about [1513] 15 cents worth of token costs um it's [1516] absolutely Bonkers if you consider just [1517] the profitability Improvement to any [1519] content company uh that employs a [1521] process like this and then this is one [1522] of the main things that I'm selling [1523] right now that I usually sell for [1525] anywhere from 5K to 15K [1528] which is pretty fun that said um yeah [1530] you now have everything that you need in [1531] order to produce content on your own [1533] whether or not you want to pump this [1534] stuff directly to your blog like I've [1535] tried or whether you want to add this to [1537] your CRM or your project management [1539] system and then maybe have like an [1540] editor jump in and add some images or [1542] change things that is entirely up to you [1544] uh at the end of the day though this is [1546] the design pattern that dozens of [1548] extremely high throughput SEO affiliate [1551] and uh you know agency companies are [1553] currently using today to generate a [1555] massive amount of highquality content [1557] for basically free so I hope that that [1560] was helpful if you guys have any [1561] questions about what this process might [1562] look like for you feel free to let me [1563] know I usually create videos based off [1566] your guys' recommendations or I'm [1567] starting to now simply because it's way [1569] easier to farm ideas that way and I'm [1570] trying to get to the end of a 30-day [1571] content challenge so if you like the [1574] video like comment subscribe do all that [1576] fun stuff and I'll catch you in the next [1577] one thanks so much see you later

Video: https://www.youtube.com/watch?v=wamAXd1V5C8
Title: The Theory of Constraints (& How It Earned Me $2.4M)
[0] what is going on guys Nick here in this [1] video I'm going to show you how to do [3] operations at a seven fig agency this is [6] part of a wider series that I'm doing on [8] how I operate seven figure agencies and [10] how a lot of the people that I know that [11] are successful and that even go from [13] seven to eight figures do it that sounds [16] good to you and strap in and let's get [18] into [21] it okay so first things first I have a [24] ton of people ask me on a daily basis yo [27] Nick uh this is where my company's at [30] this is how much money we're doing what [31] would you do to take us to the next [32] level and so every single time that I [35] get a question like this my first [36] thought is um let's use a theory of [40] constraints the theory of constraints if [42] you guys aren't familiar is a system [45] that was developed by a really smart guy [46] his name is Eli Gold rat uh like 20 or [48] 30 or even 40 years ago and the way that [51] this whole thing worked is it was [52] applied to um factories and like power [55] plants and you know assembly line type [57] businesses way back in the day that were [59] doing some type of manufacturing and [61] that sort of deal and so there are all [63] of these like super highle Concepts [64] about how to correctly optimize your [66] factory and your assembly line for for [68] massive and most successful throughput [70] and what's interesting is a lot of [72] people slept on that that book for like [75] internet business they didn't really [76] think that they would apply and so what [78] I've done really over the last couple [79] years is I've just been applying the [80] same Factory idea of process [83] optimization whatnot to internet [85] businesses to massive success and I [87] earnestly believe this is probably like [88] one of my own major advantages over most [90] other companies uh and so I'm just going [92] to give away that Advantage right here [94] so I definitely encourage you if this is [96] the first time you're watching this to [97] like look into the theory of constraints [98] there's a fantastic book on this called [100] the goal uh which is like a third party [103] sort of thing third party uh it's like a [106] third person sort of like fiction book [109] that talks about like this Factory owner [111] this Factory manager and the things that [113] he did to improve his throughput um but [116] you know I'm going to give you a brief [117] little summary right now and that should [118] probably be enough to at least hold you [120] guys over the way that the theory of [122] constraints works is you need to [124] conceptualize your entire business as a [126] pipeline from start to finish and so [128] this right here is what I would consider [130] an average business this is your [131] pipeline so I just got this fancy new [134] tablet and I kind of want to try it out [136] so let's choose a color here um the very [139] first step in any business is basically [141] your intake and your intake there you go [144] your intake is usually lead acquisition [146] right you're normally acquiring leads if [148] you're an e-commerce business you're [149] acquiring [150] customers uh you know if you're like an [152] info product business you're you're [153] acquiring students right the first step [155] is always going to be the intake and [157] basically the way that this whole uh [159] this whole business pipeline works is um [163] your your money your [166] Revenue that was absolutely terrible [168] your revenue is basically just how fast [172] um stuff can go from the intake of your [175] pipeline to the completion end of your [176] pipeline and so okay let's say let's [178] pretend that this right here that's a [181] terrible color let's pretend that this [183] right here is lead acquisition for an [188] agency what would your intake be in that [190] case well that's probably like your ad [191] campaigns that's like your referral [193] campaigns it's like your SEO that's uh I [196] don't know like your upw workk jobs [197] whatever the hell you want to call it [198] but basically you have all these sources [200] that are pumping leads and you know kind [202] of raw material into this pipeline um [204] maybe step one might be like uh I don't [207] know like onboarding [211] so now you know your leads are at this [213] step where uh you know in order to take [215] them from leads and turn them into [216] clients you need to have some type of [217] onboarding process third step or I guess [220] step two in this diagram uh let's just [222] call this uh [225] fulfillment so this might be like I [227] don't know if you're in an agency and [229] let's say you're doing graphic design [230] this would be your team's ability to [231] actually turn around the graphics uh [233] fourth might be um I don't know let's [237] just do like Payment Processing [240] and this is a hypothetical example in [242] reality you probably don't want to wait [244] all the way till the end to do your [245] payments but I'm just trying to make [246] this as simple as possible and at the [247] end we have some type of completion okay [249] great so now that we mapped out the [250] business from start to finish um we got [252] raw materials raw leads coming in we [254] have some type of transformative process [256] occurring where we onboard them and turn [257] them into clients we have a fulfillment [259] process in the center which is where you [261] actually deliver the stuff you have [262] payments and then you have completion [263] the important part about the theory of [264] constraints and the reason why it's [265] called the theory of constraints is [267] because in a closed pipeline [270] the fastest that the fluid in the [272] pipeline will ever go is entirely [274] determined by the width of the narrowest [277] part of that [278] pipeline so that can be a lot to unpack [281] so taking a step back basically the [283] narrowest part of the pipeline is the [285] rate limiting step it's the fastest that [288] anything will ever go it's the [290] bottleneck for a reason it's the [291] constraint of the whole system so if we [294] zoom out a little bit uh what would be [295] the constraint in this system well [298] obviously if we just like try and judge [299] the width of this intake is pretty big [301] step one's pretty big step two looks [303] pretty narrow step three looks pretty [304] big and then completion also looks [306] pretty big uh this area here step two [309] which in our case would be the [310] Fulfillment of this hypothetical [311] business that would be the bottleneck [313] and so when you know I'm doing um cons [316] Consulting for you know a variety of [318] different business types let's say like [319] an e-commerce business or something like [320] that and they raise their growth issues [324] to me or something about how they can't [325] grow what I'll do is I'll ask them [327] questions and then build out pipeline [330] just like this for their own business [331] with all the steps from start to finish [333] uh and then I'll identify what the [335] constraint is or what the bottleneck is [336] in the business and then once I know [339] that that's step one uh we have two [341] options like let's say we know that [343] fulfillment is the bottleneck in a [345] business right we can get like I don't [346] know let's say we can get 10 leaves or [348] 10 customers a day we can technically [350] onboard like 20 of them if we so if we [353] so wanted um but we can only fulfill [356] five of them let's say we could process [358] 20 payments and then let's say there's [360] some final completion thing where we can [361] do 10 well the rate limiting step of [362] this business is that five uh fulfilled [365] orders or five fulfilled projects right [368] so we got kind of two options here [370] number one is we can reduce the flow of [373] the rest of the [376] pipeline if I learn how this pen works [378] we can reduce the flow of the rest of [381] the pipeline to accommodate the um most [385] bottleneck or most uh constrained step [388] so that would mean maybe we cut our Le [389] gen and half maybe we let go of like 3/4 [392] of our onboarding staff maybe we let go [395] of 3/4 of our payment staff right what [397] this does is this helps you improve [398] margin and so you're basically just [400] trying to um limit the flow of [403] everything so that it matches that [404] constraint to cut costs Upfront for [406] advertising cost for fulfillment cost [408] for Staffing whatever and this can be [410] really beneficial if you're like a [411] really big company and you're just like [412] doing way too much at the intake step or [414] you have like a million onboarding [416] employees or some like that right [419] uh this is what you typically call in [420] the business like the the reduction of [422] bloat um and you know your margins can [425] go up like 20 30 40% which is nice you [427] make more profit but a lot of the time [429] you know I'm not dealing with businesses [430] that make like 30 or 40 or $50 million [432] I'm dealing with businesses that make [433] you know like a million dollars a year [435] or two or five or whatever and the major [437] problem at that level is isn't reducing [440] everything except for the constraint [442] it's increasing the width of that [445] constraint or basically like DEC [447] constraining the constraint and so what [449] that might look like in practice is [450] identify the the thinnest bottleneck [453] which in this case would be fulfillment [455] and then do a deep dive into fulfillment [457] to determine what is it that is [459] preventing us from being able to fulfill [460] more projects do we need to hire more [462] people do we need a more effective [463] project management system do we need to [465] like rethink what it is that we're doing [467] from the get-go maybe our product is [469] just inherently difficult to fulfill [470] maybe we can take a step back and try [471] selling a different product right many [473] many different ways to attack that in [475] our hypothetical example here with my [477] super shitty writing everywhere um we [479] had 10 initially uh onboarding was 20 [482] the bottleneck was five well now let's [483] say we hypothetically make this just a [486] little bit wider and I'm just going to [488] try really stupidly and make [492] this this is kind of fun actually if you [494] guys have never like drawn anything on a [496] tab I highly encourage you to um what [499] what we'll do is we'll try our hardest [501] and let's say we manag to grow this step [503] of the pipeline so that instead of just [505] you know being able to accommodate five [507] we can now accommodate 10 [511] if you think about it from an Roi [512] perspective the fact that we just took [514] this five oh that's not good the fact [516] that we just took this five and turn it [518] into a 10 represents a two times [521] improvement in our bottom line which is [523] pretty [525] cool um which means that we've [526] essentially just grown the business by [528] 200% we're going to have grown profits [530] by approximately 200% uh and this is you [532] know going to be one of the highest Roi [533] ways to impact this particular business [535] contrast that with like the reduction [537] for instance uh you know in order to [540] reduce um expenditures in such a way [543] that you would improve your total gross [545] profit or your total profit remaining at [546] the end of the term you usually have to [548] do a lot more and so you know increasing [550] is usually the move if your business is [552] small and then reducing is usually the [554] move if your business is really really [555] big you know like eight nine figure [557] company that sort of [558] deal okay so that was a ton of kind of [562] academic material that I'm just [563] throwing at you simply because I wanted [565] you to understand what uh the mindset is [567] behind you know operating a seven figure [569] agency as well as you know in my work [572] today where I'm Consulting with seven [573] and eight figure companies and [574] attempting to process optimize and [576] improve their bottlenecks what you [578] basically do is you'll do everything [579] that I just talked about you'll widen [581] one of the constraints and then you'll [582] find another constraint and then widen [584] that and then your entire job is just [586] going from one constraint to the next [587] biggest constraint to the third biggest [589] constraint to the fourth so on and so [590] forth just until everything is as wide [592] as humanly possible there's as much lead [594] volume and project volume flowing [596] through the queue and the second that [597] that's done your business is now you [599] know you know operating like a welled [600] machine and that's the reason why they [601] call you know pipelines pipelines um you [604] know it's just like the simplest and [605] easiest way to model a business now how [607] have I actually applied this at my own [609] seven figure agency um and why uh you [612] know why why am I even recommending you [614] do this in the first place um I was [616] operating a Content writing company for [618] a very long time called 1 second [622] copy which is like you know we do books [624] blogs magazine articles everything is [626] fantastic uh from the outside in but [629] when we were first growing the first few [631] months were were pretty rough and [633] basically the way that you know I [634] started this content agency was I uh [637] tried to make it just like any other [638] agency where there'd be like you know a [641] consultation process where I try and [642] figure out what it is about your [643] business that we need to improve um you [645] know I'd do like an onboarding process [647] where I'd uh you know we'd create a big [649] content calendar for you and we really [651] go into like the nitty-gritty of what [652] made good content we'd have like some [654] very belabored fulfillment process uh [657] then we have like a delivery process and [658] then you know we try and resell and [660] upsell as often as possible that [661] business never made it past maybe1 or [663] $15,000 a month the reason why is [666] because if we go back to our theory of [668] constraints graph um the intake might [670] have been huge but the onboarding was [672] like super thin uh the Fulfillment was [675] super super thin it was extremely [677] difficult to accommodate all of the [679] variables in you know like a like a [681] Content writing business because you [682] have like all these different niches and [684] all these different requirements and [686] some people do SEO this way and some [687] people want SEO this way and other [688] people use WordPress there's just so [690] many freaking variables that essentially [691] are pipeline you know if you could [694] conceptualize [696] it um okay I don't actually know how to [699] do [700] this I'm the type of guy that just says [702]  it I'm gonna buy a tablet for my [704] YouTube videos and then doesn't spend [705] even a [706] minute trying to uh trying to figure out [709] how to use it okay cool so you know [711] ignore the white there but let's just [712] pretend that you know our intake is [714] really big and then our onboarding sucks [716] or fulfillment sucks whatever our intake [718] was probably like 20 or something and [719] then everything else was like a one and [721] so we were spending like 20 times the [724] money that we probably should have been [725] spending Upfront for you know 5% of the [728] return which is just stupid so I asked [730] myself how do I apply this to my own [732] business and what I did was I looked at [734] the onboarding and I asked myself okay [736] first of all is this really necessary If [739] all we're offering is content writing [740] services do we really need to onboard [742] somebody in the first place and the [743] answer turned out to be no so if you [746] recreate the business model or you know [749] uh I changed the business model a little [750] bit I massaged it and we were no longer [752] like a company that did onboarding we [754] became a company where you know you just [756] pay us a set number of words per month [759] and then you can slice a dice at however [760] you want using the request form right so [762] now no onboarding how about fulfillment [764] for fulfillment I just looked at the way [766] that we were currently managing projects [768] which we usually hired like a very [769] competent English native uh full stack [771] writer and then I ask myself okay you [774] know I'm having trouble finding these [776] people is there any way that we can [778] change the way that that the deliverable [779] is built AKA You Know the Way That the [782] article or the ebook or whatever is [783] written in such a way that we don't [785] actually need to like have these super [788] competent full stack writers be be the [790] bottleneck like is there any way to just [791] change this and what I ended up doing [793] was I separated writing an article into [795] writing editing and QA and then I hired [798] uh ESL writers for writing which allowed [800] us to get way more first drafts through [802] the gate uh and then I hired a few [804] editors and some of those editors were [806] also QA people and the benefit of this [809] now is okay great like basically instead [812] of um fulfillment being the bottleneck [814] because we couldn't hire super competent [816] or qualified uh writer editor full stack [820] um you know talented people uh we had so [823] many first drafts and then all we need [825] to do is just hire more editors to like [826] make it better and easier and more [829] effective for us to turn these things [830] around so this is a big word jumble at [832] this point but I guess what I'm trying [834] to say is you can apply this same [836] approach that may seem academic [837] initially to literally any business with [839] outsized results you just need to have [841] the time energy and I guess capability [843] to just take a step back and try looking [845] at it from an outside view I had the [847] ability to do to do so with one second [849] copy just because we hit a certain [850] Revenue number and that Revenue number [852] allowed me to be like okay cool like I [853] don't need to just eat noodles all day [855] for the rest of my life I can actually [856] take a couple days off try and build the [859]  out and and you know figure out the [860] best way to move forward um but you know [862] I understand that not a lot of people [864] can do that and so in cases where you [866] are fully dependent on that day-to-day [867] revenue and maybe you're making a little [869] bit less money and you're still [870] wondering exactly how to get started um [872] you can still use the theory of [873] constraints um you just need to be a [875] little bit more intelligent about where [876] you're applying it you can't just like [877] tear down your whole business and [878] rebuild it in a day obviously you need [880] to make smaller sort of iterations or [882] nudges before you get to the point that [883] you want to get [884] to yeah and then I think that's it [888] for the goal um yeah so yeah so process [893] optimization and all that stuff super [895] super relevant super important um one [897] little Nuance piece that I will say on [899] that on that pipeline that I generated [901] earlier um most businesses do not look [904] like this and so don't think for a [906] second that your business is like this [908] without like actually considering it [910] most businesses are like this most [912] businesses have way too much capacity [914] everywhere except for intake and so [916] actually like they need to work on their [918] lead gen first and that's sort of the [919] whole deal um so you know if you're [921] watching this and you're just getting [922] started or or whatever you don't really [923] have like a big business career [924] underneath you um I would say you know [927] just from like a a first principle sort [929] of VI the vast majority of the time [931] you're going to be suffering from uh a [933] constraint with Leen and if you solve [935] that a lot of the time everything else [936] sort of solves so i' I'd always just [938] look there first before I start you know [940] trying to optimize my onboarding or [941] fulfillment or whatever but when you get [943] to the the stage where your intake is [945] just significantly bigger than anything [947] else um that's when you can apply uh you [950] know the theory of constraints [951] methodology to really just [952] change the game and make you a ton of [954] money so I hope that makes sense uh I [956] had a lot of fun drawing on a tablet for [958] the first time on camera if you have any [960] questions or anything that let me know [961] and until then uh like comment subscribe [964] do all that fun YouTube stuff and I'll [965] catch you in the next video thanks so [966] much

Video: https://www.youtube.com/watch?v=qucxP-G4Sic
Title: 7-Figure Agency AI Inbox Manager (10 Minute Setup)
[0] hey what's going on guys Nick here in [1] this video I'm going to talk a little [2] bit about how to how to handle [3] Communications for uh seven figure [5] agencies specifically how I do it and [7] how I've seen a lot of other people do [11] it so first things first what do I mean [13] by Communications well um as a marketing [17] agency a Content agency or any type of [19] ongoing services provider you are going [22] to get a ton of random ass emails you're [25] going to get them from your clients [26] you're going to get them from people [27] maybe trying to pitch you on Services [29] themselves you're going to get them from [31] uh prospects and how you manage email at [33] scale is really the make or break [36] between an agency that you know can [37] continue growing after a certain point [39] and then agency that's just bottlenecked [40] by a bunch of random ass queries so [42] obviously the the first thing is uh in [44] the first place you should be setting up [46] expectations and infrastructure to avoid [48] yourself being constantly freaking [49] bombarded by a million goddamn emails [51] every single day about silly pointless [52]  uh you should do client education [54] you should have your onboarding process [55] be comprehensive and thorough you should [57] have all that stuff kind of like done [58] ahead of time but what I'm going to deal [60] with in this video is okay like assuming [62] that we've done all that uh what next [63] how do we actually handle the coms for [65] an agency that does you know a million [66] dollars a year or more and so there are [68] many ways to do it here's how I did I [71] used one of two tools and I've actually [73] experimented with both and they both [74] seem to work quite well one is called [76] missive and what missive is is it's [78] basically a tool that allows anybody in [81] your team to connect to one of like 50 [83] different mailboxes and then it routes [85] all of the incoming email from each of [87] those mailboxes into a central mailbox [89] but it allows your team to respond to [91] every person as if they are the that [94] specific email address so this is really [95] helpful if you have like an info at a [97] customer support at like a hello at [100] maybe like a lead generation campaign [102] this just allows one person to be the [104] single locus of that whole thing meaning [106] that you could hire either a virtual [107] assistant or maybe you have a secretary [108] or an executive or something like that [110] um they they are then responsible for [112] everything um and then the really cool [114] part about missive and the reason why I [115] ended up picking it over like a close [117] competitor which is called front is of [120] allows you to use artificial [121] intelligence to scaffold a vast majority [122] of your replies so instead of you having [124] to manually write a reply to something [126] it uses AI to take into account the [129] context from previous conversations that [132] you've had with that person and then it [134] also allows you to combine uh Snippets [137] and sort of templating functionality [138] that means that like at the end of the [140] day an email that should normally take [142] between 5 to 10 maybe 15 minutes to [144] respond to can now be done in like 30 [146] seconds and then because of the way that [148] the infrastructure and the architecture [149] of this messaging app is set up uh I [151] don't have to do it nobody else on my [153] team has to do it except for the person [154] that we hire specifically to do so so [156] this means in practice for a million [158] dollars a year you just have one [159] assistant or executive that you know [161] maybe you're paying like15 or $20 an [162] hour or something like that somebody [164] that knows their stuff somebody that's [165] very competent but somebody that still [166] handles literally all of the incoming [168] and outgoing Communications for your [169] agency except for stuff that might be [171] specifically addressed to you here is [173] what it looks like I'll leave you guys [175] to you know go through the website and [177] check out the app itself um on your own [178] time I'm not affiliated with these these [179] guys at all I have no real personal [182] interest in advertising this I just [183] wanted to uh you know talk about [185] something today and I had a couple [187] questions about how I manage cons for [188] the agency that's why I'm talking about [189] this uh if they do have an affiliate [191] program missive sign me the hell up man [193] I love your guys stuff here's what it [194] looks like when you're actually in the [196] platform so on the left hand side here [198] you have like a catchall inbox you have [200] like a draft so very similar to just [202] like a Gmail interface sent all trash so [205] on and so forth the parts that matter [207] are this team inboxes functional [210] and what team inboxes allow you to do is [212] connect like 20 different mailboxes and [213] they just dump all of the incoming and [215] outgoing email into this mailbox missive [218] then tags every email with the mailbox [220] that it originated from so that when you [222] respond you automatically sort of [224] default to responding with the mailbox [225] that is received which is obviously very [227] important and for my purposes um we [229] don't just do this for like customer [231] support queries or project management [232] questions we also do this for outbound [234] so we will funnel all of our outbound [236] responses in through this mailbox and [238] then just have one person manag all of [240] the outbound using the vast majority of [242] those templated features like I was [243] talking about earlier so this is [245] basically what it looks like you see um [247] this specific um account here that we [249] have this this team inbox and Nick email [251] we have a bunch of different like [251] project management platforms that a [253] bunch of different people are using that [254] have added us to it we have like [255] contracts we have uh payment processor [258] you know queries we have like calendar [260] notifications all the random that [262] you would normally have to go through on [263] your own uh we just now manage in like a [265] centralized inbox which is pretty [267] awesome and then let me show you what it [268] looks like when you actually want to [269] resp respond to somebody and how the [270] artificial intelligence thing works [271] because that's probably like the highest [272] Roi part of missive in general um it's [275] also quite affordable and quite cheap [277] this is uh just some Prospect client [280] that I'd worked with at some point in [281] the past and um I think I got like a [283] pretty big contract as a result of this [285] yeah our agency won a contract with HP [287] that's the laptop companies that was [289] pretty big and I was just thanking the [291] client or yeah I guess the client at [293] this point um that was responsible for [295] giving the work that ended up in the [297] portfolio that I think won US the piece [299] so that's me thanking them let's say I [300] wanted to respond to this really quickly [302] or you know one of the assistants on my [304] team wanted to respond to this um all I [305] would do is I'd uh I'd click that [307] respond button and you know you can just [308] hold control press R you can do the same [310] thing and then down here there's a reply [312] with context button and so all I do is I [314] click this and you see AI just wrote out [317] that email um it took this sentence into [321] account and it took like the whole like [322] prior context as well and so the way [325] that this works is you need to basically [327] go on the right hand side here and then [328] add an integration [330] go down to I think open AI here and then [332] just click add to missive and what it'll [333] allow allow you to do is you'll then add [335] your open a API key configure whatever [338] model you want to use I always just use [339] gp4 because the extra token cost is [341] totally worth the time that me and my [342] team saves on this uh and then uh you [345] can also Define your own prompts so what [346] you do is you go down here to prompt and [348] then you can actually like create your [350] own prompts however you want so I [351] created one called reply with context um [354] but obviously you can create one however [355] you want this is what mine looks like um [358] you're helpful intelligent email [359] campaign pay an assistant your job is to [360] read and then respond to incoming email [361] replies in a Spartan yet in formal tone [363] as Nick sth here's the message here's [365] the potential context right response to [368] apply only return the body section do it [369] markdown format yada y yada so some of [371] this stuff is just you know like a [372] consequence of how missive works like uh [374] formatting is is all on markdown for [376] instance so you have to include that [377] sentence but feel free to just copy and [379] paste this and use this on your own just [380] swap out your name if need be uh the [382] model here is where you select between [384] gp4 I guess they only allow you to do [386] 3.5 turbo now that's new and then you [388] got a couple options that you can use [389] the way that this works is the context [391] part of it anyway is um basically [393] missive also allows you to define a [395] bunch of Snippets and so here are a [396] bunch of Snippets that have sort of [397] created in the past and so um this is [400] like you know little questions and [401] answers and stuff like that obviously [403] this is for writing this isn't the same [404] thing and this is for people that are [405] specifically asking me questions about [407] my own portfolio so you're going to have [408] to edit these templates to um you know [411] your your your own situation your own [413] agency but the way that this works and [415] the reason why this works really well is [416] because um essentially the AI [420] will look through the message that [423] somebody's asking you about it'll then [425] find the closest template that can that [428] answers that question and it does all [429] this automatically and then it'll use [431] that template as context essentially as [433] like an example for the AI and so what [436] ends up happening in practice is you end [437] up with these templates that are like hi [439] X hi X hi X how are you doing X hey X [441] whatever and then it'll go through in [443] the a just sort of knows what you want [444] it to do which in this case is to [445] replace the X with the name maybe change [447] the template slightly just to [448] accommodate their specific request or [450] specific feature and in practice this [452] means that you can just respond to [453] emails in half a second I mean like you [455] know what what did I do there I went [456] reply with context click took less than [459] two seconds and then you press send and [460] close 99% of the time that's it and [463] that's how you manage you know an [464] extremely uh Dynamic super high volume [467] email inbox without it necessarily being [468] overwhelming uh what I would do if I [470] were in your gu shoes and this is the [472] first time that I was managing anything [473] like this and you know I've never like [475] used an email inbox tool before is I [477] would look for a virtual assistant I [479] pref preferably somebody in the [480] Philippines or somebody that has good [481] English skills the Philippines is [483] usually my go-to pick because one costs [485] affordability like um very low cost of [488] living place and so obviously salaries [489] are a lot lower so you can pay [491] significantly lower amounts of money in [492] order to retain them on your team but [494] you can also you know like change their [495] lives and offer them really good um [497] lifestyle and living situation and stuff [498] so it's sort of like a you know it's a [499] give and take it's quite valuable uh but [501] two they place a very strong emphasis on [503] English education from a very early and [505] very young age and so um you know you [507] don't really have to deal with any like [508] English incompatibilities or [510] inaccuracies or whatever so what I would [511] do is I'd hire a virtual assistant from [512] the Philippines and I'd pay them [513] anywhere from probably like $7 to maybe [515] like $12 an hour us depending on the [517] source of things that they're doing for [518] you and how executive of a level they're [519] at and then I would um task them with [522] being the single source of Truth um in [524] your mailbox I would set up for every [526] single mailbox you have that you no [527] longer want to deal with I would set up [529] simple rules and missive which make it [531] incredibly simple to do so um you just [533] go to accounts and then you click [534] connect account and then you just route [536] all of the different mailboxes in it's a [538] simple Gmail login screen [539] um I would I would do that I would go in [542] connect the account and then uh I would [544] have them just trial responding to your [546] emails for like three or four days and [548] then after they send a few emails for [549] three or four days I would compile all [550] those emails turn those into a big list [552] of templates and then I would add those [554] templates to that template feature in [556] missive that I showed you and then just [557] use AI for the next you know week or two [560] and see how that goes that would be my [561] personal sop um I've implemented this at [563] a variety of companies it seems to work [565] quite well uh most people that I show [567] this to are just like holy freaking [568] are you kidding me you guys were using [569] AI I had no idea and that's just because [571] the quality of our responses gets to [573] benefit from the templated functionality [575] that I myself and other people on the [577] team have set up where like we just know [579] that this works as a response to a query [581] uh but it's also flexible we get to [582] customize that automatically using AI to [585] curtail that to whatever the the client [588] request or Prospect ask is so hope that [591] makes sense um wanted to keep it super [592] straightforward if you have any [593] questions about how missive Works feel [594] fre let me know but this is probably a [597] tool that generates me like at least a [599] 50x Roi every single month like I mean I [601] think the subscription cost is 20 or $30 [603] a month or something like that we [604] probably manage well over5 or $20,000 [607] worth of work just through that email [608] inbox so that's actually way bigger than [610] 50x that's like 100x highly recommend [612] and if you have any questions let me [613] know

Video: https://www.youtube.com/watch?v=CpCsxUQ2n4Y
Title: Agency or SaaS? ($2.4M Earned)
[0] what's going on guys Nick here in this [1] video I'm going to take a departure from [2] the usual sorts of videos that I've been [4] recording which typically deal with [5] tools and uh how to optimize various [8] aspects of your workflow and instead I [10] just want to talk a little more [10] generally about a trend that I'm seeing [12] a lot of people fall prey to [13] unfortunately and uh it's resulting in [15] just a lot of disappointment it's [16] resulting in a lot of people unable to [19] learn the sorts of business skills that [21] I think you need in order to succeed and [22] it's resulting in a ton of people [23] burning out and it's what I call [26] starting a SAS as your first business [29] now a lot of people uh that you know get [32] into business seem to do so or at least [34] want to do so through the SAS route they [37] think hey I'm going to build this fancy [39] amazing product that solves all these [41] amazing problems and it's just going to [43] be there and people are going to sign up [44] to my and pay me tons of money for [46] it what they don't realize is that [48] starting a SAS is probably the worst [49] company that you could do if you've [50] never started a business before and that [52] 99% of the people that are probably [54] watching this video or that haden't [55] started a business before would do way [57] better if they took a couple steps back [59] and and then just started an agency [61] instead you're going to add less than 6 [63] months total time to like the turnaround [66] and kind of work cycle um and maybe not [68] even that like you might actually be [69] able to develop your staff significantly [71] faster because of all the money and all [72] of the skills that you're going to learn [73] building an agency so I'm very bullish [75] on agencies I mean I know that uh [78] everybody's like agencies are dead and [79] you know the the agency era is pass and [81] all that I disagree completely I [84] mean I think that you know services in [86] general are getting more difficult to [88] manage at scale as people are becoming [89] more aware of some of the major pitfalls [92] of Outsourcing and globalization is [93] equalizing Market rates across countries [95] but I don't necessarily think that that [97] means that agencies as a business model [99] are bad to go into and I don't know if [100] they'll ever be bad to go into and [102] that's what I'm going to talk about in [103] this video I'm going to show you [104] logically why you should start an agency [106] instead of a SAS company if this is your [108] first time considering a business hell [110] even if it's your second third fourth [111] fifth time considering a business if you [113] just like want to start a sass the [115] likelihood of success is so low [117] that you would almost always be served [119] just just thinking a little bit more [121] about okay is there a service that I [122] could provide instead of the SAS um that [125] you know I can figure all the out [126] manually and then you know I can build a [128] A productized or software solution [130] afterwards so here is what we're going [132] to talk about today number one agencies [134] give you more upfront Revenue I'll talk [136] about why that's important number two [138] I'll talk about the business [139] fundamentals that you learn starting an [141] agency that you do not learn starting a [143] SAS and then number three I'm going to [145] talk about the mindset and why agency [147] mindsets are just so so much more [149] profitable [150] uh and just better for the vast majority [152] of business owners than the mindsets [153] that people have when they build SAS so [156] let's start with number one okay I view [159] business on like a gradient and the [161] gradient is on the one side you have [165] extremely scalable businesses that can [167] go to the multi-billion dollar Mark okay [170] these are like Network effect consumer [172] software businesses like Facebook or [175] Instagram or whatever where you know [178] like there's there's so little inherent [180] value that getting the flywheel started [182] is so goddamn difficult like imagine how [184] difficult it was to get the first [185] customer of Facebook let's say versus [186] like the first customer of an agency was [188] probably uh what's the value there you [190] just go on a you just sign up to a [192] website and look at a blank page there's [193] no friends there's no nothing right but [196] anyway that business is still extremely [197] scalable and it tends to grow better and [198] better and better with the more people [199] on it right and then you know you make [201] billions of dollars that's on one side [203] that's a super scalable business and [204] then the other side you have unscalable [206] businesses that can make a lot of money [208] very quickly but then can't really go [210] past that cap and these are agencies [212] agencies can make a lot of money very [213] quickly but the vast majority of people [215] that run agencies just can't scale them [217] because they either lack some management [218] knowhow or maybe the service is [220] inherently difficult with scope or all [221] that so the point that I'm [223] making is I just want you to view [224] business as this like this gradient [226] where you have scalability on the one [228] side and then you have uh you know just [230] like fast easy growth easy pickings [232] initially on the other side and if it's [234] your first business like you should not [237] be starting the extremely scalable [239] extremely difficult to get running [240] business you should not be trying to [242] start the next Facebook you should not [243] be trying to build a SAS when you don't [245] even know the fundamentals of like a [246] client acquisition or anything like that [248] you should go for the easy wins you [249] should make a ton of money [250] extremely quickly like myself and many [252] other of my friends that are in the [253] agency space and then once you have [255] those fundamentals it becomes so much [257] easier to do everything later on and you [259] also you have like a fair amount of cash [261] which is uh I think just like [262] existential existentially really [264] beneficial okay so here are uh some of [268] the maybe not facts some of these are [269] heavily opinionated but uh let's be real [271] my opinions are basically facts at this [273] point um if it's your first time running [275] a business you should know that agencies [277] are going to make anywhere from like 10 [279] to 20 times more Revenue upfront than a [281] SAS company will even if you're doing [282] some type of monthly billing with an [284] agency like you're going to make just so [285] much more consider a managed service [287] with an agency like graphic design or uh [292] I don't know in my case content writing [293] or maybe some big SEO package or [295] whatever like you're charging you know [296] three four five 10 $15,000 a month for [299] that package most the vast majority of [302] the low touch SAS companies that you [303] know people are thinking about when [304] they're like oh I want to start a SAS [306] that like solves this time of little [307] problem you're making like 10 or 20 [308] bucks a month for it um you know how [310] many customers do you have to get uh to [313] equivalent that right like 500 or [315] something so it's like what's going to [316] be faster you building the Flyway up to [318] get 500 customers when you don't even [319] have any of the infrastructure built up [321] or you just going out hauling ass and [323] then getting like one customer that pays [324] you 10K month obviously the ladder and [326] that's why agencies are so much easier [328] as a first Revenue [330] the second thing is and this is sort of [332] related to that point having a bunch of [334] money changes the way that you do [336] business the vast majority of these SAS [337] guys that you know either think they [339] have to finance or and I'll get into [340] financing later Finance or you know [343] they've just never really operated a [344] business before they're like super [345] afraid to like invest money into growth [346] and marketing and stuff like that uh [348] it's just because they're broke they [349] don't have any money with an agency you [350] make a fair amount of money very quickly [352] and then you can start making like [353] actual investment and operational [354] decisions that you know have outsized [356] success potential with your Capital uh [359] you know if you make like $30,000 one [360] month and then after operating expenses [362] you have I don't know let's just say 10K [363] left over so you have like 40% margin or [365] something like that that's still $10,000 [368] freaking dollars um you know how many ad [370] campaigns is that or cold email [372] campaigns like you can actually start [373] hiring people pretty quick um so there [376] there's just a lot of potential you [377] learn how to use money and handle money [379] a lot faster which is obviously [380] extremely avable um another thing is uh [385] you can also just like make a fair [387] amount of money extremely quickly and [388] then use that money to pour gasoline on [390] the fire of a sass company later I see [392] tons of people do this and man this is [395] just like the number one most like [397] statistically likely way to achieve [398] success in the SAS field just having a [400] ton of money while also not being [402] relying on outset investors um and then [404] there's also just a bunch of Lifestyle [406] benefits which I find really hard to [407] operationalize but like you know a lot [410] of these SAS Founders and I see them on [411] Twitter every day and I talk to them on [412] Twitter I'm like dude you should just [413] make some money first like um a lot of [416] these guys are just like eating [417] packet Ramen all day or they're just [420] like super freaking broke and they just [421] hate their lives and they're chugging [423] along this dream right they can't pay [425] their bills they can't pay their rent [426] they're always stressed out always [427] worrying about the next dollar meanwhile [429] they picked literally like the most [430] difficult way to make that next dollar [432] it's just completely illogical what you [433] should do is you should solve that [435] lifestyle uh myopia first right like you [438] should solve the blockers that you have [441] that prevent you from being able to make [442] long-term decisions because you're [443] always so worried about your rent and [444] your food and and then once you [445] have that all taken care of and like [447] your near-term security is handled well [449] then get one rung up on the maso's [450] hierarchy baby you can actually start [452] thinking long term about the sorts of [454] bigger plays that you want to do with [455] your life uh and a lot of the time you [457] know that intentionality leads you to [459] way greater success than just starting a [460] SAS company and hating your life for a [462] few years does on the outsize chance [465] outsized unlikely chance that you will [467] succeed big which most people don't so [470] that's number one number two uh business [471] fundamentals so I touched on this [472] earlier but you know you have money so [474] you need to start making decisions with [475] that money um in addition to that [477] another really cool part of agencies are [478] that uh the vast majority of agencies [480] provide some type of ongoing Service as [482] a result of providing an ongoing service [483] you need to learn client management [485] skills you also need to learn team [486] management skills and you also need to [488] learn like project management skills but [489] I guess all those somehow go hand inand [492] but client management is one of the most [493] important impactful skills that you can [495] learn in business because client [496] management is very similar to customer [497] management and customer management can [499] be done either by you jumping on the [500] phone or sending them an email or when [502] you later design your SAS just building [504] in like user experience patterns that [506] handle a lot of the that one of [508] these customers or c might be giving you [510] up front the only real way to get in the [511] mindset of a customer somebody that is [513] paying you a large amount of money is [515] just to do it really often and it's very [517] difficult to do so when you know that [520] your justification or like you know the [522] question that they're asking is is this [523] worth $5 like it's it's very difficult [525] to understand that now if the question [526] they're asking themselves is is this [527] worth $5,000 well then he can start [529]  learning this pretty quick [531] right um pardon my French if you don't [533] like swearing you should probably not [535] watch my videos um any who so you learn [538] client management you learn uh Team [540] Management as well like agencies are a [542] very people heavy business as automated [544] as you know they they can get nowadays [546] like my business one second copy I'd [547] considered extremely automated it's like [549] very productized form of content writing [551] there's very little like account [552] executive BS there's very little project [555] management aside from like the team sort [556] of self-managing which is great um but [559] you still have to hire people to get the [561] stuff done right like you can probably [562] work as a solo operator as freelancer up [564] to like 10 or 20K a month but after that [566] point you start needing to like hire [568] people and your ility to manage a team [571] uh is so much easier to learned in an [572] agency where like you guys are doing a [573] service together that's some type of [574] deliverable with the client expectations [576] needing to be manage and that sort of [577] thing than in a SAS company when you're [579] usually just hiring like some customer [580] service or support rep uh it's just like [582] one or one or so people for like the [584] first like 20 or 30 or 40K so you learn [586] how to manage a team which doesn't just [588] make you better at running that agency [590] it just makes you better like a more [591] charismatic a more humble a more [593] compassionate human being which is [594] obviously just going to benefit you more [595] generally in life um and then yeah you [599] also learn how to manage projects and [601] your ability to execute projects for [604] your clients are going to roll over into [606] your ability to execute projects for [607] yourself one of your later projects [609] might be k a sass well it's like okay [611] well now I know how to actually [612] like do that from a project management [613] perspective I need to scope this out [615] need to determine like the market demand [616] for it I need to build like an MVP as [618] quickly as possible and then I need to [620] like validate and iterate on that right [622] so you get to learn these things [623] extremely quickly in an agency um and [625] I've probably compressed like 10 years [627] of running ass sass into like one and a [628] half to years of running an agency uh [630] which is super valuable and then the [632] last thing is um the mindset that you [634] have as a result of having an agency [636] like agencies for the most part the vast [639] majority of them do not raise money [642] because there's just nothing proprietary [644] about that business model and Venture [645] capitalists do not give a about [647] investing in stuff unless there's like a [648] one a 0 1% chance you're going to be the [651] next Uber even if your you know value [654] proposition is good nobody's going to [655] give a hence agencies find it [657] either very difficult to invest uh they [658] don't really want to spend time [659] investing or whatever whatever the case [661] is that just means that like they're [663] forced to bootstrap the vast majority of [664] the time or Supply some type of like [666] internal Capital to like keep the keep [667] the thing uh to to selfinvest or get the [670] get the flywheel [671] started the difference in spending your [674] own money versus somebody else's money [675] cannot be overstated I work with like [678] when I started my my agency I did a [680] bunch of research into the other [681] companies in the space and all these [683] businesses that like tried to be content [685] agencies that that also provided some [687] like proprietary service and can't tell [689] you like the the four or the Five Guys [691] that did this like back when I first [693] started my business the four or five [694] guys that like raised a fair amount of [695] money and then tried to do some type of [697] like Twist on just like the tried andrue [699] service business model uh with like you [701] know artificial intelligence or like [702] some type of Fancy Pants like request [704] ordering system or whatever you want to [706] call these marketplaces um like the vast [708] majority of them are now dead because [710] they were spending somebody else's money [712] they weren't spending their own money [713] and when you spend somebody else's money [715] it's so easy to forget how valuable that [717] money is you really do lose the value of [719] a dollar um when you cultivate a scrappy [722] mindset where every dollar you spend is [723] a dollar that you have to acquire from a [725] customer or Supply yourself you become [727] so much more creative about how you make [729] that make those purchasing decisions you [731] become significantly more like profit [732] aware which is like obviously the most [734] important freaking part of the business [735] is cash flows people um you know why the [738] hell would you operate at a negative for [739] like the first 15 years if if that's not [741] your goal right uh but but but you learn [744] you learn basically all the fundamental [745] skills required in becoming a great [746] business owner and then you cultivate [747] this Scrappy mindset which l [749] anybody aside from like a select few [752] people in Silicon Valley venture capital [754] Community like care about the most and [756] those skills are going to take you [757] extremely far in any business that you [758] work with whether in the capacity of a [760] client or whether you know you're [761] starting your own SAS company or that [762] sort of thing so this gorilla Scrappy [765] sort of mindset this cash flow first [767] this profit first mindset uh that is [769] like the most valuable sort of just like [771] uh Paradigm to use in business that I've [773] personally ever found and the vast [775] majority of the guys that are like I'm [776] going to make this SAS company it's [777] going to be unicorn and you know I I [779] need to go and get financing they never [780] learn that another thing is uh [783] looking for fundraising like optimizing [785] or fundraising is a fundamentally skill [787] than optimizing for profit uh like I [789] just looked up SAS financing here and [791] just look at all these charts [792] with all these different you know steps [794] and and that sort of thing like this is [795] like a very fundamentally different [797] skill set that you're optimizing for [799] you're attempting to impress investors [800] with the possibility or potential of an [803] idea rather than impressing customers [805] with like concrete value that you're [807] actually delivering today and and you [809] know I in 99.9% of cases I would always [811] prefer that first part I'm not here to [813] sell a dream I'm here to like live an [814] amazing Kick-Ass lifestyle make more [816] money than 99% of people and work like [818] less than 10% uh as much as my peers do [820] to do that so don't optimize for [823] impressing a bunch of people in suits [825] optimize for making your customers love [827] your product and then wanting to work [828] with you uh long [831] term and then the last part I'll say is [833] you know really know why you're getting [835] into business in the first place and the [837] vast majority of people as I mentioned [838] earlier are not in business because they [839] want to make the next Uber or the next [841] Facebook or whatever they're in business [842] just because they sort of intuitively [844] realize like hey I'm a pretty high [845] performer and why should my performance [847] and why should my earnings be capped by [849] what somebody else says that I can make [851] right why should I work at a company [852] where I'm forced to just stare at a [853] clock all day when in reality I can do [855] most of that work in two or three hours [857] like that's the vast majority of people [858] that are in business and watching this [860] video um you know if you're a high [862] performer you just want like an outsized [864] impact every hour that you spend [866] delivers let's say 15 hours what you'd [868] make in a company or something like that [869] which is most people that are watching [870] this video uh you know starting a SAS [873] just does not make sense you can [874] eventually have that SAS running and you [876] know you could start it in a year or two [877] after you've learned the rest of all [878] these business practices and your [880] expected value and your expected chances [882] of success will be much higher and then [884] it Mak sense to start a assas because [885] now you know what the you're doing [886] and you can actually make 10 or 15K a [888] month keep 90% of it and then only have [890] to work a few hours a week that's good [892] but you know if if if it's one of your [893] first time starting a businesses if it's [895] one of your first times starting a [896] business that's not you and you should [898] just be pragmatic and intelligent and [900] smart about it make some money as [902] quickly as humanely possible and then [903] use that money to grow whatever the hell [905] else you want to do so I hope that makes [908] sense that's just a little Deep dive [909] into a thought that I've been having [911] recently and what a lot of people on [912] Twitter have been asking me about I if I [915] could go back in time like I've ran [917] through dozens of different business [918] models at this point if I could go back [919] in time I would just try and start an [921] agency in a very simple service space [922] that's well- defined to go uh to start [925] and the reason why is because I don't [927] really want my the focus to be on [931] like imagining or dreaming up this new [934] incredibly complex business model it's [935] like I don't know any business model so [937] I might as well just learn one that [938] other people have validated for me learn [940] that real well and then I can worry [942] about you know making that new and fancy [943] later on that's my mindset I hope that [946] helps you if you guys like this video [948] please like comment subscribe do all [950] that fun stuff for the YouTube algo and [951] let me know if you guys have any [953] questions or anything like that you want [954] me to cover thanks so much for watching [955] have a great rest of today

Video: https://www.youtube.com/watch?v=ZjeYT665NOk
Title: 7-Figure Content Agency Stack (Copy This)
[0] what's up guys in this video I'm going [1] to show you the exact tool stack that I [3] use at my $1 million year agency it's [5] extremely simple it's not difficult at [7] all and I'm going to walk you through [8] every tool that I use actually open up [10] the tools show you how I use it and at [12] the end I'll give you some closing [14] remarks on why I picked the tools that I [16] did and what I would do if I could [18] magically turn back the clock and uh be [21] faced with like a zero Revenue again so [23] without further Ado let's get into it [25] this a little notion document that I [26] have up here called my 2024 $1 million [29] year agency stack uh so what tools do I [32] use at my $1 million agency and if I [33] could do it all over all over again from [35] scratch what would I use so let's start [38] at the beginning uh you know I have zero [40] customers and I'm just starting from [42] scratch and let's just like follow the [44] journey from the customer starting um [47] with my company all the way to the end [49] you know getting fulfilled getting their [50] project delivered the very first thing [52] you need to do is get a customer in the [53] door and the way that I do it and the [55] way that many other extremely successful [57] agencies do it is they use cold email [59] now a lot of people think cold email is [60] dead I've heard some variation of that [62] repeated every single year for the last [64] like 6 years and this is actually really [66] great that that happens because every [67] time people are like oh my God cold [69] email is dead it'll never recover you [70] know uh email platforms are blocking and [73] you know we're we're going into spam at [74] like ridiculous rates all that the [77] the reality is that significantly fewer [79] people are using cold email and so then [81] if you use cold email you there's [82] actually like a Resurgence of conversion [84] rate there's a Resurgence of interest [86] it's very like uh pendulum swingy and so [88] instantly. a is like the number one cold [91] email platform and I've been using it [92] nonstop ever since they came out [95] basically or maybe ever since they got [96] popularized and the way that it works is [98] you can add an infinite number of email [100] accounts assuming that you've set them [102] up in like Google workspace or maybe [103] like Microsoft 365 or whatever um and [106] then all you do is you pay one flat fee [108] of like $99 a month it's extremely [110] affordable at scale and I think that you [112] can send up to 15 or 20,000 contacts uh [115] for that amount so like contrast that [118] with literally any other cool email [119] platform like Lem list or reply.io or [121] whatever the heck you want to use and if [122] I were to try and have 18 ongoing [125] mailboxes it would probably cost me like [126] $2,000 so I'm capable of achieving the [129] same volume uh for $99 that I can for [132] $2,000 elsewhere but that's not the only [134] reason I really like it I like it [135] because in addition to the cost savings [137] like I don't really care about spending [138] money if I get to make a ton of money um [140] in addition to the cost savings it's [142] also just way better from a user [143] experience perspective it's just super [145] easy to set up extremely high performing [147] campaigns so this is a an example [149] campaign that I set up way back in the [150] day this is like one of the many that I [152] set up like a year ago uh and you see [154] the reply rate for that campaign was [155] freaking almost 10% across the board uh [158] which yielded 823 replies about a third [161] of which became like profitable [163] opportunities that I pursued and a bunch [165] of these people became uh our agency [166] clients which is really nice the way [168] that instantly works is they basically [170] optimize the hell out of every aspect of [172] your sales campaign from start to finish [174] so they will automatically strip all the [175] HTML from your emails they'll give you [177] like a couple of tips they have like [178] this whole like accelerator master class [180] thing on how to write these extremely [181] high converting emails and I basically [183] just like dove in with you know both [185] feet learned everything that I could [187] about cold email copyrighting scheduling [189] all that stuff and then used it to build [190] this campaign out if you think about it [193] uh that's like a onetime Time cost of [195] maybe like 15 or 20 hours and then I've [197] been able to use that to generate [199] several hundred, over the course of the [200] last couple years simply because of that [202] skill set so super simple super easy uh [205] this is an example of what my campaign [207] looks like I'll always start with some [208] type of attribution I'll always see what [210] they're looking for I'll always pitch [212] and I like to pitch as a freelancer [213] simply because I find conversion rates [215] are a lot higher I only know this [216] because I added a bunch of split test [217] variants where I ran through like 50 [219] different ways to pitch like content [221] Marketplace content agency um you know [224] automated content solution right like [225] I've I've run through everything and [226] that's the best highest Roi pitch uh my [229] offer is a free trial piece for whoever [231] currently orchestrates content which [233] tends to work quite well uh and then I [235] don't really have like a big ask I'm [236] just asking if uh you know they could [238] point me in the right direction so if [240] you have any uh desire to write really [242] high converting email campaigns uh I can [244] go into way more depth about what my [246] copyrighting process looks like and what [247] actually works today in 2024 and Beyond [250] um but other than that I'm going to move [252] on with the next [254] step assuming that you now have you know [257] some some people that are interested in [258] your product and you know potentially [259] maybe you've talked to them booked a [261] call with them whatever where do you go [262] from here well now you have to actually [263] like send and receive payment right I [265] mean conversations are great but money [267] is why you're in business in the first [268] place so uh what do I use for my agency [271] payments I use exclusively stripe a lot [274] of people are like anti- stripe they [275] think stripe is stupid or really [277] expensive or something like that um I [279] think that's the dumbest thing I've ever [280] heard stripe is fantastic for a couple [282] reasons number one if you ever wanted to [283] sell your business in the future stripe [285] is the gold standard for Revenue [288] recognition no other company is as [291] integrated with like Flippa buy and cell [294] platforms uh like all these brokerages [296] and stuff like that then stripe is [297] everybody knows how to use stripe [299] everybody expects to see payment things [301] in stripe whether it's an agency or like [303] a SAS company or an e-commerce company [305] well maybe e-commerce is a one special [307] case there but everybody really likes to [309] see stripe so just using Stripe from the [310] GetGo makes your life so much easier if [312] you ever want to sell and I would never [314] not want to sell or at least have the [316] ability to sell in the future that's how [318] you get rich that's how you you know [319] multiply your revenue and double dip you [321] get to make money while your business [322] operates then you get to make money at [324] the end of that business as well and [325] basically make two or three times more [327] what you were able to make in cash flow [328] so I'm I'm a big fan of stripe just for [330] that reason but more importantly uh [332] stripe is also just the most convenient [334] payment platform on planet Earth it's [336] just like a breeze to do anything if I [337] want to send an invoice it's like a two [338] button process the invoices are [340] incredibly professional they look [342] extremely Sleek very sexy yada y so like [345] there's no reason not to use stripe uh [347] the 3% payment fee or whatever is just [349] like come on man you're going to make [350] 97% of that I understand trying to [353] optimize margins when you're at like a [354] $50 million a year business or whatever [356] a percentage Point here a percentage [357] point there could literally like buy you [359] an Island but the vast majority you [361] aren't making that much money the vast [362] majority of you're looking how to build [363] like a $1 million year agency which is [365] between $80 to $90,000 a month that 3% [367] is 100% worth it for the uh convenience [370] and the velocity that you get as a [372] result of using a payment platform like [373] this so uh I really like stripe um and [377] yeah I'm not going to beat that with a [378] dead horse I'm not going to beat that [380] dead horse but you get payments you get [381] invoices you get subscriptions whatever [383] type of business model you have strip [384] basically covers [385] you next up is okay great so now we've [388] you know we've got the customer and then [390] we've won the customer and we've [391] received payment of some kind whether [393] you want to do like agreements or [394] anything at this stage totally up to you [395] but what do we do with that customer now [397] well now we actually have to fulfill the [398] project now we actually have to like you [399] know move forward and give them the [400] thing that they paid us for and so for [403] that I use clickup it's my CRM and [405] project management tool and I freaking [406] love clickup to death because it's just [408] another example of clickup does what [410] like five or six tools used to do and [413] basically excuse me by using clickup you [415] can basically eliminate like five or six [417] other tools from your stack keep it as [418] simple and as as humanly possible uh [421] they have had some pricing changes in [423] the course of the last couple of uh a [425] couple of years that have made it you [426] know significantly more expensive than [427] what they used to be they used to have [428] this amazing free plan and that's kind [430] of how they like acquired so much market [431] share but whatever they got to make [433] money too and I'm totally fine spending [434] money on clickup if it means that my you [436] know my business operates exactly how I [437] want it to now you can set up click up [439] however the heck you want this is how I [440] set it up I have a CRM so I basically [443] have like two uh spaces I have a project [445] management space and I have a sales [446] space and so my sales space is like my [448] CRM my pro project management space is [450] like where all my staff members do work [452] and stuff like that um so there are many [454] different like project management [456] methodologies on how to set up crms and [458] project management systems I'm not going [459] to walk them through exhaustively today [461] but I am going to record a video on my [463] favorite which is a theory of [464] constraints by Eli Gold rat but [466] essentially um you know this is just a [468] quick example of like a pipeline that [469] you can set up in clickup that allows [471] you to manage new entries as they come [472] in so in this case I have you know a [475] column labeled Prospect status with you [477] know where are they in my pipeline are [478] they interested [479] uh have I have they requested a sample [481] have we delivered a sample are they [482] closed if they're closed they become a [484] client um you know are they unqualified [486] unsubscribed lost whatever you can [487] customize the heck out of this however [488] you want simpler is always better click [491] up then allows you to organize and [493] display this information however you [494] want so I could do it as a top down list [496] or I could do it as like a left to right [497] Trello style can band board um I find [500] that you know the the real beauty of [501] clickup is just that it allows you to [503] represent that data however you want and [504] it abstracts away the data itself which [507] is a single source of truth from the way [509] that you view it and people are visual [511] Learners other people are textual [512] Learners so this just provides like a [514] lot of latitude there um this is just an [516] example of a CRM that I set up that [518] works quite well and I set crms like [520] this up for people quite often at left [521] click my um uh my operations consultancy [524] where you have you know like the lead [526] entry you then have a column to see when [528] the last time they've been updated then [529] you have a lead age and that lead age is [531] basically just a formula that shows you [533] hey is this person green orange or red [536] um how long's it been since they've been [537] connected or contacted uh and then you [539] have statuses you have their Source you [541] have the assign and then you have like a [543] discovery call URL which in my case is [545] just a fancy uh calendar link that links [548] specifically to that clickup Prospect [549] using their ID which means that you know [551] anytime I send out an email with a [553] calendar Link in somebody books I can [554] then do a bunch of cool stuff after that [556] uh relevant to that Prospect I can I can [558] automatically send them emails I can [560] automatically update stages in my CRM I [562] can automatically add things to my [563] dashboard all that sort of stuff so [566] that's an example of a CRM uh this is an [568] example of of a project management [570] system and basically the way this [571] project management system works is it's [573] separated into a variety of columns here [574] but we have like the the name of the [576] article right we're a Content writing [578] company so the name of the article on [579] the left hand side we have like a [581] project folder column which is where we [582] store all of the details and information [584] about that specific project and you know [587] if I click through one of these you'll [588] see it'll actually like show you the [590] article itself that was written so in [591] this case had to tailor Financial [592] education to diverse student populations [594] um that's where the writers will [595] actually log in and then do their work [597] we have like a due date column which is [598] OB obviously the due date of the task uh [601] internal status which is just another [602] status field that I created which allows [604] us to separate things into you know when [606] a task comes in it's a waiting [607] assignment it's an a then the writers [609] acknowledge the assignment by moving it [611] to assigned then when they start working [612] they move it to writing then when they [613] start editing they move it to editing [615] and then when they're ready they move it [616] to ready for submission we have a Time [618] tracking column here uh you know the [620] there's a bunch of stuff here that makes [621] the system work at the scale that it [623] does right now but this isn't the only [624] way to set up a project management [625] system it's just the way that works for [627] my specific business because we have a [628] very simple staff model and because um [630] you know the only thing that we're [631] providing is content writing services [633] there are a number of great resources [635] that I'll link in the description if you [636] are uh an agency that provides more of [638] like a an endtoend One-Stop shop type [641] service um and in that case you probably [643] wouldn't set it up in the same way that [644] I've set it up as like an intend [646] pipeline what you do is you probably set [647] it up as like a space for clients and [650] then different subfolders for every [652] client that allow you to manage various [654] services like SEO graphic design uh [656] paperclick ads yada yada so yeah [658] different flows there but this is how my [660] company uses it and this is how we make [661] a million dollars a year um next up is [665] okay great now you're actually like [666] producing the product and you're [667] actually working on the deliverable well [669] how do you manage your own costs right I [671] mean sure you made money from the client [672] but how do you make sure that you're [673] consistently always under that budget [675] and operating at a profitable uh basis I [678] use a Time tracking platform called [679] Harvest Harvest is the best time tring [681] platform that I've found so far uh and [683] basically the way that it works is it [685] allows you and anybody on your team to [687] just click one button is a Chrome [689] extension and then log time on a [691] particular task the great part about [693] Harvest 2 is it integrates directly with [695] clickup which allows us to just do this [696] one click sort of back and forth [698] integration where the time track will [700] actually update inside of clickup so [702] anybody that's doing any type of content [703] management or me or my partner or [706] anybody that wants to can easily just [708] look over and see what sort of time [709] allocation we're spending on various [711] tasks in the business and how we can [712] improve the really cool part about this [714] as well is we can then log people's time [716] we can see when they finish the time and [718] then we can just query Harvest once a [719] day to get an updated like time sheet [721] essentially of all the time people have [722] spent on these tasks and then we can add [724] that to a big dashboard database which [727] allows us to see okay what are people's [728] average margins on tasks how much money [730] are they spending uh how much money of [732] ours are they spending to do this um you [735] know are certain clients more profitable [737] than others are certain writers more [738] profitable than others this allows us to [739] make these sorts of like highle [741] decisions that most other people just [742] have to do off of either gut feeling [744] Intuition or they have to like ring up [746] their finance department and spend a [748] week trying to get they should just have [749] in front of them so that's how I do my [752] time tracking and that's one of the most [753] important and valuable parts of this [754] whole business if I'm being honest okay [757] now at that point uh let's just cover a [760] couple of the other logistical aspects [761] of most businesses the first are legal [764] agreements and Nas which I exclusively [765] use pandadoc for if you're an agency [767] that's routinely sending over proposals [769] and you know doing that sort of like [771] high legal stuff you probably have like [773] very high ticket items you know I [775] probably would have put that over here [776] after instantly for you uh because you [778] know you have to send the emails [781] communicate with the prospect maybe jump [782] on a call then send them agreement then [783] win it uh but in my case you know for [785] one second copy the content writing [786] company our average order value is a lot [788] lower a lot of the time people don't [789] really want an agreement they don't [790] really feel that they need one it's just [792] hey you know click here to sign up on [793] our website very simple and [794] straightforward um regardless pandadoc [796] is the best legal document platform that [800] I've found ever because it allows you to [803] extremely simply template out documents [805] and then you can automate those later on [807] with any platform you want where that [808] zap make.com which I'm going to get into [810] a second you could use code you can do [812] anything that you want um but because of [814] this you basically get like this [815] templated functionality where it's like [817] a one-click thing on your side of things [819] and then the customer gets this [820] beautiful guided experience with [821] whatever your branding is um and you [824] know uh they have like integrated [825] payments which are cool so you can like [827] automatically oneclick uh connect with [829] stripe and then before they finish [830] signing the agreement they have to pay [832] you it's just really cool this is an [834] example of one agreement that I sent uh [835] it's not actually for one second copy [837] this is for left click but I don't [838] really send proposals for one second [840] copy so um this is a quick example right [843] we have like a what you're getting page [845] as you see it's very beautiful it's very [847] minimalistic um they have a variety of [850] like super simple templates that make it [852] really really easy to just get up and [855] running um yeah and you know they have [857] like places to add your signature and [859] and stuff like that way better than docy [861] sign because of just how automatable it [862] is um I routinely send these [864] automatically using like a proposal flow [866] that I generated which I can link in the [867] video description if interested uh but [870] padoc is by far the best and I think [872] it's also one of the cheapest now um I [875] may be wrong but I didn't have the [876] wherewith all to look into the prices of [877] all these before I made this video so [879] yeah check that out uh regardless this [881] is definitely still the like I would pay [882] I think I pay something like uh $1,000 a [885] year like $1,200 a year for this I would [887] gladly pay five times that much money [889] that's what an impact it's made to my [891] business and last but not least we have [894] make.com which is just the glue that [896] holds literally everything in my [898] business together make.com is the like [903] project manager it's the bookkeeper it's [906] the [908] um you know sales administrator it's the [911] virtual assistant make.com does [914] everything in my business that I would [916] probably need like four or five other [918] people for and it allows me to save [920] those four or five people's salaries and [922] then give it to the remainder of the [924] team to bolster their productivity their [926] effectiveness uh and you know their [929] their incentive to continue working at [931] like a very high level for the growth of [932] the business so I do that in the form of [934] bonuses I do that in a variety of [936] different ways but having that extra [938] cash in the pocket means that you don't [940] really have to worry too much about [942] short-term debt obligations and you're [943] willing to you know invest in the future [945] and the growth of the company and I find [947] that right around the million dollar a [948] year mark that starts being important [950] before then you can usually get away [951] with is bootstrapping and that sort of [953]  but um yeah any who uh this is just [956] an example of one of the many flows that [958] I build and this one templates out new [960] content writing tasks as they come into [962] the queue we'll do things like [964] automatically create Google Drive [965] folders for new projects as they come in [967] which I showed you earlier we will [969] create Google Docs sometimes we use AI [971] to help template out portions of that [973] immediately we'll do um automatic like [976] project management stuff like adding [978] links and resources and stuff like that [980] to the clickup file we'll do uh [982] automatic time tracking and harvest [984] where we'll create projects link the [986] projects to the assignes that sort of [987] thing we'll also add uh stuff to our [990] dashboard data source which is just a [991] big Google sheet that we pull from using [994] Google data Studio which I didn't really [995] talk about here but it's not super [997] necessary we didn't really have this [998] until quite recently but regardless that [1000] lets us see at any point like how much [1001] money we' made that month um what the [1003] projections are for next month maybe [1005] some Milestones or kpis we need to hit [1007] that sort of thing so make.com is [1009] fantastic uh I use it on the front end I [1011] use it on the back end I use it [1012] basically everywhere um that you know we [1014] we we [1015] need okay and that is about it that's a [1019] quick little wrap up of all of the [1020] software platforms that I use on a daily [1022] basis in my $1 million year agency of [1025] course there are a couple of other ones [1026] but they're usually just like on and off [1028] like I might uh spend uh you know buy a [1031] software subscription to LinkedIn sales [1033] Navigator once every three or four [1034] months and then I'll use that for one [1036] month to compile a big list of leads to [1037] pump into instantly or something like [1039] that the vast majority of the time [1041] though these are sort of one-off [1042] expenses that you can conceptualize as [1044] just not really being integral with the [1046] day-to-day operations of the business [1048] but C [1049] uh instantly stripe clickup Harvest [1051] pandadoc and make are and if you're [1053] starting an agency in 2024 regardless of [1056] whatever kind of agency that you're [1057] operating I highly recommend that you at [1059] least try all of these tools it'll make [1061] a big difference okay thanks so much for [1064] watching this video please like comment [1065] subscribe and leave me any notes if you [1067] have any questions about how these [1068] platforms work or maybe some [1070] Alternatives as well I'd love to hear [1071] from you thanks so much have a great [1073] rest of the day bye-bye

Video: https://www.youtube.com/watch?v=MTkiN_8xJCE
Title: This Cold Email System Made Me +$100K Last Year
[0] what's going on guys in this video I'm [0] going to show you the exact step-by-step [2] method that I use to build an incredibly [5] profitable cold email Outreach system uh [7] I had like an internal cost of something [9] like $3,000 over the course of last year [11] and has generated me well over [13] $150,000 in Topline Revenue I haven't [15] had to do a scent or a lick of work I [18] should say after I did the initial setup [20] everything was completely 100% [21] streamlined all I had to do was get a [23] virtual assistant to help manage some of [24] the responses and voila this is the [28] cheapest uh and highest throughput and [30] most effective way to do the sorts of [33] cold Outreach that most people want to [34] do today and in this video I'm going to [35] walk you through everything from the [37] platforms that you need to know the um [40] way that the data flows so like how to [42] actually like turn a random lead on in [44] our case LinkedIn is going to be the [46] data source into like a line item in a [48] spreadsheet that we can then use [50] whatever the heck you want whether it's [51] AI or procedural tools to enrich and [54] then how to get that email into a cold [55] email platform and then I'll even go [57] into like how to write the copy for your [59] email I'll show you what's worked really [60] well for me um if you're watching this [63] video there's a fair chance you might [64] have actually gotten an email from me in [66] the last couple of years just because [67] I've been sending between 300 to 1,000 [70] every single day um and then yeah I'll [73] I'll even show you like a fully [74] automated way that you could [75] theoretically build this out where you [77] don't even have to do these steps all [78] you do is you just compile a list of [80] sales Navigator searches put them in a [82] spreadsheet and then just let the system [84] run for you so without further Ado let's [86] get into it uh this system is freaking [88] awesome and I love sharing it with [89] people [90] in order for the system to work we're [91] going to need a couple of different [93] platforms platform number one is we're [94] going to need linkedin.com [97] platform number two is we're going to [100] need phantombuster tocom this is a lead [103] scraping platform where we're basically [104] going to take all the leads that we [106] generated using LinkedIn sales Navigator [108] then we're going to pump them into [109] phantombuster and phantombuster is going [111] to be what allows us to like get that [113] CSV from there we're going to have a [115] giant spreadsheet that looks something [116] like this uh from that spreadsheet we're [118] then going to use an email validation [120] platform called drop contact which will [122] turn a giant spreadsheet into a list of [124] email addresses like this and then from [127] there what we're going to do is we're [128] going to put all of those emails into a [130] cold email platform I highly recommend [132] instantly it's fantastic it's by far the [135] most affordable system uh I send [137] something like 500ish emails a day at [140] capacity for literally $99 a month you [142] will never ever find anything that cheap [145] um while also maintaining high [146] deliverability and so on and so forth I [148] follow the founders on Twitter really [150] cool guy um but yeah that's more or less [152] the system in a nutshell so if I were to [155] go back in time to Mid 2021 or maybe mid [160] 2022 whenever I started doing cold [161] Outreach at scale like this um here's [164] what I would have done to just eliminate [166] all of the and all the headache [167] these are the exact platforms I would [169] have used and the exact flow that I [170] would have taken step one is you need to [173] set up a LinkedIn sales Navigator search [175] so if you have LinkedIn all you do is [178] you go over to oh linked.com that's [182] interesting uh all you do is you sign [184] into your LinkedIn and then you go up in [186] the top right hand corner to sales [187] Navigator and then what we need to do is [189] we need to create a list or a search the [192] way that you do that is all you do is [195] you um in my case I got a bunch of save [197] searches here [199] but I'm going to delete this and we're [201] just going to make one from [203] scratch all you do is you basically put [206] in the specifications of the role that [209] you are looking to sell [211] to and there are a couple of hacks that [213] make this so so much more effective like [215] most people will just I don't know type [216] in a keyword and then go but there are [218] like three or four hacks that if you use [219] them correctly will absolutely change uh [222] your LinkedIn lead scraping life so [225] first things first current company you [226] almost never need to use because you're [227] not really looking for people at a [228] certain company we're attempting to get [230] a giant list of just tons of people uh [233] so you know if we were to try and have [234] that be a specific company that' just be [236] very silly so we want to widen the net [239] company headcount I do use this but I'll [240] I'll talk about how I use it in a second [243] now you need to think about who you're [244] trying to sell to first and foremost so [246] I mean before we even get to the step we [248] sort of have to figure out our Persona [250] or our uh you know our target audience [253] and I wouldn't spend too much time on [254] this like I think many marketing firms [256] get this wrong because they'll spend [258] literally two months compiling a Persona [262] report before they even send an email or [264] do any sort of marketing and that's [266] silly what you want to do is spend 10 15 [269] minutes just thinking deeply about the [270] sorts of people that are likely to use [272] either your product or your service and [274] then get a rough idea for who that is [276] and then just go ahead and start sending [277] emails or getting in touch with them so [279] that you can let the data speak for [280] itself rather than making a bunch of [282] assumptions that limit your ability or [283] filter your your top of funnel and so [286] that's what we're going to do here I'm [288] going to make a search for my writing [291] business one second copy and in my head [294] I mean this is 1 second copy if you [296] haven't seen this before it's basically [298] like a Content writing Marketplace [300] but in my head like what sorts of [302] companies usually want content well [304] there are a few there's like Ser [306] software as a service companies that are [307] looking to Market their product there [309] are B2B tech companies that are looking [311] to Market their service or something uh [313] Financial technology companies um and [316] marketing agencies really marketing [318] agencies are and I know this because I [320] operate this business definitely the [321] biggest one and most the work at this [323] point for my companies inter agency but [325] that's because I just created like a an [327] agency search here and and the campaign [328] went so well [330] so uh what do we have to do first of all [333] let's do um let's set geography up so [337] let's do I'm always just going to the [338] United States because they have the most [341] money and uh most disposable income and [344] these are the sorts of businesses I like [345] to work with they're also kind of in my [346] time zone and that sort of thing next [349] thing is current job title now anytime [351] we're sending a cold email you need to [352] think hard about whether the person that [354] you're sending the cold email to can [355] actually make a decision and you know if [357] you're doing the cold email route or the [358] cold Outreach trout you need to know [360] that you are going to face some [361] opposition up front and so it's best not [363] to waste your time with anybody that's [365] not capable of just pulling the trigger [366] and just saying yes or know to you [368] immediately you don't really want to be [369] in that Gray Zone with like marketing [372] assistants or marketing Associates or [373] whatever um as they discuss whether or [376] not you're part of their budget or all [377] that you want to go straight to [379] either one of the directors or one of [380] the founders or one of the managers um [382] those people will be able to tell you [383] definitively like hey we can do this or [385] no off and so what do I do anytime [388] I'm looking for um a new cold email [390] campaign I will type in all of these [391] terms first [393] founder then [395] co-founder then associate founder then [399] partner then managing partner then [402] business [403] partner then uh I'll do [406] owner [408] then [411] co-owner and then principal owner and [414] then small business owner and then I'll [416] also do director of marketing so that's [419] exactly what I'm [420] doing let me just see if there's another [422] director here director of [425] marketing maybe we'll just do director [428] managing [429] director and maybe we'll also do [431] director of operations I usually do [433] something like that okay great so now we [434] have a list of people that can basically [436] just pull the trigger and say yes [438] or no pardon my French um now that [440] we have that we need to get into uh [443] function so what's their what's their [445] function what's the function of the [446] companies that these people are working [447] at well in my case it's almost always [450] marketing you can scroll through here [452] and just take a take a look there are [453] tons of different company types that you [456] can use um you know you'll notice that [459] these people a lot of the time are like [460] marketers at random companies that may [462] or may not actually need uh content [463] services but in my case you know I'm [465] lucky enough that we get to cast a [466] pretty wide net and so we could actually [468] work with the Augusta pickleball club we [470] could work with titanium 22 which is [472] like a digital marketing firm we could [473] work with all of these guys which is [475] great for [476] us okay you can also Define the personal [478] industry so the person um on LinkedIn [481] will always Define their own industry [482] just somewhere during like account sign [484] up or something like that um and so I [486] mean h let me see if agency is somewhere [488] in there no agency isn't maybe B2B no [491] B2B isn't so okay in that case I'm just [492] going to leave it as is you'll see it's [494] not a very exact [496] science and then what I'm going to do is [499] um what you always want to do when you [501] do this is you want to go to posted on [507] LinkedIn and go to to recent updates and [510] then click post it on LinkedIn the [511] reason why is because people that post [513] on LinkedIn are more likely to just be [514] available on email and these people are [516] more likely to get back to there are the [517] highest likelihood uh prospects to give [519] you a high reply rate right off the bat [521] and a high reply rate at least initially [522] is necessary for a very functional you [524] know High throughput email campaign okay [527] great so this is this is literally just [529] going to be my setup and we could do [530] like agency or something if we really [531] wanted to um and that'll just look for [534] the keyword agency so maybe I'm just [535] looking for agencies um but yeah you [538] know I'm sure what ever let's just roll [539] with that this person explicitly says [541] please do not message me about offshore [543] resources or Leen that's unfortunate uh [546] but any who um okay so what we're going [547] for here now and this is really the [549] final step before we can turn this into [550] a list that matters is we want this [552] results to be uh 2,500 or less reason [556] why is LinkedIn only allows you to [557] scrape 2500 leads you can't scrape any [559] more at a time and then your account [561] might also get banned activity wise and [562] that sort of thing so we want to make [564] sure that we can chop up this search [565] into searches that are all 2,500 uh [567] leads each so what I do to do this is I [570] I typically use company headcount and [572] then I'll just do combinations of these [573] until I get to the 2.5k mark so for [576] instance self-employed is 1K and 11 to [578] 50 is um 1.5k so you put them together [582] it'll be 2.5k plus results doesn't have [584] to be perfect remember we're casting a [586] widenet here but now that we have one [588] search that's 2.5k results we are [590] actually good to go so next step is you [592] have to copy over this URL then you have [596] to go over to Phantom Buster now Phantom [599] buers as I mentioned earlier is a [600] platform that allows you to scrape [602] extremely uh cost effectively and the [605] way that the billing works is uh they [606] use time so they have these little like [608] servers that are set up and then every [609] time you start scraping these servers [611] you know uh the clock starts running and [614] you don't really need to know too much [615] about how the the back end of that works [617] it's really not that complex or really [618] all that important or necessary um but [621] suffice to say that 20 hours is more [623] than enough to get probably like at [624] least 150,000 leads or something uh and [627] my my account is like a hour account so [631] I go over here to okay so actually let [633] me just do this correctly as if I were [635] you uh what I'll do is I'll use a new [637] Phantom and I'll go sales Navigator [639] search [641] export that's this one right [644] here and then all you need to do is just [646] paste in the URL of the search that we [648] compiled earlier okay we click [652] save down here it'll ask for your [654] LinkedIn sales Navigator session cookie [656] now in order for Phantom Buster to work [657] and to be able to access your LinkedIn [659] account you need to download a Chrome [662] extension and then you need to give that [664] Chrome extension access to your LinkedIn [667] so this is extremely self-explanatory [668] all you do is you you know since I've [670] already installed this it says remove [672] from Chrome for me but in my in your [674] case you would just go and You' click [675] install and then once you have that [676] extension it would uh just guide you [678] through like signing into your Phantom [679] Buster account and all this does is this [681] essentially allows you to like connect [683] your cookie which is cool and then once [684] you have your cookie ready you just [686] click connect to LinkedIn it'll actually [687] go and it'll just find your session [688] cookie for [690] you now next up you'll see they [693] recommend 2.5k results per working day [695] well that's great I just leave [696] everything at default 2.5k 2.5k and then [699] results file settings I will go in and I [702] will name my result file whatever this [703] search is so in this case I'll just [706] say decision makers [710] self-employed and 11 to 50 [713] agency uh United States posted on [716] LinkedIn so I'm just going to copy all [718] these I don't know if we actually can [719] use all of these characters uh that's a [722] pretty long name I don't know if that [723] file name is accessible we'll find out [725] pretty quick then click save and then [727] just leave it at launch manually for now [728] I'll show you how to do it automatically [730] later okay great now that we have this [732] all we need to do is just click launch [734] and what this is doing now is this is [735] logging onto your LinkedIn for you and [737] then it's going through basically this [739] whole list Page by Page by Page all the [741] way up to I think like 100 pages and [744] then it's copying all of the information [745] so the first name their position their [747] location their about [749] um you know if they have their email [750] address as part of their profile we'll [752] try and grab that as well although you [753] know most of the time we don't uh it'll [755] it'll just do [756] everything now I'm not actually going to [758] wait until this runs because as you'll [759] see this is going to take something like [761] I don't know 10 minutes or so uh what [763] I'm going to do is I'm just going to [764] show you what the end result would look [765] like if you were to actually go through [767] that process and here it is you end up [769] with a massive [771] spreadsheet that looks something like [773] this uh first is your profile URL so [776] you'll actually have a URL that allow [777] you to click through to their link Lin [779] profile if necessary their full name [781] first name last name company name their [783] title their Company ID company URL [785] regular company URL a big summary which [787] is like your LinkedIn sales pitch title [789] industry location yada yada Yad yada now [792] this is nice to have and you can build [794] out some pretty interesting flows with [795] this like you could theoretically build [796] out a flow where um you know in make.com [800] or zappy or something you would scrape [802] that page for their LinkedIn feed it [804] into artificial intelligence and then [806] have artificial intelligence provide [807] like a on line ice breaker then add that [810] to a cold email platform and then pitch [812] them with that on line Icebreaker that [813] seems super customized like you've done [815] your research you could do that but in [817] my case I found that like it really [819] barely freaking matters I've done all [822] sorts of Outreach at this point Under [823] the Sun and to be completely honest [825] first name last name company name is [827] basically all I need 99% of the time to [829] do really well and so that's going to be [831] those three are going to be the columns [832] that are important for us so now that [835] you have this big Google sheet with all [836] you know everybody's information and you [838] know pH Buster will provide you a way to [839] download that immediately after it's [841] done and you can see here I've like [843] separated my search into a bunch of [844] different like sub sheets uh based off [847] of the specific location uh we were um [851] chopping the set based off of company [853] headcount so self employed and then 11 [855] to 50 but in my case I did like Canada [857] British Columban [859] Alberta uh USA California Texas Florida [861] New York right I did a bunch of [863] different ways to chop it up but this is [864] for like a really old campaign I ran a [866] while ago as you see it's quite long but [868] any uh once you have this now we need to [870] pump this into a cold email platform [873] sorry a um contact enrichment platform [877] and my favorite one to use right now is [878] called drop contact uh it's made by a [880] French company when you're watching this [882] maybe that'll be different maybe drop [884] contact won't be the best one but it [885] integrates with make.com which is really [887] cool and it allows us to just do these [888] sorts of flows automatically um should [890] we need them the way that this works is [892] it does it does something called [894] nominative email enrichment what that [895] means is it grabs the first name like [897] Max the last name name perie and then [899] the company like my bizdev and then it [901] just like goes and Cycles through like [903] Maxim mybiz.com [906] maxim. P Maxim Pari right m.p Pari and [911] it just does that over and over and over [912] again and then sends like a quick [914] request to that mail address and then if [916] that mail address sends back a positive [918] request like it goes through uh then you [920] know the email is validated essentially [922] if not then the email isn't obviously [925] this only really works because most [926] companies have a very standardized way [928] of like you know making email accounts [930] most people usually like a nickname or [932] something um at whatever their company [934] name is and this tends to to do quite [936] well but it doesn't always work and I'm [938] willing to bet it you know it only works [940] about 40 50 60% of the time but anyway [943] uh what you do is because you know we're [945] not really looking for you know like [948] because we're doing at such a high [949] volume it doesn't really matter that we [950] only get 50 or 60% of these um it's okay [953] you know I'm willing to throw away the [954] other 40% what we do here is we would [957] grab our our giant sheet [959] and then we download [960] it as a comma separated [963] value then we go back here to [968] oops uh to drop contact and just drop it [971] anywhere on the screen and then it'll [972] say be patient we're you know it's [974] French so we upload your file please [976] don't close your window this can last a [979] bit longer since your follow is heavy um [981] but regardless what it's basically [982] saying is hey man uh you got a pretty [984] big file it's 2,500 lines just give us a [986] second to upload it and then after after [989] this whole thing which usually takes [990] about 30 seconds to a minute it'll ask [992] do you want to go through with this you [993] obviously just click yes and then uh [995] it'll start doing the the email [997] enrichment and that process takes maybe [1000] 15 20 minutes after that what it's going [1003] to do is it's going to give you a sheet [1004] that looks like this and so this is the [1006] money shot uh as you see we have most of [1009] if not all of the fields that we had [1010] previously but we also have a couple of [1011] new ones we have a column now called [1012] email and as you'll see not all of the [1015] emails are filled in but a little over [1016] 50% of them are [1019] and so what we do [1021] is yeah I'm just going to go oh sorry I [1024] only have view uh view only access to [1026] this because I'm sharing this from a [1027] different account so let me just make a [1029] copy really [1035] quick oh yeah this is huge so this is uh [1039] unsurprising that it's taking a while [1041] okay great and so what we're going to do [1042] is I'm just going to make a filter I'll [1043] filter out the blanks and then voila I [1045] literally have a sheet with nothing but [1047] high quality email addresses in this [1049] case we have uh [1051] 2246 emails first names last names [1054] titles all this stuff so this is gold [1057] essentially and if you're still buying [1059] leads from platforms um like Apollo I [1061] think is pretty good nowadays but if [1063] you're still buying leads from platforms [1065] like um I don't know like phonebook [1067] style leads like lead 411.com like those [1070] types of websites just never do it again [1073] because a lot of the time they're just [1074] going to take lists that people like me [1076] have developed like this and then [1078] they're just going to like add a bunch [1079] of email addresses that don't [1080] work just to thin the list out and make [1082] it a little bit bigger um the simplest [1084] and highest Roi way to do this is just [1086] to develop your own list it's also the [1088] cheapest Phantom Busters is like 50 [1089] bucks drop contact depending on the [1092] volume that you do is probably another [1093] 100 to 150 bucks a month um LinkedIn [1096] sales now it's like another 50 bucks or [1097] 60 bucks so basically you can do the [1099] equivalent of um probably like $5,000 [1102] with a website like lead finder for like [1104] $250 and 15 minutes of your time if you [1106] just you know use a flow like this but [1108] anywh who um great so now we have this [1110] big list of people what do we do with it [1111] well now we use our cold email platform [1114] which in my case is called instantly and [1115] the way that instantly works is you can [1117] connect as many mailboxes as you want to [1119] an account and I have so many mailboxes [1122] here as you can see um just by clicking [1124] add new and going through their little [1126] process and then from every one of those [1128] you can send anywhere from like I want [1129] to say 20 to maybe 40 emails a day um [1133] and then it'll just like cycle through [1134] and sort of load balance itself [1136] automatically to make sure that you're [1137] not ever running into to rate limit [1139] issues or your deliverability has never [1140] dropping like crazy they also have a [1142] little Health score column here that [1143] shows your email address and what like [1145] it's deliverability is and so you see [1147] like not all of mine are perfect my [1149] lowest looks like it's in their 70s now [1150] 78% so Nick could try left click [1153] probably not going to make it for much [1154] longer um but you know a bunch of them [1156] are also doing pretty well and these are [1158] these emails have all email addresses [1160] have sent like tens of thousands of [1161] emails at this point so consider that [1163] that's pretty good okay but you know why [1165] is that super relevant it's it's not [1167] what you need to do is you need to go to [1168] camp campaigns click add new and say [1171] test campaign Call It Whatever the heck [1173] you want and then you'll face this page [1175] here all you need to do now is you click [1176] add leads upload CSV I'm going to go [1179] over here and then [1182] download oh actually first thing I'm [1184] going to do [1186] is [1188] um let's only have [1191] blanks then let's delete all of [1196] these it's going to take a second so [1198] bear with [1199] me uh we're just going to delete any [1201] records that don't have email [1208] addresses and then I'm going to delete [1210] all of these [1213] rows we're deleting a lot of rows [1215] obviously so have to bear with it for a [1217] second and then we're going to go back [1219] to email and then we're going to select [1221] all again okay great so now we only have [1223] um we only have the records that have [1225] email addresses so what we're going to [1226] do there is download and then download [1227] as a CS feet we go and do a CSV for you [1230] and then all you do is you just drag and [1231] drop that drag and drop that scrap list [1233] in and now you can start assigning your [1235] variables so and instantly in really any [1237] cold email platform obviously the whole [1239] point is you want to customize these [1240] emails to make people think that they're [1242] getting something that was handwritten [1243] by you in your basement and uh where [1246] whereas in reality you know it was [1247] something that you just like pressed a [1248] button on and sent tens of thousands of [1250] people these um sorry my whoop thing is [1254] almost out of battery so I'm just [1255] charging it um but you know with [1258] instantly um you know you you can [1260] basically do however many variables you [1261] want they provide a bunch of default [1263] Fields like email first name last name [1265] company name but there's also custom [1266] variable so theoretically you could [1267] import every one of those fields in that [1269] giant spreadsheet that we have here you [1271] could take their profile URL if you [1273] wanted to for whatever reason we're not [1275] going to do that though to be completely [1276] honest I never really import any field [1278] except for first name last name company [1280] name email and then if there's um like a [1282] website or something I'll take that in [1283] as well and so this to me looks pretty [1285] good but this is where you can get into [1287] like the whole oh I'm going to customize [1288] the email with AI or whatever any uh [1291] then you click upload it's going to [1292] check for duplicates in your campaign [1294] and then it's going to say this will [1294] upload whatever C contacts your campaign [1296] are you sure I'll click [1299] upload and [1301] now well in a [1306] second we have uploaded [1308] 2,228 leads to our campaign and now we [1312] we basically have like the trigger [1314] freaking ready to go all we need to do [1316] is pull it and so last thing you to do [1318] obviously at this point is just like [1319] write your emails like what do you [1320] actually want to say to these people hey [1322] loser buy my [1324] product uh and then let's do variable [1327] let's do first [1328] name and let's do first name they use [1333] this double sort of Brack [1337] annotation okay great well if you were [1340] to write this your email campaign would [1341] probably not perform very well so how [1343] exactly do you write High converting [1344] email campaigns um I'll just show you [1347] what I've written before for mine I'll [1349] go to one of my old campaigns here for [1352] agencies this is a campaign that we ran [1354] for a couple of months back in the [1355] summer and as you see we ran through [1358] 4,240 people with a reply rate of 4% and [1361] so this took just uh well I actually did [1364] this over a very long period of time [1366] because I I was still new to how volume [1368] worked in this so I only ever sent out [1369] like 200 emails a day I weigh three or [1371] four steps in the sequence so really [1373] that's like 60 people a day or whatever [1376] but you can theoretically get through [1377] all of this in maybe I don't know 2 [1379] weeks or so if you wanted to um so we [1381] got a 4% reply rate on that so 171 [1383] people said something to us um and just [1386] from memory about a third of those were [1387] like hey this is interesting I'm [1388] interested about a third of them were [1390] like I don't know if this is something I [1391] really want to do right now and then the [1392] other third of them were just like [1393] off never talk to me again which is [1395] pretty standard what that basically [1396] means is you have um basically 50 [1399] positive replies that are interested in [1401] purchasing your product or 51 like [1402] qualified leads basically well maybe not [1404] 51 qualified leads 51 interested leads [1407] uh which maybe you can like you know [1409] prune to like 25 like actual interested [1412] and qualified leads and to do that over [1414] the course of two weeks right that's [1416] like uh I don't know a lead and a half a [1418] day almost two leads a day so not bad [1420] right and you can do all this for just a [1421] few hundred a month any Who Um this [1424] specific campaign did this approach I [1428] would say hi blank first name I found [1430] you on LinkedIn and I thought I'd reach [1431] out I'm a freelancer and I built a [1433] system for agencies that generates X [1434] sales appointments per month without [1436] spending a scent on ads in September [1438] here's a company that I helped get [1440] however many appointments in just shy of [1441] 30 days this is like your hey this is [1444] what I've done for other people part [1446] then down here is like your complete [1448] risk reversal there's no reason why you [1449] shouldn't say yes and then here's like [1450] your ask so this is a a tried and true [1454] sort of email template that I've used [1455] not just for this sort of business but [1456] for basically every business I mean I [1458] build these sorts of systems out um for [1460] money at this point and I use this [1462] system for all of my clients and things [1463] work extremely well um so basically you [1466] start off with some incidental like hey [1467] here's how found you here's why I'm in [1468] front of you right now then you talk [1470] about who you are and why you're [1472] valuable then you talk about hey here's [1474] what I did for somebody that's very [1475] similar to you then you do your pitch [1477] with risk reversal there are a couple [1479] little hacks that you can do like I [1481] pretended to forward a message from [1482] myself or from somebody else in my quote [1484] unquote company and then I use that to [1488] just make people think that I did a [1490] bunch of like background research on [1491] them when I really didn't um so you can [1493] get very sneaky you get very clever like [1494] a lot of Affiliates do stuff like this [1496] and I I basically instantly allows you [1498] to split test uh variants against each [1500] other and like yeah this this was just a [1502] winner so having that forward email [1505] thing just actually does really improve [1506] your your conversion [1508] right um but yeah and then with uh with [1511] the subject lines I don't ever really [1512] get fancy I usually just go first name [1514] have something for you first name [1515] whatever first name whatever um this I [1518] think I used because I was inspired [1520] after watching uh the instantly founder [1523] do some emails or maybe he sent me some [1525] so scaling ideas for you was like a very [1527] popular subject line that I saw them [1528] crushing it with so I just Ed that um my [1531] follow-ups are very simple they're just [1532] like hey man I sent you an email a few [1534] days ago here's what that email is about [1535] let me know if you're interested in this [1537] if not I'm going to go kill [1538] myself [1540] um yeah and then uh you know the third [1543] one's very similar it's just like hey [1544] man thought I'd be here for you in case [1546] you wanted to tell me to screw off one [1548] last time and and the campaign works [1550] pretty well so I mean in in our case for [1552] the campaign that we just made [1554] um I'm going to go back in and then I'm [1557] going going [1559] to go here and I'm going to copy this [1562] and then I'm going to go down to test [1565] campaign sequences [1569] paste and I'm just going to [1574] write you'll see I also included scent [1576] for my iPhone that tends to work pretty [1585] well I'll say uh Hey BL I found you on [1588] LinkedIn I'm a freelancer and you know [1591] this is for like a Content writing [1593] audience and I [1595] write High [1597] performing SEO posts for agencies that [1601] routinely generate greater than 10 leads [1605] per month without spending a scent on [1607] ads uh I don't actually have stats for [1610] this but if I did maybe it would be like [1611] in September I helped like tip halty get [1616] 249 users in just shy of 30 [1622] days and given that company name is [1626] similar I'm 100% sure I could do that I [1628] could do the same or better for you no [1633] risk and I'd even write you I don't know [1638] one free [1640] post to show you what I can do let's [1644] just do [1646] that [1648] is it [1649] worth a 15 maybe is this worth a [1653] 15minute call thanks for your time neck [1657] okay great so that's one uh and then you [1659] know I just use like some variation of [1673] that and then down here I'd probably say [1679] um I wouldn't say sorry for bothering [1680] you I probably do something [1683] like throwing a Hail Mary and then maybe [1686] I do like a [1689] uh oh man I don't actually know what a [1693] Hail Mary is this is [1695] uh this is interesting um Hail Mary [1698] Emoji is there an emoji for Hail [1701] Mary oh yeah that's cool oh never mind [1706] Virgin Mary okay cool let's do Virgin [1708] Mary Emoji emojis tend to work really [1711] well I uh don't have my like bookmark or [1714] whatever I don't have like [1720] a something you're [1723] explicitly not interested in just let me [1726] know and I'll quit emailing [1729] you thanks Nick [1735] okay okay great so so this is actually [1738] something like a campaign that I would [1743] [Music] [1746] use and uh if I were to run this [1748] campaign at scale with like a pretty [1750] good offer like hey I'm going to do you [1752] a completely free post and you know I [1754] helped a company do whatever super [1757] impressive thing uh we could probably [1759] get reply rates of like four or 5% um [1761] you know just given how many of these [1763] campaigns that have done at this point [1764] and if you think about it like let's say [1765] you are sending 400 or 500 emails a day [1768] uh that's you know let's say we send 25 [1770] days the month 25 time uh let's say [1774] we're doing let's just be conserved and [1775] so we're doing 300 leads a day so new [1777] leads a day uh 7,500 times like a 5% [1780] reply rate is 375 leads um over the [1782] course of those 25 days that's 15 leads [1786] a day uh if a third of them are [1788] interested a third of them tell you to [1789]  off and a third of them um are sort [1791] of like lukewarm and maybe you can pull [1793] them back like realistically you're [1794] actually making seven qualified leads a [1796] day uh so seven qualified leads a day [1799] for the equivalent of something like $10 [1802] 100% worth it regard you could be [1804] selling ice to esos or whatever would [1806] still makes sense okay great so anyway [1808] that's the whole system from start to [1810] finish um and the last thing I'm going [1812] to show you is a way in make.com that [1813] you can very quickly and easily automate [1815] this whole process that I just showed [1816] you um so if you're using make we got [1819] you know our little trigger here and [1820] then we have a module here that's going [1823] to respond uh make has a bunch of [1824] triggers for Phantom Buster and for drop [1826] contact so one's watch and output you [1829] could theoretically uh just set up some [1831] process that launches Phantom Buster um [1834] scrapes you know every so and so often [1836] just using a big list of spreadsheet uh [1838] sorry a spreadsheet with a big list of [1840] sales Navigator searches so you can [1842] imagine how let's say like compile I [1844] mean I literally did this so I have a [1846] big list of all these sales Navigator [1848] searches right here what you can do is [1849] you can actually like just draw from [1851] this so you could have like a Google [1852] sheet [1856] module [1858] and then you could get a row I don't [1860] know if it's get or maybe it's search [1862] yeah it's probably [1864] search so we'd search [1867] rows and we'd return you know I don't [1870] really have any here unfortunately but [1872] regardless you would search um you would [1875] search all the rows and then you would [1876] grab the result and then you'd iterate [1878] over it maybe once every like 15 or 20 [1880] minutes or however often you want to do [1881] it I mean with rate limiting you should [1883] probably spread it out so maybe you do [1884] like a thousand people every like 6 [1886] hours type of thing ially anyway that's [1888] your input into the system um and it's a [1890] big list of sales Navigator URLs and [1892] then what you do is you could do like [1894] launch a phantom and then you could [1896] launch basically on like clockwork every [1899] you know 4 hours or something like that [1901] uh you get you would get the Phantom ID [1903] by going all the way back up here and [1905] then going and selecting this I [1907] identificate or identifier right over [1909] here it's um after Phantoms and before [1912] console so that would be your Phantom ID [1914] so I would go over here paste that in [1916] and then go and then what you could do [1917] is you could have like another flow that [1920] other flow would start like this it [1921] would say watch an output okay and then [1925] uh this is like a trigger an acid [1927] trigger and so it'll trigger whenever [1928] that output is is done and then when [1930] this is done what it'll do is it'll [1932] allow you to download the result which [1935] is a big Json file with all of those [1938] leads that we just scraped and once we [1941] have those leads we could then batch [1943] enrich the context using um drop contact [1946] and so we would feed in all of the leads [1949] here and you'd probably have to do some [1950] data massaging because I think these [1951] guys expect it in like some array format [1954] whereas Phantom Buster outputs in Json [1956] format but regardless you could then [1958] just send an API call that allows you to [1960] batch enrich all these contacts and then [1962] what you could do is you could do um I [1964] don't think instantly is here oh yeah it [1966] is [1968] here so what you could do is then you [1970] could add a lead to a campaign using [1971] instantly automatically and just iterate [1973] over that as many times as you need um [1976] so in that way way you could [1977] theoretically maybe once every two or 3 [1979] months have a virtual assistant just [1981] compile a little list for you with a [1983] bunch of sales Navigator SE URLs add [1985] them into the system which might take [1987] you you know 5 seconds or might take [1988] your VA like 30 seconds and then it [1991] would just automatically be adding new [1993] leads to a campaign that's that's high [1994] performing just like clockwork [1996] constantly for you all the time and this [1998] is very similar to what we did at my [2000] company one second copy in order to [2002] scale our email Outreach and make it as [2004] successful as it was so yeah I hope that [2007] makes sense I understand that this is [2008] relatively esoteric subject matter but [2011] it also made me a ton of money and I [2012] figured that um you know I was looking [2014] for stuff to talk about today on camera [2016] and I figure that this is going to be a [2017] pretty good one uh I sell these sorts of [2019] systems anywhere from like $2,500 all [2022] the way up to about [2023] $8,000 uh and the system is extremely [2025] similar to what I just showed you with [2026] uh with this flow here where you will [2029] create some type of phantom Buster um [2032] scrape uh event and you would do that on [2035] some sort of regular basis and then you [2036] would [2037] use that as a trigger for the next flow [2040] which would download that upload it to [2042] drop contact download that and then [2043] upload it to instantly or another cold [2045] email platform um and so I you know I [2047] make a lot of money selling these I [2048] figure I might as well help you guys uh [2051] potentially sell those too or at least [2052] apply them to your own [2054] businesses anywh who if you are still [2056] with me at this point thanks so much for [2057] watching please like comment subscribe [2059] and I'll see you in the next video [2060] thanks

Video: https://www.youtube.com/watch?v=UVLeX600irk
Title: My $21K/m Proposal System in Make.com (Free Template)
[0] What's going on, guys? In this video, [1] I'm going to show you an extremely [2] simple uh three or fourstep Make.com [5] automation that I've used to build a [8] business, well, two businesses actually, [9] that do about 40 to $45,000 a month [12] combined just in profit. Um, it's a very [15] simple and extremely streamlined [16] Make.com system that allows you to send [18] a proposal before the end of the phone [20] call with the lead. And the reason why [22] that's so important is because when [24] you're selling high ticket stuff, you [25] need to have really nice proposals. [27] Well, maybe you don't need to, but it [29] certainly helps. And the vast majority [31] of people that do sell high ticket can [33] quickly get stuck in what I call [35] proposal hell, which is like when you're [37] spending your entire life just hunched [39] over a computer trying to design a [40] proposal instead of on the phone or on a [42] video with prospects trying to, you [44] know, sell your service. So, my whole [46] system avoids that. And what I'm going [47] to do is I'm going to split into two [49] parts. The first is I'm going to go over [50] the system. I'll go over the flow end to [52] end. I'll go over what you need. I'll [54] even go onto every platform and just [55] like show you everything. And then after [57] I'm actually going to build it out um [59] live and it should take maybe 10 minutes [61] or so. Uh but what I'm going to do is [63] build out a much simpler version and [64] then I'll just show you where you would [66] need to add in the more complex [67] functionality if you wanted to get [68] something like mine. Okay, great. [71] Without further ado, let's just dive [72] right into it. Let's get you guys going [74] on these high ROI um high leverage [77] proposals. So this is what the system [79] looks like from end to end. At the [80] beginning, we have a type form to catch [82] new discovery call form entries. That's [84] what I call the type form uh that that [86] is going to be responsible for [88] triggering the proposal. And basically [90] what I'll do is I will uh every time I [92] have a call I'll jump on type form which [94] I bookmarked right over here. Then I'll [96] go to my login a discovery call form and [97] then start. And then first I'll just put [99] in the client information like I did [101] here which takes like 10 seconds. I'll [103] then define an outcome because I want to [104] be able to log this over time which is [106] important. So am I sending a proposal? [107] Was this meeting not a fit? Was the [108] meeting a flake? I'll then paste in a [111] one-s sentence description of their [112] business. And this is important because [113] I'm using AI to generate large portions [115] of this proposal. So I need to provide [116] this as sort of context for the system. [118] So I just said uh it's a growth hacking [122] dev shop that specializes in high-end [124] technology clients. Uh I then very [127] quickly will write a problem statement. [129] And what a problem statement is if [131] you're unaware is it's simply what are [132] they suffering from and why is it a big [134] deal. It's basically a way to press [135] their pain points a little. And if you [138] imagine that I'm on the phone with you [139] right now and we're just having a [140] conversation and I'm like, "All right, [142] so why exactly is this a problem?" Like [144] why uh you know, or or maybe let's back [146] up a little bit. I'm like, "What exactly [148] is your problem? If you could summarize [149] this as succinctly as possible, what [152] would you say that your problem is?" [154] Magic question to ask during a sales [156] call. By the way, a lot of the time, um, [157] I will just verbatim write down what [159] they wrote right over here. Now, because [161] I'm using artificial intelligence, which [163] I'll get into later, I don't actually [164] need to format this or anything. I could [165] just do like bullet points. I could take [168] um really crappy notes like I don't have [170] to do anything fancy. Uh and that's one [172] of the reasons why I built my system the [173] way that I I have. I don't really like [176] um you know looking at a screen be like [178] could you please repeat your problem [180] verbatim? What was that? Right? I I want [182] it to be natural. I want it to be like [183] kind of flowy. And in order for that to [184] work I just need to be able to scribble [186] some quick bullet points of what their [187] issue is. But this is where I do it. And [189] then I ask for a solution statement. [191] Well I don't ask for it but I will [192] propose a solution statement. And while [194] I'm proposing it, I'll usually write it [195] down in bullet points. So maybe this is [197] an endto-end system in monday.com that [199] generates articles which a VA posts on [202] LinkedIn and YouTube and maybe some sort [205] of CRM that manages all of this or let's [208] do project management flow that manages [210] all this. I then ask for platforms and [213] services that I'll use during [214] development. And I mean I'm [216] knowledgeable enough at this point that [217] I just know all of this off the top of [218] my head. This problem might not make [220] sense, or rather this question might not [222] make sense for everybody that's watching [223] this video, but for me, it definitely [225] does. I just know, okay, they want this [226] system. Well, they're going to need [228] something to put the data in. They're [229] going to need a third party automation [230] platform. They're going to need a way to [231] send proposals, whatever. This is where [232] I'll put it in. Uh, I then get asked, [235] how long will the project take? How much [236] do I want to charge them? And a lot of [238] the time here, I'm basing this off of [240] prior projects that I've done, how much [241] I like the prospect, like do we get [243] along, do I think they're going to be a [244] pain in the ass? If so, I mean, they you [247] know, it's like u like a sales tax [249] essentially, which uh you know, is [252] something you can only really uh I guess [255] do if you've experienced how terrible [257] clients can ruin your life, but if you [259] anticipate that they're not going to be [260] the best, you know, I I factor that in [262] here. And then I ask myself if there are [264] any additional costs for platforms, [266] which are just for my own record keeping [267] really. And then I click submit. And so, [270] I mean, I was explaining this process to [272] you while we were watching this video [273] together, but um in reality, this takes [275] me maybe like 2 minutes or so. And that [277] 2 minutes is split up where like as the [279] call starts, I'll get all their [280] information, their first name, last [281] name, company name, email if I don't [283] already have it. Once I'm at that point, [285] um I'll then start scribbling some notes [288] about, you know, what I think their [289] problem is. When they give me more [290] information on their problem, I'll kind [292] of like make it a little more [293] fine-tuned. But the end result is [295] basically before the call finishes I [297] have something like a like a trigger [298] pointing at them where if I click a [299] button they're going to receive a very [301] high quality polished beautiful [302] proposal. And so you know you can [304] imagine how the system is pretty high [306] throughput and pretty high ROI in that [308] way. Um I'll show you what the proposal [311] is. Actually it's probably a good [315] idea. This is what it looks like. [317] Anything in yellow is AI generated. So [320] you know imagine that you're one of my [321] customers. We just had a phone call and [323] in it I wowed you and bedazzled you with [326] um all of my claims how my systems are [328] going to solve your problems. You [329] receive a uh proposal with like its own [332] title which is all AI generated has all [335] of the correct information over here. [337] You then have a problem sort of [339] statement and this is just a lead in. [341] This is how I frame the problem. And [343] then right down here where it says [344] client problem area, I will then use [346] artificial intelligence to generate a [348] very beautiful looking problem statement [350] based off of the gibberish that I jotted [352] down earlier. I then have a solution [353] statement which is similar. There's some [355] templated stuff and there's also like [356] some customized stuff. And then my [358] specific proposal uses a process [360] diagram. Now, if you're not selling high [362] ticket, you know, systems or high ticket [363] like consultancy, you're probably not [365] going to need this, but I just attach [366] this to every single one. I myself have [369] some social proof. Then I have a [371] timeline. My timeline is artificially [373] generated, which is pretty cool. Um, the [375] reason why I'm confident that this is a [377] good idea is because timelines are [378] almost entirely anyway, unless [380] you're working on big enterprise [381] projects that are over like [383] $500,000. And even then, I mean, how [385] many times have you heard things going [386] over budget or over schedule or [389] whatever, right? Basically every time. [391] Um, so as long as I just have something [392] down there that sounds authoritative and [394] that like rests the customer mind at [395] ease, um, you know, it's usually good [397] enough. And then I have a pricing page. [399] And the way that my pricing page works [400] is I will have an implementation fee up [402] here. And then I'll also reference [404] platform or software fees. And a lot of [406] the time they just need make.com, which [407] is like 30 or 40 bucks a month. Um, [409] depending on their volume and stuff, but [411] um, my specific pricing is a 50% upfront [415] deposit with a 50% afterwards. So, my [417] 50% upfront deposit is calculated using [420] PandaOC discount feature. Uh, and then [422] what I do is I link this to a payment [424] form. And that payment form will [426] actually pop up after they sign the [427] proposal. So, the second that they sign, [429] uh, not only have they signed the [430] proposal, but it's also an agreement, [433] which is down here. There's a whole [434] services agreement addendum. Um, so not [436] only have they signed a proposal, [438] they've also signed the agreement. And [439] then I will also have received money [440] before they close the page. And so the [442] whole point of proposal generation for [444] me is, as I mentioned earlier, some of [446] the lowest ROI time that I've ever spent [447] in my life in business is just hunched [449] over a computer trying to polish the [450] perfect proposal. Some of the highest [452] ROI time I spend is talking to cameras. [455] Um whether that's a prospect or video [457] like this. And so I try and frontload my [459] whole life and my schedule and my [461] lifestyle to just prioritize this as [462] much as humanly possible and then [464] minimize everything else. Um, and so [467] given that, I just try and whip these [468] proposals out as quickly and as [470] effectively as possible. And then I just [471] like allow, you know, somebody's [473] decision to rest on whether or not they [474] they like me, whether or not we had a [476] good call. And that to me is like the [477] the deal breaker, right? The game maker, [479] if that makes sense. So, um, by having [482] the payment done, by having the proposal [484] done, by having the agreement done, [485] essentially what I'm doing is I'm just [487] minimizing the hell out of the friction. [488] All they have to do is just like me on [490] the phone call and then everything else [491] is just, you know, let's get this thing [492] started. That's my specific pro process. [495] I will show you how to build out your [497] own and I will build out a simple one [498] for you in a minute. Um, but yeah, [501] that's what mine looks like. And then if [502] we go back to this flow, [504] uh, we then generate the proposal [506] section here using [508] AI. And I will feed in, uh, JSON here [512] with just some like, uh, past client [514] calls that I've had. And, you know, I'm [516] sort of training it using in context [517] learning three or four times, um, before [520] finally adding my own. And I'll parse [522] the JSON from that previous module. This [524] just allows me to turn it into something [526] that's like make.com, you know, [529] modifiable. Uh, and then I will do the [531] same thing with the milestones and the [533] timelines. Write four sophisticated [535] sounding milestones and associated [536] timelines for a project proposal. Use [538] the provided solution statement in a [539] rough time table in the following [540] format. This is sort of how I'll do it. [542] And then here's the magic where I [544] actually go through and I select one of [546] the proposal templates that I've created [547] in Panadoc. And then I actually go and I [548] make it. So yeah, I fill out all this [551] information with the client email, the [552] client company, the client first name, [554] what are the milestones that we just [555] generated, what's the problem, what's [556] the solution, right? What's all that [558] stuff? Uh, and then I'll even go as far [560] as adding in that price amount from [562] earlier and then applying that 50% [565] discount percentage that I mentioned. [566] And then what I do is I also send an [568] email after. So I will send this [569] proposal to the customer and then [570] immediately after I'll send another [571] email basically saying, "Hey, Peter, [573] thanks so much for the call. Uh, you [574] know, I want to just answer some quick [576] questions ahead of time that I usually [577] get when I send people these panadoc [578] proposals. After you sign, you can pay [580] immediately. The second that you pay, I [582] get a notification and I get started [583] within 24 hours. Here's X, Y, and Z, [586] yada yada. It's very, very streamlined [588] for the customer and it like elucidates [590] just how important the systems that I'm [592] going to build for them are. Um, so for [594] me, it's sort of like showing not [596] telling, which is obviously a big [598] important reason why my client retention [600] is so high. But for you, maybe you don't [601] need that email module. Maybe you know [603] you want to structure your somewhere [604] else or somehow [605] else. Okay, that's it. That's the system [608] for end to end. So, what I'll do now is [610] I'm going to actually go out and build a [612] simpler version of this that then you [613] can modify however the heck you want to [615] achieve a similar result. And so, we [617] need a couple things for this. One, we [618] need to set up a type form. And then [620] two, we need to set up a panadoc [622] template. Now, unfortunately, right [624] before this call, I recorded a whole [626] other freaking video and then the audio [628] wasn't recording. So hopefully this time [631] the audio is recording. Um, so I've [632] already built this out once, which will [634] make it a little bit faster. But in [635] Panadoc, if you go down here to template [637] galler, I think you have to be paying [639] for like the $50 a month plan or [640] something like that. If you go down to [642] proposal, uh, you can find just a bunch [644] of beautiful, very nice, sexy proposal [646] templates that you can then, you know, [647] take and then customize however you [649] want. Um, just tons as you see here. So [652] I'm just going to choose a new one cuz [653] that last one that I used is pretty [654] boring. I like this one. [657] And what we're going to do is we're [658] going to take that proposal and then I'm [660] just going to add a couple of custom [661] fields just to show you, you know, how [663] you can customize this if you really [664] wanted to. Okay, so this is the [666] marketing research proposal template. [668] It's a damn shame that they're using [669] Poppins, man. What a terrible font for [672] this. Any other font would look [675] better. Okay, great. So, let's just do [677] this. Let's say um what will do for [684] you right [687] now? Here's what you're suffering from. [691] And then let's do um sales. Let's call [694] this problem [699] statement. This is un let's and let's [702] go. This is [707] understandably this [710] understandably is affecting your bottom [713] line. To remedy this, here's what we're [717] going to do. And then I'm going to go [719] sales [721] uhsolution [723] statement. And then Okay, great. Yeah. [726] And then this is all So I'm [728] just going to remove all this [730] Goodbye Goodbye and [732] goodbye We don't need any of [734] you. And then let's just pretend that [738] the rest of this Okay, let's just like [740] remove the rest of this and then pretend [741] that this is like actual information [743] that's [744] important. Um, and then I'm just going [747] to delete a bunch of more [748] pages. And [750] then that looks nice. Let's just call [753] this $3,000. [755] Um, and then I'm going to delete this [757] terms and conditions page. And then [758] there'll just be an acceptance. Okay, [760] great. So this is like our wonderful [761] proposal that I created in like two [763] seconds. Uh it doesn't really make any [765] sense, but I think the part that you you [767] can understand would make sense is when [770] the customer or client receives this [771] during or immediately after a phone [773] call, they get, hey, here's what we'll [775] do for you. Here's a brief breakdown of [777] uh who we are. And then here's exactly [779] what you're suffering from paraphrased [781] um from basically your own words. This [783] is showing that we're listening. This is [785] showing that we can solve your problem. [786] And so I mean this alone might be enough [788] to secure a sale more than half the [790] time. Now we want the payment form to [792] pop up. So I'm going to click payment. [794] I'm going to assign the uh payer as the [797] client. I'm going to go down and I'm [799] just going to select the actual payment. [801] It's going to pull from this pricing [802] table here. Um you can also set a custom [805] amount. So if you just want to charge a [806] flat 5K for all these, you can. But I'm [808] just going to pull from pricing table [809] one. The cool thing is you can then um [812] you can customize the price on pricing [814] table one using uh make.com and type [817] form if you wanted to. So you can make [818] that this you can make this bill [820] basically dependent on what you put in [822] through type form like I did. Okay, [824] great. That looks good. Uh I'm just [825] going to call this marks research [827] template for video. And then voila, our [830] type form is [832] next. This is the previous flow that I [834] built out which is now completely [836] pointless and meaningless. So I'm going [837] to go here. delete all that [840]  I don't need any of that. And then [841] pretend that we're starting from scratch [843] again. So, how do you actually build [845] this out now? Oh, uh yeah, sorry. I need [847] to build out the type form. What am I [849] doing? Okay. Um so, head over to type [852] form, go to my forms, and then let's [854] just build out a new one even though I [856] built out that other one. And I'll just [857] call [858] this marketing research [862] proposal proposal form. Just call it [865] that. don't like the way that these [867] questions look. So, I'm going to delete [868] it. And then I'm going to change this [870] from multiple choice to a contact info. [872] I'll say what's the client's [875] information. And then first name is [877] going to be required. Last name going to [879] be required. Phone number not going to [880] be required. Email required. Company [882] required. All this stuff going to be [884] required. I want a sexy [888] theme. So, let's do let's do this. This [892] is [893] cool. I just love space stuff. Uh, okay, [896] great. So, what's the client's [897] information? What's another custom field [898] that we're going to add? And we're going [899] to add in a problem [900] statement, what's their problem? So, we [903] have what's the client's information? [904] What's their problem? And then, uh, what [906] I'm going to do here is just that [908] anybody that uses my form, [910] um, just so that anybody that uses my [912] form understands the context, I'm going [914] to [919] say your text goes here. Let's say your [922] problem statement goes here. And this is [924] just meant to uh make it clear what the [926] context is that they're putting in this [929] field. And here I'm going to duplicate [931] it. We'll go what's your [934] solution. Then I'm going to go down [942] here goes here. Okay, great. So that [945] should keep it quite simple and make it [947] so that you know you you understand [949] where your text is going. You understand [950] kind of the point of things. I'm going [952] to remove all these ugly endings and [953] we're just not going to worry about [954] that. And then [957] publish. Voila. We have a [960] form. Our beautiful form looks like [963] this. No We just go straight [964] to the questions, which I like. And now [967] that we have a Panda doc, and we also [970] have a type form, it's time to build out [971] the make flow. First things first, we're [974] going to want to catch that type form [976] response. So, I'm going to create one. [978] and I'll call it marketing research [980] proposal example for video. That's just [982] so that I know to delete this after. [984] We're going to hook it up to a form ID, [986] marketing research proposal form. That's [988] this right over [989] here. Going to save [992] that. We are then going to I'm going to [995] do my famous uh two-step type form [998] design pattern, which is where I add a [1000] sleep and after I I list the response. [1003] And you'll see why I do this in a sec. [1005] just a very quick and easy way to [1007] separate the origin of the [1008] data from the variables of that I use [1012] for that data. And it lets me test this [1014] super quick. We're going to select a [1016] limit of [1017] one. And what this is going to do, and [1020] this is only really going to work in [1021] situations where you don't have a form [1022] that's being filled out every two [1023] seconds. So, I mean, I don't really [1025] think there's any situation in which you [1026] would now that I think about it, but [1028] hypothetically, if 5 million people are [1029] using your form, you probably shouldn't [1031] just add like a flat sleep and then [1032] immediately list the responses on your [1034] type form uh in ascending order of time. [1037] But, uh that's what I do. Okay. Uh and [1039] then we're going to create a document [1041] using a template, which is this module [1043] here in [1046] Panadoc. And then we're going to go down [1049] to going to add uh we're let's just call [1052] this marketing research proposal [1054] 4. In terms of the template ID, we're [1058] going to call the panadoc proposal [1060] template from here. Uh the client email. [1064] Okay, it looks like the client email is [1065] inaccessible. So this is the module that [1067] we just set up called list responses. [1069] And so this is where I'm going to pull [1070] all the data from. This is just what I'm [1071] going to use to trigger the flow. I'm [1072] not going to pull data from here just in [1074] case I ever have to change this. So, uh, [1077] we can't get the client name or email [1080] address yet because we haven't run the [1082] form. And when type form has multi-step [1085] questions like this with three or four [1086] in a row, uh, you you can't do it until [1087] you run it at least once. It's sort of [1089] just like a particularity of type form. [1091] But I am going to put all of the sender [1095] information just that we have it. And [1098] then I'm going to click okay. And now [1100] you'll see the magic of having two steps [1102] to any type form flow. We just dragged [1104] the trigger onto here. And now all I [1107] have to do is fill this out once. So I'm [1108] going to say my name is Sally Anne. My [1111] email for some reason is Nick at [1113] leftclickol.ai. And then my company is [1115] Sally's Tomatoes. [1119] Um, [1123] your lead generation is extremely [1127] costly and [1130] currently only yielding one or two leads [1134] per month. This is a huge bottleneck for [1137] your business and [1138] something something we should fix. Uh, [1141] let's not do that. This is a huge [1142] bottleneck for your business and slowing [1144] growth. Let's do that. What's your [1146] solution? an end toend lead generation [1149] system using LinkedIn Sales [1154] Navigator. This will improve your [1157] bottom. This will improve your sales [1161] revenue [1162] tremendously and help you generate [1165] anywhere from 20 to 30 leads per [1169] month instead of two to three like you [1172] are now. I think I said two to three, [1174] right? Okay. one or two. Okay, great. [1178] So, we have everything ready. Uh, I'm [1180] just going to submit this first. We [1182] didn't put any information here at the [1184] end, so it just kind of goes off into [1185] the void. That's kind of ugly. But [1187] anyway, now that we've submitted that [1188] form, we can then use type form to list [1190] those responses. So, I'm going to cach [1192] that. Okay, we just caught a mappable [1194] answer. And now we have access to all of [1196] these fields, which is great. So, I'm [1199] going to go back and I'm going to fill [1200] these [1201] out. Client email address is going to be [1204] Sally N. There we go. nick at [1205] leftclick.a company Sally's Tomatoes [1208] client first name Sally client last name [1210] and sales problem [1213] statement sales solution [1216] statement and then now I'm going to send [1218] this document and I'll say proposal for [1220] Sally I'll say hi Sally thanks for the [1224] chat earlier here's a detailed proposal [1227] for Sally's tomatoes cheers [1231] neck and then I'm going to click [1235] Okay, save that. And then I'm going [1239] to Should I fill that out again? I don't [1242] know. No, I'm not going to fill it out [1244] again. But you can imagine how all you [1245] do at this point is you click run and [1247] then you fill out that form again and it [1248] goes all the way through and generates [1250] the proposal. Uh because I'm lazy, I'm [1252] just going to use the previous type form [1254] submission that I did and then I'm going [1255] to generate it and we're going to see [1256] what happens. So [1259] generated pandadoc was created. Now, I [1262] had sent equal true. And so, this [1264] message will be sent to my email inbox [1266] in a [1267] moment. I'm going to open that up and [1269] see what [1271] happens. Um, oh yeah, sorry, I didn't [1274] actually add uh Sally here. I should [1276] have done that, but anyway, should say [1278] marketing research proposal for [1280] Sally, which we can do if we just click [1284] that just for completeness sake. Uh, hi [1287] Sally, thanks for the chat. Here's a [1288] detailed proposal for Sally's tomatoes. [1290] Imagine how you can do this while you're [1291] on the call with a customer. That's why [1292] it's so high value. You can literally be [1294] like, "Hey, how's it going?" Just as uh [1296] just as just to show you how this system [1298] works. Let me send it to you right [1301] now. And then here's the customized [1304] statement. This is that sentence that we [1306] had earlier that sort of just like, you [1308] know, is us whipping our dick out. [1309] Here's what you're suffering [1311] from. This is affecting your bottom [1313] line. To remedy this, here's what we're [1314] going to do. We're going to build I [1316] should have said build, but anyway. [1319] Uh, and yeah, you know, you can imagine [1322] how this took, I don't know, five [1324] minutes. So, when you design your own [1326] high-quality proposal, you can customize [1328] the hell out of it way more than I did [1329] here. And you can use you can [1333] intelligently combine [1335] um templated sections with customized [1338] sections to provide the illusion that [1340] you customize the entire thing even [1341] though you only customize an extremely [1343] small part of it while you were on the [1344] sales call with the customer. Anywh who [1347] in terms of what happens here uh I [1349] click and then I click I click [1356] finish and after I click finish I have a [1358] chance to [1360] pay. Oh sorry uh I need to sign it on my [1363] end any uh what would happen is I would [1365] then sign it on my end or whoever would [1367] sign it on their end. Usually I don't [1369] even do this. Usually I just paste in a [1371] picture of my [1372] signature. So I'll just automatically [1374] sign it every time it gets sent out. But [1376] uh after that uh Sally Anne in this [1378] hypothetical example uh she sounds very [1380] attractive would get a uh a payment form [1383] and then from there she'd be able to [1385] kind of take it to the next step. Okay. [1388] So once you built out this flow, a [1390] natural question is well how do I make [1391] it more like yours? Uh where you know [1393] you use artificial intelligence to I [1396] don't know just add a bunch of really [1397] cool functionality. Well, it's as simple [1399] as adding a few OpenAI [1404] endpoints. I would create a completion [1407] and what I'd do is I would catch the [1409] type form and then I would drag and drop [1411] this puppy somewhere in the flow and [1413] then I would either use [1416] um preview. I mean, you know, by the [1419] time you're watching this video, this [1420] instruction may be deprecated, but then [1422] I would go through and I'd say, you [1424] know, based off of this information, [1426] based off their problem statement, write [1427] me some other stuff. And that way, [1429] you're sort of like multiplying the [1431] effectiveness of just like a few bullet [1433] points. Like, if you think about it, [1434] it's kind of like the way that a wheel [1435] works. A wheel multiplies uh the [1438] distance that you travel based off [1439] amount of force applied to an axle, [1441] right? or like uh an axle allows you to [1445] like or a pivot point allows you to [1447] press a little bit but then get like a [1448] big result. AI is kind of like that for [1450] your language. So if you write a few [1452] bullet points in the problem statement [1453] that I mentioned earlier, uh you can [1455] then use AI to generate like 30 [1456] different things based off those bullet [1458] points. You could use it to generate [1459] subsidiary information like context [1461] surrounding that problem. You could use [1462] it to generate like how much uh you know [1464] you think that this is currently [1465] impacting the market and why this is [1466] such a big deal. You can use this to [1468] generate a couple of other potential [1470] systems that you might be able to do for [1471] them that are similar but you know [1472] unrelated. Uh you can do so much with [1474] this but anyway what you do is you would [1477] um assign a prompt here which I can't [1480] fortunately do without it yelling at me [1483] and then you would use uh the JSON [1485] module to parse that. And so you'd [1488] simply go parse JSON. And what you do is [1491] you'd select uh choices message content. [1495] That would then parse this and make this [1497] usable. And then inside of the Panda [1500] doc, let's say you had another field and [1501] that field was called, I don't know, [1503] let's say client date was actually [1505] called uh, you know, context or [1508] something. You would then select [1511] that. Um, and then you'd call it like [1513] client whatever whatever you call the [1515] variable. [1517] Um, this is just a a notation that [1519] Integramat uses uh behind the scenes to [1522] allow you to reference stuff. So, it [1524] doesn't really exist right now, but you [1525] can imagine how if the variable was [1527] called client contacts that your model [1529] was outputting, you'd be able to access [1530] it. And then you can do whatever the [1532] heck else you want. You can like [1533] automatically create Google Drive [1534] folders for this stuff, you can, I don't [1536] know, use it to create like a PowerPoint [1538] slide deck and then send it over to them [1540] as well. Uh, really like the sky's is [1542] the limit and that's one of the reasons [1543] why I like automation so much. It just [1545] allows you to do something in five [1546] seconds and then turn that into the [1548] equivalent of like three hours of work. [1550] Uh it's incredibly impactful and it also [1552] just ensures that the time that you are [1553] spending is always on the thing that [1554] you're the best at and you can just let [1556] robots do do the rest. So yeah, I hope [1559] that makes sense. Um you now know how I [1563] make the money that I make using [1564] automatic proposal generation and you [1566] also know how to build that yourself. If [1567] you have any other questions or anything [1568] like that or you're just wondering how [1570] all this automatic proposal stuff um you [1573] know might be able to be applied for [1574] your business, just let me know. I'd be [1576] happy to either talk about it with you [1577] directly or maybe even record a video [1578] for you on it if uh if the demand is [1580] there. Otherwise, please like, comment, [1583] subscribe, and I will see you in the [1584] next video. Thanks so much. about.

Video: https://www.youtube.com/watch?v=wt9RTkIGNEQ
Title: I made $48,164 last month—here’s how (full breakdown)
[0] hey what's going on in this video I'm [1] going to show you how I made $48,600 [3] last month uh that's 48.1 164k profit [7] not revenue and I make that [8] disambiguation because a ton of people [10] on the internet love just jumping on and [11] saying I made a million dollars last [13] month and here's how and then uh because [15] of margins they only really make like [16] five or 10% of that or something so the [19] whole idea of this video and basically [20] every other one that I've recorded and [22] and I'm going to record this is to show [24] you guys like the realities behind [25] operating an internet business um the [27] highs the lows everything in between and [29] in this video what I'm going to do is go [30] through the two businesses that I own [32] that generate me about 20ish th000 a [34] month each um December the month where I [37] made $448,000 was certainly exceptional [39] in so far that I usually do not pay [41] myself that much money I usually don't [42] make that much money there were a couple [43] of key things that resulted in me paying [46] myself a little bit more on average it's [48] usually about 30k any who let's dive in [51] so I run two businesses the first is [53] called 1 second copy this is essentially [55] a productized Content Marketplace and [57] all that really means is you know in [59] instead of being like a traditional [61] agency where you know you'll sign up and [63] they'll try and Pitch you on some big [64] monthly package and you'll be assigned [66] an account manager that sort of thing a [68] productized agency just strips away [70] literally everything except for the [72] actual deliverable that you're getting [74] and then usually gives you like just a [76] very simple straightforward way to order [78] something um and then does it all in [81] like a completely automated fashion and [83] so what exactly do I mean by this well [85] in our case we're offering content [87] writing services and so if you think [88] about the way that a Content writing [89] agent he usually operates it's like you [91] know you sign up you have some type of [93] kickoff call uh you have some type of [95] SEO strategy like content road map you [97] have like all of this stuff around the [98] actual deliverable that you know your [100] agency supposedly produces which is the [102] content and so we don't have any of that [104] when you work with us you basically just [106] get a dashboard which looks something [108] like this this isn't actually accurate [109] unfortunately just because uh the dark [111] mode fix that we wanted to put into our [113] app just still we we just still [115] continuously have trouble with that [116] might be because I'm the sole developer [118] who knows um any who [120] uh you know it's like an app and you [121] have a little dashboard and then you can [123] like create a request for that using let [126] me just show you [129] actually this is the the light Mode app [131] as it is right now without those updates [133] um you can go down to order content and [135] then you can just like basically select [136] whatever you want um almost like you'd [138] select something like a SAS right and so [141] the product Eyes solution is basically [143] you pay a certain number of words up [144] front at the beginning of the month and [145] then you can just slice and dice those [146] however you want using this interface [148] but there's no account manager there's [150] no uh book a call with us to go over you [152] know your weekly progress update there's [154] none of that the only thing that we [155] offer is the content itself and it makes [157] it so so easy for our company to staff [160] because we don't need to hire like you [161] know one account manager for every three [163] clients we just hire like writers [165] basically writers and editors um and [168] then everything else is kind of handled [169] on the back end using automations so [171] this is what the pricing looks like this [173] is very much squarely what I would [174] consider like a commodity type of [175] service so you know how the vast [177] majority of people when you are you know [179] you know watching like motivational [180] YouTube they're like oh man you [182] know you got to make sure that you're [183] you compete in a market of one and that [185] you make your service completely [186] exceptional and so different from all [187] the other services that like it doesn't [188] matter what price you charge because [189] people are going to be willing to pay it [191] it's not that I don't disagree with that [192] but there is certainly a way to success [195] uh that doesn't follow that and that's [197] basically what what we at one second [199] copi have done could we make more money [201] if we tried to make it this [202] all-inclusive service probably but I [204] like the way that it is right now [205] because there's very little headache [207] there's very little upkeep I don't [208] really have to do anything in this [209] position anymore cuz of H to manager um [211] and basically yeah basically just a very [213] straightforward way of like getting [214] articles blogs or uh or ebook chapters [217] and that sort of deal so um that's what [220] the business is um how it operates on [222] the back end is pretty interesting we [224] have a clickup pipeline uh end to end [226] that I set up using What's called the [229] theory of constraints methodology the [231] theory of constraints methodology is [233] basically a project management Paradigm [235] developed by a guy called uh Eli Gold [238] rat and the way that this works is it's [240] and I talk about this all the time both [241] the clients on YouTube and just [243] everything so they're definitely better [245] summaries of how this process works but [247] basically the theory of constraints [249] visualizes your entire business as a [250] pipeline from end to end where there's [252] your uh raw Goods coming in at the [254] beginning of the pipeline and then [255] there's some transformation happening in [256] the middle and then there's the finished [258] high quality products coming out at the [259] end of the pipeline and you basically [261] make money uh based off the distance [263] between your like shitty raw good and [267] then the high quality product and like [268] that's that's where your arbitr es so in [270] the theory of constraints your whole [271] goal is to maximize the width of that [273] pipeline at every step if you notice [275] that there's a space in your pipeline [276] like let's say in a writing agency it [278] might be like the QA or the editing and [280] that that space is like constraining or [282] bottlenecking the rest of your flow um [283] all the theory of constraints is it's [285] just a systematic way of alleviating [286] that and then setting up your pipeline [288] in such a way that like every stage is [289] just moving along as constantly and as [291] high throughput as possible so that's [293] the background for how I set this up um [296] and the way that I built this out in [297] practicon is in clickup which is a [299] project management tool and essentially [301] we have like a variety of different ways [303] that you know we manage the content but [305] the big one is the content pipeline [306] where a new article will come into the [308] top of the queue and it'll jump into [310] awaiting assignment which is just this [311] flexible end to end q and then you know [314] it'll sort of be acknowledged it'll move [315] to assigned when it starts being worked [317] on it'll move to writing when it starts [318] being editing edited it'll move on to [320] editing and then you know there are a [321] few other stages here but generally [323] speaking they just continuously move [324] down the pipeline at every step and it's [326] fully self-managed I don't really have [327] to do anything which is quite nice the [329] writers are usually Adept enough at at [331] self-managing all of this stuff uh the [333] way that I hired the Freelancers was a [336] combination of upwork um indeed.com [339] which is pretty big um and then like [342] Facebook groups and stuff like that as [343] well and that's was pretty important and [344] then we also have a few uh kind of [346] executive assistants and administrative [348] people scattered all throughout the [349] world but primarily in the Philippines [351] which allows us to take advantage of [353] like Market Arbitrage so you know my [355] company doesn't have to [356] spend $40 or $50 an hour to get the [359] equivalent skill or talent that somebody [361] in the first world might charge just [362] because you know they have absolutely [363] egregious living expenses and that sort [365] of thing so yeah that's more or less the [367] business uh in a nutshell in terms of [369] how we actually do what we do and then [371] uh the last thing I wanted to cover was [373] how we get customers so at the very [375] beginning of this company the vast [377] majority of the customers that we got [378] were through platforms so that is like [381] fiber uh upwork uh crowd content tons of [385] these other like online writing [387] platforms that were essentially like gig [388] platforms where you have to fill out [389] some application and you have to like [391] show that like you're capable of you [392] know writing in a certain quality or [394] whatever uh before you can get in and [396] then once you're in you know you can [397] like browse proposals and that sort of [399] deal and that's that's pretty cool um [401] definitely got a really good start we [402] probably scaled well past $20,000 a [404] month just using platforms I'm not the [406] kind of guy that ever says no to money I [407] think a lot of other people on the [408] internet will always uh they'll talk [411] about how like you want to develop your [413] own um lead generation system that like [416] isn't dependent on any platform or isn't [417] dependent no nobody holds your balls [419] device essentially but I've always kind [421] of laughed at that like any platform or [423] any business in 2024 that's successful [425] utilizes some platforms you're just kind [427] of picking your battles like who do I [429] want to cut my balls firmly in their [431] hands and in my case we picked Fiverr we [434] picked upwork we picked a couple of [436] other platforms so that's how we got our [438] start we uh essentially like tried to [440] reverse engineer what made successful [442] freelance or agency operations on upor [444] possible and then we set up uh the [446] agency profile and you know just a bunch [449] of of infrastructure to accommodate that [451] and that worked really well and then [453] eventually we started growing so quickly [455] because of that that we had to put some [457] kind of slow down caps in place uh and [459] then I think that just made us like [460] really in demand remember this was [462] before GPT 4 before all these like super [465] Advanced AI writing platforms that made [466] it uh really easy to whip up your own [468] similar quality content so you sort of [470] needed a writer right and um yeah that [473] was pretty good and then after a certain [475] point we developed a bunch of email [477] systems um and they were all C email [479] systems where our offer was essentially [481] we will write you a free highquality [483] article that's a sample on anything [484] you're choosing you know we'll we'll [486] take care of it from end to end all you [488] have to do is respond to this email with [490] what you want the article to be about [491] and we'll do it because we know that [492] like we need to provide value upfront in [494] order to get a client and that's pretty [496] good I think just because the wording of [497] the email campaign and the transparency [499] and stuff like that and we managed like [501] a basically fully automated system for [502] that where uh they'd fill out a form [504] with the sample that they wanted and [506] then that would automatically go into [507] the queue that I showed you earlier and [508] then that queue would just like you know [509] a writer would be assigned to it when it [511] moved to ready for submission it would [512] automatically be sent via email back to [514] the client super straightforward [515] streamline process where we got the [517] internal cost of production that it [518] maybe like $8 or $9 and the value in [520] having an internal cost of production $8 [522] or $9 for acquisition is our lifetime [525] customer value at that point was [526] probably about $7 $800 so you know if we [528] send out three of those and then one of [530] them is like oh yeah this sounds great [532] I'd like to work with you then you can [533] imagine how that's an internal cost of [535] maybe like 25 to 30 bucks to acquire a [536] $700 plant um not account counting for [539] you know like the lead generation costs [540] and stuff like that which are usually [541] another $ 20 or $30 per person so yeah [545] like the acquisition amount was probably [546] like 4 or 5% per client which is pretty [548] sick uh and that enabled us to scale [550] very quickly now this business peaked at [552] about 90 something thousand uh earlier [555] on in the year I think like it was April [557] or May or something like that before [559] then at the beginning of the year we [560] were at about 60k and now we're hovering [562] around 50k um I'm attributing the growth [564] and then the fall specifically to um GPT [568] or chat GP kind of gaining a ton of [570] popularity and then you know companies [572] that otherwise would have hired us to [573] write all their SEO lisal stuff no [575] longer have to because they could just [576] use chat GPT to write something that's [578] like 70% of the way there and then [579] instead of needing like an agency to do [581] it or a product IED solution like ours [583] uh they can just use uh you know like [585] chat GPT and then have an in-house admin [587] or something you know fix it and bring [589] it up to [590] par so it's not the worst thing in the [592] world but that's where the company is [593] right now and I made about $220,000 from [595] that um those $20,000 in profit and then [598] we also had a couple of big uh big [600] clients that month that uh you know just [602] gave us significantly more content than [604] we usually got so that's what enabled me [605] to bump up for my average of 30k to uh [608] to 48 and then the other business that I [611] operate is sort of like a [613] consultancy it's a very interesting sort [615] of business and I used to have a partner [616] for it it was the same partner that I [617] started one second copy with that I no [619] longer work with on this business just [621] because we decided that we go our [622] separate ways no hard feelings or [624] anything uh really enjoy working with [625] them but the way that this business [627] works is it's essentially like at one [630] second copy I built a bunch of systems [632] that enabled me to make a lot of money [634] quickly and like get clients and then I [636] use those systems to get clients for my [638] service which is one second copy and [640] that was good what I realized is why [642] don't I just use the systems and then [644] sell the systems as a way to make money [646] for any business like you know isn't the [648] upside potential significantly higher [650] over there what if instead it's like a [652] very uh instead of content writing it's [653] a very high growth industry maybe [655] something like lead gen or uh you know [657] some info product business and and then [659] I just build a system that enables them [660] to go from 300K to like a mill well I'm [662] pretty sure if I were to take a [663] percentage of that 300K to a mill that's [666] $700,000 I'd make way more money than I [667] would with one second copy and so far it [670] appears to be true um this is [672] essentially like uh it's like uh [675] fractional operations consultancy I want [678] to say where I am the sole operator at [680] this moment in time yours truly and I [683] will essentially take a lot of the [684] systems that I developed for one second [685] copy and other businesses that I've [687] worked with in the past and then I'll [688] just like paste those into new [689] businesses apply a little bit of my [691] project management knowledge sort of as [692] a consultant and then uh grow and scale [695] the hell out of every business that I [697] work with and this is really this is [699] really what my heart is because I find [700] this so much more interesting than just [701] like iterating the same process over and [703] over and over again every business I [705] work with is usually quite different and [706] that enables uh just a very interesting [709] sort of work day I've worked with a [710] variety of businesses on this now from [712] like six figure smaller companies that [714] are just getting started that might have [715] some startup Capital to seven figure [717] companies uh which are probably the most [719] common to even eight figure companies to [721] develop systems that like shave 3 or 4% [723] off their margins so depending on [725] whatever place that they're in um you [727] know my value proposition sort of [729] changes and it's no longer like like if [731] you're very early on in your business [732] I'm usually pitching how I'm going to [734] help you make money up front if you're a [735] little later on in the business you guys [736] are at seven or eight figures I'm [737] usually pitching how like my operations [739] will improve your profitability and your [741] margins just because that's really where [742] the priority is um and I tried doing [745] this in a product bized way as well [746] where I would like charge somebody a [748] fixed amount of money $4,400 a month and [750] then offer some type of fixed service [751] and it doesn't really seem to be working [753] that well people like to have uh [755] Consultants on retainer I found and it [757] seems just quite difficult to pitch them [758] on a deliverable that I can consistently [760] provide every single month for [762] $4,400 so yeah it's not that that part's [765] not going the best um but my pricing [767] does seem to be relatively variable [768] relatively ad hoc and it's resulted in [770] me being able to make a ton of money now [772] since I'm the sole operator of this the [773] margins of this business are well over [775] 85% I have basically no software cost [777] the only cost that I have is the [779] acquisition of [780] customers and for this I followed a very [782] similar system to what I did for 1 [784] second copy which is why where when I [787] started I started predominantly on [789] upwork and then I gained a lot of [790] notoriety on upwork over the course of [792] three or four months and then uh you [794] know I started getting a bunch of [795] referrals and then those referrals from [796] there gave me a little bit of latitude [798] to explore alternative lead generation [799] strategies like email and now I have a [801] couple of email clients I have a couple [803] of upward clients and I have a bunch of [804] referral clients as well so that's how [806] that works um if you are interested in [809] learning about those upwork strategies [811] that I mentioned earlier uh I'm more [813] than happy to walk you through them in a [815] Future video just let me know I mean [817] like I have an entire Playbook and I [819] have a little bit of a following on [820] Twitter now uh and I think a lot of them [822] are just waiting for me to like drop my [823] big up work guide so maybe that'll be [825] motivation but um yeah I usually just [828] like record an extremely custom high [829] quality video for every single proposal [831] that I send takes like an hour or two [833] every single day to like get through [834] four or five but then at the end of it I [836] usually have like three of them say hey [838] I'd really like tock chat with you and [839] you know this is only really capable if [841] you're really good at what you do and [842] what you know you got to know your stuff [843] but I was just blessed that for the last [845] eight years I've basically just locked [846] myself in my basement uh in my pajamas [849] and just you know learned all about how [850] this stuff works so yeah I hope that [853] makes sense um where do I go from here I [855] would like to continue making large [857] amounts of money like this has been [858] great because I bought a lot of [860] financial flexibility for myself and I'm [863] not going to lie like everybody says [864] that money uh doesn't make you happy but [866] it sure as hell cannot not make you sad [870] I hope I said that right um I come from [872] a family that's historically like our [875] family was bankrupt for a large portion [877] of my childhood like in bankruptcy and [880] uh I think that just colored how I [882] viewed money growing up and to me to be [884] able to make $48,600 in one month like [887] that's more money than I probably made [889] the entire year in [891] 2020 um granted that was exceptional [893] because it was Co but maybe even like [895] 2021 as well uh so just having access to [899] that Capital has freed me up from [900] problems that I didn't really know that [902] I had and I would highly highly [903] recommend every man woman or child at [906] some point in their life try and like [908] give give their life like a couple of [910] years to like really try and push and [912] try and make a ton of money like it's [913] it's freaking amazing and it does change [914] the way that you view the world do I [916] think I'm going to maintain $48,000 a [918] month every single month no I don't [919] think so probably not for the next you [921] know six months or so I am working on a [922] bunch of lead generation strategies that [924] should assist me with this like this [925] YouTube channel for instance like my [927] Twitter um but I think after I peaked at [929] that 48k I just sort of realized hey [931] this is amazing I wonder if there's a [933] way that I could sustain this a little [934] more passively than just constantly [935] working my ass off every day and so I'm [937] going to take a backseat I'll probably [939] make between 20 to 30k over the course [940] of the next half year I'm try and [942] strategize and come up with like a [943] different way to break through that next [945] plateau and I think that a lot of [946] entrepreneurs do this they'll achieve [948] some success and they'll be like okay [949] but at what cost is there any way that I [952] can achieve the same level of success or [953] more with less cost then they usually [955] have to ease off the pedal a little bit [957] figure that out and then you know [959] re up or reack whatever business that [961] they're uh they're doing next so yeah [965] that's it in a nutshell we got one [966] second copy over here and then left [967] click if you guys got any questions [969] about how any of this stuff works I mean [970] I'm still very early on this YouTube [972] career I'm more than happy to like [974] literally uh invite youall to a sock [976] Channel or a Discord or something and [977] just walk you through exactly what each [979] of you guys needs to do if you're at a a [981] point in your business careers where I [983] think that I can help you um no cost I'm [985] more than happy to assist you uh yeah [988] that's more that's it have a great rest [989] of the day and hope you guys find Value [991] in this video oh don't forget to like [992] subscribe and do all that fun [993] bye-bye

Video: https://www.youtube.com/watch?v=P2Y_DVW1TSQ
Title: This Simple Make.com Automation Generates $20K/mo on Upwork
[0] what's going on guys in this video I'm [1] going to show you a very simple make.com [3] automation that I created four or five [6] months ago that's been generating well [8] over 15 to $20,000 every single month [11] like basically Clockwork and it's [13] incredibly simple um there are two [15] components to this system the first is [17] we have gp4 open AI which is filtering [22] and processing the jobs for me which [23] I'll show you in a sec and then we also [25] have air table which is where I'm [26] dumping all of the records into and [28] that's what that looks like and so in [30] the next few minutes I'm just going to [31] walk through exactly how I built this my [33] rationale for building it um and how it [35] actually like makes me the money that it [36] makes me so let's get into things first [39] things first um there is an RSS feed [43] module which you can use to connect to [46] upwork upwork [48] has um an RSS feed kind of feature that [52] allows Freelancers and people applying [54] to jobs like me to create very specific [57] job queries using Boolean connectors and [60] then just query the RSS feed like every [62] hour or two to see if there are jobs [64] that match those [65] specifications so I'm going to leave the [66] link in the video description feel free [68] to poke around and kind of learn more [69] about the way that RSS feeds work in [71] upwork but suffice to say it's just a [73] way to get away from the um upwork kind [76] of user uh interface and then kind of [78] you know do things that scale outside of [81] it and so you see here at the very top I [83] have a URL setup it's htps www.b.com AB [87] feed jobs RSS that's going of like the [90] the syntax and then question mark Q [92] equals and this is the query that we're [94] putting in and all I did was I put in [96] automate the purpose of this was to be [98] as broad as humanly possible for my [100] target category because um I'm doing the [103] filtering later on using AI so I you [106] know if you think about it logically it [107] makes sense to go as wide as humanly [108] possible on the front end so that top of [110] your funnel is really wide and then to [111] narrow it down uh using AI there's no [114] point to filter ahead of time here [116] because you know I've just I've just [117] been I've just sort of like um accepted [120] them going to use AI to do this [121] filtering I'm sorting based off recency [123] that just means that uh the most recent [125] jobs come first makes sense right [127] because people on upward typically just [128] hire within the first 24 hours if you're [130] there within the first 24 hours great if [132] you're there within the first two hours [133] even better um job type is both hourly [136] and then fixed budget and then I have [137] just a list of sort of like price ranges [139] here that I'm acceptable uh that I'm [141] accepting with a few um you know API [143] parameters and that sort of thing so [145] yeah I'm returning 200 items at a time [148] honestly it's normally like 10 or 15 [150] because I query um as you see here once [152] every 90 minutes so I usually don't need [154] to go any more than that in terms of the [156] rest of this automation exactly how it [157] works first I'm parsing the description [159] uh that's just because the description [161] comes through an HTML so I use a parse [163] description HTML to text module which [165] you can find right down here to turn uh [167] that HTML just into plain text and strip [169] away you know all that stuff the next [171] module is basically the secret sauce the [173] entire system and this is why uh it [175] works so exceedingly well there's a [177] module here that I've just called filter [178] job and it's this this module here if [180] you go to open Ai and then you go [183] to uh create a completion yeah there you [187] go create a creates a completion for the [188] provided prompt or chat so it's this one [191] here um and then you access I always [194] like to use the GPT 40613 endpoint [197] although you know you might be watching [198] this like a year from now in which case [200] I'm sure there's like plenty of other [202] endpoints maybe in GPT 5 who knows um [205] and so you know if you want to always be [207] using the most upto-date one then just [208] for model select uh gp4 instead of a [211] specific model number and then here's [213] the prompt that I've set up I have a [215] system prompt that says you're an [216] intelligent administrator that filters [218] jobs and next I have a user prompt that [220] basically just explains who I am and [222] what I do what sorts of jobs am I [223] looking for now I pitched myself as an [225] operations agency I mean really I'm sort [227] of like a oneman consultancy at the [229] moment but I just find it performs [230] better this way uh that builds out [232] Outreach systems CRM systems project [234] manag systems no code systems and [235] integration so just giving it some some [237] background context and then I'm giving [239] it some instructions below is a job [240] description filter it for relevance true [242] or false in Json some of the platforms [244] we use include and then I just gave it a [245] big list of platforms that I'm familiar [247] with if relevant write a short [249] introductory [251] Icebreaker this is important because it [253] saves me a ton of time applying to these [255] jobs and I'll show you what that means [257] in a minute then I say note API [259] Integrations are good since we can [260] develop them using no code we don't [261] develop full stack apps we don't use [263] Python telegram blah blah blah we don't [265] work on very tiny projects these are [267] basically just things that you would say [269] hey I'm not interested in this you know [270] Mark these as irrelevant and that's just [272] because all of the projects that I've [274] ever done on these platforms tend to [275] suck people just don't really understand [277] what's involved they charge way too much [278] money that sort of thing and then for [280] the Icebreaker or introduction component [283] I have some example client projects here [284] that I've worked on and I just use that [285] as sort of just like a you know draw [287] from this um when you're when you're [290] pitching now the next thing I do is I [292] just give it a bunch of examples gp4 and [294] other related language uh models tend to [296] perform really well after you give them [298] at least two or three examples of the [300] input that you'll be giving it and then [302] the desired output and so in this way [304] it's called like in context learning [305] you're basically like training it uh [307] just within one prompt window to you [310] know learn and kind of like assess your [312] preferences here so for instance this is [315] um me Ro user and then I just paste it [317] in an upwork job description exactly how [319] it comes from um the upwork RSS feed so [322] it learns the [323] formatting and then the way that I am uh [326] pushing this out is I have like an [327] assistant uh prompt next and then I [331] teach it basically what Json format I [333] want it to use so result in this case is [335] false reason this is about writing [337] nothing to do with systems and then [338] Icebreaker because it's false there's no [341] Icebreaker the reason to do it this way [344] and the reason to have it right a reason [345] is both because you want it to kind of [347] walk you through its thought process so [349] to speak um if you ever need to do any [350] debugging or logging uh it costs like an [353] exceedingly small amount of money to do [354] this just like a few extra cents uh well [357] probably like a portion of a scent or [358] something like that um and then I find [360] the performance is usually a little bit [361] higher if it has to like speak through [362] its own [363] rationale uh and then I just yeah I just [365] like rinse and repeat basically all I [366] did was I just ran the RSS feed once and [369] then I just looked at the jobs and I [370] manually categorized them and then yeah [372] I did this like four or five [374] times um this is an example of a job [376] that looks good to me air table expert [378] needed I do tons of work in air table if [379] you did not already guess by the fact [380] that this whole RSS feed system is built [382] in a table um this is what the output is [385] going to look like so result true reason [387] involves automating air table which [388] aligns their experience and systems no [390] code tools Icebreaker and then I have a [392] very particular uh sort of like approach [396] I like to take to applying to these jobs [397] I'll always say something like hey I'm [398] confident I'm the guy you need for this [401] and it's very putting my balls on the [403] table so to speak uh but I find it works [405] extremely well and then I'll always put [407] some like huge social proof sort of deal [410] so in this case I use air table to [411] manage a copyrighting company that is [413] around 800k a year we make heavy use of [415] interfaces and well that's actually more [417] now we make heavy use of interfaces and [420] some less known air table features I [421] also routinely build air table flows [423] databases Etc so um if you guys kind of [425] see where I'm going with this I'm using [427] it to build like a brief little [429] introductory Icebreaker that'll seem [430] very customized to the job specifics uh [433] that I can just use to paste into the [435] application window next is some more [438] examples more examples and I'm not going [439] to beat a dead horse but suffice to say [441] at the very end what I finally do is I [443] have one user prompt with the title and [445] then the description that I'm pulling [446] from the RSS feed I have a token count [449] 250 with like a pretty low temp because [450] I want it to be uh pretty consistent and [453] then yeah and then I'm off to the races [455] now the best way to work with gp4 or [458] just like any type of AI completion [459] models that arep putting in Json so [461] always just add a parse Json module [463] after so go down here and click parse [465] Json it's just connected hypothetically [467] the Json string that you're looking for [469] is under choices message content and you [471] can already see it here so all this pars [473] Json module is going to do is it's going [475] to turn result false into basically like [477] a make.com object like this reason [479] whatever result false Icebreaker yada [481] yada and that's just so that we can use [483] it later [483] on then uh I check to see if the job is [486] relevant if it is we can proceed uh if [489] so then we will get the budget of the [491] job using just a bunch of like um I [494] guess like true or false switch stuff so [496] if description contains the word hourly [498] range then it's probably an hourly range [499] job if it doesn't contain the word [501] hourly range then it's probably a fixed [502] price job if it's an hourly range job [504] then we're getting the split of a get of [507] a split the word description and divided [510] by you know or cut by this hourly range [512] thing I'm not going to go super deep [513] into that um because you know upwork [515] tends to change this every once in a [516] while and so sometimes I got to jump in [517] here every few months and then make make [519] a few edits uh and then just because of [522] the way that the like in my upwork RSS [526] feed I have a column called um like [529] budget and then I have another one [530] called like hourly range so just because [532] of the way that I've set my own up I [533] need a router here that cuts between [535] hourly and then Project based jobs and [538] then if it's an hourly job then I'll set [542] a payment model to equal to hourly I'll [543] set a budget Min budget Max all the [545] stuff here uh which basically just pulls [547] from fields in the RSS feed and at the [550] end of it I'll add an hourly job where [552] I'll get the title I'm removing the word [554] upwork just because there's no point to [556] including that upwork always appends the [559] word upwork to all their jobs the [560] description that we parsed earlier the [562] date posted introduction is an [564] icebreaker and uh the Icebreaker is what [566] we generated previously and then you'll [568] also see that I have a template here and [570] uh the template is just like a copy and [572] paste thing that's very long and very [574] exhaustive and my rationale behind this [576] on upwork is always the vast majority of [578] people are only going to read the first [579] paragraph and think ah this guy really [581] knows his stuff I got to work with him [583] but there are some people out there that [584] need just a little bit more context and [585] for the people that need a little bit [586] more context I'll always just like add a [588] giant like almost like a CV essay style [591] thing uh and so this is what my one of [593] my templates looks like I offer some [595] case studies and that sort of deal which [597] is pretty helpful um then I offer the [599] Job Link and then the Min budget Max [602] budget country skills whatever and I [603] click okay all right so that is the make [606] automation you'll see there are some [608] remnants of other systems that I've [610] built and other approaches this is still [612] very much a draft so just kept these [613] down here but ideally you would clean [614] this up a little more I'm going to save [616] my changes uh CU you know I made a [618] couple of tiny ones there and then I'll [620] go back to the suppork RSS feed and [622] here's what it looks like and how it [623] works we got the title in this column [627] the description in this column I've [629] added a status field equal to intake for [632] all new jobs that come in and this is [634] just so that I know which jobs I've [635] applied to which ones I haven't so [636] there's intake applied irrelevant no [637] longer available there's a button here [640] with a URL column and if I click this I [643] basically go directly to that upward [645] job uh then there's also space for a [647] loom video now I don't do loom video for [650] every application but there's some [651] applications out there that are very [652] very high value I'm talking like 15 20 [654] $30,000 in you know let's say a 3mon [656] period uh for jobs that I feel or in it [660] that are extremely high value what I'll [662] do is I'll actually jump on that page [665] I'll click that Loom button which I'm [666] not going to do now because it would [667] screw up my recording uh and then I will [669] just like explain who I am and what I do [672] and then when I'm done with that I will [673] paste in the video URL right here so [676] let's just say this is hypothetically [678] Loom URL I paste it in and then there's [680] a copiable message um column where all I [683] need to do is just copy it and then [685] paste it into the job description and [686] here's what it looks like Hi here's a [688] video I just order to walk you through [689] this and a few other systems I run for [691] seven figure companies then I just paste [693] the video in um so this copyable message [696] is basically like a formula field which [698] concatenates whatever my introduction is [701] uh the video URL and then the template [704] at the very end um and so this way it's [705] literally just like hey copy paste copy [708] paste if anybody has any additional [710] questions to um you know anything that [713] I've done or or whatnot or maybe they [715] just ask additional questions like the [717] upper question field I mean I'll I'll do [719] do the manually um but a lot of the time [721] I'll just like copy the loom video URL [722] in those cases and I'll just say hey you [724] know I'd love it if you just took a look [725] at this this is going to blow your mind [727] uh and I always just lead like extremely [728] extremely strong because I find that [730] that helps um okay great so to answer [734] some probable questions here if you've [736] made it this far what is the reason why [739] you do an approach like this as opposed [740] to just do it all in upwork well there [742] are a couple the first is that you get [744] to track everything upor is an awesome [746] platform but it does certainly lack a [747] few tracking features make it difficult [749] to know how many proposals have I sent [751] in the last little while how much money [752] have I gotten from these proposals um [754] What proportion of my searches are like [756] irrelevant or or whatnot um number two [759] on upwork itself their filtering process [761] is kind of it's like procedural it's [763] based off keywords and so you can't [765] actually get flexible like we can with [767] AI like because I use an AI filter for [770] instance um I can if a job has the word [773] air table in it you know if I'm doing [775] things procedurally and I try and like [777] look for a keyword like air table and [778] use that to add to the thing it'll [780] always just add that to my upwork RSS [782] feed right but if I use AI to do it AI [784] is flexible enough that it'll look at it [785] and and see the word air table and it'll [788] say h this job may have the word air [790] table in it but is it a project about [792] like Building Systems for air table it [794] might not be maybe it's just uh you know [796] like recipient needs to understand air [798] table but it's actually a job about [799] social media marketing or something that [801] happens extremely extremely commonly and [803] so upwork still uses these procedural [804] filters for the most part um by getting [806] your data into another platform like air [808] table we are capable of using artificial [810] intelligence to filter the jobs and then [812] just to give us a little bit of a [813] helping hand uh the other benefit is of [815] course we can uh proceduralized a lot of [818] the Icebreaker stuff so we can apply to [820] job significantly faster than if we were [821] just doing everything in upw workk uh [823] keep in mind that the vast majority of [824] people on upwork are going to be copy [825] and pasting applications and that sort [827] of thing um and you know competition [829] wise a little bit of customization [830] always goes a long way but I've [832] personally found this to be a really [833] good balance between just like high [835] volumes of applications and then uh [837] still maintaining like a reasonable [838] level of qu quality and then providing [840] the ability to record a loom video is [842] super important too because yeah like I [844] mean I I think the average value of a [847] lot of my upward contracts for [848] Automation and consultation operations [850] and stuff probably around uh like $2,000 [854] but every once in a while one will come [855] by that's like 15 grand or maybe it's [857] like a recurring relationship where now [858] I have like a bunch of clients that have [860] been paying me three four five $6,000 [862] for the last half year like the value of [864] that contract 36k if it even gives me a [866] 1% higher likelihood of getting it by [869] recording a quick little loom video that [870] takes me like literally two minutes then [872] I'm going to do it and this system [873] allows me just to do all of that while [875] also still maintaining um High Velocity [878] so yeah I hope that makes sense uh again [881] we got the air table here then we have [883] the upwork RSS jobs to air table um [886] system over here if anybody has any [887] questions about how this stuff works or [889] just wants to bounce some ideas off me [890] feel free to leave a comment down below [892] uh otherwise like subscribe do all that [894] fun stuff and I will catch you on the [896] next video thank you very much bye-bye

Video: https://www.youtube.com/watch?v=o88ol-J-ngA
Title: Build It Live: YouTube Video Page Rebuild in Tailwind CSS (Body)
[6] [Music] [25] what's going on everybody in this video [27] i want to show you how to build the [29] youtube video page [32] completely using tailwind css so this is [35] actually continuation of a previous [37] video that i did where i built out the [39] nav bar to relative success i want to [42] say [43] now that i have a little bit of distance [44] from it i think there are a couple [46] things that we should probably switch as [48] well as a few approaches that i use in [50] the first video with [51] tail and css that maybe weren't the best [53] or the most scalable [55] i run into an issue [57] where i will do something that i think [59] you know is good in the in the short [61] term that solves a problem that just [63] happens to come up that i can bat away [65] in about five seconds a good example [67] being [68] me creating custom classes down here in [71] next rather than me [73] doing them kind of the tailwind way and [75] then inevitably like within 20 minutes [78] the problem has come up again like five [79] times [80] and as a result if i just done it right [82] the first time i never would have had to [83] deal with any of the the fallout of that [86] issue and i'm sure a lot of programmers [87] understand where i come from with this [89] essentially it's always better to take [91] care of these problems from the get-go [93] assuming that you're going to be working [94] on this project for a long time and [96] assuming that this problem is going to [98] come up again because it usually does [101] if you build everything right from the [103] get-go rather than just try and knock [105] problems down as they come you're [107] usually guaranteed significantly more [110] efficient and faster development later [113] on it's something that i believe is [115] technically referred to as the [118] uh it's like the clean code tax or [120] something like that like when you don't [122] have clean code when you don't abide by [124] a lot of programming first principles [125] stuff like you know keep your code [127] highly modularized make sure it's nicely [129] commented stuff like that uh later on [131] down the line you know if anybody else [132] in your team is trying to work with that [134] or maybe six months go by and you have [135] to maintain the project you realize that [138] because of your poor work six months ago [140] now it's a freaking nightmare and it [142] takes significantly longer if you're [144] coding kind of just for yourself like i [145] am uh then this also means that not only [148] are you a lot less efficient but it [150] means you are going to be very angry at [152] past you when present you takes a look [154] at like this mangled spaghetti code so [158] the reason why i bring all this up is [159] because i was essentially just creating [161] and instantiating custom classes here [163] under style scoped rather than doing [165] them the tailwind way the tailwind way [167] is when you actually extend the theme to [169] include those colors so i'm going to be [171] doing that [173] right now the way that i usually do [175] because i'm a little bit lazy is i just [177] go to an old project [178] i've done many such projects where i had [180] to extend the tailwind [183] config [184] in the past and what i usually do is i [186] will just go on to one of those projects [189] check out their tailwind config.js [192] and then like copy over the extension [195] because you know it's like [197] it's like an object bundled within an [199] object bundled with an object or [200] something like that so in this case yeah [202] i've literally used this exact same a [204] gray color before i'll go to my tailwind [206] config.js go to extend go colors and [209] then gray and that'll give me access to [211] this bg gray uh from 100 all the way up [214] to a thousand [215] grand the color is a little bit [216] different and already dialed in the [217] color so i'm actually going to change [218] these so the bg gray 1000 here was one [221] six one six one six [223] the [224] 900 was 20 20 20. so let's see here [228] and then the 800 was 2 f2 of 2f2f [231] so this is going to mess up the i want [233] to say gradient a little bit but it's [235] not the end of the world we will give [236] that a save it's going to take a little [238] bit to reload there and then [241] i'm going to remove [244] these classes [246] and then resave [250] and if i refresh [255] needs to build this out a little bit [257] because it's messing with the tailwind [258] config.js essentially it has to like [262] re-initialize everything [265] i think that should be maybe good [270] let me [271] see if i take this out and save and then [273] refresh what we got [277] okay i'm just gonna rebuild this [281] these are fast enough that uh [283] usually doesn't mean too much of an [285] issue so what do we got here so far we [287] have the nav bar now bar is a little bit [288] pushed in and the youtube logo is a [290] little bit different we're not going to [291] worry too much about those minor changes [293] the icons of course are different [294] because we don't want to go and like [295] copy all of youtube's icons uh now that [297] we've done with like the navbar i guess [299] the next step for this desktop build [301] anyway i will do a mobile optimized [303] build in the future but youtube is kind [305] of separate in that way because they [306] actually forward you to a completely [308] different website like a mobile version [310] of their website rather than just have [311] everything mobile responsive from the [312] get go but anyway the next real step [315] is we need to build this two kind of [317] column grid structure so you see here [323] i'm willing to say that this is probably [324] okay so one two [326] three four five it's probably like a [328] five column grid and taylon has a bunch [330] of super easy simple classes [333] that allow you to set down a grid really [335] easily [336] so let me just get a little reoriented [338] here first i'm looking at this code if i [340] scroll all the way down here to this div [343] i make another div [344] let's give this a class of grid [347] for now i'm just going to give it a [348] class of grid calls five because i'm not [349] really worried about like mobile [351] optimizing or anything [352] and then i also want there to be a [353] little bit of a gap very tiny gap [355] nothing major but [357] let's call it a gap [359] buy [360] for now [363] and then underneath that [366] why don't i make another div [368] let's make the h32 the background to be [371] red 500 [372] and then why don't we also do with full [375] and then call span [377] four actually hold on so one yeah let's [380] do four here [382] so what this is going to do is [385] now that we've told tailwind that there [386] are five grid columns [388] and then you know there's a little bit [389] of a gap between uh you know the [391] different divs we're saying that the [394] child div is going to span four of those [396] columns [398] and usually it's pretty smart it kind of [400] knows uh you know what that might look [403] like [404] in terms of like the the grid layout it [406] knows that you know if the first div [409] takes four columns then the last div [411] needs to take one column that sort of [412] thing and that's one of the reasons why [414] a lot of people really like this oh and [416] geez i think i [417] oh geez i had built rather than dev my [419] bad i was wondering why that worked so [421] fast essentially what i did there is i [423] just rebuilt the entire project rather [424] than run development environment which [425] is why we don't see it updated so it's a [427] little weird [428] uh but yeah anyway so this is going to [430] hopefully give us a a grid with five [432] columns and uh this is going to span [434] four of them and then this is just going [436] to be this video section here and the [438] right hand side you know after we flesh [440] out the general div structure we can [442] worry about you know having [443] this little what i anticipate to be kind [445] of annoying [447] uh [448] you know little tab thing here there's [450] like a little bit of a gradient there [451] that cancels out the uh [453] the color kind of covers it this [456] would appear to be [458] you know there's a number of ways [459] they're probably just like flex and then [461] here you have like a [462] title uh you know the channel name [465] whatever that's flex aligned with a [466] little svg and then like another thing [468] that's flexline so yeah before we get [470] into all that um [473] before we get into all that uh [475] let's give this a go okay cool so we [477] have our thing now you'll notice that [479] this is pushed all the way up to the top [481] that's because this top nav bar is fixed [483] so just like on youtube this is actually [485] fixed to the top of the screen meaning [486] if we want to have this in the right [488] place [488] we got to do a couple things first i'm [490] just going to go max with screen excel [492] then i'm going to mx auto mxl just going [494] to bring everything back into the center [496] next i'm going to give this a little bit [499] of margin up at the top so i'm just [500] going to say like 48 [502] and i think 40 it might be a little much [503] actually let's do 36 yeah 36. [507] let's try this and hopefully it's going [508] to push it down a little bit and make a [510] little bit more reasonable yeah oh and [512] geez i used an mt but i really didn't i [514] really should use the padding because [515] the mt will actually push [517] everything down from the top which [518] includes like this background color div [521] i believe if i use padding top we're not [523] going to have that issue it'll be inside [525] of the dev yeah there you go okay cool [526] so as i mentioned 32 is a little much [528] let's go [529] 28 [532] and if i refresh this [534] and i go back here [536] yeah this is a little small we [538] definitely need this bigger [540] hell we might even be able to go with [542] all the way like just full width i'm [544] thinking that we probably yeah i [546] probably will do that [548] so instead of this let me try something [551] else there are several different widths [553] here there's a screen xl and then [555] there's also like 7xl and i think i'm [558] going to go [559] 7xl [561] and then give that a try [564] so fingers crossed this works [566] unfortunately it looks like my [567] development environment is being really [568] slow i [570] no clue what this is [571] happening but if we cop this over [575] here maybe it just has something to do [577] with my chrome build yeah [578] sometimes i glitch out it's usually [580] because i have a uh [582] i have a bunch of uh plug-ins stuff like [583] that so we'll just do all this stuff in [584] an incognito okay yeah so it's not [586] actually wide enough so here's what we [587] got to do let's delete this let's go [589] back here and then where it says [591] max with 7xl we'll actually just go max [594] with full [595] so i'll go with fall [599] and then this is going to pull it out a [601] fair amount [604] um [611] i'm adding a bunch of mx autos it's [613] usually my go to when my stuff just is [615] not aligned properly [618] but in this case [620] yeah why is this not aligned in the [621] middle [622] oh right right i'm doing four out of the [624] five columns that was silly uh okay cool [626] so what we're going to do is we're just [627] going to give this a little bit of px [629] so if i go back here [631] eyeballing it that's probably i don't [634] know like [636] 20 [638] something [639] let me just bring this [641] back onto [643] this that way i can just tab back and [645] forth really quickly [646] um [647] let's do px20 [650] and see what happens [653] okay cool it's actually gonna be a [655] little bit more let's do px32 [659] okay cool so notice how we're actually [660] getting really close here already looks [662] like uh hmm [664] there might be more of a gap or [666] oh i know what happened i think the way [667] that the column structure set out is [669] it's not actually perfectly [671] however long this is that's okay we can [673] actually just mirror this by adding an [674] mr and let's just do a margin right of [676] 16. [678] it's going to push this in [679] a little bit oh sorry i used a margin [681] again when i should have been using a [682] padding [684] so adding a little bit of a padding to [685] this [686] will [688] not actually [690] it's the width fault [693] yeah it could be [697] let me see let's do with four fifths [700] instead [702] now let's do with five sixth [706] the only issue with this is this yeah i [708] might solve the problem like in the [710] interim but it's not actually gonna [712] solve the problem [714] so i'm just gonna move ahead and [716] duplicate this [717] i'll make the call span one you don't [718] actually have to explicitly call this i [720] just do it because uh [722] i don't know i have ocd [725] we add another blue call and then you [727] know blue call looks pretty good i mean [729] the [730] calls are a little bit off [733] so here's what we can do uh we can see [735] what the total number of grid calls are [737] so i think you could do 12 total [739] uh we're going to try 12 and then [740] instead of just doing four fifths we're [742] going to go like [745] i don't know ten twelfths and then this [746] one's going to be like the other two [748] twelfths and let's see if this is a [749] little bit better [750] no that was worse we're gonna do [752] this [753] this is really like three quarters [755] so yeah that's actually much closer uh [757] so we don't actually do this we can just [758] go grid calls [761] four [762] and then this can be three and then this [763] can be one that we're not doubling up on [765] them [766] and yeah it's pretty close i don't wanna [768] say that it's all the way there [770] i wonder if i could do like a pl6 i [772] don't think it's going to let me yeah i [774] i'm assuming when you're inside of a [775] grid and you're pushing your width to [778] full uh [780] it doesn't allow you to kind of like [781] that okay but anyway yeah so this is a [782] very long drawn out way to get to a very [784] simple solution here [786] of what this layout would look like i'm [788] going to bump this pop [790] pt down from like 28 to 20. that looks [793] pretty reasonable [794] and then this px32 i'm going to go down [796] to px28 so hopefully it's going to widen [798] things up a little bit and it looks like [800] the gap is just a little bit bigger so [802] let's just go gap seven [804] yeah you go [806] okay actually this you know what this is [807] perfect what am i even talking about [808] this is exactly what the uh what the [810] actual thing looks like [811] cool so now i'm going to instead of like [814] actually have the poll uh [816] like i'm not going to actually include a [818] video here i'm just going to include a [820] picture [821] so inside of this i'm going to do an [823] image [825] and we're going to get the image from [829] let me just see the aspect ratio of this [832] i think [835] i'm just going to take a little [837] screenshot here [840] open up paint because i like cheating [843] uh paste this in and it'll tell me it's [845] like 1280 by 720 basically so i'm just [848] gonna get like a picture that's 1280 by [849] 720. [854] cool i like this one this one's kind of [856] sexy let's just roll with that okay and [858] i'm not even gonna like worry about [859] hosting it or anything i'm just gonna [862] link to the [863] link to like the google thing [865] okay great so now we added a picture [868] and you see when i added that image the [869] other image bugged out a little bit [870] that's perfectly fine don't worry about [872] that [873] and then image seems to fit these [874] dimensions pretty closely not perfectly [876] but uh yeah it's pretty good and because [878] of that um we don't actually need to [880] edit anything so i don't have to like [881] add an explicit width or height property [883] or something like that that should be [885] good [886] cool next up is [889] let me do a little bit of the stuff on [892] the right so the right is a little bit [893] different the right looks like it [896] let me see here uh [900] if i were to do you know what i like [902] grid a lot so i'm actually just gonna [903] roll with grid for everything [905] so i'm gonna go grid and i will do [909] my money is on grid calls 7 [912] and then another div here that's grid [915] sorry call span 4 [919] and then another div here that's call [922] span 3. [925] okay and then this call span 4 let's [927] just make a bg green 500 we're going to [929] remove the top level blue [932] and this one's going to be bleed g blue [933] 500 [936] so of the seven here we should divide [937] this into two yeah sorry and this is [940] actually supposed to be the opposite way [944] cool um [947] this might actually be eight now that [949] i'm thinking about it [951] this might be five let's see [953] yeah there you go that's actually [954] literally exactly what it is then we'll [956] go gap uh three i have to guess [960] it's gonna pop this open a little bit [962] yeah you know it's not perfect but it's [964] i want to say like 95 of the way there [966] and that is uh that's all we're going to [967] worry about for now remember we set [969] explicit height properties and [970] everything so i just forgot about that [971] actually i'm going to go and remove [973] these type properties this is h32 [978] uh i'm also getting rid of it and then [980] instead i'm just going to get like an [981] image like that and i'm going to make it [983] really tiny so i think all youtube [985] thumbnails at this point are 1280 by 720 [988] so i'm going to [991] uh again just fine [993] i don't know why i just started these [994] purple images i don't know purple's just [996] like a really big deal right now but [999] i'm going to [1001] just really quickly mock this up um [1006] yeah it looks like it's just an image so [1007] again image source [1010] just paste something in here [1018] and let's try to run out of batteries [1034] we're going to save this head on over to [1036] our build [1037] that looks pretty good it is a little [1038] bit smaller so why don't we just knock [1040] that gap down to like two [1044] a little cheap way to approximate that [1046] size yeah it looks pretty good and then [1048] next up in the other div what we have if [1050] i remove this green [1052] is we have a bunch of text so [1055] looks like the initial text is white [1056] let's just do an h3 [1063] let's just do [1064] all enemies [1067] all monsters [1069] and then here i'm gonna go class is [1071] equal to text white [1073] and then i'm pretty sure the font's [1075] medium in terms of their the boldness [1078] and then underneath that we have stokey [1080] moki [1081] so [1083] uh let's go [1084] uh sorry stokey moki [1087] and then underneath that we have another [1088] piece of text that's like the same thing [1091] so we can actually just uh i believe [1093] just wrap this in a span [1096] and then another span [1098] [Music] [1100] and then [1102] what is this 368 k [1105] fuse and then like a little dot and i'll [1108] deal with the dot later three years ago [1110] i'm wrapping these in a spam just [1111] because i want them to have the same [1114] uh [1115] kind of classes and i don't want to have [1116] to repeat myself so this looks like it's [1120] honestly also text white but i believe [1122] youtube's using like some pretty low [1123] opacity for this stuff [1125] so we're just going to roll with this go [1126] back and then see what it looks like [1132] okay this is looking [1134] it's definitely text uh blue is still [1136] back so i'm gonna remove this blue [1139] right off the bat here uh i'm pretty [1141] sure youtube has squeezed together all [1143] of its text just a little [1145] so i'm actually just gonna [1146] again cheat go way up here and then just [1149] go tracking tight tracking tight just [1151] brings all the text together [1152] just a little bit there you go [1156] and it also looks like this is a little [1157] bit smaller and it doesn't look like the [1159] spans that i was looking at [1161] here go on new lines so you can just [1164] make this a block class [1166] by making it a block class it'll tell [1170] the universe that it wants to be on [1171] separate lines yeah there we go [1174] now both of these pieces of text are [1175] pretty small so i'm going to go text sm [1177] see if this is going to work [1180] cool and then honestly this looks pretty [1182] small too [1183] so we could just move [1186] these classes a little bit higher so [1188] we're not going to repeat them same [1189] thing with the text white actually [1193] um that looks good and then let's do [1196] leading [1196] [Music] [1198] i want to do like leading tight yeah [1199] leading tight let's do that that's going [1201] to bring in the leading on all the stuff [1204] and then we're going to go mt like 2 on [1207] this just to separate the text a little [1208] bit [1211] cool [1212] yeah i'd say that's like 95 of the way [1214] there obviously we're using different [1215] fonts right [1216] um let me see does tailwind have a text [1219] xs class built in [1222] it does but it might be too small [1227] i my eyes ain't what they used to be no [1228] actually you know what that'll be [1230] perfect so we're gonna go back here add [1231] this to this top [1234] level div i'm going to save that [1237] and then [1239] yeah [1241] it's not perfect the sizes are a little [1243] bit off but you know what we're just [1245] going to roll with it [1246] anyway and uh you know i think i think [1249] we did a pretty fine job [1251] now [1253] we also have this little three dot thing [1255] the three dot thing uh looks like it is [1258] i don't actually know how this would [1260] work there are multiple different ways [1261] you could do it i'm just going to add it [1264] to [1266] the hmm actually how am i going to do [1269] this [1271] so my thoughts here are you could just [1274] add this [1277] as like a flex [1278] uh yeah you could just make the title [1280] like flex [1281] and then [1282] add a little bit of space and then that [1284] space would hard push it to the right [1286] so let's try that [1289] and then encapsulate your [1292] title text inside of a span [1294] like this [1296] by encapsulating it in a span then when [1299] i go [1300] like svg so heroicons let's go like dots [1305] dots vertical [1307] and then paste this in [1309] and then we're going to make this like [1311] really small and then text white as well [1314] so my thoughts are this is going to push [1316] the text over a little bit maybe like [1318] part of it onto another new line-ish and [1320] then oh okay cool [1322] uh it looks like it's a little bit high [1324] though [1326] so we're gonna try like item start [1330] justify [1332] between [1334] i don't really have high hopes for this [1337] yeah it looks like it's way too far off [1338] to the right honestly [1343] way too far off to the right so why [1345] would that be [1348] it would be that way probably because [1350] the [1350] div itself is a little bit smaller than [1353] mine mine looks like it just goes out a [1355] little bit further we can verify this if [1357] we [1359] go to this call span just go bg blue 200 [1362] so this is going to color it blue and [1363] then we can compare how far it is to [1366] this [1368] yeah honestly it looks pretty similar [1370] now thinking about it the problem might [1372] be just that like the text is a little [1373] bit bigger yeah their text is just like [1375] one smidgen bigger and because of that [1378] uh it pushes out a little bit more [1381] and that's why [1384] it looks a little bit different so what [1385] we can do is if we just like add a [1386] little bit of a right margin to this [1388] thing that should bring it in just a tad [1392] maybe even more up sorry i keep on using [1394] uh [1395] right margins i should be using right [1397] padding [1400] hmm [1402] nope i actually do want to use the right [1404] margin [1406] and then let's remove this blue as well [1419] interesting [1420] i wonder if we were to make him [1423] closer together and then remove the [1426] justify between so that is justify [1430] start [1431] so i want to like push them both to the [1432] left instead [1436] and remove this margin [1438] i wonder if that would help [1442] hmm yeah the problem is our layouts are [1445] just a little bit different between [1447] youtube and [1450] mine [1452] this is already evidenced by the fact [1453] that this gap is just a little bit [1455] smaller so i'm going to go back here and [1457] then change the gaps that it's six and [1459] then i'm also gonna remove this bg red [1461] because i totally forgot to do it [1464] okay so now this gap is the same cool uh [1466] it turns out the stokey moki text is [1468] bigger so [1469] i'm gonna go screw text ss man we're [1472] going text [1474] a nice [1476] and then [1477] you know i'm just going to you know [1479] where i said tracking type [1482] uh i'm actually going to go like [1484] tracking normal and then hopefully [1487] that'll like push out this text a little [1488] bit more [1490] it'll just look a little bit more [1491] reasonable yeah there you go that looks [1493] uh that looks more reasonable [1495] like the thing is there are tons of [1496] hacks you can do to push this over if [1498] you really wanted to um [1500] you could add like another div or [1502] something like that that's like really [1503] tiny [1504] uh you could [1507] i don't know you could do it you could [1508] do a bundle of things but i would [1510] my goal when i program and specifically [1512] want to do front-end development is to [1514] always make the code as [1516] simple as possible such that i don't [1519] have any like unnecessary elements or [1520] objects that can be screwed up [1522] later on if there are any changes to the [1525] dom maybe that i don't really fully [1526] understand or realize so i wanted to be [1528] as simple as humanly possible this is a [1530] good example of something that like you [1531] could easily fix you would just have to [1533] de-simplify a little bit and i don't [1534] really think it's worth it [1536] adding like a whole extra thing [1539] uh to essentially push it over like an [1541] inch or a millimeter [1542] [Music] [1545] yeah [1546] and like you see how [1549] the sizing [1550] as well isn't super responsive [1552] whereas youtube's [1554] uh is [1555] simply because of how they set their uh [1557] like they have a mobile website for this [1558] so you could go over to m dot and then [1560] oops [1562] m dot whatever [1563] youtube it would actually open up like [1565] the mobile version of the site [1567] well it only opens it up if you are [1569] actually on a uh [1573] on a mobile screen [1575] so let's make this really tiny and then [1577] give it a try [1579] yes you see how now it's like on mobile [1581] they have a little check at the very [1582] beginning anyway so yeah if you would [1583] like to stretch this out to desktop [1585] levels it would look really stupid and [1587] that's because they optimized two [1588] different websites one for mobile and [1590] then one for uh [1592] one not for mobile and it's a little bit [1595] odd [1597] not a lot of people do that these days [1599] with like the top level domain stuff [1601] uh sorry about top level domain the um [1605] subdomain stuff yeah [1608] okay cool so [1610] now that we have that [1613] and that's pretty good [1615] uh next up [1622] you know what i just realized [1623] i think if we go 11 [1626] make this [1628] five [1630] and then make this [1632] six [1633] sorry make that four and then make that [1634] set uh seven i think this will work [1636] better [1646] never mind [1647] forget that i said that okay [1649] so uh now the question is like obviously [1652] we want to have this layout with a crap [1653] ton so that's where a crap ton of uh you [1656] know [1657] youtube videos playing and stuff like [1658] that and that'd be really cool to do but [1660] i'm not going to do that all statically [1661] so i'm going to delve a little bit into [1663] next here rather than just do pure html [1665] css and tailwind uh all i'm going to do [1668] is i'll just have like a div and then v4 [1670] it v4 just iterates over that div and [1672] just multiplies it a bunch depending on [1673] you know what your object looks like [1675] and i'm going to be using some dynamic [1677] variables here [1679] to accomplish that so um here's what i'm [1682] gonna do first i'll go down here [1684] a little view primer for you [1687] you can make an object so in this case i [1690] will have videos [1692] and i actually want this to be a list [1694] so i'll make this a list [1696] inside of that list i will have a bunch [1698] of objects sorry array i believe in [1700] javascript they are termed arrays i will [1702] be [1704] uh good and we'll have several elements [1706] here so yeah actually that's what i [1708] wanted to do thank you collab we will [1710] have the title [1711] we'll have the author [1713] we will have the view [1718] yeah and then we'll have the date three [1720] years ago sure so you see how that just [1721] essentially copied it all down we'll [1723] also have the thumbnail [1724] url [1726] cool and then if i go back up here [1729] oops i'm going back down here actually [1731] this is the top level div what i want to [1733] be repeating [1735] is basically [1740] this [1741] here no this here [1744] hold up [1746] this here [1747] yeah this is what i'm repeating so i'm [1748] going to go v4 [1750] uh let me see item [1755] video [1756] of videos maybe in videos i i don't [1760] actually remember the key can just be [1762] video dot title [1764] uh right over here in source we're just [1766] going to make this [1768] a video dot uh what is this thumbnail [1773] this is going to be [1776] video.title [1778] this is going to be [1781] uh video dot author i believe [1784] yep [1785] this is going to be [1788] video dot views and then this is going [1792] to be video dot date okay cool so sanity [1795] check i'm just going to [1797] refresh that make sure that still works [1801] cool let's get rid of that nasty youtube [1802] thing cool sweet so now what we do is if [1805] we just copy this it will double that [1807] duplicate it such that we have two [1811] and that is not definitely not where i [1813] wanted to put that [1816] so i think [1819] something a little funky there i might [1820] have done this on a top level div as [1822] opposed to a non-top level div [1825] yeah i did i did this on the wrong one [1827] so [1829] oops [1831] i did that on [1832] what has call span one so i did i did [1834] that on this whole thing when i should [1836] have really just been doing it on a [1837] specific like [1839] sub thing [1840] so [1846] um [1850] now i'm just thinking about this um [1853] yeah i'm actually just going to like [1855] wrap this whole thing [1858] in a div [1861] like another div and then i'm just going [1863] to use this [1866] and then we're going to go like [1871] let me see here [1878] so this is the grid [1881] and then i want this object inside of [1884] that so that's this call span 3 here [1889] and then [1893] hold up [1898] oh yeah [1905] uh [1908] yes [1912] this is actually also going to be grid [1915] it's going to be oh hold on [1918] what what am i doing here [1923] oh shouldn't that work [1924] call spend one [1926] yeah man should totally work [1931] so clearly times like these i get [1932] confused as well i like to drop down [1934] like a big color div [1936] that div was not helpful in the [1938] slightest [1940] uh let's go over here instead [1944] oh i know it's not helpful it's because [1945] of this other thing that's pushing [1947] everything down [1948] you'll copy this [1950] delete it [1952] rebuild [1954] and then wherever i put that 200 i'm [1956] going to move it up and then do 500 now [1959] i can still see a text if there's any [1961] text there let me just figure out like [1963] what's what's going on here so yeah [1964] that's good sanity check done let's go [1967] down here [1972] also cool [1974] right [1976] uh so that's this whole thing yeah okay [1978] well that makes sense when i was [1979] multiplying it essentially i'm just [1980] multiplying this whole div i don't want [1981] to do that i want to i want to multiply [1983] the stuff inside so here's what i got to [1985] do i have to wrap everything inside of [1987] here in a div [1992] and i'm going to realign it [1994] so now that everything here is wrapped [1996] uh i can go like mt [1999] 1 and i'll also go grid [2001] grid calls 8 [2003] that'll make like a little bit of a gap [2005] as well so now every individual thing [2008] also has a uh [2017] a div [2018] i think [2020] okay call span one [2023] what is spanning one here man [2028] that is okay this is spanning three yeah [2031] and the other spanning five very good [2036] so i'm gonna [2037] copy this off and then [2040] i think that should be good honestly [2046] um [2048] that's definitely not good [2053] oh you know what i don't need this i [2054] don't think [2056] yeah i don't need this [2059] so this should actually [2061] become big now yep [2064] then i have this little empty one so [2068] this makes it look [2070] kind of weird and so i'm gonna go mb1 [2071] yeah there you go [2073] uh and then if i go back here [2078] and double this up [2080] now we should have two [2082] a little bit of padding between them [2083] yeah good i'm going to change the [2085] padding those instead of mb1 it's going [2086] to be like mb2 and then i'm gonna remove [2088] this and then go back to my reference [2093] uh yeah i would say it's like 1.5 [2095] realistically but [2098] who's counting right [2100] i am [2102] there you go cool so now i have like [2105] this replicable system [2107] where i can just add you know different [2108] images and stuff like that but [2111] for now [2112] because [2114] i am super basic i will just replicate [2117] this a bunch [2118] and we are going to have this huge [2120] column here with a bunch of videos [2122] so boom that looks [2124] really busy and honestly the stokey moki [2127] text a little bit big yeah i'm not a fan [2129] of that stokey hell i'm not a fan of all [2131] this text honestly i think i'm gonna [2133] make all of this text small [2136] like if i just go text sm on all of this [2139] no it looks like i already did [2141] just doesn't seem to help [2142] still too big [2144] you know this might be a good time for [2146] it might be a good time for me to just [2147] introduce a custom font honestly [2150] yeah i think i'm just going to introduce [2151] a custom font like [2153] does not need to be this [2156] annoying [2161] at all [2165] so [2170] let's do it [2171] cool so quick primer on how to get a [2173] custom font i've actually already [2175] created a video on this [2177] but there are a couple of moving parts [2179] that you need to have [2181] a couple of uh [2183] i'll say like non-distributions a couple [2185] of reposit a couple of packages that you [2187] need to have [2188] again i mean i do this so often that i [2191] just have all these boilerplates for [2192] them so i'm just going to go to my [2193] previous projects and then find the [2195] boilerplates for them and just copy them [2196] over [2197] kind of lame but [2199] you know clearly it works [2202] let me see what i have here [2207] so you gotta do a couple things you [2208] gotta download this package here called [2210] nux js [2211] google fonts [2213] so first i'm going to do is i'll go npm [2214] install and then i'll just paste that in [2216] there [2217] after that you actually need to add this [2218] to your build modules [2220] so i'm going to look up [2226] just ensure that it's nowhere else on [2228] this page no it's not i've got a next [2230] config.js [2232] i'll go to my build modules where it's [2233] post css eight [2235] and then i'll do that [2237] and i don't know why i doubled up on the [2238] quotes there [2240] if i remove them [2243] yeah it looks good to me [2245] uh we also need to like define our font [2248] and it's somewhere here uh let me just [2252] go google fonts [2256] oh sorry we have a font here inside of [2259] our [2260] font object inside of our next js [2263] called google font so i'm just going to [2264] like do that [2267] i'm going to use [2268] roboto it'll do [2270] no one's ever going to use 100 so let's [2272] do 300 let's do 500 and let's do 700. [2275] 300 will be like really basic uh 500 [2278] will be like kind of medium thick and [2279] then 700 will be juicy [2282] so looks like it finished the [2284] installation there exit this [2287] we're going to see our old powershell it [2288] just canceled out because we changed the [2290] next config.js there's another [2292] powershell on for some reason so i'm [2293] actually just going to exit this one [2295] and then i'll go npm run dev [2298] to hopefully fix that [2300] and now we have to wait for it to reload [2302] but essentially uh what this is going to [2304] do is it's going to go on to google [2306] that's what the package does [2308] steal one of their fonts which uh in our [2310] case was roboto on this other project [2313] you can see i chose inter and then [2315] whatever's in this array are the weights [2317] of the fonts that you want to take [2318] generally you need to minimize this to [2320] maximize the speed of your website [2322] um [2323] yeah there's really not much more to it [2325] than that uh we'll see if it plays nice [2327] i know [2328] tailwind css has had an update recently [2329] and maybe that'll screw with the way [2331] that like the fonts are [2333] uh used but uh whatever ends up [2335] happening i don't think it's that big of [2336] a deal [2337] you can also specify i believe in your [2339] tailwind config.js what font you want to [2341] use i don't normally do that because [2343] it's just like a pain [2346] yeah see i don't do it here i just do it [2348] uh as like a custom class and i think [2350] this is the one time when it actually [2351] makes sense use a custom class for the [2352] stuff i just do something like font [2354] display [2355] so if i were to go back to index [2358] scroll all the way down here [2360] and then go font display [2363] and then i'll just go font family [2366] roboto [2368] and then [2371] okay we'll go sans-serif [2374] and then if i go all the way up here and [2376] go font display [2378] cross your fingers that should work [2381] although it certainly has not before in [2383] the past [2398] hmm [2412] okay [2416] we're going to cancel this close this [2421] and then re-run this development [2424] environment it could be a bug in the [2427] in the package i certainly hope not [2429] that's super annoying [2432] bug with the package on in the package [2435] if it's verified and vetted and put on [2436] npm like 99 of the time it's uh it's [2438] fine but [2440] there are a number of cases where [2443] people will like [2445] maliciously infiltrate an npm package [2448] add something in there that i don't know [2450] might track your keystrokes or some crap [2451] like that [2452] and then because everything there is [2454] like super low level and you know it's [2456] incredibly heavily vetted but this has [2458] occurred on multiple occasions [2460] uh because you know so much of these [2462] packages are used in like massive [2464] infrastructural applications [2467] industrial level stuff that'll kind of [2469] find its way up [2471] so that's probably like the one [2472] situation in which npm packages are [2474] sometimes not so good and you know [2476] sometimes they just like don't work or [2477] dependency that they relied on is like [2479] weird not updated right or something [2481] like that [2483] it's kind of odd i don't know why code [2485] does not seem to be [2486] rebuilding this i'm going to try exiting [2489] code [2490] this does not happen very often but when [2492] it does happen [2494] usually your best goal is to simply [2496] turn it off and then on again [2499] i will go back to [2504] this appropriately named live stream [2506] builds [2515] let me just verify there's no yeah oh [2517] it's good [2519] i'll try npm run dabbing this one more [2521] time [2522] before i get a little fancy if this [2524] doesn't work and clearly has an issue [2526] with like the google fonts [2528] next configuration [2532] then i'm just going to do this custom so [2534] i'll just add a source tag with the font [2535] in it [2539] but debugging this cart is part of the [2540] fun of front-end development honestly [2543] happens super often uh i know in my [2545] experience i probably spend 20 actually [2548] writing the code and the other 80 [2551] looking at it and thinking like why [2552] doesn't this work [2554] and that's like the vast majority of my [2555] my job at this point [2558] yeah it looks like it's hanging so i'm [2559] just not going to worry about this [2560] anymore i'm going to remove [2563] go back here save try running it again [2566] we'll see if it ends up running fine [2567] then we know that that's the issue [2569] because it hanged at 43 last time too [2575] oh you know what it says that localhost [2577] is already in use weird i must not be [2579] closing my port correctly [2583] cool [2584] you just verify this thing's still [2586] working awesome [2590] um [2594] instead of this [2595] we are going to [2598] add a head [2602] and let's do [2606] i actually remember the exact uh [2610] tag for this so [2615] i think i can just go script right [2619] yeah i can [2624] oh sorry this isn't actually a script [2626] it's a link [2636] let me see if i can actually get [2637] collab to literally add the exact font [2640] that i want [2642] uh i don't know this is going to work [2643] material icons [2650] how about material icons man [2660] let's see what they say on the actual [2663] page [2672] cool [2673] oh oops i don't actually want to [2674] download that uh let's do 400 [2681] yeah no it just has an and display swap [2683] which the og doesn't have [2686] okay cool but honestly aside from that [2688] oh relp pre-connect [2690] oh yeah we gotta add a couple of uh relp [2693] reconnects here [2700] nope i want google analytics we want [2707] fonts.googleapi.com [2711] we also want a rel preconnect and then [2714] we want [2719] uh fonts [2721] static [2724] dot com and then we also want [2726] pre-connect [2728] uh sorry cross origin [2731] to be true okay cool cool so [2734] that was annoying [2735] let's just verify that's gonna work now [2736] okay cool so we have oh we are on a [2738] really weird port man i don't know why [2740] we are on that where to report [2744] oh um [2747] i think we fixed our font issue no [2751] yeah i'm pretty sure we're using the [2752] exact font that google is now huh [2758] yep [2759] that's cool [2766] so i'm going to go back up to the very [2768] top and then i'm going to make this a [2770] little bit tighter than tracking tight [2776] my eyes are starting to kill me [2779] that's one big issue that pops up when [2781] you're coding all the time holy crap [2783] does it just ruin your vision man [2789] um [2790] mantra build failed invalid shorthand [2792] property [2793] elf yeah geez [2796] rookie mistake [2799] i used an equal sign when it's an object [2801] you don't use equal signs and objects [2805] say that again i think i did like [2807] tracking normal yeah screw tracking [2810] normal man [2812] remove the tracking normal because [2814] there's nothing normal about our [2815] tracking [2816] uh okay that's too tight [2819] oops don't want to delete all that uh [2821] we're just gonna go back to track and [2822] tight okay cool so anyway that was a big [2824] pain but it taught me a couple things [2826] biggest thing that taught me was [2828] one tracking on google stuff if user [2830] exact font is not actually [2833] tighter it's tight approximately and all [2836] the font sizes are [2838] really freaking small man [2842] so i'm gonna go xs here and just make [2843] all these like super puny [2846] give this thing a little refresh and uh [2849] it's [2849] it's not [2851] it's not right [2853] yeah it's not right i'm gonna go [2855] wherever the stokey moki thing is just [2857] add a little bit more padding and then [2858] we're just going to move [2862] oh you know what [2864] actually it is sm i lied [2869] at least sm is much quote yeah there you [2871] go it's super close okay cool [2874] uh it's this bottom part that's not so [2877] this will be text ss cool [2885] okay cool cool cool that is yeah [2888] actually significantly closer now [2891] very nice [2893] very nice uh okay cool so now that we've [2895] done kind of thing on the sidebar i'm [2897] just going to go grab a bunch of random [2898] images and then plug them in here just [2900] to make this all look different and then [2901] i'm just going to generate a bunch of [2902] random text [2903] to make that look different as well so [2904] i'm just going to go like 1280 times [2906] 720. [2910] i'm gonna go open this one [2912] [Music] [2913] so let's open this as a new tab [2916] this [2918] is going to be open as a new tab [2920] this [2922] i don't know if i've just looked at a [2923] bunch of purple crap lately [2927] but [2928] man [2932] do i just seem to love my purple [2938] cool [2940] so [2940] i'm gonna make this [2942] image number two [2947] the things we do for nice mock-ups [2952] you have no idea [2955] how many times i have done these exact [2958] same exercise [2960] for a client mockup that i end up [2962] deleting [2963] after like [2966] two minutes [2968] the second that i received their [2969] feedback that things are good that's it [2975] so this is good however [2982] i wonder if there's more spacing [2984] honestly [2987] it's a little bit bigger [2989] so [2990] this isn't as smooth as uh [2998] so what is 3 8 real quick uh 37.5 i [3001] think [3002] right [3004] 0.375 times 12 what's that 4.5 [3011] so if i want to make this bigger then i [3012] lean towards five [3014] right and then this would be seven [3016] i believe [3019] either that or my math is horrific [3023] okay yep fixed it i'm awesome [3027] cool that's uh that's a lot better and [3029] then the spacing looks okay so we're [3031] gonna add a couple more images [3034] and i'm realizing now that by adding [3036] 1280 by 720 like we are adding a crap [3038] ton of space to this stuff like the [3043] thumbnails do not need to be 1280x720 at [3046] all because they're so small um i was [3048] just using this as a shorthand for the [3050] aspect ratio [3053] so that's unfortunate uh okay cool so [3055] now we're gonna go further down down [3057] down down down and let's wait see where [3059] it starts being the same that's right [3060] over here [3066] we'll do this is a video about science [3069] and atoms [3075] cool and then we're gonna save this and [3078] then [3083] that should populate yeah there you go [3085] cool so now we have like a realistic [3086] every single material is different [3088] and then hmm i want something that's [3091] easily copy pasteable is this copy [3092] pasteable [3094] i do this no i'll just do them all [3109] i'm just going to use collab to make [3110] myself [3113] a bunch of text here [3127] oh [3129] hold on [3132] interesting [3135] why [3151] interesting that collab stops working [3153] after you request a lot in a short [3156] success and [3159] collab codex stop working [3162] if you request a bunch of like prompts [3165] very quickly [3169] yeah wild [3175] cool [3175] so let's just edit a bunch of this [3179] and [3181] hmm okay well this revealed an obvious [3183] problem [3184] these are stacked up right next to each [3186] other we don't actually want that [3188] that's something you didn't really [3189] notice uh until [3193] you uh you know start doing more of [3195] these so [3196] anyway we're just going to pop it [3197] justify between that'll push them all [3199] over the right side cool [3201] and yeah you can see how if we continue [3203] scrolling down there's an issue big big [3205] reason for that is just because i'm [3206] pretty sure i have an h screen on [3208] something [3209] i do yeah so it's like capping [3212] everything at the size of the screen the [3214] height of the screen anyway [3216] so i remove that and refresh yeah we [3217] don't have that issue anymore it's just [3218] going to go all the way down which is [3220] nice okay cool now that we've done all [3221] that like really annoying stuff on the [3223] right i'm going to wrap up this video [3225] with just this section right underneath [3228] the uh video bar so where it says hunt [3230] showdown on showdown dear god what have [3232] i done like this title stuff [3234] now here's how uh i see this and here's [3236] kind of what i look at when i when i see [3238] a page like this [3240] we could of course just pop open like [3241] the search [3243] tool console [3244] uh [3245] search tool console we could of course [3246] just pop up the console let's see how [3248] they do it [3249] so this is you know you can do this if [3251] you want i kind of think this is [3252] cheating i'd rather like go through the [3253] exercise of [3254] figuring it all out on my own uh the [3256] reality is with any design you have [3257] multiple different ways to accomplish [3258] the same thing you could in this [3260] instance for example [3262] uh just stack like a block so a div and [3265] then just like a bunch of text so p tag [3268] then under that another div with or [3270] another uh like h2 tag or something like [3273] that for the title maybe an h1 tag if [3274] you wanted and then underneath that we [3276] could have like a big div and then that [3277] div could be [3279] justified between with two subdivs uh [3282] both items centered so this one would be [3284] on the left and then this one would be [3285] on the right and then this one on the [3286] right would contain like one two three [3288] four five you could do that [3290] alternatively you could also um [3293] separate this like 50 50. so you could [3295] have like a a two [3297] call grid [3299] where you know everything on the [3300] left-hand side here is just a bunch of [3301] blocks and then the right-hand side you [3303] have something that's like flex aligned [3305] to the end a flex call uh so it's like [3308] pushing all the way down to the bottom [3309] and then you use a bunch of like [3311] you know flex with like a maybe a space [3313] x1 or space x2 or something like that to [3315] like continually push these out and make [3317] them like nice and spaced out [3319] uh you could [3321] you could do this like really old school [3322] like tables and stuff so that the [3324] reality is there's a minimum million [3325] different ways you could do the exact [3327] same thing with uh with tailwind and [3329] that's one of the reasons why it's super [3330] cool as i mentioned previously i always [3332] like to default to what i consider to be [3333] like one of the simplest ways to do [3334] something and i always think that it's [3336] simple and i'll go back later and i'll [3338] be like geez what the hell was i doing [3339] here like this is so stupid and i'll [3340] usually end up like refactoring a fair [3342] amount of it but uh yeah you know off [3344] the first [3345] off my first kind of go i think that the [3347] simplest and probably most robust design [3349] for this would simply to be to have [3352] one two three divs [3355] uh we don't have to use flexbox or [3356] anything like that just arrange these [3357] three divs [3359] one these divs would both have like [3361] their width to set to auto so they would [3362] like be pretty small and then this would [3364] be a full width div that would [3365] essentially take up all the room of its [3367] parent container width-wise and inside [3370] that div we would have another two divs [3372] both that are justified between so that [3373] this stuff over here on the left gets [3375] pushed and that's where the right gets [3376] pushed first thought to me is that's [3379] probably the simplest way to do it so [3381] i'm going to do it that way [3384] if i go all the way back up let's see [3385] where were we previously [3388] one of the annoying things about all [3389] this is it can get pretty difficult [3392] to uh [3394] remember where you are okay so we're [3395] right here so [3397] our image [3398] was the last thing in this call [3401] and we can now work on the next step so [3405] i'm just going to have another div [3407] and this div is going to be width full [3412] inside of that div i'm going to have [3413] another three divs i'm gonna have one [3415] div here for the text [3418] another div here for the title [3421] and then alas div [3422] that will be with full [3425] flex justify between item center [3429] and that'll be where i put all of like [3431] the you know uh these little icons and [3434] stuff like that [3435] so start with the first div uh i'm gonna [3437] go class text blue [3440] let's do 500 [3443] and then i think the text is going to be [3445] small i don't know for sure yet i'm just [3448] going to copy all this [3450] pop that in [3451] save go back to my copy here [3456] let's reload that bad boy [3460] looks fine this is probably a little bit [3461] smaller than small it's probably xs [3464] just going to add like mt2 pop this down [3467] a little bit actually no empty let's do [3468] four pop this down a little bit so if we [3471] save this again [3473] open this up this is going to be pushed [3475] just a tad down [3479] that looks good to me [3483] like in reality the [3485] yeah in reality it's just about the same [3487] this padding is just a little [3492] it's not 28 it's probably 26 24. you [3495] know let's try 24. this is gonna make [3497] this a little bit bigger [3499] and then this is going to push that down [3500] a little bit and then yeah basically [3502] everything in life gets better [3505] cool uh so we're gonna push this down [3507] just a tiny bit more here let's do mt5 [3511] and then underneath that we're going to [3512] make the title of this so dear god what [3515] have i done oh no [3518] i didn't use flexbox correctly we'll go [3520] text white [3521] text uh let's do 2xl [3524] and then [3526] let me just save this see what this [3527] looks like to excel might be a little [3529] small we'll see [3532] yeah a little big i lied so we're gonna [3534] go text xl and then i'll do like an mt1 [3536] looks like there's a really tiny top [3538] margin on this super small [3543] you know what i lied actually again [3544] jesus i'm such a liar [3547] it no mt at all it's just stacked man i [3550] think it would look better if there was [3552] an mt honestly but [3554] i guess the uh designers over at youtube [3557] that get paid trillions of dollars do [3558] not care about that cool and then the [3560] next step is we need to add that other [3562] last div [3564] or rather we need to add two containers [3566] so two divs underneath [3570] uh [3571] geez not having auto correct or auto [3573] complete for this is super annoying [3577] and then we're going to yeah since these [3579] are justified between we don't need to [3580] do anything else they're also items [3581] centered so they're going to be like [3582] vertically aligned uh now we just need [3584] to make the text so this text is not [3587] small it's like text [3590] text actually sorry it's not xs probably [3592] text [3593] sm if i had to guess [3596] and it looks like it's the same thing as [3599] before it's probably white [3601] it's just opacity is set to like 70 or [3603] something like that [3605] and we're just going to copy over this [3606] view information stuff [3610] just like that [3615] and if we save this [3617] you see how the colors are yeah they're [3619] pretty similar [3621] uh looks like there is a margin top on [3623] this i will say margin top two [3628] oh and i realized i shouldn't be doing [3629] that on the child class i should be [3631] doing that on the [3633] whole div on top of that so [3636] let's add that to the whole top div here [3641] if we refresh that it'll be pushed down [3643] to the approximate correct location [3646] and now all we need to do is just add [3647] another div that has one two three four [3650] five [3651] yeah let's do six different things [3654] that's gonna be pretty easy to do [3656] so all i'm gonna do is just go flex [3659] uh actually i don't even need to do a [3661] justify between i'll just do spacex [3663] three [3664] and then i'm gonna just go item center [3667] and then [3668] you see how there are two components [3670] servicing one of these there is like the [3672] icon on the left and there's the text on [3673] the right so that tells me we have to do [3675] another like flexbox thing [3678] which is kind of annoying but it is what [3679] it is so [3680] uh [3683] yeah we need to do flex let's do spacex [3687] can do 1.5 [3689] i don't know if we can do 1.5 oh my [3691] goodness we can do 1.5 good lord adam [3693] thinks about everything [3696] thank you adam okay we're going to item [3698] center [3700] uh just to make that [3702] really nice and sexy [3704] and then cool looks like we are good i'm [3706] now going oh uh last thing i'll do is [3707] i'll just put text white because i know [3709] this parent container is going to have [3711] all white text we'll go thumb [3713] thumbs up baby [3715] oh hold on this is uh [3718] yeah cool [3720] pop that in there [3722] and then [3725] let's just go [3728] span and i'll go 73k [3732] save this thing and let's see what we [3734] got [3738] whoa almost perfect already wow i'm [3741] pretty sure we used almost the exact [3743] same thumbs up button how crazy is that [3745] it's a little bit smaller it's uh looks [3747] like five [3749] so we'll do that [3752] make that a tiny bit smaller [3754] minify you bastard yeah okay cool [3757] looks like a minified and it also looks [3759] like the text here [3761] is like text [3763] i'm going to try xs [3766] maybe [3767] text uh [3769] let's try small [3770] and then font semi-bold let's give this [3773] a go [3780] yeah it's not perfect [3783] i think the tracking's a little [3785] wider [3791] but [3793] whatever [3794] we'll roll with it i'm learning to let [3796] go in life [3797] you know [3798] just [3800] let go a little bit more [3804] like of the parachute [3807] okay cool so one two three four five six [3810] one two three four five six cool now [3812] that we have that uh thing that pops out [3814] to me right away is oh man we need to [3816] increase the [3819] space x on this thing we're going [3820] straight to the moon baby [3824] show me them diamond hands [3827] cool [3828] uh and now we can add the text the first [3830] is 73k the next was dislike [3834] next was share [3837] next was download [3840] the last was save [3843] and then this actually doesn't have [3846] anything other than an svg [3848] i'm gonna copy that and then i'm gonna [3850] go like a thumbs down [3852] go down to where it says dislike and [3854] just swap these [3858] and then if you remember i changed this [3859] to 4 [3862] so let me save this and see how this [3864] looks [3868] yeah right oops sick [3871] i made the thumb down button a little [3873] bit smaller than the thumb up on [3875] just never thumb down guys never thumb [3877] down it won't be an issue okay the share [3879] button i wonder if i just type share in [3880] here whether that's if uh arrow maybe [3885] yeah they don't really have the same [3886] thing that i'm looking for so why don't [3887] i just go share i'm just gonna use their [3888] share button so obviously the share [3890] button is gonna be like super different [3892] but [3893] screw it [3894] i actually really like this share button [3898] this type of design to me is just a lot [3899] more attractive than the stuff that's [3901] like weirdly asymmetrical well i guess [3903] this one's asymmetrical too what am i [3905] saying [3908] we'll use this download icon for [3910] download [3913] and i could be doing this so much faster [3915] too you could just lay down all of these [3917] and then just like control all them and [3919] then you could swap them all at the same [3920] time if you wanted to be really cool [3924] but uh i don't really want to be that [3925] cool okay and then the last one is just [3927] saves let's see if we can just save [3929] save save yeah there's the same thing [3933] so we're just going to copy this one [3934] over where it says save [3937] and then i'm going to go h5 h5 cool cool [3942] and then looks like they're just three [3944] dots again [3946] but these times they are horizontal dots [3949] so that's what is going to occupy our [3951] last div in this collection [3953] i'm going to make this h5 h5 because we [3955] have text white as the top level [3958] class this is all automatically going [3962] to work out except for that thumbs up [3965] icon emoji thingy cool cool cool yeah [3969] that looks uh looks pretty good so let [3971] me just [3972] if i scroll all the way to the top here [3976] kind of thumb back and forth between [3977] them [3979] i would say that's pretty good the last [3980] thing i'm going to do just for [3981] completeness sake [3983] is i'm going to add that line down at [3986] the bottom [3987] uh underneath this div so where's that [3989] top level dip this one right here we're [3991] gonna go border [3993] bottom i believe it's just border bottom [3995] border b yeah it's border b man [3998] border b and we're gonna border our [4000] white and i'll just go border opacity [4001] like 20 just for shits and gigs let's [4004] see how this looks we're probably also [4006] probably going to have to add a little [4007] bit of a padding on the bottom [4009] now that i think about it [4012] uh well apparently that just did not [4014] work at all [4016] decided uh [4019] side of it just does not want to show [4021] the border i guess [4022] the border is in uh not a very talkative [4024] mood right now [4027] so [4028] we're going to go pb5 and then border [4031] opacity let's do like 40 man [4038] it's even less it is 20. i just couldn't [4040] see it when i was 20. [4043] not after the [4046] accident you know these messages like [4049] what accident [4050] uh okay [4052] cool yeah that border looks good to me [4053] so honestly [4055] ask yourself if you were to stumble [4057] across this random web page and you had [4059] no idea that this is a rebuild and like [4061] you stared at it for just five seconds [4064] you'd probably think that this was like [4065] a one for one like youtube website right [4068] like you think that this was just [4069] youtube you wouldn't think hey some [4071] loser uh essentially his mom's basement [4074] decided to rebuild the youtube you know [4076] interface from scratch right [4078] uh and turns out that he did so i think [4079] that we did a pretty good job so far a [4080] couple other things obviously that i [4082] want to add on i want to add on uh kind [4083] of this section down here i want to add [4085] on this comment thing because i think [4087] the comments are really important for [4088] youtube [4089] and i also want to uh you know change [4091] some of the design stuff here like you [4093] can see how if you're not signed in you [4094] get this thing i was signed in before so [4096] i didn't really get that thing but a [4098] couple of issues have kind of popped up [4099] as we've been playing around with this [4101] the grays are a little bit different you [4103] see how this little thing is here now [4105] that thing wasn't there before and that [4106] thing really bothers me so [4108] yeah i'm going to go through and uh and [4109] do that in the next video but hopefully [4111] it was helpful i want you guys to see [4112] and kind of [4114] know [4114] just for yourselves how easy tailwind is [4116] to use to mock things up with like [4118] bootstrap can be great too if you're a [4120] bootstrap pro you learn how the calls [4121] work and everything like that but in all [4122] honesty i've used bootstrap for a little [4124] bit too i think that tillage is [4125] significantly more intuitive i think [4127] that it's a lot easier to get started [4129] with even the class names make more [4130] sense and the cool thing is too like not [4132] only is it better in like the early game [4134] it's also better in the late game [4135] because when you're really good at [4136] dealing with tailwind you can create [4137] these incredible custom utility classes [4139] that can do 95 [4141] of like you know major css design [4145] frameworks like bootstraps work in like [4147] you know two minutes so it's really cool [4149] it kind of gets the best of both worlds [4151] anyway i hope you guys enjoyed that [4152] video i'm still trying to figure out how [4153] the stream stuff works i actually have [4154] another channel where i do a body [4156] language analysis and i thought that [4158] instead of just like hop over there and [4160] try and figure out how streams work i [4162] think i like i almost have 3k subs on [4163] that i was like why don't i just use it [4165] on my smaller programming channel first [4167] and try and you know work out the kinks [4168] so i will be streaming uh on this [4170] channel [4171] i don't have a set schedule yet or [4172] anything like that but it's just gonna [4174] be my preferred method of getting like [4175] tutorial videos out there and stuff like [4176] that if you like this sort of content [4178] please feel free to like and subscribe [4179] you can leave me a comment down below [4181] with some questions i'm more than happy [4182] to help thank you guys so much [4185] i had a blast doing this and yeah i will [4187] see you guys [4189] apparently right now [4191] yeah we'll see you guys uh i will see [4193] you guys soon thank you

Video: https://www.youtube.com/watch?v=uOmpS0m-cMc
Title: Build It Live: YouTube Video Page Rebuild in Tailwind CSS
[1] what is going on guys in this video i'm [3] going to do a fantastic breakdown of how [5] to rebuild the youtube video page [8] entirely intel in css so telon css is [12] this incredibly fast efficient platform [14] that i've been using as well as a lot of [15] other people to rapidly prototype and [17] build websites it has both the [19] functionality of like traditional [22] uh css uh platforms like you know [25] bootstrap and stuff like that while also [27] allowing you to create what are called [28] like custom utility classes so you so [30] that you can get the best of like [31] traditional css and a lot of these you [33] know next-generation platforms this is [35] really sweet kind of like [37] multi-functional multi-purpose [39] prototyping uh framework and it's like [41] super popular it's now one of the most [44] popular css frameworks of all time and [45] i'm pretty sure it'll soon surpass [47] bootstrap if it hasn't already [49] so i was initially wanting to do this [50] video as a live stream however uh turns [53] out on youtube you need to like verify [55] your account after 24 hours or some crap [56] like that so i can't actually do that [58] instead what i'm going to do is just [59] pre-record this and then in the future [61] i'm going to try and stick to once per [62] week uh of this like stream tail and css [65] build stuff because i think it's just [67] like really good practice for me to [68] continuously build websites and tailwind [71] css and also for people that are [73] watching that may have this weird i want [75] to say like over inflated view of how [77] web development works because all these [79] people out there that show you guys how [81] to like build something from scratch [82] usually have another monitor hidden away [84] that they're like glancing at and [85] copying and pasting stuff through and [87] that is not a good way to learn that's [89] like pretty inefficient if you think [90] that oh my god like he just seems to [92] know everything that's going on so [93] fluidly i'll get there one day uh you're [95] you're set up for for i guess failure [98] my goal here is to be super realistic [100] show you guys and kind of think out loud [101] while i'm rebuilding this whole thing [103] and i'm going to do it totally from [104] scratch right in front of you so this is [106] the video [107] page that we're going to try and like [109] build it's pretty simple i guess you [110] have this nav bar up at the top and that [112] nav bar has a search feature and you [114] know there's like little uh little [116] buttons and icons and stuff like that [118] we're not gonna have the exact buttons [119] and icons we're gonna go for something [120] that's pretty similar but it looks like [122] it's a little bit lighter than what we [123] have in the background backgrounds a [124] little bit darker we have this huge [126] video div [128] and then it looks like this is split [129] into two columns honestly so the left [131] column [132] this could be a grid build so grid is [134] like a way to set content up on the page [137] tailwind css has this really simple grid [139] class that i love using i definitely [140] prefer to go to flexbox [142] i'm a grid boy uh and yeah it looks like [145] this split up into like five or so [147] grid calls and then on the right hand [149] side you have one column and then the [151] left hand side you have four so this [153] should be pretty simple to build [154] although i always do say that before it [156] is like not simple to build so i will go [158] from there i'm going to use nuxt as the [159] platform that i'm doing the build on [162] so let me go over to here this is like [164] the app that i'm using right now uh you [166] don't actually need to use nux you can [167] use whatever the hell you want i'm just [168] using nux because i'm super familiar [170] with it super easy the actual html css [172] part i'm going to be doing entirely in [173] one giant ass file so [175] yeah it's not like you know best [176] practices or anything like that you can [178] imagine how you'd refactor that later [179] into several components for uh for your [181] own purposes but [182] anyway if you do want to follow along [183] with exactly everything that i've set up [185] here all you need to do is uh create go [188] into a new folder type npx create nux [191] dash app that is an npx executable so [194] it'll execute this create next app uh [196] program essentially this command line [197] program and it'll build an entire like [200] next workflow for you after that go over [202] to tailwind [204] css.com and just follow the instructions [206] for how to install tail and css with [207] nux.js that is literally it that's [209] everything that i've done and that's how [210] i built this you know page this is just [212] the uh [213] the example that we have here so i'm [215] actually going to just be really cheeky [217] and just tab back and forth between the [218] two some people don't like doing that [220] they're like having a separate monitor [221] but i want to show you guys exactly what [222] my actual workflow is like [225] we have this tutorial div i will [226] actually just get rid of that and then [228] instead i'm just going to go bg black [230] with full h full for now [233] and then [234] i will just save that and we will reload [237] it in the bottom right hand corner you [238] can see this nux like build thing [240] will reload [243] it'll basically show you the progress of [244] uh you know every reload and i think [247] i've already made a mistake of some kind [248] because we don't actually see anything [249] so let me go with fall h screen [252] and then [254] yeah i don't actually need this export [255] default anymore so i'm just gonna get [256] rid of that [260] okay cool so now we know that our [262] tailwind classes are working this is [263] just a sanity check awesome everything [265] is good to go uh you notice that the [267] background of this stuff isn't actually [268] black it's kind of like dark gray almost [270] so [271] i will go in here and [274] i don't know if our gray is going to [275] work because it's like kind of blue but [277] we'll just roll with it for now let me [279] see [282] yeah it's definitely way too blue so you [285] know what i'm going to do i'm actually [286] just going to [288] look how i'm like hey we're going to use [289] tail and css here but i think i'm going [291] to [292] make a new class and call it and this is [294] not best practice either i'm going to [295] call it bg gray and then i'm going to [297] call it like 1000 [299] and then the background color of this is [300] just going to be like super dark but not [302] completely black [304] let's do that [306] let's just go [307] that [308] just for completeness sake [314] so [315] yeah there you go that is much more [316] realistic cool so this is going to be [318] like the background div and then i will [320] have to use like those gray classes [323] uh and eventually i'm probably just [324] going to like make you know change [326] something the tail when configs that is [327] set up and you can see i'm using this [329] like code completer called codex codex [331] is like this artificial intelligence you [332] know software which essentially goes [334] through and it predicts the most likely [337] next sequence of uh characters so it [339] kind of helps your code out quite a bit [341] i actually probably produce you know 30 [343] i want to say 30 of all of my code with [345] codex now it's a fantastic partner but [347] for web development stuff particularly [348] that's more creative i i tend to shy [350] away from it so [353] yeah i'm just not going to use that this [354] much [355] but you are going to see these like [356] crazy tooltip things i like to just have [357] it around okay so the very first thing [359] we see is up at the very top [362] we have [365] a full width [367] div looks like right [370] yeah full width div and then for now i'm [372] just going to go like h8 [374] and then let's just go [376] actually to make this really simple i'll [378] just go bg green uh 600 and then we will [383] do this and the idea is we're going to [385] be able to like mimic what what we can [387] see here yeah there you go that looks [389] pretty good it's actually about like two [391] times as thick let me just make sure [393] this is an actual class [394] yeah it is [396] so we have this div at the very top now [397] the thing about this div is this div uh [400] looks like it's width full and there's [402] like a little bit of padding on the left [403] and the right side so on the left side i [404] don't know it's probably like [407] four [408] right side that's probably like four [410] maybe maybe more maybe like five or six [412] so what i already know right off the bat [413] is this is just gonna need a little bit [414] of padding so i'm gonna go into the [416] element here and just do like a px5 and [418] we'll worry about mobile optimization [420] stuff like that later [421] so what this means now is everything is [422] like pushed in a little bit uh from the [424] left and the right side px standing for [426] like padding on the x-axis [428] so now that everything is [430] pushed in a little bit i'm going to [431] start creating the divs and then i'm [433] just going to outline them so that [434] they're going to be in like these crazy [436] simple colors and then after i've [437] outlined them and kind of like [439] scaffolded the page i will actually [440] start creating these specific elements [443] so it looks like this is flex aligned [445] this is justified between so everything [447] is as spread out as humanly possible and [449] there are three like top level divs the [451] first pushes everything to the left then [453] you have this one in the center and then [454] you have another one on the right so [457] first thing i know right off the bat is [458] i'm going to add a flex class to this [461] then i'm going to go justify between and [464] then i'm also going to and i just i [466] always do this basically all modern [467] design [468] almost all the time will have like an [470] items center class as well and so the [472] flexes can flex everything just by [473] between is going to push everything out [475] as far away as possible each other the [476] item center is going to center it [478] vertically [479] so then i'm going to create three divs [481] the first div i'm going to do [483] i don't know let's just add some [484] explicit width parameters here to make [486] it [487] really simple let's do a width one third [491] and i'm going to make this bg blue 500 [496] and then [497] let's just copy that twice [500] good so now we have a bunch of blues and [501] then i'm just going to change this to [502] red and then i'm going to change this to [504] orange so the class yeah orange is [505] actually class now uh oh and i think one [507] thing that i should add as well is h [509] full [510] so i just want this to like stretch [512] vertically as much as seemingly possible [515] okay great so now we have these three [517] different containers basically and you [518] know they're not perfectly aligned and [520] that's okay we'll fix that later uh you [521] see how this padding is [523] almost perfect but it looks like it [524] needs a little bit more so just right [526] off the bat i'm going to change that to [528] like a px8 for example [530] i'm going to go back yeah there you go [532] that looks better let's say that's much [534] closer to what it actually is like [536] okay and now i'm going to remove the [539] explicit width properties and then focus [541] on one individual div at a time so on [543] the left div here you have what looks [544] like an svg [546] i'm not going to do like the [547] functionality or anything like that [548] you're just going to get the the svg [550] here and it looks like it's just a [551] hamburger menu then you have the youtube [553] logo which is just an a tag so that's [554] like a clickable link you can tell it's [556] a clickable link because when you hover [557] your mouse over it you see like a [558] clickable thing in the bottom left-hand [560] corner [561] and uh yeah we can actually source uh i [563] think the the hamburger icon uh really [565] simply and then this youtube logo can [567] just be sourced i believe from youtube [569] yeah i'll just google it [571] so let us dive into this here i'm going [573] to create uh and it looks like these are [575] by the way just stacked side by side so [577] this would be flex as well and we can [579] just add a space class to add a little [581] bit of space between the two i don't [582] know how much there is maybe like space [584] x4 it's probably good you'll notice [586] there's a lot of back and forth this [588] kind of stuff like i will do it then i'm [589] like oh it doesn't really look like i [590] want it to look then i'll go back and [591] i'll do it again and so on and so on and [593] so forth and because i'm adding a flex [594] class i'll also go item center just like [595] i always said do [597] so the first thing is i'll have an svg [598] let me just add a little placeholder [600] here and then i'll have an a tag and it [604] looks like my auto linting or not [606] linting uh auto completion thing isn't [608] working right because normally these [610] tags all just close by themselves but [612] stuff like that's a massive productivity [613] increase especially when you're doing a [614] bunch of this front-end heavy stuff [616] first thing i'm gonna do is i'll go to [617] heroicons they are this is actually made [619] by the people that made tail and css i [620] believe steve [622] shroger i think is his name and he is a [624] really cool guy we'll just type [625] hamburger yeah and then we have a menu [627] here so i'm just going to copy the svg [629] paste this svg right here [631] and i'm also like reformatting every [633] couple seconds it looks like this is [637] this is white so i'm going to go into [638] the class i'll go text white and then [640] fill current although i don't actually [641] think i need that fill current right now [643] i'm going to remove the blue class [646] and then yeah that should be the svg [649] we'll screw around the size later and [650] then the a tag i'm going to go image and [652] then i'm going to just accept an [654] explicit link to [656] the youtube logo [659] so it should be here [660] and we want it to be [663] so this youtube logo is white so [667] we see is this a black background this [669] is and we can't use that uh youtube logo [673] white transparent let's see if we can [675] just get something really simple [679] and then if we go back here like what [681] does this actually look like [684] um [688] music [689] no [692] yeah [693] it's kind of annoying [698] ah [699] yeah it really sucks i don't actually [702] know if we can just get that i mean this [703] is you know what this is probably an svg [704] if it's on youtube so maybe we can just [707] like select it explicitly [709] give my uh computer a bit of time it [712] is doing like 8 trillion things right [713] now [715] so let's see if we can just you know [717] explicitly just click on this thing and [719] then go in and then yeah it turns out [721] it's an svg so i'm just going to copy [723] this svg [724] and then put this in the a tag instead [725] of an image [728] then i'm going to save this and then [730] close these two to hide my shame [732] and then uh [734] and see what happens there so never mind [736] it actually looks like there's [737] some issue with the youtube logo and it [739] doesn't want to show up so why is [742] that it's probably because of all these [744] custom classes actually ugh that's so [746] annoying [748] let me just see if we can make this work [749] by setting explicit width properties so [751] let's do with uh 32 [754] then height uh i don't know i'm like [756] eight or something i don't know what the [757] aspect ratio that would be [759] and then if it does work great if it [761] doesn't that's okay too [763] okay yeah it does look like that works [764] uh oh no no we gotta make the text white [767] so let me go text white and see if this [770] works [772] yeah probably not because it sets [773] explicit uh with properties let me see [775] if i can invert svg with tailwind [780] i believe this only applies on images [783] maybe not [786] if it doesn't then this will be great we [789] will do invert [791] and then we'll see if this is is going [793] to work if soto and does a godsend oh my [795] goodness wow that actually yeah that [796] worked so what we're going to do is [797] we're going to try and invert [799] not the youtube icon we're gonna try and [801] invert the text where it says youtube so [803] i'm pretty sure this is the second g [805] here so let me let me uninvert the first [807] thing [808] try invert the second thing and then [810] i'll save this [812] and reload cross your fingers boom okay [815] great it worked [817] awesome so what i can do now too is i [819] can remove this green background here i [820] don't actually need it because i'm [822] pretty sure we yeah we got probably 70 [824] of that done oh crap it looks like i [826] deleted the youtube [828] page so let me open that back up [833] drag that over here [834] and then pause this video [838] thank you mark [840] okay great so yeah this is what uh ours [842] looks like this is what theirs looks [843] like so it looks like theirs is a little [845] bit smaller so we're going to go to that [849] svg for the youtube logo [852] where the heck is that suv youtube logo [854] let me fix this [857] right here and then we're going to make [859] the width like 20 [862] i don't know [863] let's see what values we have available [865] 20 [867] 8. let's try that [872] okay so i got a little bit smaller so it [874] needs to be smaller now let's go 24. [877] then we'll also see that this uh this is [879] a little bit [880] like this is much thicker than what we [882] have on the left so i'm going to [884] just make the text a little bit uh gray [887] rather than pure white and i think [888] that'll help fix [890] so we're going to say text gray let's do [892] like 100. so actually we can just go [894] text white and then we can go opacity [896] like 90 instead [898] that way it'll take on some of the color [899] of the background instead yeah there you [900] go that's like a little bit less uh a [902] little bit less noticeable and then the [904] spacex will pump up to six instead of [906] four [907] so there you go that looks a lot better [908] awesome so that is like the first little [910] section here done oh the last thing i [912] want to do actually is i just want to do [913] href and then i'll add a little hashtag [915] there that's going to make this thing [916] hoverable it's going to change the [918] thing when i uh [920] hover over it okay apparently not [924] um let's just see if maybe it is the [928] fact that it is a link [930] to nowhere [931] or maybe it's the fact that this is [936] uh like hidden underneath something let [938] me see if that might be it yeah there [940] you go that's it it was actually hidden [941] underneath so yeah you know now we get [943] like hover we get a little thing to [944] click we don't actually going over the [946] hamburger icon i'm not sure if we do on [947] youtube yeah we do on youtube so let me [948] do that on here as well really easy way [950] to just add something on top of it you [953] just go to emit wrap with abbreviation [954] if you're using vs code then you can [956] just type an a and then [958] yeah it's automatic [960] so [961] i'm also going to add another class z10 [964] z10 is just for z and x so if things are [966] on top of each other this just brings it [969] to the the front level z10 uh [972] will bring will be higher than z zero [974] z20 will be higher than z10 below z30 [976] will be higher than z20 and below and so [978] on and so forth so yeah okay now we have [980] something that like resembles our [981] youtube thing pretty well except for [982] that ca thing but that's canada so [984] screw canada uh next up we're going to [986] build this little input field looks like [989] we have this search [991] based off the top of my head i believe [993] it is [995] a [996] yeah this is just two divs that's all [999] you have an input div here and then [1000] input div stretches all the way at the [1001] end and then you have a little button [1004] and that button is as you see when you [1006] mouse over it you get that kind of like [1007] you know cursor pointer thing [1010] this would be pretty easy to do the [1011] inside of the input would just be a [1012] little bit darker and then this would be [1014] wider and then there'd be this svg [1016] inside so let's do that [1018] cool now that we're done with that left [1019] div i'm going to go all the way down to [1021] my bg red 500 right over here and then [1024] i'm going to remove the background i'll [1027] also remove the width i'll keep the h [1029] follow and then i'm going to build an [1031] input [1033] and [1033] [Music] [1035] i'm just going to go type text [1039] let's just see what that looks like [1041] i uh [1042] yeah so it's all the way up here [1045] cool so i'm going to flex justify center [1048] item center so i want to justify to the [1050] center whatever this div is and i also [1052] want it to like be kind of in the middle [1053] here rather than [1054] all over the place [1055] so if i refresh this sometimes my uh [1058] rebuild thing looks kind of weird but [1060] yeah yeah there you go that looks uh [1062] pretty small [1063] but still pretty good [1065] okay a couple things that we see right [1066] off the bat there's a little outline on [1068] it so if i click on this that weird [1070] little black white outline thing comes [1071] we can remove that by going focus [1073] outline none [1074] also the background color is white right [1077] and we don't want white we want this [1079] color we want like darker [1081] so [1082] i am going to [1085] cheat again [1086] and just make a background 900 class and [1089] then go here [1090] and just make it a little bit lighter [1092] let's do that [1095] that's cool [1097] and then if we go over here we can go [1099] background gray 900. [1103] yeah [1104] that's going to lighten up this little [1105] top bar just a tad oops sorry i actually [1109] use that on the wrong thing we want to [1110] use it on the uh the main bar here so bg [1112] gray [1113] 900 and then down here we don't actually [1116] want anything on there [1118] it's on the input that we want the bg uh [1121] gray [1123] i don't know [1125] i'll go bg white opacity 20 for now i [1129] think let's see if that works just to [1131] get a visual understanding of what the [1132] page would look like [1134] yeah no it's actually darker so my bad [1136] this is going to be bg gray a thousand [1139] there we go [1141] this is actually going to be the same [1142] color as uh what's down there [1145] it's annoying i have to refresh us but [1146] is what it is [1148] cool now we got to deal with the height [1150] so this is h full but the uh child [1152] container isn't so we'll add some [1154] padding let's do three [1157] so let me see what that looks like with [1158] three on [1160] and it's a little bit too big so we'll [1161] stick with two [1162] and then let's go [1164] hmm [1166] i have a feeling this has an explicit [1167] width property set [1170] might just be a third of whatever the [1171] container is [1173] no it doesn't look like it looks like [1174] it's just an explicit width property set [1176] let's try for a width 128 just for now [1179] and let's see how wide that is [1184] let me give this bad boy a little [1186] refresh [1189] so [1191] let me just try for with full too and [1192] see if that changes anything [1196] also kind of annoying i still have an [1197] outline here even though i went focus oh [1199] geez i did it on the apparent div that's [1201] why [1205] okay [1207] might just be that there is no with [1209] 128th class [1212] yeah there you go that was y so there's [1213] actually no width 128 class you can add [1215] that in if you want [1216] uh this looks yeah it's pretty big [1219] pretty big let me see what the biggest [1221] width class is here [1225] so there is no width 128 so instead what [1228] we're going to do is we're going to go [1229] with [1232] max width let's do like [1237] 2xl here [1240] i think that'll probably be wider oh [1243] maybe you know maybe like 4xl and then [1245] with fall [1247] so we're going to push up against the [1249] max width limit and then let's just go [1251] with full as well so this takes over as [1253] much as humanly possible [1255] refresh that uh yeah that looks pretty [1257] good we're gonna go down to like three [1258] though [1262] okay never mind we're gonna go to excel [1264] so it turns out the issue is that uh [1265] initially i just didn't [1267] set up the width right okay cool that [1269] looks pretty close [1271] now that we have this we can add our [1273] button [1274] and the background is going to be much [1277] lighter let's do [1280] let's do bg gray like [1283] i don't know [1284] 800. [1286] good god i'm destroying so many coding [1288] conventions here [1291] all right i swear if i have to do this [1293] one more time then that's it man we're [1294] just adding these to tailwind [1296] straight up and i'm eating my words [1299] it's funny because that is literally [1301] what happens every single time you work [1302] on a project you're like [1304] what would the cost be time wise or just [1306] like adding this in [1308] uh [1309] you know like the proper way and then [1311] you're like ah i would take too long [1312] screw it and then you don't do it and [1313] then later on you're like man i just [1315] spent like 10 hours having to deal with [1316] the fallout of that crappy [1318] decision like good lord [1321] so yeah it's just a little bit of my [1322] life uh okay so what did we call that bg [1326] gray 800 let's do px4 py i want to do [1330] the same size as this we'll do two [1332] and then inside uh [1335] i'm just going to make it like another [1336] flex box because i like using flexbox [1338] and tiny divs like that we're gonna go [1340] search [1342] there you go there's the svg paste that [1344] in there [1345] format it we'll go text white and i [1347] think that size is probably okay for now [1351] yep yeah that's pretty good [1354] so you know obviously we're a little bit [1355] ways away there's some more stuff that [1357] we need to do you'll also notice how [1358] this is being pushed over to the left [1359] more and that's just because of the size [1361] of this div so when we fix the size of [1363] that div this will be centered more or [1364] less perfectly so a couple of things [1366] that i see i see a little border that [1368] border is just a little bit lighter than [1371] everything else it's also slightly [1372] rounded so i'm going to go back to my [1373] input here i'm going to go rounded we'll [1375] do sm and we'll go border [1379] yeah border 2 i think that might be a [1380] little bit too wide and then we'll go [1384] um [1387] let's go border [1390] grade 200 border opacity 50. that might [1393] look decent [1396] let's see here oh yeah way too way too [1398] thick [1399] so instead of 200 we're gonna go like [1401] 400 and then we're gonna go border [1403] opacity [1405] uh 40 and then we're just gonna go [1406] border [1407] and that should be much closer [1411] yeah we can even drop that down further [1412] like 20. [1414] yeah there you go okay and then there's [1417] a placeholder here that says search and [1419] it looks like there's also some padding [1420] if you see when i click uh my little [1422] cursor is bumping up right against the [1423] right hand side so we're gonna add a [1424] little bit of a padding here as well [1425] let's go px4 [1427] and then right here we're gonna go [1428] placeholder and then we're going to say [1431] search [1434] and that should resemble what we have [1437] here [1438] yeah there you go it's just about the [1439] same length [1440] issue being [1442] the placeholder color was different so [1444] you're gonna place folder current and [1445] we'll go text white [1447] and oh that's actually too bright so [1449] instead we're gonna go text white and [1451] then text opacity let's do like 70. so [1454] about three quarters is opaque [1457] let's do 50 screw it a little bit on the [1460] wild side [1462] cool yeah it looks pretty close i mean [1464] the the font is different of course and [1466] uh you know i like to fix that but [1469] i think that's decent for now okay great [1472] let's work on this button so this button [1474] looks like it's a little bit [1476] wider than what i have over here so i'm [1478] going to widen this a little bit a [1479] little px5 uh [1482] is there a stroke width yeah there's a [1483] stroke width on the svg so i'm actually [1484] going to reduce the width of the svg [1486] make that a little thinner [1488] and by me making a little bit thinner [1490] and increasing the width of that yeah we [1491] should be basically one for one so [1493] that's pretty good [1494] okay cool so this div here [1498] is a thing but it looks like there's [1500] another div [1502] that is right beside it [1506] and that other div that's right beside [1507] it is where this microphone is so we [1509] actually need to create another div [1511] nest this div we'll go flex and then [1514] we'll just go space x2 and then item [1516] center [1517] maybe spacex 3 item center [1521] and then because we've item centered it [1523] and because we've done all that stuff if [1524] i were to add [1526] another div here [1528] so sorry i just want to make sure this [1530] has all the same classes with full [1533] you know what we can just copy this [1535] and then here this would be [1537] uh justify center nope we would need [1539] that we go spacex or [1542] yeah three [1545] yeah it should be good okay so i also [1548] gratuitously use these h classes just [1550] because i set a uh [1553] a strict height property [1554] manually so you [1557] some people really dislike doing that i [1558] also don't really like doing that but [1560] just for show i decided that i would and [1562] later on i'm going to show you how to [1563] convert that into uh [1565] into a non-explicit height property [1567] okay so now it looks like we have a dark [1569] background that's a circle so inside of [1571] this div [1573] i'm going to go class flex justify [1575] center item center bg gray let's go to [1578] the main background color [1580] then i'm going to go rounded full this [1582] is going to be a little like rounded [1584] circle thing basically i'm going to go [1586] with let's do 12 h12 and then inside i'm [1589] going to go uh an svg and the s3g is a [1592] microphone so if we go back to heroicons [1593] we can just go mike [1595] or a phone [1597] yeah they're a little bit different but [1601] i don't really think we're ever going to [1602] get the exact same so i'm just going to [1603] copy their their little cutout mic [1606] paste that in there [1609] and then let's just bump this up to like [1610] h8 with eight and then let's save it [1614] reload the page [1615] and see what did we do that is what we [1618] did [1619] okay so it looks pretty good [1621] all things considered maybe it needs to [1623] be a little bit smaller [1625] uh so let me just quickly change the [1626] width of that i also forgot to add on a [1628] text white class to that to like make it [1630] white [1631] and then there was an issue where it [1633] just like pushed all the way to the end [1635] so instead we're just going to justify [1636] center try and smack everything as close [1638] together as possible which should [1640] hopefully make it a little bit better [1643] no it's still stretched out as much as [1645] much possible now why would that be [1648] probably because of this with full class [1653] yeah probably because of this with full [1655] class [1657] let me remove the width full [1659] and then i bring it in [1661] which is okay but then we run into an [1663] issue where [1666] the search bar is kind of pushed up and [1668] then while this is good we also run into [1670] another issue where it's a little bit [1671] too tall so maybe we can make this even [1673] smaller [1675] we can make this into h10 [1677] h10 let me see if that fixes things and [1680] i think there's also stroke width we can [1681] probably change to one that just seems [1683] to be the going theme for this stuff [1685] stroke width of one rather than a stroke [1687] width of two [1690] now still looks like we have this issue [1693] i wonder if we were to set the [1696] div to be a little bit wider than it is [1698] tall if we could just automatically [1700] correct for that and make a circle [1703] oh wow yeah i think we literally can [1705] that's cool [1707] okay cool so yeah in terms of size [1709] that's basically that the only thing we [1710] got to do is we got to change the width [1712] of the parent container [1714] for this [1716] place here and that parent container is [1718] which one is that [1725] let me just set it to be the same as [1727] what the input was although this might [1728] push out that right button a little bit [1732] nevermind it just does nothing [1733] yeah welcome to my life uh [1737] let's go mat max with 2xl on the parent [1742] and see if we can use that to fix [1745] the width [1747] that is a no [1753] we will set a max width on that parent [1756] okay yeah so it does stretch it out [1758] this looks like it's a little bit too [1759] wide though so i'm going to turn the [1761] space x3 to like space x2 instead [1764] also i love how tailwind has a class [1766] called spacex where every single time i [1767] say spacex i'm thinking about like [1769] spacex and elon musk [1771] it's kind of funny [1772] okay next up we're going to go to our bg [1774] orange remove that and also remove the [1776] explicit width property actually let's [1778] set this to like a fifth which is what i [1780] think it like actually is [1782] and then let's see if this is more [1783] centered [1784] yeah we can even go more like a sixth [1786] remove this bg orange class [1791] yeah yeah so like the the smaller that [1793] this thing gets the more this is pushed [1795] in so eventually this will make it [1796] perfectly to where i wanted to go okay [1798] anyway now we have another div on the [1799] right hand side and inside of the div we [1800] have four like little uh icons so this [1803] is gonna be probably the easiest thing [1804] we've done so far [1806] so i'm just going to keep the height at [1808] full and then i'll go flex space x [1812] let's do three and then item center and [1815] now we're just going to have like four [1817] svgs so it looks like there's this like [1819] video icon thing [1822] so i'm just going to [1824] yeah i'm just going to use this one [1826] because i can't [1829] and then we're going to [1832] yeah it's going to look decent the [1833] youtube thing continues getting big [1835] every now and then but uh i think that's [1837] just an artifact from reloading [1839] so a couple things we gotta do here we [1840] gotta add text white class to that let's [1842] make this a little bit bigger and then [1844] let's move on to the other ones while [1845] i'm doing it so [1847] uh we have this little grid looks like [1848] so let me see if there's grid [1850] yeah it looks like there's a grid it's [1852] four instead of uh nine but that should [1854] be okay [1856] we also have this height width [1858] uh height sixth width sixth thing which [1860] i'll fix in a second and then we also [1862] have [1863] another one here which is a bell so let [1864] me see if they have a bell do they have [1866] a bell yeah they have a bell of course [1868] they have a bell how could i even ask [1870] what a silly question and then we just [1872] have a circle with like somebody's face [1874] in there and that's really just your [1874] profile pic so [1876] um for that we could just make a div [1880] set it to the same height and width and [1882] then set the bg to white i would say [1885] it's probably the most realistic and [1887] notice that i didn't update the height [1888] and width properties here that's because [1890] i'm just going to show you a vs code [1891] trick where if you just hold ctrl d [1894] oh hold on i wanted to make them all [1896] happen at the same time but i screwed [1897] that up okay cool if you just uh [1900] highlight something and press ctrl d [1902] it'll select the second instance of it [1903] do it again it'll select the third and [1904] so on and so on and so forth so we [1906] actually want this to be h7 with seven [1908] and then we want the text to be white so [1909] we can actually do that all the same [1911] time [1912] by uh just breaking that basically [1915] so yeah [1916] if we refresh that we will see our icons [1919] will become a little bit bigger [1921] uh [1922] and oh man they look nowhere near as [1924] cool as the youtube ones that really [1925] bothers me [1926] uh and it looks like i also didn't round [1929] the container [1931] rounded full let's do that um yeah i [1933] really don't like the stroke with the [1934] two so i'm just going to go through [1936] select them all [1937] as i've done before and then just change [1939] that to a one that should help [1942] hopefully i didn't automatically select [1944] yeah it looks like i selected the [1946] hamburger menu so let me go all the way [1948] back up to this hamburger menu and then [1950] where i set the opacity of the hamburger [1952] menu i'm going to [1955] remove that opacity change so hopefully [1956] that would look [1958] a little more similar [1960] and then this is spaced out more [1961] obviously so i'm going to go to where i [1963] did spacex [1964] 2 [1965] nope spacex 3 [1967] i'm going to spacex 5 instead [1970] now let's see that [1974] honestly could be even more yeah it's [1976] not really anymore looks like the just [1977] because they have this scroll bar thing [1979] which is a separate div uh it pushes our [1982] our navigation a little bit more [1983] so yeah when we get the page big enough [1986] such that we will have that happen then [1987] you know we can worry about it then [1989] um okay cool so yeah there are a couple [1991] little differences you know the width [1992] the padding actually looks like i went a [1993] little too egregiously strong on the [1995] padding so i'm going to pump the padding [1996] down from px8 to px7 [1998] uh you'll notice that this is a fixed [2001] container and there's actually a little [2002] bit of opacity behind it so you can [2004] actually see like if you zoom in gary [2006] vaynerchuk's face his beautiful bearded [2008] face [2009] so what we're going to do for that [2011] is [2013] i don't know what are we going to do for [2014] that [2015] we are going to [2017] make it fixed i'll go fixed [2020] then i'll go top zero [2022] then i will have this be relative [2025] and then oh i gotta go yeah actually no [2028] i think that's it [2030] this should now be fixed [2033] excellent yeah this is now fixed uh we [2035] can also go bg opacity 90. and then we [2038] can remove that gray 900 class we can go [2040] 1000 class and then that's probably why [2042] it was lighter [2044] let me see oh no it's not it's because [2045] the background's light [2047] so sorry we're gonna go back to 900 here [2050] it's actually gonna get darker now [2052] refresh this yeah [2055] yeah i'd say that's probably about as [2057] close as you could get without uh just [2059] copying their icons oh another thing we [2061] could do is we could wrap all these svgs [2063] in a tags because those svgs like if you [2066] go back to the youtube thing they're [2067] clickable right so that your mouse [2069] changes when you have over them so i [2071] could just take advantage of uh [2073] this wrap thing that i've done before so [2075] you just [2076] highlight i do ctrl shift p [2079] this wrap with abbreviation pops up [2081] excuse me click enter and then i press [2083] and then i press enter and then i now [2084] have like links [2086] so if i select that and then refresh to [2090] get rid of the artifact [2092] um and then oh yeah another thing we got [2093] to do is we got to add the uh [2097] z10 on that to make it bump out and i [2100] think i did this on the button but i [2101] have to do this on the individual [2102] elements don't i yeah i do [2106] so let's try that [2108] so now when i hover over it [2110] it still does not do the thing [2114] let me try that [2118] okay i think i have officially broke [2121] broke the internet uh cool instead of [2124] that i'm just going to go cursor pointer [2127] and actually why don't i just go cursor [2128] pointer on this instead of that [2134] okay never mind [2137] um oh jesus [2142] oh good lord it's i've been on the wrong [2144] button this entire time yeah boom there [2146] you go that'll do it that'll do it [2149] okay let me try going z10 on there and [2153] then wrapping this in an a tag [2157] and then doing that and let me see if [2160] that will actually fix things yeah that [2162] will fix things good lord i feel silly [2164] however that does not uh [2166] detract from the fact that we actually [2168] did need that button and we also need to [2169] do that there on the on the microphone [2172] so i'm gonna assume that the microphone [2173] is just a button because uh most [2175] microphones are like if you have a [2176] microphone functionality you're probably [2177] not navigating to a different page or [2179] something you're probably [2180] actually changing that uh [2183] like you know it's some script that runs [2185] when you click it it like you know opens [2186] the microphone feature or whatever so [2188] i'm going to do that [2191] and let me just remember where i am [2195] yeah that looks good let's just change [2197] this from a div into a button [2201] and then reformat [2212] and then yeah there you go [2214] cool the artifacts of the [2216] reload are unfortunately very annoying [2220] and then i'm going to do the same thing [2221] i did back there with the a tag it's [2223] just i'm going to do that on all the [2224] svgs so there's a little bit of [2226] housekeeping [2235] and if i go back then all of these [2237] should work awesome except for my div [2239] here which doesn't [2240] that's because i just did not i can just [2242] make this into an a tag actually [2245] there you go [2246] cool [2248] awesome so yeah i mean that was a fair [2250] amount of time where we at now like 40 [2252] minutes or something 35 minutes uh to [2255] create this title title tag or title tag [2257] this nav bar you can imagine how the [2260] rest of the build is gonna be [2262] significantly faster just because we've [2263] established a couple of fundamentals [2265] like the colors and you know the way [2267] that things are laid out looks like [2268] they're using flex not instead of grid [2270] stuff like that once you've built a [2271] design system once you've found [2272] resources like places to get you know [2274] your buttons and crap like that it's [2275] usually a lot easier to uh to build out [2278] you know like a system and that's more [2280] or less we've done here so [2282] in the next video i'm going to cut this [2284] one here in the next video i'm going to [2285] build out the rest of this youtube [2288] landing video page thing and it's going [2291] to be a lot faster than you think i'm [2292] going to use a screenshot for this and [2294] uh i'm not going to have like these [2295] little play button stuff i'm just going [2297] to use an image there but you can [2298] imagine how if you were an actual [2300] designer at a big company with a design [2302] i'm sorry an actual developer at a big [2303] company with like a design and you were [2305] handed this lovely landing page [2308] as long as you have sufficient knowledge [2309] to tell in css you could probably [2310] rebuild that in a few hours right it [2312] does not have to take that long this [2314] isn't like the design days of old where [2316] before you even get started you have to [2317] completely flesh out like a complete [2319] design system from start to finish you [2321] can actually just get started prototype [2323] something yeah it's not going to be the [2324] most efficient but you are gonna get [2325] like ninety percent of the way there and [2327] then you can send that off to somebody [2328] else for that extra ten percent or you [2330] can worry about that after you've [2331] launched your mvp or something like that [2333] so i'd say it's probably one of town's [2335] biggest strengths you don't have to [2336] worry about like making everything [2337] perfect uh the reason why the spacing [2339] and stuff like that isn't just like [2340] super lined up is because they don't [2341] care they say well dude like does it [2343] really matter if it's like px 1.5 versus [2345] px2 only if you have like crazy ocd [2348] about this stuff otherwise you should [2349] just get it out launch it get that mvp [2352] out the door and uh you know worry about [2354] iterating and refining and stuff like [2355] that after [2356] awesome that was it for this video i [2358] will see you guys in the next where i [2359] will build out the rest of this [2360] wonderful landing page video thing see [2363] you there

Video: https://www.youtube.com/watch?v=vP_rutpspq8
Title: How to Create High Quality, Clickbait YouTube Thumbnails with Photoshop
[1] what's going on guys in this video I'm [2] going to show you how to make YouTube [3] thumbnails using Photoshop and my own [5] personal strategy to make amazing [7] thumbnails in just I don't know 2 [9] minutes or so so to get started all you [12] need to do is open up a Photoshop here [16] go to file and make a new layer the new [18] layer we're going to create is going to [20] be 7 uh 1280 by 720 we're just going to [23] call this YouTube thumbnail of course [26] you have to know what you're going to be [27] making the thumbnail about in my case I [30] just did a video on uh Gordon Ramsay [34] this one right here so I'm going to have [36] excuse me Gordon Ramsay's face kind of [38] cut out like Ryan Reynolds here with [40] some big text um and you know maybe some [43] cool effects in the background to kind [44] of liven them up make them look a little [46] cooler so now that we know what we're [48] doing and we have ourselves a uh a nice [51] little template here first thing I'm [53] going to do is I'm just going to pick a [54] color let's say I don't know Green pick [58] the uh paint bucket tool and paste a [61] color in there that's our layer zero [64] next thing I'm going to do is I'm going [65] to go to unsplash.com and look something [67] up like space for [70] example I want to make sure that the uh [72] orientation is [75] landscape and I'll find something that's [77] kind of cool has a little bit of texture [80] something like this I think this is [81] really nice and I'll download that after [84] I've downloaded it I will drag and drop [85] it into my Photoshop layer let's make it [90] about this size and then I will bring [93] the opacity down to like 25 maybe 30% [97] and the reason for this is just to have [98] a little bit of texture in the [99] background another thing I'll do is I'll [101] go to my filter menu and I'll also add a [103] little bit of [104] noise that noise will just uh give it a [107] little bit more texture and I'll also go [109] to the uh the other like layer filter of [113] just our blue or our green color rather [116] and I'll also add a little bit of noise [117] but I'm going to make sure it's like a [118] really tiny bit of noise I don't too [120] much [122] noise there we go I think that should be [124] fine um next up I want to get a photo of [130] Gordon [130] Ramsey so looks like I misspelled his [133] name there let's go to images uh this [135] one looks pretty nice [138] copy paste save drag and then drop and [142] now we have Gordon Ramsey we're going to [144] make that the top layer and I'm probably [146] going to want to position him like I [148] don't know something like that probably [150] so I'm going [151] to uh use the magic select tool here [155] quick selection tool to select just [157] Gordon Ramsay in this layer and most of [160] the time it's pretty easy I mean if you [161] have a high quality photograph with uh [163] kind of very well defined and very [166] opaque background it's usually like like [169] an absolute Breeze sometimes it might be [171] a little bit tougher in which cases you [172] got to zoom in a little bit make sure [174] that you know his ears are being [175] captured his hair is being captured and [177] so on and so forth um the cool thing [180] about this too is you can actually make [181] this a little bit smaller so let's go [183] down to like 16 or 17 and just do the [186] real ends of his hair there and then if [188] you hold the ALT key you can actually [191] deselect uh some hair as well or rather [193] just uh you can deselect a selection too [196] so looking around I'm pretty happy with [198] that uh all you got to do from here on [200] out is we're going to alt smms that's [204] the select tab then modify then smooth [207] I'm going to smooth the radius by about [209] 15 [210] there and then I hold control and I [211] press J that's going to create a new [213] layer so now I have my own independent [215] kind of um almost like magically cutout [218] layer of Gordon Ramsay I'm then going to [222] kind of tilt him as necessary make sure [224] that he doesn't look kind of weirdly cut [225] off and I'd say you know that's probably [229] good I want his head something like that [231] like I'm looking at a few of my other [232] thumbnails and I think that would be [234] that would be a good place for it um [236] another thing we got to do after that is [239] we need a text layer [241] so I'm going to open a text layer let's [245] make the font like I don't know 45 or [247] something like that and what are we [249] going to say we're just going to say [252] Gordon ramsy that's what we're going to [256] do we're actually going to make it a [257] little lower [260] even and it appears that the next level [263] or layer is being cut off so I'm [265] assuming that just has something to do [266] with this I'm going to Auto that make [269] this text Tex [270] white that looks good looks like my [273] going theme Here is to have everything [276] in caps so I'm going to go Gordon Ramsey [279] maybe 37 no let's do [282] 30 it's probably a little bit better I [285] mean obviously still not good this would [287] look like a fifth grade kind of design [289] so we're not just going to stick with [290] that um one thing we have to do is we [292] have to pick a font so a font I really [295] like for YouTube is Railway Railway is [297] offered by Google fonts for free all you [299] need to do is go go to the railway page [301] download it you'll have a zip file you [302] can extract that zip file uh and then [305] just go into static and you'll actually [306] be able to download all the fonts you [308] can also just download the variable [309] fonts but sometimes that doesn't work [311] with Photoshop let's give it a try here [312] and if it doesn't work we'll double back [314] and uh do the other fonts great so it's [316] installing Railway if we go back here [319] now let's type Railway let's see if it's [322] here okay cool yeah it actually looks [323] like it's here which is really nice [325] let's do Railway [328] black little text trip trick for you [331] guys a lot of the time in bad poor [333] designs uh the spacing on the line is a [335] little bit too high so here it's Auto if [338] we were to bring this down to like 25 or [341] something that would look a lot better [343] um and we can make this something [348] like20 and just clearing up some tabs [350] here um yeah we can even make that a [353] little bit bigger we can go like oops I [356] wanted to play with the actual font size [358] here we can do like 36 [360] probably and then the space between them [362] could be like 34 I'd say [366] 33 yeah that's pretty [369] nice okay great we're starting to get [371] there but still looks kind of funky the [373] background layer to me is kind of a [374] little too green little too childish so [377] I'm going to change it to something like [379] blue I'm going to darken it a little bit [382] decrease the saturations that it's like [384] more just this cool kind of universe [388] Vibe and I'm going to adjust the text so [391] it's more kind of in the middle here uh [394] then I'm going to transform this text [396] and then skew it just a little bit I [398] find that good text designs are almost [401] always skewed so let's [404] do H let's do up just about like 2 or 3 [410] Dees that goes a long way toward making [412] it look a little bit more normal the [415] next step is Gordon's cutout looks [416] really weird here so I'm going to go to [418] layer blending option on Gordon's uh on [421] Gordon's layer and then go to stroke now [424] stroke it really depends on what your [425] default setting is mine is this like [427] huge white stroke yours are probably [428] going to look a little different uh but [430] stroke is just a quick and easy way to [432] kind of add a little bit of life to any [433] design and um I guess make characters [435] pop just a little bit more so I usually [437] use something like 18 19 you can use [439] whatever opacity you want I'm just going [440] to go with 100 here at uh let's do 17 [445] yeah maybe even less let's do like 16 [449] yeah there you go that should be good [451] and now you know Gordon's popping a [452] little bit more he's looking a little [453] better uh one more thing that a lot of [455] people like to add to their uh their [458] kind of cutouts is an outer glow this [461] outer glow is a little harsh and it's [462] kind of very distinct you can you can [465] clearly tell so we're going to make it a [468] little uh we're going to spread it a [470] little less and then open up the size a [472] lot so it's just like this soft kind of [475] bright brightening right around Gordon [478] Ramsay's body [481] and we are going to zoom out a little [483] bit let's just check the design I think [484] this is just a little bit too big so [486] there's a little trick you can use in [487] Photoshop if you just hold click V first [490] select the text and then hold control [493] press t or command if you're on a Mac [495] you can actually kind of like drag and [496] drop the or or drag and open and close [499] the window like this to kind of make it [500] bigger as opposed to playing with the [501] font sizes so that's pretty nice I'm [503] going to make the font just a little bit [505] smaller and then now that I'm thinking [507] about it why don't I hm [510] want to make this a little bit more [511] clickbaity like don't [514] do and then let's [516] go [519] this Let's [521] [Music] [525] do let's do this yeah don't do [530] this and we're going to make this a [533] color that pops a lot so a good color [535] for that is some type of like neon [537] yellow a lot of people see that as [540] they're scrolling down their feet and [542] that's just like really [543] powerful um really gets people's [545] attentions that's a little too green for [548] me so I'm just going to go just a little [549] bit [551] down and go like electric yellow like [554] this yeah that looks uh that looks [556] better to me and there are obviously [558] still a couple things that you can do [560] for this design the biggest one is [564] probably [566] um we could [569] change how thick the text is at various [573] places so this don't here can be pushed [577] out a little bit wider to better match [579] the width of the don't do this so if we [581] go like 30 for [583] example you can even go like 40 and then [586] we can change the size of this text to [588] like I don't know 40 or something like [590] that no we'll go a little bit smaller [596] actually and then we can take this same [600] color might even be able to apply it to [603] this and then make this one [607] white that looks a little bit better to [609] me I'd say we're looking pretty good the [612] last thing uh that you need for like one [615] of those really cool clickbaity [616] thumbnails is you need a little bit of [618] Shadow you need a little bit of effects [620] on this text so I'm going to go to the [622] text layer here and I'm going to add a [624] very small drop shadow it's going to be [627] a very slight drop shadow it's going to [629] be be very difficult to even tell that [630] there is a drop shadow there but I [632] assure you there is one if you just [634] slowly kind of toggle this you'll notice [636] that it is indeed toggled uh we're going [638] to make this a little bit smaller and [641] less [642] soft so right here the size is super big [646] so first of all we're going to make the [647] opacity much [648] darker let's give it a little bit of [651] distance make the spread just a little [653] bit [654] more and then bring the size down to [657] something manageable like this and now [659] that we can kind of see it we can bring [660] the opacity down for angle I'm going to [663] go kind of diagonally here like this [665] just to make it so that it looks like [667] there's a light coming from this top [668] leftand Corner okay so this is without [672] the shadow that's with the Shadow [673] Without The Shadow that's with the [675] shadow shadow gives it just a little bit [676] more depth uh to that text makes it a [679] little bit easier to read really depends [681] on the kind of design that you're going [682] for but in this kind of uh kind of [684] clickbaity design you know this type of [686] thing works best last thing I'm going to [688] do is I'm going to look for an arrow of [690] some kind so I'm just going to look for [692] a vector [693] Arrow let's do a curved [699] Arrow something [701] like [706] this and this is just an example here um [710] I'm not 100% sure whether or not this is [711] license so I'm really just using this to [712] show you guys uh I won't be using this [714] in the final design just drag and drop [716] that layer over [720] here unfortunately it looks like the [721] background is [723] uh is not really going to be cooperating [725] with us here so I mean I could fix this [727] in another method I'm just going to [729] create a new layer from that Black Arrow [732] like this and [733] then twist it up like this we're going [737] to make it a little bit [738] smaller just you can't really see all of [740] the [742] imperfections and then tilt it up so [744] that it's pointing at his face the last [746] thing we're going to do is we're going [747] to make the color equal to this color [749] here unfortunately it's going to be kind [751] of difficult to do that [754] smoothly yeah because you have a little [756] bit of uh I suppose I believe it's [758] called antialising or Alys sing on the [760] outside but we can help that by dragging [762] clicking uh holding alt and then [764] clicking the effects panel on the text [766] to drag that effect over to our Arrow as [769] well and that kind of defines the arrow [771] a little bit more makes it a little bit [773] better so couple last finishing touches [776] I'm just going to make this a little bit [778] bigger make it just a tiny bit more [781] position it a little bit [783] better and yeah I think that's it don't [787] do this with a big arrow pointing [788] towards them let how you get a design [789] that looks kind of like [791] this now all I'm going to do is export [795] this so exporting as a PNG all I do is [798] hold control shift alt and W if you're [801] on a Mac it's probably command shift alt [802] and W I'm going to call this Gordon [804] ramsy thumbnail [809] so that's exporting the file as a PNG [812] then I'm also going to save it as Gordon [814] Ramsey thumbnail.png [839] this and then upload a new thumbnail so [842] upload [846] thumbnail there you go that is now the [849] thumbnail of the video and dare I say it [852] looks a lot more professional uh well I [855] guess professional is kind of a loose [856] term um definitely looks a lot more [858] clickbaity I noticed that my personally [860] my My Views started going way up ever [862] since I started applying click bait [863] thumbnails like that but yeah I hope [865] that helps this is both a programming [866] and a design channel so I wanted to get [868] some design in and yeah I'm totally [870] watching South Park right now I'll be [871] doing that immediately after this cheers

Video: https://www.youtube.com/watch?v=1xZAaj6tgC0
Title: The Easiest Way To Add Analytics to a NuxtJS Project
[0] hey what's going on guys in this video i [1] want to show you how you can add [2] analytics to any nuxjs project [5] incredibly easily in just one step so [8] stay with me here [10] uh this is a little website that i set [11] up a while ago for content creation i [13] run a content agency called one second [15] copy [16] and for a while i was wondering hey how [18] do i add super easy analytics to this i [20] want to be able to see who's coming [22] where they're coming from i don't want [23] to like you know be super weirdly [25] invasive or creepy but i want to know a [26] little bit more about my users so that i [28] can curtail my content to them [30] and then along came the big problem how [32] do i do analytics with next a big issue [35] with analytics with next i think is that [37] there are like five million modules one [40] of them is a google analytics module [41] which is actually pretty good but i [43] found that it was pretty buggy and it [44] didn't really work for me uh 100 the [46] first couple times that i used it there [48] were also a couple of other analytics [49] services all and i was a big pain in the [51] ass so [52] here's how to make any analytics system [54] uh that is based off tags work with [56] next.js super easily all you got to do [59] is go over to your next [61] website here then in this case this is [63] my next website it's currently running [64] that dev server which is why you see it [66] pop up over here [68] and then you need to go to your root [70] folder so in this case this is my root [72] folder and you need to create a file [74] called app.html [76] this is essentially going to be a [77] template file that you can insert any [80] code into your html template and it'll [83] automatically populate now it's very [85] important here that your file looks [87] something like this in my case we have a [90] doctype html html with these two kind of [93] you know [94] squiggly brackets html attributes and [96] then another head with head attributes [98] where you put the head files and then [100] another head closing tag a body tag [102] where you put app this is where the main [104] app is going to live and then a closing [106] html tag [108] i'm going to include this in the [109] description so you guys can literally [110] just copy and paste this but make sure [111] that the file is called app.html and [114] then all you do after that is you grab [116] your code whatever you're using for your [118] analytics in my case i'm using these [120] guys called panel bear and panel bear [122] request that you put in the header all i [124] do is i just copy and paste their code [127] into this app.html and save [130] it's that easy you can imagine how any [132] other analytics platform like [134] uh google analytics or maybe [137] i think firebase yeah no there are a [139] couple of other analytics platforms that [140] are very tag based super easy kind of [142] copy and paste this is the exact same [143] thing you do with them just instead of [145] just putting it in the head for example [146] you might want to put half of it in the [148] body the other half in the head whatever [150] the documentation specifically refers [151] you to [152] but [153] in a nutshell that is how you do it if [155] you want to see it live on your website [157] all i need to do is go into that head [159] and then look for panel bear analytics [161] and you can see that exact same code [163] snippet was copied and pasted as well as [166] another little script tag here [168] it is honestly that easy just takes [171] maybe 30 seconds or so you update it you [173] push it to your repo and your analytics [174] will be live panel bear is already [175] reporting uh visit to my website as we [177] speak so i hope that was helpful for you [179] guys if you guys like this kind of [180] content and this new kind of style of [182] production that i'm doing i just got a [184] new setup let me know more than happy to [186] keep this stuff up i i earn i [188] earnestly hope to be publishing at least [190] a few videos a week on various next.js [192] and xjs topics without further ado i [194] will catch you guys later make sure to [196] like and subscribe

Video: https://www.youtube.com/watch?v=VUpk-aMnneg
Title: How to Create Beautiful Animated Buttons with TailwindCSS
[0] what's going on guys in this video i'm [2] going to show you how to make a [2] beautiful [3] animated glowing button just like this [6] using tailwind css this is really good [8] for call to actions [9] it's really good for nav bars and it's [12] really good anywhere you want to [13] indicate to the user that this is an [14] option that you really want them to take [16] in this case this is trying a app that [18] i'm building here [19] to help you make thumbnails for free so [22] i'm going to show you guys how to make [23] something that basically looks exactly [24] like this i mean it's going to be a [25] little bit different but [27] essentially i'm going to show you guys [28] how to animate things in tailwind [30] and get them looking really nice and [32] sexy so [34] to get started first of all this is [37] where we are we're in this little dark [38] call to action component that i made [40] uh and essentially it's just a full [42] width background gray 800 container [44] with a little bit of padding down at the [46] bottom it looks just like this [48] we have this reusable primary button [50] component which is [51] what i'm going to essentially be [53] building and that's just right over here [55] but instead of diving into that code i'm [57] actually just going to walk you guys [58] through it [59] basically from scratch so the first [61] thing i'm going to do is just make the [62] second div here with the little mt8 just [64] to pump us down a little bit [65] and i'm going to add a little bit of [66] starter text in this [69] just so you guys can see what this might [70] look like [72] awesome so this is us this is where we [74] are right now this is ultimately [75] where we want to be so first thing you [77] have to do [78] is let's just give this a little bit of [80] padding right off the bat so i'm just [81] going to go px4 [83] py2 actually let's go px5 py3 i found [86] with buttons it's almost always better [88] to be on the safe side and make it a [89] little bit bigger [91] let's also add a little bit of a [93] background color in this case background [94] indigo 600 [95] and let's make the text white and let's [98] see what this [99] whole spiel looks like already okay cool [102] so we actually have something that's [103] reasonably close already it looks like [105] this button is actually a little bit [106] wider so [108] uh looks like we turn this to a six [111] and maybe we'll make this background [113] just a little bit darker here to match [114] this up and i'll show you why this isn't [115] actually [116] the way the button works so it's a [117] little bit different than this but [119] essentially we have something right now [120] that's like a decent [121] i guess a width it's like a decent look [123] it's very similar to the ultimate button [125] that we're going for [126] there's one more little element that we [127] need to solve before we can start doing [129] the hover effects and this little [130] animated pulse thing that i have going [132] on [132] and that's this svg so let's really [134] quickly solve that as well [136] first thing i'm going to do is i'm going [137] to make this entire button [140] a flex div i'm going to add item center [143] that's just going to push everything [144] into the middle vertically of the div [146] and then i'm going to add a space x [149] let's do 2 for now this is going to add [153] a little bit of space between the [155] various divs inside of this button and [157] speaking of divs i'm going to wrap this [159] text here [160] in a span and then i'm going to [163] use this kind of flex effect to add an [166] svg [167] and then i'm going to style that svg [169] just using tailwind [171] so in order to find our svg uh i just go [173] over here heroicons it's [175] made by the the makers of tail and css [177] just a fantastic place to get pretty [178] much anything [178] and i don't even need to search anything [180] up actually because my arrow that i want [181] is right here just arrow narrow right [183] i can copy the svg just by clicking that [185] button and then it's literally as easy [187] as just [188] command v or control v to paste [192] now i'm going to add a couple classes to [193] this svg namely i'm going to make it [195] big or rather big enough that you can [197] see so width for h4 [199] and i'm going to save that and why don't [200] we just take a look at what that looks [202] like now [203] you see this actually disappeared [205] basically completely [207] uh and the reason for that is i don't [209] know [210] so let's add a quick justify center here [213] and uh [213] see whether or not this [217] ruined our beautiful button by any means [219] hold on i think if i were to take this [221] svg out [223] save this scroll all the way down to the [226] bottom [227] yeah there we go it's all the way over [228] here because this is a basically a full [230] width div [230] so why don't i actually go uh text [233] center and let's also mx auto this just [235] in case [236] that should pump that oops [242] should pump that all the way to the [243] middle there we go okay [246] so let's paste that svg back in awesome [249] i got that svg [250] now we're going to see that little arrow [252] pop up and actually it's a little too [253] wide so why don't we change that px6 to [255] a px5 [257] that should line up a little better i [258] think that's a lot more organic perfect [260] uh and looks like we're basically good [262] to go yeah that's basically it when it [264] comes to [265] adding this button i mean the text style [267] and all that stuff is [268] pretty simple i'm not using a font [270] that's bold or anything like that [272] although i could actually add font semi [274] but probably look a little bit better [275] so yeah let's do that a last thing i'm [277] going to do is just route a add a quick [279] rounded sm class to this to round the [281] corners a little bit just takes off some [282] of the harshness of that button [285] and let's add a little bit of shadow [286] while we're doing this too screw it [288] perfect now the real question is with [291] all that said how do i get this [292] really cool sexy kind of like a [295] ring that's animated and changing colors [298] and stuff like that [299] and it's actually quite easy to do with [300] tailwind i'll show you guys how [302] the real trick here is you want to use [304] the parent container [306] this button here and add a relative [307] class to it that just means that you can [309] put an absolutely position div [311] inside and it'll be positioned relative [313] to this div rather than any other div [315] here [316] so speaking of which we're going to add [317] an absolutely position div here [319] we're going to say it's inset 0 it's [321] width full height full [322] let's add an absolute class here too [326] and for now why don't we go bg [329] uh indigo 700 i don't think we're gonna [332] be able to see this anyway in all [333] honesty so that doesn't really matter [335] but then let's also add a quick ring [337] let's use some of tailwind's ring [338] utilities here [339] to add a ring that's [343] indigo 600 and let's say it's ring two [347] and let me close that div and let's see [349] what we end up getting perfect okay [351] that's exactly what we wanted we wanted [353] a style that was really similar to this [354] granted i think i want the ring to be a [356] little bit thicker in all honesty [357] because i think two is a little [358] uh it's not enough to get that really [360] sexy kind of look so why don't [361] pump that up to four and then while i'm [363] at it why don't i take that px5 and go [365] px4 [366] on the parent div there you go that [369] looks really nice to me [370] okay now obviously the issue is we see [373] this kind of like [374] oscillation and we haven't added that [375] oscillation and and we also need to add [378] a little bit of rounding on each of [379] these because right now it's not rounded [381] it's a really easy way to do that one of [382] the reasons i really like rings in [384] general [384] because if you add a rounded clasp to [386] the container the ring will [387] automatically kind of round [388] to fit your rounding so you don't need [390] to like you know add any extra border [391] radius or anything like that [392] it's one of the reasons i really like [393] tailwind [395] okay so with that said now uh what else [398] do we need to do to make this work well [400] it's actually quite simple [401] we now that we have this absolutely [403] position div [405] under this relative class or rather this [407] relative button [408] this is actually positioned on top of [410] that button which is why we don't see [412] that try for free text anymore [413] so we have to change what's called the z [415] index of that layer [417] to make it so that our button text [419] actually pops out on top [420] and it's really easy to do all you have [422] to do is just add a zero [424] on whatever it is that you want to be [427] behind and i usually just use a z10 [429] on whatever i want to be in front so in [431] this case i had a z10 to the text you [433] see the text pop up [435] and all you need to do is just add a z10 [437] on the svg as well [439] perfect so now we actually have that z10 [441] we can see the text that's popping up [443] uh and now we have you know this overlay [445] here [446] which is basically what we want okay [450] so when i remove that bg and it goes 700 [452] see if that changes things i don't think [454] it will yeah there you go [455] so that's not actually unnecessary i [457] like to minimize and remove as much code [458] that's not explicitly necessary so it's [460] always a good idea to go back and do a [461] little bit of refactoring [463] since your ultimate tailwind bundle size [465] is based off of uh [466] i think it's called tree pruning or [468] something like that which is basically [469] where it just goes in sees unused [470] classes [471] and then deletes all of those anyway so [474] we have something that looks like this [475] how do we get that cool kind of [476] animation look [477] it's actually super easy since we have a [479] div that's behind our other div [481] right we have that ring that's kind of [482] popping up if you want to animate it all [484] you need to do is add two [486] simple classes tailwind offers a way to [488] pulse things [489] spin things ping things and bounce [491] things [492] and in our case we want it to pulse [494] which is basically just like the opacity [495] changes [496] on a linear level from 0 to 100 over [498] time [500] all right and this is ultimately what we [501] end up with we end up with this like [503] nice kind of like [505] opacity change that's very gradual [507] somewhat linear and you can think of it [509] like a [510] uh periodic kind of like sine function [512] if you guys remember from school [513] the opacity is basically going up down [515] up down [517] up down and it's doing it pretty [518] consistently [520] it's something that draws the eye quite [521] a bit in my experience [523] granted we're still a little ways away [525] from getting that nice sexy sheen that [526] we have there and that's because uh we [528] should set the ring opacity [530] to something a little bit lower i think [531] 60 would probably look good yeah that [534] looks a lot better to me [535] and i also want to change the background [538] a little bit like i mentioned at the [539] very beginning just because i think that [540] there's a very subtle effect that a lot [542] of new designers are doing [544] it has a name but i'm not like a genius [547] designer so i don't like keep up with [548] all these design trends but essentially [550] instead of using a flat color for the [552] background of a button or really any [554] modal or any div [555] they use a very slight gradient that [557] almost just barely tricks the eye into [559] thinking that there's more going on than [560] there actually is [561] what do i mean by this well let me show [562] you intel and it's super easy to do [564] instead of like a bg of indigo 700 for [566] example [567] why don't i do a bg gradient let's do [571] two right then from [574] indigo like 600 to indigo [577] 700 it'll actually add a slight gradient [579] on our button [581] and you can see that gradient pop up [582] here in this case it's actually a little [583] much i don't actually like [584] that much so why don't we go 700 to 800 [587] that would be a little harder to see [590] yeah there you go that looks a lot [591] better to me and you can see there's [594] this very slight kind of like [595] effect here on the background you can [597] almost barely tell that it's actually [599] going on [599] but it adds a little bit of depth that [601] button and makes it look really good [602] and i actually see why i didn't add a [604] font semi bold to this button uh [606] when i first made it by the way and i [608] think that's just because it's it's a [609] little much there's a lot going on [610] so if i remove that font semi bold this [612] is ultimately the finished product this [614] is what we end up with [615] and it's uh it's a button that kind of [617] draws the eye you can use this anywhere [619] you want [619] in my case i use this very liberally in [621] all my call-to-actions [623] i use it right here my hero header and i [625] also use it in my nav bar and i use this [627] on [628] a bunch of projects so i hope that was [630] helpful guys i hope you like the style [631] of that [632] button if you guys have any questions or [633] anything like that feel free to let me [634] know [635] but taylon's animation library is [636] fantastic and i'm really happy to have [638] the [638] opportunity to use it in this way thanks [641] for watching [641] have a lovely rest of the day

Video: https://www.youtube.com/watch?v=nK4J7CguMFc
Title: How to Create a Frosted Navbar with TailwindCSS
[0] hey what's going on guys in this video [2] i'm going to show you how to create a [3] beautiful frosted nav bar effect with [5] tailwind css it looks really good [7] and if you want to see what it looks [8] like the end just feel free to skip to [9] the uh the final product at the end of [11] the video [12] but essentially this is just a little [13] app that i'm working on here and [15] we have this nav bar up top we've [16] created it it's really pretty it's also [18] like super sexy mobile responsive and [20] all that fun stuff [21] but assuming we have this nav bar how do [23] we add kind of frosted functionality to [25] it how do we [26] provide that really cool kind of blur on [28] the background [29] tailin doesn't actually have an organic [30] way to add blur to the background [32] but we can just use a simple css [34] property to kind of fix that up for us [36] so we have this nav bar just really [38] quickly walking you guys through it [40] this is what the template looks like i'm [41] using nuxt here which is a framework [43] that uses view [44] so if you guys are using just plain old [46] html just kind of remove all these view [48] uh remove the view file extension and [50] then remove like this little template [52] tag and it's basically the same thing [54] anyway the very first and kind of parent [57] div here the one that's kind of at the [59] highest level of the hierarchy [60] is this one we have a background of gray [62] 900 and it's width full so it stretches [64] across the entire width [65] of the page if i wanted to i don't know [68] make the background lighter i could [69] simply add an 800 to that and you'll see [70] the background would [72] get a little bit lighter so that's just [73] a little sanity check this is what we're [75] working with [76] inside of that we have another little [78] nav class here this is with semantic [79] html markup [81] highly recommend you guys use that and [82] that's just a little smaller container [84] about this wide that just contains uh [87] uh you know most of our navbar content [90] and the reason why most people do [91] something like this [92] because they just don't want the navbar [93] content to stretch across the full width [94] of the container [96] it usually looks a little bit better if [97] it's constrained and it kind of lines up [99] with the rest of your content [100] but anyway let's say i wanted to make [102] this a little bit smaller all i need to [103] do is change that max with screen xl the [105] max width screen [106] lg so you can see how that [109] lines up sorry my voice is a little [111] hoarse i i'm just coming over a cold so [113] hopefully it doesn't bother you guys too [115] much [115] but essentially how do we go from this [117] to a beautiful frosted nap bar look well [120] it's actually super simple [121] first thing you have to do is you have [122] to go to the parent container the one [124] that contains your background color [125] basically the thing that you want to [126] make frosted and [128] you have to add a background opacity [131] um let's do 80 for now just to give you [134] guys a brief look at what this [136] what this does but basically you have to [137] add this background opacity [139] utility class and you can change [140] whatever the opacity is by going you [142] know 50 60 70 80 90 so on and so forth [146] that one's really cool and it allows you [147] to add an opacity layer just to that uh [150] background rather than you know [151] everything and that's how you go from [153] what we had before [154] let me just see if i can do this real [156] time this [158] to that so [161] now we basically accomplished the first [163] issue here and that first issue was [165] how do we you know make the background a [166] little bit translucent [168] the frosting effect actually goes a [170] little bit further than that though [171] in order to add frosting we have to add [173] another class here called [174] bg clip padding and then let's [178] add our own custom background filter [181] class or like let's do blur filter [183] actually i think i'm doing blur backdrop [185] filter or something like that [187] so let's just call it blur backdrop [188] filter and now we're going to define [190] that class elsewhere [191] in our css so if you guys are doing this [194] in [194] you know like a simple html file you [197] then you guys would have a style sheet [198] or you guys could just do that at the [199] top of the page [200] in my case the way the view lays things [202] out we do it a style tag down at the [203] very bottom [204] so i've actually already created the [205] glass here i've called it backdrop [207] filter [207] but let's say i want to create a new [209] class called blur backdrop filter i [210] simply need to add these two [212] specifications the first is backdrop [214] filter [215] and the second is i believe specific to [220] i think that's mozilla firefox so it's [221] not like a polyfill rather it's just [223] like [223] more functionality on different browsers [225] because not all browsers support this [227] natively [228] in this case we have a 5 pixel blur but [230] we can ramp up the blur if we want let's [232] stick with five and let me show you guys [233] what it looks like [234] so we have that blur backdrop filter [236] class on the main apparent div and then [238] we have that [238] style defined down here and this is what [240] it ends up looking like if you guys pay [242] careful attention to this [243] you'll see that it actually blurs uh [245] what passes in the background here right [247] see that makes sleek social thumbnails [248] quickly you can actually see that [250] a little bit blurry let's say we want to [252] make it a little more blurry let's say [254] we do eight pixels you'll see that this [257] will [257] blur out even more typically for like a [260] good frosted look i like something [262] between like five maybe six [263] let's do six uh and i've just found that [267] to you know look the sexiest [269] part of the appeal of a background [271] that's frosted is you want people to be [272] able to get that [273] kind of like perspective or depth effect [275] as they go down and in order to do that [276] you still want to [277] allow them to kind of make out the [278] content at the back but anyway that is [280] it guys i hope this tutorial [282] was helpful just to summarize it's a bg [284] opacity class [285] a bg clip padding class and then you can [287] make your own backdrop filter a blur [290] class [290] with these properties and you are good [292] to go if you guys have any questions [294] feel free to ask me in the comments [295] section below i'm more than happy to [297] help [297] thanks so much and have a great rest of [298] day

Video: https://www.youtube.com/watch?v=tiCxOKfZcas
Title: Building the Sketch.com Landing Page with TailwindCSS
[0] what's going on guys in this video we're [1] doing a tailwind rebuild of the sketch [3] landing page this is an absolutely [5] gorgeous landing page it's fantastic for [7] basically [8] any software as a service you could use [10] this as like a business landing page you [12] could do so many things with the layout [14] that they have here [15] and we're going to be building this [15] entirely until in css uh and [18] in my case i'm going to be using vue but [20] so long as you guys have tail and css [22] installed [22] you guys can follow along with whatever [24] framework you're using [26] so a couple things we're not going to be [27] doing in this rebuild we're not going to [29] be making this really sexy animation [30] that we see on the right hand side [32] as well as the little lines that pop up [34] back here because that's kind of out of [36] the scope of till in css [38] we are going to be doing that [41] we're not going to be using this [42] javascript effect so as you guys see if [44] i scroll down here i get that like [45] slight little [46] change in orientation again that's just [48] javascript not tailwind [51] and i think the last thing we're not [54] going to do is this [56] this svg kind of overlay on top of this [58] div [59] that to me just seems like a massive [60] pain in the butt yeah and as you kind of [62] scroll [62] you know get closer different things pop [64] up so we're not going to be doing that [65] but aside from that basically everything [67] else is going to be done and the end [69] result is going to look remarkably [70] similar [71] so without further ado let's head on [74] over to our development environments [75] i've already spun this up here in [78] vs code i have already done a couple of [81] configuration settings to [83] this development environment namely i [84] went into our tailwind config.js [86] and just added this little snippet [89] what i'm doing here is i'm extending the [91] base theme [93] adding some extra colors and then [95] defining another color called [96] carrot and here are a bunch of hex [98] values for various [100] various numbers we have 50 f9 f4 e6 100 [103] so on and so forth all the way down [105] what this does is basically just going [106] to give me a color palette that [108] corresponds more closely to the private [111] sorry not private primary kind of colors [113] that they're using here because [114] tailwind's colors don't really match 100 [116] and that's fine [118] so on top of that i also added a font [122] now sketch uses a very particular font [124] it's custom and it costs a fair amount [126] of money so i'm not going to buy that [127] but we are going to get probably 98 [129] of the way there just using a free font [131] from google called [132] inter and it is super easy to get [136] if you guys are using nux i just use a [138] google fonts kind of wrapper [140] but essentially all you have to do if [142] you want to install it on your project [144] and you're not using a framework is [146] go to that page click select this style [148] and you'll get this little css snippet [150] that you can just then add to your [151] website or if you are familiar with the [153] import syntax you can do that too so in [156] my case [156] when i go over to my next file here i [159] think all i did was i just added a [160] custom class called font display [162] with the font family of inter and [164] sanserif as the backup [166] that is all you have to do basically to [168] be on the same page as me [170] so without further ado why don't we [171] actually start breaking down this [172] website and [173] uh getting it built now first thing i [176] see right off the bat here is let's [177] start with the [178] navigation bar first thing i see is this [181] looks to me like it's a full width div [184] all the way across [185] with a smaller div probably like [189] 70 or 80 percent of the way uh the [192] entire width of this page [193] nested in the middle and then inside of [196] this there are what looks to me like [198] three containers there's this container [200] on the left this other container in the [201] middle [202] and then another one on the right and [203] each of these containers look to me like [204] they're flex aligned [205] with a little bit of spacing between [207] each column so if i were to do something [209] very similar to that i would start by [212] first creating [213] my master kind of container this one's [216] going to go across [217] the full width i'm going to just give [220] that a quick background color just so we [221] can see [222] and why don't i just say py2 just so we [224] can add a little bit of [225] spacing here okay great so this right [228] here is essentially the div you'll see [229] that [230] instead of py2 let me just go like h32 [232] or something it'll be more realistic [234] yeah there we go you'll see that this [236] spans across the entire width of the [238] page [238] inside of that we're going to make [239] another div we're going to make that a [240] little bit smaller [242] so let's do another one this time let's [244] go bg blue 200 and why don't we go max [247] with [248] let me see is this 7xl oh let me add a [252] little bit of a height to this too h32 [255] yeah that looks to me like it's about [256] 7xl and we'll center it with mx auto [259] that's going to push it right in the [260] middle of the page [260] and let's just see how this width looks [262] i think that's a little too big [264] so we're going to do is we're going to [265] turn that 7 into a six [268] and ooh that is basically remarkably [271] accurate perfect [272] okay now inside of this blue div we're [274] going to do a couple of other things [275] we're going to create [277] three kind of subdivs to me it looks [279] like they're flex [280] aligned to justify between that just [282] means that basically each of these [283] containers are being like stretched out [285] as far away as possible from [286] from every other one so let's do that [290] here inside of this blue container let's [293] do bg [294] yellow 200. um [297] let's start with that and we're just [299] going to do h 32 on all of these for now [301] because we don't actually have any [302] content [303] and i'm just going to copy and paste [305] this three times changing the yellow to [307] indigo and then [308] uh do they have a teal color no it [310] doesn't look like they have a teal color [311] cn [312] no let's just do green and then [315] on the parent container because right [317] now this is just gonna stack them all on [318] top of each other [319] on the pair container why don't we go [320] flex and then i'll also add justify [322] between so that should [324] basically take every single sub [328] element and just push it all the way to [330] the left and the right [332] now we don't actually see that here and [334] the reason for that [335] is uh i don't know so let me add a [338] little bit of text to each of these and [340] see if we can make that [341] pop up i'm going to type menu here and [344] on the right we're going to type buttons [346] let's see if that changes things yeah [347] there we go we just need a little bit of [349] content in there to stretch the width [350] out because otherwise the width just [351] automatically [352] goes to min so that to me actually looks [355] pretty good from a layout perspective [357] we have our logo and stuff like that on [359] the left we have a little menu in the [361] middle and then we have [362] the buttons and stuff like that kind of [363] call to actions on the right and there's [365] actually a really sexy little hover [366] effect that goes on there so i'm going [367] to enjoy making that [369] so why don't we start with the leftmost [372] component here and that's just the [373] title sketch with what looks to me like [376] either a png or svg of their logo [378] and i'm just going to cheat i'm just [380] going to like copy and paste whatever [381] that is [382] so this is very clearly an svg so you [384] guys can see there's a bunch of paths [386] so why don't we just go to the parent [387] svg element here [390] and give that a quick copy and paste i'm [392] going to put that [394] in here that element and just quickly [399] kind of command yeah perfect that looks [402] good to me [402] okay great right now we're using fixed [405] width and height properties but [406] just because we're already using [407] tailwind let me get all their classes [408] why don't i just go h32 [411] sorry h8 with eight use tail one class [414] instead [415] and we'll see the height and width [416] basically didn't change at all and [418] that's because the height and width is [419] is the same when you're doing h8 [421] w8 i believe it's like 32 pixels now [423] that is awesome i'm noticing here that [425] there needs to be a little bit of [426] padding between the top of the page [428] and the logo so i'm just going to add a [430] little bit of y padding onto this [432] parent element let's go py3 let's see if [435] that works [438] yeah decently close decently close why [440] don't i actually add this onto [444] the child elements just in case we apply [447] any colors or anything like that later [448] and then turn this to py5 [450] that should be better awesome yeah that [452] looks good to me [454] now on top of this svg we also need to [457] add [458] a piece of text here that's a sketch so [461] why don't i go h2 [462] and just type in sketch real quick i [464] also added a space x2 here just to space [467] out [468] what we were going to be flex aligning [469] so if i go back here you see that we now [471] get that little flex line and it looks [472] to me like it's just about space x2 so [474] that was quite good [475] unfortunately though it needs to be [477] quite a bit bigger so why don't we go [478] text [479] 3xl and i believe this is going to be a [482] font bold although i may be mistaken [484] yeah i'd say that's reasonably about the [486] same size now is probably the time for [488] me to add [489] the font display class by the way so why [491] don't i type font display in and see if [492] we can get something closer [495] yeah there you go much better we're [496] going to turn that font bold into a font [498] semi-bold [500] and we're going to also add tracking [502] tighter to bring [503] that text in together just a little bit [506] and you know what let's actually do 2xl [507] that'll be better [509] yeah there you go looks a lot more [511] realistic you'll notice that [513] the spacing is a little bit off i think [514] it's a little bit higher [516] so what i'm going to do is two things [518] i'm going to add [520] a text gray 800 just to make that a [521] little darker and then i'm going to go [523] to the parent element here and i'm going [524] to go item center [525] and that should like give us a couple [526] pixels basically and you'll see this is [529] being pushed all the way down to [530] the middle of this because we've [531] explicitly set height properties so now [533] we can just take all those height [534] properties off [535] oops don't take all of them off there [538] you go [539] awesome so that to me looks pretty [541] freaking good in all honesty [543] in terms of colors and stuff like that i [545] mean i'd say that's probably 80 of the [547] way there they're just a little bit [548] darker while also being a little bit [549] lighter than uh [550] the text gray 900 class so we're just [552] going to leave it there and then kind of [553] move on [555] next thing we got to do is we have to do [556] these menu elements we have four [558] designers four teams resources and [559] pricing [560] it looks something like they're spaced [561] out maybe like i don't know space [564] x6 or something like that so what we're [566] going to do is we're going to go into [567] this menu [569] and we are going to space this out flex [573] then we're going to space x let's do 7 [576] for now and then i'm going to create [580] a actually instead of that why don't we [583] do this [584] we'll create a ul [587] instead of this div [590] and we're going to do let's just do four [593] allies there [594] because there are one two three four [596] things perfect and inside i'm just going [598] to add like example [600] example example [604] example and let's see what this ends up [606] looking like okay so we're stacking them [607] all on top that's because we haven't [608] added a flex and let's also add a space [611] x6 class to this [613] and yeah we're actually getting decently [614] close why don't we go spacex 8 instead [617] though that looks a little better [618] to me perfect i'd say that's very [621] reasonably close to the same [622] width now the text does look a little [624] bit smaller so let's try text sm [628] and why don't we also center this to the [631] div [631] that we have that's going to bump them [632] down a little [634] and let's just start entering that text [636] for designers [638] second one is for teams next one is [641] resources [642] and the last one is pricing let's break [645] those out [646] good also the font looks like it's [648] semi-bold so we're going to go [649] uh font semi-bold [653] and let's do text gray uh [656] i think this is probably 700 yeah we'll [658] give that a try [661] yeah that looks pretty decent looks [662] pretty decent i think they're at a size [664] that's probably halfway bigger than [666] sm right between sm and md for us so [669] we're just gonna stick with this but [671] aside from that looks pretty good to me [673] the letters might also just be spaced [674] out a tad more [677] but in all honesty i'm not going to [678] nitpick because i want this to be a [679] seven hour video so [681] let's roll with that and this is also [682] going to be pushed over a little bit to [684] the left when we spaced out this div so [686] that should fix that i'm going to start [689] removing these [690] backgrounds that i've added just because [693] i don't want this to [696] get in our way of comparing the two and [698] so when you remove them you can see this [699] is actually getting decently close i [702] think that the [702] centers of these are a little off [704] probably because i did not add flex to [705] the [705] oh sorry i didn't add item center to the [707] parent flex container here [709] so i item center this these should be [711] pumping push down just a little bit see [712] that buttons just went down a bit [714] and this is a lot more a lot more clean [716] in my opinion [718] there's a little svg here that's spaced [721] a little bit [721] to the right of resources so in order to [723] get that i'm gonna go to heroicons [725] i'm just gonna go i think chevron down [727] right yeah chevron down [729] right here and i'm going to [732] basically just flex align this list [734] element and then [735] i don't know space it out by like a [736] couple pixels so if i go to this list [739] element where it says [740] resources i'm just going to go flex [741] spacex let's just do one [744] and then i'm going to make an h3 with [746] resources [747] and then i'm going to add that svg [751] and i'm going to add just a quick little [753] class let's just do [754] width for height 4 and just see how that [755] looks [757] yeah it looks decent i'll also add an [758] item center to this [761] parent div and that's just going to bump [762] it out just a tad there you go [765] yeah that looks good enough for me all [766] right let's get moving on these buttons [768] on the right so [769] that is the last thing we have to do [771] here to finish off the snap bar [773] let's go flex let's space these out by [775] uh [776] let's say three and let's just write [779] sign in just two let's do two actually [784] let's just do uh sign [787] in and then i'm gonna make another one [792] that says try for free [797] awesome and i'm kind of a stickler here [798] so i'm going to capitalize that [801] good that looks fine to me looks like [803] the text is actually a little bit [804] smaller so why don't i go on this parent [805] element just type [806] text sm should get us a little closer [808] nice [809] and let's get started with the styling [810] so first off [812] this has text carrot 500 i believe [816] yeah that looks reasonable to me i'm [819] gonna go font [820] semi-bold on this and [823] that should honestly be it yeah it's [825] basically good enough i mean obviously [827] the font's not the same [828] you'll notice that it's slightly [829] different that's okay we've already [830] talked about that [831] looks like there's a a brief little [834] hover effect that makes a little lighter [835] so all we have to do for that is just go [837] hover [837] text carrot 400. so we're basically [840] saying when we hover over this element [841] just make it a little bit brighter [843] and you can also make that a little bit [845] slower by adding transition [846] just to enable all transitions as well [848] as a duration property [850] that basically gives you the number of [851] milliseconds for whatever transition you [852] want so in my case now it's 200 [854] milliseconds from when i hover over it [855] to when it gets a bit lighter [856] see it's just a little bit smoother than [858] whatever it was before [860] which is uh very close to what they're [861] doing next thing we're going to do is [863] we're going to make this button so it [864] looks like the text is white looks like [865] the background is the same color as the [867] sign in [868] and it looks like a little hover effect [869] over it too which i'm going to get into [871] in a second [872] so why don't i add a class let's go [876] background carrots 500. [879] let's do px3py2 that should be [883] reasonable [884] uh rounded sm shadow sm [888] and then what [892] transform yeah let's do that and then [894] hover [895] negative translate y why let's do one [900] yeah let's see if that works [903] awesome okay cool so we're probably 90 [905] of the way there on all honesty [906] i didn't add an item center to this [908] which is why we got that weird spacing [910] so added that [911] problem solved i also didn't add text [912] white to this let's go text white [915] and then font semi bold too that should [917] be more reasonable [918] there you go you'll also notice that [920] when i hover over this i get that real [922] slow kind of rise whereas this is a very [924] fast rise i don't like that fast rise [927] so again we can say we can uh save that [929] by just going transition [931] and then putting in a reasonably long [932] duration so i think they're probably 300 [934] or even 500. [935] i added 300 here and you'll see that [939] that kind of mirrors it unfortunately [941] this is a lot smaller so let me see if [942] we can go even smaller than [944] translate y1 i think we can do they have [946] a px yeah they have a px [948] all right let's see this perfect much [951] better [953] okay in addition to this hover effect it [955] looks like they also [956] add a little bit more of a shadow and [958] with tailwind's new [959] utilities we can do that really easy [960] let's just do [962] shadow large on hover [965] so that's theirs this is ours [969] actually the colors look a little bit [970] off now that i'm looking at it i think [971] all the 500s need to be changed to [973] 600s let's see [977] yes actually they totally do perfect so [980] why don't i just change these [981] backgrounds to 600 and then [983] i can hover this to 500 yeah there you [986] go that's a lot more realistic [987] i was wondering why that was off uh okay [990] great [991] and the last thing we want to do is on [993] hover we want to make the background of [995] this [996] a little bit lighter so that it looks [998] like this now [999] and this looks like that perfect i'd say [1001] that's reasonable [1002] i think if i were to go rounded medium [1004] on this it would be a little too [1006] rounded so i'm just going to stick with [1008] yeah it's way too rounded i'm just going [1009] to stick with small [1011] and that's going to be a decent [1012] approximation okay guys so [1014] zooming out this is what there's ours [1016] looks like [1017] and this is what theirs looks like [1019] you'll notice that there are a couple of [1020] differences [1021] of course it looks like our roundedness [1022] is quite a bit smaller and actually [1024] these buttons need to be just a bit [1025] bigger actually i think the font on this [1026] in general needs to be a little bit [1027] bigger [1028] why don't i actually uh add py3 to this [1032] just see if that looks better yeah i'm [1036] gonna go [1036] px4 actually our buttons are just gonna [1039] be a little bit beefier but that's okay [1041] yeah so aside from that uh i believe [1044] that's basically it [1045] i can make these cursor pointers i mean [1048] i could just turn all these allies into [1050] uh [1051] i could just nest all these within a's [1053] but i'm not going to do that for now [1055] i'm just going to go class cursor [1056] pointer that way anybody anytime i hover [1059] over any of these [1061] you're going to get that cool kind of [1062] you know [1064] cursor pointer effect same thing that [1065] you would get if you go over here well i [1067] guess one more thing i could do is i [1068] could change the hover states here these [1070] go pretty light when i hover on them [1071] so if i were to go back here let's just [1073] do cursor pointer uh [1075] hover let's just do text gray 400 that's [1078] probably it [1080] yeah text grade 400 looks about right [1082] and we'll go transition duration 200 for [1084] those [1086] so now we have basically the same or [1088] very similar [1089] hover effect on each of these elements [1091] very cool stuff [1093] okay so now that we're done with this [1094] nav bar why don't we get started on this [1096] hero header section down here [1097] like i said i'm not going to be creating [1098] these uh these beautiful animations i [1101] think they're amazing i just don't have [1102] the time or where with all two [1103] and this isn't something that really [1104] tailwind is good for but [1107] we can get started on this instead [1111] yeah let's do that and then once i make [1114] once i get down to here i'll just start [1115] mobile optimizing it so that [1117] you'll see how responsive it is on each [1118] different breakpoint i usually don't [1120] like to [1121] make things responsive one at a time i [1123] like to just add a few components [1124] together [1125] make sure they all mesh well and then i [1126] can worry about that responsiveness you [1127] know after three or four [1129] that's that's what my workflow like [1130] looks like but yours may differ [1133] regardless let's get started looks first [1135] of all like there's a decent margin here [1136] between these divs so [1138] this is probably pushed down like mt24 [1139] or something like that then you have [1142] what looks to me like a [1145] this could be a flex layout let's see [1147] how this looks when we [1149] push it together [1152] yeah this could be a flex slip i mean [1153] you could do this in so many different [1154] ways you can do this with grid [1156] flex i like grid so i'm just going to [1158] use grid for this but [1159] essentially we have two divs one on the [1162] left one on the right [1163] this left one looks like it's flex call [1166] or i guess just block too [1168] uh you have like a very big heading then [1170] underneath it you have a little bit of a [1171] margin [1172] some smaller text then you have a decent [1174] size chunk margin [1176] with a flux container that has two [1178] buttons [1179] they are each spacex like three or four [1181] maybe and then you have a bunch of [1183] really tiny text down here [1184] now on the right hand side you just have [1185] this animation or really just this image [1187] in our case we're just going to apply a [1188] screenshot [1190] so let's do that i'm going to scroll all [1193] the way down here [1194] uh you know what why don't i actually [1195] make this semantic [1199] yeah there you go so now we know that [1201] that's a nav bar rather than just [1202] another div [1204] so it's going to be good because it's [1205] going to turn quite long so i just want [1206] to know where to start and stop [1209] uh why don't we just do [1212] nav bar there you go now we're going to [1215] go [1215] down here and do hero header [1219] all right so first thing we have to do [1221] is like i said we have to make this div [1223] looks like the width is going to be the [1224] same as before so we're just going to go [1226] max with 6 xl [1228] um i'm also just going to center align [1229] this with mx auto [1231] and why don't i just go bglo 200 and h64 [1233] for now [1235] you guys will notice you'll see that [1236] when i do most of this [1238] i uh oh sorry the template root in this [1240] requires [1241] exactly one root element that's just a [1244] little [1244] hand-me-down from div from view or nux [1247] so i'm just going to add that [1248] you'll notice that the way that i [1249] usually design things i add a bunch of [1250] these like placeholder divs just to see [1252] where things are [1253] so in this case i added this yellow [1254] placeholder div just so i could see [1256] looks i need to bump this down now with [1257] like an mt maybe 24. [1259] let's give that a go wow that was [1262] remarkable i am scarily good at that [1264] okay great so let's turn this let's use [1268] grid for this [1270] i'm going to if i had to guess i'd [1273] probably say this is like seven [1277] grid columns with this taking up four [1279] and that's taking up three [1280] so let's let's try that we're gonna div [1282] class uh with full h full bg pink 200 [1286] just to see the first one [1289] and for the second one let's just turn [1293] this [1293] to blue i've just created these two oh [1296] let's also go call span four [1298] this one's going to be call span three [1300] this is just going to tell us how many [1302] columns that each div should span [1305] so this is not [1308] apparently aligned right oh yeah because [1309] i didn't add grid make sure to add grid [1312] folks [1313] okay that actually looks really close i [1316] think [1317] i think that honestly might be it i [1320] believe we could probably get this a [1320] little closer if we wanted to but [1323] that to me looks fine in terms of [1324] spacing and layout [1327] you'll also notice that when these guys [1329] get a little bit smaller what looks to [1332] me like [1333] what is that the large break point it [1334] just turns to one grid column with one [1336] thing on the top one thing on the bottom [1338] so why don't we just add that in right [1340] now so don't forget uh grid call 7 [1342] when we are on large displays and then [1344] anything else let's do grid calls [1346] one and let's also only add this call [1348] span [1350] four and three on uh large displays and [1352] then otherwise let's do [1353] call span full that way they'll just [1355] both span the full width of each column [1358] so if i save that now we should have [1359] very similar functionality [1361] we'll scroll down to the large [1362] breakpoint which is [1364] here so i think it's a couple pixels [1367] smaller but yeah then we have that [1369] functionality where [1370] one of them goes to the top the other [1372] one goes to the bottom awesome [1373] exactly we're looking for so now we [1376] have to work on the actual text let's [1379] start with a big h1 because this to me [1381] looks like the [1381] main heading and then underneath we have [1385] uh what looks to me like let's just do [1387] an h3 for this [1388] i wish my emmett was working but it's [1390] not underneath we'll have another div [1392] so let's just do div class bg uh [1395] i don't know indigo 200 [1399] and inside of that i'm just going to put [1401] two buttons [1402] really quickly let's just do an aahref [1405] of this class is equal to bg [1408] caret 600 px4 py3 [1411] text sm actually no let's stick with tex [1414] md [1416] shadow sm and rounded small [1420] and then let's also just add this text [1422] so try for [1423] free [1427] and i'll also flex align this space x3 [1431] add another div here uh and then i'll [1434] just make that to say [1435] c pricing instead of bg carrot why don't [1438] we go bg white [1439] add a border real quick i think that's [1441] actually just border one [1443] let's just do border grade 300. there [1445] you go that should be reasonably similar [1448] yeah kind of not really maybe rounded md [1454] yeah that looks a little bit better and [1456] we'll work on that uh [1458] we'll work on that more in a second but [1460] okay uh [1462] i guess i'll just add like 10 [1465] things let's do five things of lorem [1466] here and then another like [1468] 15 things alarm that way we can just see [1470] what this all looks like [1472] okay and let's just make this really big [1476] because it's the h1 why don't we go [1477] text 5xl see what that looks like [1482] good size bad size yeah i'd say it's [1484] pretty decent [1486] let's go text 6xl font bold [1491] and why don't we just add font display [1493] to this [1494] that we can get a much more realistic [1496] looking font that looks good to me [1498] you'll notice that the text is a very [1500] bunched together on this sketch.com [1501] landing page whereas ours is a little [1503] bit more spaced out [1504] all we need to do to fix that is just [1505] that add a tracking tight [1507] or even tracking tighter so i'm going to [1509] add tracking tight to this h1 [1511] see what that looks like yeah that [1513] honestly looks pretty good [1515] i think good enough for me now to just [1516] copy and paste this text over [1518] and i'm just pasting into my url bar [1520] it's like a hand-me-down from when i [1521] used to do a bunch of wordpress [1522] developments [1523] uh because i really do not like when [1526] formatting is copied over [1528] all right this looks pretty good to me [1530] honestly i think their text is a little [1531] bit bigger so why don't we go [1532] 7 xl let's just see if that works yeah [1535] there you go that looks a lot [1537] a lot more accurate and let's get [1538] working on this [1540] paragraph or rather this h3 down here [1544] looks to me like this h3 is probably [1546] like text 2xl [1548] text gray 700 i would say [1552] and the tracking to me also looks tight [1556] yeah that looks fine and let's go mt3 [1558] bump that down just a bit more [1560] okay also looks like the leading so the [1564] space in line height looks a little bit [1567] bigger than ours [1568] so i'm just going to add a class to fix [1571] that let's just do leading [1572] uh relaxed that should space this out [1575] just a bit more [1577] yeah there you go that looks fine to me [1578] all right let's copy and paste this text [1580] over [1583] do this and give that a quick save how [1585] are we looking we're looking pretty good [1588] all right next up we're going to work on [1589] this div underneath with these buttons [1591] so this looks pretty big i'm going to go [1593] mt8 see if that's bumped down properly [1596] yeah that looks decent that looks decent [1599] you'll notice like the text isn't [1601] wrapping exactly the same [1603] and i think that's actually because of [1605] uh [1606] that's because of the tracking on this [1609] let's actually remove tracking tight and [1610] see if that works better [1613] yeah a little bit a little bit you'll [1614] see that there looks to me like there's [1616] a little bit of padding on the right [1617] hand side here [1618] and that is what's making theirs roll [1620] over a little faster [1622] so what we can do to do that is go to [1625] the div that is the parent element of [1627] all this stuff right it's the left grid [1629] column and why don't we go large screens [1631] padding right uh eight see how that [1634] looks [1636] there you go i'm pretty sure padding8 is [1637] basically exactly what they had [1639] and that's what ours looks like that's [1640] what theirs looks like next up i'm now [1642] going to space out these buttons a bit [1644] uh they're a little bit too close and [1646] i'm also going to work on like just [1647] getting that sexy hover effect down as [1649] well as [1650] just the general look so now i can [1653] remove these bg yellows bg [1655] pinks and bg indigos that i'm not going [1658] to drive myself insane [1661] and i'm going to space these out just a [1664] tad more so i got to go over here [1667] space x4 and then i'm going to change [1671] the color of this to white [1676] and then we'll go font semi-bold [1681] and i'm also going to add rounded sm [1684] oh it looks like we might have already [1685] done that [1692] yeah i'll tell you what why don't we [1693] just stick with sm everywhere so i'm [1694] going to go over here to this other [1696] button [1696] and go sm and [1700] now i'm going to add a little bit of [1702] extra space here [1704] so this is going to be px5 instead of a [1706] px [1708] 4 there you go and i'm gonna do the same [1710] thing to the other button as well [1712] so i'm gonna go px5 [1716] and that looks pretty good to me the [1719] shadow's a little bit too big on this [1720] why don't go shadow sm and then [1722] on hover we'll go shadow md [1726] yeah that looks much better and then we [1729] just have to do the same thing that we [1730] did to our old button up here [1732] down here so why don't i go back and [1736] just copy that over [1738] hover translate y px hover shadow lg [1741] hover [1741] bg carat 500 and if i use this [1745] more than one more time i'm just going [1747] to create a component class for this [1750] stuff [1752] that should work [1756] that looks good to me i'm just going to [1758] make sure to add the transition [1759] property and duration 200 on that [1766] cool so it's a little bit different oh [1768] yeah i got to do the same thing down [1769] here [1770] transition duration 200 transform [1774] hover negative translate ypx and then [1777] what it looks like the text changes a [1779] little bit too text goes just a little [1780] bit lighter [1781] so why don't we go text gray [1784] i don't know 700 see if that works [1788] yeah it looks pretty good to me i'll [1790] also add the font semi-bold let's just [1792] go tracking tight on each of these [1799] yeah yeah it's pretty good it's pretty [1801] good i could also change the border make [1802] that a little bit lighter [1805] perfect and i guess the last thing i can [1808] do is when i hover the border gets a [1810] little bit darker so i'll go hover gray [1811] 300 [1814] cool cool cool all right i think that's [1816] enough of me being a stickler with these [1817] goddamn buttons [1819] but aside from that if we zoom out it's [1820] actually looking pretty good it's [1821] looking quite similar [1822] we only really see these massive [1824] differences when we're zoomed in 50 [1825] times like i [1826] clearly like to be next thing we're [1828] going to do is we're going to add this [1829] fully featured 30 day free trial [1831] so i'm just going to copy this go [1832] underneath this button div [1834] and just do like a ptag [1837] looks to me like this is probably going [1839] to be a little lighter so let's go text [1841] gray 700 [1842] text ss [1846] yeah even lighter than that let's do a [1848] text gray 500 it looks like this [1851] wraps over probably right around here so [1853] i think that's probably like texts [1855] a max width 2xl let's see who max with [1858] 2xl let's also add [1859] 3 units of margin top yeah even closer [1863] man [1864] let's do empty uh max with md [1868] hell i guess we're doing max with xs [1871] perfect that actually looks really close [1874] last thing i'm going to do is just go [1875] leading [1876] relaxed space this out a little bit [1879] and yeah we're like literally 95 of the [1881] way there okay it looks great to me [1883] now i'm going to add an image on the [1885] right hand side here like i said before [1886] they have an animation [1887] i'm just going to use a screenshot i [1889] think i had [1891] this one here so sketch underscore [1894] screenshot.png [1896] so we have our grid [1899] here this here is the left side and then [1902] this here is going to be the right side [1904] so for this all i'm going to do is [1906] create an image [1908] put my source as assets [1911] sketch what are we doing here screenshot [1914] i believe [1915] dot png and then for class i'm going to [1917] with full height full [1919] objects let's do object cover and let's [1922] see how that looks [1923] i think this is the right folder right [1925] assets yes sketch screenshot [1929] okay so probably not the right oh never [1931] mind okay that worked out [1934] all right well i think that worked [1936] fantastic we're probably like 95 [1937] of the way there hell i think we might [1940] actually just be done with that i can't [1941] really see any major differences [1944] the background color here changes a [1945] little bit you'll notice when the lines [1948] appear on the page otherwise it kind of [1949] goes a little bit brighter we're not [1950] going to [1951] worry too much about that because we [1953] can't [1954] fix that but [1957] i might just be able to add a bg gray [1960] 50. that might [1962] be a little closer yeah no the [1966] background on this is [1967] white so i'm not going to go in there [1968] and edit that out [1971] we're not going to worry too much about [1973] that and [1975] awesome okay so that's what that looks [1976] like now that we're done that i can [1978] actually worry about you know mobile [1979] optimizing a little bit [1981] if we go on sketch's website and we [1984] start bringing [1984] the width of the page down you see that [1989] a couple things happen here so [1992] the nav bar changes quite considerably [1996] in addition to that we also have that [1998] kind of wrap behavior that we saw with [1999] the grid columns [2001] if you look at ours right now we go [2004] bigger [2004] we got that wrap but that wrap the [2006] element is actually absolutely massive [2009] and there's also a little bit of like [2012] cut off of the image as we go smaller [2014] and smaller and smaller [2015] we also need to add padding on basically [2016] everything so i'm going to do that as [2018] well [2020] and we need to make this image a little [2022] bit smaller when we go [2024] all the way down so instead of like [2025] width full for example [2027] we should probably just go with auto so [2030] let me start with that [2032] actually let me just take both of these [2034] out [2037] save that and why don't we actually just [2040] do [2040] uh max with like let's do lg for now [2046] and then lg we'll just go max with [2050] full perfect yeah that looks good to me [2053] we'll also go mx auto so that's going to [2056] push this into the middle [2057] and then we're also going to do that [2058] with this [2060] div to push this into the middle a [2061] little bit although it's already spaced [2063] out fully so it's not actually going to [2065] do much next thing we're going to do is [2067] i'm going to add padding on everything [2068] so [2069] i'm just going to add a little bit of [2070] padding to every single element [2072] on lg displays why don't we just do like [2074] px2 and otherwise we'll do px6 let's see [2076] how that looks [2080] let's get reasonably close to similar [2084] looks like they have looks like they [2087] have a little [2088] bit more in all honesty [2093] if i bring this down to 840 [2097] this is ours that's theirs so it looks [2100] like they probably have like i don't [2101] know [2102] 10 or something like that let's give [2104] that a try [2107] maybe even more let's do 14. i believe [2109] tailwind now has a 14 class yeah they do [2112] awesome yeah perfect that looks good to [2113] me we're also going to add a little bit [2114] of padding up to the [2116] up on the nav bar and we're also going [2117] to work on this cool little transition [2118] thing that we have going on [2120] so i'm just going to remember that so lg [2122] px2 and px14 [2125] on the nav bar [2128] it looks like they probably have i don't [2130] know three units of padding or something [2132] like that so why don't we go [2133] lg px2 and then let's go px [2136] let's do px4 for now yeah maybe even [2139] more let's do px [2140] uh seven [2145] see how that looks yeah there you go [2147] that's a lot better [2148] all right now let's work on actually [2150] changing the visibility of these divs [2153] it looks like when we go from a break [2155] point [2157] up until about large we have all of the [2160] divs [2160] and then when they go a little bit [2161] smaller it looks like we get rid of a [2162] few so we get rid of this try for free [2164] button [2165] we also get rid of this entire div [2169] and then it looks like we add another [2170] div so we have a div that's previously [2173] hidden on large displays that then pops [2175] up on small displays [2177] and that div looks like it's just a [2178] hamburger icon so [2180] why don't i just go to heroicons real [2181] quick type hamburger [2184] and copy that svg and get this sorted so [2189] this is them this is us i need to do a [2192] couple things first thing i have to do [2193] is i have to hide [2195] uh hold on a second i don't really like [2197] this either i think the pattern gets too [2199] small too quickly [2201] why don't i do this [2204] why don't i actually add this all the [2205] way up until xl instead of lg [2207] px2 let's do [2212] xlpx2 [2216] okay that's good too and i also don't [2218] like the fact that this is clipping our [2220] image so why don't i really quickly [2223] scroll down here instead of object cover [2227] let's just do object contain [2230] there you go that's a lot better yes it [2232] gets substantially smaller until we [2234] reach that break point and then problem [2235] is solved [2238] in all honesty though it doesn't look [2240] like theirs does so let me see if [2241] there's another way that i can fix that [2244] there's a bunch of object classes here [2247] um [2248] scale down maybe no that's not going to [2250] be it [2252] let's do object [2256] fill see if that works [2260] definitely not object fill because [2261] theirs doesn't stretch out why don't we [2263] try [2264] just removing this entirely [2268] now i guess we do need to have object [2269] contain of some kind [2273] flex shrink zero maybe that [2279] okay well honestly that degree of [2281] getting a little bit smaller is fine for [2282] now [2285] um yeah that's fine for now we'll work [2287] on that later at the end if we have [2289] extra time but okay great now we're [2291] looking up here at this navbar a couple [2292] things need to change the first thing [2293] you need to change the sketch [2295] text needs to disappear so why don't we [2298] go hidden [2298] and then on large displays it's a block [2303] so i go small it's going to disappear [2306] good [2306] let's do the same thing to [2310] this ul let's go lg block [2313] otherwise it'll be hidden oops sorry lg [2317] flex otherwise it'll be hidden go back [2320] here delete that [2321] awesome we see that we have it here [2325] and then we reach that break point it [2326] disappears good [2328] and let's also do the same thing that [2329] try for free button so scroll down here [2332] and i go [2333] hidden otherwise let's do lg [2336] block scroll [2340] down here boom that's gone and we go [2341] back up last thing we need to do is we [2343] just need to add another div [2344] with that svg uh that goes before all [2347] the rest of the stuff [2348] so let's just go div and why don't i [2351] just paste in that svg that i copied [2353] forever [2354] ago and looks like this is probably [2356] gonna be [2357] width eight height eight let's do that [2362] yes yeah i'd say that's reasonable let's [2364] actually just make the stroke with a [2366] little bit smaller [2367] and now let's add a hidden no actually [2370] we're going to add [2371] lg hidden there you go now it's going to [2373] disappear on large screens [2376] so this is ours now looks pretty good [2378] pretty good pretty good [2379] boom have that break point nice this is [2382] theirs [2384] i guess the last thing that happens is [2385] there's a little bit of a shadow that [2387] appears immediately underneath this so [2388] why don't we add that as well [2390] uh and it looks like it goes across the [2392] entire div so i'm going to use the [2394] top parent div in order to do that [2397] let's do shadow [2400] md and then on large let's do [2404] shadow none that should work [2407] oh wow that is remarkably similar [2409] awesome [2410] okay and aside from the fact that [2412] obviously their hamburger icon only has [2414] two little lines and rss3 i'd say it [2416] looks probably like [2417] 85 90 of the way there see if anything [2420] else happens when you go real small [2424] uh looks like their text gets a little [2426] bit smaller that's certainly not [2427] something that we've done so we can do [2428] that as well if i go back to the best [2430] product [2431] start with sketch that's going to be [2434] where where right over here let's do md [2438] text five excel and let's do [2443] let's do small text five excel on large [2445] screens we'll do text seven excel [2448] actually let's just do text five excel [2450] normally [2456] yeah there you go that looks a lot [2457] closer and honestly though it looks like [2459] we have even more padding [2461] so we can dumb that padding down a [2463] little bit get get it [2464] closer to theirs because right now we [2467] have [2468] 14 units of padding so realistically [2470] it's probably like [2471] md14 otherwise px like [2475] five [2478] yeah there you go [2481] and i think i added px5 up here too [2484] didn't i [2485] edit px7 so why don't i do that [2488] yeah there you go it looks a lot better [2490] okay perfect [2492] i'd say that's probably 95 of the way [2495] there i'm happy with that [2497] let us now start working on this little [2501] element down here [2504] the way that this element looks to me is [2506] that there [2507] is a flex container on the outside [2511] with two children one that's one [2514] two three four probably two-fifths of [2517] the way [2518] and the other that's three-fifths of the [2519] way and the one that's three-fifths of [2520] the way [2521] is center aligned so it's probably flex [2525] justify center item center and then [2528] there's a little bit of extra [2529] line height on each of these lines also [2531] the text here is bold there's a little [2533] bit of a border [2534] surrounding this it doesn't actually [2536] look like their border goes all the way [2538] might be one of those pesky little [2539] border bugs [2541] let's see this yeah there's like a [2544] little bit of a white space there and [2545] that's fine [2546] okay let's do something really similar [2549] so we scroll all the way back down to [2551] our current project [2554] we are here there's probably i don't [2556] know 12 units of margin [2558] so why don't i create a div [2562] let's add bg pink 200 for now we'll go [2565] with 96 [2566] probably an h44 [2571] and we'll also mx auto that so it'll be [2574] right at the center [2575] now we see it comes up here uh reason it [2578] comes up here is do i do i have h [2579] properties on anything else no i do not [2582] think so [2584] it's quite odd [2587] i might i may not be on the uh [2590] bottom elements hold on [2600] okay so we're a little bit spaced out [2602] here let's try to figure out why [2604] the hero header starts here and it ends [2606] all the way down here [2607] that's good i create another div and i [2610] don't give it a height property i just [2611] say that it's block [2612] it's px4 py4 bg gray 900 [2617] rounded four we should see a little [2618] circle this is my little sanity check [2621] where is that circle popping up looks [2623] like that circle is popping up here [2624] in the middle of the page it should not [2626] be popping up in the middle of the page [2627] so clearly there's probably still a [2630] height property that's applied to [2633] something on here okay in this case yeah [2635] it's this this says that it's height 64. [2637] so we take that off okay perfect yeah [2639] fix the problem [2641] so let me delete that again let me paste [2643] in our old div [2645] that's where it is let's go mt probably [2648] 12. [2650] yeah it looks basically remarkably [2652] similar [2653] and let's widen that bad boy out a [2655] little bit i believe this would probably [2656] be max with 3xl [2660] no 2xl [2663] we can also turn this bg to white add a [2666] border go rounded sm [2667] let's make that border grade 200 [2671] hell that's actually even smaller just [2672] xl maybe even lg [2675] no that's quite reasonably similar [2677] actually all right there's also shadow [2679] so let's add a shadow medium on this [2684] shadow actually looks substantially [2685] softer let's see if i can do [2688] large that might work no that's too [2691] strong excel [2694] still quite strong okay i'll tell you [2696] what i'll do i'll show you guys a little [2697] trick that you can use [2698] to soften your shadows with tailwind add [2701] relative [2702] to the parent div then make another div [2706] that is inset [2709] has the property that you're looking for [2710] and then set the opacity to like maybe [2712] half or something like that [2714] so we're basically just creating a a [2716] child element with the same shadow just [2718] making it a lot softer [2720] yeah i'd say that shadow looks decent [2722] our shadows are a little cooler than [2723] theirs they have a little bit of a [2724] warmer gray but that's fine [2727] now we're going to get to work on [2728] actually adding the the various [2730] halves in so let's make this [2735] uh like i need to absolutely position [2738] this [2740] that way i'm not going to be screwing [2742] with it when i do a flex [2743] so we're going to make the parent [2744] container flex and then underneath we're [2747] going to add [2749] two smaller containers the first is [2750] going to be our image container that's [2751] going to go with two-fifth [2753] and then we're going to create another [2754] one that's with three-fifths [2756] and emmet for whatever reason does not [2758] like tailwind auto completion so [2760] i'm gonna go back here save [2763] and we should be good to go oh i guess i [2765] haven't added anything in here so that [2767] makes sense [2767] let's go bg yellow 200 and bg red 200 [2772] should be seeing something oh wow yeah [2774] that is basically exactly what we're [2775] looking for [2776] okay great now that we've verified that [2779] that works [2780] i'm going to add an image to this left [2782] container [2784] uh the source is i think i already have [2786] this rotating mock-up or sketch mark [2788] yeah sketch mockup.png so we're going to [2790] go [2790] assets sketch mockup.png [2795] and i'm not going to any alt text [2796] because i'm not trying to rank this page [2798] that would be [2798] very illegal we're going to add [2802] object cover [2806] and it'll pop up every now and then and [2808] you'll also see that there's a little [2810] bit of a space underneath so why don't [2811] we go h full [2814] yeah that'll stretch out a little bit [2815] more cool [2817] that looks good to me obviously it's [2820] like slightly different [2820] but uh that's cool now we are going to [2825] change the other half to bg white [2830] and we're going to make this flex go [2832] justify center [2834] and item center and then we're going to [2839] add some text let's do h3s [2842] for this i'm just going to copy this [2844] text so switching silicon [2845] how sketch performs on apple's new [2847] hardware see if i can literally just [2850] go in here copy this yes i can [2855] save that and get out of this [2859] okay cool so we have the text in now [2862] why don't i add just like a general p8 [2864] property and all this and then [2866] on the actual h3 class i'll go font [2870] semi-bold [2873] and then text excel [2877] actually a little bit more 2xl let's [2879] also add a font display to this parent [2881] class [2881] just to make everything that beautiful [2883] [Music] [2884] font [2886] and why don't we go tracking tight and [2889] then leading [2890] snug [2894] we can go even tighter than snug yeah [2896] let's go tight [2900] you know what let's go xl [2903] yeah there you go it's a lot better this [2905] is actually even bolder so we're gonna [2906] go bold [2909] that looks quite close the font itself [2912] looks to be [2912] basically the same color so we are good [2915] okay awesome [2917] i wish this could be just a little bit [2919] bigger [2921] i think it would look better if it was [2922] bigger rather than smaller so why don't [2924] we make this just a little bit bigger [2925] let's go 2xl [2926] it's gonna be a little bit bigger than [2927] theirs but that's fine [2930] you know what i totally lied we're gonna [2932] stick with xl [2932] [Laughter] [2935] this is what uh being a designer is [2937] folks we're also going to [2940] this is why i'm not a designer rather [2941] because i don't like going back and [2943] forth [2943] all right so something interesting [2944] happened there when we added a rounded [2945] md class we see [2947] the parent element is rounding but the [2950] child element is not because i added a [2951] rounded md on the outside [2952] i didn't add a rounded md on the inside [2956] so to save this or rather to solve this [2959] issue [2960] i'm going to do a couple things one i'm [2962] going to go overflow hidden [2967] the only issue with overflow hidden on [2969] that is it hides the shadow that we have [2971] because 95 of that shadow is like [2974] overflow [2975] let me see if i can actually take this [2976] out [2979] do this [2984] now it looks like we're still hiding [2985] that shadow so never mind we're not [2987] actually going to hide that [2988] the way that we're going to do uh to [2989] solve that issue isn't to using overflow [2991] properties we're going to solve it [2993] another way [2995] so if we go back here you'll see that [2996] cutoff is still visible but our shadow [2997] is also visible which is good [2999] we're going to go to the image and [3003] we're going to make this [3006] image rounded [3009] md but you're going to notice it's going [3011] to screw up this side [3015] so we're only going to do rounded lmd [3019] that should work yeah there you go [3024] looks like there's a little bit of a gap [3026] just because the divs are both different [3028] sizes [3031] but oh actually hold on i don't need to [3033] put overflow hidden on that parent i [3034] could just go overflow hidden down here [3043] nope never mind [3047] rounded lmd let's do that [3051] and then let's do let's actually take [3053] this off [3058] okay cool so i think that actually works [3060] i added a rounded lmd [3061] on the parent element here so you see [3063] there's still a little bit of a gap [3065] and i don't believe they have that gap [3066] present [3068] yeah they don't but i mean for all [3071] intents and purposes virtually [3072] indistinguishable [3074] so we're going to go with that i'm going [3077] to now do the same thing over here on [3078] the right hand side [3081] so i'm gonna go rounded r uh md [3084] and that'll round it such that it is [3087] basically indistinguishable which is [3088] good it's [3089] basically what we wanted to go for let [3092] me see if i can add even more of a [3093] shadow here in all honesty [3096] shadow looks a little too extreme let me [3099] stick with [3100] uh when we go do md rather let's try lg [3105] yeah you know what i think lg is the [3106] most similar okay great [3109] that was about 20 minutes of me mumbling [3111] but looks like we got something that [3112] looked [3113] looks pretty decent in all honesty so [3115] what i'm going to do next is do these [3116] three little buttons [3117] a lot of people think you need to like [3118] include images for this type of stuff [3120] but you can actually just make this [3121] entirely in html and css [3123] so immediately underneath this div i'm [3125] going to make another div [3127] i'm going to make the width really small [3128] let's do like 16. hell maybe let's just [3130] start with 32. [3132] let's do bg gray what is this like [3135] 100 maybe we'll go height 8 [3138] for now and i'm just going to mx auto [3142] this so this gets pushed all the way to [3143] the middle [3144] okay great so that's us a little bit too [3146] big of course there's a substantially [3148] smaller so [3149] why don't i go with 16 we'll add five [3152] units of margin top here [3154] pump that down yeah that looks actually [3156] basically perfect [3157] and then instead of height eight let's [3158] go like height five i'll probably be [3160] more [3161] similar with what they have yeah let's [3163] do height six [3164] and then with 14. there you go [3167] that looks just about right our margin [3170] is a little too big so we'll go four [3172] i'm just going to round and fold this so [3173] that's going to turn this into a pill [3174] shape just like them [3175] perfect and now oh where did i put my vs [3181] code [3181] now i'm going to flex this item center [3184] and then justify between [3187] and i'm going to create these very small [3189] little circles [3191] to me it looks like these circles are [3192] like i don't know half the height [3194] probably so why don't i just go [3198] uh h3 with three [3201] bg gray 300 rounded full [3206] let's see what that looks like yeah a [3208] little too big so we're actually gonna [3210] go with [3210] two h2 [3214] perfect that looks fan freaking tastic [3217] to me and this isn't actually justified [3218] between allied it's justified around [3221] yeah because uh there's a little bit of [3222] space on the outside here was justified [3224] between it would push them all to the [3225] ends i suppose you could use justify [3227] between if you add a little bit of extra [3228] padding here to this [3229] little pill element but we're gonna use [3231] justify around see how that goes [3234] now that i have one all i need to do is [3235] copy this three times [3237] so we know those thres [3241] and we have this and it does look like [3244] there's actually a little bit of padding [3245] so i'm gonna go px1 [3247] let's push this in a bit nice [3250] and then this bg gray 300 i'm just going [3252] to change to like [3254] no 400 and then i'm gonna make the first [3256] one three hundred so it's a little bit [3257] lighter [3259] ah actually never mind they do it the [3260] other way and they go darker on the one [3261] that's selected [3264] substantially darker there you go [3268] i could like take a screenshot of that [3270] that looks probably like 95 [3272] of the way there super close and i'm [3275] very happy with that [3276] all right awesome next up we have this [3278] social proof div trusted by some of the [3280] world's best product teams [3282] we have a bunch of these super sexy [3283] logos and it looks like when we hover [3285] over them we got that all text [3286] it's really nice i really like this [3288] section in order to get this done [3290] all i have to do is add probably about [3294] 32 units maybe 28 units of margin top [3299] then have text that is uppercase looks [3302] like that's probably text [3303] md uppercase with like a font [3306] text gray 500 or so and then [3311] flex align these and then after i do [3314] that [3315] these two up here after like i've done [3317] both of these i can work on mobile [3318] optimizing these [3320] so trusted by some of the world's best [3321] product teams let's do it [3323] i'm gonna go mt 24 for now [3328] i'm gonna go h3 and then i'm just going [3330] to copy and paste this text in you'll [3334] notice it's already uppercase but [3335] good practice is just to go uppercase [3337] anyway let's go to text gray [3340] 600 and then [3343] we'll go text medium see how ours looks [3345] oh ours is actually going to be shimmyed [3347] all the way over to the left-hand side [3348] so why don't we go [3349] mx auto and why don't we also [3352] make this max with 6xl i'll bring that [3355] in a bit [3357] oh never mind that didn't actually work [3359] uh text center then [3362] yeah because we did an mx out of the [3366] parent container there you go [3368] this looks a little bolder too so it's [3370] probably like semi-bold or something [3372] let's go font bold for now and then [3374] we'll do semi-bold after [3376] yeah that's semi-bold that is most [3378] definitely semi-bold [3381] and we're going to go tracking tight on [3382] this bad boy [3384] nice see that's like 90 of the way there [3387] yeah it's a little bit different their [3389] font is just a bit more stretched out [3390] than ours but there's little we can do [3392] about that unfortunately [3394] so let's just roll with that and then [3397] they have this little font this little [3398] logo section so what i'm going to do [3401] here just because i'm finding it kind of [3402] hard to see [3403] i'm just going to add another div [3405] underneath with an empty of 32 [3407] and i'm just going to say like [3408] placeholder diff basically [3411] and we're always going to work on top of [3413] this that way we always have just a [3415] little bit extra space down here so that [3417] you know i can [3418] scroll up to about here and i can see [3420] you know the entire package i can see [3421] the next thing that i'm working on [3423] but anyway it looks like this uh this [3425] other div down here [3426] is flex aligned i would have to guess [3430] and let's see how it acts when we make [3431] it smaller [3433] so they stretch out this is classic [3435] justify between [3437] and then there's a certain break point [3440] yeah and then it flex wraps [3442] okay that's really easy to do now the [3445] question is how are we going to get [3446] these images [3447] actually these aren't even images i'm [3449] trying to like click and drag [3451] are these svgs yes they are svg [3455] every single one of these is an svg that [3456] is really cool [3458] uh okay well i'm just going to cheat and [3459] be kind of a douchebag here [3461] i'm not going to remake all this from [3462] scratch i'm just going to copy their [3464] home logos div which is where they have [3466] all their logos [3468] and then i'm just going to change all [3470] their classes because i don't want to [3472] you know i'm not i'm using their classes [3473] or rather i'm not using their classes [3474] for a reason right [3476] so we're just going to make them all [3477] smaller you can see that now they're [3479] arranged just like [3480] up and down we can mimic the effect that [3482] we're going for just by going [3484] flex spacex probably eight [3488] i would guess [3491] let's see yeah there's a substantially [3494] bigger [3494] so let's not even use spacex let's go [3496] justify between for now [3500] yeah that's actually super close uh and [3503] then [3505] why don't we actually this looks a [3506] little bit smaller you know what they're [3508] probably justified around [3511] yeah there you go part of me thinks that [3514] sketch used tailwind for this because uh [3517] the spacing is so similar on so many of [3518] these elements i'm going to bump this [3521] down probably eight [3523] even more let's do 10. [3527] okay let's do 12. no let's do 14. [3532] yeah there you go it's really similar [3534] and then [3535] that actually looks good to me why don't [3536] we see what this does when we make it [3538] smaller [3540] so we go smaller smaller smaller smaller [3544] smaller [3545] all right so they end up getting way too [3547] close together and the reason is because [3548] i don't believe we [3549] applied a wrap property to this so we go [3552] wrap [3553] when they get too small what we should [3555] see happen is [3558] they start folding over and that's good [3559] that's exactly what we want because [3560] that's exactly what these guys do [3562] the only issue is ours when they fold [3564] over they do not have any spacing in [3566] between them [3567] so we can create a break point for them [3570] to fold over at or [3571] not a break point but a width at which [3572] they fold over just by adding a little [3574] bit of a spacex [3576] and let's actually make that even even [3578] bigger let's do spacex 12 [3580] and then let's only do that on uh [3584] really small displays [3589] yeah that looks decent to me why don't [3590] we just lock the same break point here [3593] see what ours does relative to theirs so [3594] theirs is already going that's because [3596] they have padding [3597] we do not have padding so if we just add [3600] some padding to this [3603] lg px2 and then what was the other [3605] pattern we added everything else [3606] should really standardize this [3609] uh looks like they do px5 right [3612] mdpx14 so we'll do px2 [3617] px14 and then [3620] px5 that should work [3628] yeah it looks pretty good i don't think [3630] they have that weird kind of like jump [3631] feature like we do [3633] theirs just gets smaller and smaller and [3634] smaller so i'm just going to take out [3635] this md px14 and just bump this up [3639] let me see if i need to actually [3648] there's also a little bit of a space [3649] vertically now that i'm looking at it in [3651] all honesty [3652] so what we could do to solve this [3656] is just go to every svg's class [3660] and then add a little bit of a py i [3663] believe [3665] oh nope never mind my [3670] yes that's more like it let's do an my4 [3675] and this way we can also remove some of [3676] that spacing [3679] so we'll turn the mt uh [3682] mt14 let's do that down to 8. [3686] there you go that's much better and [3688] let's just add a little bit more padding [3690] to this [3692] let's do padding 10. [3699] because to me that looks a lot closer to [3701] what they have [3703] yeah cool guys i would say that's [3706] probably 90 of the way there which is [3707] all i'm scoring for on this one [3710] now this video is getting pretty long [3711] i'm going to try and breeze through some [3713] of the rest of this stuff [3715] but first i have to eat lunch so i'll be [3716] right back all right just had a [3718] fantastic lunch man i learned how to [3720] make a donaire for the first time the [3721] other day [3722] and i am just crushing it one of the [3724] best meals we've ever had [3726] uh let's pick off where we left off [3729] this is them this is us uh scrolling [3732] down we've [3733] made it all the way to probably like [3736] probably half the website now in all [3737] honesty because we [3738] know about the container layout and [3740] different color scheme that they use and [3741] stuff like that [3742] what i'm going to do at this point is [3744] i'm going to mobile optimize [3746] these sections that i just did so that [3749] upon certain break points they don't [3750] like [3751] totally kill us and screw everything up [3754] i figure that yeah after they reach [3756] their small break points you see this [3757] little card here [3759] it ends up going from a div that is kind [3763] of like top to bottom [3765] oh sorry side to side to top to bottom [3767] there's also a little bit of padding on [3768] the outside that we do not have [3770] so why don't we add that in we'll start [3772] with the padding in order to get that [3773] done we need to create another element [3774] that is full width across the width of [3776] the [3777] page and then we need to add a little [3778] bit of padding to that and then we also [3780] just need to add those break points into [3782] the [3783] two flex children so [3787] let's go to our images um [3790] where's that sketch mock-up right over [3791] here that [3793] is this and let's do two things first [3796] i'm going to grab this entire div [3798] i'm going to wrap this in another div [3801] that's with full [3803] and then p i'll just do px5 because that [3806] seems to be our standard at this point [3809] let's make a little bit smaller [3811] and boom you see it this comes in a [3812] little bit just like theirs [3814] this is a part of what we wanted to do [3816] and the next thing we want to do [3817] is we want to make this width to fifth [3821] only occur on i'm guessing small screens [3823] and up i might be mistaken there but [3825] let's go with small screens not for now [3827] otherwise we'll just go with full [3831] so it's going to take up the full width [3834] below [3834] small screen sizes from small screen [3837] sizes and up [3838] it's only going to be two-fifths [3841] i believe this is what we want so small [3843] break point come and come and come in [3844] come and come and come in [3846] no apparently it's not coming in [3850] uh okay well we can just do flex then [3852] only on [3853] small and above and then [3857] just remove what we just did there with [3859] the two-fifths [3862] yeah let's try that okay that is really [3866] big maybe a little too big [3869] well it's certainly working on that [3871] break point [3874] but it's way too big [3877] why is that do i have a height full on [3879] anything here [3881] yeah i do explains that when we take [3884] that off [3886] yeah okay good so why don't i go height [3887] full and i'll only do that on small [3889] screens and above [3893] good and we'll see there's also [3894] something else in the background here [3895] it's a little lighter [3896] so what is that looks like something [3899] with a fixed width [3900] something like that could be this shadow [3903] div so why don't i take that out see [3904] what happens [3906] so it is that shadow div okay so for [3908] whatever reason [3910] this is not stretching the full width so [3912] i'm gonna top zero bottom zero [3915] see if that works left zero [3919] and then height full [3924] interesting interesting [3928] okay this appears to be taking the size [3934] of its uh of of rather the height [3938] of what it is here [3941] not here if that makes sense and i [3944] believe that there's also a fixed height [3946] property somewhere there you go fixed [3947] height 44. [3948] so if i take that out that should [3950] eliminate the issue yes it eliminates [3951] the issue okay great [3953] it's one of the downsides of using a [3954] fixed height properties guys [3956] one of the reasons i would encourage you [3958] guys to be careful with that [3961] i think we just remove height full from [3962] this entirely will look a lot better [3965] yeah there you go okay now we're going [3968] to make it smaller smaller smaller [3970] smaller [3970] and let's see if we get the intended [3972] behavior yeah we do [3973] awesome okay great that looks good to me [3977] how's everything else underneath [3980] good i think from a spacing perspective [3983] things get a little closer together when [3986] they uh [3987] sorry so this is a little bit further [3989] away on small screens there's a little [3990] bit more like vertical space [3992] and then it looks like this gets a [3993] little bit closer together unfortunately [3995] i don't think we can mimic the exact [3996] breakpoint that they're using because it [3998] looks like they're using like an [3999] extra small break point [4005] yeah so i don't think we have an extra [4006] small break point on the tailwind [4008] no we don't this is with 60 [4013] and this is [4016] like right about what here yeah right [4019] about here so what like [4020] 500 whereas we break [4023] at like 600. so ours is gonna look a [4026] little bit different we'll also notice [4027] that it's a little rounded on the left [4028] hand side and that's because we didn't [4029] take out the [4030] rounded lmd so why don't we only add [4033] that to small and above [4035] there you go problem solved so yeah [4038] that's a slight difference right there [4039] let's fix the height of this though why [4041] don't we add [4044] uh mt8 and then small screens let's do [4047] mt0 that'll pump this down a bit [4049] if we go back here let's actually do [4053] more let's do mt16 [4058] uh can we do even more 32 [4065] and then medium empty 0. looks like [4069] we're combining mt's actually we should [4070] never be doing that [4072] took a little bit smaller smaller and [4076] let's see how [4076] theirs looks they have a [4080] relatively constant height yeah that [4082] looks fine [4084] and then oh never mind it jumps way up [4086] so we should not be doing that [4087] why don't we go mt12 [4092] but why does it go to mt32 right after [4099] so on big screens it's md12 that makes [4102] sense [4103] smaller smaller smaller underneath that [4105] it turns to mt-32 [4108] okay so why don't we do mt-24 [4114] instead that would look more reasonable [4120] you know what let's just do this on lg [4121] instead that would simplify my life [4124] quite a bit [4125] there you go okay good so we're done [4129] with that aspect of mobile responses [4130] mobile optimization why don't we move [4132] on to building out these beautiful grid [4135] systems [4136] uh i love the way that they built these [4138] looks to me when i first look at this [4140] that we have a three column grid one two [4142] three [4143] sorry one two three the [4146] there are two grids that are repeated [4148] there's one up here and there's one down [4149] here [4150] the top grid is literally this [4153] spanning one third then this spanning [4155] the other two thirds [4157] and then the bottom grid is just these [4159] one two three little explainer sections [4160] so we can actually make that [4162] incredibly quickly and i'll show you how [4164] i'm gonna scroll all the way down to the [4165] bottom here [4166] we're going to do this above our [4167] placeholder div our placeholder div i [4169] don't know if you guys can see is all [4170] the way down here in the corner [4171] looks like spacing wise is probably [4173] about i don't know 24. [4175] so why don't we go mt24 we'll do [4178] a bg yellow 200 grid [4182] grid calls 3 we'll do [4185] height 64 for now just so we can [4187] actually see this [4188] and then we'll go max width 6xl mx auto [4192] to push this into the middle [4194] great that looks good to me and from a [4197] height perspective it's also very [4198] similar [4200] so we are also going to uh [4203] make two subdivs here one that is [4207] excuse me grid uh no call span [4211] one that's gonna be the first one let's [4214] just do bg pink [4215] 200 and then the other one [4218] is just going to be call span 2 and [4222] we'll just do [4222] bg indico 200 so left 2 [4226] kind of 1 3 split here which is [4228] basically the exact same width as theirs [4231] and let's get working on the left so [4234] first left we have what looks to me like [4236] an h2 [4237] work fast create beautifully i'm just [4238] going to copy and paste that in [4242] next up we have your best work happens [4244] when tools and abcd are available [4248] then we have a button that's learn more [4249] and if you guys pay close attention [4250] you'll notice that this learn more [4251] button is the exact same as the button [4253] that we made up here [4254] so i can actually go to my try for free [4257] button here [4259] the one that's in kind of the middle of [4260] the page so not this one [4263] that'll be this one here and i can just [4265] copy that in [4268] so why don't we go down here paste that [4272] and there may be a difference actually [4273] in terms of width this might span the [4275] entire width [4276] we'll see i think i might have to go [4279] inline block on this bad boy [4281] yeah there you go uh and let's get to [4284] styling [4286] this to me we scroll down here [4289] this to me like looks like it's probably [4290] like two-thirds the size of this [4292] uh there's also a little design thing on [4294] top actually i totally forgot about that [4296] so why don't we go like h4 i hate using [4298] h4s but i just can't think of anything [4300] else to use here [4301] uh so we'll start with uppercase you [4304] know what we're actually just going to [4305] take the same text that we used [4307] for here because that looks the exact [4308] same so why don't we go trusted by some [4310] of the world's best product teams [4312] and then font semi bold track and type [4314] text center blah blah we're just going [4315] to copy that [4318] and then we're going to paste that here [4321] the only difference is i don't think [4322] this needs to be in the center so we're [4324] just going to take that out [4327] uh let's see design design yeah it looks [4329] good to me [4331] next up we're going to add just a little [4332] bit of padding here mt2 then we're going [4334] to go text [4335] uh for xl font bold [4339] and let's do text gray 800. [4343] another thing we should do to all of [4345] these is add font display that's [4346] something that i've previously forgot [4349] so if i go back up here and add font [4351] display you'll notice that the fonts are [4353] actually going to change [4354] so this is going to change and this is [4356] going to change yeah that looks a lot [4357] better i was wondering why that looked a [4358] little off [4359] if we scroll back down we'll see that [4361] text [4362] uh where are we right over here [4366] that text 4xl is actually decently close [4369] right [4370] it's probably like 80 of the way there i [4372] think if i make it a little bit bigger [4373] it might be a little too big yeah it is [4376] a little too big [4378] so why don't we stick with 4xl and then [4382] ours is a little bit smaller but that's [4384] okay [4385] why don't we just do an empty [4389] four on this to bump down the next part [4392] of the text [4393] and then let's just go text lg [4397] text gray 700 might even be 600 actually [4403] and you know what i think we go xl [4407] there you go we'll go leading [4410] relaxed and then [4413] let's actually go 600 here [4417] and you'll notice that this wraps a [4418] little bit earlier than we do and uh [4420] that's probably because [4421] we haven't added any padding to the [4423] right of this so why don't i just go on [4424] lg and go pr8 [4429] yeah there you go that looks really [4430] similar now for this learn more all we [4432] have to do is do like an mt8 [4434] that should bump it down quite a bit [4438] say that's reasonable quite reasonable [4443] um yeah it's pretty good [4447] and then instead of learn or rather try [4449] for free we'll just go [4450] learn more and i think they had a [4452] capital on that didn't i no they didn't [4453] i lied [4454] awesome now we can start removing all [4458] these nasty colors [4459] as well as the fixed height it's one [4462] thing that i have to [4463] remember to do more often [4468] and when we take all that out including [4470] the yellow this is what we're left with [4473] work fast great beautifully work fast [4474] create beautifully so quite close [4476] quite close next up we have an image [4478] we're going to apply that image here [4480] so i'm gonna go image source uh [4484] actually no this is a video that's not [4485] an image at all [4487] why don't we do this uh [4491] why don't i [4494] just copy the source and i have to [4497] replace [4498] the image with video here yeah okay [4502] that's good i did not even realize that [4504] that was not a an image [4506] okay that's good and then what else are [4508] we going to do we are going to [4510] add i think autoplay loop [4514] probably and then i'm going to [4517] add a class to this image let's border [4520] let's do border grade 200 let's do [4522] rounded md [4524] and then that look to me looks like [4525] there's a shadow xl on that image easy [4528] yeah you see that is perfect [4530] additionally by adding that i think some [4531] of the transparency in the background [4533] layers were [4534] removed so it just looks a lot more [4535] similar to what we were going for [4538] whatever reason ours isn't playing i [4539] don't really [4541] it's been so long so i've used a video [4543] tag [4544] so muted loop plays in line [4547] so if i do that plays in line that [4549] should probably work i i think it [4551] probably takes a little bit of time [4552] because we're on a local host but uh [4556] i uh you know we'll get back to that oh [4557] yeah there we go i just need to reload [4559] the page [4561] and yeah perfect now we have that video [4562] playing fantastic [4565] it's honestly a very high quality video [4567] like the more and more i zoom in [4569] i would expect to be losing a fair [4570] amount of quality but no [4572] i wonder if that has the implications [4573] for the load speed regardless [4576] i'm just gonna turn this spacing just [4578] like one pixel down or one [4580] uh one unit of margin top down just [4582] because i think that's a little too much [4586] and aside from that yeah looks pretty [4588] great [4589] let's do the other three down here bring [4592] your ideas to life build [4593] designs that scale and uh [4596] customize your workflow the way that [4598] this is built is basically the exact [4600] same as what we had up here [4601] so we could do it in two ways one we [4604] could do this in the same container or [4605] two we could just do this in another [4606] grid [4607] i would feel more comfortable just doing [4608] this in another grid that way we can [4610] customize the [4610] breakpoints and stuff like that a little [4612] bit better and [4614] i don't know i just prefer modularizing [4616] everything [4617] so i'm going to go down here create [4619] another div we'll go class grid [4622] max with 6xl we'll do grid calls 3 mx [4625] auto [4625] mt what's this mt20 [4629] probably let's do mt20 and font display [4636] and then i'm just going to create three [4639] sub divs [4641] and we don't actually even need a class [4643] for this i think we can just like wrap [4644] these [4646] with an h3 [4650] a p tag and [4654] an image tag looks like [4660] yeah that looks good to me i'm just [4663] going to copy [4664] the text from the first over [4668] and i'm going to find this image copy [4671] this [4672] bring this here and then let me just [4673] format this so it looks a little better [4676] okay and then we have yeah we have this [4679] good now i'm going to add [4681] what's that text gray 800 still okay [4684] yeah that is text grade now it's exactly [4685] what we wanted [4686] why don't we go text excel on these [4690] i think that would be fair yeah then [4692] we'll go font semi-bold [4695] and then [4698] looks like they have very little spacing [4699] here or margin top on this text but i [4701] think it would actually look better if [4702] we add a little bit more so i'm going to [4703] do that [4705] and then just see if there are any other [4706] differences looks like just the color is [4708] the only thing so let's go text gray 500 [4710] to this [4712] which is actually really close which is [4714] fantastic [4716] and honestly it looks like they have [4718] tracking tight setup [4720] the image itself is a little bit smaller [4722] i think we could probably do h20 [4724] so when we h20 with 20 no it's h16 [4728] let's do that add that perfect [4731] and there's a little bit of spacing over [4733] here so let's do [4735] mt3 that should work there's a downside [4738] for some reason this image is pushed a [4740] little bit over to the right [4743] whereas their image is not i'm curious [4745] as to why [4747] i'm gonna quickly hop into the uh [4752] looks like it's because they position [4754] relative this [4757] i don't really see why that would work [4760] but uh yeah let me add relative and see [4762] if that changes anything whatsoever [4764] no i didn't think so there needs to be [4765] something for it to be relative to so [4767] for whatever reason they they have that [4768] set up why don't i just do this [4770] on large screens because i assume i'm [4772] going to want to change things why don't [4773] i go negative ml1 [4776] yeah there you go that aligns it [4777] perfectly to the side great now that we [4779] have this [4780] we're just going to copy and paste this [4782] three times [4783] so perfect uh there's a little bit of a [4786] gap in between actually that we do not [4787] have so why don't we go [4790] to our div and we'll just go gap x [4794] let me just go gap in general uh six [4797] that'll add a little bit of a gap [4798] between these [4799] space these out a little more make them [4802] a little sexier yeah that's pretty close [4804] we need to go even more let's do gap [4806] eight and now i'm just going to copy and [4808] paste the rest of this text [4810] so build designs that scale is the next [4812] one customize your workflows the one [4814] after that [4816] uh choose from hundreds of plugins sure [4820] lay the foundations your products design [4821] system okay [4824] space these out and now i'm just gonna [4827] open these new tabs [4829] with these images so this one is here [4833] and then this one is [4836] here okay [4839] that should work yes okay awesome that [4841] is ours that's theirs it's looking real [4843] good to me last thing we got to do is [4845] just add a link that says browse [4846] extensions that goes to the side [4847] so that is on the third grid element [4851] underneath the p tag [4854] let's do uh text carrot [4857] 600 i believe font semibold [4860] and we'll just go browse extensions and [4863] i think [4864] they're just using an arrow if i had to [4866] guess i would say they're just using an [4868] arrow [4869] i might be mistaken let's see what [4871] they're using [4873] please be an arrow [4877] um [4881] oh no they're actually using an icon [4882] image they're legitimately using an [4884] image for that [4885] interesting i would not recommend that [4887] so we are going to [4890] just uh do this ourselves and go flex [4893] spacex [4894] to justify center let's do that [4898] justify center sorry justify uh hell i'm [4900] not even include that i'm an item [4902] center we're gonna go down here [4905] div that and then i'm gonna go hero cons [4908] we're gonna go arrow [4910] this is a pretty long arrow so let's use [4912] a shorter one here [4915] space that out and then the class is [4917] going to be like [4918] width 3 height 3. if we go back here we [4921] should have a tiny little arrow [4922] uh we should just change that to text [4924] carrot 600 i believe [4927] yes what's their error look like [4931] man that's a sexy arrow okay we're going [4933] to make our arrow a little bit bigger [4934] to try and compete [4938] all right i'm happy with our arrow also [4940] i lied it's text care at 500. [4944] go back down and then we're gonna space [4946] that out by two [4948] awesome and then last thing is we're [4949] gonna add four units of top padding [4953] cool that looks good to me yeah again [4956] we're very similar very similar if we [4958] just go back and forth back and forth [4962] uh yeah we're probably like 80 90 of the [4964] way there a couple differences i mean [4965] the shadow is a little bit uh [4966] softer than their shadow spacing wise [4970] looks pretty close uh they have less [4973] spacing than [4974] we do but i honestly think that ours [4975] looks better i think they should have a [4976] little bit more spacing to to [4978] disambiguate between the header text and [4980] the uh [4980] paragraph text looks like they might [4982] have a shadow on these [4984] no that's actually part of the image so [4986] yeah aside from that [4987] uh you know it looks pretty good to me [4989] last thing is they might have a little [4990] shadow on this that we do not have [4995] now we have a little bit of shadow [4996] that's fine okay guys [4998] awesome so now we've done that we're [4999] going to do basically what looks like [5001] the same thing [5002] just reversed so whereas this text is on [5004] the left hand side and the images on the [5006] right hand side [5006] looks to me like they just have the [5007] image on the left hand side now and the [5009] text on the right hand side [5010] also looks like the background color of [5012] this is [5015] actually darker up here than down here [5018] so this is a good opportunity for me to [5020] show you guys how the background [5021] gradient [5022] uh works on tailwind i would assume this [5024] is probably equivalent like bg gray 50 [5026] and this is probably bg white [5027] so all we're going to do now is i mean [5030] if you're using a framework like me you [5032] could just create a component [5034] and then just copy and you know create a [5035] component in uh [5037] components up here oops that was a [5039] bad idea [5041] let me remove layouts again so my entire [5043] project doesn't crash [5047] i keep forgetting not take this out [5051] no do not do that here [5054] yeah there you go sorry about that uh [5057] you could create like a components [5058] folder and just [5059] make this kind of grid system a [5061] component and then you know add a couple [5062] of fact a couple of little arguments in [5064] that can like move these things around [5065] we're not going to do that just because [5066] i'm doing this in html i'm assuming [5068] a few people are probably going to [5069] follow along in just pure html css [5072] so i'm just going to copy and paste [5074] actually both of these divs [5077] right here [5080] immediately underneath and actually [5083] there's one thing i'm going to do before [5084] then [5084] i'm going to create a wrapper element [5088] with the background color property so [5091] we're going to go [5092] bg gradient uh let's do two bottom [5096] let's go from gray 50 [5099] to white let's do that let's paste [5102] everything else [5103] inside and then let's see what this [5106] looks like [5108] awesome yeah that actually looks [5110] reasonably close difference of course [5112] being that if we go to our bg gradients [5114] we should add some padding to this so [5116] i'm going to add [5118] i don't know 16 units of padding [5121] no that's too much padding let's do [5124] eight units of padding let me see if i [5127] still have that height property anywhere [5129] because that usually ends up screwing me [5132] no [5132] i think i think that's good but we might [5135] that's pushing pretty high [5138] oh you know what [5141] i know why [5153] no i don't think we have heights here [5155] yeah i think the heights are generally [5156] good [5158] uh nope [5163] nope nope nope nope nope no heights [5166] okay that's good let's get in ptsd [5169] because last time i hided [5172] uh okay so interesting then we have this [5174] kind of weird thing happening [5175] where if i scroll down a bit [5179] sorry scroll up a bit and i add extra [5182] padding to this element it actually [5183] pushes it around so let me [5185] try and figure out why that is [5189] so i am right over here right now if i [5193] remove all this margin and all this [5195] padding this should just [5197] come real close okay good so i'm going [5198] to empty 24. [5200] it's going to bump me down good now i'm [5201] going to py8 [5205] cool i'm going to py 16 now [5210] let's do even more let's do 24. yeah i [5213] think that's more similar to what they [5214] have [5216] perfect again they're using much warmer [5219] graze than we are and that's just a fact [5221] of life nothing we can do to change that [5223] aside from of course you know get warmer [5225] grays but [5227] i'm not invested enough to spend the [5228] time to do so [5230] i would say at this point all we have to [5233] do is [5234] switch the order of these elements so [5237] i'm going to take out the div that's on [5239] the [5239] left hand side here and i'm going to [5242] push it to the right hand side there we [5245] go [5246] and then i'm going to i added a little [5249] bit of a padding to the right of this [5250] there's no need for me to do that [5252] what i'm going to do instead is i'm [5253] going to go to our grid and just add [5254] like a gap [5255] gap x8 [5259] and that looks reasonable and then i'm [5260] going to change this video [5262] to an image remove this stuff [5267] and then i think i took a screenshot [5269] earlier today [5272] rotating mockup yeah rotating mockup so [5274] i'm just going to [5275] change the source to that rotating [5277] mock-up image which is at uh slash asset [5280] slash [5281] sketch rotating mockup.png [5285] if i save that i should now have that [5286] image and that happens every now and [5289] then [5291] uh good yeah i totally do have the image [5293] only downside being because we copied it [5295] over [5295] uh we have like the border classes and [5297] the shadow classes and stuff like that [5298] we don't actually need those for these [5300] so i'm going to remove the border i'm [5301] going to move the round out i'm also [5302] going to remove the shadow [5303] that should not blend into the [5304] background yep totally does [5307] and aside from that i think we could [5310] probably space this out a little bit [5311] more so why don't we go to the gap x and [5313] just turn that into a tent [5318] yeah that looks better okay now i'm just [5321] going to do the same thing i did earlier [5323] keeping everybody in sync and uh [5327] copy and paste the text here [5332] looks good to me bring ideas and [5333] feedback together [5337] and move effortlessly to development [5342] let's do that and then i just have to do [5344] these images as well [5345] so let me just open this copy this uh [5350] where is this here [5357] so i'm gonna copy and paste that over [5358] and i'm gonna copy and paste [5361] oh oh boy i hate doing that um [5365] here [5368] let me do this [5372] and then i'm going to add a source to [5374] this and the source is going to be this [5376] last image [5378] hopefully let's see if that works [5382] where are we [5385] all right where are we at now yep good [5388] that looks uh that looks really good to [5390] me the only difference being [5392] they don't have that browse extensions [5394] thing down here uh on this second grid [5396] so i'm just going to get rid of this [5397] entire div [5398] all that div that we put all our hard [5401] work and effort into [5403] awesome that looks really similar cool [5407] all right now i'm going to see what kind [5410] of mobile optimization we need for this [5412] i probably should have done this before [5413] now that i think of it because uh [5415] by doing this before when i copied and [5416] pasted it over i wouldn't have had to do [5417] it twice but [5418] whatever you live and learn looks like [5420] first and foremost we should probably [5422] add a little bit of padding [5424] so actually first and foremost we have a [5426] large [5427] large break point here where the grid [5429] that is three columns turns into [5431] one column so unfortunately i have to do [5434] that twice [5436] but it says grid calls three we should [5439] actually go grid calls one [5441] and then on large displays we'll go [5442] grade calls three [5444] and call span one is actually fine [5448] for that [5454] so now ours should immediately yeah [5456] perfect [5457] in addition to that we should mx auto [5459] this uh [5460] and then a large we can just go mx none [5462] no mx zero i think i'm extra [5465] it'll pump that uh hopefully pump that [5468] to the middle or maybe not [5472] let me think real quick yeah these [5474] should become these should come [5475] substantially uh closer to the middle [5480] why would that not happen [5484] well to debug why don't we turn the [5486] background red and see where we're at so [5489] here that's the width if we go smaller [5491] that is the width [5492] so uh the width is spanning the full [5496] kind of width of the container i could [5498] do a couple of things [5499] i guess i could turn the width to half [5500] but it would make more sense for me to [5504] wrap this in another div [5507] that's mx auto [5511] let me see if that works we're trying to [5513] get this work fast crate beautifully to [5514] pop into the middle [5520] um [5527] i suppose in all honesty i didn't even [5529] need to do this i could have just copied [5532] and pasted this over here [5535] so i'm just going to remove this div [5536] class thing remove that [5540] and that should work too yep totally [5542] does last thing i want to do here is [5545] i don't have any gap spacing on this i [5547] should have added a little bit of [5548] spacing why don't i just go [5549] gap eight that'll bump this down a bit [5554] make it a little closer to what theirs [5555] is and the last thing i'm gonna do is [5557] i'm gonna go px [5559] lg px2 otherwise i'll go px5 [5563] all right makes everything a little bit [5564] smaller makes the spacing and stuff like [5566] that more similar to theirs [5568] let me scroll down a little bit more see [5570] what else is going on here [5572] so it looks like additionally they have [5573] that padding applied to the bottom grid [5575] because we have two grids we have that [5576] grid on the top that's kind of one third [5578] two thirds and we have this bottom grid [5580] so i'm going to do the same thing i'm [5581] gonna go lg px2 and then px5 [5585] so that should bring these in a bit it's [5587] good and let's see what kind of break [5588] points these go for [5591] looks like these break really oh sorry [5593] that's mine [5594] i was wondering why that wasn't breaking [5595] earlier looks like there's uh [5598] just breaks at the medium break point [5600] and then they're all just at the side [5602] so we can do that really easily this is [5604] grid calls three for medium upwards [5606] otherwise this grid calls one [5607] and i believe that's all we would need [5609] to do yeah that is all we would need to [5611] do [5612] oh the width is actually down to three [5614] quarters [5616] yeah so we could do that too if we go to [5620] each of these divs how many divs do we [5624] actually have here one two three [5625] four five six okay good that's only we [5627] wanted we could go [5629] uh with three quarters and then mid we [5631] go with full [5635] so that's actually too small now is it [5639] let me standardize these and see where [5641] we're at let's go smaller actually [5645] yeah no they probably just have a max [5649] width [5649] element max with uh designator so let me [5653] go max with xl [5655] that might work better [5659] whoa that certainly does not work better [5661] okay let me erase some of this stuff [5663] i feel like my multiple cursor selectors [5665] uh got me in kind of a pickle there [5667] let's go back start this bad boy from [5669] scratch uh where were we [5674] yeah it looks like we add a little bit [5675] of extra [5678] spacing there onto this work fast crate [5682] beautifully here [5683] so let me see why what is that [5686] with three quarters probably [5690] the wood three quarters if i take that [5691] out let's see what happens [5696] yes that totally was the width three [5697] quarters so why don't i apply this [5703] let me see actually if i don't apply it [5705] it looks like this [5712] which is not what we want we want it to [5713] be a little bit smaller so why don't we [5715] go four-fifths [5717] and then lg width full [5722] with full with four-fifths four-fifths [5726] four-fifths [5728] and then why don't i only do that [5731] on medium and then [5735] it should still just be with full [5737] everywhere else [5742] uh hell we could probably do that all [5743] the way up to small in all honesty [5747] small small small small small small and [5749] then it breaks and then we're good [5752] only downside being we haven't done that [5754] down here so we have kind of that weird [5756] messed up look but that's perfectly fine [5758] okay awesome [5759] i i like this it's not perfect it's not [5761] exactly what they have but [5763] i think it's a good compromise [5766] so we need to do something quite similar [5768] here to the second [5770] div unfortunately so i'm just going to [5772] copy [5773] the various classes we've applied here [5776] because we're going to need to apply [5777] that again [5779] and let's scroll all the way all the way [5780] all the way down to [5782] where we have that second div here [5785] the way that this works is again it [5787] turns into grid calls one [5791] sorry it turns into grid calls three and [5792] large displays [5794] so if i make it smaller you'll see that [5797] it folds over [5798] which is exactly what we wanted [5800] additionally there's a bit of padding [5801] so we can do our px lg px2 otherwise px5 [5806] and that's just going to go over the [5807] entire elements puts things [5809] kind of in the middle a little bit and [5811] then [5813] on this m sorry call one here [5819] which is here we can just paste in the [5822] previous classes that we had [5824] and that should now push this into the [5825] middle a little bit yeah that's good [5827] and then gap x10 we're just going to [5831] move to [5831] gap10 [5834] okay awesome so now it should go full [5837] width good [5838] otherwise it's kind of the middle just [5840] like theirs awesome [5841] let's do the last little piece of mobile [5844] optimization we need to do [5846] add that padding on large and then small [5848] we'll do px5 [5850] and then we'll do grid calls one and [5852] only go to grid calls 3 [5853] from i believe medium and up [5857] let's see medium medium [5862] yes broken [5866] awesome cool [5870] that looks great to me yeah very [5872] responsive there's a lot of stuff that's [5873] uh that's moving around as we [5875] move the page and that's essentially [5876] what we want cool last thing i got to do [5879] is just create this element [5880] like i said before i'm not going to add [5882] all these wonderful beautiful svgs you [5884] guys can [5884] add that on your own time if you'd like [5888] actually looks like they have a skip [5889] navigation button i'm not sure exactly [5891] where that is or why that pops up but [5892] i'm not going to rebuild that either i'm [5895] only going to kind of make this sexy [5897] little gradient happen [5898] and i think that's just our carrot 500 [5900] to our carrots 600 maybe even carrot 700 [5903] so in order to do that i'm going to go [5905] down here [5906] go div class let's do bg gradient [5910] from 2 rather [5914] to b let's do from bg i think that's [5917] carrot 500 [5918] probably from [5922] carat 500 2 carat let's do 2 carat 700 [5926] let's do h64 and let's do this [5931] yeah a little too dark we'll do 2 carat [5933] 600 [5935] now we're going to mx auto this turn the [5936] max width to 6xl [5939] now it's going to pump that in the [5940] middle yeah that's perfect [5942] now we're going to rounded to xl and [5945] then shadow excel [5949] it's getting pretty similar they might [5951] even be more rounded than us can we go [5953] 3xl is that a thing [5956] yes yes we can and then it looks like [5959] they have [5960] in all honesty it doesn't look like this [5962] is center aligned i think they screwed [5963] something up here [5964] let me see if i refresh the page that [5966] fixes it [5968] no i think they actually just have a [5970] little bit of extra spacing that's [5971] pushing this to the right [5972] oh well you have been [5976] investigated uh get started with sketch [5978] today we're just going to go [5980] h2 [5983] i'm doing my best to keep these classes [5985] relatively semantic here we're going to [5986] text white [5988] text 3xl this is font display too [5992] and then we're going to go tracking type [5995] and then we're just going to copy and [5996] paste this [5997] put this here and let's go mx auto [6001] that should bump that in the middle oh i [6004] did not bump that in the middle oh sorry [6005] text center not mx auto [6008] always mix those two up and then we're [6009] going to go font a bold [6012] we're also going to turn this into a [6014] flex call container go justify center [6016] and item center and that's just going to [6017] pump everything by the middle [6019] we're going to make this a little bit [6020] bigger 4xl and then we're going to [6022] do our h4 underneath it which is turn [6025] your ids into incredible products with [6027] 30 day trial [6028] so go over here uh i believe this is [6031] like text white opacity 50 or something [6035] let's do opacity 70. [6040] yeah so that would be text excel too [6045] maybe a little bit bigger actually let's [6046] do text 2xl let's add a quick mt4 [6050] oh never mind that's way too low d2 [6057] and let's see if we can actually move [6058] this to 5xl [6061] yeah there's no real good middle ground [6063] here between ours and theirs [6065] the only thing i can tell you for sure [6066] is that there is a little bit tighter [6070] but aside from that that's yeah that's [6071] basically it last thing i'm going to do [6073] is i'm going to make this button [6074] so let me close this h4 go [6078] down here actually let's do ahref just [6080] for uh continuity [6082] i'm gonna go bg white rounded sm [6085] shadow sm let's do px4 py [6089] actually that's cpx5 2 [6093] we'll do [6096] goes up again so we'll do hover let's do [6098] transform first then hover [6100] negative translate y px [6103] i believe and then we'll also [6107] hover change the background to gray [6113] i think it just goes gray does it go [6114] orange you know what i think just [6116] opacity 80 actually [6119] that's probably enough and try for free [6121] and then we'll just go a [6124] let's see ours well ours looks ugly [6128] [Laughter] [6129] let's go text carrot 600 [6132] and font semi-bold [6136] and then we'll go py3 and then space [6138] this out by six [6144] so how are we looking guys [6148] i'd say it's decently similar a couple [6151] of differences of course with the font [6152] and stuff but honestly [6155] aside from that i'm oh [6158] almost happy i was going to say with [6159] what we have last thing i do is add a [6160] transition put the duration of 200 [6165] yeah that looks a lot better it's not [6167] perfect by any means but [6168] uh again we're like 89 of the way there [6172] okay awesome last thing i'm gonna do [6176] is these colors actually i think they [6177] could be even lighter [6180] yeah there you go that's perfect and [6183] then [6183] i'm just gonna add a little bit more [6184] padding to this so let's go py [6187] actually let's just do p in general [6188] let's do like eight that should bump [6190] this down a bit [6192] make this a bit bigger no oh it's [6194] because i got a max h property set here [6199] so let's actually do py [6202] 16. double that space good [6205] and then i have a feeling we're going to [6207] need px8 later so i'm just going to put [6209] that in for now [6211] that looks good to me guys awesome and [6214] you'll also notice that the background [6215] is getting [6216] lighter as we go down just like the just [6219] like sketches landing page does [6220] and then when we make it all the way [6222] down here underneath there's going to be [6223] a little cut off [6224] where the bg goes back to that nice [6226] color so let's work on the footer [6228] and then let's finish all the stuff up [6234] so let me sort that out good we're going [6237] to create a footer now [6238] the way that this footer is set up is [6240] it's a full width footer [6241] so all the way from one side to the end [6244] and then inside of that there's nested [6246] uh max with 6xl and it's like kind of [6249] two components there's a component over [6250] here [6250] then that has a border on the bottom and [6252] then there's another component with like [6254] a grid layout that looks like one two [6255] three four five six [6257] at the very bottom there's a little [6258] copyright we're not going to do that [6259] just because i don't want to get any [6260] legal trouble [6261] that's essentially it so i'm going to go [6264] div class with fall bg gray 50 first i [6267] believe [6267] 50 is probably enough and let's just go [6270] h64 for now just so i can see what that [6272] might look like [6274] yeah that's perfectly fine we're also [6276] going to go mt [6277] 16. bump this down a bit [6280] let's do mt20 actually [6284] should give us some extra room good [6288] and then let's get working on our [6289] newsletter [6292] we're gonna have another div inside it's [6294] max with 6xl [6296] border b border gray 200. [6304] and then it's going to be uh [6307] flex item center [6310] justify center now justify center [6314] not justify center we're just gonna [6316] stretch it all the way across [6318] div has no ending tag why is that oh did [6322] i get rid of a [6323] another tag no i just didn't write it [6324] over here [6326] there you go [6329] cool we should also mx on this that'll [6331] push that in the middle [6334] good got that border bottom we got [6335] nothing there so why don't we start [6337] creating our divs [6338] first div is going to be width one half [6344] and it's going to have a h4 [6348] with that and then underneath there's [6351] just going to be a paragraph tag [6353] with that [6357] cool let's go to this and add [6360] like py4 or something [6364] let's add py8 who am i kidding i love my [6368] padding [6370] then let's just copy this div over do [6372] the next section the next section is [6374] kind of interesting [6375] oh let me just font bold this first font [6378] semi bold rather [6381] uh the next section is kind of [6382] interesting actually we have uh [6384] what looks like an input just [6388] smacked up against a button so [6393] in order to do that all we have to do is [6396] just create a parents div [6400] just with what looks like a border do [6402] they even have a border [6406] yeah let's just do that we'll make that [6409] uh [6410] parent div span the full width of that [6411] half container and then we'll have an [6414] input [6415] that class is going to be like py let's [6417] do 4 [6418] for now px2 actually let's do py [6422] 3 px4 [6426] background white and then let's do [6429] rounded [6429] sm you know what actually no we should [6433] put this [6435] on this that would be better [6438] a lot more apt uh and then let's just [6441] put a placeholder here [6444] that says your email address [6449] and then we'll have just an ahref i [6452] suppose with the [6453] same padding [6458] and it'll say subscribe [6466] and that should be good [6470] decently good i mean for now [6474] okay we're back to ours let me just give [6476] this thing a quick refresh [6480] uh scroll down scroll down where are we [6484] okay we got the button that's the [6485] subscribe right over here it's not [6487] happening because we didn't flex these [6490] and we also didn't justify between these [6492] so flex justify between [6494] let's turn the background of this ahref [6496] to carrot [6497] uh 600 pop that up [6502] and for whatever reason the border i'm [6505] always kind of iffy on borders here [6507] i think if i were to add a border yeah [6509] it looks okay it's not the best board [6511] i've ever seen not the worst board i've [6512] ever seen [6513] for some reason the border uh doesn't go [6516] all the way over this oh you know what [6517] we could just add a border carrot 600 [6520] and that should just make this pop out a [6522] little bit more [6525] cover that yeah that looks fine to me [6529] looks like theirs is actually pushed a [6531] little bit more [6532] so why don't we explicitly add a width [6535] this say four-fifths and why don't we go [6540] to here and do with one-fifth [6546] hmm no never mind let's not do that [6551] for whatever reason this looks like it [6553] goes a little bit wider than half [6555] actually now that i'm looking at it so [6558] instead of half why don't we do [6559] uh it's not thirds [6562] could it be fifths let's see one [6566] two three four [6569] wait one two three [6574] four five yeah we could try that [6579] let's do two fifths and let's do three [6581] fifths [6583] you know i almost wonder if it would be [6585] better to just [6586] grid this might solve a couple of issues [6593] because now that i'm looking at their [6595] website if we go [6598] rather below a certain break point [6602] it looks like the width of this changes [6605] hold on let me go back down so it looks [6608] like it has a certain like max [6610] with that break point here [6614] as we go up it gets kind of wider and [6615] wider and wider [6617] oh boy that's really annoying [6620] and then it gets just a little bit wider [6622] than uh than half [6625] yes why don't i do that [6629] let me just oops [6632] there we go yeah let me [6635] go back down to subscribe to our [6637] newsletter monthly digest latest sketch [6639] news and resources [6641] first of all this looks to be a little [6644] bit [6646] darker than the background [6650] let's do 600 and then let's also do like [6653] tracking tight [6655] pull that in a little bit [6659] it's pretty good it's pretty good [6663] one thing that i uh really like tailwind [6666] for is the number of [6668] grid utilities rather like with [6670] utilities that they have like we have [6672] 112 212 312 all the way up to i believe [6675] like [6676] 10 12. so i could do [6682] i could do uh sevenths i think [6687] yeah seven twelfths that might work [6690] let's do seven twelfths and here let's [6692] do five twelfths [6695] let's see if that's more accurate yeah [6698] that actually looks [6699] substantially more accurate it's a [6701] little bit off [6702] and it looks like this is a little [6706] not rounded enough so if we round this [6709] push that to medium [6711] then that should be good then we have [6712] that issue again where uh [6716] uh the borders don't kind of wrap [6718] entirely but if you go overflow hidden [6720] problem solve for that and that actually [6721] gets rid of some of the uh the one of [6723] the other issues we had here [6724] so that's really nice last thing is it [6726] looks like this [6727] subscribe button lights up a little bit [6729] when we hover over it [6730] so we go to the subscribe button why [6733] don't we go hover [6734] bg carat 500 then hover shadow medium [6739] granted because we're overflow hiding [6741] we're probably not going to get that [6742] shadow yeah unfortunately we're not [6743] going to so why don't i actually take [6744] this overflow hidden off [6747] let's see how that changes [6751] and then because we have this border [6754] around it we also have to change [6756] the border value sorry not bg i'm in [6759] border we have to change the [6760] border color as well any time that you [6762] have a border in addition to [6765] just the background element you have to [6767] make sure to change that on hover [6769] now let's add a little bit of a duration [6770] on this [6773] maybe even more theirs looks like it [6776] takes another little bit to come into [6779] effect [6780] yeah that looks pretty realistic and [6783] then [6784] i wonder if we could even shadow large [6786] that button because for whatever reason [6787] that button looks like the uh [6789] shadows a little bit more yeah there we [6791] go that's more like it [6794] okay great and then why don't we go [6797] border sorry rounded [6801] uh r medium let's see if we can get [6804] something similar [6806] hell maybe even small is fine [6811] yeah no let's do medium [6816] okay perfect we have that hover button [6819] uh hover [6820] effect now the only thing that we have [6822] to change here is we have to make this [6823] input field the full width of this [6825] little container so why don't we go to [6829] this input field [6830] and then make this with full [6834] it's gonna push it all the way through [6836] and i don't really like how it how it [6837] works how they have their setup but [6839] that's fine granted we could always just [6842] go focus [6843] outline none and then instead do focus [6846] like ring two or something like that [6848] and just use tailwind's built-in ring [6850] utilities the only issue with that is [6852] then we would have to round this [6854] as well there you go [6860] and then instead of rounded md we would [6862] probably do rounded lmd that we wouldn't [6863] get that [6864] yeah but then it kind of pumps out a bit [6867] so [6868] i don't know i'm not really that much of [6869] a fan in all honesty [6872] so let me just get rid of those [6877] yeah there you go that looks fine okay [6881] let's see what else we got to do here [6884] we have that line that's good uh [6887] now all we really have to do left is [6888] create a one two three four five six [6890] column grid layout [6892] so let's scroll down [6895] excuse me to where we have that bg gray [6898] 50 that's right over here [6900] and now let's create a grid with uh grid [6904] call six it's gonna be really [6905] interesting dealing with the mobile [6906] responsiveness of this [6908] and for now that's good oh let's just do [6911] a gap [6913] they probably have a gap probably quite [6915] a big gap in all honesty [6917] let's do gap x16 and let's just see how [6919] that goes [6921] and for now [6925] why don't i just create a bunch of uls [6928] i think i'll start with that yeah let's [6931] just create six uls [6933] and then in every single one why don't i [6935] just do [6937] example element and let's see how that [6940] looks [6942] okay oops so obviously a little bit [6943] spread out so we should do mx auto max [6946] with 6xl [6948] let's do our paddings as well should [6950] push that in [6951] good um and i'm realizing now we also i [6954] don't think [6955] i don't think we did the padding on this [6956] element too so while i'm at it [6959] why don't i just make it really easy on [6961] myself [6963] just copy that over to [6968] here actually [6971] and now everything here should be pushed [6973] in the same amount [6974] good and then let me see if i did that [6977] up here [6978] did i add padding [6981] no i didn't add padding because i [6982] actually need to wrap this [6985] in another div with [6988] these features [6991] and that now should push that in a [6992] little bit [6994] cool to verify this i'm just going to [6999] squeeze in yep great we have that little [7001] bit of padding that's nice and then the [7003] padding goes to five on smaller displays [7005] which is nice [7006] uh and you know i should probably also [7008] change some of that text size because [7010] that text size is a little too big [7012] so why don't we do lg and otherwise [7015] we'll do text 3xl and then lg [7017] and then otherwise we'll just do text [7018] excel and that should be good [7023] all right let's give this a quick try [7026] nice yeah that looks uh that looks fine [7028] to me [7028] not perfect i mean i think it just i [7030] think it jumps down a little too fast so [7032] why don't we do [7036] md text for xl just so we have like a [7038] kind of an intermediary there cs3 [7040] that's four sorry that's five that's [7043] four and that's [7044] three there you go looks good to me [7048] okay so yeah now that we're dealing with [7049] this bottom section what we would have [7051] to do [7051] is add a little bit of empty to the [7055] uh to this element looks like that's [7056] probably gonna be a seven or eight so [7058] i'm just gonna go seven [7061] yeah i think seven is right and then [7064] all of these uh let's just wrap this [7067] in an li and then just make all of these [7071] like the parent element basically [7073] so the the parent not the parent rather [7075] the uh kind of the header element [7077] so in order to do that we're just gonna [7079] go font semi bold [7083] yeah that looks good and i think some [7086] tracking [7086] might be at play here no it's not okay [7089] good [7090] awesome now i'm just going to copy over [7092] all of these titles so product apps [7093] resources company follow us [7095] and more so products oops [7100] apps resources [7104] company follow [7107] us and [7110] more see how that looks [7114] good that looks decently similar i would [7116] say the [7117] padding might actually rather the gap on [7119] the grid might be a little too much so [7121] let's maybe pump that down to 14. see if [7123] that works [7125] maybe even 12 actually [7128] yeah there you go i'd say that's a [7130] little better awesome [7132] let's remove the height from this [7134] element now because we no longer need it [7136] now that'll just be however tall it is [7137] fantastic and now let's just [7140] check take a look at how these things [7142] are built it looks like they're just [7144] links [7145] they probably start at like a text gray [7146] 500 and when you mouse over it goes like [7148] texture 800 or so [7150] looks like there are a few cool like [7152] little svgs that we have to take care of [7154] this svg is going to be cool because i [7156] don't think there's like a rotate [7157] uh what would this be like negative 45 [7160] i'm not 100 sure so we might have to do [7162] some funky stuff with that this looks [7165] like it's going to be fun [7166] i'm guessing these are all just svgs [7167] that they have so if they are i'll just [7169] copy those svgs [7170] and we have some more like heroicons [7172] placed here there [7174] so just to make sure that i get [7175] everything right from the get-go [7177] let's do a list item [7182] um let's do this [7186] so we're going to make another list item [7187] and inside of that list item we're going [7188] to have an aahref we're just going to go [7190] to [7191] that little number sign for now and the [7194] class is just going to be text [7195] gray 500 and then hover it'll be text [7198] gray 800 [7200] we'll have a transition and then we'll [7201] have a duration 200 on that [7204] and that should be good let's just do [7206] overview for now [7207] overview and then hey let me [7211] make that a little cleaner and let's see [7214] what that looks like [7217] that's pretty good i would say the first [7218] element probably has a little bit of [7220] extra margin top so i'm gonna go margin [7221] top uh [7222] like one here bump that down just a [7225] little [7226] bit extra maybe even more let's go merge [7229] on top about two [7233] for whatever reason that's not really [7234] adding much space here [7240] looks like my cat's having a fit [7244] i'm going to uh i'll tell you what i'm [7247] going to do actually i'm just going to [7248] go to this ul [7249] and then add a flex flex call and then [7251] space y [7252] and we'll just do like four and that way [7254] all of these will be spaced out at about [7256] four [7257] so maybe three actually [7260] there you go i think that's actually [7262] gonna work great [7264] so uh this is actually [7268] literally still too light so that's uh [7270] tex gray 500 actually has to go to text [7272] screen 400 [7273] yeah there you go that's much better [7277] and awesome now that we have that done [7278] we can just start banging off the rest [7280] of these [7281] i'm going to just copy and paste this a [7283] couple times i believe it's four [7285] on each one three four one three four [7287] yes so it's four for all of them [7288] so i'm just going to copy and paste this [7290] like four times [7292] in in every single one here [7296] so we go li [7299] good [7302] paste that four times [7309] let's format this a little better [7316] awesome and now i'm just going to start [7318] changing these names [7322] boy this is going to be fun so what do [7324] we have overview for designers for teams [7326] and pricings [7328] for designers for teams [7332] feel free to skip through this section [7333] if you'd like pricing [7335] then we have mac download mac releases [7337] mac beta [7339] mac download [7342] mac releases mac beta and then what get [7346] mirror good and then we have get help [7349] extensions events and meetups and blog [7352] get help extensions [7356] events and meetups and then [7359] blog about us careers press labs [7363] about us [7366] careers press [7369] and labs and then twitter facebook [7372] instagram dribble [7376] it's always been interesting to me how [7382] wait a second twitter oops facebook my [7384] bad so it's been interesting to me how [7385] twitter is now really taking the [7387] forefront and [7387] uh kind of like the web development [7390] community [7391] there's an extra b in there right yeah [7395] manage a license launch [7399] license developer platforms [7403] terms and conditions and i think [7406] lassen's privacy right oh not just [7407] status [7408] okay that was fun [7412] great we have that little effect thing [7415] going on fantastic [7416] okay last thing we have to do is [7419] let's remove this placeholder div at the [7421] bottom because we no longer need that [7423] so this is going to go all the way down [7424] to the bottom and [7426] let's just space this out just a bit [7428] more ours actually looks [7430] pretty good but i'm just going to space [7432] ours out a little more because [7434] the padding needs to be a little bigger [7437] so this is a god awfully long footer [7439] right let's do mt [7441] why don't we actually just do py uh 10 [7444] on this that way we'll get a little bit [7445] of the bottom too [7447] yeah there you go that looks much better [7449] like i mentioned earlier we're not going [7450] to do the sketch bb thing [7452] for whatever reason this looks like it's [7454] came back so i'm going to go back to [7455] that input element [7458] and i'm going to make that rounded md [7462] yeah there you go [7467] awesome and then the last thing i'm [7468] going to do now is i'm going to add [7470] these little arrows and stuff like that [7472] so they're actually quite easy to do you [7474] could just [7476] go to whatever the section is that you [7477] want so in this case mac downloaded let [7479] me just [7480] command f this mac download i just need [7482] to make this [7483] class a flex container and i'm just [7484] going to do like space x2 [7487] and i need the hero con where the arrow [7489] is down so i'm going to go arrow [7490] down oh they didn't have that we're just [7493] going to go arrow [7495] down and then right next to this i'm [7497] just going to go [7498] down class is equal to [7504] let's do text screen 400 and if i had to [7506] guess i'd probably say w3h3 am i right [7512] whoa it looks a little high now it needs [7514] to be a little bit bigger so we're going [7515] to go w4h4 [7517] and then we just need to add item center [7518] to this i always forget [7521] nice that looks relatively similar ro is [7524] a little bit different i probably should [7525] use the fat arrow here rather than the [7526] super narrow one but that's okay [7530] and spacex 2 might be a little too big [7532] let's do spacex one [7535] yeah that's better okay so that's that [7538] now we need to do the same thing [7539] just with that diagonal arrow i don't [7542] think these guys have diagonal arrows [7544] no they don't so let's do [7547] uh let's do an arrow narrow right [7550] and we're doing that for get mirror so [7552] i'm going to go down to get mirror [7555] paste in that svg let me go to my li and [7558] of course do flex item center space [7560] x1 the class for this is going to be [7563] w4h4 [7565] and then textgray400 let's see what this [7568] looks like [7569] yeah so it's a little bit to the right [7570] i'm going to see if we could do [7572] transform rotate negative rotate uh 45 [7577] let's see if we can do that can't we oh [7579] yeah we can okay perfect [7581] nice so now we have uh some something [7584] very similar going on there [7585] you notice that we don't actually have [7587] the mouse over on that svg i wonder if [7590] we can [7591] get that by putting this [7594] wrapping this text in a span [7599] putting the svg inside of the a tag [7603] and then putting all of the relevant [7605] elements on that attack i wonder if we [7606] could do that i don't know if we can [7609] no no we can't make that svg hover [7612] unfortunately [7613] so in that case i'm just going to take [7614] that out [7616] and make it like it was before okay good [7621] now if we scroll down where are we here [7623] careers so now we're going to do careers [7626] careers looks like it's just a circle [7630] with the number nine in it in all [7631] honesty so i don't think that's an svg [7633] or anything in which case we could just [7634] make it ourselves [7635] let's go class uh let's see the same [7637] thing spacex one let's go item center [7639] we have the a over here now i'm just [7641] gonna make a div [7642] i'm going to go w6 h6 bg gray [7646] what 400 rounded full [7649] and then i'm just going to go hover like [7652] vg grey 800 [7654] let's do that let's just put the number [7656] nine in [7658] and while we're at it we'll just we'll [7660] add flex to that justify center and item [7662] center just to pump that nine in the [7663] middle [7664] let's see where we are oh that's [7667] actually quite similar [7668] wow look at that [7671] yeah that's actually super similar color [7673] colors too [7674] i'll add a cursor pointer to that but it [7676] looks like i can't combine these so that [7678] they both [7678] uh hover which is kind of annoying but [7681] you know it is what it is [7682] still looks pretty good i guess the text [7684] would probably be sm there too [7686] just make sure we got it right yeah that [7688] looks good to me [7689] nice i really like that and then we just [7691] have the twitter facebook instagram [7693] dribble [7693] social media svgs [7697] yeah i knew they were going to be svgs [7699] so for that we could just do the same [7700] thing [7702] i'm just going to paste that svg in for [7705] twitter [7706] this svg in for facebook [7712] this one for instagram [7715] it's nice that they excuse me it's nice [7717] that they make this so easy [7720] and then this one for dribble [7726] and then what i'm gonna do is i'm just [7728] going to [7731] add the same classes i think this is [7733] spacex one item center i'm just going to [7735] add these same classes [7737] to the four allies that are like the [7740] parent parents [7742] of this so if i do this i go back now [7747] i have them why are they at the oh yeah [7749] they should be at the beginning whoops [7751] uh so that sucks okay well it just means [7754] i gotta [7756] cut these and put these after so that [7758] svg is going to go [7760] first this one's going to be second [7764] this one's going to be third let's put [7767] that there [7768] and then dribble is going to be fourth [7772] i'm just going to format that and then [7774] you see there's this main footer nav [7775] item icon i'm just going to take that [7777] out completely go [7778] text gray 800 400 and then hover text [7780] gray 800 [7781] and i think i think they're doing text [7782] gray not h not background are they no [7785] they're probably doing background [7786] actually [7788] and we'll go fill current now it'll fill [7790] with whatever our uh [7791] our colors are [7799] let's do that and we'll also remove this [7801] text gray 400 because there were two [7805] and one we had a cursor pointer while [7807] we're here something weird happen with [7809] the dribble one looks like the dribble [7810] uh one is on another line why is that oh [7812] i pasted outside of the [7814] li nice going [7818] so if i format that this is going to [7821] pop over good and then we just have the [7824] same arrow [7825] for developer platform is get uh mirror [7828] so i'm just gonna go get mirror [7830] literally just copy this over i'm gonna [7832] go developer platform [7835] and just replace this entire li and i'm [7838] just gonna type developer platform [7841] and then manage license just has that [7843] little chevron down [7844] and that chevron down is going to be the [7846] same as [7848] if you remember on ours that little [7850] chevron down up here [7852] oh never mind that doesn't look good [7857] weirdly enough i think this is just a [7858] little too long [7861] yeah it totally is a little too long [7866] why would that be spacex one too big [7870] could be let me see if i just add [7873] tracking tight to this [7875] and remove spacex one if that's gonna be [7876] enough space [7878] yes uh wait yes it is gonna be enough [7882] space [7884] but i want it to space out a little bit [7886] perfect okay [7888] yeah that's indistinguishable awesome [7891] and uh what was i just talking about oh [7894] yeah manage license i want to put that [7896] little chevron down so you guys know [7897] what that chevron down looks like [7900] why don't i just go all the way up to [7902] the very top again and you'll see i have [7903] that chevron down [7906] resources right here i'm gonna copy that [7909] svg [7909] i'm gonna go all the way back down to [7912] where it says manage [7914] license and then i'm gonna put that here [7916] and then i'm just gonna copy [7918] the other styles for putting these oops [7920] putting these within the li [7924] so let's copy and paste that right here [7929] awesome last thing is just to change [7932] that color [7934] so why don't i go to svg text [7937] gray 400 nice [7940] oh yeah cursor pointer all right last [7943] thing we have to do here [7945] is mobile optimize this layout so [7948] i scroll all the way down here to theirs [7950] and i [7951] start pushing this in a little bit [7953] you'll see they have [7954] pretty ample padding around this element [7959] and if we scroll down to hours we have [7961] something pretty similar going on [7963] although i think our padding is [7964] substantially lower yeah it is [7966] substantial [7967] until you reach that large break point [7968] and then it becomes similar so all [7970] that's really telling me is we probably [7971] don't [7972] even need the lg px2 so i'm going to [7974] find lg px2 and i'm just going to remove [7976] that [7979] and we're just going to just get the px5 [7982] really so why don't i just do this [7988] oops sorry let me put that back [7991] yeah let me just do px5 that should [7993] should be a lot better [7997] for some reason that lg px2 is still [8000] applying here so i'm going to go [8001] lg px2 delete that there you go [8005] now that's a lot further in which is [8006] nice yeah it looks a lot smoother that [8008] way [8010] on top of that it looks like the [8014] bottom here needs to wrap a little more [8016] because theirs goes from six column [8018] layout [8019] to a three column layout the second that [8021] it gets a little bit smaller [8022] and boy is that super annoying we have [8024] to uh scroll all the way up every single [8027] time that happens so screw that [8029] if i go to this grid which i believe [8033] is right here that means that on [8038] large screens i want it to be grid calls [8039] six no excel screens i want it to be [8041] grid call six large screens will do good [8043] grid calls three [8045] on medium screens why don't we do grid [8047] calls [8048] two actually why don't we do small grid [8049] calls too and then otherwise we'll do [8051] grid calls 1. [8052] that should solve 95 of our problems see [8055] theirs goes 3 yeah i figured this goes 2 [8058] and so on and so forth so ours goes [8060] there ours goes to 3 then ours goes to 2 [8063] and then ours now goes to one and i [8067] suppose [8067] uh the last thing we need to do is just [8069] add a gap here because the gap [8071] is on uh [8074] x but it's not on y so i wonder what [8076] would happen if we just make that gap [8078] 12. how would that look [8080] a little bit big so why don't we do gap [8082] x [8083] at 12 and gap y6 [8087] pump that up yeah there you go that [8088] looks a lot better [8090] okay cool so that footer is done and now [8092] that i'm looking at it we also need to [8093] fix this [8094] top section here because theirs folds [8096] over [8097] after what looks like the medium break [8099] point and ours does not fold over after [8101] the medium break points so [8103] why don't we fold ours over after the [8104] medium break point uh [8108] where are we here okay so this is width [8110] 7 to 12. [8111] why don't we just put that on medium [8112] we'll just put that in full otherwise [8117] and that should work now right [8122] so we just go go go go go go go go go [8125] you know what actually we don't even [8126] have to do that [8128] we could just go actually no we should [8131] do that [8132] but the major issue here is we just [8134] don't need to flex this [8136] so we go medium flex otherwise just [8138] going to be block [8140] yeah there we go and then i don't think [8143] they do this but i'm going to add [8145] three units of margin top [8149] just to space that a little bit more on [8150] smaller screens [8152] awesome it's about as small as it gets [8155] and then as we go up up up up up up up [8157] stretches out even more [8159] alrighty i am quite confident to say [8162] that [8162] uh we did a pretty good job here we [8164] rebuilt essentially [8166] you just scroll all the way up to the [8167] top of the screen so you guys can see [8168] where we are we rebuilt what i would [8170] say is probably like 80 to 90 percent of [8174] all [8175] of the elements on this landing page we [8177] did it all in html [8179] css using tailwind and i will say i mean [8184] coming from a [8187] design perspective this is incredibly [8189] similar [8190] it's super similar like uh basically all [8193] of this is [8194] the same just minus some javascript [8198] and minus like a couple of percentage [8201] points on like the font sizes and [8203] the margins and little apps like this [8205] that you know [8206] uh little javascript plugins like this [8208] that rotate elements and stuff like that [8210] oh i guess the last thing actually is we [8212] didn't copy over this text [8214] let me do that uh what does this open up [8216] the design process and this is work fast [8218] create beauty [8220] let me see i'm just going to go down [8222] here [8224] and just change that [8228] because i want you guys to have this [8230] later i'm going to put this up on a [8232] github and you guys can use this [8233] yourself [8234] for like a project starter or something [8236] like that but yeah anyway aside like i [8238] said from a couple of little changes [8240] like that svg that rotating thing [8242] this is basically the sketch landing [8243] page this is one of the reasons why i [8245] love tailwind so much [8247] and i wasn't even using it super [8248] efficiently we didn't even use any [8249] component class or anything like that [8250] but [8251] you can mock up a landing page in really [8253] just a few hours [8254] it's a lot easier if somebody has given [8256] you a design that's why i always like [8258] like doing rebuilds like this when i [8259] don't have a designer to give me [8260] something just because uh [8262] developing and designing at the same [8263] time is always more difficult that's not [8265] to say that you can't do it though i've [8266] done it for a lot of my own personal [8268] projects a lot of my own startups [8269] i hope this video helped guys if you [8270] guys have any questions or anything like [8271] that about how to get started with [8272] tailwind [8273] why maybe some things aren't working out [8275] for you or like why [8277] uh i'm doing certain things feel free to [8279] give me a leave a comment below [8282] i'm going to respond to basically every [8283] single one means a lot to me to be able [8284] to you know help people like you guys [8286] out because youtube is primarily how i [8288] started [8289] anyway thanks so much for watching i'll [8290] catch you guys in the next video

