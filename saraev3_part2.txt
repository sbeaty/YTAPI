 might surpass that goal much [1535] faster than December. But well, it's [1537] May, so that's another seven months from [1539] now. You acquired one client that pays [1541] you $10,000 a month. Yeah, we're just [1544] close another one. you're about to close [1546] another one or you you just did. We did, [1547] but another really good tip that you've [1550] had like don't claim a client until the [1551] money hits your bank. So, we verbally [1553] agreed to another client, but the money [1556] has not hit the bank just yet. I'm [1557] crossing my fingers for you. I'm not [1558] sure if this is a local Silicon Valley [1560] or San Francisco connection. Those are [1562] definitely a lot stronger. But yeah, I'm [1563] glad that you brought that up cuz I [1564] can't tell you the number of times [1565] people have been like, I just closed [1566] this amazing deal. And we're all so [1568] stoked for them. We're like, this is [1570] awesome. And it's like, all right, so [1571] how much money was it? And it's like, [1573] we're still figuring that out. I'm like, [1576] you didn't close them. You got a you got [1578] a text message from them. That's what [1580] you did. Even like an agreement signing. [1582] So, I'm not very big on the agreement [1583] side of things just because, you know, I [1584] work primarily with small to mid-size [1586] businesses and I work internationally. [1587] So, in practice, if I'm making like [1588] $5,000 per month off a client, client [1590] doesn't pay me for a couple months or [1592] whatever. My total owings are $10,000. [1594] It would cost me way more money to try [1595] and go after somebody, you know, than it [1597] would if I were to actually just go and [1598] acquire new clients for the $10,000. So [1601] logically speaking, like the agreements [1602] and stuff, to me, it's always just added [1604] friction. That said, I think there are a [1605] couple points where you can consider a [1606] client signed. If you have an agreement [1608] signed with them, there's some sort of [1609] legal binding and slash or if you have [1612] money sent or received, you know, in [1614] your pocket. So to anybody that's [1616] watching that might think that they have [1617] a client, you don't really have that [1619] client until those requirements are met. [1620] Unfortunately, that's that's the [1622] reality. And I've actually waited until [1625] sharing the win in the community. I'm [1626] not big on like sharing things publicly, [1629] but I felt like I owe it partially to [1632] you and to the community for my success. [1635] And so I wanted to kind of share that [1636] alongside of like the lessons that I've [1638] learned to see if they can help someone [1640] else. But I waited until I've had the [1643] money in the bank. We worked for two [1645] weeks together. I knew this is going to [1646] be like a serious retainer client to [1648] then share that this is like actually [1650] like, hey, this is a win, I guess. Very [1653] good call. I appreciate that. Yeah, [1655] obviously seeing wins in communities [1656] like Maker School, they help me and they [1658] help a lot of other people in the group [1660] overcome their limiting beliefs, but [1662] there's also this sort of gamification [1664] aspect where that's the metric that they [1665] go for. In a way, it's like a perverse [1668] Instagram. It's not necessarily the good [1669] thing to get a bunch of likes on your [1671] post, but I guess the way that I [1672] conceptualize it is like at least you're [1673] getting likes for making money as [1675] opposed to something else. And that's a [1677] challenge when you're building a [1678] personal brand, like a founder brand. [1681] For some of the decisions and some of [1683] business situations you end up with, you [1686] don't really want to have a feeling of [1689] public pressure and you don't want to [1691] feel like you're in a public eye as much [1693] when you're making this decisions. And [1696] so I felt like this kind of breakthrough [1699] that I've had in the business happened [1701] when I was in this quiet point in my [1704] life when I was just alone in my room [1706] for 2 and 1/2 weeks. I took a break from [1708] content. I decided I'm going to take it [1710] seriously and I've gotten through so so [1713] far within that such a short period of [1715] time. And so making it public felt kind [1717] of weird like almost unnecessary and [1719] felt like I should continue building in [1721] quiet which I think I will for some time [1723] until I reach like a meaningful [1724] milestone. I was talking to another [1726] founder too who's big on like vlogging [1728] their journey on YouTube and I think [1731] it's fantastic but for me personally [1733] like I'm worried what percentage of my [1735] decisions will become kind of [1736] performative and shallow just because I [1738] feel the need to kind of like explain [1740] myself and make sense to to people on [1743] YouTube. So there's that kind of concern [1746] and something to think through if you [1748] are sharing stuff whether it's like [1749] within a community or publicly on social [1752] media. Yeah, I definitely know what you [1754] mean. How are you dealing with that? [1756] Yeah. Yeah, it's a good question. I'll [1757] answer that. But I think humans are [1759] consensus creatures. And so obviously we [1762] make decisions in part based off of the [1764] opinions of those around us. And so it's [1766] very important for the opinions of the [1767] people that you're taking into account [1768] to be good opinions. And when you blast [1771] out everything that you're doing [1773] socially, they don't all tend to be good [1774] opinions. can't tell you the number of [1776] like extraordinarily limiting beliefs [1778] I've seen when I started sharing my own [1780] business growth online and just like the [1781] weird takes and I really did have to put [1784] blinders on that as well and just be [1786] like hey like you know I'm not going to [1787] make any of these decisions because that [1789] person thinks it's a good idea or that [1790] person thinks it's a bad idea but [1792] because it's me you know so 100% with [1795] you there and I think there's a very [1796] intelligent mature way of thinking about [1798] branding there's another hidden cost I [1799] would say and that's that you are just [1801] spending a lot of time on something that [1803] as you mentioned is performative but [1805] also So that just doesn't directly [1806] contribute to revenue in the short term. [1808] Yeah. Like if you have let's just say 10 [1810] hours in the day to keep the math really [1812] simple. You spend like an hour a day [1814] recording your vlog or touching it up or [1816] editing it. That's 10% that you are not [1818] utilizing that you could probably be [1819] doing lead genen with, right? And sure, [1821] maybe it's like technically still a form [1823] of lead genen, but the audience that's [1825] going to be watching Anna build her [1826] personal brand is very different from [1828] the audience that Anna might be [1829] targeting as like a video marketing [1831] agency. So that's something that I wish [1833] beginners understood a little bit more [1834] because I see a million bajillion, you [1837] know, day in the life of an entrepreneur [1838] on my journey to 10K month. And I'm [1840] like, I get it. I really do. And I I [1841] think like the sharing culture is [1842] valuable and you're going to look back [1844] on this in a few years and probably be [1845] really stoked that you had it. But like, [1847] who's going to watch your stuff, man? [1849] Like unless you have some major [1850] accomplishment unless you're like [1851] focusing your time on revenue, unless [1852] you have the money that allows you to [1853] zoom out and not focus 100% of your time [1855] on revenue generation, like you should [1857] be focusing on the revenue generation. [1858] Yeah, content it takes a lot of time, [1861] especially when you're not formed as a [1863] founder yet and you don't have that [1864] experience of putting the blinders on [1866] and kind of have a compass and having [1869] had the the experience of being in tough [1872] situations where you've made the right [1873] calls. you know, you are going to get [1875] influenced by all this random people. [1877] And then I do think that like a lot of [1879] the content ends up being performative, [1882] which isn't necessarily bad. Like maybe [1883] it makes more sense for you to act out, [1886] you know, the journey of a founder and [1888] you made this like in a cute little TV [1889] show and then you got partnerships and [1890] and you become a content creator and [1892] that's fine as well. But and that's also [1894] something I think I've taken from you in [1896] a way where I've realized that sometimes [1899] and actually in most times probably the [1901] faster way to get to revenue is by [1903] focusing on direct actual regen where [1906] you're reaching out to clients and [1907] having something that they're willing to [1908] pay money for. But then once you do [1911] achieve that milestone, it's just so [1913] much easier to come in and say, "Hey, I [1915] have a business that makes 15k a month." [1918] Because now all of a sudden you have all [1920] these people that are aspiring to this [1922] outcome and that would listen to you [1924] because you are kind of where they want [1926] to be. And from there it just becomes [1928] easier and easier to build the audience. [1930] And you're kind of right like with your [1931] videos as well. When you start a video [1934] saying like, "Hey, I'm Nick and I make [1936] this much amount of money in a month and [1938] I'm aspiring to be to like 2 million." [1941] All of a sudden people are like, "Oh, [1942] this is the level where someone [1944] operates. This is their achievement and [1945] credibility. makes sense to listen and [1947] see what else this person has to say. [1949] Yeah. Uh well said. I think the idea is [1951] you just demonstrate some form of [1952] exceptionalism. Like what makes Lionel [1954] Messi interesting to watch, you know, [1956] the soccer player? It's like the fact [1958] that he's like the top 0001% in his [1961] field, which is some form of football [1964] that I will never be able to I can [1965] hardly chew gum and walk straight at the [1967] same time. But to me, as somebody that [1969] like isn't very good at that, like it's [1970] just inherently interesting to watch [1972] this guy like talk, man. He could be [1974] sitting on a subway scrolling through [1975] Instagram reels. Have you seen the um [1977] Canu Reeves in New York like on the [1979] subway and it's just like people that [1980] are like, "Oh my god, it's Can's just [1982] scrolling through his phone." It's [1983] inherently interesting to see this dude [1985] who's like achieved top whatever 1% [1987] performance in acting. Just scroll [1989] through his phone, right? I think we're [1991] just like naturally drawn to some form [1992] of exceptionalism. I don't know why. [1994] Mirror neurons, some form of empathy, [1996] whatever. And like if you want to stand [1999] out in content, you have to perform some [2000] sort of thing super exceptionally well [2002] because it's just a million other people [2003] all doing the same And it's like [2005] if you don't have that, then why why [2006] would somebody listen to you as opposed [2007] to somebody else? This is the same [2009] reason why when you made your wins post [2010] in Maker School blew the hell up, right? [2012] It's like oh my god, like she just did [2014] something we're all trying to do right [2015] now. That's crazy. And then like anytime [2017] you say anything now, people are people [2019] are listening, right? On a small scale [2021] because it's maker school, but the same [2022] applies to social media as well. Yeah. I [2025] think like I've reflected on that a [2027] while back and I think desire is one of [2030] the greatest ways to get people like [2033] motivated and interested like if you [2035] have something that they want whether [2038] it's money some social position any [2041] other thing that people want display [2042] outcomes that people want and they [2045] follow because of their desire makes [2047] sense to capitalize on that instead of [2049] spending all of this energy trying to [2051] like trick people into engaging with you [2054] by my gosh like coming up with this [2056] emotionally exaggerated stories or very [2059] creative cuts or or whatnot. Yeah. Like [2062] the crazy short form stuff which I'm [2064] sure you see all the time in video. I [2066] mean I've I made them. So like I've we [2069] we all kind of fall into this stuff. And [2072] when I first started actually with the [2074] idea of just making videos like before [2076] socially produced became a business [2078] thing. I was thinking of, oh, I can [2081] document my journey of building this [2084] thing from the ground up. Wouldn't that [2085] be cool? And then that plateaued pretty [2089] quickly and didn't bring the virality [2092] that I thought I would get cuz no one [2095] really cared and I think that was very [2098] fair of them not to care and I'm glad [2100] that I didn't take that route to be [2102] honest. Yeah. Yeah. I 100% resonate with [2105] you. This has been extraordinarily [2107] interesting, chat, Anna, because I feel [2109] like the agency space is services which [2114] aren't very glamorous. And I'm not going [2116] to on where you live, but I think [2117] that like in San Francisco, a lot of [2119] people that are there are very they're [2121] obsessed with that idea of impact that [2122] you mentioned, but so much so that like [2124] the primary thing for them is not [2127] customers. It's probably some form of [2128] fundraising or something initially. And [2130] hearing somebody that has operated in [2133] that environment now building and [2134] running a successful agency and just [2136] like your different take on all this [2137] stuff I guess has has been really [2139] interesting. I was down in San Francisco [2141] a year and a half ago, something along [2142] those lines. There was a young man who [2144] was a terribly brilliant young guy who [2147] was fundraising for some voice agent [2150] call thing and he had seen my content [2153] and some of the systems that I had built [2154] and he was just like obsessed with this [2155] idea of getting me on as like one of his [2157] team members and then getting into YC or [2160] he had some YC connection or something [2162] and he kept on pitching me like day [2164] after day being like, "Dude, I need you. [2165] I need you. I'm willing to do anything [2167] to get you on board. You've actually [2169] made money with this and nobody [2170] else has. Trust me, it's like a crazy [2172] competitive advantage. I'm like, dude, [2174] competitive advantage, dude. Silicon [2176] Valley, man. You guys are got walking [2178] robots and Whimos and I'm making [2180] like 15 $20,000 with some AI automation. [2183] Why is that a competitive advantage? [2185] Well, anyway, I ended up going down [2186] there and and seeing and you know, [2187] connecting and talking with a few people [2188] and like I I learned that that really is [2190] that really is a competitive advantage. [2191] Like the ability to actually sell a [2194] product and not necess like to a [2196] customer and not just to an investor. [2198] I've mentioned earlier in our [2199] conversation that there is that [2203] potential direction for us where we [2205] create a software product and one of the [2208] things that I know are already going to [2210] be like a big differentiator for us is [2212] that we have money and that's going to [2215] put us in a very different position when [2217] we're pitching to VCs if we are like I [2220] think I'm definitely more leaning [2222] towards bootstrapping and that's why [2224] kind of getting to higher numbers by the [2226] end of this year would be meaningful, [2228] but it puts you in a very different [2230] place of leverage. It invalidates the [2232] market demand, right? Because people are [2233] already willing to pay and they're [2235] willing to pay premium because you don't [2237] have this like perfect product. You have [2238] like a clunky product and then you have [2240] a service on top of and so people are [2242] willing to pay premium to solve this [2243] problem. you have like firsthand [2245] experience working with your ICP very [2249] intimately on getting like in our case [2252] to like a video marketing production [2254] system that would create results for [2256] them and then you also have revenue so [2259] you're not coming to them with no money [2261] no ability to like hire a team get to an [2264] MVP and you probably already have [2267] something working because you were able [2268] to like invest some of your revenue from [2270] the services into building this product [2273] and that is so much different to what [2275] like traditionally happens when someone [2278] comes with like just an idea and maybe [2281] like a strong technical talent. Okay, [2283] last point before I make you sell my [2285] community. For me, it's kind of the idea [2286] between like the standout brilliance and [2288] then like the slow steady incremental [2290] progress and I find personally as [2291] somebody that comes from the agency [2292] space, I'm just much more attracted to [2294] the latter. Just seems a lot more [2295] reliable to me. Yeah. Anna, how [2297] important would you say that Maker [2298] School was to your success? Yeah. So, [2300] let me like share my real thoughts. Oh, [2303] boy. I don't know. I would say that the [2306] biggest like change that it's made for [2310] me personally is that it helped me move [2312] away from this like boutique hobby kind [2316] of running business into making a [2320] decision to run an actually profitable [2322] business. So, I think that decision like [2324] I've had to make on my own, but being [2327] exposed to like the way that you run [2330] your company and your business through [2333] like your daily updates channels and [2336] then also seeing other people kind of [2338] struggle with the same limiting beliefs [2340] and the same questions and the same ways [2342] that they trick themselves into [2344] believing that they shouldn't be doing [2346] cold outreach or believing that, you [2348] know, a certain amount is not an option [2350] for them. like having exposure to that [2354] slapped me in the face a little bit and [2355] and made me make a decision. And I think [2358] I would have been comfortable like as [2360] long as I wasn't like lying to myself, I [2362] would have been comfortable just having [2364] a hobby business, you know, just kind of [2365] being like, "Oh, this is like a chill [2367] comfortable life where I make some [2368] money." But I knew that eventually this [2372] wasn't what I wanted. I wanted to build [2373] a serious business. that I got to see [2376] firsthand the actions and behaviors that [2379] people execute on a daily basis to get [2381] to the outcomes that I wanted to be. And [2383] once I saw that and saw how much of a [2385] dissonance it was with what I was [2386] focusing my time and energy on, I knew [2388] that I had to kind of take an action and [2390] stop kind of fooling myself. So that was [2392] the biggest thing. Another thing, [2394] there's also a lot of like tactical [2396] benefits. I'd say things that I could [2397] have figured out on myself, but would [2399] have taken me like so much more time. [2401] you had information that I could search [2403] in maker school easily. So, let's say I [2406] didn't know what software I'm going to [2407] go with invoicing recurring clients and [2410] it was just so easy to be like, "Oh, do [2411] I want a Quickbook or should I pay 3% [2413] for Stripe?" That was a question. Type [2415] it up. You guys already had a discussion [2417] about it. And you're like, "Don't try to [2419] be cheap. Like, focus on, you know, [2421] providing frictionless experience for [2422] the client." So, I sit myself down. I'm [2424] like, "Yeah, probably shouldn't be [2425] cheap." Even though that was my initial [2427] inclination was coming from a place of [2428] scarcity, but client experience takes [2430] precedence. So, let's not be cheap. [2432] Let's pay for Stripe. The same I think [2433] was like for Panda do like just recently [2435] where I was like oh I should pay for [2436] Panda do subscription and almost like [2438] for a second I was like oh but I have [2440] five emails and I could have a docuign [2443] free trial for five months and I'm just [2446] like what are you doing? Like I I also [2449] like looked up people talking about [2451] Pentadoc and someone else had the same [2452] concern. They're like, "Should I pay for [2454] Panda Dog because it's kind of expensive [2456] or should I go as a bunch of other [2458] random stuff?" And you or someone else [2461] was just like, "No, like pay for the [2463] Panda." Like you have to believe in [2464] yourself and you have to have like a [2466] degree of abundance to run the business. [2468] It's not worth like an hour of your life [2470] to be sending out the silly proposals [2472] and then also it's not worth like having [2474] created the friction for the client. So [2477] that helped me be like, okay, I'm going [2479] to not make this scarcity like dissence. [2482] And the way that you know that happened [2484] is by just seeing the conversation [2485] happen in the maker school. And the last [2487] one, the the last but not easy prepared, [2490] please. I'm not usually like a big [2491] endorser of things, but I think this was [2493] a great investment for my money. I got [2495] so much value out of this community. So [2497] thanks. Thanks for that. Um, but the [2499] last one was sales. And that one was so [2503] meaningful. both you've had like great [2506] sales documents I think for like lining [2509] out what you should do when you're like [2511] preparing a video pitch for the client [2513] so like an initial part of the sales how [2515] you should actually act on the sales [2517] call and the way that you should frame a [2518] sales call and then there's also the [2520] sales trainings with Connor that were [2522] just incredible and that had a huge [2525] difference and I have a funny story not [2528] a funny it wasn't funny but I have a [2530] story to showcase for it I had a dream [2534] tech company that I wanted to work with [2535] for a long time. They produced a podcast [2538] that I was listening to when I was [2540] working like in South Korea on this VC [2542] project. I took another short break to [2545] go to this cute little island called [2548] Jedju and I cycled for hours and I [2550] listened to that podcast and it inspired [2552] a lot of my kind of entrepreneurial [2554] aspirations. It was called Masters of [2556] Scale by Reed Huffman. It was very well [2558] produced podcast and shared [2560] entrepreneurial stories about really big [2563] cool tech founders. And one of the goals [2565] that I've had when things went well with [2567] A6 and Z was to get to work on an event [2570] for the Masters of Scale podcast. And I [2574] reached out to the team with a creative [2575] video outreach which ended up being [2578] successful. I didn't get into the event [2579] itself, but I started like a [2581] conversation chain with them and it [2583] dragged all the way into April until [2586] like our very last call came. And within [2588] that call, which essentially was a sales [2590] call, we caught up with the person who [2592] was my point of contact there. It was [2594] extremely vague. We ended the call like [2597] me not having any clear value prop and [2599] just coming from the space of this has [2601] been my dream like I wish we could you [2603] know create content for you and them [2605] being like we see your enthusiasm but we [2607] have no idea what the difference it [2609] would make for our business so it [2610] doesn't really make as much sense but [2612] they were willing to find some kind of [2614] agreement or common ground where we [2615] could experiment with their content and [2618] essentially the deal didn't go through [2620] which makes so much sense and I was left [2623] with this realization that in a sales [2626] call, which essentially this last call [2627] goal was a sales call. It's important to [2630] shut up about my own like aspirations [2632] and creative visions and just focus on [2635] understanding what the client wants and [2637] what kind of problem that they're [2638] struggling with. How can I position the [2640] and even forget about the solutions that [2642] I have in my head and just like really [2644] listen to what they want the way that [2646] they want it. Start generating [2648] hypothesis like do you want this type of [2650] videos or this type of videos? then ask [2652] them immediately. Being very open to [2655] hear no and being very open to hear that [2657] the solutions I'm offering are not [2659] making any sense and having that plan to [2662] readjust immediately. That was huge. And [2665] this is something that I've learned from [2667] the sales goals and like the questions [2668] that I've asked and the way that I was [2670] able to understand them was partially [2672] inspired by a lot of the sales materials [2674] that you had in the school. And so [2675] within that one week, like I've [2676] literally had one week where I knew that [2678] I'm going to have this sales call. My [2680] last sales call with my dream company [2682] went incredibly bad, like complete [2684] failure. I left it knowing that it was [2686] already really bad. And so I was like, [2688] well, we don't have much time here, so [2690] we got to like completely change the way [2692] that I approach sales. And so a lot of [2694] the materials and like the training was [2696] incredibly helpful. I really appreciate [2698] that. I love that point that you touched [2700] on, which is [2702] that unfortunately clients don't [2704] actually really care that much about how [2707] passionate you are and how much you love [2708] them and all of this great stuff. They [2711] just want to know what you can do for [2713] them and your passion and stuff. It's [2716] marginal. Sure. Some people will like [2717] it, but it's a 1% thing. 99% of it's [2720] like, please, how much money can you [2722] make me? Exactly. And that's why when [2725] you ask me about like the mission versus [2727] the revenue generation, I think it's [2729] honest to say that we are focused on [2732] generating revenue. And it creates so [2734] much clarity and I cannot like emphasize [2737] enough how much I love clarity. Like it [2738] actually created me so much sense of [2740] like comfort and much more certainty in [2744] knowing that I am delivering on [2746] something that is going to generate [2748] revenue for this client. the client is [2750] going to be happy and I'll be happy [2751] working on it because I know that it's [2753] it's going to be fulfilling because it's [2754] going to be working for the client and [2757] also help me retain the client. So, it's [2758] going to keep my business going. Like [2760] that sense of alignment with revenue is [2764] so crucial and it's so also comforting [2766] to me and that's why when we're planning [2769] the product content automations in in a [2771] form of a product in the future I will [2773] 100% going to be prioritizing only on [2775] the parts where the content kind of [2778] directly ties into some kind of like [2780] revenue and and revenue attributions [2782] because it's going to be so much clarity [2783] on like where I'm helping people make [2786] money and it's going to be much easier [2787] to sell. they're going to be much [2789] happier with the product. So, it's a [2791] good way to approach business. I think [2793] to paraphrase from one of my current [2794] coaching clients and good friends, Dylan [2796] Watkins, revenue is a clarifying [2799] function for business. If you just hold [2801] revenue above all else, then everything [2805] else that you do in service of revenue [2807] makes your life that much easier. 100%. [2810] Anna, thank you very much for making it [2812] on the call. I really appreciate having [2813] you hearing your journey, hearing how [2816] Silicon Valley agencies, revenue, and [2819] how all of these have intertwined to [2821] make you what sounds like a pretty [2822] formidable business person. I'm excited [2824] to see you 10x. Thanks. I'm excited, [2826] too. Thanks, Anna. Talk soon. Bye.

Video: https://www.youtube.com/watch?v=4gGWba-6nOk
Title: how to make your first $1,000 online with AI (No-BS Guide)
[0] Here's how to actually make your first [1] thousand online with AI from somebody [3] that scaled his own AI and automation [5] service business to $72,000 per month [7] and now runs communities teaching people [9] how to do the same. Now, I'm creating [11] this video as sort of like a push back [12] because I've seen a lot of people enter [14] the AI and automation space recently [15] that have no experience actually [17] building out these systems. AI and [18] automation sounds really flashy and [20] obviously there's a lot of financial [21] potential in there, but what it [23] certainly isn't is easy. So, just [25] because something is simple and just [26] because something gets a lot of [28] attention does not mean that it is easy. [30] And I'm going to make that case in this [31] video and then I'm going to give you [32] guys a simple road map to avoid falling [34] into the trap that I'm seeing a lot of [35] people do right now. So, to make a long [37] story short, the make money online [39] landscape cuz rest assured that's what [41] this is. It's the exact same thing as [42] like the social media marketing agency [44] fad of a few years ago, the web design [46] fad of a few years ago, the drop [47] shipping fad. What we're seeing right [49] now is exactly that same thing. has been [51] super saturated with tons of misleading [53] opportunities. Now, it's true that AI [55] has created a window for opportunities, [57] but it's not in the way that most gurus [58] present it. The way that most people are [60] pitching it right now is it's like a [61] passive income scheme. Okay? People are [64] selling you AI businesses as if it [65] requires no effort. It's going to make [67] you money while you sleep. Let me tell [69] you something. This specific business [70] model, which people are selling you, but [72] not totally formulating, is an agency [74] service business model. You can't make [76] money while you sleep with this. You [77] need to get on sales calls with [79] prospects. You need to hunch over [81] laptops or MacBook screens, building, [84] dragging, and dropping systems. You need [86] to be whiteboarding flows. You need to [87] be doing things like prompt engineering. [89] So, reality check. The vast majority of [91] these AI gurus have never built any [93] successful businesses outside of just [95] selling courses. If you want to make a [96] determination as to how exactly to get [98] up and running, focus on people that [100] have actually done the thing that you [101] want to do, not just people that talk [102] about it. Okay? And also, passive income [105] schemes rarely work for beginners [106] without existing audiences. What you'll [108] find is, and if you're a beginner, maybe [109] this won't make the most sense to you, [111] but there's a difference between inbound [113] marketing and then outbound marketing. [115] So, inbound marketing is when a customer [117] comes to a business. In order for a [120] business to get some sort of inbound [121] marketing, obviously, that business [123] needs distribution. It needs popularity. [125] It needs some way to get the word out. [126] right now. If you are a beginner [128] business and you have no idea what the [130] heck you're doing, you have no capital [132] to invest, you have no ads to whip up, [134] you have no idea how to position your [135] product, you can't really do inbound [137] marketing very well, if at all. So, what [140] most of these businesses, accelerators, [141] and courses are pitching you is inbound. [143] In reality, if you're a total beginner, [145] more or less, the only way that you can [147] actually generate outsized opportunities [149] is through outbound. So, it's not just [151] sitting on your butt and, you know, [153] hearing the chuch-ching noises while you [154] sleep. What you have to do is you [156] actually have to go and you have to [156] hunt, you have to prospect, you have to, [158] you know, get on the phone, you have to [160] dial, you have to record Loom videos, [162] you have to send cold emails, you have [163] to put yourself out there over and over [165] and over again. And what you'll find is [166] that's not very sexy. So, very few [169] people ultimately talk about that. But [170] if you want to make a business uh work [172] from scratch, especially in like a [174] bootstrapped way, you can't focus on the [176] inbound. Inbound just doesn't work. [178] Okay? So, be very skeptical of anybody [180] that's selling inbound to a total [182] beginner audience for that reason. And [184] then ultimately uh marketplaces end up [186] flooded with tens of thousands of people [187] that try the exact same thing that are [189] being promoted. Now what I mean by this [191] is unfortunately simply by virtue of the [193] fact that beginners obviously want [195] simple things that they could follow [196] step by step. People confuse strategy [199] with tactics. To be abundantly clear [202] strategy and tactics are very different [204] things. A tactic is something like uh [206] cold email copy. A tactic is something [208] like a script. A tactic is like, I don't [211] know, some sort of like advertising that [212] you're copying. The strategy is the [214] deeper reasons why you choose the [216] tactics. It's like human psychology. [218] It's like sales skills. It's like uh [221] market understanding. Okay? So, if you [224] just spend your entire life trying to [226] copy the tactics, which is what [228] ultimately these courses and programs [229] get you really good at doing, the second [231] that the market changes, you're not [233] going to be able to accommodate. When [235] markets get saturated with millions of [237] people doing the exact same tactic, the [239] only people that actually make it are [241] people that understand the strategy [242] because people that understand the [243] strategy can generate new tactics [245] anytime they want. But people that [246] understand tactics, they have no idea [248] what the underlying strategy is. So they [249] are screwed. So don't be one of those [251] tacticon people. Be a strategy only [253] person. Now obviously the question is [255] how the hell do you do that? Well, the [257] way that you do it is you avoid these [259] productbased businesses. To make a long [261] story short, when you're starting out as [263] a beginner in entrepreneurship, you [265] basically have a fundamental choice [266] between two types of businesses. You [267] have a product based business or you [269] have a service-based business. Product [271] based business is selling something like [272] a widget on Amazon. Let's say it's [275] e-commerce for the most part. It's stuff [276] like information products, right? Called [278] products for a reason. A service on the [280] other hand is something that you do for [282] somebody. It's like a landscaping gig. [284] It's like HVAC. It's like plumbing. It's [286] like digital marketing. like SEO, PPC, [289] AI, and automation. Now, the core [291] advantage of service businesses over [293] product businesses is they require very [295] little upfront investment. The only [297] upfront investment you basically have to [298] make in a service business is you have [300] to use your time and you have to use [302] developed skills to manage and fulfill [305] the expectations of clients. But a lot [307] of the time, you don't really have to [308] invest that much money. And typically, [310] nowhere near as much money as a product [312] based business because you don't have to [313] make the product. The benefit to this [315] for beginners is if you are choosing a [317] service business, you get this learn [319] while you earn advantage that allows you [321] to generate cash flow while also [323] simultaneously deepening your [324] understanding of client needs, industry [326] problems, things like marketing, things [328] like sales, and ultimately automation [330] opportunities. So my recommendation for [332] you is pick a service business. Okay? [334] Pick AI automation agency as a model. [337] Don't pick, you know, make a digital [339] product and put it on some Notion [341] template that's generated using AI and [342] then try and sell it through inbound [343] ads. That stuff just really doesn't [345] work, guys. It it sucks for me to say, [346] but if you're a beginner, you have no [348] idea where to even start with that [349] stuff. It's much better focusing on the [351] simple 0ero to one stuff that at least [352] gets a few dollars in your bank account. [354] And once you have that, you can worry [355] about building these higher level flows [357] and funnels and all that stuff [358] afterwards. So, the service model allows [360] you to monetize your skills. That's the [362] main part. You're monetizing your [364] skills. And you don't need any external [365] funding for that. Each client project [367] also becomes a paid case study. You get [369] to learn while you earn for your growing [371] business portfolio. And then you get to [372] use that business portfolio to sell more [374] people. If I could do like a simple SOP, [377] that stands for standard operating [378] procedure, something you're probably [379] going to be building a lot of in [380] business, this is what it would look [381] like. You have lots of skills and you [383] have lots of time. If you choose a [385] productbased approach, it's going to [386] take you time to develop the product. A [388] lot of the AI people are saying, "Well, [389] it takes you five minutes. You whip up a [391] template, a prompt, send it out." Those [392] just aren't very high quality yet. So, [394] you can't exactly do that. You then [396] launch your marketing for the product [397] because you start with the product then [398] you do marketing afterwards. That might [400] take you another month. Okay. If you get [401] your first sales, which is a big maybe [403] because you don't really know what [404] you're doing, you might make your first [405] thousand or $2,000 in like a few months. [407] That might take a like a crazy amount of [409] time. As a beginner, the number one [411] thing you don't have is you do not have [413] feedback. And if you want to like stay [415] in entrepreneurship and not fail like [416] the 95% of people that try this, you [418] need some sort of positive feedback as [420] quickly as possible. Contrast that with [421] a service-based approach. You do, I [423] don't know, some sort of free or very [424] low paid work to get your first case [426] study. Use that case study to sell your [428] first actual paid project. You then [430] deliver some results. You make some more [431] money. You take all that money, you [432] reinvest it in skills, okay? Skill [434] stacking. So, you learn sales, you learn [436] marketing, you learn lead genen, you [437] learn all these important things. Then [439] you scale. And then finally, after [440] you've scaled a business and after [442] you've done all this, by the way, in [443] like one to two months instead of four [444] to six months, then you can just [446] productize your service and then turn [448] that thing from a series of steps that [450] you have to do every time you onboard a [451] new client to something like a product. [452] Anyway, what does this mean? This is the [455] definition of double dipping. And [458] anytime you're in business, you look for [459] opportunities to double dip. So, I guess [462] to make a long story short, the TLDDR, [464] too long, didn't read the the cliff [465] notes, whatever you want to call them, [466] are if you're going to start this [468] business model, avoid inboundbased [470] business models that have you creating a [472] product before you actually get out and [474] sell it, and instead focus on [475] service-based business models that let [477] you learn while you earn. Now, the [480] specific business model that I recommend [482] is AI, automation, agencies, or [485] freelancing. All right, so this is [487] different from all the fancy AI products [489] that you're probably seeing a lot of [490] people do. So what is an AI automation [492] agency? Well, believe it or not, [494] agencies are very old. Agencies are a [497] collection usually of people that are [500] good at something. So you have, I don't [501] know, basically five or 10 freelancers. [504] This is the idea of a traditional [505] agency. Anyway, one person is like a [507] PPC, another person's an SEO person, [509] another person's like a copywriter, and [511] they all combine forces, they [512] collaborate, there's some sort of [513] manager around them that, you know, [515] coordinates their work and and so on and [516] so forth. And then they form an agency [518] which can offer a collection of these [520] services. And the idea is because these [522] people are so great at their individual [523] services when you combine them, they [525] tend to exceed the sum total of their [527] parts. You know, the whole is greater [528] than the sum of its parts. That's kind [530] of the idea behind the agency. Then [531] because the agency can maximize project [534] acquisition because they have the [535] resources, they can also do things like [536] hire salespeople and then everybody just [538] gets to specialize in their own thing. [539] And as a result, the agency gets to [541] grow. Now agencies have been around for [542] a long time. The first kind of like [544] legit agencies were the Madison Avenue [546] advertising agencies back in I believe [548] the late 50s or or the early 60s. So [550] that whole business model is not new. [552] The only difference basically is that [554] now there's just one really cool and [557] kind of very all-encompassing service [560] called AI automation which is just one [561] of the service fulfillment pieces that [563] an agency can provide. Okay. So what the [565] AI automation agency business model is [568] is it's just a fulfillment mechanism for [570] a very decades old business model. And [572] that's why it's the ideal business model [574] for beginners to start because there's [576] still reasonably high demand. They're [578] very low technical barriers and they're [579] also actually really good profit margins [580] relative to traditional agencies. But [582] one thing I didn't mention here is that [584] it is [585] welldefined. People have been doing this [587] for a very long time. So typically you [590] don't really have to invent anything [591] new. Like whereas you know a lot of the [593] time these products you're going to have [594] to invent something totally new and fill [596] a need and get product market fit with [598] services specifically agency services [600] you don't have to do any of that. The [601] whole business model has been working [603] like a welloiled machine for the better [605] part of the last 60 years. All that you [606] do is you apply your own skill and your [609] ability to fulfill the projects that [611] come your way in order to operate it. [613] And because there are a lot of these [614] defined road maps, you get people like [615] me, get people like a bunch of other [617] YouTube creators that are agency [619] specific that you know can can show you [620] how to do a pretty good job with this [622] stuff to at least get from zero to one. [623] Okay, there's another major reason why [625] this is a pretty chunky opportunity [626] right now. So AI is just the fulfillment [628] part of an agency, right? So, it's [630] nothing special in and of itself to run [631] an AI automation agency. You still have [633] to know how to run an agency. But [634] because AI is so flashy right now, you [636] can get away with offering that as a [638] service, making more money, improved [639] margins, and then you also get to do [641] some templates. So, anyway, the second [643] big reason why this is so valuable is [644] because there are these no code tools [646] like make.com and then naden and there [648] also a few others that transformed this [650] very high value service which used to be [653] software engineering into something that [655] is accessible to virtually anyone. These [657] are drag and drop no code builders that [659] allow you to set up pretty complicated [662] workflows from your laptop with no [664] actual programming experience which is [666] pretty incredible. So my guess of this [668] over here is that it's well defined. [670] This over here is that it is accessible. [673] I like how my writing is getting worse [674] every 5 seconds. If point number one is [676] that it's well defined. Point number two [677] is that it's very accessible now. Okay. [679] And then point number three is that [681] unlike other agency models like uh [682] social media marketing agencies, I use [684] an extra m there. They usually require [686] some sort of constant ongoing work to [687] maintain results. If you build a really [689] good automated solution for somebody on [691] retainer, that automated solution will [692] actually continue delivering value even [694] when you're not actually around to [695] product forward. Now, does this mean [696] that this is passive investment? Does [698] this mean that you get to earn while you [699] sleep? No. Obviously, you still need to [701] be around there to shepherd it. But I [702] guess the point that I'm making is [703] there's a lot more inertia in AI and [705] automation solutions because you're not [706] just giving somebody a deliverable. What [708] you're doing is you're building a system [709] that produces deliverables. Okay? So, [711] this is [713] long-term. And not only is it long-term, [715] personally, I think it's easier to [717] justify high costs. They're also [719] exceptionally higher profit margins than [721] the vast majority of other old school [722] agencies because of this long-term and [724] high ticket thing. So margins of 70% [726] plus are not uncommon. And then what's [728] really cool is because these are cloud [729] systems, you can actually template out [730] the vast majority of them. Like a lot of [732] people just want the same system built [733] again and again and again and again or [735] different clients want the exact same [736] thing that you just delivered for client [737] A. You know, they client B wants it, [739] client C wants it, client D wants it. [741] And because of that, you get to template [742] and just copy and paste. meaning that [744] you don't actually have to go from like, [745] you know, zero all the way up to 100% of [748] the fulfillment. You kind of shortcut [749] it. You can actually get a project [750] that's 80% of the way there and then [752] just make a couple of changes and get it [753] to that 100. That's a 5x leverage for [755] those of you guys that are keeping [756] track. Okay, so here's why this wins [759] over other real models. Drop shipping [760] and ecom requires constant product [762] sourcing and customer service. If [764] anybody here has tried the drop shipping [766] and ecom, you need to constantly be [767] sourcing new products. There's an [769] incredible amount of competition. You [770] also have to focus big time on stuff [772] like ads and stuff like tripwire offers [775] and so on and so forth. And then, you [776] know, you need to focus on on customer [778] service as well. If you're doing some [779] sort of content creation with uh selling [781] digital products, okay, where it's kind [783] of like inbound, you have ongoing [785] production of said product, you have a [787] much lower or slower time to market, and [789] then there's an uncertain monetization [791] strategy. Don't get me wrong, if you [793] build a digital product like I have now [794] with my maker school and make [796] moneywithmake.com, when you do finally [798] grow, you grow really fast. But most [800] beginners don't want to spend the first [802] 3 years of their life making, I don't [804] know, 25 cents. No, they obviously want [806] to get up and running with something [808] like an agency where instead of spending [810] the vast majority of their introductory [812] business period broke, they can actually [813] make a little bit of money much quicker. [815] And then if they wanted to, you know, [816] eventually segue to some sort of digital [818] product model, well, then they could do [819] it then with money and resources. Okay? [821] But, uh, most beginners don't want to [822] spend all that time in that weird limbo. [824] Most beginners would rather be like this [826] orange graph here and get a lot more [828] area under the curve. So the last thing [830] is software development needs extensive [832] technical skills and longer time [834] horizons. What I'm doing is I'm just [835] contrasting automation agency models to [836] software development models, content [838] creation models, and then drop shipping [839] and ecom models here. And anyway, like [841] there's no real point in getting in [842] software dev anymore. Sorry to break [843] your guys' hearts, but models are just [845] getting to the point where they're good [846] enough for vast majority of needs. [847] That's where the whole term vibe coding [849] has come from. Um, and you know, in all [850] honesty, these are just going to [851] continue getting better until they're [852] just significantly better than than most [854] human developers. So, the age of human [856] software developers is certainly coming [858] to a close. That's why it makes sense to [860] focus your time and leverage it less on [862] the actual software implementation, more [864] on templated solutions, no code [866] solutions that allow clients to do some [868] maintenance on their own and stuff like [869] that. Now, if you wanted a quick little [870] SOP, we're now writing an orange. Here's [872] what you do. You build practice [873] automations for one week. That's 7 days. [875] Do some free work or low paid work to [877] acquire your first result. You could do [879] this on any platform. You can do this [880] through DMs. You can do this through [881] warm network. Whatever you want. Get [883] your first client through Upwork or cold [884] email. Build solutions using templates. [886] Get yourself 80% complete and then [888] customize the final 20% for clients. [891] When you deliver your first few [892] solutions, you can do so at $1,000 to [894] $2,000. That's way more money than a lot [896] of people make when they're selling [896] digital products in, let's say, the [898] first month. Usually, if you sell [899] digital products the first month, you [901] are at negative $1,000. Then, when you [904] build a solution, template it out for [905] future clients. So, I don't know, save [907] the blueprint or save the NAND template, [909] save it in a folder labeled what it [911] does, and then next time that you get a [913] client, you'll have a massive library of [914] reusable systems that allow you to scale [916] with additional minimal work per client. [918] So, you know, this sort of like takes [920] both of the best parts of both the [923] agency and then the SAS model. The best [925] part of the agency model is that you get [926] to make money quickly. The best part of [927] the SAS model is that you tend to scale [929] much quicker. And so, in reality, your [931] revenue growth graph will look something [932] like this, as opposed to something like [935] this. [936] or something like this. Blue is agency, [940] red is SAS, and then orange is sort of [943] what we're doing, which is sort of a [945] combination of software and the agency [946] model. Okay. So, in terms of getting [949] started, there are variety of ways to do [950] so. Obviously, I now operate a course [952] where I show people how to do this zero [954] to one called Maker School. I guide your [956] hand and I walk you through like tasks [958] on day one, tasks on day two, task on [959] day three. I'm not just going to shill [961] my product here, although obviously I [962] wouldn't make a high quality product if [963] I didn't really believe that it was the [964] best solution. But anyway, starting an A [966] automation agency requires surprising [967] little preparation. What I mean is you [969] can go from zero to your first client [970] within 1 to two months. I think the [971] fastest first client we've gotten now [973] was within something like 15 minutes. [975] Somebody sent an Upwork application. [976] Upwork being a freelancing platform for [978] an AI and automation agency. Job client [980] got back to them immediately. They got [981] back to the client immediately. They set [982] up a call and within 15 minutes they had [984] a proposal signed ready to go. So [986] obviously 1 to two months is a [988] reasonable thing for most total [989] beginners to work towards. But I want [991] you to know there are many cases in [993] which that occurs much easier. Now, the [994] minimum viable business of this AI [996] automation model involves three skills. [998] Basic automation skills, a specific [1000] service offering, and then one or two [1002] client acquisition methods. My [1003] recommendation is choose uh specific [1005] client acquisition methods rather than [1006] trying like a million approaches. And [1008] specifically, I'd recommend you use [1009] Upwork. Then I'd also recommend you use [1010] cold email. Okay, so three things. You [1013] need automation skills, and I'll show [1014] you how to get all these in a second. [1016] You need a specific type of service. And [1017] then finally, you need client [1018] acquisition methods. Also, if you want [1020] to be successful, you focus on [1021] completing projects rather than [1023] perfecting them. In reality, you're not [1025] going to be a fantastic or perfect [1026] developer on your first gig. If you [1028] spend all of your time trying to like [1029] deliver it perfectly and not just move [1030] on, you're not necessarily going to be [1032] able to take advantage of the momentum [1033] that my approach, which is just [1034] front-loading client acquisition, gives [1036] you. And then, yeah, just in terms of a [1038] basic curriculum, spend one week [1039] learning basic automation skills and [1040] then spend your next week creating a [1042] specific service offer and starting a [1043] lead genen process. So, here are the [1045] tools that I would use. Make.com or [1047] naden, you don't need both. Instantly is [1048] a cold email platform. Ampify is a [1050] scraping platform. Apollo is a lead [1052] database. Upwork is a freelancing [1054] platform. Then Loom is a simple and easy [1056] way to just record videos. Kind of like [1058] this one where you're answering a client [1059] question. Three great videos that I'd [1061] recommend checking out. Uh, wow. That [1064] it's very interesting. I don't remember [1065] having that hairdo. Is $10,000 a month [1067] AI business over here. So, how to build [1069] a profitable AI business in 2025. Then [1071] 80% of AI automation basics in just 29 [1073] minutes. Then finally, if you guys want [1074] to get up and running with Naden, which [1076] is the current biggest platform, watch [1077] this nad full course, 6 hours that shows [1079] you how to build and sell automations [1081] and agents as well. So this is the [1083] curriculum. You start by learning some [1085] basic make.com and nen stuff. This [1087] video, if you watch it on 1.5x means you [1089] could literally do this in about 4 [1090] hours. You could be 4 hours away from [1093] knowing everything you need to know [1095] about a platform like naden to actually [1096] get out there and start producing value [1098] for customers. Then just build a couple [1100] of simple practice automations. Most of [1101] my programs include this. uh then choose [1103] one specific service to offer. Then just [1105] start lead genen. So create an Upwork [1106] profile, set up a cold email system, [1108] apply to five Upwork jobs daily with a [1109] video, and then send a 100 targeted [1111] emails daily. Eventually, you're going [1112] to get some interest. Then you just book [1114] a discovery call and start the project. [1116] And then finally, you deliver your first [1118] client project, get your first case [1119] study. And you know what you do at the [1120] end? You just loop it around. You just [1123] do it over and over and over again. [1124] Well, I guess you don't do that part [1125] over and over and over again, but [1127] hopefully you guys see my point. Okay, [1128] some points to consider just before I [1130] wrap up. highly recommend you guys have [1131] a daily lead generation ritual. Now, [1133] this is what I was talking about. [1134] Outbound does not have a simple passive [1138] lead generation way. You can't just like [1140] generate leads passively. If you want to [1142] be the one that is doing the selling, [1143] which most of you guys are probably [1144] going to have to be the start line of [1145] your business, you need to put in the [1147] work. That doesn't mean you need to [1148] spend all day doing it. You can do it [1150] intelligently. And my recommendation for [1151] you is spend the first couple of hours [1153] of your day, first 60 to 90 minutes [1156] basically, dedicated exclusively to this [1158] free client acquisition system. free or [1160] lowcost client acquisition systems [1161] because by doing so, what you're doing [1163] is you're trading a little bit of your [1164] time for much faster growth later on. [1166] Then track everything. Use a simple [1168] spreadsheet. Monitor all of the outreach [1170] and the responses that you're sending, [1171] the cold DMs, the Loom videos, the cold [1172] emails, cold calls. I don't recommend [1174] cold calls, but I wanted to throw that [1175] in there just in case. All of the [1177] various outbound strategies that you're [1179] using, track them so you know what to [1182] change next week. And then just stick [1183] with it for 30 days. This seems like a [1185] very big ask, but if you could stick [1187] with something for 30 days, you're going [1188] to have more results with that thing [1190] than 98% of other people will that you [1192] know quit before the 30-day mark. Even [1194] if you are terrible at outreach on day [1196] one, by the end of day 30, assuming you [1198] consistently do some little output every [1200] single day, you're going to be great at [1202] outreach. Outreach is not some super [1204] scary intimidating thing. Outreach is [1206] extraordinarily straightforward. You [1208] just need to put in the reps. Think of [1209] it like the gym. You can't do all of the [1211] outreach bicep curls on one day or else [1213] all you'll do is just break your arm. [1215] Essentially, what you need to do is you [1216] need to drip it out. You need to do 60 [1218] bicep curls in day one, 60 bicep curls [1220] on day four, 60 bicep curls on day [1222] seven. You just need to keep that up as [1224] long as humanly possible. Then build a [1226] follow-up framework for all those leads. [1228] The vast majority of your deals are [1229] going to come from some sort of [1230] follow-up. Most people stop after one [1232] outbound message, but success, I find, [1233] typically requires at least three [1235] touches, if not more. And then add value [1237] in every message. One big thing that I [1239] think separates the amateur salespeople [1240] from the really good salespeople is the [1242] really good sales people are basically [1244] radically empathetic. And I didn't fully [1246] understand what this meant until quite [1247] recently actually. But really good sales [1249] people are so empathetic they can put [1251] themselves in the customer shoes and [1252] imagine what their reaction would be if [1255] you were to reach out to them. So if you [1257] want to be really good at outbound, what [1258] you need to do is you need to put [1260] yourself in your customer's shoes. What [1261] are you more likely to respond to? Hey, [1263] hey bro, how you doing? How long time no [1265] talk? Want to touch base? or hey man, I [1267] think I could make you another $43,000. [1270] I know this is totally out of left [1271] field, but here's a step-by-step road [1272] map and a guide I put together. No [1274] strings attached and you don't have to [1275] respond to this if you don't want. [1277] Obviously, the second, right? And even [1278] though you're saying things like you [1279] don't have to respond if you don't want [1280] and uh you know, no strings attached. [1282] When people see that much value thrown [1283] at them, they almost invariably do [1285] respond and there almost are invariably [1288] always strings attached. Okay. Anyway, [1290] focus on a multi- channel approach with [1291] that. Hit emails, hit LinkedIn. If you [1293] can hit phones after getting positively [1295] qualified over email and LinkedIn, then [1297] people are a lot more likely to get back [1298] to you. Finally, your mindset matters. [1301] Okay, your capacity to find clients [1303] matters more than your technical skills [1305] in the beginning. That's the bottleneck. [1306] Trading time for money is necessary at [1308] some level. If you want to grow faster, [1311] okay, you're going to have to invest [1312] money in that growth. And when you [1314] invest money in that growth, you're [1316] going to cut down the amount of time it [1317] takes to do anything by leaps and [1318] bounds. But at the beginning, you don't [1320] have the money. So what is your only [1322] other piece of currency that you can [1323] exchange with? It is time. So at the [1325] beginning you might spend two to three [1326] hours a day doing pretty boring annoying [1328] things. That's just the nature of [1329] outbound and that's the nature of this [1331] AI automation business model. If you [1332] want to grow you got to grow [1333] consistently and reliably over time the [1336] you know big swings that the other AI [1339] gurus are going to be telling you do not [1341] really happen in practice. Okay. And [1342] then yeah embrace rejection. The way [1344] that outbound works and you know [1345] outbound is like a separate skill than [1346] the AI and automation side of this [1348] business. But more generally, the way [1349] that outbound works is every time you [1350] get a no, it just brings you a little [1351] bit closer to yes, provide some valuable [1353] feedback. Okay, so know that we talked [1355] about a lot in this video. Just wanted [1357] to fill your head with as many positive [1359] concepts as humanly possible to try and [1361] outdo or undo some of the more negative [1363] ones that I've seen recently. That's how [1365] you actually make your first thousand [1366] online using artificial intelligence. [1368] Artificial intelligence is not the focus [1370] of the business model. Although it's [1372] called AI automation, you know, it's not [1374] AI that is doing the selling. It is you [1375] that is doing the selling. You can't [1377] just build something with AI and just [1379] expect people to come. What you have to [1380] do is you have to get in front of a ton [1382] of people, have them tell you what they [1383] want, and then ultimately build that [1384] thing for them afterwards. Earn while [1386] you learn. That's the whole idea of [1387] services over digital product [1389] businesses. And then anytime that [1390] somebody tries to sell you a passive [1391] investment dream that allows you to earn [1394] completely while you sleep and not have [1396] to put any time or energy in and it's [1397] the secret method that everybody's using [1399] to make a billion dollars, obviously be [1401] understandably wary of it. If I'm being [1403] totally pragmatic and realistic with you [1405] and automation is a business model just [1406] like virtually any other business model. [1408] There's a reasonably short window of [1410] opportunity where you can get outsized [1411] returns with this business model. But if [1413] you guys focus less on the specific [1415] tactics, the specific, you know, base [1417] level ways to do the thing and you focus [1419] more on the strategies that underly a [1422] business model like AI and automation, [1423] then even if you miss the AI and [1425] automation wave, you'll be well [1426] positioned for anything that comes [1428] afterwards. If you guys like this sort [1429] of stuff and you guys want to actually [1431] start making money with AI and an even [1432] simpler and straighter line path than [1434] what I outlined in this video, check out [1435] Maker School. It's my 0ero to1 daily [1437] accountability roadmap where I hold your [1439] hand through the entire process of [1440] starting then scaling an AI and [1442] automation agency. We have over 2,400 [1445] members. I increase the price every 100 [1446] members or so just to reflect the [1448] increased value of the recordings that [1450] I'm adding, the templates, the [1451] resources, and the discussions. So, if [1453] you wanted to do this, get in now, [1454] grandfather that in lock in your price. [1456] Really appreciate everybody that makes [1458] it to the end of my videos. Thanks so [1460] much for watching. If you guys could do [1461] me a big solid like, comment, subscribe, [1462] do all the fun YouTube stuff to get me [1464] to the top of the Aago. And I'll catch [1465] you all in the next video.

Video: https://www.youtube.com/watch?v=oAWe5wFwHlo
Title: I Deep-Personalized 1000+ Cold Emails Using THIS AI System (FREE TEMPLATE)
[0] Today I'm going to be building out a [1] multi-line icebreaker generator in NADN [3] that makes use of deep website scraping [5] in order to personalize the first few [7] lines of a highquality cold [10] email. To make a long story short, what [12] we're going to do is we're going to [13] start with an Apollo.io search. Apollo [15] is just a lead aggregator and lead [17] database. Fortunately, it's very [19] expensive to purchase leads directly [20] through Apollo. So, what most people do [22] nowadays is they scrape it using a third [24] party service. For that, I'm going to be [25] using Apify. And then I'm going to pump [27] all of that through a pretty complicated [29] NAN flow just to show you guys how at [31] the end of it all we can generate [32] highquality leads. So first things [34] first, let me give you guys a demo of [35] the system. What I've done here is I [37] built a Google sheet called multi-line [38] icebreaker generator. There's a URL [40] column over here on the left and a sheet [42] called search URLs down at the bottom. [43] Then under leads, we get a bunch of [45] information. First name, last name, [47] email, website URL, headline, location, [48] phone number, and multi-line icebreaker. [50] This is sort of the juice. What I'm [51] going to do is I'm going to feed in the [52] URL to the Apollo search that I showed [55] you guys a moment ago. Okay, then I'm [57] going to go and start my flow. What's [60] occurring when I click test workflow is [61] it's grabbing the URL that I just added. [64] So that's that big long Apollo search. [65] It's now scraping that Apollo list on [68] Appify. What it's doing is it's spinning [70] up a cloud instance of the actor. That's [72] what they're called on Apify that's [73] going out and it's actually getting me a [75] ton of that lead data. Then we're doing [77] a bunch of data processing to filter for [78] only websites and emails. And then what [80] we're doing is once we have all those [82] websites, we're actually scraping the [83] hell out of them. We're extracting the [84] HTML content and then we're editing the [86] fields. Now, there's a couple more steps [88] here, but ultimately what ends up [90] happening is we summarize the website [92] pages, then feed that into AI. And the [94] end result, if I go over to my leads [96] page here, is as you'll see, we're [98] filling in this multi-line icebreaker [100] column. What this multi-line icebreaker [102] is is it's a extraordinarily highquality [105] personalized pitch where you add this to [108] the beginning of a cold email and it's [110] so customized that the person on the [112] other end of the line is going to assume [113] that you've actually read through all of [114] their website and done a bunch of [115] personal searching yourself. So, this is [117] the sort of thing that routinely gets me [119] 5 to 10% reply rates on my cold email [121] campaigns. And it's one of the ways that [122] I scaled my own AI and automation agency [124] to $72,000 per month. So, so you can [127] see, hey Cali, love how L2 makes it easy [128] to filter by acreage. also a fan of your [130] property update email option. Wanted to [132] run something by you. If I was Cali and [134] I received all of this is like the first [136] few lines of my email. I'm obviously [137] going to assume that I've done my [139] research in my pitch. Okay. So, in a [141] nutshell, what we do from here is we [143] just take this data and we feed it into [144] a campaign like on instantly. Instantly [147] is a cold email service, one that I [149] personally use for most of my emailing. [151] What we'll do then if I go to campaigns [152] here, you can see an example one that I [154] set up for website agencies is we pump [156] it directly into a sequence and our end [159] email will look something like this. So [161] in this case, this is for a website [162] design agency. Hey Katie, love KTL [164] graphics. I wanted to run something by [165] you. I'm new to this so please bear with [166] me, but insert customized information or [169] icebreaker over here. And this specific [171] pitch has already got me a 4% reply rate [173] and something like over 30 qualified [175] leads that have wanted to book calls or [176] meetings with me. I show you guys all [178] this back end just to make it abundantly [179] clear that the actual work that goes [181] into building out a cold email campaign. [182] If you really want it to crush, it's a [184] little bit more complicated than just [185] scraping a bunch of leads off Apollo and [186] then sending. You know, a lot of the [188] time you need some sort of way to [189] paraphrase or make the content that you [191] are sending to people seem a lot more [193] customized. So that's in a nutshell how [195] the system works. What I'm going to do [196] now is I'm going to build it for [199] you. Okay. So I'm going to open up a new [202] NAND panel over here and I'm going to [203] call this deep multi-line icebreaker. We [206] got our canvas right over here. First [207] thing I'm going to do is I'm just going [208] to do a manual trigger. This is just the [210] simplest and easiest thing for me to do [211] and I do it for all of the flows that [213] I'm testing. I'm then going to head over [215] to Google Sheets. What I'm going to want [216] is I'm going to want a get rows in [218] sheet. What we're going to do is we're [220] going to hook this up to that multi-line [221] icebreaker generator Google sheet. And [223] so in order to do that, you need first [224] to add credentials. I've already added [225] credentials, but if you haven't done so, [227] all you need to do is click on that [228] little pen icon and then click sign in [230] with Google. From there, what I'm going [232] to do is I'm going to find the specific [233] document that I'm looking for. So that's [234] multi-line icebreaker generator. Then I [237] also need to select not just the [238] document but the sheet as well. You guys [240] notice how there's search URLs and [241] leads. What that is is that's this tab [242] or this tab. So what I want to do is I [244] want to grab this search URL and [245] actually not just this one but any [246] search URL that I list just so that I [248] can also scale this up. What I'm going [250] to do is I'm going to head over search [251] URLs. Then once I have all of that in, [253] if I just click test step, what this [254] will do is it'll actually grab me the [256] URL as well as the row number which is [258] handy. In NAN, I always pin my data. [260] This just allows me to test my flows a [262] lot faster because I don't have to rerun [264] things and it also spares me some API [266] usage. The Google Sheets API is [267] notoriously low rate limit which can be [269] annoying. Okay, so from there we now [271] have the search. What I need to do next [273] is I need to call my scraping service. [275] And what I'm going to call in this video [276] is Appify. So I've already preconfigured [278] this Appify scraper module here. And I'm [280] doing it because if you want to converse [282] with the Appify API, you do have to know [284] a little bit about how it works. But to [285] make a long story short, what we're [286] doing is I'm sending a post request to a [289] URL. The URL looks like this. Okay. And [292] if I make this bigger, you guys will see [294] it. It's https back/appi.appify.com/v2x [300] um [303] colactor-id/run-sync-get-data set- [305] items. Now, you may be wondering, Nick, [306] where the hell did you get this? Well, [309] if I just look up Apify API, this is the [312] backend for the service that I'm using. [314] If I scroll down to this right over [316] here, this exact same URL. So you guys [319] could see and this gives you all the [321] specs on how to use this specific API [322] endpoint. But to make a long story [324] short, what I did was I copied in this [326] curl request. I made a couple of changes [327] and then I ended up with this here. I [330] imported my curl. So API requests are [332] sort of beyond the scope of this video, [333] but basically you have to put an accept [335] application JSON header and [336] authorization bearer and then apply API [339] token. If you guys like this sort of [340] stuff, I've recorded a lot of detailed [342] documentation and walkthroughs and how [344] to actually like practically read APIs [346] for beginners. So, I'll link that video [348] above. Okay. What this is going to be [350] doing is this is going to be running our [351] search. So, if I click test step over [353] here, this is going to do now is it's [354] actually going to push this to ampify. [357] And the way that you check this out in [358] Apify is you have to go to their [360] console. But if I go to runs, you'll [362] actually see there's a live run that is [364] currently now happening because I've [366] sent this request. Now, I should be [368] getting something like 100 or I guess 96 [370] leads. You can see here I demoed this a [371] couple of times. And once we're done, [373] what we get is we get a bunch of first [374] names, last names, email addresses, [377] LinkedIn URLs, and so on and so on and [379] so forth. Pretty cool, huh? Now, in [381] addition, we also get a ton of other [382] fields here, which I'm not going to go [383] through all of them cuz there are quite [384] a lot, but that includes stuff like the [385] organization name, the URL of their [388] websites, and so on and so forth. And [389] what we want to do here is we want to [390] take the URL of the websites. First, we [392] need to verify that they have a URL, and [394] we also need to verify that they have an [395] email. But once we've done that, we want [396] to take the website URL that we're [398] generating and then we want to pump it [400] through some sort of scraper and then we [401] want to throw it into AI to have it tell [403] us something about it. Okay. So the next [404] thing I'm going to do is I'll go over [405] here and I'll pick the filter node. What [407] the filter node allows us to do is [409] allows us to look specifically to see if [411] we have an email address present. So if [413] I just go command F email, you'll see [415] that some of these fields are null. So [417] what I want to do is I want to check to [418] see whether or not an email exists. [420] Okay, if the email exists, then I'll [422] continue. If not, I won't. In addition, [424] I also want to check and whether or not [427] the website URL exists. So I I'm just [430] searching for website URL. I'm going to [431] stick that here and I'll say this has to [433] exist. Now in this case, it's not [435] existing because this particular example [437] just does not include a website URL. [439] What I'm going to do is I'm just going [440] to click test step. Now carry the data [441] forward and we're going to see what sort [442] of output we got. If we feed in 96 [445] items, we keep 28 items. That means that [448] of the 96, we are filtering out 68. And [450] that's okay for us. That's just how [452] Apollo works. So, you're going to feed [453] in, you know, about 100 or so and you're [454] going to get about 30. Just math. From [456] here on, what we're going to do is we're [457] actually going to feed this into an HTTP [459] request node. Now, the reason why I'm [461] doing this is I basically want to feed [462] that website in that I got a moment ago [464] directly into an HTTP request node. I [466] want to make a request to this website. [467] I want to search for it. In order for [469] this to work though, what we're going to [470] have to do is we're going to have to add [471] redirects and then click follow [472] redirects with max redirects of 21. If [474] you don't do this, I find that uh in [477] practice, a lot of the websites are [478] going to error out because most of them [479] redirect. If I click test step, what [481] we're doing now is we're actually [482] scraping this web page right here, [485] assetrealtyindIindia.com. In addition, [487] what we're going to need to do is add [488] one other option here and that is we'll [490] go to settings over here. And then on [492] error, what I want to do is I want to [493] continue using the error output. [496] Basically, I just want this to continue [497] executing even if there is an error. And [499] if there is an error, we're just going [500] to do nothing. And the reason why is cuz [501] not all websites scrapes work. Some [503] websites have protections built in that [504] stop us from being able to do this [505] easily. So realistically, if we feed in, [507] I don't know, like 28 or 30, we'll [509] probably get like 15 or 20 websites that [511] are actually able to be scraped. And it [513] looks like we did. We have 21 items that [515] successfully worked and then seven that [516] didn't. Now, when you add those error [518] branches, you're going to get a success [519] and an error branch. You know, I'm just [521] going to do nothing with the error, but [522] you can certainly do things with the air [523] if you wanted to recoup your costs. In [525] my case, I usually do these things [526] pretty quick and scrappy, so I don't [528] really worry about doing that recouping. [529] For me, if I could do this for 20 out of [531] 100 leads fed in, well, in Apollo, I'm [533] just going to make sure that my audience [534] size is really big, like 10,000. [536] Therefore, I'm going to get about 2,000 [537] of those. So, that's okay for me. After [539] that, what we need to do is we actually [540] need to scrape this data, or uh rather [542] extract links from this data. If I click [546] on show data over here, what you'll see [549] is we're getting a ton of HTML. Do you [551] guys see this? In this case, this is a [554] WordPress website. But what we want is [555] we just want to extract all the links on [557] this website. So what we want is we [559] basically want a tags with this href [562] equals to. So you see this this is [565] actually a link on the page. Now in this [566] case this is kind of an empty link but [568] if I keep on searching this we should [569] get [570] stuff. Okay see this [573] hath.com/author/hithadmin. Well that [575] actually is going to take me to a blog [576] page on the website that might actually [577] be pretty important for me to customize. [579] This is a contact page that might be [580] important for us. Basically what I'm [582] going to do is I'm just going to extract [583] all of these links. And the way you do [584] this in NAND in a really simple and easy [586] way. So we go to success just go HTML [589] extractor here. Now what we need to do [592] is we need to stick the links that we're [594] finding into a key. I'm just going to [595] use the term links. The CSS selector is [597] going to be a the value we're going to [599] return is going to be an attribute. And [600] in my case I'll just go href. I'm going [602] to return an array and then under [603] options I'll trim values and I'm going [605] to clean up the text. What this does to [607] make a long story short is it just gives [609] us a nicely formatted list of links from [611] the HTML that we're feeding in. So the [613] links are going to look something like [614] this. What we've done now is we've [616] pushed in a homepage to the HTTP request [618] node. And then what it's doing is it's [620] outputting us all of the links on that [622] page. Now, why would we want to do this? [624] Well, logically, the reason why is [625] because if you really wanted to [626] understand a website deeply, you [628] wouldn't just scrape one page like most [629] other people are doing, you'd actually [630] scrape all the pages on the website and [632] then you'd feed it into some sort of [633] intelligence, in our case AI, to have it [635] tell us something about each page before [637] combining all of that into some big [638] summary, using that to generate some [639] sort of custom asset. Next up, what I'm [641] going to do is I'm just going to [642] rearrange all of this data. If we go to [643] this HTML tag now, what we have is we [645] have 21 items and every one of these [647] items is a big array of links. Now, this [649] is a ton of information, but if you [651] think about it, we also want to make [652] sure that we're grabbing the lead data, [654] too. Like, we want to make sure we get [655] Joshua's information, for instance, [657] here. So, what I'm going to do here is [658] I'm just going to clean this up by [659] adding an edit fields node right over [661] here. Now, what edit fields node does is [664] it basically allows us to add fields and [666] then rename them according to some spec. [668] So, if I drag this first name here and [669] then if I do the last name and so on and [672] so forth, then what I'm going to do is [674] I'm just going to output a much simpler [676] version of all this data. I'm basically [677] going to remove all the fields that I [678] don't find important. Now, in our case, [679] we're getting a ton of these does not [681] exist or unpin node HTML and execute. [684] So, because NAD isn't sure of exactly [687] which record means which thing, what we [689] need to do is we need to unpin them all. [690] And now we need to test this. What it's [692] going to do is it's going to run through [694] that Google sheet again. It's going to [695] grab the Apollo URL. It's then going to [697] feed that into our Appify scraper over [699] here. After it outputs, I think it was [701] 96 or 98 items or something. We're then [703] going to filter out a lot of them. It's [704] going to bring us down to I think like [705] 28. It's going to filter us down to I [708] think like 21 or something. Then out of [709] the 21, we're going to extract all the [711] HTML content. Then finally, we're going [713] to be left with 21 nicely formatted [715] items. And if you are curious what these [717] look like, it looks like this. We have [719] first name, last name, website, headline [721] if they have a headline, location, phone [722] number. In this case, this is empty. And [724] then just a big list of links. Okay. [726] From here, if you think about it, what [727] we need to do is we need to find a way [728] to iterate over this list of links [730] because we have technically what, like [731] 22 items here. But basically, what I [734] want to do is I want to process David [735] first and then after I'm done processing [737] David, process Zane. And after I'm done [738] processing Zayn, process Michael. And [740] the best way to do that in NAD is using [742] what's called a loop over items or split [744] in batches node. This can be pretty [746] intimidating and annoying to deal with [748] if you haven't ever run one of these [749] before, but I'm just going to delete the [751] replace me node and run you guys through [752] how this works. Basically, there are two [754] routes here. There's a done route and [755] then there's a loop route. What the loop [757] route does is anything that you put in [758] here will basically proceed until you [762] connect the loop route back to the [763] input. So basically for every one of [766] these 21 items, we're going to do [767] something. If you think about it [769] logically, what do we want to do? Well, [770] we want to go into these 21 items and [772] then we just want to take all these [773] links and we want to do some processing [774] on these links. Basically, we want to [775] like run HTTP requests for each, right? [777] So that's what we're going to do. I'm [778] going to go to loop and then I'm just [780] going to type in well first of all if [781] you think about it these right now are [783] all buried inside of an array right so [785] we have to expand these or split these [786] away from the array. So what I'm going [788] to do is I'll go split out and I'm going [789] to feed in the loop directly into the [791] input and I'm just going to put this [792] down here a little lower so it's nicer. [794] Now unfortunately we can't see previous [795] nodes because that's just how the split [797] in loop node works. Um the fields from [799] the left that I want to split out are [801] called links. So that's just what I'm [802] going to use. And then this done route. [804] This is going to trigger after we're [805] done our loop. Okay. So, for now, I'm [807] just going to loop this back in. Just [808] make this super simple. Show you guys [810] what this looks like. And just to make [812] my life a little bit easier, I'm just [813] going to go through and I'm actually [813] going to pin all the rest of these [815] outputs. Okay? That way when I start, [817] it's just going to run immediately over [819] to the loop over items and then just [820] split out all of these. And you'll see [822] what I mean by uh splitting them. Okay? [824] So, we just fed in 21 items. Okay? And [826] now for every one of those items, I want [828] to show you guys what the links look [829] like. Just go down to number one. Notice [832] how now what we're doing is for every [833] run, okay, for all 21, we're outputting [835] a massive list of links. So this massive [837] list of links, which is pretty long. I [839] think it's 30 something. This is for run [841] one. This massive list of links is for [843] run two. This massive list of links is [845] for run three. This massive list of [847] links is for run four. So basically, [849] each of these runs are just a different [850] person and their website. Okay. So now, [852] what do you think we're going to do? [853] Well, for each person and their website, [855] what we're going to want to do is we're [856] going to want to process these links a [857] little. I mean, like, check this out. [859] This stuff is crazy. Most of these are [861] basically exact duplicates for Christ's [862] sake. Also, these are um absolute URLs, [865] not relative URLs. What we want to make [866] a long story short is we want a bunch of [868] links that look like this. [869] Home-valuation [870] y-list-with- us communities leewood real [873] estate. Stuff like this just makes it a [875] lot easier to process using HTTP [877] requests later. So, we're going to have [878] a bunch of relative links. And then [880] we're going to add the initial website [882] URL. So, then in this case, it' be troy [884] homes [886] sky-list us. So, I'm going to go over [889] here and I'm going to click add filter. [890] And what I'm going to do, okay, it's [892] unfortunate we we don't have access to [894] that data. But what I'm going to do is [895] I'm just going to make sure that the [897] string starts with an a slash. Okay. And [901] the way that this data is being output, [903] it is being output under links. So, I [905] actually know how to reference this. I'm [907] just going to go [909] expression. I'm going to go dollar sign [914] JSON. Okay. Now, if I take this, I pin [919] this and I test this. Okay. And so, what [922] ended up happening is we fed in 270 [924] items here. We looped over all of these [926] links. Then, for all of them, we [927] filtered them out and we ended up with [929] just 121 items. Okay. So, basically what [932] we did is we just discarded a bunch of [934] the links that, you know, didn't have [935] anything. So, these, for instance, are [937] all absolute URLs. We just wanted all [939] the relative ones in the website. Is [940] this the perfect and best way to do it? [942] No, not really. Like, theoretically, we [943] could extract these. I'm just not doing [945] them because I'm a little lazy and I [946] find that most websites just have [948] relative links to begin with. In [950] reality, we don't actually scrape every [951] page on every website. That just be a [953] ton more work than is necessary, [954] especially for those really heavy SEO [956] pages. So, I'm just going to go with [958] like my proxy. Proxy just means like my [960] thing that's close to the right answer, [962] which is just, hey, you know, if a [963] website has any relative links on it, [964] that's what we're going to scrape. Sure, [966] some websites aren't going to have [967] relative links on it, and you can [968] totally adjust the logic to fix that on [970] your own end if you'd like. Okay, one [971] thing I'm noticing now is there's a [972] bunch of duplicates. So, I'm just going [974] to go to remove duplicates. I'll go [975] remove items repeated within current [977] input. Okay, this is going to [979] immediately remove all of the duplicates [980] in the flow. Now, I know how this works. [982] I'm pretty confident it's good. So, I'm [983] just going to move forward. And now, to [984] be honest, we're basically ready to do [986] our HTTP request. So, for all of those [988] that are remaining, what I'm going to do [990] is I'm going to get the URL. Now, I know [993] what this expression already looks like. [994] It's going to be loop over items [995] item.json website URL and then [997] JSON.links. What this is going to do is [999] this is basically going to concatenate [1001] the website URL with the relative URLs [1004] that I'm pulling here. So for instance, [1005] if my website was leftclick.ai, this [1008] would be the base URL and then this [1010] would be the relative URL. That's what [1012] I'm doing right over here. I'm just [1013] concatenating. I'm just sticking them [1014] together just because sometimes there [1016] are redirects. I'll go down to redirects [1018] as well. And now what I'm going to do is [1020] I'm just going to test it on all of [1021] these links. Okay, it's going to be a [1022] lot of HTTP requests, but it's important [1024] that we give this a try. Okay, and what [1025] we ended up with was 39 items. So I [1028] scraped 39 pages here and the result of [1031] these 39 pages are all HTML. What I want [1034] to do is I want to convert this into [1035] like some sort of language that I [1036] understand. And the simplest and best [1038] way to do that is using an HTML to [1039] markdown node. So I'm just going to drag [1040] in HTML. It's going to get the HTML data [1043] inside of this node. And then uh yeah, [1046] to make a long story short, this is just [1047] going to convert this into some sort of [1048] workable text that I can actually use. [1051] After that, we now have a bunch of [1053] markdown data. If you've never seen [1054] markdown data, it's pretty [1055] straightforward. Just scrolling through [1057] here, what we end up with is we end up [1058] with just a bunch of links again and [1060] then just a bunch of plain text. So this [1062] just basically makes the token cost a [1064] little bit lower. For those of you that [1065] don't know how HTML works, it usually, [1067] you mean it looks kind of like this, [1068] right? So to write the word renter [1069] experience, you can't just write renter [1070] experience. You need to go less than [1072] symbol title greater than symbol renter [1073] space experience less than symbol/title [1075] greater than experience. Uh greater than [1077] symbol. This is just way more to uh [1079] tokens than you need. And since we're [1081] about to feed all this stuff in AI, we [1082] want to minimize the token cost wherever [1084] possible. And next up, what we have to [1085] do is we just have to feed this into AI. [1087] So you do so by going to open AI and [1088] then click messaging a model. I've [1090] actually already created this message [1092] node. So I'm just going to paste it in [1093] here just to make our lives a little bit [1094] easier. But if I feed this in, I'll run [1097] you guys through what this is doing. [1099] First of all, we need to connect our [1101] credential. So I connect it to one. If [1102] you haven't done this already, just head [1103] over here and get your API key from [1105] OpenAI. It'll actually walk you through [1107] all of this stuff. Um, it's very [1108] straightforward, luckily. Although if [1110] you are at the beginning or a rate [1112] limit, just note that this may actually [1113] push you over the rate limit just [1114] because we're going to be sending a lot [1115] of requests very quickly. The model I'm [1117] going to be using is GPT4.1. The first [1119] prompt I'm going to use is a system [1121] prompt that says you're a helpful [1122] intelligent website scraping assistant. [1124] And then over here is the actual prompt. [1126] Okay. And this is kind of like where the [1127] AI magic comes in. So you're provided a [1130] markdown scrape of a website page. Your [1132] task is to provide a two paragraph [1133] abstract of what this page is about. [1135] Return in this JSON format. Abstract. [1137] Your abstract goes here. Rules. Your [1139] extract should be comprehensive, similar [1141] level of detail as an abstract to a [1142] published paper. That's very important. [1144] Use a straightforward Spartan tone of [1146] voice. And if it's empty, just say no [1147] content. This is necessary because some [1149] of these scrapes that we're going to do [1151] are going to turn up empty, and we just [1152] want a simple and easy way to handle [1153] them. Okay. So, from there, what we're [1155] going to do is we're going to feed in [1157] all of this directly into AI and just [1159] have it tell us something about it. It [1160] doesn't have to be super complicated, as [1162] I'm hopefully you guys can tell. All we [1163] need to do is just ask it to do this for [1166] us. And what I'm going to do here, [1168] sorry, I just I I ran this one [1170] individually. Give this a click. What we [1172] see is we get an output that looks like [1173] this. This web page serves as a contact [1175] page for Hathan Company, Inc., a real [1177] estate firm located in Overland Park, [1179] Kansas. It provides organizational [1180] contact information, including the [1181] physical address, commercial phone, and [1182] facts numbers, and a link to the [1184] company's website. It also invites users [1185] to reach out with assistance. So, this [1187] just basically gives us some context [1188] about what that specific page is. And [1190] since we're going to be doing this for [1191] all of the pages, you know, I'm sure you [1192] guys could tell, we're going to rack up [1194] a ton of data. What we need to do now is [1195] we need a simple and easy way to get all [1197] the data. It's funny cuz I'm saying data [1199] and data different like every time I do [1201] it. Um anyway, what I'm going to do here [1204] is I'm going to get the data and then [1206] I'm going to aggregate it into an array [1208] and then I'm just going to feed all of [1209] that aggregated array into another AI [1210] module that says, "Hey, here is a ton of [1212] information about a website. What I want [1214] you to do is I want you to customize a [1215] piece of reach based off that." So the [1216] simplest way to do that here is to go [1218] aggregate. And what you're going to want [1219] to do is the specific field that you're [1221] going to aggregate is going to be this [1223] abstract. So, I'm just going to grab the [1225] input field name here. I'm not going to [1226] rename the field. That's okay. Okay. And [1228] now I'm just going to run this end to [1229] end from left to right. Make sure that I [1231] have all the data laid out, not with [1233] pinned nodes, if that makes sense, [1234] because if you pin all the nodes and [1236] only test off of pin nodes, sometimes it [1238] bugs out just because you are sometimes [1240] expecting more or fewer records than a [1243] later node actually gets. So, we're just [1246] going to run this end to end now on new [1247] data. Give that a try. Colonify scraper [1251] over here. Okay, we now have a bunch of [1254] items. We're then doing tons of HTTP [1256] requests. So, you can see we've gotten a [1257] slightly different number of items here. [1260] Okay, and it's running and it's just [1262] kind of doubling up. What I did is I [1264] connected the end to the beginning here. [1266] I'm just looping over. And as you can [1268] see, the summarized website page is [1269] taking a little bit longer because it's [1271] probably a pretty long page. Okay. And [1273] it looks like this is hanging. And I [1274] think the reason why is because what [1276] we're doing is we're feeding in just a [1278] boatload of tokens. It looks like some [1280] of the website scrapes just a lot longer [1282] than I was anticipating. So, what I'm [1284] going to do is I'm actually going to [1286] check to see if the length of the data [1289] here is okay. This is 18,000 characters [1293] to [1294] tokens. One token is around four [1296] characters. So, 18 898 divided by four. [1299] That's quite a few words, right? Why [1301] don't I cap this out at 10,000? Let's [1305] say then if it's greater than 10,000 [1308] then I want to do JSON. So let me go to [1312] the expression field to make it easier [1313] for you [1314] guys. Then if not I want to do [1319] this well slice it from 0 to [1322] 10,000. All right. And that should be [1324] good. And now we're always going to be [1326] working with reasonably simple and small [1329] data. Let's actually do this even less. [1331] Let's just go like 5,000. [1333] You don't need much more than that [1335] realistically. Okay, let's just touch [1338] that formula up. I just added length [1340] there by accident. Now, let's run this [1343] one more time. Okay, and then if we [1344] click on this little aggregate button [1346] here, what we see is we have multiple [1348] runs. And every time that there are [1350] multiple links, what we do is we [1351] actually aggregate them together. Now, [1352] in this case, we haven't actually [1353] aggregated any because it looks like the [1355] first two people that have run through [1356] the system are both working for Hay and [1358] Company Incorporated, which is just like [1360] the, you know, obviously there's like [1361] the same number of like links for each, [1364] right? This one did though. Notice how [1366] we had one page here, another page over [1369] here, another page over here, another [1371] page over here. And what it did is it [1372] just aggregated all of those fields [1373] together. In this case, it's pretty [1374] long, right? It's 23. That's why it took [1376] so long for us to finish. But anyway, [1378] what I'm trying to say is now that we've [1379] aggregated all the data, what we have to [1380] do next, we we kind of have to pass that [1381] through another AI node, right? What I'm [1384] going to do is I'm going to feed this [1386] through a second one here called [1388] generate multi-line icebreaker where now [1390] what we're going to do is we're going to [1391] feed in all these independent website [1393] summaries into said multi-line [1394] icebreaker. Okay. Going to give this a [1396] double click now. And the way that this [1398] is set up is the same as before up here. [1400] And the text is we just scraped a series [1402] of web pages for a business called Oh, [1404] sorry about that. We don't actually have [1405] the text on the [1407] business. Your task is to take their [1409] summaries, turn them into catchy [1410] personalized openers for a cold email [1411] campaign to imply that the rest of the [1412] campaign is personalized. We actually [1413] just tell it what we want and return [1415] your icebreers in the following JSON [1416] format. Now, what I've done is I've [1417] actually written out a custom icebreaker [1419] that I know works pretty well. Hey, name [1422] love thing also doing/like/ a fan of [1425] other thing. Wanted to run something by [1426] you. I hope you'll forgive me, but I [1427] creeped you and your site quite a bit [1429] and I know that another thing is [1430] important to you guys or at least I'm [1431] assuming this given the focus on fourth [1433] thing. I put something together a few [1434] months ago that I think could help. To [1436] make a long story short, it's insert [1437] thing you're selling over here. Okay. [1439] And I think it's in line with some [1441] implied belief they have. I guess the [1442] point I'm making, and you guys can do [1444] this however the heck you want, but I [1445] just have AI like kind of fill in the [1447] blanks for me, but I don't do it like [1449] with simple templated variables. What I [1451] do is I will make it flexible. Like I'll [1453] use a variable and I'll like tell AI, [1455] hey, fill this in with something, right? [1457] Where thing is the thing that I wanted [1458] to fill in. This is in contrast to like [1460] using actual variables which are [1461] procedural and always fixed. If you tell [1463] AI like, "Hey, I want you to write this [1465] casually in short form." What it can do [1466] is it can paraphrase those things and [1468] then it seems a lot more like realistic [1469] to a customer, which I find. So, use [1471] whatever the heck you want here. This is [1472] just my template. Then I have a ton of [1474] rules. Write in a Spartan Lonic tone of [1476] voice. Make sure to use the above format [1477] when constructing your icebreers. You [1478] write it this way on purpose. Shorten [1479] the company name wherever possible. So, [1481] say XYZ instead of XYZ Agency. Love AMS [1484] instead of Love AMS Promotional [1485] Services. Love Mayo instead of Love Mayo [1487] Inc. Do the same with locations. Then, [1490] furry variables. Focus on small [1491] non-obvious things. To paraphrase, the [1492] idea is to make people think we really [1494] dove deep into their websites. So don't [1495] use something obvious. Do not say cookie [1497] cutter stuff like love your website or [1498] love your take on marketing. So all of [1500] these things are important. This here [1502] just makes it seem more human written [1503] because humans tend not to write the [1505] whole company name. If you write the [1506] whole company name, if you say hello, I [1508] love Mayo Incorporated. Odds are you [1510] scraped Mayo Incorporated somewhere from [1512] the internet. You do, hey, love San [1514] Fran, then odds are you did not scrape [1517] San Francisco somewhere from the [1518] internet. Odds are if you say for your [1520] variables focus on small non-obvious [1522] things to paraphrase then you did not [1523] you know do all of that stuff. I guess [1525] all of this stuff just makes it seem a [1526] little bit more human written. Then what [1528] I do is I give it some examples of [1529] profiles and then websites. Okay. So [1531] what I did is I basically ran this exact [1533] same flow on a couple of test demo [1535] websites. Then I got the profile and [1537] then I got a bunch of different website [1538] scrapes. Okay. So exact same thing here. [1540] I'm just feeding this in as like an [1541] example. Then I basically instead of me [1544] just telling it what I wanted to do, I [1546] fed it an example of the perfect outline [1549] for an icebreaker. And then what I'm [1551] doing now at the end is I'm actually [1552] feeding it on real data. Okay. So just [1554] to make a long story short, I'm doing a [1556] system prompt first, then a user prompt [1558] where I give it instructions, then a [1560] user prompt where I give it an example [1562] of an input, then an assistant prompt [1564] where I give it an example of an output, [1566] then finally I give it the actual user [1567] prompt with the actual input and output. [1570] Once this is generated, if you think [1571] about it, our job here is basically [1572] done. All we need to do now is we just [1574] need to update or add a section to the [1576] Google sheet that we had before. So, I'm [1577] just going to delete all of these. Go to [1579] Google Sheets first, then click append [1581] row. Mixing up my platforms here. Just [1584] going to use the YouTube credential. [1585] What I want is I want to select the [1587] document obviously. So, multi-line [1588] icebreaker generator. The sheet I'm [1590] going to be pulling data from is or I'm [1592] adding data to is going to be leads. [1593] Then, what I'm going to have to do is [1594] I'm going to have to map all these [1595] fields. Now, I can't actually pull this [1596] data yet. So, I'm just going to give it [1597] a quick run and then do it in a second. [1599] Okay. From here, what I've done is I've [1601] now mapped all the correct fields. So, [1603] the first name field is going to fill in [1605] this column. The last name field is [1608] going to fill in this column. The email [1611] field is going to fill in this column. [1613] Website, headline, location, phone [1614] number, and then multi-line icebreaker. [1616] Okay, this icebreaker is the new field [1618] that I can't access. So, we are now just [1620] going to give it a run. And because I [1622] need to loop this, obviously I have to [1623] grab the output of this and move this [1625] all the way here to the input of the [1626] loop. And then when it's done, I don't [1628] need to do anything. Okay, so let's give [1630] this a try now on some real live data. [1631] I'm going to click test workflow. First [1633] thing it's going to do is it's going to [1634] split it all out like we did before. [1636] Then it's going to filter it out, remove [1638] all the duplicates, and then start my [1640] HTTP requests, format it as markdown, [1642] summarize individual pages, aggregate [1644] all those individual pages into one [1646] array, feed that whole array into the [1647] multi-line icebreaker, then it'll add [1649] the row, and then it's just going to [1650] proceed line by line by line and do the [1653] same thing. Now, the first two leads in [1654] this list were obviously um the same [1656] company, Hathan Co., you know, you can [1658] filter out duplicates in the company [1659] website if you want. Didn't do that in [1661] this case cuz I actually think that it [1662] makes sense to pitch two people on an [1664] individual business. A cool thing there [1666] that you could do, which I'm not doing [1667] here, is you could also reference like, [1668] "Hey, David, I just reached out to Zayn [1669] and I wanted to follow up with you as [1670] well." If you do stuff like that, people [1672] are a lot more likely to believe that [1674] you are a real human being doing this [1675] outreach, not some automated super cool [1678] robot. Okay, looks like we just added [1680] another one that says, "Love how you got [1681] the Casey trusted partners list dialed [1683] in. also a fan of that local lender [1685] vetting approach. Very [1687] nice. We're just about wrapping up our [1689] test set [1690] here. Okay, so hopefully you guys [1692] appreciated seeing me put that system [1694] together in real time. I hope it's [1695] abundantly clear, but that system is [1697] just like a nugget. It's a stem. You can [1698] add on to that system, make it [1699] arbitrarily complicated if you want. I [1701] use some very simple unfiltering logic [1703] here because I just wanted to let you [1705] guys do whatever the heck you wanted [1706] with it. I also just tend to be kind of [1708] hacky in the way that I put things [1709] together. So, I will focus on the 80/20 [1711] thing that does 80% of what I want, even [1713] if it's a little less cost-effective or [1715] even if I end up wasting some of the [1716] leads. To me, the leads are never the [1717] bottleneck here, just because we have [1718] platforms like Apollo and Appify and [1720] stuff that let us get an almost infinite [1722] number of them. Uh, aside from that [1723] though, yeah, like you can squeeze a lot [1724] of juice out of the system. You could do [1725] a lot more than I did here, you could do [1727] a number of things. Instead of just [1728] scraping all of the website pages and [1730] putting it into an icebreaker, you'd [1731] actually like use it to generate an [1732] asset. You could build a big dossier on [1734] the client. You could have this be like [1735] a person research machine where you [1737] build up some massive list of [1738] information and extract everything about [1740] them and then feed that into a big [1742] database and then use that database to [1743] pitch people in a lot more detailed of a [1745] manner than I am. You could generate [1746] multiple different types of icebreers. [1748] You could test different icebreers [1749] against each other. You could blast out [1751] to everybody in the same domain and then [1752] use other people's information to [1755] reference those people in those emails. [1756] You could say, "Hey, David, I was [1758] looking through Zayn's profile. pretty [1760] sure he's one of your colleagues and I [1761] noticed X Y andZ really unique cool [1763] thing that only a human being would [1764] notice. Just wanted to say great work [1766] and I had a proposition for you. When [1768] you say stuff like that, people again [1770] just assume that you're a real human [1771] being that sat down and is doing this [1772] manually. And whether or not you know [1774] your pitch is even that incredible, [1776] usually when you can imply that you're a [1777] real human being and you can convince [1778] someone of that, they're a lot more [1779] likely to take the rest of your pitch [1781] seriously. Anywh who, if you guys have [1782] any questions on this, feel free to drop [1783] them down below. I'm going to include [1785] this free template in the description [1787] just because I know that it was a little [1788] bit faster than I normally do these [1789] sorts of builds. Just on a time crunch [1791] today, I wanted to make sure I could [1792] still get one out and offer a little bit [1794] of value. If you guys like seeing how to [1797] apply real automations to building a [1800] business, in particular an AI automation [1802] agency, definitely check out Maker [1803] School. It's my 0 to1 daily [1804] accountability roadmap where I show you [1806] guys everything you need to do day one, [1808] day two, all the way up until I think [1810] we're at like day 180 something now. Uh, [1812] I give you a whole list of tasks on [1813] exactly what you need to do to build [1814] your automation business. If you don't [1815] get your first customer within 90 days, [1817] I give you all your money back. Okay? [1818] Aside from that, uh, like, subscribe, do [1820] all the fun YouTube stuff that bumps me [1821] to the top of the alone. I'll catch you [1822] on the next one.

Video: https://www.youtube.com/watch?v=_zPkPW4ALDo
Title: I Asked 1,000+ AI Agency Owners How They're Signing Clients
[0] I asked a thousand AI agency owners how [1] they're signing clients. And in this [3] video, I'm going to show you all of [4] them. So, instead of me just telling you [6] guys how to sign clients, I actually [8] wanted to show you ways that people [9] across all my communities, make your [11] school and make money with Make are [12] signing clients today. So, what I did is [14] I just took a bunch of screenshots of [15] wins posts. These are posts where people [17] basically say, "Hey, I made all this [18] money. Here's how I did it." And then [20] I'm just going to run you guys through a [21] bunch of them. And then afterwards, [22] we're actually going to go into a [23] structured guide on how to go about [25] actually acquiring clients on those [27] platforms. Obviously, the first being [28] Upwork because that's something a lot of [29] people are having success [31] with. This lovely fella closed $4,300 in [35] his first 12 days in the community. I [36] should know that you don't have to be in [38] my community to do it. He did three [39] things. Upwork connects school [41] communities and then cold DMs cuz his [43] emails are still warming up. This lovely [45] human being signed an $8,000 monthly [47] retainer sending a proposal on Upwork [49] and then getting a reply in 5 minutes. [50] This fella did $11,000 this month, [52] mostly through Upwork. This fella right [54] over here, I believe, did a warm network [56] reactivation, which I'll talk about in a [58] second. And now he's partnering with a [59] 1.3 million in revenue business. This [62] person did 80% of these 13 appointments, [65] so I want to say 10 or so in a week [66] through cold email, and now his calendar [68] is all booked up. This fella signed a [70] client for a 3-month retainer, which was [72] fantastic. This ended up being a warm [74] reactivation. This fella here signed a [76] bunch of deals through cold email. So, [78] two $2,000 setup deals with 297 bucks a [81] month each. This fell over here actually [83] works in I guess he was a barber or he [85] works in the barbering industry and he [88] reactivated some of his network. And [89] this fell here generated 682 [92] opportunities in 2 weeks for a client. [94] I'm including this one just in my [95] screenshot cuz he did it primarily with [96] cold email and the response rates [98] weren't even that insane. It's 3.2 and [100] 5.2 just to show you guys that you can [102] actually generate like a million dollars [103] in pipeline in a week or two if you're [104] smart about how you want to do it. Okay, [106] so now that I'm done with all the social [108] proof stuff, like why am I frontloading [109] this? Because I find that a big chunk of [111] the reason why people don't succeed in [112] this industry and basically most others [114] is just cuz they have some limiting [115] beliefs surrounding whether or not this [117] is even possible. Like believe it or me, [119] this is entirely possible. There are [120] thousands of people around the world [121] doing this sort of stuff as we speak. [123] And odds are if you have these limiting [125] beliefs, you probably grew up in an [126] environment where people were not [128] winning like this. So all it really [130] takes in order to do so is just to shift [131] that thing in your brain. Human beings [133] are consensus animals. So if you just [134] surround yourself with a bunch of people [135] that are constantly winning, you'll [137] start thinking that winning is easy to [138] do as well. [141] Now that I've gone past that little [143] philosophical tangent, let's cover the [144] actual lead generation methods in kind, [146] shall we? So, the first one is Upwork. [148] Now, I received a lot of flak about [150] Upwork when I first started this stuff [151] because most people were like, "Up's a [153] freelancing platform, Nick. You can't [154] make money selling any sort of service [156] on Upwork sustainably or scalably." And [158] I actually think there's some merit to [159] that. I don't really think you can make [160] like a million dollars a year using [162] Upwork. But the vast majority of people [164] that are currently watching this video, [165] their problem isn't making it to a [167] million dollars a year. The problem is [168] making like their first two, three, [170] four, $5,000 a month. And Upwork is [172] definitely sufficient, if not overkill [174] for a 2, three, four, $5,000 a month [176] business. So, this lovely human being [178] over here tried for many, many years, [182] and they never managed to make a single [183] dollar until day three of my community [186] maker school where I basically forced [188] people to send a certain number of [189] Upwork applications, then they make [191] €1,000 with a 500 retainer. So, it's [194] $4,000 on less than €15 spend in [196] Connects. It's an ROI over 250x. This [198] person says it's insanity. That's great. [200] Uh, this lovely fell here did $7,492 in [204] 9 days. So, that was pretty cool. They [206] got a little screenshot here of the [207] Upwork system. This person over here [210] legitimately closed their first client [211] while they were juggling a 9 to5 and [213] their kids. Okay? So, you don't actually [214] need to like submit an insane number of [216] applications to do so. That person did [218] this while juggling just a bunch of life [219] demands. So, now that I've again proven [222] this to you, you know, this is by far [223] the most popular acquisition method for [225] total beginners right now. And the main [226] reason why, if I could just make a long [227] story short, Upwork is a freelancing [229] platform where basically clients that [231] have money in their hands and are ready [232] to pay for something will actually go [234] and they'll create a post like this [236] seeking copywriters. Then they'll attach [238] a budget to it and then basically a [240] bunch of people will bid on that job [241] using their Upwork profiles to see, you [243] know, essentially maximize the [244] probability that they can fill their [246] need. Upwork will rank you sort of like [248] a search engine algorithm based on a [250] various things like how many fields of [253] your profile have been filled out, the [254] keywords on your profile versus the [256] keywords in the job. And then now they [257] have this boosting feature as well. So [259] let me run you through kind of like the [260] idea behind Upwork and how to make money [262] on this platform. So first of all, it's [263] the most popular acquisition method by [265] far. And the reason why is cuz Upwork's [267] actually kind of simple. So most people [269] struggle with sales, okay? And the [271] reason why is cuz sales is hard. And if [272] you've never sold anything on the [273] internet before, basically, just so [275] we're all on the same page, you have to [276] do a lot of stuff in order to get [277] somebody to the point where they say [279] yes. First of all, you have to define [281] what the problem is that the customer is [283] facing. And then you have to convince [284] them that they're actually experiencing [285] a problem. The second thing you have to [287] do is you have to show them a solution [289] that solves that problem and then [290] convince them that that solution is the [292] right solution for them. Then third, you [293] know, now that they know what the [294] solution is, there's a million service [296] providers. What you have to do is you [297] have to convince them that you are the [298] right person to provide that service. [299] So, this is actually like three separate [301] problems and they're very, very [302] difficult problems. Most beginners suck [304] at this. They definitely suck at that [306] and they're pretty like mid at that. Um, [308] what's cool about Upwork is Upwork [309] actually just eliminates the first two [311] cuz somebody's posting a job on Upwork, [312] you can kind of think of conceptually is [314] like they already know the problem that [315] they're struggling from. Okay, so that's [316] done. They already kind of understand [318] the solution, not all the time, but like [319] a big chunk of it. So, that's done. So, [321] really the only thing you actually have [322] to do here is you just have to convince [324] them that you're the better person than [325] the other 50 people that are applying. [327] And you know, uh, say what you will [328] about competitiveness and stuff like [329] that, this is still usually much easier [331] to do than if you were to actually like [333] try doing the entire sales stack kind of [335] zero to one, right? So this is what I [337] recommend for beginners cuz then you [338] just get to focus on one problem at a [340] time. The problem that you focus on is [341] standing out. Once you've dealt with the [342] standing out problem, then you can level [344] up to different lead generation methods [346] and then start, you know, dealing with [347] solutions and then start dealing with [348] problems. It's more of a natural [350] progression, I would say. Okay. So the [352] way that this basically works is if you [354] are very good at sending highquality and [356] super customized proposals to a job post [358] on Upwork, you can get about 30% [361] proposal to reply rate. Now, I will say [363] that this is like a good case scenario. [364] On average, most of the people in maker [366] school are about 20%. And then obviously [368] some people that are total beginners and [369] have no idea how to pitch themselves and [370] stuff like that, they're closer to 10%. [372] But basically, you're you're going to be [373] somewhere in this realm. What that means [376] is, you know, if you send, let's just [377] say, four to five Upwork apps, you are [380] already at the point where statistically [382] you're going to be having a conversation [383] with a real person that might actually [385] want to buy a product or service. [386] There's basically no simpler way of [388] doing this. Now, obviously, you're in [390] exchange for this level of ease, what [391] you have to do is you have to you have [392] to pay them a little bit of money. I [393] mean, Upwork is a business at the end of [394] the day, right? So, what you do is every [396] time you make an application, you pay [397] like $1.50, $2.50. It depends on how [400] much you bid essentially. The value in [402] this though is, you know, compared to a [404] lot of the other methods that I'm going [405] to talk about here, if you were to sign [406] up to cold email or something, basically [408] immediately the second that you sign up, [410] all of a sudden you have to spend $90, [412] okay? And maybe it takes you like, you [414] know, a week or something to see results [416] for that. Meaning that there's this like [418] kind of weird gray zone in between where [420] like you make no money and you're out a [422] ton, right? Uh with Upwork, it's a lot [424] more I want to say dripped out over [426] time. like you'll spend a little bit of [427] money today, spend a little bit of money [428] tomorrow, you'll spend a little bit of [430] money the next day, you'll spend a [431] little bit of money the next day just [432] because those applications basically [433] amortize the cost. Um they distribute [435] the cost uh the capital outlay over time [438] which is really helpful for beginners. [439] Okay, so that's another reason. And then [441] yeah, just in terms of strategy, let's [442] actually talk about how to do it. [443] Basically, my recommendation is to start [444] with smaller projects to build reviews [446] on your profile. Then you just start [447] scaling pricing. Literally go up like [449] 30% every single time you win a job and [451] then just rinse and repeat. There are a [452] lot of success factors, but I'm just [453] going to run you guys through a really [455] quick and easy look at what this [456] actually looks like. So, I've made a [458] fair amount of money on Upwork just in [459] terms of like my verified Upwork [460] earnings, aka the Upwork earnings that [462] are verified on this platform. It's [463] almost $500,000 at this point. So, I've [465] learned a thing or two about how to [467] pitch Upwork and how to build a good [468] profile. So, the most important parts of [470] an Upwork profile basically are this [471] little green bubble over here. And this [473] just shows that you're online for [474] messages. Obviously, having a nice [475] profile pick is important. Having like a [477] verified badge, and then having some [478] expert vetted and 100% job success [480] scores as well. The thing is, as [482] beginners, you guys aren't going to have [483] this, right? You're also not going to [484] have total earnings, number of jobs, or [486] total hours. So, what my recommendation [488] is for people that are just starting is [490] focus on a simple title that just [491] describes what you do. So, AI [493] automation, AI process engineering, AI [495] development, okay? Focus on a [497] non-standard hourly rate. Don't just put [499] like a 100 bucks an hour here or [500] something. Put like 5933. The idea is [503] there's a million people at 100 bucks an [505] hour, right? Like what makes that person [507] worth 100 bucks an hour, not 99 bucks an [509] hour, 101 bucks an hour? Well, the the [510] reality is nothing. They just found a [512] number they liked and ran with it. I [513] like to be a little bit more intentional [514] about the hourly rates that I provide. [515] And I find that also just makes people [516] kind of stop and stare and be like, "Hm, [518] I wonder why Nick's charging 5250." Then [520] this section right over here, instead of [523] trying to convince somebody through [525] words why you're great, the best thing [528] to do is to show them through actions. [530] So instead of saying, "Hey, I'm an [532] amazing AI automation engineer, AI [534] developer, PPC marketer, SEO, SEM [537] engineer, whatever the hell you're [539] providing as a service, instead of [540] trying to convince them of that, just [542] show them. Keep everything super [543] simple." And they just say, "Hey, here's [544] all the cool money and cool [547] accomplishments that I've done." So in [548] my case, my work is over 50 million [550] reads. This is for a freelance writing [551] profile. I write a newsletter read by [552] the founder of Husbot that has a 37 bill [554] market cap. You know, I've worked with [556] all these worldrenowned brands. These [557] are things that I've done. They're not [559] necessarily me trying to, you know, [561] write the most compelling case as to why [563] you might want to work with me. [564] Basically, I just show them my quality [565] and I let them kind of make their [567] decisions about it after. From there, [568] you just want to fill out all the [569] fields. So, add a video, add some [571] languages, add your education if you [573] can. Okay? Add some portfolios. I have [576] some kind of cringeworthy portfolios [577] that I honestly haven't tried changing [579] or haven't needed to change in a while. [581] Add a bunch of skills. Add a project [582] catalog. Literally just go through and [584] fill out everything that you can. This [586] is a big list of testimonials from [587] people. Here's some certifications. [589] Here's an employment history. Okay, [590] Upwork isn't really that difficult if [592] I'm being honest. The main issue that I [594] think most people have with it is they [595] just don't really understand the problem [596] that they're solving. And again, the [597] problem you're solving is you're not [598] trying to convince anybody that, you [599] know, a automation is great or that, you [602] know, your solutions are incredible. All [603] you're really trying to do is show them [604] why you're different from other people. [606] And the best way to do that is just like [607] show them a ton of social proof. Hey, [608] I've worked with insert big name here. [610] I've delivered insert big project here. [612] Hey, I'm associated with insert big [613] thing here. Does everybody that's [614] watching this have those associations? [616] No. But if you dig through all of your [618] corporate experience, odds are you'll [619] probably have a little bit more than you [621] probably think, if that makes sense. [622] What's impressive to other people might [624] not necessarily be what you think is [625] impressive to you, if that makes sense. [627] Big method number two is obviously cold [629] email. This is the highest ROI of all [631] the methods. So, we had somebody hit [633] $10,000 a month with cold email. Pretty [635] nuts. Uh they sold a $4,200 project to a [639] SAS company tech platform $5,000 deal [642] software consulting biz 2,000 or $4,000 [644] deal I should say and then a $3,000 deal [646] for hospitality. Now it's time to [647] deliver them. This person over here did [650] a $1,500 deal from cold email was their [652] first deal ever. They actually even give [654] you some of the copy that they were [656] using, which is very gracious of them. [658] Let me run you through what Cold Email [660] is like. So as of right now, this is the [661] number two most popular client [662] acquisition method. It's also way higher [664] ROI than Upwork because this is just a [666] lot more scalable. When it was the case [668] of Upwork, you know, time and effort [669] were basically pretty related, right? [671] Like in order to scale, what you need to [672] do is you need to send really high [674] quality applications. So every unit of [676] time was approximately equivalent to the [677] amount of effort that you would put in. [679] Like if you could do one Upwork [680] application every 5 minutes, well then [682] you know if you do 50 minutes, you could [684] do 10. If you do 100 minutes, you could [685] do 20 and so on and so on and so forth, [687] right? Well, cold email is a little bit [688] different. Basically what you do is you [690] actually just like provide a ton of [692] effort initially and then over time you [694] get to provide less and less and less [696] effort because most of the effort that [698] you're doing at the beginning is [699] actually just like setting up campaigns [701] and then once you actually you know set [703] up the campaigns all you really have to [705] do after that is just reply to emails [706] and then you know get people on calls. [708] So I guess what I'm trying to say is [710] like the amount of effort that you [711] provide over time actually goes way [712] down. And then also funamentally the [714] amount of money that you have to spend [715] in order to like keep something like [716] this going whether it's like money that [719] is time that you're spending that we're [720] converting into money in this [721] hypothetical scenario or maybe like [722] money that you're giving to somebody to [724] to set all this stuff up for you. All [725] that stuff just goes down which is [727] pretty valuable. So it's the highest ROI [729] of all methods. You can book meetings [730] for very very little money. And there [731] are variety of success factors. There [733] also a variety of kind of gotchas that [736] I'm going to walk you through and then [737] some pitfalls as well. But basically the [739] way that all this stuff works is you get [741] a lead source like Apollo, okay? And [744] then what you do is you scrape it using [746] a service like Appify. Then you enrich [749] it using a service like Lead Magic and [751] now what you have is you have a big [753] spreadsheet. This is a massive [754] spreadsheet of like, you know, name, [758] email, I don't know, like favorite type [760] of hot dog, whatever. uh you get a ton [762] of personal information about the [764] person. Okay? And then what you do is [765] you take all of this stuff and you [767] actually feed this into AI. Then you [769] know what AI does? AI thinks for a [772] little bit and then comes up with a [773] customized oneline icebreaker which [775] allows you to pitch this person and [776] basically you know make it seem like [778] you're not actually sending totally cold [779] emails. Then what you do is you set up a [781] bunch of Google Workspace mailboxes or [783] equivalent. And then you combine it with [785] a platform like Instantly, which is by [787] far the gold standard platform as of the [788] time of this recording anyway, which [790] allows you to then take all those [791] mailboxes, set up like scalable [793] infrastructure, and then all you do is [794] you just pump all those leads into [796] Instantly using a sequence and then send [797] out hundreds of emails a day. Okay, so [799] in a nutshell, that's more or less what [801] it looks like. After you're done and [802] kind of up and running, let me just log [804] into a pre-existing campaign that I [805] created specifically for YouTube. you'll [808] end up with a dashboard that looks [809] something like this. So, this is a [810] campaign that I ran for videography, for [812] instance. If I go to my sequences here, [814] you'll see if I zoom out a bit that this [816] is like an actual email that I'm sending [818] to people. I say icebreaker. Hey, I'm [820] new to this, but I put something [821] interesting together a few months ago [822] that works well. To make a long story [823] short, it's an outreach system that uses [825] AI to find people doing blah blah blah [826] blah. I know this is out of left field, [828] but I think I could do something similar [830] for you. Just wanted to see if there was [831] interest. You're one of the first people [832] I found when looking into it. Would this [834] be of value to you at all? Okay. Okay, [835] the reason I'm I'm showing you guys this [837] is because this is actually like the [838] thing that works. You just write you [840] write emails. You make them seem really [842] customized. And then you just say, "Hey [843] man, this might be totally random, but [846] here's a bunch of cool stuff that I do [847] and I think I can make you some money. [849] Do you want to sit down and hash out [850] like a plan to actually get this done?" [852] You don't say, "Dear uh salutation, sir. [855] I am currently selling a fivestar [857] package that is on a discount for only [859] like you don't do any of that stuff. You [860] don't make it like a TV ad. You just try [862] and make it seem like you're sitting [863] down next to some dude at the bar and [864] you're like, "Hey, man. I know this is [865] totally random, but do you work at XYZ [867] company? No way. That's crazy. I think I [868] could help you. Once you're done with [870] all that, you iterate the campaigns. You [873] change the messaging slightly using [874] Instantly and other email platforms [876] built-in split testing. And then you [878] just make them better and better and [879] better over time. Now, there's a capital [881] cost to this for sure. And if you guys [882] want to see exactly what that process [884] looks like, definitely check out my [885] watch me start install an AIS service in [886] 10 hours video. I walk you through [888] getting a cold email campaign up and [889] running, then actually generating [890] interested leads in my offers in just a [892] few hours. Okay. big way that people are [895] generating leads. Number three is [896] communities. Okay. Now, to make a long [899] story short, what communities are, [900] they're basically communities like [901] school or communities like my own, Maker [903] School, which is hosted on school. Now, [905] communities are very simple. Basically, [907] they're like social media platforms, but [909] they're like niche simple social media [911] platforms where you join a group that is [913] specific to one thing. You can kind of [914] think of it as like joining joining like [916] a Facebook group or something, right? [918] Instead of blasting out your post in the [919] entire wider internet, you're blasting [921] out your post to like a subset of people [922] that have specifically said that they're [924] interested in this thing. And what is a [926] thing in our case? It's usually like a [927] niche that we're targeting. So like if [928] I'm targeting videography, I join a [930] bunch of videography communities, for [931] instance. Okay, so this lovely fella [934] signed four new clients in October. And [937] the way that they did it, I believe this [939] is a woman that signed four new clients [941] in October. The way that she did it was [943] she leveraged communities. She she [944] simply shared her demos in Facebook [946] groups which brought in three clients [948] and then her last one came in through [949] Upwork. Now that occurred in one month, [952] okay, absolutely insane. There's no AI [955] cold calling here. There's no crazy [958] scaling cold email campaigns. It's [960] literally this woman just sitting down [961] and saying, "Hey, I'm just going to make [963] a post, but instead of blasting it out [965] to the entire internet, I'm going to [966] blast it out to a group of people that [967] specifically suffer from the problems [969] that my post is going to solve." [971] This person over here made their first [973] post in a brand new community. Then they [975] ended up getting a ton of comments, [977] likes, a bunch of people are asking them [979] if they can implement make.com um you [981] know in their processes. Even the group [983] admin actually sent them a DM asking [984] them, hey, you know, can we work [985] together? So this sort of stuff works. [988] The thing is it just scales with your [989] time kind of like Upwork a little more [991] manually. Okay. So I want to say from a [992] return on investment perspective, from [994] like a sheer money perspective, probably [995] not as high ROI as cold email. But if [998] you're like broke, you have no money, [999] but you still want to get up and running [1000] with this, communities are an awesome [1001] way to do it. Okay, so the benefit to [1004] this is it builds trust before the sales [1006] conversations begin because it's a [1008] social media group and it's very insular [1009] and it's very closed. You tend to like [1011] gain authority, reputation, and renown [1013] in this group if you do it right. If you [1014] play it off as like, hey, you know, I'm [1016] in this industry and I'm just sharing [1017] the problems that I'm suffering from and [1019] I'm just interested to see if anybody [1020] else might be interested in solving them [1021] as well, then you end up being like part [1023] of the inroup of the community and not [1026] necessarily somebody that's on the [1027] outside, you know, like like a wolf [1029] peering at their uh prey, right? You're [1031] actually like part of their team and [1033] people trust you a lot more. What does [1034] that do? That leads to much higher close [1035] rates naturally. So, there are a couple [1037] of gotchas here. The big thing is really [1039] you need patience. The best results from [1041] this stuff take a while. They might take [1043] like two to three months to become an [1044] authority of the group. Okay? If you can [1047] interact with people in the group, if [1048] you can treat this kind of more like [1049] networking, just digitally as opposed to [1051] some sort of hard sales, you're going to [1052] do a lot better. But as a result, you're [1054] going to have a massive network of [1055] people that you could sell not only this [1056] stuff to, but anybody else in the [1057] future. Some success factors here. You [1059] need to be consistently providing value. [1061] You need to be solving real problems [1062] publicly. You know, if you're promoting, [1064] don't do it overtly. Do it [1065] extraordinarily subtly. You kind of need [1067] to have a little bit of social acuity. [1068] You need to know how to like warm pitch [1069] people, not just like cold pitch people. [1071] And really the big thing that I didn't [1073] mention here is you just need to show up [1074] every day. Like if you just show up [1076] every day for a long time, then even if [1079] you are the most boring lame person that [1081] offers like basically no value, people [1083] begin to like you because human beings [1085] are slaves to to familiarity. Mere [1087] exposure effect, right? Like the more [1088] that you just show up in a group [1090] consistently over time and just make [1091] your presence known, the more people [1093] will recognize you and be more likely to [1094] interact with your posts. Okay, so how [1096] do you actually get up and running with [1097] something like this? Well, you could [1098] join a community like mine, Maker [1100] School. Obviously, my community is sort [1101] of like unique in so far that we're the [1103] number two on school right now and we're [1104] super engaged and and not all [1106] communities are going to be like this. [1107] But realistically, what else you could [1108] do is you could go to [1109] school.com/discovery over here and then [1111] you could just type in like your niche. [1113] So maybe I'm targeting videography um [1114] people or something. What you do then is [1116] you just join a bunch of communities [1117] like wedding creators, a place for [1119] wedding creatives to boost their [1120] business or start from scratch. The 10K [1122] a month videographer, wedding filmmaker [1123] worldwide. You'll notice some of these [1125] cost a pretty penny. So, you can pay [1127] money to sign up to a community, but I [1128] do find that that kind of defeats the [1129] purpose for most people. That said, paid [1131] communities are much more engaged. But [1133] full-time creator, wedding filmmaker [1135] academy, wealthy filmmakers, right? I [1136] mean, there's like tons of these groups. [1138] And notice how the member sizes are [1139] pretty small. There's 200 people here, [1141] 100 people here, there's 2,100 people [1143] here, there's 800 people here. This is [1145] not a lot of people, but the benefit to [1147] this is you actually end up being like [1149] one of the few people that are [1150] consistently engaged. And so it's very [1152] easy for you to get exposure [1153] consistently to like 800 people that are [1155] suffering from your exact problem. I [1157] can't really overstate how valuable this [1158] is and how much money you could make if [1160] you just end up being the person to go [1162] to for a particular problem in one of [1163] these communities. All right, so [1165] obviously a lot of money that you can [1166] make there as long as you show up every [1168] day. Okay, another way people are [1169] closing deals is social media content. [1171] All right, what do I mean by social [1173] media content? Well, right now I mostly [1174] mean LinkedIn, although obviously people [1176] are succeeding all over the map just in [1177] terms of what I'm seeing the most [1178] frequency with. it's LinkedIn. I mean, [1180] this works best as a complimentary [1182] strategy rather than the primary [1183] approach. I don't actually recommend if [1184] you're like a total beginner and you've [1186] never made any money with this or maybe [1187] just, you know, online businesses in [1188] general for you just to like go on your [1190] Facebook and start blasting stuff out. [1192] And it's for the same reason that [1193] communities work really well because [1194] your Facebook is probably really big and [1196] there probably like a lot of people on [1197] there, but not all of them are suffering [1198] from your problem. If you're going to be [1199] doing that sort of approach, just do it [1200] inside of a community and it'll [1202] instantly three or 5x the results that [1203] you would have got just cuz you know the [1205] intent in the group is to solve specific [1207] business problems. So, you know, I don't [1208] actually recommend you make your entire [1209] life about this. It's very scalable, but [1211] it's not as direct of a return. Like [1213] with, you know, Upwork, you send out [1215] five applications, you get, you know, I [1216] don't know, one person responding to [1217] you. With social media, it's not really [1219] the same, I will say. And it takes a [1221] while to like get to the point where you [1222] see some growth. I'll cover a specific [1224] social media platform, YouTube, which is [1225] what I'm using, what I've had a lot of [1226] success with in a moment. But for now, [1229] yeah, LinkedIn is definitely one of the [1230] biggest and one of the best. What does [1232] this look like in practice? Usually, and [1233] I just scrolled through my LinkedIn for [1235] 5 seconds and I found one of these [1236] posts. Usually, it's something like [1237] this. So, this smart fellow over here, [1239] Thomas, is posting some giant content [1241] creation bundle where he basically walks [1243] everybody through how to do things like [1245] make uh reels with AI, do keyword [1248] research using an SEO blog generator, um [1250] create a faceless YouTube channel, [1252] automate X and Twitter posts, generate [1254] ebooks, transform content. Then, you [1256] know what he's saying? He's like, "Hey, [1257] I'm going to give this stuff away for [1259] for free. All you need to do is just [1260] comment create." Okay, so what did he [1263] end up getting here? He got like 298 [1264] comments on here. And then he basically [1266] independently and individually DMs [1268] everybody back. This lead magnet. In [1270] exchange, he gets them following him, [1271] which means that they're more likely to [1273] boost his post later on. If you repost [1275] it, then you're more likely to get a [1276] response from him. It's like a positive [1278] flywheel feedback loop. Okay, so this [1280] sort of lead magnet stuff works really [1282] well. Similarly, I'm doing a strategy [1284] like that right now for my own Instagram [1285] here that I managed to scale to 122,000 [1288] followers with. And that's very similar [1289] to what Thomas is doing a moment ago on [1290] LinkedIn. It's just instead of doing it [1292] textually, I just do it visually. I [1294] showcase like a platform. Let me just [1295] make sure this audio is not on. I [1297] showcase a platform like Kurser, Lovable [1299] or Bolt. I then run through, you know, [1301] how to do it and then I say, "Hey, do [1302] you want this AI code editor? Just [1304] comment coding and then I'll send it [1305] over to you." This gives me their email [1307] address and then I can pitch them on [1308] stuff later on. Now, if you're selling [1310] AI agency services as opposed to AI [1312] information products like I'm kind of [1313] doing now, teaching you guys this and [1315] then trying to funnel you into my [1316] communities and whatnot, obviously your [1317] approach is going to be a little bit [1318] different, right? Instead of you selling [1320] knowledge and stuff like that, maybe [1321] you'll be selling particular systems. [1323] And then, you know, when you subscribe [1325] them to your mail list, you're not going [1326] to be targeting people that are in AI [1327] and automation. You'll be targeting [1328] small business owners that want to [1329] implement AI and automation into their [1331] processes. But hopefully you guys [1332] understand the nuance there. Okay. So, [1334] yeah, the results improve as your [1336] content library grows. And then, you [1337] know, as long as your content is results [1339] focused. So, as we saw that fellow back [1341] there that was sharing content, these [1342] were all things that like business [1344] owners had needs that they were [1345] suffering from like content marketing, [1346] like podcast transcription, like [1348] faceless YouTube videos, right? As long [1350] as you combine results with consistency, [1354] aka if you just post every single day [1356] for a long enough time and make sure [1357] your content's good, the algorithm will [1358] eventually reward you. And then if [1360] you're just good at like the specific [1361] platform, you can do pretty well. My [1364] only recommendation to you here is I [1365] just see way fewer people winning with [1367] social media content. when you do win, [1369] you tend to win really big. But if [1370] you're a beginner, rather than like go [1372] to the casino and try and like, you [1375] know, play the the blackjack or [1376] whatever, it's probably better for you [1378] to like start with penny slots, if that [1380] makes sense. Start with something where [1381] the total payout is smaller, something [1382] like Upwork, something like cold email, [1384] but then, you know, the results are a [1385] little bit more consistent, if that [1386] makes sense. Okay, so speaking of social [1389] media content, YouTube obviously works [1390] extraordinarily well. We had a fella [1392] here do a 30-day content challenge, then [1395] land his first client directly from [1396] YouTube for $3,000. and he shares a [1398] Stripe screenshot. There are a lot of [1400] people that are making money with [1401] YouTube right now. What this looks like [1402] in practice, this is actually one of my [1404] coaching and consulting clients, one of [1405] the coolest guys that I know who now [1406] works with NAN, believe it or not, and [1408] he managed to leverage his channel in [1410] order to do that as well as obviously [1411] make a ton of agency money. But [1412] basically, what you do is you just do [1414] things like this. Hey, here's a [1416] tutorial, ultimate AI agent setup guide [1418] using MCP and Ampify. Hey, here is how [1421] to scrape 50,000 leads and generate [1422] personalized icebreers. Hey, here's how [1424] to automate your NAD workflow. Okay, you [1427] make long- form videos similar to how I [1428] make them, similar to how Dylan makes [1430] them, and similar to how a bunch of [1431] other people make them. And then what [1432] you do is in the description you had a [1434] link and then in the description link [1435] you say something like, "Hey, do you [1437] want me to build the system out for you [1438] within 7 days? Then just fill out this [1440] form." On the form, you have a little [1442] calendar link. They click the calendar [1443] link, they put in their information, and [1445] then you get them on a sales call. And [1446] because you are warming them up through [1448] the YouTube video and you're showing [1450] your value and showing your technical [1451] experience, usually by the time they [1453] make it to the point where you're going [1454] to ask them for money, they've already [1455] bought in and they're happy to do so. [1457] Now, the issue with that, it's the same [1458] issue with social media in general. High [1460] long-term ROI and when it works, it can [1462] work extraordinarily well, like we're [1463] seeing with me and a few other people, [1464] but it does require significant amount [1466] of time invested upfront. And in terms [1468] of the success pattern, usually the way [1469] that I see people do this is they will [1471] put a ton of time and energy into it. [1473] They'll get minimal returns for maybe [1474] the first three to six months and then [1476] they'll hit what I like to call product, [1478] you know how there's like product market [1479] fit. This is sort of like product [1482] content fit. So instead of PMF, it's [1486] like PCF if that makes sense. So once [1488] you hit that, then you tend to scale. [1490] And obviously scaling is amazing and [1491] growth solves everything, but those [1492] first few months can be tricky. So [1494] again, my recommendation for you is if [1496] you're a beginner, maybe don't focus on [1497] something hyper scalable like this. [1498] Don't put all your eggs in one basket. [1499] focus more on like the outbound [1500] approaches where you can make an ROI. [1502] You know, it might just be a little bit [1503] harder initially cuz you actually have [1505] to like jump on sales calls or talk to [1506] people cold, but that's more of like a [1508] theoretical hard. That's not necessarily [1510] like uh actually hard in practice. If [1512] you think about the amount of time that [1513] you'll spend making content in your room [1515] alone, obviously it's easier because [1516] you're in your room alone and you're not [1517] talking to anybody, but it's probably [1519] not going to deliver results as quickly [1520] as if you just like put yourself out [1522] there consistently through cold email, [1523] which would be a lot more like [1524] theoretically hard and be like [1526] emotionally devastating and stuff when [1528] they say no straight to your face. He'd [1529] probably get results a lot faster, [1531] though. So, I guess that takes me to [1532] another point, which is that like [1533] comfort is at odds with speed. So, if [1537] you want to go really fast, you're going [1538] to have to sacrifice your comfort in [1539] order to do so. Okay. Okay. And then [1541] yeah, the best performers focus on [1543] problem solving tutorials, specific [1544] technical solutions. Next up, I'll cover [1546] social media DMs. If you guys think [1547] about it, before I was covering [1549] basically how to do growth on social [1551] media, how to pitch yourself as an [1552] expert, and then build like an inbound [1553] funnel. This is sort of like an outbound [1555] funnel. Okay, so this person over here [1557] started cold DMing and within I think a [1559] day or two, they got 88 requests for [1561] more information on their post, which [1563] they've immediately converted into a [1564] bunch of booked calls for their 2.4K [1566] offer. Cold DMs, just for people that [1568] don't know, are legitimately where you [1570] go on a platform like LinkedIn. If I [1571] move over to this messaging tab, then [1573] you just shoot a bunch of messages over [1574] to people like this. If I were to show [1577] you guys a quick example of this, hey [1579] Nick, hope it's not an automated [1580] message. I got news for you, Lassa. [1582] Sorry. You know, like this person here, [1584] Rosie, she's selling some funding for [1586] some big company or whatever. And what [1587] she does is she pitches people. She [1588] says, "Hey Nick, love your blank. We [1590] want to fund blank. Let's connect a chat [1592] partnership. Let me know." Okay. So, you [1594] know, obviously this person's selling a [1595] particular investing solution, but the [1597] idea is the same regardless of whatever [1599] you're selling. You DM people cold on [1601] social media platforms, usually [1602] LinkedIn, usually X, just cuz they're a [1604] little bit more business aligned, and [1605] then you pitch them something. Now, the [1607] thing to keep in mind when you're doing [1608] this is, do you guys see over here how [1611] there's like a limited amount of [1612] character space? There's like 1 2 3 4 5 [1615] 6 7 8 9 10 and then all of a sudden it [1618] kind of cuts off. Okay, every platform [1620] has slightly different DM character [1621] limits. So like LinkedIn, I don't know, [1623] might have like 30 or something. X might [1625] have something else in order to really [1627] crush it with cold outbound DMs. You [1629] need to know the platforms that you're [1631] sending stuff on like the back of your [1633] hand. So you actually have to go through [1634] and you have to optimize the hell out of [1636] things. Probably like Rosie did over [1637] here with her message and know exactly [1639] how many characters the person on the [1642] other end of the line is going to see [1643] before they make a decision whether or [1644] not to click your message. It's the [1646] exact same way as cold email. It's just [1648] because this is on a social media [1649] platform, you have a little bit more [1651] room to play around with. Cuz if you [1652] think about it, not only do you have [1654] like the email subject line and like the [1655] teaser and the first few lines of your [1658] actual email body, you also have like [1659] your profile picture, you have your [1661] headline, you have the post that you've [1663] made, you have other comments, you have [1664] the number of followers, right? So, it's [1665] just like that. It's just there more [1666] levers to pull. And because there are [1668] more levers to pull, if you really want [1669] to crush it, you need to optimize it [1670] just a little bit more. Okay? So, if [1672] you're going to do cold DMs, do them [1674] like that person over here. Do something [1675] like LinkedIn or X. send a bunch of cold [1677] DMs and try and book using various [1680] platform specific features like, you [1682] know, your social proof, the first 30 [1684] characters of the message, and so on and [1686] so forth. And one thing that's really [1687] doing well on LinkedIn is voice and [1689] audio messages. And I'm just talking [1690] LinkedIn specifically here, I I don't [1692] believe other platforms, at least as of [1693] the time of this recording, have the [1694] ability to do this at scale, but there [1696] actually a couple of cold outbound [1697] platforms like Lrowth Machine, which [1699] slots directly into like an automated [1701] voice message flow where you can like [1702] pre-record a voice message and then [1703] actually like have AI customize the name [1705] or whatever. So, there's a lot of cool [1706] things that you can do there, but yeah, [1707] cold outbound DMs work really, really [1709] well, especially when you combine them [1710] with something like voice or like a Loom [1712] video or something that's a little bit [1713] more personalized. Okay. And then there [1714] really like hundreds of other approaches [1716] that you could do here. One in [1717] particular that I found interesting was [1718] somebody that closed money via WhatsApp [1720] outreach. So, they closed a deal with a [1721] real estate company in Dubai simply [1723] doing WhatsApp outreach. They sent 15, [1725] they received three positive replies and [1726] then they just closed for $1,900. Now, [1729] you know, WhatsApp outreach here is [1731] bundled under a giant umbrella of a [1733] bunch of different things that you could [1734] do. You can do the same thing on [1735] Telegram. I'm sure you can do the same [1736] thing across a variety of these [1737] messaging apps and so on. So, I'm not [1739] going to cover this any more than I [1740] already have, but I just want you guys [1741] to know that like I'm sitting here [1742] talking about these three very popular [1744] platforms like Upwork and cold email and [1746] communities and then, you know, a bunch [1747] of other ones, social media, YouTube, [1748] Instagram, cold DMs, whatnot. The more [1750] popular one of these are necessarily, [1752] the less effective your approaches [1754] become as you get more people that are [1756] doing the same approach, right? So, [1758] tactically, you have a temporary window [1760] of time before the approach stops [1761] working. Well, there are a variety of [1763] really cool, nifty approaches that [1765] people in Maker School, make money with [1766] make, and the wider internet have [1767] uncovered that people aren't even [1769] talking about yet that are printing [1770] money right now. And stuff like WhatsApp [1772] direct outreach is one of them. Okay, [1774] the last and probably the most important [1776] thing I'm going to talk about is [1777] referrals and warm network. So, the [1779] reason why I'm bringing this up at the [1780] end is because I just want to make my [1782] videos as palatable for beginners as [1783] humanly possible. But, I know that a lot [1785] of people that start an AI automation [1787] agency like have actually run businesses [1788] before, especially businesses in [1790] adjacent niches. Like a lot of people [1791] that come to AI and automation have like [1793] social media marketing businesses or [1795] content marketing businesses or [1796] whatever. And so to be honest, the [1798] straightest line path to you making [1800] money with your AI automation agency is [1801] just get your book of business, all of [1803] the clients you've ever worked with, all [1804] of your current clients or whatever, and [1806] then like customize a pitch to them [1808] where you think that you could use AI [1809] and automation to add value to their [1811] bottom line. These are people that have [1812] already worked with you. They're people [1813] that already trust your character. [1814] They're people that have already spent [1816] money with you. So this is the warmest [1817] audience you have. And to be honest, [1818] like if you're coming into this with [1819] some pre-existing experience, definitely [1821] just pitch them first. The crazy thing [1823] is most people overlook them, but you [1824] shouldn't. It's the highest conversion [1826] rate by far, okay? You can get people [1828] from past clients, personal connections, [1829] strategic partnerships, and then, you [1831] know, you can't just wait around and, [1833] you know, expect you to be able to sell [1834] these people. You actually do have to [1835] take an active role in pitching this [1838] cool new service that you might have [1839] just whipped up, this AI automation [1841] service, to your pre-existing book of [1842] clients. But the pitch doesn't have to [1844] be super hard. You just send them a [1845] little message and say, "Hey, XYZ, I [1847] love what we're doing with this current [1848] project. While I was going over your [1850] business, I thought that I might be able [1853] to make you a little bit more money [1854] using an AI tool. I'm curious if you've [1857] heard of X, Y, and Z. And if not, if [1859] you'd like me to show you what that [1860] might look like. The pitches don't [1862] really have to be more complex than [1863] that. And obviously, that's not perfect [1865] for everybody. So, take what I just said [1867] and then mold it to your particular [1868] situation. But yeah, you know, if you [1869] just approach people that you've already [1871] worked with that already trust you, you [1872] can get results like this. This fell [1875] here was in a meeting with a prospect [1876] via his warm network and he said, "Do [1878] you know that I'm happy to pay you to do [1879] stuff?" Right? This fell over here [1881] signed a client for 5,000 bucks. Okay, [1883] this was a person that was in their [1885] network already and a friend of mine [1886] who's a business owner. You know, if you [1888] want to get up and running with any sort [1890] of like client reactivation super [1891] quickly, you can do um the Hormosi [1893] approach. I don't actually know if [1894] Hormosi is the one that popularized this [1895] approach, but instead of asking people [1896] in your worm network immediately, hey, [1898] do you want to buy my product? What you [1899] do is you say, hey, do you know anybody [1901] that might be interested in X, Y, and Z [1903] product? The value there is if they are [1905] interested themselves, they'll tell you. [1906] If they're not interested themselves, [1907] but they know somebody, then they'll [1908] tell you them. And if they're not [1909] interested and they don't know anybody, [1911] then they'll just say, "No, I'm sorry." [1912] You still get to maintain the [1913] relationship in all those situations. [1915] All right, I'm going to leave it at [1916] that. Hopefully, you guys see what is [1918] really working today in AI and [1920] automation. If you guys like this sort [1921] of stuff and you want to take one of [1922] these approaches to build your own ad [1924] automation business and then get [1926] personalized coaching, feedback, videos, [1929] and Q&A from me and 2,400 other people, [1932] then definitely check out Maker School. [1933] It's the simplest 0 to1 daily [1935] accountability roadmap for getting up [1937] and running with this business model [1938] currently on the internet. If you don't [1939] get your first customer within 90 days, [1941] I give you a full refund. Otherwise, if [1943] you guys could do me a big solid like, [1944] comment, subscribe, do all that fun [1946] stuff that bumps me up to the top of the [1947] algo. I'll catch you on the next video. [1949] effects.

Video: https://www.youtube.com/watch?v=MjIngZJHjBc
Title: 1 Automation Built On 3 Different Platforms (n8n vs Make vs Zapier)
[0] Cool exercise for us today. We're going [1] to build the exact same system in three [3] different platforms. That's Zapier, [4] Make.com, and NAN. And I'm doing this [7] because a lot of people have been [8] wondering what are the differences [9] between these platforms. Well, rather [11] than just give you guys a bunch of my [12] own and other people's opinions, might [13] as well actually build a real system so [15] you guys could see what the build [16] process looks like. The system we're [18] going to be building in particular is a [20] YouTube repurposing system where I [21] provide the URL to a YouTube video and [23] then it just generates a bunch of social [24] media posts for other platforms. And I'm [26] going to be drawing out the process here [28] because obviously it's going to depend [29] on whether we're using Zapier, Maker, or [30] NADN. But this is going to be the road [32] map that we return to as I go through [34] the build. Okay. And just jumping ahead [35] a little bit, this is what the finished [37] product looks like in Zapier. As you can [38] see, we're doing it all in five steps [40] linearly top to bottom. This is what the [42] finished product looks like in make.com. [44] As you can see, we are doing this in six [46] steps, left to right. And this is what [48] the finished product looks like in [49] naden. And as you can see, we're doing [50] this in five steps, left to right. The [52] logic behind each of these does differ a [54] fair bit and that's one of the reasons [56] why I wanted to do this video just to [57] show you guys how data structures change [59] between Zapier naden and make.com which [61] platform's simplest, which one's the [62] easiest to get up and running with and [64] which ones you might have to look for [65] some gotchas in order to make work. So [67] the way that the system is going to work [68] is I'm going to keep it really simple [69] and easy for everybody regardless of [72] skill level by making the trigger an [74] email received trigger. So when an email [76] is received in an account, that's what's [78] going to kick off this flow. What is the [80] email going to include? It's going to [81] include the URL of the video that we [83] want to pump through the system. After [85] that, what we're going to do is we're [86] going to scrape the transcript of the [88] YouTube video. The transcript, for those [89] of you guys that don't know, is just the [91] text version of it. After that, we're [93] going to feed the transcript to AI. And [96] then with AI, we're going to have it [98] generate social media posts that are of [100] similar form. And then finally, the very [102] last thing we're going to do, and this [103] is going to be optional. I'm not going [104] to include it in the video, but I'll [105] show you guys how to do it if you wanted [106] to. We're going to post it on various [109] platforms. Okay? What platforms might [111] you want to post something like this on? [113] I don't know. Instagram, YouTube, [114] community posts. My guess probably do [116] LinkedIn. You do X, although the X API [118] has changed quite a bit recently. Tik [120] Tok, right? A lot of options here. Okay, [122] so without further ado, let's get into [124] actually building this [127] live. Okay, so let's actually build this [129] system out in multiple platforms. In [131] order to do that, what I'm going to be [132] doing is we're going to start in Zap [134] here. I need to provide some sort of [135] trigger first and foremost where when I [137] receive an email into a mailbox, I start [140] off the flow. Now, the way that Zapier [142] does it in their canvas is they have [143] this little trigger box. So, you can [145] select the event that starts your Zap. [146] Zap is just the term that they use for a [148] workflow. So, what we're going to be [149] using as our trigger is understandably [151] email. Okay. So, the trigger event is [153] going to be when we receive a new [155] inbound email. I'm then going to [157] continue. Now, it's going to give us a [158] little box with an email address. And we [160] can actually make this email address the [162] end all beall deacto email of our flow [164] in make.com and at an end. You'll see [165] that I'm going to take a slightly [166] different approach here. But we're just [167] going to call this YouTube transcript [169] system. Very long and unwieldy email. [172] Okay. Once I'm done with that, I have it [173] right over here. Then I'm going to click [175] continue. And now they are basically [177] listening to the trigger. So in order [179] for me to test this, what I need to do [180] is I need to send an example of it. [182] Okay. So what I'm going to do is I'm [184] going to go to my Gmail. I'm going to [186] click compose. Then I'm going to add [189] this in. And then what I'm going to do [190] is I'm just going to insert the URL of [192] the video that I want just directly in [193] the subject line. Okay. So the URL of [195] the video I want is I'm just going to [196] use one of my own videos here which is [198] these eight AI trends will change [199] business forever. Get in early. I [200] thought this would be a good video to do [202] some repurposing on because obviously we [203] have eight AI trends. So we could feed [205] them into AI and you know generate eight [207] posts. Now I see some additional [209] metadata here like you know uh the [211] timestamp and the channel about and so [212] I'm just going to get rid of that just [213] to keep my life super simple. And then [215] I'm going to send this. Okay. Okay, so [216] now that we've sent this, if I go back [218] over to Zapier, then if I test the [219] trigger, takes a second for Gmail to [221] actually send the email. So, give me a [223] second. Okay, great. So, it looks like [224] we found the email. Email A, original [226] record pulled on May 1st. And what's [228] really cool is we have a bunch of fields [229] here. We have raw from, raw message ID, [231] raw, all this stuff, right? What we're [233] really looking for is we're just looking [235] for the subject line. Nothing different. [237] Okay, so checking out the subject line [239] here. And there we go. We have it. This [241] is the YouTube URL link. Cool. So, I'm [243] going to continue with the selected [244] record. The next thing we have to do is [246] we have to hook this up to an action. [247] Now the action is I want to scrape the [249] transcript of this YouTube video. There [251] are variety of ways to do the scraping. [253] The simplest way to scrape something [254] like this is using a thirdparty platform [256] called Appify. The cool thing is Appify [258] integrates natively with Zapier and [259] Make. Doesn't integrate natively with [260] NAN, but that's part of the cool fun [262] part. I'm going to show you guys like [263] how to actually build out the HTTP [265] requests and stuff like that. Basically, [266] if we just type in YouTube transcript [268] over here, you'll see there's actually a [269] variety of scrapers that people have [271] built for various YouTube transcript [272] scraping purposes. This person [274] Topaz_Sharing, obvious Naruto fan, is [276] allowing us to scrape using theirs. [278] Pinto Studio is another provider, [280] Caramelo. Caramelo Insight API Labs. [283] This is basically a marketplace. And [284] what I've done is I found the cheapest [286] and most currently widely available [288] transcript extractor where you only pay [290] per usage from the lovely Abla Kim [293] Heaya, whose name I am hopefully not [295] butchering. Okay, so what we want to do [297] is we basically want to trigger this the [299] second that we receive an email. And in [301] Zapier, the way to do that is we need to [302] click and then write ampify, select it [306] from the top here, and then we need to [307] choose our event. The event that I'm [309] going to be doing is run an actor. And [311] now what we need to do is we need to [312] connect. So I haven't actually done this [314] connection before. What I have to do is [315] I have to go find my API token from [317] Ampify. So I'm just going to go back to [319] my account and then I'm going to go to [321] settings. Then over here in API [323] integrations, I'm actually going to [324] create one and I'm just going to call [326] this Zapier. [328] I'm then going to copy it, then go back [330] to my Zap and then paste this in and [333] then click continue to Appy. This will [336] now run my connection and it's now [337] actually connected over to my account, [339] which is pretty cool. Now, once I click [341] continue, I'm going to get choose to the [342] specific actor that I wanted to. So, [344] let's see. This one here was called the [346] YouTube transcript scraper, right? Looks [348] like this one from DZ Omar. Give that a [351] click. Then, I have the choice to run it [352] synchronously. Now, run synchronously [354] just means, do you want it to finish? Do [356] you want us to wait however long it [357] takes and then when it finishes return [359] all the data and that's what we want. So [360] I'm going to click run synchronously. [361] Yes. Now we have a place where we can [363] actually insert the videos that we want [365] to scrape. Okay. So I'm just going to [366] exit this out. And what I'm going to do [367] is I'm going to press slash. That's how [369] Zapier does field mapping. And then what [370] I want to feed in is the subject. Right? [372] That's logical cuz the subject is [373] basically the URL. Then we have a bunch [375] of additional settings we can use here. [377] I'm not going to worry about it. The [378] only setting I'm going to click on is [379] transcript only mode. Then I'm going to [381] click continue. Okay. So now it's going [383] to allow us to test the step. You guys [384] can't see the test step. It's in the [385] bottom right hand corner. But bear with [387] me here. When I click that little test [388] button, this is now actually sending a [390] request over to Appify, which is that [392] third party service. If I click on runs [394] now, you'll see that something just [395] occurred a moment ago. If I go back to [398] my Zap, you'll see that we now have this [400] message that says succeeded. And right [402] over down here, we have data set items [404] transcript text where it actually has [406] the full transcript of the YouTube [408] video. The way that we do business today [409] is changing pretty fundamentally. Blah [410] blah blah. Cool. All right. So, looks [412] like we're making some pretty steady [413] progress. After this, what do we need to [415] do? We obviously need to feed it into AI [416] and have it turn this into some social [418] media posts. So, what am I going to do? [419] I'm going to go down to Open AI. Give [421] that a click. The event I'm going to [424] want is the conversation API. So, give [427] that a click. Then, I'm going to need to [428] connect this to OpenAI as well. There [430] are two settings here that you're going [431] to need. You're going to need the Open [433] AI API key, and then you're also going [435] to need the organization ID if you have [437] multiple organizations. So, I'm just [438] going to go over to API keys. I'll go [440] create new secret key. We'll call this [442] Zapier. And then for project, I'll just [443] go default project. Then I'll create the [445] secret key. Copy this over and then [447] paste this directly in here. Okay, it [449] should be sufficient. We'll now [450] continue. And this will now hook this up [452] to our Open AI API account. Okay, from [455] there we can now enter in a message, [456] which is where we basically tell the AI [458] model what we wanted to do. We can [460] select the specific model. And then we [462] have a couple of other fields here. [463] Memory key, image. I'm just going to [465] leave all of this stuff. I'm going to [466] click show advanced options below. When [467] you click true, you'll see that there [469] are a variety of other settings here. [470] Then what I want is assistant [472] instructions. So I'm just going to say [474] you are a helpful intelligent content [477] creation assistant. Okay. Under max [480] tokens, I'm going to write 20048. And [482] under temperature, I'm just going to [484] write [484] 0.7. As I scroll up here, the model that [487] I want is not actually GPT-40- mini. [490] That's an okay model, but I want one [491] that's slightly better. [495] GPT-4.1. Currently significantly higher [497] quality than GPT40. And now I'm going to [500] give it a user message. I'm actually [501] just going to write this live in front [502] of you and then we're going to repurpose [503] it for Make.com and NAD as well. So the [506] specific user message I'm going to write [508] is you receive transcripts of high [511] quality YouTube videos and convert them [514] into posts for let's just say we're [517] doing this for LinkedIn. Your posts are [521] written in a spartan laconic tone of [526] voice and reflect [528] closely theformational content of the [532] source transcript. Okay. Rules. Identify [536] highquality [537] interesting parts of the transcript to [541] repurpose. Generate at least five posts [545] using the source transcript. Separate [549] your posts using the vertical pipe [551] character that is [554] blank and then use emojis sparingly. [558] Write as if you're Microsoft's content [561] marketing at the Microsoft. Okay, cool. [564] That looks good. Now I'm going to go to [566] the run actor and apply data from [568] before. The reason I'm scrolling down [570] here is because I'm just looking for the [571] transcript. Okay, so this is going to be [573] data set items transcript text. Cool. So [575] there you go. There's the transcript and [577] we should be good to actually run this. [578] Give this a test. So I'm going to click [579] continue and now I'm going to test the [581] step. It's now sending all this data to [583] the model. And what we're looking for is [585] we're looking for the data out field. [587] That's how you do things in Zapier just [589] so that everybody could see what's going [590] on. Let me just make this a little bit [591] bigger. Okay. So this is the data out. [594] This is the big long transcript we fed [596] in. This is the data out. Number one, AI [598] shifting business fundamentals. [599] Distribution now matters more than [600] product. If you're building something, [601] prioritize finding an audience before [602] perfecting your offer. 2 3 4 5 6 7 and [605] then eight. So what it did is it [607] effectively found all eight of the [609] fields and now we have you know eight [611] different posts essentially. I don't [613] like how there are numbers here. So I'm [614] just going to go in and I'm just going [615] to edit it and I'll say you know don't [616] do any numbers. So let me just go back [618] to configure. No numbers or any sort of [622] ordination [623] scheme. Just put the posts just output [627] the posts in between vertical pipes. [631] Okay, let's give that one more try. [633] Okay, looking at the posts. Awesome. We [637] received a very similar output to last [638] time, except this time it doesn't [639] include the numbers. That's awesome. [641] Okay, what we're going to do next is we [642] are going to format this. So, I'm going [644] to click formatter. What we're going to [646] want to do is we're going to want to [647] work with text to basically split these [649] based off the presence of that pipe. So, [651] I'm just going to go action event. We [653] need to do is we should have a split [655] string.split right over here. The input [660] is going to be that big string that we [661] just output from chatbt a moment ago. So [665] it would be reply. Okay. So I'm going to [667] click reply. Then the separator is going [669] to be this vertical pipe. Okay. And then [671] the segment that I want is all as line [674] items. I'm going to click continue. And [675] then I'm just going to give this a test. [677] And now the output looks pretty good. We [679] do have a bunch of these spaces which I [681] don't really like. Kind of looks ugly. [683] H. We should probably just tell the AI [685] model not to add any spaces or anything [687] between them too. just for future [688] reference. So, I'm gonna go back here. [689] No new lines or anything either. Output [692] them all in one big chunk of text [695] separated by blank. Cool. This should be [698] good. I'm just going to retest this now. [699] Make sure that everything is good to go. [701] You don't actually need to do this with [702] other no code platforms, but Zapier is a [705] little bit finicky. I want to say some [706] things are a lot simpler to do in [708] Zapier. Other things are way harder. [709] Okay, that looks a lot better. So, now [711] we have all that reply text. So now when [713] we go to the formatter and then [714] configure it and then split it should [717] just get everything on basically one [719] line. Nice. This looks pretty good to [720] me. Uh there are still some issues with [722] like a space at the beginning but pretty [723] solid. And then from here the question [725] is what do we do with it? Well what's [727] really cool about Zap year is it [728] includes a bunch of built-ins that allow [729] you to post to social media platforms [730] pretty easily. So for instance if I [732] typed um Facebook you'll see that [734] there's a Facebook pages, there's [736] Facebook lead ads for business. There [737] are a variety of these built-in modules [739] and a lot of these include the ability [740] to create page posts, page videos, and [742] so on and so forth. Facebook isn't the [744] only thing you can do. You could also [746] do, let's say, Instagram. Could also do, [749] let's say, LinkedIn, right? The variety [752] of social media platforms, which is [753] really cool. And that's one of the [754] reasons why Zapier is so good for [755] beginners because Zapier actually has a [757] lot of these things just like naturally [758] built in. I'm not affiliated with them [760] whatsoever, so I'm saying this [761] completely unbiased. One of the [762] trickiest parts for beginners when they [764] get up and running with a automation [765] platforms is like dealing with [766] connections with social media apps [768] because typically their systems are just [769] very complicated like you know you have [771] to do ooth and you have to do graph APIs [773] and there's just so much more that goes [775] into this. What's really cool about [776] Zapier is it just allows you to focus on [777] like doing the thing not necessarily [779] worrying about how to do the thing if [781] that makes sense. So for here if you [783] wanted to you know at the end of this [784] actually publish to LinkedIn this is [785] what you would do. you would add let's [787] say a LinkedIn module. And now in my [789] case, what I want to do is I actually [790] just want to dump this to a Google [791] sheet. So what I'm going to do is I'm [793] just going to create or add a row. Okay, [798] be [799] add with line item support. And then I'm [802] going to connect my own account. So [803] we'll just go connect [805] account. Then what we need is we need a [807] specific spreadsheet. So I'm going to [809] have to go and create a spreadsheet. [811] Now why don't I just make this the same [813] spreadsheet for everything. We'll go one [816] automation in three platforms. And then [818] over here I'll write zap year. Here [821] we'll go make. Then here we'll go nad. [824] Then we're just going to write post. And [825] we're just going to keep it really [826] really nice and simple. There'll be post [828] here for nad and make as well. Now that [831] we have this, we can actually go and we [832] can select this. So I'm going to click [833] continue. The drive is just going to be [835] my Google Drive. And the spreadsheet is [837] going to be this specific one. One [838] automation and three platforms. The [840] worksheet I'm going to be dumping into [841] with the Zapier flow is obviously [842] Zapier. And the row is just going to be [844] post. I'm going to go slash. And then [845] what I want is I want this text [846] formatter. Okay. So output. Now this is [849] going to have line item support. So it [850] should just dump in all of our rows. And [852] we'll click continue. Then we're going [854] to test the step. When I move back to [856] Zapier, you can see we've now added all [858] of these posts. Okay. So as changing [861] business fundamentals distribution beats [863] product, you'll see that there are what [864] looks like there's a space between them [865] because I guess the AI put a space [867] between all of them except for the [868] first. That kind of makes sense. You [870] could fix this just by formatting the [871] text a little bit more. So you could um [873] theoretically add a formatter here. Uh [876] you could go down to [878] text and then you could do what's called [880] trim whites space here. And this would [882] just automatically remove the white [883] space at the beginning and at the ends [884] of all of the nodes. Okay, cool. So this [886] has now done everything we wanted it to [887] do. Let's move on to the next system [889] which is make.com. Now, make.com is [892] similar to Zapier in so far that they [893] have a lot of built-in nodes and [894] built-in modules, but I personally find [896] it to be like the right mix between [898] simplicity and then sophistication, if [900] that makes sense, cuz you have a lot [902] more control and a lot more granular [903] oversight into what's actually going on [904] under the hood. They also visualize like [906] looping really well. With Zapier, as you [908] saw, we generated eight items and then [910] we added all eight items to one Google [911] sheet, but it was difficult for us to [913] visualize what was going on under the [914] hood. I think we could probably all [915] follow along because it was pretty [916] simple top to bottom, but make us sort [918] of like left to right and I think it's [919] just a lot easier of a of a thing to get [921] used to. Okay, so what I'm going to do [923] is I'm going to start off with a web [924] hook and then I'm going to go down to [926] custom mail hook. Then I'll click add [928] and I'll say new YouTube URL received. [931] What this is going to do is this is [932] going to give me an email address just [934] like we had before where if I send an [936] email to it, it will trigger our flow. [937] Okay, then I'm going to click run once. [939] This is now going to wait for me to do [941] the thing. Then I'm going to go here and [944] then let me just go down to that YouTube [945] video [946] again. Just uh copy my ugly mug. Paste [951] in my ugly mug one more time. And I [954] think I forgot an S. There we go. Click [957] send. Now, if we go back to make.com [959] right over here, we just receive the [961] data. And the way that we receive the [963] data is using this little modal where we [965] can get the subject line immediately. [967] And it's also really easy to map, which [968] I like. Okay. All right. So, same thing [970] after this. this we have an ampify [971] built-in module. So we can just go apply [974] then we can go run an actor. Now I [976] actually already have a connection. Um [978] the connection logic is very similar on [980] all sides. All you do is you click add [982] connection type appy or I guess the appy [985] recommended one. Click save and then [986] you'll actually log in. So this is now [988] like an ooth 2 sort of deal which is [990] pretty nice. And then you can like hook [992] it up allow it full API access to your [993] account and so on and so forth. I [995] personally think the oath is a little [996] bit easier. Then what do we want? We [997] want YouTube transcripts. So it's that [998] one by DZ Omar. I'm going to click run [1000] synchronously and then we just have some [1002] input JSON build timeout and memory. We [1004] have some additional fields that we [1005] didn't have in Zapier. So, as I [1007] mentioned, Zapier is a little bit more [1008] simple, whereas make.com is sort of like [1009] the middle ground of complexity. I find [1012] what this input JSON is is if you go [1013] back to the Appify actor and you click [1015] on JSON, you actually get like this [1016] object here and this is in JavaScript [1018] object notation, which can be a little [1019] bit tricky for people to understand if [1020] it's the first time they're looking at [1021] it. Basically, this is just a simple and [1024] easy way that computers can communicate [1026] with each other in a little bit more [1028] rule-based of a manner. So, there's this [1030] item here, the URL, that I need to [1032] replace with the actual variable. And [1035] I'm going to do that just by selecting [1036] subject. Okay. Now, what this is doing [1038] is the same thing that we were doing [1039] before. It's just we're actually sending [1041] and dealing with all of the JSO and the [1043] JSON. Okay. Now, one other thing that [1045] make.com sort of does which can be a [1047] little bit frustrating is it doesn't [1048] store all of the data. So, we don't [1050] actually have access to this data. If we [1052] were to just run it, it would just wait [1054] for us to resend the email. I personally [1056] don't really like this. This can take a [1057] fair amount of time because then you [1058] have to go into the habit of like [1059] resending emails every single time you [1061] want to test a flow. With Zapier, as you [1062] saw, you just made a couple of [1063] adjustments and then retested the [1064] specific step you want. NN does this, [1066] too. And I think it's just a matter of [1068] time before make gets their act together [1069] and does this on their end. But what you [1071] can do instead is you can just [1072] rightclick the module, press run this [1073] module only, and then manually fill in [1075] the variables. Okay, so that's what I [1077] did back there. Now, in order to [1079] actually get the data in make, you need [1080] to go one additional step. And so, it's [1082] not enough just to run the actor. What [1084] you also need to do is you need to get [1085] the data set items. And the data set [1087] items are always going to be hidden in [1089] this field called default data set ID [1092] right over here. So, I'm going to do is [1093] I'm going to copy this now. And I'm [1095] actually just going to run this step [1097] here manually just to show you guys what [1098] the data really looks like under the [1100] hood. If I rightclick this, and again [1102] press run this module only, you'll see [1104] there's actually no h why is there no [1107] data here? Okay. So, I'm just going to [1109] run this whole thing now. And then what [1110] I'm going to do is I'll go back to my [1111] email address. And then I'm just going [1113] to go and I'm going to paste it directly [1115] in again. So, as I mentioned, this is a [1118] little bit more annoying than doing it [1119] automatically like Zapier lets you do [1121] cuz you can cach the previous response, [1123] but all automation platforms are made a [1124] little bit different and that's the [1125] purpose of this video. Okay, we've now [1126] received the mail hook. That's pretty [1128] cool. Now, what we're doing is actually [1129] running that actor. So, this is the [1132] YouTube URL as we see back here. And now [1134] we just finish the execution. All right. [1136] So, it's pretty neat. I always like to [1138] double check this inside of Amplify. So [1140] if I go back to the specific run and [1142] actually click this button and you'll [1143] see that I've actually received all the [1144] data inside of Apify. The question is [1146] how do you get that inside of make.com? [1148] Well, unfortunately make doesn't do all [1150] of it in one step. So you actually need [1151] to both run the actor and then after get [1154] the data set ID. So that's kind of [1156] annoying. I'm not going to lie. But what [1157] we're going to do is we're just going to [1158] trigger this manually so that it's a [1159] little bit easier for us. Just go down [1160] to the default data set ID and I'll show [1162] you guys what it looks like when you [1163] trigger something manually. We're just [1164] going to paste the data set ID in there. [1166] Click save. Right click, run this module [1168] only. Because we're not using any [1169] variables in this, we can just run it [1170] and then we get access to the full [1172] transcript text right here. Okay. So, [1174] exact same thing as before. All right. [1176] Now, in terms of adding an open AI node, [1178] the way that you do this is you go over [1180] here to OpenAI. Then what we want is we [1183] want the create a completion. And you'll [1184] see that there are variety of more [1186] settings for make.com than there are for [1188] Zapier. And that's just because again, [1189] it's a little bit more complicated of a [1191] platform. And I mean this in the best [1192] way possible because the added [1193] complexity just gives you more room to [1195] play around with and do cool things [1196] with. I'll go to developer system. I'll [1198] say you are a helpful intelligent [1201] content writing assistant. I think [1203] that's what I said for the last one. And [1205] then I'm just going to copy over the [1206] prompt that I got from my Zapier node. [1209] Let's go to configure. And here is the [1212] text that I'm going to be feeding in. I [1214] go down to user and then text content. [1215] Paste all this in. Okay. So you receive [1218] transcripts of high quality YouTube [1219] videos and convert them to post for [1220] LinkedIn. and your post are written in [1222] blah blah blah blah blah blah here's how [1223] you do it now the thing is make.com [1225] actually allows you to control the [1226] output that the AI is generating for you [1229] and so you actually get a lot more [1230] granular than we were doing before so [1231] that's what I'm going to do here instead [1233] of doing all this vertical pipe stuff [1234] okay what I'm going to say is output [1238] your response in JSON in this JSON [1241] format we're going to do is we're going [1244] to say posts then we're going to make [1247] the post an [1249] array I'll Okay, first post, second [1253] post, and then I'll go etc. And the [1255] model will understand that this is what [1257] we want to get. Okay, and I'm also going [1259] to say no new lines. Now I'm going to go [1261] show advanced settings, response format, [1263] JavaScript object notation, parse JSON [1265] response. Then I'm going to go down here [1267] and add one final message that says [1269] user. Inside of this user message, I'm [1271] actually going to be putting in the the [1272] whole transcript. Again, this is just a [1275] lot more freedom, I would say, but the [1277] cost of the freedom is obviously you [1278] have to know a little bit more about [1279] what you're doing. But this to me is the [1281] perfect blend. Okay, so now that we've [1283] set all this stuff up, let's actually [1285] click run once and let's wait for an [1287] additional ping. What I'm going to do is [1289] I'm going to copy this [1291] over. I'm going to Oops, that's not what [1294] I wanted to do. Paste in the subject [1296] line [1297] again. Paste in the two again. And then [1300] click send. What this is going to do now [1302] is this is going to actually grab our [1305] data over here. That's then going to [1308] feed that into this actor. Once this [1311] actor is done, we're then going to get [1313] the data from this module. And after [1315] that's then we're actually going to feed [1316] that right into AI. So, we just finished [1318] with that. We just finished with that. [1320] Now, we're feeding this into AI. And [1321] let's see what the output [1322] is. You can see it's taking a little bit [1324] of time. That's cuz it has a lot of work [1326] it needs to do. If I click on the result [1328] object, you'll see it's buried inside of [1329] a post array because we've actually [1331] built a format inside of make. And as [1333] you can see, we have all of these posts [1335] right over here. Very cool. Very cool. I [1337] like this. Okay. And so what do we do [1340] now? Well, what we do now is we post [1342] this to that Google sheet we had. So in [1345] order to do that here, all you do is go [1347] sheets. And then what you want to do is [1348] you want to add a row. You need to [1350] select the right account. If you haven't [1352] done this before, just click add. And [1354] then it's a very simple and easy sign in [1355] to Google. And then from here, I'm just [1358] going to select the specific spreadsheet [1359] that I had before. One automation in [1361] three platforms. Should have said on [1363] three platforms. Then I'm going to [1364] select the make sheet instead of the zap [1366] year sheet. And under post I need to [1369] select my post. The thing is since make [1371] gives you a lot more control over the [1373] data format in order to iterate through [1376] this array of posts I need to go and do [1378] one more step and that's I need to add [1380] what's called an iterator in between the [1381] two. Now anything that's buried in an [1383] array like this aka anything that has [1384] these square brackets is ripe for [1386] iterating. So what I'm going to do here, [1388] so I'm going to go into this green flow [1390] control section, click iterator, and [1392] then drag it in as follows. Now under [1396] iterator, what this is going to do is [1398] it's going to get my array of [1400] posts. Then over here, what we're going [1402] to do is we're actually going to cycle [1404] through the iterator output right over [1407] here, which is going to be I think just [1409] value. And I don't believe we have [1411] access to this right [1413] now. Like we need to go 13 value. Okay. [1417] All right. So, now that we're done with [1418] this, going to actually give this a go. [1420] I'm going to run this one final [1422] time. Again, we're going to copy over [1425] the specific YouTube URL and go straight [1427] to the specific recipient. Going to [1429] paste [1430] that. Okay. And if we go back to our [1433] sheet, you see that we are iterating [1435] over the array. And then if I go to [1438] make, we've now pumped in all the posts [1440] just like we did before. Just this time [1442] we didn't have to deal with any weird [1443] text formatting issues because all of [1445] the stuff was pretty native. Okay. All [1447] right. Now, let's move on to the final [1449] approach which is in N8N. N8N obviously [1452] gaining a ton of popularity recently is [1454] one of the best ways to get up and [1456] running with no code. I will say the [1458] reason why I demonstrated this stuff [1460] starting with Zap here, moving to [1462] make.com and then finally finishing with [1463] NAND is I consider Anaden to be the most [1465] technically complicated of the platforms [1466] just cuz they show you a lot more of the [1468] guts of automation. They show you like [1470] JavaScript functions and so on and so [1472] forth. But we're still going to make it [1473] pretty simple and easy for you. Okay, [1475] first thing we have to do is we have to [1476] add a Gmail onssage receive node. What I [1479] have to do is I have to add a [1480] credential. This credential is going to [1482] be an OOTH credential. I'm going to [1484] click sign in with Google and then I'm [1485] going to sign into the specific account [1486] that I want to be watching for emails on [1488] behalf of. Okay, so we actually have to [1490] sign into our own account here and we [1491] have to set up our own account as the [1493] watcher. So, what I'm going to be doing [1495] is I'm going to be adding a simple [1496] filter and the search is subject and [1498] then YouTube. This is a specific filter [1500] that will only get new emails that have [1503] come in that have the subject line [1505] containing the term YouTube since [1506] obviously we're going to be sending [1507] YouTube posts. Keeps it pretty simple [1509] and straightforward for us. What I'm [1510] going to be doing now is I'm just going [1511] to email my business email with a [1515] YouTube link like this and click send. [1517] And then I'm going to wait for Gmail to [1519] actually send it. That's what happens [1520] when the undo tag leaves. Then what I'm [1523] going to do here is I'm just going to [1523] click test workflow. Now when you test a [1526] workflow in NAD, you end up with an [1528] output that looks kind of like this. [1530] Okay. And it looks like we got it. This [1531] is the subject line right over here. One [1533] of the really cool things about NAD, [1535] which a lot of people don't understand [1536] initially, is it allows you to pin [1538] outputs. So just like Zapier earlier [1540] allowed us to pin the output without [1541] really telling us what the whole pin [1543] thing looked like. Naden allows you to [1544] do so just by clicking that little pin [1546] tab. But anyway, just like in Zapier, [1548] you had things with key names and then [1550] values and in make when you had key [1552] names and values and it then represents [1553] that data the same key name and then [1555] value. And what we're going to be doing [1556] is we're going to be pulling from the [1557] key name subject uh and then getting [1559] that YouTube link. Now, if you think [1561] about it, go back to our road map here. [1563] The next thing we have to do is we have [1564] to scrape the transcript. However, if I [1566] had search for the term ampify in here, [1567] you'll notice that there is nothing to [1569] be had. This is unfortunately one of the [1571] biggest issues that beginners have with [1573] naden because they don't have anywhere [1575] near as many built-ins as zap year and [1576] make.com. It can be really tricky to [1578] figure out exactly how to construct a [1579] flow. And usually what you have to do is [1581] you have to turn to their API. Now API [1583] stands for application programming [1585] interface. And this is basically the [1587] under the hood code version of those [1589] nodes and modules that I was talking [1590] about before. And it turns out on [1592] amplify the one that we are specifically [1593] looking for is this one here. Run actors [1595] synchronously with input and get data [1597] set items. Now, you're going to probably [1599] be pretty intimidated by this cuz I [1601] mean, we're seeing a bunch of code. It [1602] says post, there's curl. What the heck [1604] does all this stuff mean? The good part [1606] about NAN is it makes large chunks of [1607] this pretty easy for you. Although, I [1609] find you still need to have some [1610] technical background in order to really, [1611] you know, understand it. Basically, what [1614] this is is this is the URL that we're [1616] going to be making the request to. [1617] Anytime you have a colon, usually it's a [1619] place where you're supposed to put the [1620] ID of something. Now, in our case, it's [1622] going to be the ID of the Appify actor. [1624] What I'm going to do here, okay, is I'm [1626] actually just going to go to this curl [1628] body. I'm going click copy and I'm going [1631] to go to NAD. I'll go HTTP [1633] request, import curl, and then paste [1636] this curl in. What this is going to do [1638] is it's actually going to map that curl [1639] request into NAD. So, it's going to do [1642] more than half of the work for us. But [1644] our work here is not yet done. We still [1645] have some things we need to do. Notably, [1647] we have to replace the actor ID. Now, if [1649] you didn't already know what the actor [1651] ID is, it can be pretty tricky to kind [1652] of figure this out. But usually in any [1654] service that you use, the ID is always [1656] the thing in the URL that corresponds to [1658] that particular thing that you're doing. [1659] So, I'm looking for specifically actors. [1661] Notice how the URL says SL actor/ [1664] something. Then it says slashinput [1666] after. Well, if there's a custom input, [1668] it'll probably look like this. This [1669] probably means the actor. So, this is [1671] honestly the same way that I figure [1673] stuff out. I just try to paste in an [1674] actor and I give it a go. from here. [1676] Now, we have a couple of additional [1677] things we have to do. Under [1679] authorization, you have to enter the API [1680] key yourself. Again, you're not going to [1683] know how to do this unless you've [1684] actually run through maybe a couple of [1686] API connections. So, don't sweat too [1687] much if this seems like magic to you. [1689] What I'm going to do is I'll just write [1691] NAD. I'm going to create. Now, I'm going [1693] to go down to NAN. I'll copy this over. [1696] Go back here and then paste my API [1697] token. And then down below, what we have [1700] is our body content type, JSON. Specify [1702] body using fields below. What I'm going [1703] to do is I'm just going to specify using [1705] JSON. This is the same thing as that um [1707] input JSON that we saw in make. So I'm [1708] going to go back to the actor. I'll go [1710] JSON. I'm just going to copy this whole [1712] thing in. Paste it in here. Okay. So now [1715] we have the YouTube URL. As you can see, [1717] we're currently hard coding this. We [1718] don't actually want to hardcode this. [1720] What I'm going to do is click on this [1721] expression tab. Open this up in this [1723] window. This is now going to allow me to [1724] import variables. Then on the lefth hand [1727] side here, I'm going to go and I'm going [1727] to grab the specific subject variable [1729] here, kind of like make. And on the [1731] right hand side, you can actually see [1732] what the filledin value is. Left hand [1734] side is with the variable JSON. Right [1736] hand side is the variable actually [1738] mapped. So this is the value of the key [1740] name subject. That makes sense. Don't [1742] sweat the JSON or the dollar sign or [1744] these two curly brackets. These are just [1745] um NAD's built-in formatting. Okay. So [1748] this is what we're going to be feeding [1749] into API essentially, which is kind of [1751] cool. There's some additional settings [1752] here. Follow redirects, max redirects, [1754] so on and so forth. I'm not going to [1755] worry too much about that. What I'm [1756] going to do next is just click test step [1758] and I'm going to see what happens. Now, [1760] what I like to do is if I fire something [1761] off in a no code tool, I always like to [1763] go back to NADN or Ampify, sorry, and [1765] then see that it's actually running. And [1767] in this case, we actually did run it. [1768] Actor succeeded with one result in the [1770] data set. If we go back to NAN, you'll [1772] see the node just executed successfully. [1774] We actually have access to that full [1775] transcript text again up here as well as [1778] some additional settings like [1779] timestamps. Okay, so we have a little [1780] bit more data, but the one I'm curious [1782] uh the one that actually matters for us [1783] is this transcript text. Now, we're [1785] going to pin this data. And now you'll [1787] see that this node just transformed [1788] purple. This will allow us to propagate [1789] the data further and further. What do we [1792] do next? Well, luckily they do have an [1793] open AI node. So, we can actually just [1795] go straight down to message a model. [1797] This will recreate the same [1798] functionality that I had a moment ago. [1799] And the way you connect the credentials, [1801] pretty easy, too. You just add the API [1802] key similar to how you did um before for [1804] both Zapier and Make. I already have one [1806] called YouTube, so I'm just going to do [1808] that. The specific model we're going to [1810] be using, if you guys remember by now, [1811] is probably [1814] GPT-4.1. That'll enable us to select the [1816] model. And then I had a system or [1818] developer prompt in make. I think it was [1820] called the assistant prompt in Zapier. [1822] Well, here it's the system prompt, too. [1823] And what I'm going to do is go back to [1824] now my make scenario. And I'm just going [1826] to copy this stuff over one for one so [1828] we can bootstrap it and cut a little bit [1830] of the time. You're a helpful [1831] intelligent content writing assistant. [1833] Let's paste that in there. I'm going to [1835] add another message. And then I'll go [1836] back here and then copy in the user [1838] message. Okay. Boom. Paste. And the [1842] thing is naden and make.com both give [1843] you a lot more control over the data [1845] type and the format. So I'm going to [1847] keep this JSON format in here. All [1850] right. And then down here there's an [1851] output content as JSON field which I [1852] could use as well which is what I need [1854] to click in order to do that properly. [1856] Then lastly I just need to feed in the [1857] transcript text down here. Okay. All [1860] right. Now I'm going to click test step. [1861] We're actually going to send this over [1863] using NAD now and we're going to see [1865] what sort of output we get. Awesome. [1867] That looks pretty good to me. We now get [1869] all of the data buried under this [1870] message roll content posts object. And [1873] again, we have 1 2 3 4 5 6 7 8. Very [1878] cool. Very cool. Very cool. All right. [1879] What I'm going to do is I'm going to pin [1880] this output. And now what we want to do [1883] is we want to dump this to a Google [1884] sheet. Right? The thing is all of the [1886] stuff right now is buried inside of this [1888] one item. So it's similar to how in make [1890] we need to add an iterator. Well, in nad [1893] what we need to do is we need to split [1894] these out into individual items. So the [1896] way that you do this is you split out a [1898] list inside items into separate items. [1900] Then what we want is we want the [1902] content.posts field. This one right over [1904] here. Okay. If I test this, what you'll [1906] see is instead of having, you know, one [1907] item, what we're doing is we're actually [1909] outputting what looks like nine items. [1910] Okay. Now, if I pin this and then if I [1914] go here and I now I try and add to my [1915] Google sheet, the function I want is [1918] appended row in sheet. I'm then going to [1920] add my own credential. But again, the [1922] credentials are very simple. You just [1923] sign in with Google, which is pretty [1925] neat if you're using the cloud version. [1926] Then I'm just going to select the one [1928] automation and three platform sheet. [1930] Down over here, I'm going to go [1932] nad. And then I'm going to map the [1935] columns. Post is just going to be [1937] message.content.posts. But you'll notice [1939] that there's this use the minimize API [1940] calls option for greater efficiency if [1942] your sheet is uniformly formatted. Well, [1944] the reason why they do this is because [1945] NAD has a pretty poor integration with [1947] the Google Sheet suite as of the time of [1949] this recording. And so you're actually [1950] likely to get rate limited if you try [1951] and dump a ton of rows into a new sheet. [1954] So in order to minimize that, you click [1956] down here, select minimize API calls, [1958] and then you click test step. Now, if we [1961] go back to our sheet under NAD, you'll [1963] see what it's going to do is it's just [1964] going to dump all them in simultaneously [1966] as opposed to make, which looped over [1967] one by one, and then Zapier, which also [1969] did some looping under the hood. Okay. [1971] So what have we done now on three no [1973] code platforms? So, we've received an [1975] email, we've scraped the transcript, we [1977] fed into AI, we've generated social [1979] media posts, and then, as I've shown [1980] you, you guys can post to platforms [1982] using both the built-ins, or if you're [1983] using something like NAN, might be a [1985] little bit more complicated, but you can [1986] still get it done. And just check out my [1987] video, sell this AI content system for [1989] 1K, which will show you how to do the [1991] graph API connections, the LinkedIn API [1993] connections, and so on and so forth. [1994] Hopefully, you guys found that video [1995] super valuable as a comparison of the [1997] current major noode platforms out there. [2000] As you see, it's not necessarily that [2001] one platform is always going to be [2002] easier than the other, but really they [2004] have different things that they're [2006] really good at. And some things are [2007] unfortunately annoying in one platform [2009] versus the other. And that's just sort [2011] of, you know, what you have to accept if [2012] you choose to put all of your eggs in [2014] the basket of one platform over another. [2016] But as you guys see, if you learn a [2018] little bit of the fundamental logic of [2019] how, you know, data flows through [2021] systems, you can pick up more or less [2022] any code platform in record time just by [2025] implementing some uh pretty [2027] straightforward first principles. Thank [2029] you so much for watching. I love putting [2030] together videos like this and I also [2032] love working with people on developing [2034] not only no code flows but no code [2036] businesses. If you guys have found [2037] yourself on the fence wanting to start a [2039] noode or AI automation business, then [2041] definitely check out my community maker [2043] school. It's a 0ero to one daily [2045] accountability roadmap where I run you [2047] through everything that you guys need to [2048] do in order to take one of the systems [2050] that we might have built today, then [2051] actually put it in front of a customer [2053] and have those customers buy it. Other [2055] than that, please like, subscribe, do [2056] all that fun YouTube stuff that gets me [2057] to the top of the algo. And I'll catch [2058] you on the next video.

Video: https://www.youtube.com/watch?v=vanIpwGcFT4
Title: How To Get Ahead of 99% of AI Agencies As A Complete Beginner
[0] Here's how to get ahead at 99% of AI [2] agencies, even if you're a complete [3] beginner. So, I'm making this video to [5] hopefully turn you from somebody over [8] here on the left-hand side of this [9] normal distribution into this lovely [11] blue fellow over here. Somebody that is [13] consistently outperforming the vast [14] majority of people, and it's going to [16] look like magic from the outside, but [17] from the inside, it's really just going [18] to be a collection of four simple [20] concepts. Now, I use these concepts, and [22] I had to learn these the hard way when I [23] was scaling my own agency from 0 to 72K [25] a month. I'm going to save you guys a [26] ton of time just by laying them all out [28] for you as simply as possible. The first [30] big concept is this idea of the agency [32] owner mindset shift. And that's where [33] basically you go from a technician to a [35] business owner. Now, obviously, if [37] you're starting with AI and automation, [39] you're more concerned about the [40] implementation right now. You're more [41] concerned about how to put together a [43] system, how to use various tools and [45] platforms, and how to connect them all [46] together like Lego blocks that they do [48] something cool. The reality is though, [50] this is a very temporary period. And if [52] you make this longer than the training [54] wheels that a toddler puts on a bicycle, [56] you're hamstringing yourself and you're [57] really interfering with your ability to [58] make revenue. The reason why is because [60] nobody rewards technicians. Nobody [62] rewards builders. What people reward are [66] owners, strategists, consultants, and [68] that's what you need to be if you want [69] to start earning real money. So success [71] begins with shifting from this [72] technician mindset to an agency owner [74] mindset. And what do agency owners do? [76] They focus on the business [78] transformation, not the technical [80] implementation. They don't actually [81] focus on the tools. They don't actually [83] focus on the way that you build these [85] super incredibly complicated NAND or [87] make or zap your flows. What they focus [89] on is, hey, if I slot this system into a [91] pre-existing business, how much more [93] money can I make them? How much more [95] savings can I provide for their bottom [97] line? How much of a reduced headcount [99] can I get that business as a result of [101] the system that I'm building? [102] Essentially, what we're doing is we're [104] charging for the impact that we're [106] providing rather than the actual time [107] and effort that we took building. So, [109] this is very important because if you [111] charge through build time or effort, [114] you're only ever going to make 20 bucks [117] an hour. You're going to be lumped in [118] with all the other freelancers and [120] builders out there. Okay? If you charge [122] based off value instead, you're just [125] going to ask yourself, what sort of [126] return on investment am I driving? If [128] this person pays me $5,000, how much can [130] I make them? Okay? And let's say you [132] provide them with $15,000 of value. [136] Realistically, what you can do is you [137] can charge a fraction of that instead of [139] some sort of hourly rate. And even if [141] this system took you an hour to build, [143] you could still get away with charging [145] $5,000 for it. In fact, in many cases, [147] you can actually charge even more. So, [149] I'll talk all about how to do that in a [150] later part of this video. And also, I've [152] talked about this at length in other [153] videos. But the way that you do this is [155] you cultivate a systems thinking [157] approach to business. And it's [159] interesting that, you know, I talk about [160] no technical implementation here and I [161] use the word systems. What do I mean by [163] this? Well, there's a difference between [165] efficient and effective. And these are [167] very different things, and this is a [169] nuance that not a lot of builders [170] understand. Efficient means you optimize [173] a process really, really well. Okay? [177] Effective means you optimize the entire [180] pipeline of processes really, really [183] well. [184] Now the thing that business owners care [186] about is not how well you can optimize a [188] particular node in a process but how [191] well you can optimize the entire [192] process. How well you can essentially [194] chain together systems to produce a [196] return on investment. So efficient is [199] just looking really really narrowly and [201] in depth at one node in a process. And [204] effective is zooming out a bit seeing [205] that in reality a system that you're [207] building for a client is not just that [208] individual system but it's part of a [210] wider ecosystem. and you need to make [212] sure to match that to the rest of the [214] nodes. What I'm trying to say here in [216] layman's terms is don't be the sort of [218] builder or don't be the sort of AI and [220] automation developer that spends 99% of [223] time optimizing one tiny node in the [225] flow. Don't spend all of your time [227] accounting for edge cases. Don't spend [228] all of your time wondering, well, what [230] if this data format or hm I'm concerned [232] about latency or hm I need to optimize [234] this further. Odds are the business [235] owner isn't going to care because that's [237] probably unfortunately just one step in [240] a myriad of steps that are required to [241] get somebody from introduced to that [243] business to a paying customer that's [245] retained and that produces a lot of of [247] value. So don't focus on a specific node [250] in the business. Focus on the entire [251] business. The way you do this is by [254] making your primary job client [255] acquisition and management and then [258] almost ignoring implementation details [260] completely. I know that this sounds [262] weird because we're talking about AI and [263] automation. But if you guys can [264] internalize everything that I've talked [266] about here and go from technician to [267] business owner, you'll see your earnings [269] start to spike naturally as a [271] consequence. So this is you right now, [273] okay? You are here and you have a [275] choice. Do you become a technician or do [278] you become a business owner? Well, let [280] me paint a pretty grim picture of what [281] happens if you become the former versus [283] what happens if you become the latter. [284] If you start off and you you stay as a [286] technician, you focus on tools like [288] Zapier and Make.com and NADN and [290] implementation like how I'm going to be [292] doing this for you and all the complex [294] process flows and graphs. Then you start [296] charging for time and effort. You say, [298] "Well, that system only took me an hour [300] to build, so I guess I'm only going to [301] build them for an hour or that was [303] actually really easy. I'd feel bad [304] charging more than $50." You then spend [307] the bulk of your time working in your [308] agency, and naturally, you hit a low [310] revenue ceiling. you're not going to be [311] able to make it past 3K, maybe 5K. I [314] don't know. The numbers obviously depend [315] on a lot of circumstantials, but in [317] reality, you're going to hit a much [318] lower revenue that you'd like to. Now, [320] contrast that with the people that join [322] my automation agency programs that [324] really internalize and get the material [325] and that just instantly start pitching [327] customers, clients, and focusing on ROI. [329] Okay? They focus on business impact. [331] They charge for outcomes and value. They [332] work on their business, growing their [334] business, and then they achieve scalable [336] growth as a result. When you do this, [338] you do really tend to spike. look at the [340] various wins that have occurred in maker [342] school just over the course of last week [343] for real and practical examples. So [345] that's number one. Number two is the [347] idea of a daily revenue generation [349] system. Okay, consistent daily lead [351] genen is the top differentiator between [353] a struggling agency and a successful [355] agency. Now what really sucks is a lot [357] of people think and they have this sort [358] of glamorized idea of what like a [360] successful business looks like. And in [362] 99% of cases that idea of a successful [364] business involves zero lead generation. [366] But you'd be surprised at how much [367] mundane and wrote and annoying and [369] manual work that the average high [371] performer does. It's insane. I spent [373] over 3 hours today just recording the [375] exact same video over and over and over [377] and over again. It was an Upwork roasts [379] or series of Upwork roasts for my [381] communities as well as just responding [383] to simple Q&A. I'm going to make over [384] $300,000 this month as a result. Now, [386] that's my form of lead generation right [388] now because that's the fastest and [389] strongest lever that I can pull. But [391] back when I was scaling my AI agency to [393] $72,000 a month, my lead generation [395] mechanism was cold email. It was Upwork. [398] It was making community posts. It was [400] cold DMs. It was reaching out to people [402] within my network and reactivating. If [404] you're not frontloading those activities [406] and spending the first 1 to two hours [408] every day exclusively on those lead [410] generation tasks, you are really [412] hamstringing yourself. By far, there is [414] nothing more important in any agency [415] model than front-loading revenue [417] activities. And I'd go as far as to [419] extend that to most business models out [420] there cuz if you don't have customers, [423] you don't have a business, okay? You [425] have a hobby and you want to go as far [428] away from hobby as humanly possible if [429] we're to make money here. So, how do you [431] actually do this in practice? Well, what [433] you do is you enumerate all of your [434] different lead genen channels. Okay, let [436] me give you an example. One lead genen [438] channel that works really well right now [439] for our business model is cold email. [441] Another that works really well is [443] Upwork. Another that works really well [445] is communities. Another that works [447] really well is cold DMs. Another that [450] looks that works really well is client [452] reactivation or follow-ups or lead [454] reactivation, whatever you want to call [455] it. These are all activities. Okay, so [457] these are five different things that you [460] could spend your day doing. And what do [462] you do? You take all of these [463] categories, you make a simple [465] spreadsheet called tracker, and then you [468] just count up the number of each of [470] these that you do every day. And then on [472] the left hand side here, what you do is [474] you have a date column. And every day in [477] the morning when you wake up, today [478] would be April 30th, you go through and [480] you do a certain number of cold emails, [482] you do 10. You do a certain number of [483] Upwork apps, you do five. You do certain [485] number of community posts, you do three. [486] You do 10 cold DMs, you do five [488] follow-ups. And what you do is every [490] single day, you just do that exact same [493] sequence of events for the first hour or [495] two hours of your day. And by the end of [497] the month, you'll have compiled a [498] massive list of wins that are [501] statistically improbable not to have [502] delivered you at the very minimum some [504] sort of conversation. And ideally, and [507] most likely, if you're consistent about [508] it, and if you're smart, the momentum [509] will drive you forward. And you'll have [510] generated in this massive list of [513] various outreach activities, you will [514] have generated one or a number of [515] clients. It really doesn't get any [517] simpler than this. If you're incapable [519] of putting together a spreadsheet like [520] this, unfortunately, it's going to be [521] really tough for you to like move ahead [523] with more or less anything. Not just an [525] AI agency as our business model, but [527] most business models in general. I want [529] you to treat this stuff not like super [531] flashy cool technology project. I want [533] you to treat this like the gym. I want [535] you to treat this like you tracking your [536] sets and your reps because that's [538] exactly what this is. If you can just [539] sustain enough outreach for a long [540] enough period of time and get good at [542] that outreach, which tends to happen [543] when you do it enough, you will succeed. [546] Okay, so that's what that looks like. [548] And then my other big tip is to maintain [550] the no exceptions rule. Even during busy [552] client delivery periods, continue [553] performing your lead generation. The [555] reason why is because growth solves [557] everything. Now Sam Alman, who most [559] people here are probably familiar with [560] if you're in AI, he's the current CEO of [562] OpenAI and he was also a part of their [564] founding team and so on and so forth. He [566] wrote a blog post, I think it was [568] probably like at least 5 years ago on [570] his experience working with a variety of [572] SAS companies. You know, he was in Y [573] Combinator. I believe he was the [575] president for a period of time where he [576] essentially helped a bunch of new [578] software companies go from complete and [580] utter beginners, people that have never [582] really sold a single instance of a [583] software product offering to, you know, [585] multi-million or multi-billion dollar [586] unicorn. So, he's seen a lot of that [588] stuff. And the number one thing that he [589] always repeats is that growth solves [591] everything. Well, I'm of the exact same [592] mind. When you grow everything, all of [596] the problems that are otherwise major [597] issues in most businesses tend to [599] disappear. Let me give you an example, [601] okay? If you are really busy, you know [604] what solves being really busy? [606] Growth. If you grow more, you'll make [608] more money and you can start handing off [610] those things to other people. Let's say [612] you don't have time. I mean, I guess [614] that's the same as being busy, right? [615] But let's say you have so many clients [616] and leads that you're like, "Well, [617] there's no need for me to do more growth [619] because I'm already drowning in [621] opportunities." Believe it or not, you [622] know what solves time? Growth. If you [625] grow more, you have more access to [626] better lead generation opportunities. [628] That means that you can pick and choose [629] the clients that are going to pay you [630] the most. So, if right now you're capped [633] out at 5K a month, okay, when you have [635] 10x the leads, you'll be able to pick [636] and choose the leads that pay you 50k a [638] month instead for the exact same amount [640] of work. Because in reality, there's [641] variance between how much money a lead [643] will pay you for a given amount of [645] deliverable. So, I guess the point that [646] I'm making is growth really does solve [648] everything. Do you want a simple [650] step-by-step process that you can [651] follow? Well, here it is in a flowchart [653] format because we're systems people. You [655] wake up, you block your first 1 to two [657] hours for lead genen, you complete daily [659] minimum activities. Now, you have to [661] define these activities yourself. In my [663] Maker School program, we talk about [664] three main ones. Cold email outreach, [665] upper proposals, and then community [667] engagement. Then you just track it in a [668] spreadsheet. And then once you're done [670] with that, check it off and you're done [671] for the day. At least for the lead genen [672] activities, you can do everything else [673] you need like client delivery work, like [675] walking your dog, like watering your [676] plants, whatever. Okay. After you're [678] done with the day, review, adjust [680] tomorrow's targets, and then you just [682] begin the feedback loop again. This is [684] actually like modern business. I hate to [688] be so reductive, but if you want to [691] crush it and it's 2025 and beyond, this [694] is what like a good sustainable [696] bootstrap business looks like. You have [698] to frontload a lot of lead genen [699] activities and you have to do the vast [700] majority of them yourself. Okay, the [702] next is the idea of strategic market [703] focus, not being distracted. Again, I [705] had to learn this the hard way. I've [706] been distracted by a great many things [708] throughout my time. But the whole idea [709] here is you test, validate, and then [711] commit to something for at least 90 [712] days. Now, the reality is if you're a [714] specialized agency as opposed to a [716] generalized agency, couple things [718] happen. One, you understand a problem [720] way better if you niche down. Okay? So, [722] you're much better at defining a [724] problem. Two, you have a lot of [725] experience building solutions that solve [727] that specific problem. You've probably [729] built systems that make solutions [730] cheaper. Okay? And then three, you know [732] how to stand out compared to all of the [734] other people in your industry. All of [735] these coales into you being able to [737] charge more money, close deals faster, [738] and then do less work as a result. So, [740] if you want to just instantly make more [742] money, niche down. The issue with [744] niching down is people typically don't [745] give themselves enough time to really [747] explore a niche and to really trust that [749] the approach that they're doing is [750] working before they look at some, you [752] know, usually pretty sparse numbers and [754] think, "Oh, okay. I should probably move [755] on." Iterating based off of data is [757] great and I highly recommend it. And [758] we're in a very datadriven industry, so [761] I understand why everybody wants to do [763] this. But in reality, markets have lag. [766] And that lag can really screw with your [768] ability to say approach A is better than [771] approach B. A lot of the time, you just [773] have to give it a couple of months [774] before opportunities start [776] materializing. So, my recommendation is [778] test multiple niches at the same time. [780] Use a structured 90-day validation [783] process. Pick a niche using something [785] like my niche discovery exercise here [787] where I have example niches, service [788] lines, and positioning statements. I [790] then run through them and then I just [791] combine them. I say I build sales [793] systems for website developers. I build [795] finance systems for IT consultants. I [797] build uh business development systems [799] for high ticket SAS companies and so on [801] and so forth. Think hard about things [803] that you have experience with, things [804] that you might have a unique angle or [806] have a good opportunity to pitch to [808] people maybe within a network, [809] pre-existing reactivations or whatever [811] the heck you happen to have. Think hard [812] about that. Pick three, okay? And then [815] just tackle it for 90 days. If you're [817] not seeing the results that you want in [819] that 90-day period, don't change [820] anything. just change tac within the [822] industry. You know, don't change the [823] niche itself. Focus on digital first, [825] high ticket, low regulation industries [826] for best results. There are a bunch of [828] them in this niche discovery [829] spreadsheet. And then track your metrics [832] just like we had a tracker over here for [834] cold emails, Upwork communities, cold [836] DMs, follow-ups, and whatever the hell [837] else you want. When you do your [839] outreach, figure out how many people are [840] responding to that outreach per niche. [842] Figure out how many sales calls you had [844] per niche. Then just one for one compare [846] them. After you've done this for 90 [847] days, you'll have more than enough data [848] that you'll actually be able to make a [849] realistic and intelligent decision about [851] which one is better. And you know the [853] really cool thing about all this in AI [855] and automation, the work that you do, [857] let's say to test three niches is not at [860] all three times. In reality, the same [863] systems that you're applying to niche A, [865] niche B, and niche C are usually [867] duplicatable. So in order to test three [869] times the amount of ground, usually only [871] have to do maybe like 1.5 times the [873] work. And this here is called leverage. [875] In this particular case, it's 2x [877] leverage. As AI and automation [879] developers and AI automation agencies, [881] we look for leverage wherever possible. [882] So, don't abandon your niche too early. [884] Commit for the full testing period. [886] Okay, here's another little SOP. [888] Identify your promising niches. Create [890] targeted messaging for each. Run [892] parallel outreach campaigns. I literally [894] did this, by the way, just uh last week. [895] I ran a parallel outreach campaign for [898] videography and then website agencies. I [900] did that live in a video called Watch Me [902] Start and Sell an AI service in just 10 [905] hours. I started off with a 2.7% [907] response rate I think on one and like a [909] a 2.8% response rate another. I've since [912] iterated these to 4.6 and 4.9% [914] respectively. And I had a third niche [916] here called real estate agencies which [918] after sending I don't know a thousand [919] something emails I just realized the [921] numbers were so absolutely ass backwards [923] it didn't make any sense to keep on [924] going. But this is a they're real live [927] examples of me legitimately putting [928] these things together right in front of [929] you that you can just follow step by [931] step just swapping out your own language [933] verbage or niches wherever you want. [935] From there you track performance [936] metrics. At 30 days you'll have some [938] early indicators on progress. At 60 days [940] you'll have some growing traction. [941] You'll be able to see this is a graph of [944] the effectiveness of various approaches [946] over time. You'll be able to very [948] quickly and easily see these diverge. [949] Right? So obviously this black one here [951] is what we want. [953] This green one here is kind of like, [955] okay. Then this orange one here is a [958] definite no. And then you just pick the [961] one that works at 90 days. And then you [963] just continue onwards. And usually when [964] you continue onwards, you get better and [966] better and better at that specific [967] niche. Then you commit to it. You [969] rebrand all your marketing assets, your [971] website, and everything. And then you [972] just go allin. Seems pretty simple when [975] somebody like me sits here on my hottie [977] ivory tower and tells you to do it. But [979] in reality, the fact that something is [981] simple does not necessarily exclude it [983] from being hard. So if I'm to be frank [985] with you, it is very simple. It's just [986] it's also quite difficult to actually [988] sit down and commit to it for a long [989] period of time. So if you are capable of [992] doing something simple for a long period [994] of time, like testing a niche for 90 [996] days, you will win cuz that's something [998] that not a lot of other people are [999] willing to do. The fourth big concept I [1002] want to chat about and something that [1002] was really holding me back for quite a [1004] while was this idea of client focused [1005] delivery. So, believe it or not, you [1007] know how we were talking about [1007] implementation details not really being [1009] that important earlier? Well, turns out [1010] the money that clients pay you and their [1012] satisfaction depends way more on your [1014] ability to communicate with them, [1015] communicate the value and benefits of [1017] your offer and the thing you're building [1018] than the technical excellence. You could [1020] spend a 100 hours building the most [1022] amazing system ever. And then if while [1024] you're giving them a demo it just [1025] doesn't look great, they will equate [1027] that system that you spent 100 hours [1028] building to a crappy system that some [1030] intern spent two hours building that [1031] just looks nice. That's why clients are [1033] hiring you because they don't want to [1034] pay attention to what's going on behind [1036] the hood. Okay? They want to treat your [1037] system like a black box. They don't [1040] actually care about what's going on. All [1042] they want to focus on is the stuff that [1043] they put in and the stuff that they get [1045] out. And what you need to focus on is [1048] not this. What you need to focus on is [1051] this, the stuff that they get out. So [1053] how do you do this? You create business [1055] outcomes document to align expectations [1057] from day one. What I mean by this is [1059] when you are building some sort of [1062] product or service, when you're going [1063] through those niches that we talked [1065] about way up here, build a list of all [1068] of the things that your customers are [1069] going to see from your product. Let me [1072] give you an example. If you were [1074] building a cold email system, you'd ask [1076] yourself, what are my customers actually [1079] seeing? Okay, so what are my customers [1081] actually seeing as somebody that sells a [1082] cold email system? Well, they usually [1084] see the leads. They usually get some [1087] sort of meeting booked notification. [1089] They usually see the CRM updates. They [1091] usually see, I don't know, a meeting [1093] recording or something like that if [1094] they're not doing the meetings [1095] themselves. So, what does that mean? [1098] That means that you have a fantastic [1099] opportunity here to package all of this [1101] stuff in as sexy a way as possible to [1103] improve your perceived value. Because [1104] this output, this is actually what [1106] clients are judging you on. They're not [1107] judging you on all the work that went [1108] into building this system. They're not [1110] judging you on all the messaging and all [1111] that stuff. What they care about are the [1112] outputs, the leads, the notifications [1114] they get, the CRM updates, and the [1116] meeting recording. So, what do you want [1117] to give them? Well, realistically, you [1119] want to give them like, I don't know, a [1120] really sexy sort of notification. Maybe [1122] you do it in Slack or something like [1123] that. You legitimately spend the time to [1125] design something that looks really nice [1127] that I don't know, maybe has a little [1128] profile pick in the bottom righthand [1130] corner that's designed and branded with [1131] the right font. You know, if you're [1132] going to spend time doing something, [1134] spend time on their experience because [1135] that's what's important. Meeting book [1137] notification, right? Don't just send [1138] them like a standard meeting book [1139] notification. Uh, I don't know, add a [1141] little like confetti thing emoji to the [1143] title. Change the fonts a bit. When you [1145] update a CRM, don't just add uh their [1147] their first and last name and company [1149] name all in lowercase or something. [1151] Format it nicely. Change the way that [1152] the CRM works that the information that [1154] the customer needs and gets is front and [1156] center and looks nice. Same thing with [1158] the meeting recording. Use a nice, [1159] high-quality platform so they have [1160] everything they need. This seems silly. [1163] It really does, but it works because [1165] again, customers are judging you based [1166] off of the output, not necessarily the [1168] implementation or the input. Okay, [1170] really quick and easy way to instantly [1171] improve the amount of money that you [1173] could charge clients is just scheduling [1174] twice weekly updates. These twice weekly [1177] updates are literally like, you know, if [1179] this is your calendar, okay, Monday, [1181] Tuesday, Wednesday, Thursday, literally [1185] just schedule an update on Mondays and [1187] Thursdays. This is a fiveinut task. [1190] That's all that that's going to take [1191] you. You can do it after you're done [1193] your lead generation activities for the [1194] day. All you do in this update is to [1196] say, "Hey client, great news. just [1197] wrapped up with X, Y, and Z thing that [1199] you wanted us to do last week. Here's [1201] what it looks like. I don't need [1202] anything from you, but just wanted to [1203] wish you a nice day. That seems so [1205] simple, doesn't it? Well, believe it or [1207] not, even if you're a completely and and [1209] absolutely subpar and really crappy AI [1211] and automation agency, if you can get [1212] the habit of treating your clients like [1214] they are gold and communicating your [1216] progress with them, they'll keep you on [1218] even if you're doing a trash job. I [1220] mean, it kind of sucks to say, but this [1222] single hack here can 2x the amount of [1224] money that you charge the average client [1226] because clients see this as a mixture of [1228] professionalism and then [1230] also, and this is another thing that I [1232] had to learn, nobody really cares about [1233] what you're doing unless you talk a [1235] little bit about it. Again, you can do [1236] all that work behind the scenes inside [1238] of that black box and the customers [1240] aren't ever going to give a crap because [1241] they never actually see inside. They [1243] never actually care to. So, every time [1244] you do something cool or make a change [1246] or whatever, it's actually an [1247] opportunity for you to continue selling [1248] the client on how cool you are. Okay. A [1252] couple other things you could do to do [1253] this. Develop a template library. This [1254] is going to allow you to deliver [1255] consistent quality while reducing [1256] delivery time. Clients, generally [1258] speaking, would much rather see [1260] something in 7 days than 21 days. [1263] There's some exceptions to this. [1264] Obviously, you don't want your work to [1265] seem too simple. You don't literally [1267] want to be like, "Okay, thank you very [1268] much for the money and give me 5 [1269] seconds. Okay, here's your automation. [1271] All good to go." They want to feel as if [1272] this is a process that they're involved [1274] in. And there's some nuance there, but [1275] generally speaking, if you can deliver [1276] faster results, you can minimize buyer's [1278] remorse, you can improve the perceived [1280] value over time, and then you can make a [1281] lot more money both for you and for the [1283] client. And then last but not least, and [1285] one of the most important points here [1286] that I wish I was harping on earlier is [1288] when you structure your final reveal. [1290] Okay, this is your delivery email or I [1292] don't know, maybe this is your demo with [1293] the team or I don't know, this is where [1295] like you create your documentation. [1297] Treat this section like it's an exam. [1300] Treat it like a test. focus for it, [1302] study for it, uh, I don't know, do [1304] flashcards so you know what to say. [1305] Draft out the first three sentences of [1307] your pitch so that you know when you [1308] start that meeting, you're going to [1309] absolutely nail it because this is way [1311] more important than the actual work [1312] you're putting into the back end. It's [1314] unfortunately way more important than [1315] the actual AI automation itself. If you [1317] can make your demo work on the first try [1319] and work exactly to customer specs and [1321] then exceed their expectations, I mean, [1323] they'll be hand over fist trying to give [1325] you more money right then and there. So, [1327] here is again kind of a step-by-step [1330] SOP. And I include these in all of my [1332] videos because a lot of people find them [1333] very valuable. Start with your initial [1335] client onboarding. Okay. After you're [1337] done with that, create a business [1338] outcomes document like I've done over [1339] here for all the systems that you're [1341] working with clients on behalf of. Write [1343] down what they're actually seeing. What [1344] are the outcomes? What are the [1345] deliverables of the system? Enumerate [1347] them and see how you can develop that [1349] project in such a way as to maximize the [1351] quality of the former. When you build, [1353] build from a template library. Give them [1355] scheduled twice weekly updates. Then [1358] test your solution. Give them a [1360] presentation or a demo or a delivery or [1363] a video. And then after you're done, [1365] check in with them. Okay? This just adds [1367] value. And not only does it add value, [1370] it also gives you an opportunity to [1372] retain the client. When you check in [1373] with them after 15 days, 30 days, or 90 [1375] days, you can legitimately squeeze an [1377] additional 10, 20, or 30% out of your [1379] entire client base by repitching them on [1382] you. Sometimes, and this is something [1384] the realtors know, sometimes you [1385] legitimately just have to schedule an [1387] annual happy birthday thing and you got [1389] to drive around the neighborhood and [1391] stop by all of your former clients whose [1392] birthdays are today and just give them a [1394] pumpkin pie or give them a cake or [1395] something. Why? Because odds are they'll [1398] know somebody in their network that [1400] needs a job and they'll think, "Wow, you [1401] know, Nick was a really good real estate [1403] agent." I hate to make it as simple as [1405] this, but sometimes life and success in [1407] business don't really have to be any [1408] more complex. Okay, hopefully you guys [1410] understand what I'm getting at here with [1412] this video. There were four major [1413] concepts. The first was obviously this [1416] lovely idea of focusing on becoming an [1419] owner instead of a technician. The [1420] second was the idea of daily revenue [1423] generation as opposed to just hoping and [1425] crossing your fingers that it'll happen. [1426] The third was the idea of strategic [1428] market focus, committing to a niche for [1430] at least 90 days and really squeezing as [1432] much juice as you can out of it. And the [1433] latter point was this idea on client [1435] focused delivery, which is ask yourself [1437] what are the deliverables and outcomes [1438] that a client's seeing. The work that [1440] goes into my system is less important [1441] than that. Hopefully you guys found that [1444] valuable. If you like this sort of [1445] business focused stuff and if maybe you [1447] have good automation skills or want to [1448] get better at the business side of [1450] things, then definitely check out Maker [1451] School. It's my 0ero to one daily [1453] accountability roadmap where I guarantee [1455] that you'll get your first customer in [1456] 90 days or I give you your money back. [1458] I'm that confident. We get so many [1460] people in through the door on a daily [1462] basis that end up with their first [1463] customer and in two weeks, three weeks [1465] as opposed to the full 90 days. That [1467] emboldens me to be able to make that [1468] guarantee moving forward. If you guys [1470] want to make money on the internet, if [1472] you guys want to turn this whole idea of [1473] AI automation into a profitable business [1475] model, that's the best place to start. [1477] Aside from that, if you guys are still [1479] here at the very end, please like, [1480] subscribe, do all that fun stuff that [1481] bumps my YouTube to the top of the algo. [1482] I'll catch you on the next video. Thanks [1484] so much for your support. Bye.

Video: https://www.youtube.com/watch?v=OroDNJl-pyc
Title: Scrape Unlimited Leads WITHOUT Paying for APIs (99% FREE)
[0] Hey, today I'm building a simple system [1] in NAD that lets you scrape emails from [3] Google Maps completely free without [5] needing any thirdparty APIs. That's [7] right, we're going to do it entirely in [8] NAND. And what I'll do first is demo the [10] flow before then showing you guys how to [11] build it on your own from scratch. You [13] guys can find the templates in the [14] description as per [16] usual. So this is what the flow looks [19] like. This works using a Google sheet. [21] The Google sheet is pretty simple. We [22] just have two here. One called searches [24] and another called emails. Both have one [26] column. Now the search on the left hand [28] side here has a row called Calgary plus [30] dentist. What this is is this is a [32] Google search URL. If you pump Calgary [34] dentist into the URL of the search, you [37] will get a giant list of Google Maps [39] listings that have Calgary dentist. What [41] we're going to do then is pump that into [43] our flow as input. And then at the end [44] of it, we are going to have a giant list [46] of emails that are going to dump right [47] over here. Don't believe me? Well, let's [50] get started. When I click test workflow [52] here, we're grabbing that search query. [54] It says Calgary dentist. And then what [56] we're doing is we're scraping all of the [57] Google Maps listings over here for [60] Calgary dentists. So this is going to [61] look like something like [64] maps.google.com/, you know, Calgary [66] dentist, let's say. Okay. After that, [68] what we do is we do a ton of processing. [72] We do some URL extraction. Then we do [74] some filtering, some duplicate removal, [76] some limiting in my case, just for test [77] purposes. Then we have a simple loop [79] that allows us to extract emails using [81] code before finally dumping all the [83] results in our Google sheet. Looks like [85] we got eight items. So if I go back over [87] here to the Google sheet, so you can see [88] we've now deposited all the email [90] addresses over here. Okay. Info Mloud, [92] admin at Bington, info at Galaxy, Setin [94] at Galaxy, and so on and so on and so [96] forth. And this is just a small little [98] search. You can actually run this across [100] tens of thousands of different Google [102] Maps listings. All you have to do is [103] just change the limit and then pump in a [104] bunch more search terms on the left. [106] Okay, so how do you actually build this [107] from scratch? Well, let me walk you guys [109] through what this looks like, not from [110] the outside in, but from the inside out. [112] And I like doing this because if I [114] didn't, I'd just be showing you guys a [115] finished product. That's kind of like, [117] you know, showing an engineer a picture [118] of the Eiffel Tower and saying, "Hey, [120] there it is. Why don't you go ahead and [121] build it?" Right? It's not very [123] realistic. So, why don't I actually walk [124] through how to build this thing from [126] scratch? As I mentioned, you can grab [127] the template below in the [130] description. We'll call this Google Map [132] Scraper no API. I'm just going to add a [134] tag for NAN course here to keep things [136] very simple. Okay. So, first step that [139] I'm going to do is I'm just going to add [140] a manual trigger. The reason why I'm [142] going to do this is because I'm not [143] going to connect this to my Google [144] sheet, at least for the purposes of this [146] demo. I'm just going to keep things [147] super simple and super easy, and we can [149] talk about adding a sheet input later. [151] The next thing we're going to need is an [152] HTTP request. Okay, now this is where [155] we're going to be putting in the URL of [157] our Google Map search. Now, Google Maps [158] is scraped using a very specific URL. It [161] is [164] www.google.com/maps/arch and then we put [166] in the search query. You can't have [167] spaces in the query, and that's why we [169] needed to add that plus beforehand. [171] There are two additional options I'm [172] also going to add. The first is going to [173] be ignore SSL issues and the second is [175] going to be response. We're going to [176] include the response headers and status [178] too. Now, when I click this test step, [180] what's going to happen is it's actually [181] going to perform that HTTP request to [183] the Google Maps back end. And then we're [185] going to receive a giant list of [187] essentially HTML. Now, hidden within [189] this HTML is a bunch of links that we [192] can then take, do more HTTP requests to, [195] and then extract email addresses [197] directly from all of those. The question [199] is, how do we actually get these links? [201] Well, what I'm going to do here is I'm [202] just going to share a little snippet of [203] code that I've used for this purpose. [205] It's actually very straightforward. I [206] should say that you don't need to use [208] code for this, but I thought it was [209] simple enough that I just asked Chat GBT [211] in 10 seconds, whip me up a little [213] snippet that does this, and it did a [214] pretty good job. So, I'm going to write [216] code that's going to allow us to run [218] some custom JavaScript or Python code. [220] I'm then just going to take all of this [222] stuff out, and let me run you guys [223] through what the code would look like. [225] Okay, so what we're going to do is we're [226] actually going to grab some of that [227] information on the left hand side here. [229] And I'm just going to package it all [230] inside of an input variable. In [232] JavaScript, we do that by writing const. [234] Now, the purpose of what I'm about to [235] show you is not that I expect you guys [236] to learn JavaScript or kind of figure it [238] all out just watching me write this. [240] It's just to show you guys how easy and [241] simple it is to grab data that is in no [244] code format and then use a couple of [246] lines of code to simply and quickly [247] convert it without also requiring a ton [248] of execution. The cool thing is you can [250] now ask AI to do large portions of this [252] for you. I just know that this [253] particular snippet of code works. That's [255] why I'm going to reuse it. But [256] essentially what we're going to do is [257] we're going to store with an input all [259] of data. So I'm just going to go dollar [261] sign. This is going to allow me to [263] select the specific item that I want to [264] pull. So we'll do input. Now in NAD they [266] have this convention where they actually [268] return all data from previous nodes as [271] an array of items. And so what we have [273] to do is we have to select the first of [275] this array. Even if we're only getting [277] one item, which in our case we are, it's [278] technically an array of items. We have [280] to select the first one. Kind of [281] annoying, I know. Talk about annoying. [283] We have another convention here which I [285] don't really talk about which is this [286] JSON convention. In order to access this [289] data, we first have to go through this [290] filter of JSON and then after finally at [292] the very end now we can actually select [294] that data. Okay, so now for all intents [295] and purposes this is inside of this. All [298] right, moving on. What we have to do [300] next we have to build out the pattern [301] that we're going to use to extract all [303] of the URLs. So what I did is I actually [304] asked chatbt a moment ago to build me [307] out a reax which is essentially a [309] regular expression a templating language [311] used specifically for this purpose. Now [313] I know this because I use reax all the [315] time to extract parse and do various [317] things like this. If you just had a [318] brief 5-minute conversation with chat [320] gbt and asked it how you would do this [321] it would probably return reax as an [323] example as well. So don't think that [324] this is some super convoluted scary [326] programming stuff. What I'm going to do [327] is I'm just going to copy this. Then I'm [329] just going to write const reax. And then [330] I'm going to paste this in along with a [332] couple of additional characters. I do a [334] slash at the beginning and a slash g at [335] the end. This just stands for global. [336] And again, it's one of those little [337] formatting things. From here, what we [340] have is we have the input data, all of [342] the scrape stuff in code. We then have [344] the pattern that we're going to apply to [345] this. What we have to do is we actually [347] have to do the applying. So the way that [348] I do this is I write const. You know, [350] const is just a convention in [352] JavaScript. URLs or why don't we just [354] use websites. It's probably a little bit [355] easier for people to understand. What [357] we're going to do is we're going to go [358] input and we're going to match it and [360] we're going to match it to this reax. [361] Okay. Then finally, what we're going to [363] get as a result of this is we're going [364] to get a giant list of websites. So what [367] I want to do next is I want to return [368] these websites in the format that NAT is [370] expecting. So what I'm going to do is [371] I'm going to return websites the map and [374] then for all websites I'm going to [375] return a website. Then they have this [377] specific format with an equal sign and [379] then a greater than symbol which is [380] basically like an arrow. Then we [382] returned things nested within one layer. [385] Here, I'm going to go uh JSON and then I [388] will return my website down over here. [391] Okay, so if I didn't screw something up, [392] if I click test step, we should have a [394] giant list of websites under this [396] website thing, which we do. Now, what [399] you'll see is we got a giant list of [401] websites, but these aren't really [402] websites related to our search. We have [404] schema, Google, Google, whatever, gt. It [407] isn't until I kind of go way farther [409] forward, okay, that we actually start [410] getting the dental care websites that I [412] was looking for. Okay, this is a [414] problem. Obviously, we don't actually [415] care about Google and Gstatic and stuff. [417] So, what we have to do is we have to [418] remove them. And that's what this next [419] step is going to be. It's going to be [420] filtering out all of these really [422] annoying domains that don't really add [424] anything and then giving us a nice tight [426] list of only the dental websites that [428] are left. Cuz remember, what we're doing [429] is we're basically going to like Google [430] Maps. We're pumping in Calgary dentists. [432] We're just scraping the entire page, [433] right? So, we actually need to take this [435] data and then we have to format out all [436] of the additional links they provide us. [438] But never fear, that's actually very [439] easy to do in NA. What I'm going to do [441] is I'll just press P. That's going to [442] pin my output data. Then over here, I'm [444] going to go filter. Okay. Now, filter [446] allows us to remove items matching a [448] condition. So, I'm just going to drag in [449] website over here. Now, what I want to [450] do, if you think about it, is I just [452] want to remove all those bogus ones. So, [453] schema, I want to remove Google. I want [455] to remove a bunch of stuff. And in [456] filter, in order to do that, just go to [457] string and then go does not contain. So, [460] first of all, I don't want anything to [462] contain [463] schema. Next up, I do not want it to [466] contain anything with the term Google, [469] right? I saw a couple of other terms [471] there that I'm just going to pump in [472] really quickly. And you know, we'll go [474] back and forth until we actually get all [475] this stuff done. I think it was GG, [477] right? I wanted to contain that. Let's [479] test this and let's see how that works [480] first of all. So, we fed in 302 items. [483] And as you can see, it's only returning [485] 133. So, we're actually getting pretty [486] far there. And it looks like we're [487] actually getting like dental domains now [489] in the first page, which is nice. We [490] still have gstatic. Okay. So, we got to [492] get rid of those. What else? Gstatic [495] search.openare. Open care might actually [496] be good. I'm not entirely sure. Okay. [499] Uh, what else we got? Gstatic mostly, [501] but then we also have CAN 5 recall max. [504] Okay, I don't know what that is. Chat [506] now. Okay, so Gstatic is really the main [508] one. Why don't I go and then we'll go I [512] also don't want you to return anything [514] that contains the term Gstatic. Okay, [518] let's try this. Now, as you can see, [520] we're just like progressively filtering, [522] but this this looks pretty good. What [523] you'll notice though is we're getting a [524] ton of duplicates, aren't we? Richmond [525] dental Richmond dental concept dentist [527] concept dentist pathways heritage [529] heritage heritage that's not good we we [530] need to remove these so that's what I'm [532] going to do next okay so first of all [534] I'm going to press P again pin the data [535] and now I'm going to go to remove [537] duplicates so how do you do that dd dup [539] or actually it's the remove duplicates [541] node here and I'm going to go remove [542] items repeated within the current input [544] this is the easiest and simplest way to [545] just immediately remove duplicates from [546] the preceding node if I press test step [548] you'll see that we fed in 60 now we only [550] have 27 left okay very easy awesome so [554] now that I've removed the duplicates if [555] Think about it. What have we done up [556] until now? What we've done is we've [557] scraped a bunch of data over here. We [559] then extracted it with code, extracted [562] URLs with code. We're then filtering [564] these URLs. Now, we're removing all the [566] duplicates in those URLs. Well, the next [568] thing we have to do is obviously we have [569] to start scraping the individual pages [571] to look for emails, right? So, I could [574] theoretically just add another HTTP [576] request here. And what it would do, you [578] know, is I would feed in the URL of the [580] website that I want. Okay. What this [582] would do is this immediately process all [584] 27 items in the list. But I'll be [586] honest, I've tried this before and if [587] you try in NAN just process all 27 [590] websites, usually your IP address gets [592] blocked. So what we have to do is we [593] have to do like basically some some [595] scraping hygiene here. And we have to be [597] a little bit smart about how we're going [598] to be performing all of these scrapes. [600] And the way that I like to do it is I [601] like to use what's called a loop over [604] batches or split in batches node. So [605] just type loop. loop looks pretty [608] intimidating if you've never used it [609] before because there's all these arrows [611] that are going in and out of different [613] modules and there's this replace me node [614] which means nothing to most people here [616] but let me just run you through really [617] simply what this does is it will take [618] the output of the previous node as input [621] and then it will run for all 27 items [624] this loop so it'll do everything that we [628] say over and over and over and over [629] again 27 times and on the 28th run it'll [632] say hey there's nothing left back here [635] and then it'll say okay well I guess [636] we're done and it'll proceed down the [637] done path. Okay, that's all that's [639] really going on here. So, you have to [640] feed the output of this into the input [643] in order for this to make sense. Okay, [645] so what I'm going to do now is I'm going [647] to add the HTTP request right over here. [649] And then what I'm also going to do just [650] before I map all this is I'm also going [652] to add a little weight node. Just going [655] to make a wait of 1 second cuz I've had [657] a couple of issues in the past where I [659] don't have any weights in my HTTP [660] requests and then as a result, you know, [662] I can like demo it or whatever, but I [663] don't just want this to be demoable. I [664] actually want you guys to be able to use [665] this. In practice, if you don't have any [667] weights and you can just get IP blocked [669] pretty easily when you're doing any sort [670] of scraping. So, I usually recommend at [672] least for testing purposes, just put [673] some weights in. Okay. Then the output [675] of this weight is going to be the input [676] to the loop over items node. Okay. And [678] now what we've done is we've essentially [679] closed the loop. And now we have this [680] done little string which we can fire off [682] after. All right. Okay. Just to make [684] things minimally ugly, I'm just going to [685] move this stuff down here. And now what [687] I need to do is I just need to get the [688] input into the loop over items. Now, [690] this kind of annoying to do. I'm just [691] going to look at test step and see. But [692] we can't actually do this cuz I've [693] connected this. Why don't we just delete [695] this? Retest [697] this. Okay. So now we have the loop [700] branch which contains the website. So we [702] can actually feed this into the website [704] and then we can add this loop branch in. [706] Now that we have access to that, we can [707] just drag the website over. Couple of [709] additional things that I'm going to add [710] under the redirects tab. I'm just going [711] to go do not follow redirect. Some [713] websites will redirect you multiple [714] times and when you hit a redirect loop, [716] it just makes the thing error out which [717] is kind of annoying. And anyway, then [719] I'm going to have that wait and then [720] it's just going to go for all 27 items. [722] Okay, pretty straightforward. Now, I'll [724] be real. I don't want to take 30 seconds [725] to run this every time for demo. So, [727] what I'm going to do is I'm actually [728] just going to cut the input way down. [729] See how it says 27 items? There's a [731] quick little hack that allows us to do [732] this during testing in N. Just add a [734] limit node, then add the limit, [736] something really small like three. [737] Because we did this, what this will do [738] now is this will take 27 items as an [740] input. Then it's only just going to poop [741] out three items, which will mean that [743] when we run this through our loop, it's [745] going to do it in 3 seconds, not 27. [747] This is just going to help me do this [748] video a little bit faster and then just [750] retain my sanity while also minimizing [752] the likelihood that we get IP block [753] because we're running a lot of requests. [754] Okay, work smart, not hard. Okay, now [757] I'm going to execute this workflow. As [759] you can see, first item done, second [761] item done, third item done. And then [763] once we're done, what it does is [764] actually returns three items. How cool [766] is that? So, what is it returning right [769] now? Well, it's returning all of the [771] HTML from the websites that we just [772] scraped. So, a bunch more code. But this [775] isn't really what we're looking for, is [776] it? No, it's not. I'll tell you what [778] we're looking for. What we're looking [779] for is we're actually looking for the [780] email addresses. Okay, so how do we find [782] the email addresses here? Well, that's [784] where another code block is going to [786] come in handy. What we're going to do in [788] this code block is instead of finding [790] URLs, we're actually going to go and [791] we're going to parse um emails. Okay, so [794] I'm just going to stick this in over [796] here. Then the output of this code block [798] is going to loop back and be the input. [800] And then once this is done, we can then [801] get into some final data processing and [803] then we should be good to go. Okay, so [805] what are we going to do with this code [806] block? Well, I mean, you know, I just [807] pasted in a bunch of the the stuff over [808] here. Well, if you think about it, we're [809] basically going to do the exact same [810] thing that we did for the URL and just [812] instead of doing the URL, we're going to [814] do this for emails. So, we're going to [815] run a bunch of code that basically takes [817] the data that we're feeding in from this [818] weight, which actually we already have [819] inside of input, and then we're going to [821] look specifically for emails. So, I have [824] another reex here. It's just instead of [826] this, what I'm going to do is I'm just [827] going to ask it to find me all emails. [829] So, let me go back here. Then I'll say, [833] okay, great. Now, build me a simple reax [836] that finds all [838] emails in a website scrape instead. What [842] it's going to do is it's going to write [843] me something very similar. And I don't [845] actually know if this is entirely good [847] to go. I'm going to try it. We're going [849] to see what happens. But I usually just [851] run it and then play it by ear. Go [853] slashg again. Then here under constant [856] websites, what I'll do is I'll go [857] emails. Okay. And instead of returning [859] websites map, I'll return emails.m [860] mapap. And then instead of website, I'll [862] go email. And then JSON, I'll go email. [864] Okay. I don't know if this is going to [865] entirely work. We'll give it a go. Okay. [867] We couldn't find any emails in the first [868] three. So I just pumped this up to [871] 10. And it looks like we are now getting [874] a couple of email addresses, which is [876] pretty cool. Yeah, that's to be [878] expected. We're not going to get emails [879] of everything, for instance. Right. In [881] the demo, I think we pumped in like 300 [882] or something. We got like a 100. So [884] that's that. Now that we have a bunch of [886] email addresses, what we're going to do [887] is we're going to go and proceed down [889] the done loop. What do we got to do with [891] this done loop? Well, if you think about [892] it, like we're outputting a bunch of [893] emails, right? Everything is nested [894] within this emails array. So we're going [896] to have a bunch of email arrays. So what [897] we have to do is basically to make a [899] long story short is we have to split all [900] of these out so that they're each their [902] own object instead of being independent [904] arrays. And then we're going to take [906] that data and then we're going to add it [907] to our Google sheet. So what does this [909] actually look like in practice? We [910] actually have to like get the data out [911] to this loop in order for me to access [913] it. So, I'm just going to add a weight [914] for one second and just push it all the [916] way through. So, we're scraping, [917] scraping, scraping. Okay. And then once [919] we finish, we now have access to those [920] 10 items. Let's just take a look at what [922] this data looks like. So, for some of [924] these, we're not going to have access to [925] the email because some of these will [927] have been null. Okay. So, if you find [929] yourself ever getting an error with an [930] HTTP request, what you can do is you can [932] go to settings and then just go on error [933] continue. And in reality, NAN can't [936] scrape all web pages. So, we're just [937] sort of throwing the ones that it can't [939] scrape away just for simplicity. But for [940] the ones that it can, we're going to [942] have email addresses as we could see. [943] So, Mloud Trail Dental, Galaxy Dental, [946] Scenic Smile, Satin. Right. And now that [948] we have all of these, what we need to do [950] essentially is we need to aggregate all [952] of the individual emails, and we need to [954] remove all of the null entries. So, I'm [956] going to go down here to filter first. [958] We're just going to use the filter to [959] remove all the null entries. Let me pin [961] this so we don't have to do that again. [963] What I'm going to do is I'm just going [964] to feed in emails, and I'll say emails [966] is an array, right? So, I'm just going [968] to check. Let me just go schema or JSON. [970] Is it an array? Yeah, emails is an [972] array. So, I'm going to go down to array [974] and then I'll just say check to make [976] sure emails exist. Okay. So, this should [978] just filter out all of these null [979] entries. Cool. And now we have three [982] items of the what did we feed in? 10. [984] And now that we have three items, as you [986] can see, this is scraping multiple and [989] aggregating multiple into a single array [991] per website. So it scraped three [993] instances of info at galaxy or four and [995] then two of set in a galaxy and then two [996] of info at what we want to do is we just [998] want to stick all of this into one giant [1000] list and then we want to run through and [1001] dduplicate it. So what I'm going to do [1003] next is I'm going to add how would I do [1004] this? I do split out. I think I do split [1006] out. Yeah, pretty sure. And I'm just [1009] going to go emails here and this should [1012] basically concatenate all of these [1014] together into one. Cool. Now once I have [1016] this I'm going to ddup [1019] it. And then this will now filter down [1022] all of the many into four. Beautiful. [1025] Now once we have four, what can we do? [1027] Well, now we can, I don't know, add them [1028] to a Google sheet or something. So, let [1030] me go down to append row in sheet. [1033] That's what we're looking for. Just [1034] going to use my own [1036] credential. This one right over here. [1039] Then we'll go from list. Uh, I think [1041] this is scrape without paying for APIs [1042] right here. Right. Then the sheet was [1045] emails. And we should just uh dump the [1048] email directly in here. Okay. And I'm [1051] going to use the minimize API call [1053] option because I've obviously had some [1054] issues with this in the past where I've [1056] just done so many demos that it's just [1057] dumped a bunch of stuff into a Google [1059] sheet and then I run into API rate [1061] limits and stuff and then I can't record [1063] my video for half an hour. So, I'm not [1064] going to allow that happen to me today. [1066] Um, why don't we go back to this email [1069] list, just delete all of them, then go [1071] over here. Why don't I just pin my [1073] outputs and finally I'll just run this. [1076] See how this works. Oh, perfect. Just [1078] dumped all four. very very good and uh [1081] yeah in a nutshell that's more or less [1082] how to do it. Okay so a couple of [1084] gotchas that I think are pretty common [1086] for people um as well as a couple ways [1088] to extend the system. The first way you [1089] could extend the system is right now all [1091] we're really doing is we're scraping the [1093] kind of like the homepage of all these [1095] websites. Realistically the email [1096] addresses aren't just buried on the [1098] homepage they're buried on all pages. So [1100] you know over here where we extract the [1101] URLs. Well, what you can do is first you [1104] extract the URL. Then you do an HTTP [1107] request to that URL and then instead of [1110] extracting emails over here, you [1113] actually extract other URLs on the URL [1115] that you can access. Then you run a [1118] third loop and that third loop goes [1120] through each of the URLs that you just [1122] extracted from the homepage and then it [1124] does the exact same thing that we're [1125] checking here aka extracting emails. So [1127] now, if you think about it, we're [1128] significantly increasing the number of [1130] pages total that we're scraping from. [1132] Um, but I just didn't do that for [1133] simplicity purposes, and I just wanted [1134] to give you guys like a I don't know, a [1136] little nugget that you could build out. [1138] This isn't the first time that people [1139] have built a sort a sort of system like [1140] this. It's not like this is [1141] revolutionary or anything. And this is [1143] definitely one of the poor scraper [1145] systems I think that I could have put [1147] together, but yeah, I just wanted [1148] everybody here to um have a good place [1150] to start for more advanced scraping [1151] applications. Now, after you're done [1153] with this as well, what you could look [1154] into is if you run this at any sort of [1156] scale, you know, eventually this Google [1158] Maps um HTTP request module, this [1160] initial one uh initial one will run into [1163] Google Maps rate limits where they'll [1165] think that you're scraping them, which [1166] you are, and their AI will detect on it [1168] and then they'll just start throttling [1169] you. So, you can only do maybe one [1170] request every hour or something. If you [1172] want to get around this, there are a [1173] couple of options. The most common is to [1175] use a proxy. Now, proxies are basically [1178] third party services where you pass the [1180] request through before it goes to the [1182] end URL, which in our case is Google, [1184] that sanitize the request and then make [1188] the request appear legitimate by [1190] sprinkling in a bunch of additional [1191] data. There are variety of proxies you [1193] can use for this purpose. I'm not going [1194] to recommend any specific one, but the [1196] way that the HTTP node works is if you [1198] wanted to add a proxy, you just go down [1200] to the bottom, click proxy, and then [1201] paste it in. And this is going to depend [1203] on the proxy service that they're using. [1204] They all have slightly different formats [1205] and they're going to give you their [1206] username and the password and stuff like [1208] that. But that's how you do it. And then [1209] if you are going to search for something [1210] like that, then obviously search for [1212] like a search engine results proxy, a [1214] SER proxy. That's sort of the the thing [1216] that you should start by googling. SER [1218] proxies depend on whether or not you [1219] want to do like residential, whether or [1220] not you want to do warehouse. There's a [1222] little bit more nuance there. If you [1223] guys want to learn more about how all [1225] that stuff works, check out the Appify [1227] course on proxies. It's probably the [1229] best written one on the internet today. [1231] I am affiliated with Ampify, but you pay [1233] nothing to access that free resource. [1235] Hopefully you guys saw just how easy and [1237] straightforward it was to put together a [1239] real actual NN scraper that allows you [1241] to get and extract email addresses [1243] directly from Google Maps listings [1245] without requiring any APIs or third [1248] party services. The really cool thing [1250] about this is you could run multiple [1252] variations of what I just built for [1253] basically any service, whether it's [1255] directories, whether it's some other [1256] search engine, whether it's county real [1258] estate databases and more. If you guys [1260] like this sort of stuff, definitely [1262] check out the full 6-hour N8N zero to [1265] hero course that I published just a [1266] couple of days ago. Like, comment, [1268] subscribe, check out Maker School, my AI [1271] automation program that focuses on daily [1273] lead generation accountability if you [1274] wanted to turn your build and automation [1276] skills into maybe a profitable business. [1279] And have a lovely rest of the day. [1280] Looking forward to seeing you on the [1281] next video. Tris.

Video: https://www.youtube.com/watch?v=2GZ2SNXWK-c
Title: N8N FULL COURSE 6 HOURS (Build & Sell AI Automations + Agents)
[0] Hey, welcome to the most comprehensive [2] NADN course on how to go from zero, [4] somebody that's never used this platform [6] to hero, a master capable of building [8] automations for themselves and or [10] selling stuff like that to clients. I've [12] scaled my own automation agency at over [14] $72,000 a month using no code tools like [16] make and nen. So, the purpose of this [18] course and any follow-up courses that I [20] make are all about how to use these [22] tools for actual business purposes. how [24] to drive revenue, how to improve [26] savings, and more or less purposes that [28] you would actually be building systems [29] for in the real world, not just hobby [31] projects. I've made sure to add [32] timestamps for every section down in the [35] video. So, if you guys maybe already are [37] coming to this with a little bit of NAN [38] knowledge and just want some bits and [40] pieces, feel free to use that to move [41] around. And make sure you guys bookmark [43] this video so you can come back to it [44] later. Trust me, this is the most [46] comprehensive resource on NAN that you [47] will find on YouTube, at least as of the [49] time of this recording. I've checked. [51] You guys are going to want to make sure [52] that you run through this from start to [53] finish at some point in your NADN [55] career. So, you might as well have an [56] easy and simple way to get back to it. [58] So, let's cover what NAD is, how to get [61] set up on the platform, and how to build [63] our very first simple practical [65] workflow. Okay, now that you guys [67] understand what the purpose of this [68] course is, let's actually dive into the [70] very first module, which is going to be [72] all about how to get NADN set up for [75] yourself. how to essentially go from [77] somebody that's never used this [78] dashboard or this platform to somebody [80] that at least is a little bit familiar [81] with it. I'm going to be basically [82] putting on your NAN training wheels, if [84] that makes sense. And we're going to [85] start this video by signing up to N8N. [87] I'm actually going to walk you through [88] what that process looks like from start [90] to finish. I'm going to be using their [91] cloud hosted offering today. The reason [93] why is it's just a lot easier for total [94] beginners to get up and running versus [96] self-hosting. But I want you guys to [97] know that I'm going to be covering [98] self-hosting in depth over the course of [100] the next few weeks. After that, we're [102] going to do a live hands-on review of [104] NAND's builder. We're going to cover the [105] canvas, the workflow, nodes, and then [107] after that, I'm going to be creating [109] three simple but effective workflows to [111] actually have you guys get something on [113] the page, so to speak. You'll actually [114] have created three simple workflows [116] before the end of this video. So, if [118] that sounds good to you, without further [119] ado, this is Nadn's website, as we could [121] see. Secure AI native workflow [123] automation. Very sexy. I really like [125] their branding. You can see they worked [126] with some big freaking names. Adobee is [128] using NN now. Sendin Blue, Pearson, um, [131] Splunk. I've never heard of those guys, [133] but they sound funny. So top right hand [135] corner, I'm just going to click get [136] started. And the first thing it's going [137] to ask me for is my full name. So I'm [139] going to give it my full name. Then it's [141] going to ask me for my company email. [142] I'm going to give it a company email. So [144] I'm going to ask me for a password. I'm [146] going to write down example password. [148] And then for account name, I'm just [149] going to go nickyou [152] YouTube.app.ncloud. Keep up with our [153] constant improvements through our [154] newsletter. No, thank you. What I have [156] to do here is just because I'm crazy [158] with it, sometimes they think that I am [160] a robot. I need to select a bunch of [161] images that match a mountain. That kind [163] of looks like a mountain. That looks [164] like a mountain. I don't know about [165] that, but let's see what happens. It is [168] embarrassing how uh common it is for me [170] to get these things wrong. Anyway, they [172] have some little onboarding stuff using [173] Type Form. I'm not going to harp too [175] much on that because odds are this will [176] be different by the time you're looking [177] at it. And then I'm not going to invite [179] any team members to my workspace. I [181] really like their onboarding. They have [182] fantastic onboarding. They have a little [183] quick start guide over here on the right [185] hand side as the workspace starts up. As [187] you can see, it didn't cost me anything [188] to like launch said workspace. The cloud [190] plan gets you up and running like ASAP. [193] So, despite the fact that onboardings [195] typically do change and yours might look [196] a little bit different. As of the time [198] of this recording, it is pretty dang [199] sweet. Okay. And now I just received a [200] notification saying that my workspace is [202] online. I can click start automating and [204] we'll actually dive into NAND proper. [207] They use a little dark mode action which [209] I really like. So, very clean, very [210] sleek. As you can see, they [211] automatically sign you up to a trial. [213] Um, when you get started, you'll have 14 [215] days in said trial with a,000 executions [217] total. I'll cover what all that stuff [219] means in a minute. No big deal. The [220] terminology of NAN is pretty simple and [222] straightforward, which I like. So, just [224] covering the dashboard really quickly, [225] top to bottom. I'll talk about the [226] things that are important, the things [227] that you don't really need to know, you [228] want to actually use in practice. U let [230] me just exit out of this little top bar [232] here. First things first, this button [233] over here allows you to create. So, you [236] can create either a workflow and you can [237] create it in a specific project. So, I [239] only have one project here called [240] personal, which is why that's all that [241] it's giving me. You can also create a [242] credential. So credentials are how you [245] connect to various software platforms [246] and apps in N8N. Uh and then you can [248] also create a new project. So add a [250] project button down here. You also have [252] an add a project button up here. No idea [253] why they do that, but they do. Um as I [255] mentioned, things are separated into [257] projects. We don't have any workflows [258] here, but when I add one, you'll see [259] it'll be listed. Then we sort of have [261] some of the same data here as well. We [263] have credentials. If I click on those [264] credentials, I can actually create a [266] credential up here, too. Nothing magic. [268] If you're on the cloud hosted offering, [269] you will have this sexy admin panel. the [272] purpose of which I have yet to fully [273] understand. Uh no, the purpose of this [275] is basically just to monitor your trial. [277] You can change NAN version versions if [279] you need to. You can change NAND [281] versions if you want. You can change the [283] versions if you need to select your time [284] zone and you know do some other [285] settings. In practice, you basically [287] never really have to change any of this [288] stuff. So don't sweat it too much. Aside [290] from that, one of the most powerful and [291] valuable parts of N8, this little [293] dashboard, it's actually down here in [294] the bottom lefthand corner under admin [296] panel. It's called templates. And this [298] sets NAN apart from a lot of the other [299] no code tools that you could choose. [301] They basically have some of the highest [303] quality workflow automation templates [304] publicly available and completely free [306] to use out there on the internet. This [308] is the simplest way to get up and [310] running if you guys don't know how to [311] build a flow. And after you're done [313] watching this video, I'd highly [314] recommend you guys to just bookmark this [316] and just spend a few minutes scrolling [317] through clicking on various systems that [320] you might want to create and just [321] understanding a little bit more about [323] how professionals or people that are a [324] little bit more wellversed within might [326] put things together. There's a lot of [328] opportunity here obviously to template [330] out, you know, big chunks of flows that [331] you'd otherwise build. And some of these [333] flows, to be honest, are literally good [334] enough where you could just click sales [336] and you could find like one or two of [338] these flows that like does exactly what [340] you need before you even had put any [342] work in. So for instance, if you wanted [343] to scrape business emails from Google [344] Maps or the use of any third-party APIs, [346] that was a system you were tasked to [347] build maybe as a service or for your own [349] business, you could literally click on [350] this button and you could import the [352] flow. It would take you like 5 seconds. [354] Not hard at all. And a lot of the time [355] the developers will document the hell [357] out of it too. They'll do video [358] tutorials and and all that stuff. So [360] yeah, that's probably the most valuable [362] part of this whole page to be honest, [364] aside from the workflow creator. But [366] let's actually dive into the juicy bits [368] which are obviously what you're here for [369] by creating a workflow. So that takes us [371] to the canvas. When you open up a new [373] workflow, you are sent to this page [375] where you could see a lot of cool stuff. [377] This is basically the workbench where [379] all of your N8N flows are going to be [380] created. I'm going to walk you through [382] this top to bottom. Let's start on the [383] top lefthand corner. This is where you [385] can name your workflows. So, I'm just [386] going to name a workflow and I'm going [388] to call it N8N course. You can see here [390] you can also add a tag. N uses tags to [393] organize their workflows in projects [395] which I'll show you in a moment. But [396] let's just create a new tag and let's [397] just call this YouTube. Let's say I'm [398] going to be creating a big YouTube [399] tutorial. So, I want to tag everything [401] here as YouTube if it's if it's part of [403] my um NAN course. And then over here on [407] the right hand side, you have the [408] ability to activate your workflow. You [410] do need a trigger for that which I'll [411] cover in a moment. You could share your [413] workflow here, which means you can add [415] users to your NAND account and then give [416] them access to a workflow. Pretty neat. [418] There's a workflow history or revision [421] history. If you make a mistake or [422] something during your NAN flow, you can [424] just click this button. It'll actually [425] restore the version of the workflow that [427] you want. So, they have very good [429] persistence. They actually show you it [431] um live, which a lot of other no code [432] tools don't. In the top rightand corner, [434] you have this sort of like click more [435] button where you have can duplicate a [438] workflow. So, if I click this button, [439] it'll actually just like, you know, [440] create another one. I can download a [442] workflow. When you download it, you'll [444] download it into JSON, which is pretty [445] neat. JavaScript object notation. This [447] allows you to then send it to anybody [448] else that you want and then they can [450] like import it. And speaking of import, [452] you can import either from a URL. So [453] there could be like a JSON file hosted [455] on a URL over here. And then you could [456] also host it just import it from the [458] file too. So that NAN course over here, [460] I could just click that button and then [462] it would import that workflow that I [464] just exported. There's also some [466] settings. Obviously, there are a bunch [468] of like um I don't want to call these [470] higher level, but they're sort of like [471] configuration options with execution [473] order where there are variety of [474] different ways that NN used to execute [476] workflows. There's some error handling [478] workflows, some some ways to time things [481] out after a certain amount of time. [482] We're not going to cover this because in [483] practice, I find you rarely need to use [485] this when you're actually building flows [486] for business purposes. That's ultimately [488] what the purpose of this whole tutorial [490] and course is about. But, you know, rest [492] assured, there's ample documentation on [493] all this stuff. The really cool part [494] about Niten is how well documented it [496] is. It's basically everything that you [497] could possibly need. I'm not going to [499] switch to the old canvas. It's just like [500] a slightly different way that it looks. [502] Moving forward, this is probably going [503] to be the predominant mechanism just [504] because it's so clean and sexy and [506] useful, which you'll see. Okay. Now, [508] speaking of the actual canvas itself, [510] um, if I just scroll around here, I'm [512] holding my two fingers on my little [514] touchpad. You could also do this with [515] like the mouse wheel if you want. I'm [516] moving around the canvas, right? You see [518] these little dots that are equidistant [520] from one another. Um, this sort of shows [521] you where you're at. in the bottom [523] lefthand corner. You'll notice that as I [524] do that, there's this little white box [526] sort of in the middle. What this is is [528] this is sort of like a mini map. I don't [529] know if you guys have ever played video [530] games like uh Starcraft or Warcraft or [534] League of Legends or Call of Duty or [536] whatever. It's basically the same sort [537] of thing. You have a mini map here. Um [539] and you can actually you can drag the [541] canvas like I'm doing right now or you [542] can actually just drag the mini map too [544] which is kind of neat. We can zoom way [546] out. We can zoom way in. This is sort of [547] nifty and honestly sometimes I just play [549] with this for like 10 or 15 minutes at a [551] time before I remember that I should [552] probably be building workflows that make [554] people money. Um so that mini map's kind [556] of cool. In the bottom lefthand corner [557] you have a couple of buttons and these [558] are like quick access easy buttons. [560] These are just useful when you're [561] building out workflows. Um if you just [563] press this button it'll basically just [566] like fit back to um like I don't know [569] like it'll it'll zoom out to an [571] appropriate amount that allows you to [572] see most of the nodes here. The cool [573] thing is N makes very heavy use of uh [576] hotkeys. So if you actually just instead [578] of clicking this button, just press one, [580] you'll just snap back. So [582] one, one, one. Pretty cool. It basically [586] just centers this box or centers the [588] average location of all of the boxes [590] when you have multiple nodes um in the [592] center of your screen. There's also some [594] plusing and minusing action going here. [596] You can press plus to zoom in or you can [598] press minus to zoom out. In practice, I [600] don't really use these when I'm building [601] just because I have my little touchpad [603] and mouse wheel and I can just do this [604] and when I do this, my head gets spinny [607] and it's very fun. You then have um [610] reset zoom here. So, you can go zero or [611] one. I don't really use that in practice [613] if I'm mad zoomed in. And then you have [615] a little way to report bugs. Um I never [617] report bugs, granted. Uh I don't know, [619] maybe we have some white knights here [620] that want to make the platform better or [622] something. Okay, the last thing I want [623] to cover is, and you can't really see it [625] cuz my giant ass head is in the way, but [627] in the bottom right hand corner of the [628] screen, you can click this button to ask [630] an AI assistant. Says, "Hey Nicholas, I [632] can answer most questions about building [633] workflows in NAN for you for specific [635] tasks. You'll see the ask assistant [636] button in the UI. How can I help?" And [638] the reason why I wanted to cover this is [639] because this has got to be one of the [641] most useful features in NAND. And this [643] really sets it apart from the vast [644] majority of other noode platforms, [646] especially like make. I think Zapier has [647] an AI assistant feature now as well. [649] Because this AI assistant is actually [651] useful. you can actually use it to sort [653] of co-build things. Um, it has access to [656] all of the NAND community forums. So any [658] post that was basically ever made that [659] describes a solution to a problem, it [661] will technically have access to and it [662] can pull it like with reasonable [664] accuracy. Uh, and then it's also [666] integrated into your builder. So it it [668] has access to the the actual build [669] itself. Although sometimes you have to [671] give it a little bit more context about [672] what it is that you're doing for it to [673] like really figure it out. Yeah, this AI [675] assistant, I want to say it's not [676] perfect, but it covers at least 30 or [679] 40% of all the queries that I have for [680] NNN. So, my usual debugging workflow, [682] which you guys will see if we run into a [683] bug later. Hopefully, we do. Fingers [685] crossed. Uh, I'm going to use the AI [686] assistant as sort of a first [688] pass. Okay, great. So, that's that. Um, [691] I think we now know everything except [692] for obviously the big juicy elephant in [694] the room, which is adding a first step. [696] If I click on this middle button here, [698] you'll now see on the left hand side, [699] we've opened a bunch of options. Um, and [702] essentially what we're doing when we add [703] a first step is we're adding a trigger. [705] A first step of any flow in N8, and it's [707] always going to be a trigger. And so on [709] the right hand side we have a variety of [710] different triggers we could choose from. [712] We could trigger manually. This runs the [714] flow by clicking a button in Nadn. Good [716] for getting started quickly. It is very [717] good for getting started quickly. And [718] I'm going to show you our first uh [720] module or sorry our first workflow is [722] going to be built like that on app [724] event. So this runs a flow when [725] something happens in one of the many [727] apps that you can connect to non. So if [729] I click this you can see there's there's [730] action network active campaign acuity [732] adalo. Maybe you want to do a trigger [734] when a new thing gets added to an air [736] table or when a new project gets added [737] to a Santa or maybe you want to I don't [740] know when you receive a new um ClickUp [743] task or I don't know you get a new Gmail [745] or something or a new GitHub repo or [747] ghost post was made. Right? If I scroll [749] through here there there are a couple of [750] hundred triggers as of the time of this [752] recording and NN is always looking to [753] add more. So the cool thing is you can [756] very quickly if there's one of the [757] platforms that are listed here click [759] this button and then you could say oh [760] okay um let me see a better example oh [764] okay you know a new air table event just [766] occurred and what is the air table event [768] in particular um I don't know it's going [770] to be like a a new thing that was added [772] to a row with a with a specific field [774] for instance you could very quickly get [776] an anal integration up and running super [778] super quickly anyway I don't actually [780] want to use this so I'm just going to [782] drag on the canvas And then I'm going to [784] press delete. And it's going to delete [786] that module. Sorry, the uh note. If I [789] right click this, you can see I can also [791] do a variety of things to this. But the [793] one that I want in this case is a [794] delete. So that's what I'm going to do. [795] And I'll show you how to do all the the [797] other things that you saw a moment ago [798] just over the course of building. Okay. [801] So if I go back to this open nodes panel [803] in the top rightand corner, you'll see [804] that there's a hotkey. I can just click [805] the the tab button instead of doing this [807] manually. So that's what I'm going to [808] do. I'm just going to press tab. So [809] that's what I just did. And it just [810] opened this up automatically. Um, let's [813] continue down. Uh, aside from just on [815] app event, you can also do things on a [816] schedule. So, you can run a flow every [818] day, hour, or whatever custom interval [819] you want, which is pretty neat. So, if I [821] click this, you can see on the right [822] hand side here, left hand side here, we [824] can trigger the interval to be seconds. [826] I might run this thing every 30 seconds. [828] I can run this every minute. I could run [830] this every hour, days, weeks, months. [832] They also have like a programming um [834] sort of term here called cron which is [836] just a specific language setup where you [838] could write an expression that does [839] something I don't know every third [842] Sunday of years that are oddnumbered for [844] instance. I'm just going to now click [847] delete. So we can delete that out. Press [849] tab to open up this right hand side [850] panel and then continue. You can also do [852] what's called a web hook call. If you [854] guys are unfamiliar with web hook calls, [856] um I'm going to cover it later on in the [857] course, but essentially the really cool [859] thing about NN and a lot of other note [861] platforms, it'll it allows you to set up [863] your own URL just like this up here, [867] right? Nick nick [869] YouTube.app.n.cloud where when anybody [871] tries to access that URL or sends or [873] receives data from or to that URL, you [876] can basically get notified and you can [878] use that as the the beginning of a [879] trigger um for one of your flows. And [882] the benefit to this too is you know how [883] earlier I showed you guys that and had a [885] bunch of you know native integrations [887] about like 200 or something like that [888] where you could connect with Acuity, you [890] could do ClickUp, you could do Gmail, [891] all that stuff. Well, a lot of the time, [892] especially if it's a new platform, you [894] don't actually have that native [895] connection yet. And the benefit of [896] having web hooks is they allow you to [898] create that connection yourself. In [900] these tools, most of the time they'll [902] have a thing um called like a like a web [904] hook listener. You can set up your own [906] web hook listener to be this URL here. [908] And then NAN can just listen to data [910] being shuttled to and from those [912] platforms, which basically in effect [914] allows you to create an infinite number [915] of integrations, connect to tens of [917] thousands of different apps and [919] ultimately become the automation god [920] that we both know you want to be. Okay. [922] Anyway, so I'm going to click that out [924] and I'll cover all of the uh fields and [926] everything like that that you saw there [927] earlier. Next, we have a very nifty one [929] which we're going to be using today [930] called the on form submission. If I give [933] this a click and then I uh add just some [935] very base details here. Um let's just [937] say [938] name. Sorry, let's just do example [941] form. Enter example data. What's your [945] name? We'll go Peter. If I click test [948] this step now, we're actually going to [949] open up a little form that I could use [952] to fill data out. And when I submit it, [954] this basically begins my my flow, which [956] is really neat. So in practice like in [959] business flows you don't usually use [960] this too much but I'm going to show you [961] a simple um workflow that we can build [963] today that will there's also when called [965] by another workflow. This runs the flow [967] when called by the execute workflow node [969] from a different workflow. The reason [970] why this is so valuable is because a lot [972] of AI flows will use this. So if you [973] want to learn how to build AI agents and [975] stuff like that the when called by [976] another workflow um execute workflow [979] nodes the the that relationship there is [981] very common and you'll see me do it a [982] lot over the course of the rest of this [983] tutorial. And then there's also on chat [985] message which is very valuable. So, this [987] runs a flow when a user sends a chat [989] message um for use with AI notes. As we [991] could see, you could ask AI just using a [994] little chat interface, hey, can you [995] check my calendar to um I don't know, [998] double check that I'm not double booked [999] for for 11:00 a.m. It'll actually go [1001] through um this little chat window [1003] trigger and then use that to begin the [1004] rest of this flow. There a few other [1006] ways. Um you could do an email trigger, [1009] IMAP, error trigger. This one's actually [1011] really nifty and most other no code [1012] tools don't have this. when there's an [1014] error in another workflow, you could [1016] trigger this workflow to do something [1018] with. There are a couple of like [1020] metadata things with NAD where you could [1023] set it up so that when you create [1024] another workflow somewhere in your NAD [1026] project, you trigger a flow when one of [1029] your flows starts or when one of your [1031] workflows is activated, you could do [1032] something. And there also a variety of [1033] actions here. We'll cover actions in a [1035] moment. And then there's this SSE [1037] trigger, which nobody really ever uses [1038] in practice from my understanding, so I [1040] won't sweat it. All right. Awesome. So [1041] that in essence are all of the triggers. [1043] In order for us to check out and learn [1045] some of the actions, we're obviously [1046] going to have to go and create a flow, [1048] right? In order for a flow to be a flow, [1050] it needs a trigger, something that [1052] starts it, and then an action, something [1053] it does. Now that we finished the first [1054] part, let's actually just go and start [1056] building our three workflows so you guys [1058] can see how to actually do things in [1060] NADN. It's one thing to sort of look at [1062] things from a canvas point of view. It's [1063] another thing to actually get in the [1064] weeds, get your hands dirty, start [1065] manipulating fields. Okay, I just jumped [1067] over to my other NAND account which [1069] contains these examples. And I just [1070] wanted to show you one more thing that I [1072] I haven't mentioned yet. You see how [1074] this is now this little like yellow note [1077] um with manual trigger send an email to [1078] someone. We'll start by learning how the [1079] manual trigger works. We'll also cover [1080] creating a brief connection and using [1082] that to send a templated email. This is [1083] just how I'm going to document um a lot [1085] of our work moving forward because it's [1086] very convenient. But what is this? This [1088] is basically a piece of documentation [1089] that you can just insert inside of your [1091] own N8 flows anytime you want. It's very [1093] simple. If you go to the top right hand [1094] corner, just go down a bit. There's a [1096] sticky note which you can do with the [1098] hotkey um shift and then S. So I go [1100] shift S. I just added a bunch of notes. [1102] I'm just going to command Z or control- [1104] Z just to go back. Um but yeah, you can [1106] just add a note anytime you want. And [1107] notes are really cool in because they [1109] allow you just to document things. You [1110] don't just have to use notes when you're [1111] trying to teach or show somebody [1113] something. In fact, my recommendation [1114] I'm just pressing one to center this. My [1116] recommendation is to use notes for [1118] yourself to document workflows for [1119] yourself. um just so that you know let's [1121] say you build a system for a client or [1123] for your own business and it works [1125] really well so you don't have to check [1125] in on it for 6 months but 6 months in [1127] you want to change something well now [1129] you're not like basically having to [1130] relearn the whole workflow now you have [1132] like a note which I don't know documents [1133] or teaches you a little bit about it [1136] okay so the very first system we're [1137] going to build and basically the thing [1139] that is going to allow us to get up and [1140] running to learn how the rest of the uh [1142] N8 end UX works is we're going to start [1144] with a manual trigger and we're just [1145] going to use that to send an email to [1147] somebody why this is valuable is because [1149] it's going to show us how to actually [1151] trigger a workflow like ourselves. We're [1154] also going to learn how to test a [1155] workflow and I'm going to run you [1156] through how the fields in NAN work as [1158] well. We're going to create a brief [1160] connection to my Gmail. Then we're going [1162] to use that to send basically the hello [1163] world example. If I click on this, [1165] actually, let me update that. Basically, [1168] our quote unquote hello [1171] world. Okay, great. So, I'm going to [1173] drag this add a first step over here and [1175] let's actually do it. Let's click add a [1176] first step and let's add this trigger [1178] manually flow. Click that node. Boot [1182] over to the left hand side. And now, as [1183] you can see, we have a node in our [1185] workflow that says when clicking test [1188] workflow. Awesome. I'm now going to [1190] click this plus button. What this [1192] enables us to do is basically do um some [1194] next step. So, what I'm going to do next [1196] is I'm going to add an action. This is [1197] our trigger. Remember, it has this [1198] little um electricity lightning icon [1201] next to it. What I'm going to do is I'm [1203] going to do probably the simplest thing [1204] that you can do in NAN, which is just [1206] send an email. I think most of us are [1207] probably using Gmail at this point. Um, [1209] I'm going to go Gmail over here. And [1211] then what I want is I just want to [1213] scroll down. There's so many message [1214] action. I got a label, delete a message, [1216] get a message, do whatever the hell I [1217] want. But the one that I want is I want [1219] send a message. So I'm going to click [1221] send a message. And two things will [1222] happen. The very first thing that will [1224] happen is we just connected an action to [1226] our trigger node. And so our canvas is [1228] now updated. It has two parts to it, [1229] which I'll show you in a second. The [1230] second thing is we are now faced with [1232] this screen. This is basically, you [1235] know, there's like the bird's eye view [1237] canvas screen where you see all the [1238] nodes laid out, but this is a screen [1240] that pertains to that particular node. [1242] And the really cool part about the way [1243] that NAND lays it out is this Gmail node [1246] which we just added um is sort of in the [1248] middle. On the left hand side here, we [1249] have the input to the node. On the right [1251] hand side, we can see the output of the [1253] node. So N8N and one of the reasons I [1256] love it so much is because it tries to [1258] show everything to you uh linearly and [1260] logically. Everything that comes in to [1263] this node that we added will be coming [1265] in through the left hand side which I [1267] think looks like the right hand side on [1268] my thing. So let's go over here. It'll [1270] come in through the left hand side. Then [1273] it'll hit your node. Your node will do [1275] something with that and then it will [1277] finally proceed uh out the left hand [1280] side as an output. So very simple [1282] conceptually and I can't really [1284] overstate how valuable this is just as [1286] somebody that's worked with like you [1288] know over a dozen no code tools at this [1289] point to have it laid out like this um I [1291] think shows that the team spent a lot of [1293] time and energy figuring out what like [1294] the most ideal UX was for development. [1297] Okay, so I'm going to ignore all of this [1299] input data stuff and and we'll we'll [1301] cover all of that later um just over the [1303] course of building. What we're going to [1304] do now is we're going to click this [1305] credential to connect with. So, I've [1307] already actually already connected my [1308] Gmail account, but I'm going to pretend [1309] like I haven't just because I want you [1311] guys to be able to follow along here. [1312] So, what you have to do is you have to [1313] click create new credential. Now, there [1315] are variety of ways to connect one of [1317] your accounts to NAN. There is OOTH or [1321] OOTH 2 and then there are also service [1324] accounts. I highly recommend anytime [1326] that there's an OOTH or OOTH 2 option [1329] available, you guys go with OOTH 2. To [1332] keep to make a long story short, OOTH 2 [1335] just refers to you clicking a button [1337] like sign in with [1339] Google and then you being able to select [1342] an email address with which you can sign [1344] in. All you then have to do is actually [1347] sign into the service. In my case, I'm [1349] already signed into my own Gmail because [1350] I'm using Chrome and it already does [1352] that. Then you click continue and now [1355] you can close this window. It even tells [1357] you how lovely. And you'll see that it [1360] now has connected the account. Basically [1362] meaning that all of the stuff inside of [1364] my Gmail is now accessible to N8 and I [1366] can actually do things with it using [1368] various triggers and actions. So we're [1370] going to exit out of this now. And you [1372] can see that we're now connected to [1373] Gmail account 3. Okay. Next up we have a [1376] couple of fields. We have resource. This [1378] just allows us to choose what thing we [1380] are manipulating. So message label draft [1382] thread. For now we're just going to keep [1384] it as message. You can poke around with [1385] that after you're done this. Then the [1387] operations. So, we can do a ton of [1388] things here. We could add a label, [1390] delete, get many, mark as red, mark as [1391] unread, remove label, reply, send, and [1394] send and wait for approval. Lots of [1396] options here. We're just going to click [1397] send for our hello world example. And [1398] now we get to the juice of it, which is [1400] the two field. So, in my case, I'm going [1402] to be sending this to myself, which is [1405] [Music] [1407] nicholas@gmail.com. And I'm going to be [1408] putting a subject. And you can see it's [1410] already autofilled the hello world. So, [1412] I'm actually just going to go hello [1414] Nick. We have a bunch of email types [1416] here. There's text and HTML. For [1418] simplicity, I'm just going to go with [1419] text, but I want you guys to know that [1420] HTML is a programming language. It [1422] allows you to make your email pretty. If [1423] you guys have ever signed up to like a [1425] newsletter service and there's all these [1426] images and and and you know, banners and [1429] stuff like that. That's because they're [1430] using HTML. So, you can learn how to do [1432] that yourself. And then you can send [1433] stuff like that through NAN pretty [1435] easily. But then finally, we have the [1437] message. So, I'm just going to say, [1438] "Hello, [1440] Nick." And then I'm going to say, "It's [1443] nice to meet you." [1446] Okay, great. And now we've gotten to the [1448] point where the vast majority of this is [1450] done. We do have some extra options down [1452] here. I want you to know that basically [1453] all nodes that you can manipulate will [1455] have some form of extra option. You [1457] don't have to memorize every option for [1459] every node cuz there are hundreds of [1460] nodes. As I mentioned, generally [1462] speaking, there just a couple that are [1463] valuable. I know just off the top of my [1465] head that the Gmail node has one that's [1468] append attribution. Naden will try and [1472] market themselves all the time. So, if [1473] you do not turn this off, they will say [1476] this email was sent by NAND. It's not a [1478] big deal. Most no code platforms do [1480] this, but just make sure you actually [1481] turn it off if you want to use it for [1482] some sort of business use case. Okay. [1485] And then that's that. I'm just going to [1486] head over to my personal email here. [1488] Just open that up just so we could see. [1490] So, you see I have a ton of, you know, [1493] red emails here. And I'm just going to [1495] click test step. I'm now going to send [1497] the email. You can see the lefth hand [1499] side filled out first. It said when [1500] clicking test workflow and I'll cover [1502] that later. But the most important thing [1504] is this output field has now populated [1506] and we see here it's kind of like a [1507] table right with a column called ID [1510] another one called thread ID and then [1511] finally label ids. So any time that you [1515] send or receive data in NAD from one [1518] node to the next you're generally [1519] speaking going to have some sort of [1521] object that is created as a result. This [1524] data object um can take a number of [1525] forms and then it can visualize in a [1527] number of forms. The way that they do by [1529] default for this type of data is they do [1531] table view which is where it's separated [1532] kind of into columns like this. There's [1534] also JSON. This is JavaScript object [1536] notation. This is what a lot of [1538] programmers and people that are a little [1539] bit more familiar with no code are going [1540] to prefer because this is just a [1542] standard convention JavaScript object [1544] notation. They know what the brackets [1546] mean and I don't know instead of it [1547] being kind of left to right like this [1549] which can be squished, it's sort of top [1550] to bottom instead. There's also schema. [1553] This is generally what I find most [1554] people in NAND prefer. They prefer [1556] schema views. Schema views are great. [1558] They're sort of like JSON. It's just [1560] instead of them being written in code, [1562] it's just sort of a little bit cuter and [1563] it's wrapped in like little bubbles and [1565] stuff. So this data is the same as this [1567] data and this data is the same as this [1569] data. They're all just different ways of [1570] showcasing um what the information looks [1572] like to you. I should also note that you [1575] can search the output which is cool. And [1576] a lot of people, even seasoned [1578] professionals at NA, they like have [1579] never clicked this little search button. [1581] So give it a try. If you um are looking [1583] for a particular filter, let's say the [1585] object that is output is actually huge. [1586] And you'll see you can output a ton of [1588] different parameters here. But you want [1590] to just see if the output contains [1591] something, you can do so very quickly [1592] just using this. Then only that field [1594] will show and then you can very quickly [1596] manipulate that as necessary. Um you can [1598] also do a couple of other things like [1599] pin uh data. Um and I'm going to cover [1601] pinning data later. Uh and then kind of [1604] like one of the neat things you can do [1605] as well is you could actually manipulate [1606] the output data. So you could pretend [1608] like this just output a different ID. [1610] Maybe instead of 1 1949, it was [1613] 1821 3 or something. The reason why this [1617] is valuable is because it will then [1618] allow you to propagate that data moving [1620] forward. And as you can see, we just [1621] changed that number. It used to be 1 [1622] 1949. Now it's 1823. So when I search [1625] 1949, we don't have two fields coming [1626] up. We only have one. Right? If I want [1628] to search for the 181, I go 18. There we [1631] go. Okay, great. So that's what happened [1634] in N. But why do we give a crap about [1635] that? We don't. What we care about is [1637] did I receive the email? Okay. And now [1639] you can see we just received that email. [1641] If I give it a click, it now says, [1642] "Hello, comma space Nick with an [1644] exclamation point. Nick leftclick.ai." [1646] That's the connection of the account [1647] that I made. Then it says, "Hello, Nick. [1649] It's nice to meet you." Fantastic. [1651] Amazing. Great. Thank you, NAN, for this [1653] lovely email. Just for shits and gigs. [1656] I'm going to click this append n [1657] attribution just retest it just so you [1658] guys can see what that attribution is [1660] like. Um, but as I mentioned, I I [1661] wouldn't really recommend it for [1662] business purposes. You just got this [1664] little almost email signature that says [1666] it was sent automatically with N8N. [1668] Okay, so I'm just going to turn that [1669] off. And then voila, we're basically [1670] done our first example. This is the [1671] hello world of N8N. Um, if you've made [1673] it to this point, you now literally know [1675] how to set up a simple trigger and a [1676] simple action. You can do a lot of stuff [1678] with what we've just covered. Honestly, [1680] if you take the tips and sort of the the [1682] workflow here, you can put together [1684] probably like 10% of all workflows at [1686] this point. Um, so as you can see, you [1688] know, it's it's sort of simple to get up [1689] and running as long as you have a couple [1691] of core fundamentals down, as long as [1693] you know what triggers and actions are. [1694] And obviously, um, you know, if you did [1697] not know what you were doing before you [1698] tried to do it, it' be a little bit [1699] tougher. So you have the benefit of my [1701] foresight, but flows in a nutshell are [1704] not really more complicated than this. [1705] You always have some trigger, then you [1707] have some thing that happens, and then [1708] you have the action, which is this [1709] Gmail. So let's kick this puppy up a [1712] notch. Instead of just doing an email, [1714] why don't we do an email, but let's also [1716] add AI. And then instead of a manual [1717] trigger where we just click the thing [1719] and then it runs, why don't we use a [1720] form to begin our workflow instead? So, [1723] the very first thing I'm going to do is [1724] I'm just going to delete this. I'm just [1726] going to scroll down here to form fill a [1728] autoresponder. And what we're going to [1730] want to do as our trigger is instead of [1733] it being trigger manually like we did [1735] before, we're going to go on form [1736] submission. just that I could show you [1738] um how to do things a little bit more um [1741] complicated like things that don't just [1743] rely and yeah, it's going to try and add [1745] it um all the way back up here. So, I [1746] got to go drag it down uh just so we [1749] could see how do you get data in from a [1752] resource that like isn't this canvas. [1754] Instead of us just clicking a button, [1755] let's actually trigger it based off [1756] something. So, the way we're going to do [1757] it is on this on form submission node. [1760] So, I give this a click. Um you'll see [1762] that now there are way more fields and [1763] this can actually be pretty [1764] intimidating. it's the first time that [1765] you've ever mucked around with something [1766] like [1767] this. So, don't worry. It's actually not [1769] that scary. Um, we'll we'll make it [1771] pretty simple. Up at the very top here, [1773] we have some form URLs. There's a test [1774] URL. There's a production URL. Right [1776] now, it's not really worth knowing the [1778] difference between the two. Just know [1779] that this is the URL of your form. So, [1781] you'll be able to send this to somebody. [1782] You'll say, "Hey, um, I'm really excited [1784] to get up and running with you. Thanks [1786] so much for paying the invoice. All you [1788] need to do is fill out the information [1789] on this form and my team will get [1790] started." You use this as an onboarding [1792] form. Next you have an authentication [1794] basic off none. Basically in our case um [1796] this just refers to how you want to [1799] secure the form. In our case we don't [1800] want to secure the form at all. We just [1802] want to use it. Now we need to create a [1803] form title. So maybe let's just go [1805] onboarding form. Form description. This [1807] is an onboarding form for leftclick. [1810] Fill out the fields and our team will [1813] get back to you shortly. As you can tell [1815] I'm building this example. I guess I'm [1817] framing it as an onboarding situation [1818] where you're working with somebody and [1820] you just sign the deal. So, you send [1822] them over a form and that form includes [1823] a bunch of fields with information they [1825] need to fill out in order to get started [1826] with you. So, uh what is your name? [1829] Maybe we'll do the the first one. So, [1831] we'll go first name. Well, I mean, we [1834] should probably already know their first [1835] name if we're on boarding them, but for [1836] the purpose of this example, let's roll [1837] with it. We have a bunch of different [1839] fields we could choose here. We could do [1841] text, text area, password, number, file, [1844] email, drop down list, and date. So, [1846] there's a lot going on, but let's uh [1847] roll with first name first. [1850] The second one, let's do last [1854] name. And let's just use my own [1856] information as placeholders. So I'm [1857] going to do Nick as the first [1858] placeholder, Sarafh as the last [1860] placeholder. Let's make both of these [1862] fields [1862] required. Let's go down here. Let's go [1865] email address. Now, because it's an [1868] email, we can actually choose a specific [1870] type of form field. I'm going to choose [1873] email. The reason why is because I want [1875] to force people to put in a properly [1876] formatted email. If I'm going to use [1878] this flow to send an email to somebody, [1879] obviously I'm going to need to make sure [1880] that email is valid. What if somebody [1882] typed in this instead? Or what if [1884] somebody typed in that instead? Both of [1886] my emails wouldn't go through. It' break [1887] my flow. This sort of pre-planning is [1889] necessary when you're putting together [1890] more complex no um flows because you [1893] just want to make sure that like the [1894] data is correct from the get- go. The [1896] data is uh bad, so will the rest of your [1898] flow. So will be the rest of your flow. [1900] Okay, great. And then let's just ask for [1902] a phone [1903] number. Then down over here, you could [1905] see that we have access to a bunch of [1906] different fields. There's number. You [1908] might immediately think that a number is [1909] the one to go to. Um, I don't think I'm [1911] going to do number for this. Uh, I don't [1913] think there's a a native phone number [1915] formatting field. If we did number, then [1917] that would mean that people wouldn't be [1918] able to put a format in like this, for [1921] instance. So, I kind of want people to [1923] be able to. So, instead, I'm just going [1925] to go text and then I'm just going to [1926] add a placeholder. [1930] And the idea is this is just going to [1932] tell them sort of what sort of format to [1934] use for their number. We're going to go [1935] required. Okay, great. Down here we can [1938] now choose when we want this form to [1940] trigger. So when do we want it to [1941] trigger? When the form is submitted. So [1943] that's what we're going to use. And then [1944] down here we have some other options. We [1946] could choose like a pen nadn [1947] attribution. I'm just going to turn that [1949] off. There's uh button labels. We can [1951] change the button label if you want. [1953] Let's get started. I think the default [1955] one just says a submit. Um, and then [1957] there are a variety of other ones here [1958] which I'm not going to cover right now [1960] because I want to keep things simple and [1962] straightforward. Awesome. So now that we [1964] have this, I'm just going to click test [1965] step. This is going to open up my form. [1968] And you can see this honestly is not a [1969] bad looking form. So I'm going to go [1971] nick surive nick at [1974] leftclick.ai. I'm just going to add [1976] a sort of example e phone number and [1979] then click let's get started. What [1981] happens when I fill this in? If we just [1984] make this a little bit smaller and we [1986] couldn't see this in real time, but what [1988] happened right there was the output [1989] populated. And so now we actually have [1991] all of these fields accessible to us in [1993] our NAN flow. First name, last name, [1995] email address, phone number, submitted [1997] at form mode as well. Form mode uh [1999] wasn't and submitted at. These weren't [2000] fields that were put in by me when I [2002] filled out the form. These are what are [2004] called metadata. And the cool part about [2006] metadata a lot of the time is you can [2007] use this metadata to do something cool [2009] with. So, you know, we could very easily [2011] use this to update a Google sheet or [2013] something with a list of submitted at [2014] dates so that we could always be [2015] tracking and sort of know like which [2017] form entry made it in at which time. We [2020] could distinguish between test and [2022] production workflows. Production being a [2023] live workflow. Anyhoo, so now that we [2026] have access to all this data, what I [2028] want to do just to make my life simpler [2029] is in the top right hand corner, I'm [2030] going to click this little pin button. [2032] The value in pinning the data in n and [2034] this is kind of different from most [2035] other noode platforms. But the value in [2037] pinning the data is by pinning the data [2039] we will have access to that same data on [2041] all nodes that are downstream from the [2043] trigger node or the node that we are [2045] pinning the data from. And this is [2047] valuable because as you'll see naden's [2049] whole testing flow involves you know in [2051] in future nodes or subsequent nodes [2053] testing using data from the previous [2055] node. And if there is no data from the [2056] previous node you are going to have to [2058] fill out that data in order to proceed. [2060] So this is just going to save us a [2061] little step. Now that we've done the [2063] form submission what I want to do is I [2064] want to send this to AI. Okay. So, I'm [2066] going to give this a click and I'm going [2068] to go over here and I'm going to type in [2071] um open [2073] AI. From here, we have a variety of ways [2076] that we can communicate with our AI. I'm [2078] going to scroll down until I get one [2080] called message a model. This is the [2083] simplest um AI module that you AI node [2086] that you guys could possibly use. This [2089] is basically chat GPT. It's just instead [2091] of us using chatgpt on their website, [2093] you know, chat.opa.com, openai.com. [2095] We're basically going to be [2096] communicating with it now through API, [2097] which is way cooler and enables way more [2099] cool use cases. So, credential to [2102] connect with. As you can see, I already [2103] have connected to my own OpenAI account. [2105] I'm going to go to create new credential [2106] just to show you guys how this works. [2107] Now, unfortunately, this is not yet have [2109] an ooth 2 connection. So, that means [2112] that as I mentioned previously, you're [2113] not going to be able just to like give [2114] that click uh give that button a click [2116] and then have it open up the signin with [2118] Google button. Instead, what you're [2119] going to have to do is you're going to [2120] have to add an API key. Your question is [2122] probably Nick, how the hell do I do [2123] this? The good thing is Naden is very [2125] gratuitous and forthcoming with [2127] documentation. So if I didn't know how [2129] to do this, I would actually click on [2130] this button, open docs, go down over [2132] here, and then I would look through to [2134] see how to do this connection. And just [2136] because I want to show you guys, like I [2138] know how to do this connection, but I [2139] want to show you guys if I didn't know [2140] how to do this connection, how I'd [2142] approach it, I would literally follow [2143] the documentation one by one by one. So [2146] to generate your API key, log into your [2148] OpenAI account or create an account. So [2149] I already have an OpenAI account. I'm [2151] just going to go platform.openai.com. [2152] openai.com. That's how you get sort of [2154] like their main API. From here, let's go [2157] back to the docs. Open your API keys [2161] page. As you can see, there's even a [2162] button there. It says API keys. So, I'm [2165] actually just going to go API- keys cuz [2168] that's the link that they just gave me a [2170] moment ago, right? So, I'm going to [2172] paste that in. It's now going to take us [2174] to our API key page. Next up, what does [2177] it say? Create new secret key to create [2179] an API key. optionally naming the key [2181] and then copy your key and add as the [2182] API key 999. That sounds simple. Create [2184] new secret key. YouTube example. [2187] Awesome. I'm then going to create my [2190] secret key. We now have a secret key [2192] that I can copy. So, I'm just going to [2194] go back to NAN and then paste in my API [2196] key. Boy, is that a long API key. Great. [2198] Now, we're going to save. And as you [2200] see, it says credential successfully [2202] created. This credential is currently [2203] private to you. Now, one thing that I [2205] didn't cover when I created the [2206] credential to the Gmail was you can [2208] actually rename these credentials to [2209] make your life a little bit easier. So, [2210] I'm just going to call this [2212] YouTube. So, now I know that this is [2214] like my YouTube example. And obviously, [2216] I could have much better naming [2218] conventions for this stuff, but sue me. [2220] Cool. Connection tested successfully. [2222] We're good to go. We can now exit out of [2223] this. And we have now connected to the [2225] credential um with the API key, meaning [2227] this is now hooked up just like we can [2229] now uh previously we could get all of [2230] our Gmail information in NAND. Now we [2232] can get all of our open eye information [2234] in [2235] NAN. Okay, great. So the variety of [2238] fields here like text, assistant, image, [2240] audio, file, custom API call. I'm just [2242] going to stick with text cuz I just want [2243] to talk to the model over text. [2245] Operation is going to be message a [2248] model. We get to choose from a list. [2250] Now, as of the time of this recording, [2252] the most popular model, just scroll way [2255] down here, is GPT40, this one. But I'll [2259] be honest, these models change pretty [2260] quick. So, by the time that you are [2261] watching this, might be a couple days [2262] after I recorded this, might be a couple [2264] months, the model's probably going to be [2266] different. I would just head on over to [2267] like OpenAI's model page, and then I [2269] just look to see what the current [2270] recommended one is, the flagship model, [2272] for instance. As you see, GBT40 is kind [2274] of like in the driver's seat here. Um, [2276] has a bunch of data on it. Um, and I [2277] just sort of use that to, I guess, guide [2279] me. If you're using another service, [2281] then it won't be in exactly the same [2282] place, but I think you guys get the [2284] idea. Okay, great. Now, we can define [2285] our prompt. You know, when you talk to [2286] CHP and you say, "Hey, I want you to do [2288] this thing." Well, there's actually a [2290] term for what you just did. You prompted [2293] ChatGBT and specifically you did so [2295] using a user prompt. You're the user, so [2298] that makes sense. Basically, the user [2301] prompt is what you want chat GBT or want [2303] in our case GPT40 to do for us. But [2306] there's actually one other prompt that [2307] you don't really get unless you're using [2309] um a no code tool like this. It's called [2311] the system prompt. This is used to set [2312] the model's behavior or context for the [2314] next user message. So, we're going to [2316] click on system first. And the way that [2318] the system prompt works for AI is the [2320] system prompt tells the model how to [2322] identify. So basically I'm saying, hey, [2324] I want you to identify as uh you know [2327] worldclass philosopher. I want you to [2330] identify as a PhD in genomics. I want [2332] you to identify as a helpful intelligent [2334] writing assistant. And however you you [2336] put your system prompt, the better it'll [2338] be at that specific thing more [2340] generally. There's a little bit of [2341] nuance there. I'm not going to go into [2343] it too much, but in my case, I'm just [2345] going to say you're a helpful, [2346] intelligent email writing assistant. [2348] Then I'll go period. So, that's what the [2350] system prompt is. Now, we're going to [2351] click add message. And then the next [2354] prompt I'm going to do is a user prompt. [2355] If I click on roll, though, you'll see [2357] there's also an assistant prompt. This [2359] is pretty interesting. What what you can [2360] do with the assistant prompt is you can [2361] pretend that the assistant has actually [2363] already said something in your chat [2365] chain. If you want it to act a certain [2367] way, you can give it examples of how you [2368] want it to be. Anyway, in my case, I'm [2370] going to do something very simple. user. [2372] Then I'll say your task is to customize [2375] an email using the following [2378] data. Now I'm going to go enter. Enter. [2381] This is going to make this stretch this [2382] out a bit. I'm actually going to open [2384] this up a bit more. Then I'm going to go [2387] um and I'm going to drag this first name [2388] in [2389] here. You see when I drag the first name [2392] in here, something changed. We just went [2394] from fixed to expression. Why did we do [2397] that? Well, basically fixed is almost [2399] always just going to be static text. [2401] Okay, we don't want static text. We [2403] actually want to connect a variable from [2406] a previous node into this OpenAI module [2409] or OpenAI node call. So, I'm going to go [2412] back to expression to show you guys how [2413] this works. All I need to do if you want [2415] to connect the input of the previous [2417] node into the current node is just drag [2420] it and then drop it where you want it. [2423] So now this is [2425] populating the um result is populating [2428] with the actual data from the test. If [2430] we zoom in way here you can actually see [2431] it says result. Your task is to [2432] customize an email using the following [2434] data. Then in green it says Nick. Here [2436] it says curly curly dollar sign JS with [2440] a square bracket. Like this is really [2442] intimidating and scary. Well this is [2443] just the code representation and this is [2445] the actual thing that just got [2446] populated. Okay. So that's how we're [2449] going to do this. I'm going to say first [2453] name and then Nick. Then we're going to [2456] go last name. And I'm just going to go [2458] and drag last name in [2461] here. I'm going to go email address. And [2465] I think I might have just deleted that. [2466] So, let me just do this one more time. [2468] Last name. Beautiful. Email address. [2472] Nick [2474] leftclick.ai. Phone [2476] number. Drag this puppy in here. [2481] Cool. That looks pretty good to me. And [2483] now what we're going to do is I'm going [2485] to click I'm going to leave simplify [2487] output um as [2489] is. Then I'm just going to write my [2491] email template. So I'm going to go down [2492] here and go email [2494] template. Hey [2497] name. Let's go first [2500] name. How are you? Thanks for submitting [2505] your [2506] request, your brief or onboarding form [2511] moment ago. I see here your number is [2514] number. Let's do phone number. I'm just [2517] putting this text in so the AI sort of [2519] like knows what to fill in. If you think [2521] about it, it has the first name over [2522] here. And if you think about it, I could [2523] just fill all this stuff in [2524] procedurally, but I'll show you why I'm [2525] doing this in a second. We're actually [2526] going to like level up the data to make [2527] the customization a lot more valuable. [2530] Um, I see here your phone number is [2532] blank and your email is [2534] email. Could you let me know if I'm [2537] missing anything? Thanks, Nick. Okay, [2541] great. So now what I'm going to do is [2543] remember how we pinned the data before. [2545] All we need to do in order to test the [2547] step now is we just go up here top [2549] rightand corner click test [2551] step. If you test the step is actually [2554] sending this whole thing to AI. And now [2556] we have a bunch of content. It's a [2558] subject welcome to our program back [2560] slashn back slashn. If you guys are [2563] unfamiliar with what the back slashns [2564] mean here, back slashn just means um [2566] like a new line. So this is trying to [2568] write us a whole email and it's doing so [2569] with new line characters instead of new [2571] lines just cuz AI has no real way of [2573] like creating a new line um without [2575] this. So this is basically just a new [2577] line character. Hey Nick, how are you? [2579] Thanks for submitting your onboarding [2580] form a moment ago. I see here your [2582] number is 6045005000 and your email is [2584] nick leftclick.ai. Could you let me know [2586] if I'm missing anything? Thanks, Nick. [2587] That's pretty neat. Why don't we just [2589] pin this [2590] output and why don't we hook this up now [2592] to another email [2594] module. And just to show you guys how [2597] useful it is to know a little bit of [2599] like NAND hotkeys, if you just go back [2602] to the previous email module we had, if [2603] I just hold command and C, same thing as [2605] right clicking and pressing copy. See [2607] the copy to clickboard event just came [2609] down. And I actually just paste this. [2611] And I'm basically now just pasting the [2613] same module I had before. And then I'm [2615] connecting it to the output of the [2617] OpenAI module. And you'll see here this [2620] is now accessible to us as input. The [2621] content is which is pretty cool, right? [2623] I'm noticing actually that this includes [2624] a subject line. I don't like this. So [2627] why don't I go back to AI then I'll just [2630] tell it don't include the subject line. [2632] Let's do that and let's test it. Let's [2635] unpin. Let's test the data. And now that [2638] it doesn't include the subject line, [2639] let's pin it again. Let's go back to our [2641] next module or our next node, I should [2643] say. I keep on using the term module [2644] because I'm big on make.com. It was kind [2646] of the major noode platform I learned [2648] and make.com always uses the term module [2651] for everything that uses the term node [2653] for. Anyway, now I'm going to drag this [2655] content field to the [2657] message and as you can see it's already [2659] populating with the [2661] email. I'm going to say re your [2664] onboarding form and I'm going to test [2667] this. The connection's already set up. [2670] All of the rest of the parameters are [2671] set up. everything set up cuz remember [2672] all we did was we just copied that [2673] module with all of the settings. In [2675] practice, I find I copy modules a lot. [2677] Okay, great. Now going back to my email, [2678] you see we have read your onboarding [2680] forms. I'm going give that a click. Now [2682] it says, "Hey Nick, how are you? Thanks [2683] for submitting your onboarding form a [2685] moment ago. I see here your number is [2687] 6045000 and your email is Nick [2689] leftclick.ai. Can you let me know if I'm [2690] missing anything? Thanks Nick." The [2692] reason why this is sort of like an AI [2694] example right now is because we actually [2695] just used AI to write this email for us. [2697] But if you think about it, what we've [2699] done so far is we haven't really done [2700] anything that you can't just do by [2701] dragging and dropping the first name [2703] into the email module instead. So next [2705] up, I want to do something that's a [2706] little bit more creative. Uh I want to [2707] do something that paraphrases what a [2709] person said or summarizes it. And in [2711] order for me to do that, I'm going to [2713] have to go in and I'm going to have to [2714] change the way that the form was a [2715] second ago. But anyh who, we've now done [2717] a different hello world example. [2719] Basically, um the hello world example we [2720] just did was instead of a manual trigger [2722] of us just clicking test step, we now [2724] have a form that triggers this. So, let [2727] me make a couple of adjustments to the [2728] flow and then we'll actually run through [2730] the form one final time and we'll see [2731] what it all looks like when we put [2732] things [2733] together. The adjustments I want to make [2735] to this form. I don't just want to ask [2737] for all this [2738] information. I want to ask for let's say [2742] design [2743] preference. I'm going to add a drop-own [2746] item and I'm going to say [2748] sleek. I'm going to say um [2752] minimalistic. I'll say luxurious. [2755] Then over here I'll say [2758] playful. Then I'm going to add another [2760] form field. I'm going to say give us a [2762] brief description of your brand. Or [2765] maybe we'll just say um brand [2769] description. My [2771] brand or maybe we'll do company [2774] description. Leftclick builds growth [2777] systems for B2B agencies and creative [2780] teams, enabling them to scale without [2784] having to manually reach out to [2786] prospects. Let's just do something like [2788] that. We'll make that required. Now, [2790] what's one more thing that I could do [2792] that might be new? [2794] H, we'll ask [2798] it timeline. And we'll say how quickly. [2802] Let's say uh 3 to 6 weeks. There you go. [2805] We'll go required field. Awesome. Okay. [2807] So now I'm going to click test this [2808] step. It's going to overwrite the pin [2809] data, but now it's going to open up our [2811] form and it's going to have way more [2812] information here, right? So I'm going to [2814] go Nick Sarif. [2817] Nickclick.ai. Um design preference. I [2820] want my website to be minimalistic. [2822] Company description. Leftclick. Build [2824] sleek growth systems, high performing [2827] growth [2829] systems for B2B agencies and creative [2832] teams. And the timeline is I want like [2835] one to two weeks. Okay, let's get [2837] started. Awesome. Fantastic. We now have [2839] all the information that we need in the [2840] output panel here. I'm going to pin this [2842] data to make it accessible to subsequent [2844] modules. Now, I'm just going to go in [2846] here and edit the prompt a little bit. [2848] And if you think about it, I don't just [2849] want to edit it with, you know, [2850] information about the the name and stuff [2852] like that. That's not super relevant to [2853] me. What I want to do [2855] instead is your task is to is to [2858] customize an email template using the [2859] following data. [2861] Let's just add in more information here. [2864] Let's go design [2866] preference. Drag this puppy in. I want [2869] to give it more data to do the [2870] customization [2874] with. Down here, I'll go timeline. We'll [2877] go one to two [2878] weeks. Okay, great. And so, basically, [2881] instead of what I had before, just hey, [2882] first name, how are you? Thanks for [2883] submitting your onboarding form a moment [2886] ago. I loved reading about [2892] thing about company. Let's [2896] do let's go paraphrase company [2899] description. [2902] I see [2903] here that you're looking for design [2910] preference a design preference sort of [2916] site and you're looking to have it [2925] done. Would you mind confirming [2928] your number for me one last time? I'm [2933] going to say formatted phone [2936] number. Right. Also, okay. And obviously [2940] they know the email because we're [2941] sending it. Cool. This looks pretty good [2943] to [2944] me. Don't include the subject line. [2946] Let's actually give this thing a go now. [2948] Let's click test step. We're going to [2950] feed all this data in. Let's see what [2952] our email looks like. Hey Nick, how are [2955] you? Thanks for submitting your [2956] onboarding form a moment ago. I loved [2957] reading about how Leftclick built high [2958] performing autonomous growth systems for [2959] B2B agencies and creative teams. I see [2961] here you're looking for a minimalistic [2962] sort of site and you're looking to do it [2963] within one to two weeks. Would you mind [2964] confirming your number for me one last [2966] time? [2966] 604700s 5,000. Right. You let me know if [2969] I'm missing anything. Thanks, Nick. So, [2971] basically what we've done is we've um [2972] taken in some of the information here [2975] and then we've paraphrased it. Um I [2977] guess in this case we didn't actually [2978] paraphrase. This looks like an exact one [2980] for one. Hm. [2988] Cool. Okay, great. Let's test this one [2990] more time just to make sure that we got [2992] a personalized but customized thing [2993] that's [2996] paraphrased. Cool. Looks pretty good. [2999] Um, what I'm going to do now is I'm [3000] going to go down to our Gmail [3003] module. Take the data. I'm going to test [3006] it. We've now sent an email and we [3008] should have received another one called [3010] read your onboarding form. This is the [3012] customized email, which looks pretty [3014] nice and sexy. And now that we figured [3016] out how to do this testing one by one by [3018] one, why don't we actually test the [3019] whole thing from start to finish? Okay. [3021] Yeah, let's actually just run this whole [3022] thing. So, I'm going to go down to the [3025] bottom. Instead of us testing the module [3027] one by one, which is where we click on [3028] it and then we click that test step, [3029] we're actually going to test the whole [3030] workflow. So, I'm going to click test [3032] workflow. It's using the pin data. It's [3035] running through. Uh, we don't actually [3037] want to pin the data, so I'm going to [3038] click unpin. Okay, now it's time to test [3040] out this flow. I'm just going to go back [3042] to the form submission and I'm just [3043] going to do a little bit differently to [3044] how we did before. I'm actually going to [3045] copy this form URL myself. Click test [3048] workflow and let me exit out of that. [3050] And I'll show you guys you guys can [3051] actually just test this from anywhere. [3052] I'm just going to go back here, open up [3054] an incognito tab, paste it in, and this [3056] is the same input now, right? So, I [3058] don't know, Nick um Sarah. Uh we'll go [3061] Nick at leftclick.ai. We'll do phone [3064] number. Then design preference [3066] minimalistic company description. [3068] NY's Donuts sells sleek, high-end [3072] donuts with a creative [3075] twirl. We're big on uh I don't know, [3078] let's do our favorites are chocolate and [3082] pink sprinkles or something. Uh timeline [3084] would be like 3 weeks or so. Then I'm [3088] going to click let's get started. It's [3089] now going to submit it. And I just [3091] wanted to show you guys this is like a [3092] live form. Like you can use this [3093] anywhere you want to test this thing. [3094] You don't have to just like click that [3096] button. Um what just happened in the [3097] background was these just went green. [3098] Green means that you know the flow has [3100] now been completed and that node has [3102] been done. So this node completed, this [3105] middle node completed and that last node [3106] completed. That means that if I go back [3107] to uh my page here, I should be able to [3111] see set input. So hey Nick, how are you? [3113] Thanks for submitting your onboarding [3114] for a m ago. I love reading about how [3115] Nick's donuts sell sleek high and donuts [3116] with creative twirl. I see here looking [3118] for a minimalistic sort of site and [3119] you're looking to do it in about 3 weeks [3120] or so. Um you know the data here was [3122] different. We're paraphrasing a fair [3124] amount which is pretty cool. Would you [3125] mind confirming your number for me one [3126] last time? 604500 5,000. Right. Could [3128] you let me know if I'm missing anything? [3129] Thanks, Nick. Very cool. Very cool. [3132] Okay, beautiful. So, that's the uh [3135] second example here with form fill and [3137] some AI autoresponder. Um, worth noting [3140] here that our AI autoresponder sent [3141] something immediately, but you can also [3143] use a delay. Like, hypothetically, if [3145] somebody fills that out, you don't [3146] really want to send it immediately. So, [3147] why don't we just cap this off with like [3149] a quick like 120 second delay to connect [3153] it. Um all we do is we drag we exit um [3156] both of these connections. We drag this [3158] over here and then we drag that over [3160] there. And now basically we have um the [3162] form submission coming through. AI then [3164] figures out what it wants to say. We [3166] wait for 120 seconds and then we send [3168] the Gmail. Pretty neat, right? Cool. So [3171] big fan of that flow. Um you can [3173] manipulate and you know improve that [3175] flow however you want. Obviously this [3176] paraphrasing here was pretty lowle and [3178] weak, but you could do a ton of things. [3179] You could ask it to generate you a list [3180] of questions to ask the onboard for [3182] instance. You could um have it uh I [3186] don't know suggest a bunch of actions [3188] based off of some form fields. There's a [3190] lot that you could do when you want to [3192] make the flow production ready or live. [3195] You'd have to click on production URL. [3197] This would then be the form that you [3199] would use instead of the test one. Then [3200] you'd have to activate your flow by [3202] clicking this button up here in the top [3203] right hand corner. So now basically [3205] anytime that uh the production form URL [3208] is filled out, we will fill out this [3210] flow and then send an email which is [3212] kind of neat, right? Not saying that [3214] this is what you guys should do right [3216] now. I just wanted to show you guys what [3217] that process looks like when you [3218] actually activate a node or workflow. [3220] Okay, great. Now let's use one final [3222] example to show you guys and level this [3224] up a little bit. Show you guys how you [3225] might actually use this in a real [3226] business flow. So maybe instead of an [3228] onboarding form, which is kind of [3229] contrived example here, we instead we [3230] have a calendar booking. What we want to [3232] do is when somebody books on my [3234] calendar, um, I want to reply to them [3235] and I want to make it seem like it's a [3236] personalized reply. Then after that, I [3238] want to add a new row to my CRM where [3240] I'm storing all this data. Okay, so [3242] there are going to be a couple of moving [3243] pieces here. And I'm just going to keep [3244] everything very light, but I'm also [3246] going to walk you through the process [3247] step by step. First of all, I have a [3249] cal.com set up, [3253] nick-leclick/inter, so you can book [3254] internal calls with me if you're on my [3256] team using this calendar. As you can [3258] see, 1:30 p.m. is open. What I want to [3260] happen is when I give this a click, I [3262] basically want to use this to trigger a [3264] flow that immediately sends them over an [3266] email. And it's an email from Nick. It's [3268] an email from me saying, "Hey, you know, [3270] just saw you booked today. Really [3271] looking forward to chatting with you." [3272] It's going to substantially improve the [3273] perceived personalization of this flow. [3275] It's going to make people think that I'm [3277] paying private and and one-on-one [3278] attention to them, which is great. Then [3280] what I want to do is I want to take that [3281] data and I want to use it to fill in a [3284] row inside of my CRM. Now, I'm using a [3286] um thing called ClickUp here for my CRM. [3288] Sorry, wrong account. Let's go over [3290] here. I'm using um a CRM called ClickUp. [3293] ClickUp is a fantastic high- quality CRM [3295] that allows you to do a ton of stuff. Um [3297] but for the purposes of this example, [3298] I'm just going to be filling in this [3300] creative agency template CRM that I set [3302] up a while ago. Basically, what I want [3304] to happen is when somebody fills out the [3306] calendar booking, I want to add them [3308] over here to this meeting booked um [3310] status so that I have their first name, [3312] their last name, their email address, [3314] some other information about them, [3316] company oneliner, maybe some meeting [3317] URLs. Let's actually get to like [3319] business uh flows now because I think [3322] honestly after like an hour, you guys [3323] know more than enough to do it. And let [3325] me show you guys what an actual [3326] automation build for something like [3327] this, an NN would look like. Okay, [3330] great. So the very first thing we have [3331] to do is we just have to set up our [3334] trigger here. So I'm going to go over to [3336] three NAND examples and then I'm going [3340] to just going to remove this on form [3342] submission trigger. The reason why is if [3344] you have um triggers in NAN um when I [3346] test the workflow it's going to test the [3348] the other trigger. So we just need one [3350] trigger per flow. I'm going to go down [3352] here and what I want to trigger is I [3354] just want to see if there's a cal.com [3356] node. Cal.com is the service that I'm [3358] using. There variety of other ones. [3359] There's kalanly as well which I know [3361] many people use very popular but I'm [3362] going to use cal.com and what I want is [3364] my trigger is I want onbooking [3366] created. So I have credentials that I [3369] can add here. What I'm going to do is [3370] I'll go create new credential and then [3372] you can see here I need to find my API [3374] key for um cal.com. There's also a bunch [3376] of docs over here. In my case I know [3379] where my docs are. You can see that I [3380] have YouTube nn example expires in 24 [3383] days. I'm just going to delete that. [3384] I'll make a new one. And then I am going [3385] to have it expire just in case my silly [3388] brain forgets to update this. I'll save. [3391] I'm going to copy this. Then I'll go [3393] back here to my API key. I'm just going [3396] to paste that in. The host is [3397] autofilled. It's always api.cal.com. So [3399] don't worry about that. Then I'm going [3400] to click save. This is now going to [3402] successfully create my credentials. I'm [3403] now going to go over here, type YouTube [3405] just to make sure that I I name it right [3406] and everything. I'll save and test it [3408] one more time. Exit out. Okay. So there [3410] variety of events that I could use here. [3412] The one that I'm going to want is called [3413] booking created. But I want you guys to [3414] know you can also trigger a flow like [3416] this when a booking is canceled. You do [3417] it when a booking is rescheduled, when a [3419] meeting is ended even. You also have [3421] some options here um which are a little [3423] bit more advanced. I'm not going to get [3424] into all of them, but essentially these [3426] light is set like metadata and other um [3428] payloads and stuff like that for more [3430] advanced flows where you need to tag [3431] people and know where they're coming [3432] from and that sort of stuff. Anyway, so [3434] what I'm going to do is I'm going to [3435] click test step. When I do, it's now [3438] listening for one of my bookings. So I'm [3440] going to go over here to internal. [3441] Actually, you know what? I think I have [3442] a better one. Um, instead of internal, [3446] don't I have one that's [3449] for discovery calls? That's probably a [3452] little bit better. Yeah, let's do that. [3454] So, I'm going to go in and I'm going to [3455] book a meeting with myself. Uh, I'm [3457] going to pretend my name is Peter [3459] Jackson and my email address is just [3462] going to be my longer email address [3465] here. I'm going to fill my gross monthly [3466] revenue at 20K. And then for additional [3469] notes, I'll say, "I'm a big fan of your [3472] YouTube channel and would love to know [3475] more about how I can grow past 20K." [3478] Then I'm going to click confirm. After I [3480] click confirm, I'm just going to open up [3482] this page again because I want to watch [3483] the event come in live. And as we see, [3485] the event did indeed come in live. We [3487] have a ton of fields here. Trigger [3488] event, created at, booker, URL, type, [3490] title, on and on and on and on. Because [3492] remember at the beginning of this when [3493] we were just getting started with a [3494] simple flow, I was like, sometimes calls [3496] have a lot of fields. Well, this node [3498] output a ton of fields. So, what I'm [3500] going to do just to make sure I don't [3501] lose this is I'm going to pin this. And [3504] then what I want to do is I want to feed [3506] this into a Gmail node. Now, if you guys [3508] remember my previous hack was just going [3510] to the Gmail node, selecting it, command [3513] C, commandV. Very [3516] clean. And then I'm going to go double [3518] click on this. I have all the data [3520] accessible to me. And now instead of [3522] this, I'm just going to say re recent [3524] meeting. And then I'm just going to say, [3526] "Hey, [3527] Peter, instead of just text, why don't I [3530] do an HTML email?" Just to show you guys [3531] what this might look like. If you want [3533] to write an HTML email, a couple things [3535] you have to know. A new lines are this [3537] BR. So, if you want to add two new [3540] lines, you'd go BR BR. Hey, Peter, just [3543] saw you [3546] booked a and let's go [3549] type. Let's drag this over here. [3553] blank [3555] call looking forward to learning more [3558] about you slashthe business. Then I'm [3561] going to say [3564] br Thanks [3567] Brick. So when I send this email via [3570] HTML it'll say hey Peter new line new [3572] line. That'll be two lines. Just saw you [3575] booked at just saw you booked a [3577] discovery call. Looking forward to [3578] learning more about you/the business. [3580] Then it'll go new line, new line. Then [3582] it'll go thanks. Then it'll go new line. [3584] Then it'll go neck. In terms of um you [3587] know what this looks like. Let's see if [3589] we could customize this a little bit [3590] more. Maybe I'll go reming with and then [3593] I'll grab the first name [3595] in. So I say remeating with Peter. [3598] Perfect. Then in terms of the email [3601] address I'm going to be sending this to. [3602] I'm not going to hardcode this at [3603] Nicholas. Now, I'm actually going to [3604] enter in Peter's email, which is [3606] apparently going to be this value key, [3608] which will always say [3610] Nicholas@gmail.com with this example. [3613] Um, and then I think at this point, [3614] we've now filled out everything, right? [3616] Send HTML. Yep, looks good. Let's [3618] actually test this. Send myself an [3620] email. We've now received a um status of [3623] send, which is cool. So, you can see [3625] I've received two emails. The first was [3627] um cal.com letting me know that I've [3629] just booked a meeting with Peter. And [3630] the second one is the email that I'm [3631] supposed to be sending or receiving as [3633] Peter. Hey Peter, new line, new line. [3636] Just saw you booked a discovery call. [3637] Looking forward to learning more about [3638] you, the business. New line, new line. [3640] Thanks, Nick. That's pretty sweet, [3641] right? Looking forward to um that [3644] conversation with Peter. But I got to be [3646] honest, I think that we could probably [3647] customize this a little bit better. I [3648] don't really like the way that this is [3650] um so small and minimal. So, why don't [3652] we do a little bit of like um date [3653] customization? You guys see on the lefth [3655] hand side here, there's a start time and [3656] an end time. Well, this isn't a very [3658] particular format. datetime format that [3660] we can convert into natural language [3662] instead of this. How cool would it be if [3663] we could say, "Hey, looking forward to [3664] our chat on Tuesday, on Saturday, on [3670] Wednesday. See you." And what I'm going [3672] to do is I'm going to drag in the start [3674] time [3675] here. And what you'll find is because of [3677] the format of NAD, which can be a little [3680] bit intimidating if you're not familiar [3681] with it, we have these curly brace curly [3684] brace a dollar sign JSON dot and then [3686] the variable name start time. Well, the [3688] cool thing about Na is if I put a period [3690] here, I can actually do a ton of stuff [3692] with this. Like I can do a ton of stuff [3694] with this. What I want to do is I want [3696] to convert this to a date time, then I [3699] want to format this. And the way I want [3702] to format this is I want to format this [3703] as a date. So I don't go DD no M A. [3711] Sorry. There's a specific datetime uh [3715] formatting key thing here. here. So, I'm [3717] going to read the formatting guide [3718] really quickly. And we're just going to [3719] find out how to say like Monday or [3721] Tuesday or [3723] something. Okay. See this? So, it's [3725] CCCCC looks like. So, that's the token [3727] that I'm going to use. Or maybe it's E. [3729] I don't know. Let's try both. We'll [3731] format as [3733] E. Awesome. See you Friday. Perfect. You [3736] see how um that we're sort of just like [3737] iteratively developing or iteratively [3739] editing this. And it ends really cool [3741] because it actually shows you the value [3742] of the thing that you are currently [3743] manipulating down here. So, the purpose [3746] of this is not to have me for me to [3748] expect you guys to know how to do any of [3749] this date uh formatting for now. I just [3751] wanted to show you what might be [3752] possible with a little bit more complex [3753] JavaScript and and JSON formatting down [3755] the line. This dot notation is really [3758] valuable. It just allows you to very [3759] quickly manipulate things. In my case, I [3761] called this variable JSON.start time. I [3764] then converted it to something called a [3765] datetime variable. Then I formatted it [3767] as a day of the week and that's why it [3770] says Friday. Okay, great. So, now that I [3772] have that, let's test this flow. [3775] Let's just double check that Friday was [3776] formatted well. Everything looks good to [3779] me. And now let's move on with that last [3781] part of our example, which is going to [3782] be taking this and using it to update uh [3784] my CRM, which is ClickUp. So, I'm going [3787] to give this a click. Give this a click [3789] up. And then I'm going to go click up. [3793] And what I'm going to do next is I'm [3794] going to scroll all the way down to [3797] tasks. What I want to do is I want to [3799] create a task. Okay, great. Now, we have [3802] the ability to choose our credentials. [3803] So, if I go to create a new credential, [3805] you can see that it asks me to connect [3807] my ClickUp account. I'm going to click [3808] connect. It'll now say, do you want to [3809] connect with NSM? I'll say [3811] yes, the window can now be closed. [3815] Beautiful. And why don't we do that one [3817] more time? We'll call this YouTube. [3819] Click [3820] save. Awesome. Now, I'm going to exit [3822] out of this. And now we have access to [3824] the credential for for YouTube for my [3826] ClickUp account. So, basically, if you [3827] guys remember, what I wanted to do a [3829] moment ago was every time a new calendar [3830] booking comes in, I want to add a row to [3832] this meeting booked um space, and I want [3835] to say Peter Smith, person's first name, [3837] um status. We don't have the project [3839] type or email or company name or [3841] anything like that, unfortunately. So, [3842] I'm just going to leave most of this [3843] out. Why don't we just um hide these [3846] columns for [3847] now? But I just want to show a proof of [3849] concept to show you guys that we can [3850] indeed get the data in. And we're going [3852] to put the meeting URL here as well, [3853] which is going to be [3855] nice. And future videos will show you [3857] guys how to build CRM like this and [3858] connect them um using [3860] naden. Okay, awesome. So now let's head [3862] back over to this ClickUp module or [3864] ClickUp node rather. And uh we'll go [3866] operation create. What I want to do is [3867] create a task. The team name is NSM. [3870] It'll go and it'll find the space name [3871] which will be template creative agency. [3874] It'll find the folder name which is CRM. [3876] The list name will be sales. I know this [3878] because if I look on the right hand [3880] side, right, this is NSM. This is my [3882] template creative agency. This is my CRM [3884] folder. This is my sales list. So, I'm [3886] just going down top to bottom and [3888] connecting them. Then, we'll have a name [3890] here, and I'll be able to add the name. [3892] Now, what do I want to be the name? The [3894] reason why I picked this as an example [3895] is because we're going to be [3897] manipulating data from a node that's not [3898] just the previous node, but it's [3900] actually a couple nodes back now. And as [3901] you can see, this previous node here, [3903] all we have access to are a bunch of [3904] Gmail things, right? ID, thread ID, [3906] labels, label, ID. If you want to go one [3908] step back, what you have to do is you [3909] have to open up this cal.com trigger. So [3912] basically what we have here is at the [3914] very bottom, this is the very first node [3916] that we executed, this trigger, this is [3918] the second node we executed. The most [3920] recent node is always going to be on the [3922] top and then every node that's connected [3923] to the the previous node. Um it's just [3926] going to go lower and lower and lower [3927] and lower. So if we had a 20 node flow, [3928] for instance, the very first node in our [3930] flow would be down here, second would be [3932] here, third would be here, working all [3934] the way up until the final most recent [3936] one or the previous one up at the top. [3938] But anyway, now I want to access data [3939] from my cal.com trigger. So that is two [3941] nodes back. So it's not going to be um [3943] you know immediately behind us, but we [3945] could still open and access stuff as [3946] needed. What I want to do now is the [3949] name of this record, if you think about [3950] it, I want it to be the first and the [3951] last name of the person. I just wanted [3952] to say Peter Jackson. So I'm going to go [3954] here, [3955] Peter. And you'll notice that the syntax [3957] here changed pretty substantially, but [3959] we'll cover that later. Then I'll go [3960] space and then last [3962] name. So now it says Peter space [3965] Jackson. That's the name of the record. [3967] Okay. So, why don't I why don't I do [3970] this. Why don't I go back to my Gmail? [3972] Let's just pin this. Not that it [3974] matters. I'll go over here. What I want [3976] to do is I just want to test this step [3978] and show you guys what it looks like [3979] when something gets updated in my [3980] ClickUp. You guys see that Peter Jackson [3983] was just added. How cool is that? We've [3984] now just bridged the gap and we've added [3986] Peter Jackson who was previously inside [3988] of NAN whose data we got from click uh [3990] from cal.com which is a totally [3992] different software platform and we put [3993] it in ClickUp. But you'll notice that, [3996] you know, a couple things are off here. [3997] I want to make the status meeting [3999] booked. And then I also want to fill out [4001] this meeting URL. So in order to do this [4004] with ClickUp, what we have to do is we [4005] have to go and we have to fill out [4006] what's called a custom fields JSON. This [4008] is kind of annoying to do in ClickUp to [4010] be honest. Um I wish that there was an [4011] easier way to do this. Uh maybe at some [4014] point in time ClickUp will provide an [4016] easier way to do this through their API, [4017] but hey, what are you going to do? So in [4019] order to do this what we have to do is [4020] we have to go down here to where it says [4023] add additional fields rather what we [4027] have to do is we have to number one set [4029] the status name manually. We have to set [4032] it to meeting booked. Okay. And we also [4033] have to go over here and add custom [4035] fields JSON. Now this is pretty annoying [4037] to do unfortunately in um N8N. We have [4041] to basically figure out what the ID of [4043] the field is before we fill it out. And [4045] then in order to do so, we also have to [4047] do um use this format with like a square [4049] bracket then a space left curly bracket [4052] quote ID quote um colon space quote [4056] quote then inside of there we'll have [4057] the ID. Then we have the value which is [4059] the thing we're going to fill it in [4060] with. Sometimes you have to do this. I [4062] know the ID already. Um so I'm just [4064] going to paste that in. And then I'm [4066] just going to paste in the rest of this [4067] as well for [4069] simplicity. In this case um I'm just [4072] going to go expression go back here. ID [4075] will be this and then the value is going [4078] to be the meeting URL. So what I'm going [4080] to do is I'll go here. I'll go [4082] meeting. Maybe I'll go URL. There you [4085] go. Video call URL. I'm going to drag [4087] this over here between these two quotes. [4090] Okay. So now if you look at the JSON [4093] that I'm sending, it is now uh in the [4095] right format uh that uh ClickUp is [4097] requesting. Don't worry too much about [4099] the code aspect of this. I put this in [4100] here just to show you guys that like [4102] there is some knowledge that will make [4103] it a lot easier for you to do specific [4105] things that you want to do. For [4106] instance, if you didn't know this, it [4107] would probably take three or four more [4109] nodes in order to get there. And that's [4110] okay. Um, everybody needs to start [4112] somewhere. But in future videos as we [4114] cover all of the different functions and [4116] dot notations of NAD. Um, stuff like [4118] this sort of just adds fuel to the fire. [4120] Okay, great. So now I'm going to test [4121] this one more time. We'll go back to [4124] ClickUp and we'll see what we just did. [4126] We just added Peter Jackson except now [4129] we've done so with the status that says [4130] meeting book and also with the meeting [4132] URL of the call that we're going to [4133] have. So in this way we've created a [4135] very simple flow that when a new cal.com [4138] meeting comes in we reply with an email [4141] and then immediately after we log it in [4143] our CRM. This sort of thing is crazy [4146] effective for small to mediumsiz [4148] businesses. A lot of them lack [4150] organization and they don't really [4151] understand how to do these sorts of [4152] connections. Well, the great news is you [4154] can now, you know, assuming that you've [4156] you've built this out on your own and I [4157] highly recommend you build alongside me. [4159] You can now do this sort of thing, not [4160] just for ClickUp, but for any CRM out [4162] there and not just for Cal.com, but for [4164] any calendar booking platform out there. [4166] At the end of the day, they all they're [4168] all more or less the same. Awesome. So, [4170] the last thing I'm going to do, I don't [4171] call any build done until I test it end [4173] to end. So, I'm just going to remove the [4175] pin data here. [4177] Sorry. You got to go up here, top right [4179] hand corner, click unpin, then click [4182] unpin. Then what I'm going to do is I'm [4184] going to test this workflow from start [4185] to finish on actual data. If we double [4188] click on this, it's listening for a test [4189] event, so we have to actually go fill it [4190] out. I'm going to go back to my [4191] calendar. Now, I'm just going to make a [4193] second test booking at like a slightly [4194] different time. Let's open up a tab here [4196] and let's do it. Uh, we'll go 2 p.m. [4199] This will still be Nick. Well, let's say [4201] Sally. Oh, what did I say? Lozen or [4203] something. I forgot what her last name [4204] was. I think a lozenge is a thing you [4207] put in your mouth when you are [4209] sick. Okay. Anyway, [4211] confirm. This is now going to go through [4213] the booking flow. Go on my calendar. [4216] Apparently, book me. Uh, and then if we [4218] go over here, you'll see we just pulled [4220] in the data with Sally Lozenge. [4222] Apparently, if we go to our ClickUp, [4224] we'll go down here and we'll see Sally [4225] Lozen was now put in, which is pretty [4227] neat. So, yeah. Um, that's that for our [4230] third NN example. And just to cover [4232] things, what we did here was we didn't [4234] just learn how to use an app trigger [4236] like cal.com do an API connection using [4239] an API key. You know, send emails and [4242] stuff, but we also learned how to [4242] reference data a couple of nodes back, [4244] which is very important. And ultimately, [4246] you know, most of the complex flows that [4247] have value will be you referencing data [4249] from all over the freaking place, not [4251] just the previous node. So, I hope that [4253] this makes sense. What I'm going to do [4254] is I'm going to save this and I'll make [4256] this accessible for you guys to play [4257] around with. Note that we do not have [4258] the trigger nodes in this. That's okay. [4260] You guys now, if you've made it to this [4262] point of the video, know everything you [4263] need to know to get to the same point. [4264] Future videos, as I mentioned, are going [4265] to be covering a lot of the more code [4267] oriented stuff that I just did here for [4269] that last section with the IDs and the [4271] JSON and the dot notation in detail, [4273] just so you guys can add fuel to the [4275] fire and, you know, get a lot more [4276] competent with NAN and no code in [4278] general. Great work uncovering that [4280] first section. You now hopefully [4281] understand what NAND is, how to get set [4283] up on the platform, and even how to [4285] build some simple but useful workflows. [4288] But if you guys really want to [4289] understand NAND and not just NADN but no [4291] code in general, you need a little bit [4292] more knowledge in terms of logic data [4295] handling and then the ability to [4296] manipulate some of the data that we've [4298] seen already. That's what this next part [4300] is all about. We're going to dive into [4301] some more foundational concepts to [4303] separate maybe the NADN automation [4305] entrepreneur who is solely restricted to [4307] copying and pasting blueprints from the [4309] internet to somebody that can actually [4311] build templates of this kind out on [4313] their own. Just a quick note before we [4314] dive in. If you're serious and want to [4316] turn these technical concepts into a [4318] real business, definitely check out [4320] Maker School. It's my Noode AI [4322] automation community with daily [4323] accountability that shows you how to [4325] take this skill set that we're [4326] developing right now and actually put it [4327] in front of real customers. I have over [4329] 2,000 members in the community as of [4331] right now. We get new wins, thousands of [4334] dollars closed every day. And if you [4336] guys want the straightest line path [4337] between somebody that doesn't understand [4339] any of this to somebody that is actively [4340] running and managing a successful and [4342] thriving AI automation business, there [4344] is no better way. Anyway, whatever you [4346] do, let's dive into the next part. So, [4348] if you guys have seen some of the other [4349] videos on my channel, you'll know that I [4350] put a very big emphasis on building [4352] things practically. I don't really care [4353] much for the academic side of things. I [4355] prefer we just dive right in and then [4356] teach some of these concepts by actually [4358] putting nodes together, making workflows [4360] that you could sell for business [4361] purposes or implement into your own [4362] companies. And that's what we're going [4364] to be doing today. We can't really get [4365] away from doing some of the academic [4367] stuff with JSON just because, you know, [4369] if you don't know JavaScript object [4370] notation, you are going to have to learn [4372] some things like types and objects and [4374] what variables are and stuff like that. [4375] But for the most part, we're going to be [4377] learning all of these concepts down here [4379] by building two workflows. The first [4381] workflow is up here. And essentially [4383] what this does is it feeds in a bunch of [4385] lead data to artificial [4388] intelligence. This is the Google sheet [4390] containing four leads with a bunch of [4392] information here. So, we're going to [4392] feed in this information to AI. Then, [4394] what we're going to do is we're going to [4395] have AI generate a subject line for an [4398] email, an icebreaker for an email, an [4399] elevator pitch for an email, a call to [4401] action, and then a post script, little [4403] PS sign. The idea here is this is a real [4406] workflow that people pay me for. And so, [4407] these are the ones that I want to I want [4409] to start with. Essentially, this will [4410] allow you to customize email outreach [4412] that it seems as if you've done a lot of [4413] research into the person. Uh, which is [4415] very very valuable in a business [4416] setting. The second workflow is a little [4419] bit more peculiar, I guess. There's this [4421] service out there called source of [4422] sources. It used to be called helper [4423] reporter at Haro. Basically, the way [4425] that it works is this lovely gentleman [4427] here, Peter, will send you uh a bunch of [4429] information basically where journalists [4431] are looking for professionals in a [4434] certain industry to weigh in on some [4437] developments and then if you're a [4439] professional in the industry and you [4440] give the journalist some good info, they [4442] can actually tag you and then like use [4443] you in an article. It's quick and easy [4445] way to basically get listed in a [4446] magazine or some very authoritative data [4448] source. And what this system does is it [4450] basically gets an email like this. Then [4452] it pumps in the titles into AI, does [4455] some cool processing, and then we [4456] actually write a draft of that email as [4458] if we were an expert in that field, [4460] which all you need to do is just like [4461] quickly review, give a once over, edit a [4463] little bit, and then send off to [4464] journalists. There's another system that [4465] I've sold a number of times. And so I [4467] want the videos that I create on NAD to [4469] be practical in nature. I want them to [4470] be on things that you're probably going [4472] to be using for business purposes. So [4473] these are the two systems that uh we're [4474] going to be building. They're cool [4475] systems and all, but you know, for the [4477] purpose of this video, I kind of want to [4478] build them from scratch. So, why don't [4479] we just exit out of that puppy? That's [4481] the prompt that we're going to be using [4482] for AI. And for the rest of this, we'll [4484] just get rid of that. Okay. The very [4486] first concept I want to cover are fixed [4488] fields and expression fields. I'm going [4490] to be basically convincing you to just [4491] use expressions all the time. And I'm [4492] also going to show you how to map [4493] different field inputs cuz the last time [4495] that we jumped around Nadn, we built a [4497] couple of workflows, but I was sort of [4499] glancing over a couple of the um like [4500] some of the nuance behind fields and [4502] stuff like that. So, for the purposes of [4503] demonstration, it's going to be pretty [4504] easy. We're just going to build the [4506] first system out by clicking a button [4508] that is going to get a bunch of data [4511] from our Google sheet, and then we're [4512] just going to pass all of that data in [4514] kind of rowby row into AI. Pretty [4516] simple, pretty straightforward, but [4517] ultimately something that is very useful [4518] and you'll find yourself doing quite a [4520] bit if you do cold outreach. So, first [4522] things first, I'm just going to press [4523] tab. That's going to open up this [4524] trigger thing on the lefth hand side. [4526] And then, you know, if you type trigger [4527] here, there'll be if you type trig, I [4529] should say, you'll see a ton of options [4531] here. Um, you could either do that or [4532] you could just scroll down to the bottom [4533] where it says add another trigger and [4534] then press trigger manually. Either is [4536] fine, but for the purposes of demo, I'm [4538] just going to do that. And basically [4540] what I want to do is the second that I [4542] run this trigger when I click on test [4543] workflow, um, I want to uh, get all of [4546] the rows and all the data in my Google [4548] sheet. So, I'm going to go up here to [4549] nodes. I'm just going to type in sheet. [4550] We're going to get Google Sheets. Now, [4552] what I'm going to do is if you scroll [4554] down here, you'll see that there's this [4555] one node called get rows and sheets. [4558] That's what I'm going to click on. Now, [4559] I've already done a connection before. [4561] Um, what you're going to have to do if [4562] you want to connect to your Google [4563] Sheets account is go to create new [4565] connection. Now, because I'm on the [4566] cloud hosted offering, and keep in mind [4568] if you're not on the cloud hosted [4569] offering, um, these sorts of connections [4570] are a little bit more difficult. You [4572] have to go to Google Cloud Console and [4573] get set up there. But because I'm on the [4575] cloud hosted offering, all I need to do [4576] is click sign in with Google over here, [4578] and I'll actually go connect to my email [4581] account, and then it'll create a [4582] credential for me, which is pretty [4583] handy. So you can see it's saying it's [4586] already has some access just because [4587] I've already done this connection. But [4588] for the purpose of this demo, I just [4589] wanted to show you guys what that looks [4591] like. And then I'm just going to save [4593] this connection here with a name so that [4594] it's just nice and organized. Okay. And [4596] what we want to do is we just want to [4597] grab this Google sheet up here. Right? [4599] So in NAN there are variety of ways to [4602] do this, but I'm just going to I'm going [4604] to be looking for a document. Sorry, a [4606] sheet within a document. My bad. The [4608] document we're going to want to select [4609] is from the list. And we're actually [4610] going to go down. We're going to choose [4612] this one called leads, comma, space, [4614] January 27th, 2025. So, as you can see, [4617] we have already manually found that. [4619] Okay. And then the specific subshet that [4622] we want is this sheet one because I [4624] guess that's the only one that we have [4625] here. So, I'm just going to click on [4627] this. It's going to actually do an API [4628] call to Google Sheets. It's going to [4630] find that there's only sheet one here. [4631] Then I can give it a click and then [4633] voila. Let me just run test step and [4635] let's see what happens when I click [4637] test. Okay, great. So, I've offiscated [4639] this data. This data is not um actually [4641] one for one whoever this this person is. [4643] I've gone through and I've like renamed [4645] them and stuff like that just for [4646] privacy purposes. But as we see on the [4648] right hand side here, we we have a bunch [4649] of output and we can see the output in a [4651] variety of ways. Tabular JSON schema. [4654] Most people and they like the schema [4656] look because it just kind of compresses [4657] the information nicely. It's a little [4659] bit easier for them to see. I'm a little [4660] zoomed in here too. Um but uh yeah, you [4663] know, normally like you see most of the [4665] node variables which is pretty handy. [4668] But this JSON one over here, this is [4670] really intimidating for a lot of people. [4671] And so we're we're going to cover this [4672] in detail. I'm going to show you exactly [4673] how you read JSON, what all those things [4675] mean. But just I just want you guys to [4676] know that for the remainder of this [4678] course, I'm going to be using primarily [4679] the JSON and the schema view. But I'm [4681] actually going to tend towards JSON. And [4682] the reason why I'm going to be tending [4683] towards JSON is because like JSON says [4686] all the same stuff that the schema view [4688] does anyway. But unfortunately, part of [4690] the way you learn JSON is just by kind [4691] of staring at it a lot and squinting at [4693] it and kind of inherently and [4694] intuitively understanding the [4695] formatting. If we're going to be looking [4696] at outputs all day anyway, we might as [4698] well kind of get, you know, kill two [4699] birds with one stone. All of the same [4701] data in JSON is represented in schema [4703] anyway, it's just instead of like the [4705] quotes around key names and stuff, you [4706] just have sort of this light gray box [4708] alongside like a type sign here. So, I [4711] guess the point I'm making is we might [4712] as well double up and just learn how [4713] JSON looks while we're proceeding with [4715] the course. Um, and that's why I'm going [4716] to be using this. Even if it looks a [4717] little bit more intimidating, don't [4718] worry too much about it. Okay, so I said [4719] that I'd talk about fields, right? So [4721] fields in N&M just as I was covering on [4723] the previous video are stuff like this [4726] right we have this sort of center node [4728] config option here for our Google sheets [4730] node um you know one of the fields we [4732] selected was this YouTube credential to [4735] connect with another one was this [4736] resource sheet within document operation [4739] document sheet but I want you to know [4740] that these are actually all [4742] representable in code as well so as you [4746] see over here we have two different [4747] types of fields one's called fixed and [4749] the other is called expression [4751] So, by default, just to keep your life [4753] easy and to not like freak you the hell [4755] out, especially if you're like a newbie [4756] in NN, um they're going to keep all the [4758] fields to the fixed type. But if you [4760] click on [4761] expression, you'll see that things are [4763] now a little bit different. Notice how [4766] when I went to fixed, we had like a nice [4769] little, you know, it said um leads [4770] January 27, 2025. And then when I jump [4772] over to expression, now we have some big [4774] long ID. So, what is this? Why is it [4777] structured that way? And what exactly [4779] does any of this mean? Well, if we pay [4781] close attention, this ID field here, 1 [4784] lowerase o t r r r r r r r r r r r r r r [4786] r r r r r r r a t4 C capital C and then [4788] the rest of this big long ID string over [4790] here. If we go to our Google sheet, what [4793] you'll see is that that ID string [4795] actually matches the URL of our Google [4796] sheet [4797] exactly. This takes me to a wider point. [4800] Most of the time, sorry about that. Most [4802] of the time, anytime you're accessing a [4803] resource on some API or even just on the [4806] internet, they will store the ID of the [4808] resource, which is sort of like a hidden [4810] representation of it, in the URL. So, [4814] you know, one of the examples that I [4815] provided the other day was I went over [4816] to ClickUp, right? And inside of [4819] ClickUp, I like searched around for some [4821] record. I'm just going to click on this [4822] here. This is this was my old content [4823] calendar. Um, how to send 1,000 cold [4826] Instagram DMs per day. That was one of [4827] the things I wanted to do. This right up [4829] here is the ID of the record. [4833] 86B27A7Zm, right? If I wanted to do [4836] something with this through their API, [4837] this is the ID of the record that I [4839] would be calling. So, I want you to know [4841] that like ClickUp, uh, Monday, uh, like [4843] even Gmail, basically every service out [4845] there, they will store the ID of the [4847] thing you want to modify or update or [4849] whatever just in the URL. So if ever a [4852] field asks for an ID, you can almost [4854] always just go to the URL of the thing [4856] on the actual user um you know on the [4858] actual app like the user interface. Then [4860] you can find that URL thing. You just [4862] hardcode it in here. Okay. So that's [4864] just a just a brief look at some of the [4866] differences between fixed and [4868] expression. Basically fix a lot of the [4869] time just to to keep you guys um to make [4872] sure that like we're on the same page [4873] here. Fix is just the simpler version. [4876] Then expression is sort of what's [4877] actually going on under the hood. So, [4879] you know, um, NAND just defaults to fix [4881] like it just did here because it doesn't [4884] really want to scare you away. But in [4885] order to really unlock the value of NAN, [4888] we have to go to the expression, um, [4890] field. And I'm going to show you here [4891] why, you know, I basically just use [4892] expression for everything at this point. [4895] Okay. So, looking at the output here, [4897] what we have is we have we clicked and [4899] then we got a click event that was [4900] counted as one item. And so, N8 actually [4902] shows you the number of items that are [4904] passed on. Then we pumped that click [4906] event into Google Sheets and then that [4908] click event outputed four items. So now [4909] we actually we're working off of array [4911] data or tabular data which I'll cover um [4913] in a moment. But essentially with these [4916] four items now what we want to do is we [4917] want to pass each of these items into [4919] artificial intelligence and we want to [4920] have AI tell us something about it [4922] before um writing some cold email copy [4925] for us to insert into an email or maybe [4926] we could just send a Gmail directly or [4928] something. So what I'm going to do is [4929] I'm going to click on this button. I [4931] zoom out a little bit. What we want is [4933] we want um if you go down advanced AI, [4936] we want is we want this open AI node. [4938] And specifically what I want is I want [4940] the message a model. So if you've seen [4942] me connect this in the previous video, [4944] you'll notice that you know in order to [4945] create a new credential, you actually [4946] have to go and you have to find the API [4948] key from OpenAI in order to do this. [4950] This is pretty simple to do. You just [4951] type [4953] platform.openai.com/ I think it's like [4955] account/appi or something. You'll have [4956] to click on this button here to open the [4958] documentation to tell you more. But [4960] anyway, you can basically just create an [4962] API key for N8N. Um, it's very simple [4964] and very straightforward to do so. And [4965] I've already done this and I've called [4967] it YouTube. So, I'm just going to use [4968] that credential just so I don't have to [4970] like leak another API key. Now, again, [4972] we have a ton we have a ton of fields. [4974] We have resource text operation message [4976] model from list choose. Keep in mind the [4979] fields are again fixed, right? It's [4981] trying to make it really easy for us to [4982] select GPT40. So, I'm just going to go [4984] down here, type [4986] GPT four, and then I'm just going to [4989] click 40 O. And now we actually enter in [4991] the text that we're interested in. Okay. [4994] And this is really where you're going to [4995] start learning the differences between [4997] the fixed and the expression. So fixed, [4999] again, fixed is just I mean, it's what [5000] the name implies. It's fixed. It's text. [5002] You can't make this dynamic. You can't [5004] add variables to it. It's the simplest [5006] way to get up and running with a node, [5008] which is why NAND will default to fixed. [5010] Um, but over the course of the next few [5011] minutes, I'm going to convince you to [5012] basically always just use expression. [5015] Okay. So, I I saved my prompt somewhere [5017] else. The first thing I'm going to do is [5018] I'm going to add a system prompt. So, [5019] I'm going to go down here to system. [5020] I'll just say you are a helpful [5022] intelligent writing assistant. Usually, [5024] the way that you will do um AI calls is [5026] you will have a system prompt first. [5029] Then you'll have a user prompt after. [5031] And the user prompt is where you [5032] actually give it the instructions you [5033] want it to do. So, you know, in our [5035] case, it's going to be like, hey, I want [5036] you to write a bunch of fields that are [5037] templates that we're going to insert [5038] into a cold email later. And then after [5039] you have the choice to provide a bunch [5040] of examples. So you could provide an [5041] assistant prompt and then you could do [5043] another user prompt. Assistant prompt. [5044] User prompt. Assistant prompt. You can [5046] do that however many times you want just [5047] to show it how things work. For the [5049] purpose of this example, I'm just going [5050] to be providing a single user prompt. [5051] And what I'm going to be doing here is [5053] I'm just going to copy over my prompt [5055] below. Let me paste that in. And let's [5058] just read through this together. Your [5060] task is to personalize an email. You'll [5062] do this by taking as input a prospect [5064] LinkedIn profile. Then editing five [5066] templates for different sections of the [5068] email. Subject line, icebreaker, [5070] elevator pitch, call to action, and a PS [5072] or postcript field. If you're unfamiliar [5074] with postcript, you know, at the bottom [5075] of an email, it'll just say PS, I really [5078] miss you. Can't wait to see you. That's [5080] what a postcript field is. We basically [5082] want AI to automate that for us because [5083] there's a lot of value in making those [5085] postcript fields seem human written. [5088] Anyway, now we're offering it some [5089] templates. subject line. Hey, name I [5092] think I have something for you. Re and [5094] then cool thing about them that we [5096] discovered. Let's just go unique thing [5098] about them or their company. Icebreaker, [5102] I know you're doing thing and I've been [5104] following related thing for a while, so [5106] I figured it made sense to chat. Next [5108] elevator pitch, the TLDDR. I think I can [5110] add 5K a month to their paraphrase [5113] business with a few automated systems. [5115] And then there's a call to action. I [5117] just did this for a very similar [5118] industry company and we had 28,350 in a [5121] few months. They do related things. So [5122] I'm very confident I can duplicate this [5124] at minimum. Would be 100% risk-f free. I [5126] guarantee at least 20 appointments [5128] booked or you wouldn't have to pay. [5130] Pretty neat, huh? So then I give it a [5132] bunch of guidelines. And feel free to [5133] pause the video if you want to take a [5134] look at it. The last thing that I do is [5136] then I say respond in JSo N using this [5140] format. And if you've at all used AI [5142] before, you'll see this JSON thing come [5143] up again. JSON. JSON. JSON. We're going [5145] to cover that in just a few minutes, so [5147] buckle up. Okay, great. So, we've given [5149] it a ton of uh instructions in the first [5151] user prompt. So, what I do next is I [5153] just give it a user prompt with the [5156] actual body of the input that I want to [5158] give. And if you think back here, um you [5161] know what this Google sheet is just just [5162] so you guys um are all on the same page [5164] as me, is I've basically gone and I've [5165] scraped a bunch of data about random [5167] people on the internet that fulfill some [5169] criteria that I have. So, chief [5170] executive officer, director of demand [5172] generation, director of marketing, [5173] business development, manager, some [5175] dentistry person or something. Okay. And [5177] then I have a bunch of fields here. One [5179] of the fields I have is I have a summary [5180] field where people basically write their [5181] own summary of who they are and what [5183] they care about. We have a ton of other [5184] fields as well. We have company [5185] location. We have a description of their [5188] title. We have um I don't know their [5190] their industry. And the cool part about [5192] AI is you can just feed this into a [5193] large language model and have it have it [5194] automate something for you. Have it have [5196] it write something customized. And so [5198] that's what we're going to be doing [5199] here. The thing is though, right, how do [5202] I get dynamic data into this? So, I [5204] don't know, let's say um one of the [5207] things I want is I want to feed the AI [5208] the person's full name. Notice how this [5210] is fixed here, right? If I just typed [5212] Amy [5213] Wabe, then that means that every time I [5216] do an API call that includes their full [5218] name, I'm going to have it say Amy [5220] Wabby. This is fixed. It's the same [5221] thing every time. If you want to make [5223] this dynamic, what you have to do, there [5225] are variety of ways to do this, but I'm [5226] going to use the expression field, is [5227] you have to click [5228] expression and then you drag the field [5231] that you want and then you drop it. And [5234] you'll see that when I do that, we've [5236] now just inserted a little bit of code. [5239] This is in N8N's [5242] um code format, the equivalent of the [5245] variable that we just pulled from our [5247] pinned data or our our data from the uh [5249] input. And what you see down here is [5251] this is separated into two halves. The [5253] top half is the code representation. We [5256] said full name just in like regular [5257] characters. And I can manipulate this [5259] how I want. Then a colon, then a space. [5261] And then there's uh curly bracket curly [5263] bracket space dollar sign Js N. FU L N A [5269] M E space. And then a right curly [5271] bracket right curly bracket. Up here you [5272] have the code representation. And then [5274] notice that underneath here we have [5275] result. It actually shows us what the [5277] data that we're pulling in is from the [5279] input, which was right over here. Now, [5282] I'm going to be feeding it a bunch of [5284] data in order to have this personalized. [5285] I'm going to be feeding in their full [5286] name. I'm going to be feeding in the [5287] summary. I'm going to be feeding in the [5288] title. But I just want you guys to to [5289] notice how these these variables change [5293] between the full name, between the [5295] summary, between the title. And you're [5296] going to notice that there's kind of a [5297] pattern there. Okay. So, full name was [5299] that. We'll go title. I'm just going to [5302] drag this [5303] in. Paste it in. Notice how the first [5306] one was jso nf full name. Second one was [5309] jso n.title. [5311] Right. Let's see what the third one is. [5314] Let's go down here to [5316] company. Company. If I drag and drop [5318] this now says JSON company. You know [5321] that the C is capitalized. That looks a [5322] little bit new, but for the most part, [5324] it's still pretty self-explanatory. It [5326] seems to me if I were an alien staring [5329] at this and looking to try and figure [5330] out what the pattern here is. It seems [5332] to me that every single time I drag and [5334] drop one of these fields in there, it [5335] says dollar sign JSo N dot and then the [5338] name of the variable. The name of the [5340] variable tends to be whatever I'm [5341] looking at on the left hand side here. [5343] So what if hypothetically instead of me [5346] doing this drag and drop what [5348] if I were to actually just try and write [5351] this myself? Well, let's see what [5353] happens. If I zoom in a little bit, just [5354] so we could all see. If I go curly [5356] bracket curly bracket, you'll see that [5359] I'm now entering sort of the next level [5361] up in NN. I'm now manipulating like code [5364] or JavaScript, their version of [5366] JavaScript, the JMSE path, I believe [5368] it's called, directly in the expression [5370] editor. And this is where N gets really [5372] powerful because you also have a ton of [5373] built-in methods and built-in ways you [5375] can manipulate this data with literally [5376] one click, one little button tap without [5378] having to drag and drop all these [5379] modules everywhere. You can just do so [5380] in the convenience of your own field [5383] editor. Okay, so the very first thing [5384] that pops up is it says suggested JSON. [5386] If I just type that and then I press [5387] enter, you'll see that now I have access [5389] to all of the fields that I had access [5392] to earlier. So instead of me dragging [5394] and dropping all this stuff, what if I [5396] just wanted to write the word summary [5397] here to grab this, if I just type [5399] summary, notice how this now turned [5401] green. And we've added all of that [5402] information down here to the results [5404] tab. All that information is here. How [5407] cool is that? So now, you know, if I [5410] want to continue on, I'll go industry. [5412] I'll go dollar sign JSON industry. [5415] Voila. Next, we're going to go company [5418] location. I'm going to go um JSON.co [5420] company location. Voila. Notice how it's [5424] trying to autofill this for me, right? [5425] I'll go title description dollar sign [5427] JSON dot to ital description. Voila. And [5432] I basically have the ability to do this [5434] um infinitely depending on how nested [5436] the data is in the JSON structure of the [5438] input. I I'll run through how to do all [5440] of that um in a moment, but I just want [5441] you guys to sort of pattern match, look [5443] from the outside in. How am I actually [5444] referencing all these variables from [5446] from previous [5447] calls? Okay, great. So, to me, you know, [5449] as somebody that does this sort of [5451] personalization all the time, if we [5452] click on this little button here, we can [5453] actually open up, we can see all of the [5455] um code and all of the text. To me, [5457] somebody that does this all the time, [5458] this looks like sufficient amount of [5459] information for us to personalize an [5461] email off of. So, I'm actually just [5462] going to call it there, and we're [5463] actually going to just run this puppy. [5464] But basically what's going to happen is [5466] we're just going to be feeding in all of [5467] this stuff to artificial intelligence [5469] and we're going to be saying, "Hey man, [5470] based off of all of Amy's info, I want [5472] you to tell me something about her." And [5474] then I want you to write an email um [5476] based off of the template that I [5477] provided you earlier. The last thing I'm [5479] going to do is I'm going to go down here [5480] and press output content as Jason. Give [5482] this a click. And then I'm not going to [5484] modify any of the options here either. [5486] Um but I'm just going to click test [5488] step. Okay. Okay, so what's just [5490] happened or what is occurring as we [5492] speak is I'm feeding in four items to [5493] open AI. I'm basically Blitz going item [5497] one, item two, item three, item four, [5498] and it's happening all at once before [5500] they show us the output of each of [5502] these. So that's why it takes a little [5504] bit longer than usual. Um, but this is [5506] more or less what's happening under the [5507] hood. Okay, great. And we just received [5509] an output. Um, so what I'm going to do [5511] is I'm just going to zoom out a little [5512] bit just so we could see this in [5514] completeness. And I'll use schema for [5516] now just to make it easier for you guys. [5517] doesn't you don't have to like scroll [5518] all the way to the right to see it, but [5520] let's take a look. Um, the output was [5522] content, subject line, icebreaker, [5525] elevator pitch, call to action, PS. So, [5526] it actually went it outputed five fields [5529] for us and we can use those fields in [5532] future nodes very easily. The first [5534] thing in the subject line was, "Hey, [5536] Amy, think I have something for you [5537] regarding boosting online strategies." [5539] The icebreaker was, "I know you're [5540] leading creative web solutions and net [5542] directives and been following innovative [5543] marketing strategies for a while, so I [5544] figured it made sense to chat." The [5546] TLDDR, I think you can add 5K a month to [5548] your client focused internet marketing [5549] efforts with a few automated systems. [5551] The call to action, I just did this for [5552] a very similar IT consulting company. We [5554] hit this amount. They do e-commerce and [5556] marketing, too. How cool is that? So, [5558] I'm very confident I can duplicate this [5559] at minimum. Would be 100% risk-f free. [5561] I'd guarantee at least 20 appointments [5562] booked. You wouldn't pay. P.S., even if [5565] we just chat, I'd love to hear about [5566] what you're doing with video marketing. [5568] That sounds pretty cool to me, right? [5569] And if I were to receive an email like [5570] this, you know, aside from the subject [5572] line, which is a little bit vague, [5573] boosting online strategies, but you [5575] can't fault the AI for not being perfect [5577] 100% of the time. Um, you know, even if [5579] I were to get something like this, it [5581] would seem as if, uh, you know, like the [5583] person that's reaching out to me did [5584] their did their research at minimum and [5586] is reaching out to me sort of in a [5587] personalized customized way as opposed [5589] to just like blasting me a big sequence. [5591] So, uh, what else do I want to do with [5593] this? Well, if you guys, you know, [5594] remember back to the beginning of the [5595] video, the there weren't just two or [5596] three nodes here. There was um there was [5598] a node that updated the Google sheet. So [5600] I'm going to show you how to update the [5600] Google sheet. And what we're actually [5602] going to do is we're going to take this [5603] one step further and I'm actually going [5604] to draft some emails to send to Amy and [5606] the rest of the people here. So actually [5608] the first thing I'm going to do is I'm [5609] just going to go over here and pin this [5611] output. The reason why is because if you [5613] think about it, me calling um OpenAI [5615] there, that was a little bit like [5616] computationally expensive. It took me a [5618] little bit of time. I don't actually [5619] want to have to rerun that over and over [5620] and over again. pinning the data just [5622] allows me to capture that, cache it, and [5624] now I can just like test all subsequent [5626] nodes using that, which is very [5628] straightforward. Okay, so what I want to [5630] do, I want to update this Google sheet. [5631] So I'm going to click here, search [5633] nodes, I'll type sheets, and what I want [5634] to do is I want to um update row and [5638] sheet. I'm going to select my [5640] credentials again, YouTube. The resource [5642] will be sheet within document. The [5643] operation will be update row. Let's [5645] instead of using the fix, let's actually [5647] just use the expression so I could show [5648] you how this works. Just going to grab [5650] the ID of this field or of this sheet. [5653] Paste that in there. Voila. Then the [5655] sheet that I'm going to be picking, it's [5656] just going to be sheet one. So notice [5658] that the top here we use the expression [5660] field view and then down here we just [5662] use the fix. So it actually use the [5663] expression field view to do an API call [5665] to their backend to discover that sheet [5667] one was the only sheet and then we [5669] selected it there. We can also just feed [5670] in an expression. And as you see when [5672] you go from fix to expression for the [5674] specific sheet type, it just says G [5676] equals Z. G equals Z just refers to the [5678] first sheet. um basically here. So we're [5680] we're always going to be selecting the [5682] first sheet. But anyway, for this I'm [5684] actually going to go from list and then [5685] I'll just go sheet one. Keep this [5687] simpler. Okay. Now it's going to be [5688] fetching a bunch of columns for us. And [5690] basically in order to do this update, [5692] what we have to do is um we have to grab [5695] the data from the previous nodes and [5696] then we have to update every single [5698] column here with that data. If I were [5700] just to, you know, scroll all the way [5702] down and update the columns that I care [5704] about, like subject, icebreaker, [5706] elevator, pitch, call to action, [5707] postcript, it would just leave the rest [5709] of these blank, which is kind of [5710] annoying if I'm being honest. But I [5712] don't want the rest of these to be blank [5713] and these to be filled. I want all of [5714] this data because I'm just going to [5715] import this into some cold email tool [5716] later, right? So, what we have to do is [5720] now, this is kind of the initial idea [5721] behind this system. I'm going to go [5723] through and I'm going to update every [5724] single one of these um using the [5726] expression tab, and then I'm going to be [5727] pulling data in. But I'm not going to be [5729] pulling data in from here. I'm going to [5730] be pulling data in from one node behind [5731] it. So you guys could see what it looks [5733] like in code basically. Okay. So the [5735] first thing we have to do is we just [5736] need a column to match on. In order for [5738] the automation to know which row should [5741] be updated, we have to find data that [5743] includes that email. So I'm going to go [5745] email. Then the first thing I'm going to [5747] do is I'm going to scroll down here to [5749] the previous node, not the OpenAI node, [5751] but the Google Sheets node, the one that [5752] like first listed us the data. I'm going [5754] to drag this feed that in there. And [5757] you'll notice that the format now looks [5759] different than it did before. [5760] Previously, we had a dollar sign JSON [5762] dot item. Right? Now we have a dollar [5765] sign and then a bracket single quote [5767] sign. The name of the node, another [5770] single quote sign and then another [5771] bracket. And then we go do [5773] item.json. So when you when you access [5775] node data from more than one node back, [5777] you have to use this new format here, [5779] which is kind of annoying, but you'll [5781] see how easy it is when we just like [5782] kind of copy paste and spam our way [5784] through. So, uh, how about this [5786] civility? I'm going to go to expression. [5788] I'm going to paste this in. Then, [5789] instead of email, I'm just going to go [5792] civility. How about this first name? [5795] Let's paste that in there. We'll go [5796] first name. How about this first name [5800] suggestion? Paste that in there. Go [5801] expression. Go first name [5804] suggestion. How about the last name? I'm [5807] going to paste this in there. Go last [5809] name. How about the full name? I'm going [5812] to paste that in there. Go expression. [5814] We'll go full name. How about the title? [5816] I'm going to paste this in there. I'll [5818] go title profile URL. So, you can see, [5821] you know, we're picking up the pace a [5822] little bit. It's getting a little bit [5823] faster and faster. [5826] Company, company, illegal [5831] name, company [5834] phone. And I'm just going to go ahead [5836] and um cut to me having actually filled [5838] all this stuff out just for brevity. [5840] Okay. Okay, elevator pitch, call to [5842] action. Looking good. And then last but [5846] not least, we'll do um I think it was [5848] just PS or was it a post script? Yeah, [5850] sorry, it was just PS for that. This is [5852] the one situation which uh the column [5854] name is a little bit different from the [5855] variable name down here. Okay, now that [5857] we're done with that, let's just quickly [5859] cover um just some little differences [5861] here in the formatting just so we can [5863] get a runup on the JSON, which I'm about [5864] to teach you. If you scroll all the way [5866] up here, you'll see that some of these, [5868] well, actually most of these followed [5869] this format. It was Oops, sorry about [5872] that. Let's go over here. It was um [5875] curly brace curly brace dollar sign the [5879] name of the node in single quotes dot [5882] item.json dot whatever the value was [5884] dots summary. In this case, this one was [5887] regular company URL. This one down here [5889] was VM ID. You'll notice that a few of [5891] these are actually a little bit [5892] different. a few of these in particular [5894] the variable names with spaces. They [5895] weren't just dot you know the name it [5898] was square bracket single quote and then [5901] the name of the variable that we're [5903] referencing. The reason why we had to do [5906] this instead of just doing the dot and [5908] then the variable name is because JSON [5912] in JavaScript object notation you can't [5914] query I mean the technical term is you [5916] can't query a key that has spaces [5918] basically just because spaces aren't [5919] really represented. So, you know, if we [5922] scroll down here to some of these [5923] variable names, first space name space [5925] suggestion, there's a bunch of spaces in [5926] there, right? So, the way that you get [5928] around this in uh NAN's formatting is [5931] instead of calling, let me get that [5933] specific example company legal name or [5936] was it uh first name suggestion. So, the [5939] way that you get around this is you [5940] can't just go first name suggestion cuz [5943] that kind of breaks the formatting here, [5944] right? The way you can get around this [5946] is two things. when you can make it so [5947] that the input data aka the columns in [5949] your Google sheet are all just one word. [5951] So if instead it was first name [5953] suggestion, this would be fine. You [5955] could also do something like first name [5957] suggestion. Some people do that format. [5958] I don't really like that. I don't know [5960] why. What I do is um called camelc case. [5963] It's kind of like a programming [5965] convention. And here we can get into [5966] like a a lifelong mutually assured [5969] destructive battle where some people [5970] prefer camel case, other people prefer [5972] underlining. Um, but I'm team Camel [5974] Case, so go team camel case. Um, [5976] instead, you know, if we want to [5978] represent the spaces, what we have to do [5979] is we have to go brackets here, um, [5982] single colon, first name, suggestion, [5984] another col, uh, another quote sign, and [5986] then another square bracket. So, don't [5988] don't sweat the small little formatting [5990] stuff too much. I just wanted to give [5991] you guys like the best way that I found [5993] to learn this is literally just to like [5994] spam a bunch of examples. Um, that's [5996] what I did when I was picking this stuff [5997] up. I didn't read a bunch of books on [6000] JavaScript object notation or [6002] expressions or whatever. I just spammed [6003] a bunch of examples. And the human brain [6005] is such that if you squint at it long [6006] enough, you'll sort of figure it out [6008] intuitively. Uh, okay, great. So, now [6009] that we've mapped all these, let's [6010] actually go and let's, um, let's update [6012] this data, right? That's the whole point [6013] of this. So, uh, now that we've mapped [6015] all the data, if I click test step, and [6016] then I go over here to my Google sheet, [6018] scroll all the way to the right, you [6020] see, and it just took us a second, but [6021] you see that we just, boom, we just [6022] updated all four of these [6023] simultaneously. Uh, we got the subject [6026] line for Amy, subject line for Joe, [6027] subject line for Mercedes, subject line [6028] for Susan. Same thing with all the [6030] elevator pitches, call to actions, [6032] postcripts. You'll see that the the the [6034] copy of the email is pretty similar, but [6036] um it it changes. So, this one's I know [6038] you're leading creative web solutions. I [6040] know you're le into leveraging customer [6041] voices. I know you're focused on [6042] building relationships. I know you're [6043] advancing digital dentistry. These are [6045] all basically like reframing or [6048] paraphrasing [6049] um the things that they said in their [6051] profile which ultimately uh you know is [6053] meant to make them go like oh okay this [6054] person did their research they read a [6056] little bit about me. So that's pretty [6057] cool. Um why don't we take this one step [6059] further now. Why don't we pin this and [6060] then I'm actually going to create a [6062] Gmail draft in my inbox just so we can [6064] see what's going on here. So I'm type [6066] draft create a draft. I'll connect with [6069] my Gmail credential and this is before I [6071] did the naming convention so it was [6072] probably number three. We're just going [6074] to create a draft. The subject line is [6077] going to be, let's just go to fix now [6078] that we know how to do this. It's going [6080] to be JSON dot uh subject right [6085] here. And then the actual message, it's [6088] going to be pretty interesting, but I'll [6089] show you I'll show you how we put it [6090] together. First thing we're going to do [6091] is we're going to go JSON dot. And then [6093] what I want to do is I want an [6095] icebreaker. [6097] Uh, sorry, I don't want an icebreaker. I [6100] want to go hi. And then I want to grab [6102] the person's name. So I'll go Jason [6104] first name right [6106] here. So hi [6109] Amy, then we have the the JSON [6111] icebreaker. Next up, I want to go JSON [6113] dot uh sorry dollar sign JSON dot and [6116] then what were we doing here? Was it the [6118] elevator pitch? Yeah, it was the [6119] elevator pitch. Paste that in there. [6122] Then we want to go dollar sign JSON dot [6124] what's the next one? Call to action. [6127] Beautiful. And we also want to go dollar [6130] sign JSON dot and I'm sure you guys can [6131] guess what the last one is, but very [6133] quickly make sure you do make sure you [6135] know u postcript. Now if we open up this [6138] thing in the bigger example window, [6140] you'll see the email says, "Hi Amy, I [6142] know you've been leading creative web [6143] solutions and net directives. Been [6144] following innovative marketing [6145] strategies for a while, so I figured it [6146] made sense to chat. The TLDDR, I think I [6148] can add 5K a month to your client [6149] focused internet marketing efforts with [6150] a few automated systems. I just did this [6151] for and even if we just chat, I'd love [6153] to hear about what you're doing with [6154] video marketing." I guess I actually [6156] need to add a PS sign here. And it looks [6157] like none of these have periods. [6159] Actually, I think this last one has a [6160] period, but not all of these do. So, [6162] just because I was a little bit um fast [6164] in kind of designing this and I didn't [6166] put periods over, I'm actually just [6167] going to add the periods directly into [6168] the expression editor. I'm go PS here. [6172] Okay. And now, if we open it up, this is [6173] what it looks like. We got periods [6175] everywhere. Cool. Wonderful. And then we [6178] have a little PS sign here. Even if we [6179] just chat, I'd love to hear what we were [6180] doing with video marketing. Very, very [6182] cool. Awesome. Awesome. So, now that we [6183] have that pinned data, um, why don't we [6185] just draft these emails? So, I'm going [6187] to, uh, create a draft. I'm not actually [6189] going to send this cuz I don't just want [6190] to spam a bunch of these people. I've [6191] also changed the email address and [6193] stuff, so I'd get a bunch of bounces. [6194] We're just going to test step. It's [6197] executing. We just executed four nodes. [6199] So, now if I go over here, go to [6201] drafts, you'll see here that we have, [6204] "Hey, Susan, think I have something for [6205] you. Red digital dentistry." Oh, gez, [6207] I'm realizing I didn't put the um email [6208] address in actually. Yeah, I did not put [6211] the email address in. I just did the [6213] draft. U in options you have to go to [6215] email. And then what we want to do is we [6216] just want to drag that back here. JSON [6218] email to get that address. Let's create [6220] four more drafts just for shits and [6222] gigs. Then why don't I just delete the [6224] ones that I just generated uh right over [6228] here. Going to just discard [6230] these. And then you see that the four [6233] that I just did now have just popped up. [6234] And they also have the email addresses [6237] there. So yeah, that's that with that [6239] example. Um, I think at this point you [6241] guys probably have an intuitive [6242] understanding of how these fields work. [6244] And hopefully I've made a case for why [6246] you should just always use expression. [6247] Like there's no real need to do fixed [6249] because if you think about it, like you [6250] could just write the same fixed thing. [6252] Like if I wanted to type, hey, think I [6253] have something for you regarding [6254] marketing strategies. And I just wanted [6256] to send the same thing every time. I [6257] could do so with the expression view of [6259] the field, right? Like same thing. It's [6261] just here I also have the ability to u [6264] modify uh code a little bit and like do [6266] something if I wanted to. So, I [6269] personally am always going to be using [6270] this moving forward. And the reason why, [6273] sorry, it can be kind of a lot to see if [6275] you muck around with. Just always put a [6276] dollar sign first if you're referencing [6277] data from the previous node. Uh, and the [6280] reason why is it's just going to be the [6281] easiest for me. Um, you know, you get [6283] all the variables up here anyway. It's [6284] no big deal. So, we're doing subject. [6286] Stick that in there. We got the subject [6287] line. We are good to [6289] go. So, uh, I think we probably learned [6291] a fair amount about the fixed fields and [6293] expression fields at this point. Um, the [6295] last thing I wanted to cover, I say [6296] mapping different field inputs to it. [6297] The last thing I wanted to cover was uh [6300] if we go back to Gmail [6302] here and if we scroll down to actually [6306] this is a bad example. Why don't we go [6308] back to open [6309] AI? You see here how um I selected the [6313] RO field and it was fixed and then I [6315] selected from a dropown user assistant [6317] system whatever. Well, I can actually [6318] just go expression and what you see here [6320] is this is just text that we are feeding [6323] this API the uh the node. We're actually [6325] just writing user. So instead of writing [6327] users, you could also write a system. [6328] This fix stuff. This is just made to [6330] make our life a little bit easier. But [6331] anytime you want to get the actual data [6333] representation, just move over to [6334] expression. So what are some examples of [6336] that? Well, like you see these simplify [6338] output and output content is JSON [6340] fields. We go to expression. You'll see [6341] that what we're actually passing is [6343] we're passing this true value. We're [6345] literally just writing true. Um output [6348] content is JSON. If we move it to [6349] expression, you can see we're actually [6350] just passing true here. For output [6352] content is JSON. The point that I'm [6354] making is um all of this is basically [6356] just um you know if we just strip away [6358] all of the basic simple stuff. You can [6360] start getting into what's actually going [6362] on behind the scenes. How we're actually [6364] communicating with these nodes. The way [6365] that we're actually communicating with [6366] these nodes in practice is we're sending [6368] the term true. Now the reason why this [6370] one has quotes around it I believe is [6373] because um true is a special case. It's [6375] called a boolean which I'm I'm about to [6377] cover right now. Um so I believe you [6379] need these quotes just for NAD to like [6380] not bug out at you. um just one of those [6382] unfortunate peculiarities of the [6384] platform. But that's that for fixed [6386] fields and expression fields. Okay, next [6388] up, let's talk more about JavaScript [6390] object notation. And if you guys already [6392] know JSON, if you've already [6393] experimented and and understand the [6395] various formatting types available here, [6397] feel free to skip on until we move on to [6399] how data in N8 is represented. Um should [6401] be about 15-ish minutes or so. Uh but [6403] for everybody in the audience that [6404] doesn't understand JavaScript object [6406] notation, I just want to go real deep [6408] into it and I want to make sure you [6409] understand everything about JSON because [6411] ultimately as opposed to a lot of other [6412] noode platforms, NAD it doesn't ignore [6416] code or try and shove code away. It [6418] actually embraces code. So understanding [6419] a little bit of some of the um code [6421] types like JSON for instance makes you [6423] way more powerful. This is really what [6425] like everybody that makes money with [6427] this platform uses. We just use JSON to [6429] send data back and forth. Um, and you [6431] know, if you don't know JSON, [6432] everything's going to be a little bit [6433] trickier for you. Okay. So, what's the [6435] best way to um intuitively understand [6438] JSON? Well, what I'm going to do next is [6440] I'm going to walk you through the [6441] various data types in JSON. Uh, I'm [6442] going to give you just like a a brief [6444] little um structure and format, and then [6446] we can actually just walk through JSON [6448] kind of step by step depending on [6449] different variables and stuff like that. [6451] So, I'm just going to go and type in [6452] JSON formatter. This is just the [6454] simplest and [6456] freesting platform I found online. As [6458] you can see, we got tons of ads in the [6460] middle here. you don't pay anything to [6461] use it, but basically what's happening [6462] under the scenes is behind the scenes is [6464] it's running um with every time you [6466] press a keystroke, it's just double [6468] checking to see if it's valid JSON. This [6470] is actually pretty useful for us because [6471] we can we can verify if something is [6472] indeed JSON or not just by looking at [6474] it. This isn't the only way to do it. [6476] Obviously, we could do a ton of [6477] different things. We could I could open [6478] up like a code platform like VS Code or [6480] something and do the same thing, but I [6481] just wanted to keep this thing [6482] accessible for all of us. All right. So, [6485] zooming way in here, um, just so I don't [6487] get ads in my face 24/7. So, what is [6490] JavaScript object notation? Basically, [6493] JSON um is just a way to represent data [6499] in a structured and standardized [6502] format that minimizes the number of [6505] characters and it also minimizes the [6507] ambiguity so that when we send data to [6510] and from some API or something, we could [6512] do so as efficiently as possible. [6515] So the way that JSON works, the way that [6518] you send and receive data is based off [6521] of two um two concepts. The first [6523] concept is a key. So I'm going to write [6525] a key here. This key is going to involve [6527] my name. The first name is going to be [6530] sorry um the the key name is going to be [6532] called first name. So the key is just [6534] you can think of it as like the name of [6535] a variable. So the variable is called [6538] first name, but what the variable equals [6541] is a whole different matter. And that's [6543] where the value comes [6545] in. So first name I'm going to set to [6549] Nick. So this here is proper or well [6552] formatted JSON. It's not yelling at us [6554] or anything like that. It's it's it's [6556] actually good, which is nice. So this is [6557] an example of one of the simplest [6560] JavaScript objects that you could build. [6562] It is a onekey uh one value object. The [6565] key being first name and the value being [6567] neck. You've undoubtedly seen examples [6570] of this before if you tried working with [6572] any noode or coding platform um you know [6575] nadn included. The thing is in JSON [6579] there are a few simple but consistent [6581] formatting quirks that you just have to [6583] pay attention to. So the first is there [6586] are variety of different data types. Now [6588] as you can see here what I've done is I [6590] have this open curly bracket and then [6592] close curly bracket. I have the key name [6594] over here, a a colon, that's just these [6596] two dots, and then I have the [6598] value, but what I've done is I've [6600] wrapped everything in these double quote [6602] signs here. So, first name, double [6604] quote, Nick, double quote. The reason [6606] why is because the data type that I'm [6608] going with here is called a string. It's [6610] actually a particular data type. A [6612] string is just like written text. Okay, [6615] so this is if if instead of first name I [6617] say ID, this here this is a string data [6621] type, but it's not like you don't only [6623] have strings available to you. Although [6624] a lot of platforms prefer strings, you [6626] also have a variety of other data types. [6627] Here's another data type we have access [6629] to. This is a number data type. It's [6632] numeric. So in order to um you know send [6635] and receive numbers, you don't actually [6636] have to wrap them in quotes. This red [6639] here just corresponds to it being linted [6641] or formatted or whatever by this JSON [6643] formatter as a number data type. So this [6646] is still valid JSON even though we don't [6647] have the quotes around this. Okay, this [6651] is not valid JSON, right? This does not [6653] mean anything because we're using string [6656] characters uh and we're inserting it in [6658] something that the software that we're [6660] going to be using NN is going to be [6662] expecting to be a number. So basic rules [6665] of thumb are uh you can't just write a [6667] string without wrapping it in [6669] quotes. And the unfortunate reality is [6672] numbers can be both numbers and [6674] strings. So three ways to do X. Maybe we [6678] call this titles, right? The three here, [6679] this is a number, right? But we are [6681] still wrapping this within the quotes of [6683] a string. However, this is different [6686] from this. [6688] And so in practice, the reason I harp on [6690] this is because uh in practice this [6692] usually doesn't matter that much. No [6693] code platforms will take care of like [6695] the type conversion for you between [6696] number to string. Um if you're using a [6698] number, if you're sending it as like [6700] just the three without the quotes around [6701] it, um for the most part, that's that's [6703] okay. You'll be able to use this as a [6704] string later on. But in like pure [6706] JavaScript and a couple of programming [6708] languages, you can't actually just like [6709] if you wanted to, I don't know, run a [6711] function after this that added a number. [6714] um you know maybe it was like here let [6717] me show you number of things then title [6722] template let's say I had some function [6724] where I wanted to add the number of [6726] things to the beginning of the title [6728] template so that it said three ways to [6730] create NAN flows five ways to create N [6733] flows 15 ways to create NAN flows some [6735] programming languages wouldn't let you [6737] do that in which case you'd have to [6738] convert this to um you know a string and [6740] then you could just go number of things [6741] plus title template equals 15 ways to [6743] create N [6745] flows. Okay, great. So, we've covered [6747] numbers. We've also covered uh and [6749] numbers, I believe they have some fancy [6750] name, int or or technically they could [6752] be floats. They could be a number of [6753] things, but um in our case, we're just [6755] going to go numbers. Next up, I want to [6757] cover a couple of additional data types. [6760] So, one of the data types is called [6762] bool. So, a bool stands for boolean. [6765] Boolean just means zero or one, true or [6767] false. So, true, see how this just [6769] turned into orange instead of gray. Um, [6771] true is an accepted bool and you don't [6773] actually need to wrap uh quotes around [6775] this true in order for it to technically [6777] be valid JSON. Now, for the most part, I [6779] will always just wrap quotes around all [6780] this stuff anyway because as I [6781] mentioned, they do type conversions and [6782] it doesn't really matter to me too much. [6783] But I just wanted you guys to sort of [6785] explain why sometimes you see stuff that [6787] is not wrapped in quotes, and that's one [6789] of them. You also have a few higher [6791] level data types. And one of the higher [6793] level data types um that I'm going to [6794] show you guys, I'm going to show you [6795] two. The first is I'm going to show you [6797] an array. An array looks like this. It's [6798] with square brackets. So you have a left [6800] square bracket and then a right square [6801] bracket. Then the other is another [6804] JavaScript object. And the really cool [6807] part about JSON is you can infinitely ne [6809] nest different data types within the [6811] values of uh of a key. So, I could [6816] theoretically wrap an array, which is [6819] just a number of things. And then inside [6822] of that [6822] array, I could wrap a number of other [6826] JavaScript objects that go infinitely [6828] deep. And I'll show you guys how to do [6830] this in practice. But maybe we'll just [6832] go items. Then here we'll go first name, [6835] Nick. Here we'll go first name. And [6838] we'll go Sally. Then here, uh, let's [6840] just do two so I don't run off the page. [6842] So now what we've done is we've created [6844] JSON where we have a key called items. [6849] Then inside of said key we have an array [6852] and inside of set array we have two more [6854] objects. Both objects have the key [6857] called first name and then they have [6859] different values. The first has a value [6861] of Nick, the second has a value of [6863] Sally. Now to make people's lives easy, [6865] usually the way that this works is you [6867] will do some level of uh formatting like [6870] this string formatting just to make your [6872] life really really easy. You'll be able [6874] to [6875] see like where the item starts and then [6878] there's usually like a fair amount of [6879] indentation and I don't know the exact [6880] amount of indentation but usually it [6882] looks something like this. Now at a [6884] glance you can kind of see the structure [6885] of this. It's sort of nested. You have [6887] um this top level array and inside of [6889] the array you have two objects. First [6890] name Nick, first name Sally. [6893] Okay, great. So, let's create a [6895] hypothetical JSON object. And just [6897] because I know the most about myself, [6898] I'm going to be creating this for [6900] myself. Let's hypothetically just create [6902] a JSON object. And let's just do like a [6903] user object. Okay. So, what I'm going to [6906] do is I'm going to go user. That's going [6908] to be the key name. Then I'm going to go [6910] uh colon. And then I'm going to create [6913] another [6916] object. Inside of my user object, I'm [6918] going to have first [6919] name. First name is Nick. We have a last [6922] name. My last name is [6925] Sarafh. Um I'll have city. My city for [6929] the time being is Calgary. I'll have [6932] um foods he enjoys or foods, let's just [6938] call it food preferences, right? Cuz if [6939] you say foods he enjoys, now you're um [6942] insinuating that has to be a he. And [6943] then what if you add a user in the [6945] future that is a woman? Do you want to [6946] change the key name? No, obviously not. [6948] So food preferences, I'm just going to [6950] add an array. And inside of my array are [6951] going to be a bunch of strings. So, one [6952] of my food preferences is um I don't [6954] know, [6955] Thai. I'm going to have another one that [6958] is uh I don't know, like Japanese. Okay, [6961] so I like Thai food and I like Japanese [6962] food. Apparently, I like absolutely [6964] nothing else. I have a very strict diet. [6966] Okay, cool. And then why don't we add [6969] um let's just add one more. And then I'm [6972] just going to add one called friends [6974] hypothetically. Um but because as we all [6975] know, I have absolutely no friends. Um, [6977] and then inside of friends, we're going [6979] to add a another object. We're going to [6981] add an array. And inside of that, we're [6984] going to have first name. We're going to [6985] have Peter, my uh dearest and longest [6988] friend, of course. Thank you, Peter. [6990] Then underneath that, we're going to [6991] have um last [6995] name Griffin because I am now [6999] uh loving family guy. And that's one of [7002] my friends. And then I'm just going to [7004] copy this over. I'm going to add a a [7006] comma because you need a comma in [7007] between all items in an array and also [7008] all items in an object. So, we have our [7011] object here. It's a pretty intense user [7014] um object. We have a first name, last [7016] name, the city the person lives in, the [7017] food preferences, we have a list of [7020] friends, right? The reason why I go into [7022] this much uh detail here to create this [7024] object is just because I want to impress [7025] upon you that you can make an object [7027] arbitrarily detailed. You can make it as [7029] detailed as a human being could ever [7030] possibly want. And a lot of the time [7032] you'll see that these APIs that you're [7033] accessing, these these calls that you're [7035] making to these different nodes that [7036] return you data about a particular [7038] software platform, they will be really [7040] really deep and they will have nested [7042] data like six or seven things uh levels [7044] deep essentially. So the easiest ones to [7047] use in my experience are just the ones [7049] that are all um you know surface level. [7052] You just have like a user object and [7053] then a first name and then a last name, [7054] a city and then maybe some food [7056] preferences. But in practice, you know, [7057] we need to be a little bit more capable. [7059] And understanding how data is structured [7061] in JavaScript object notation is uh [7063] probably like half the battle to be [7065] completely honest. So, I believe I've [7067] covered everything I wanted to cover. [7068] The last thing I'll mention is um you [7070] can't have a comma, I believe, be the [7072] last Yeah, it doesn't allow you to have [7074] a comma for the last item in an object [7078] or an array. So notice here how we have [7079] a curly bracket, then we have the key [7081] name user, then we have another object [7083] sign, and then we have the key name and [7085] then the value. The key name and the [7087] val, the key name, and then the value. [7088] Between each of these, we have a comma. [7091] But just know that at the last item in [7094] an array or the last item in an object, [7096] you can't have a comma. So you just need [7098] to remove that. If I press format or [7099] beautify, which is just my button that [7100] tells me everything's okay. Um, then you [7102] see that it is indeed formatted and [7103] beautified. Everything's everything's [7105] all right. Okay, cool. So that's the [7107] meandering um you know that's sort of [7109] how to understand this stuff from a [7110] bird's eye view. Moving forward what I'm [7112] going to be doing is just to make our [7113] lives a little bit easier. I'm going to [7114] be showing you guys in every module or [7116] every node I should say on what the JSON [7119] is of the input and the output. The [7120] reason why is it's just going to make it [7121] a lot easier for us to ultimately you [7124] know reference stuff and then do cool [7125] things with the data. So I go back to [7127] our Google Sheets example from earlier. [7129] I'm just going to move the input sorry [7131] I'm going to have the output be JSON. [7133] And you'll see that in this case what we [7135] have is we have an open JSON curly [7137] bracket. Then we have a bunch of top [7140] level keys. So row number over here, [7143] well that's a key. And you can see that [7145] it's represented as a two. Very similar [7147] to what we talked about earlier, right? [7148] You'll notice that the formatting here [7150] is a little bit different. Notice that [7151] this one has an underscore and then [7152] these other ones are all camel case and [7154] some of these are capitalized. Because [7156] these are within quotes, none of this [7157] stuff really matters. But just showing [7159] you guys that there's a there's a [7160] variety of like conventions that people [7162] do. Some people like capitalizing [7164] things, some people don't. So my [7166] recommendation to you just to keep [7167] everything really clean and and expected [7169] is just to pick one format and stick [7170] with it. If you like the underscores, [7171] use the underscores for everything. If [7173] you like the camel case like me, use the [7174] camel case for everything. But anyway, [7176] civility is Mr. First name Amy. First [7178] name suggestion, it's empty. You know, [7180] when something is empty in JSON, you [7182] just use these quotes. Notice that every [7184] item here has a comma in between it. [7187] last name, comma, full name, comma, [7189] right? Just going all the way down. And [7191] then if I zoom out, I scroll, you'll see [7194] now what do we have here? This was just [7196] one item. So if I just click on this [7197] little blue left curly bracket, it'll [7199] actually nest the item for me. And [7201] you'll see that inside of this item are [7203] 38 other items, but it'll just nest it [7204] for me. And then I can see the next one. [7206] Now I can see the next one. Now I can [7207] see the next one. Right? We only have [7209] five. So that'll be it. But now I want [7211] to show you guys a little bit about how [7213] an format stuff because it's a little [7215] bit different than Jason I just showed [7216] you. But once you understand this, [7217] basically everything from here on out [7218] will be child's play. Notice how the [7221] very first character that you see on the [7224] output page on the JSON is a square [7227] bracket. Well, if you think back to the [7228] example that I gave you earlier, if we [7230] click out of this um Pizza Hut ad, as [7232] much as I love Pizza Hut, this array [7235] here starts with these square brackets. [7238] And so we see over here we have a square [7239] bracket as well. That means that this is [7240] an array basically. So the way that data [7244] is represented in NADN is all data on [7246] the platform is represented as an array [7249] of objects. Okay. So if I scroll down [7252] here to how data in NAN is represented. [7254] All of it is an array of objects. All of [7256] it will basically be those two square [7259] brackets on the outside of a number of [7261] items. And you could have as many items [7263] as you want. As we saw, we had four back [7265] over there. And inside of those four [7267] items, we had an additional 38 items [7269] nestled inside. But all data is an array [7271] of objects. Meaning that that's how you [7273] send and receive multiple objects. [7276] Remember at the beginning here we had [7277] one item. We just outputed a single [7278] variable there. Well, now after this [7280] Google Sheets call, we're doing four [7281] items. Those four items are represented [7284] in our JSON as an array inside of which [7287] is another object that has the key name [7289] row underscore number, civility, first [7291] name, first name, suggestion, and so on [7293] and so on and so forth. So all data in [7294] NAD is an array of objects. The number [7297] one gotcha that I always see when [7299] beginners start out with this is they [7301] end up not fully understanding how many [7303] objects the previous node is sending or [7305] the current node is receiving. And so [7307] then when they try and reference a [7308] particular item inside of the data [7310] structure, they find that it just [7312] doesn't exist or they need to like index [7313] it, they need to slice in to find a [7315] specific item inside of the array of [7316] items or some other problem. But this is [7319] the number one problem that I see in [7320] practice just running through reading [7322] like NA and help threads and stuff like [7323] that that people struggle with on this [7325] platform. So if you understand this the [7328] fact that all inputs and all outputs are [7330] an array of items represented as follows [7332] and now if you understand how to format [7334] JSON what JSON looks like and now [7336] further if you just make it so that you [7338] look at the JSON and not necessarily the [7340] table or the schema format every time [7341] you're sending and receiving data you [7343] will solve the biggest gotcha that [7344] people have within it's just going to be [7346] a lot easier for you moving forward to [7348] you know create flows. You're you're [7349] basically going to take so much of the [7351] load off that most other people spend [7353] like hours and hours and hours trying to [7354] debugging. um right from the get- go [7356] which is ultimately what I wanted to do [7357] here. Okay, great. So now we know that [7359] data in N8N is represented as an array [7361] of objects. So how do you actually [7363] reference that data? You guys remember [7364] earlier in that example here where we [7366] were using this Google sheet module? [7368] Sorry, this Google sheet node I should [7370] say. And if we scroll down here, we were [7373] updating a field using data not from the [7376] previous node but from a few nodes back. [7379] Well, basically if I go back to JSON [7381] here, what you can see is we can go one [7383] node back to open ad, two nodes back to [7385] Google Sheets, three nodes back to when [7387] clicking test workflow. Okay, let's just [7389] go to this Google sheet. In order to [7391] reference data, actually in this case, [7393] we will use the schema cuz you can [7394] actually see sort of them logically top [7396] to bottom. In order to reference data [7398] more than one node back, what we have to [7399] do, if we just want to redo this email [7401] one, we go curly bracket curly bracket [7403] dollar sign. Then what we want to do is [7405] we go this left round bracket. Then we [7409] have access to all of our earlier nodes. [7410] We can select the current node open AI, [7412] but we can also select Google Sheets. [7414] And we can also select when clicking [7415] test workflow we want is the Google [7416] Sheets. And then if you just dotindex, [7418] if you put a period, then you'll get an [7421] item. And the reason why I bring up this [7423] item is because basically all of this [7426] stuff is buried under this dot item [7431] syntax. And it's kind of annoying, but [7433] in order to reference, I don't know, the [7435] row number, what we have to do is we [7436] have to reference the Google sheet. Then [7438] we have to reference the item. Then we [7439] have to reference JSON. Then we have to [7441] reference the row number. Why? Because [7443] NAN actually hides some of this [7445] information from us. We don't actually [7446] see the nested data structure. All we [7449] see is the nice representation of it. [7450] Okay. So this isn't actually represented [7453] this way despite the fact that it looks [7455] kind of like it is. The way that this [7457] actually looks kind of underneath the [7459] scenes behind what NAN is showing us is [7462] it looks like this. And if you [7463] understand this, you'll understand how [7464] to reference basically any item in NAN. [7467] So this is equivalent to what we're [7469] seeing here. What we actually have is [7470] there's an additional two layers between [7472] us accessing the data through the dot [7474] thing. It's actually [7475] item.json and then we have the row [7477] number, stability, first name, first [7478] name, suggestion, stuff like that. Okay. [7480] So that means that when we want to [7481] access it kind of just just looking over [7482] here, the very first thing we have to do [7484] is we have to reference the Google [7486] sheet. Then think about it logically. [7488] Then we have to reference the item. So [7490] go item. Then we have to reference the [7493] JSON.js. [7495] And then we have to reference the row [7496] underscore number if we want to like [7498] that. And then we get that data. Okay. [7501] So big issue, big misunderstanding I [7504] would say with Naden. Um unfortunately [7505] their documentation in my experience is [7507] not clear enough to really elucidate [7509] what's going on here unless you have a [7510] programming background. Um but just want [7512] you guys to know that this is how it's [7513] done when you reference nodes that are [7515] more than one module back. If you wanted [7516] to just reference something in the [7517] previous node, it's a lot easier. You go [7519] dollar sign and then you go JS. then you [7523] can just go immediately into the [7524] variables. Message content or something [7527] like that dot subject line for instance. [7530] All right, so let's start looking at [7531] some of these foundational nodes over [7532] here because I think at this point we've [7534] done four different workflows and I [7536] think you guys probably have a [7537] reasonable understanding of how to put a [7538] workflow together now as well. Some of [7540] the more nuanced portions of NAN like [7542] the way that they do their JSON, some of [7544] the the nuances behind burying names [7547] inside of various keys and how to do [7549] arrays of objects and backtrack and all [7551] that fun stuff. Let's actually cover [7553] like nodes because nodes are ultimately [7554] what you guys are going to be using on a [7556] daily basis. After we're done that, then [7557] I'll I'll rebuild this flow up here and [7559] I'll show you guys how all that stuff [7560] works under the hood. This will allow us [7563] to use some of the more um I guess code [7567] oriented features of N&N. Then I think [7569] after this point, like you guys have a [7571] reasonable enough understanding to build [7572] most things. It's just a matter of like [7574] what can you build and how exactly do [7575] you put the various Lego blocks I've [7577] shown you together. That's what the [7578] subsequent videos in this course are [7580] going to are going to ultimately just [7581] show you. It's going to be non-stop [7582] building 24/7, baby. Anyway, so let's [7586] cover these foundational nodes. The [7587] first thing is we're going to cover [7589] nodes for doing things. So, HTTP [7590] requests, web hooks, and open AI nodes. [7592] And we'll cover nodes that modify flows. [7594] So, if filter, merge, split into [7595] batches. There are a couple of other [7596] ones, but these are the ones that we're [7597] going to be focusing on, at least for [7599] today. So, you know, in terms of nodes [7601] that do things, um, if you guys aren't [7602] familiar with, um, HTTP request, this [7605] stands for hypertext, I don't know, [7607] hypertext transfer protocol. And what [7610] we're doing when we do an HTTP request [7612] is we're doing the same thing that your [7614] browser does when it goes to a website. [7616] So just like when I go to google.com, [7619] I'm sending a request to Google, [7621] receiving a bunch of information what [7622] this web page looks like, and then I'm [7624] using my browser Chrome to render it [7626] into the beautiful, wonderful image you [7628] have in front of me. The HTTP request [7630] does the same thing. It just it just [7631] returns the thing to you in the code. [7633] You don't have that rendering portion. [7635] So I'm going to do a get request here. [7637] And the get request is just the simplest [7639] and most basic request. And this is [7641] ultimately what you're probably going to [7642] be using for for most cases. And the URL [7644] I'm going to be doing is just my own [7646] leftclick.ai. So leftclick.ai just for [7648] the purposes of this discussion. Looks [7650] like this. We build hands-off growth [7652] systems for B2B founders. There's a [7653] bunch of information about what our [7654] clients get, our leads. The lovely Joe [7656] Davies left me a testimonial. I should [7658] probably touch this website up at this [7659] point. It's been the same for a while. [7660] But anyway, I'm just doing an HTTP [7662] request using a method get to [7665] leftclick.ai I with no authentication, [7667] no nothing. We're just going to see what [7668] happens. So, let me click that test [7669] step. And the response that we've [7671] received is again an array of objects. [7674] Our one object has a key name data. Then [7677] inside of that key name, you'll see that [7680] there is a ton of code. HTML it's [7683] called. Okay. And just because this is [7685] not the easiest to see here, I'm just [7686] going to go to schema view so you can [7688] see a little bit more of it. But [7689] basically, this here is the code of my [7691] website. This is what my website looks [7693] like to the browsers. um you know and [7695] like what ultimately my browser uses to [7697] render it. You can see it says leftclick [7699] space vertical carrot space AI and [7702] amperand. This is just a symbol that um [7704] allows it not to break any characters. [7706] Process optimization. Left click is an [7708] AIdriven performance optimization agency [7710] is cutting edge tech to scale your [7711] company. This is all the code, right? [7712] It's pretty badass. If I were to go to [7714] leftclick and then I were to go to [7717] inspect, if I were to open this up, this [7720] is like the Chrome dev tool which allows [7721] you to see the code of the website. It's [7723] the exact same thing that's over here in [7726] the bottom lefthand corner, right? [7727] Literally no differences whatsoever. You [7729] built your agency, we'll scale it. The [7731] only difference is some symbols like the [7732] amperand or maybe the ad sign, they just [7734] have like little replacements here or [7736] there so they don't break any um string [7737] formatting. So that's the HTTP request. [7739] Why why does an HTTP request matter and [7742] why would we want to do an HTTP request? [7743] Well, the reason why is because you can [7745] do pretty cool stuff with this. Like if [7748] I go um HTML and then I say extract HTML [7751] content. What we can do is we could use [7754] the code of the page to pull out all of [7756] the text. Okay. So why don't I just go [7758] text? I'll go P. Uh let's just do H1, [7760] H2, H3, H4, H5, H6. Let's do P. I'm [7764] going to return this value as text. And [7766] then I'm going to return uh let's just [7767] test this and see what happens. [7769] What we're doing is we're basically [7771] feeding in the HTML and then we're using [7773] uh various CSS selectors they're called [7775] to extract a bunch of text for us. And [7777] it looks like I didn't do this right [7778] because we're not actually retrieving [7780] anything. Let's just try P for [7782] now. We'll do this. You're seeing [7785] already that we've extracted a bunch of [7788] P text. We've extracted basically like a [7790] specific type of [7791] tag inside this website that starts with [7795] a P. Okay. Now, we can do the same thing [7797] with a variety of other tags. Let's say [7799] I want to do H1. This is going to return [7800] all of the um top level selectors [7803] basically. So, let's do H1 [7806] test. We build we build hands-off growth [7808] systems for B2B founders. That's pretty [7810] cool. If I return an array, let's return [7812] all of them. We build hands-off growth [7814] systems for B2B founders. A better way [7815] to build ops. What our clients get. If I [7817] do uh I think if I want to select [7819] multiple, I just would I just do P like [7822] this. H1 and P. Yeah, there we go. Okay. [7825] So now I'm getting all the text of the [7827] website. We build hands-off growth [7828] systems for B2B founders. Find the [7829] perfect offer. Automate your lead [7830] acquisition. Solve your project [7831] management. A better way to build ops. [7833] This is all the text of the website. And [7835] all I needed to do in order to feed this [7837] in was I basically went through and then [7839] I fed in a bunch of elements which I [7840] know just correspond to text like this. [7844] And then I pressed test step. It went [7845] through and it extracted all of them [7847] into this big fat array which is really [7849] cool. Now like if you think about it, I [7851] could actually do some pretty cool stuff [7852] with this. I could have AI tell me [7855] something about the site very easily. [7857] You're a helpful intelligent uh website [7859] scraping assistant. We'll go got to add [7863] my credential first. We'll go down here [7866] and I'm just going to have AI tell me a [7869] little bit about this website. Return in [7870] JSON just some data. I'll do that as my [7873] system prompt. And then here, your task [7875] is to take as input a bunch of scraped [7879] website text and return as output a JSON [7883] that follows this [7886] format. I'm going to say summary. I'm [7890] going to say three unique [7893] points. We'll do an array. We'll do um [7897] probable customer demographic. Okay, I'm [7900] going to have it return an object. we'll [7903] see contact [7905] information if any and then we'll do I [7908] don't know some sort of like array of [7910] objects. Okay. And then that's that's [7913] what we're going to have it return. [7914] We're going to output the content as [7915] JSON and then as input add a message. [7918] What we want to do is we just want to [7919] join this is um being output as an array [7921] right now. Right? Arrays as we see are [7924] many options or many different um things [7926] on various lines. What we want to do is [7928] we want to take all of this output data. [7930] We just want to turn it into one big [7932] long string. The way you do that here is [7934] I would use the expression tab and then [7937] I'm just going to add some lines so the [7938] AI knows that this is my input. Then I'm [7940] just going to go [7941] JSON.ext and then dot we'll just go [7944] join. Join is just a way to convert an [7946] array of items into just one big long [7949] string. And the thing you put inside of [7950] the join is you just put what you want [7953] to separate it by. So in my case, I'll [7955] just separate it all with a new line. If [7957] I enter the detailed editor here, you [7959] can see that now I've just turned all of [7960] this into one giant long string. I'm [7963] going to feed this into AI and I'm going [7964] to have it just tell me something about [7965] the [7966] website. So, this took us just a few [7968] seconds. And we already have a scraper [7970] that's basically capable of coming up [7972] with and then outputting a summary of [7974] what I do, three unique points that [7977] separate me from the competition, [7979] probable customer demographic [7980] information maybe I can use to do [7982] something, then contact information if [7984] any. And it looks like it separated that [7986] into a subobject that says method, book [7987] a call, details, get started today, [7989] platform, website. As I'm sure you guys [7991] can imagine, I spent 15 seconds putting [7993] this puppy together. If you guys wanted [7994] to maybe scrape emails or do something [7996] like that, you could put something [7997] together that does this pretty easily. [7999] So that's the HTTP request node. Pretty [8001] simple, pretty straightforward. The next [8003] thing I want to show you is I want to [8004] show you basically the inverse of the [8006] HTTP request node. Instead of us sending [8008] data, I want to show you a quick and [8010] easy way that we can receive a little [8012] bit of data if necessary. But it's [8014] nowhere near as hard as you think. There [8015] are a variety of different ways that you [8016] could do this, but I'm going to show you [8017] guys a really simple and easy one that I [8020] personally use all the time. It's called [8021] the web hook. So, I'm going to go over [8023] here, then I'm going to type a web hook. [8027] Starts the workflow when a web hook is [8028] called. Basically, what a web hook is is [8031] it's just a server URL that you spin up, [8033] almost like my website, leftclick. And [8035] every time that server gets a request to [8037] it, it'll show up here with all of the [8039] data. Why is this so valuable? Well, it [8042] allows us to do a million things. [8044] Connect workflow to workflow, add up and [8046] create our own API integrations, do a [8048] variety of things that otherwise we [8050] wouldn't really be able to do without [8051] them. This is basically the glue that [8053] holds the internet together. And this is [8054] a quick and easy way for you to make [8055] your own piece of that. So, this is what [8057] the web hook fields look like. We have a [8058] test URL, production URL. Don't worry [8060] about the distinction there for now. [8061] We'll just use test URL. HTTP method we [8064] want to allow to access our service. [8066] Think we might actually allow multiple. [8067] One of these I think allows us to do [8069] multiple, but we're just going to go [8071] with get for now. The path, we're going [8072] to leave the path as fixed. The path is [8074] just this URL string. Authentication, [8076] we're going to turn this off. We don't [8077] want any authentication. They recommend [8079] that you have authentication, but for [8080] simplicity sake, I'm just not going to [8082] have any because otherwise it might be a [8083] little bit too much at once. Then we're [8085] going to do respond immediately. What [8087] I'm going to do is I'm going to set up a [8088] test event for this URL. Okay. Actually, [8090] I don't know if I can do this within the [8092] same workflow. Actually, no, I can't [8093] because the workflow is already running. [8094] So, I'm actually going to make another [8095] workflow really quickly. And I'm going [8097] to use that to call this web hook to get [8099] some cool data. So why don't I create a [8102] workflow. We'll just call this three [8104] nadn concepts. And then we'll go web [8107] hooks http [8109] requests. I'm going to make a new HTTP [8112] request here. It's going to get this [8114] long thing that I've done over here. [8116] Okay. I'm going to test it. Then over [8118] here I'm going to grab that data. And as [8121] you can see like what just happened if [8122] you were paying close attention is this [8124] just ran. The second I sent the data [8125] from this node which is in another [8127] workflow over to this node which is on [8129] the current workflow we received a ton [8131] of info and the info that we received [8133] was received a big object one item [8135] inside of our array of objects here. So [8137] a single object with a key name headers [8140] which had a bunch of other data [8142] underneath params query body web hook [8145] URL execution mode test. So this might [8148] look a little bit dry and a little bit [8149] boring to us right now but what's the [8151] value here? The value is you can run [8153] something from one workflow, send it to [8154] another workflow really easily. So in [8156] our our first example, we sent no data. [8158] But what if I go back to my other [8160] workflow, okay, that's number three [8162] here. And then I send some query [8163] parameters and I say first name and I [8166] say Nick. Then I go here a last name [8170] surive. And then here maybe I go UU ID. [8173] That's just like user ID. And then I [8175] type something like this. Now if I go [8177] back here, then I listen for a test [8180] event. I go back here and then I send [8181] the test event. Now when I receive it, [8184] not only do I get the headers, sorry, [8187] the headers over here, not only do I get [8188] the params inside of our query are the [8192] variables that I just sent over inside [8193] of JSON. First name, last name, UU ID. [8196] So man, I can do so many cool things [8198] with this. It's crazy. I could connect [8201] this to any web service out there. just [8203] give this URL as the URL where the [8206] events are sent and then voila, I [8208] basically have like an infinite machine. [8210] I'll show you guys a quick example right [8211] now using [8213] ClickUp, but you guys can extend this [8215] example and do whatever the hell you [8216] want with it. So, ClickUp is just this [8219] project management platform that I have [8222] that allows you to send out web hooks. [8223] And most services that are good will [8225] allow you to do stuff like this. But you [8227] see there's a call web hook feature [8229] here. I'm going to go back to my web [8231] hook and I'm going to copy this URL. [8234] Now, this is for get only. I don't [8235] actually remember if ClickUp sends a get [8237] or a post. So, we're going to see what [8238] happens here. And then what I'm going to [8240] do is I'll just have status change. [8244] We're going to say from specifically [8247] hook to specifically [8251] outline. And we're going to create this. [8253] And basically what this means is when I [8254] change a field called status inside of [8256] my my project manager, it sends a web [8258] hook over to this [8260] address. So hook to outline find [8262] something that's hook. Maybe this one [8264] here. Now what I'm going to do is I'm [8265] going to go over here, listen for a test [8266] event. Then I'm going to change this to [8268] outline. And I don't remember if it's a [8270] get or a post request. So we might have [8272] to wait and try two or three. This [8275] unfortunately does not respond to the [8276] methods that are not the same. methods [8279] are, you know, kind of a deeper story, [8280] but basically there are variety of ways [8282] you can query a website or a web [8284] service. HTTP, most commonly, you'll do [8286] either a get or a post. Um, in this [8290] specific instance of ClickUp, it looks [8291] to me like they're probably using post. [8292] So, I'll go HTTP method. I'll go [8294] post. Now, I'll listen for this test [8296] event. I'll change this back to [8299] hook. Then, I'm going to change this [8301] back to outline. And now that it's [8303] outline, um, we're waiting for this this [8305] post request. Let's see if we we are [8307] receiving it from ClickUp. Okay, great. [8309] Looks like we received it. Now, what did [8312] we receive in reality? Well, excuse me. [8314] I'm like really close to sneezing, but [8316] I've decided not to, so I won't. Uh, [8319] before we updated the query field, now [8321] we're updating the body field. We see [8322] it's built into ClickUp. What we did, [8324] ClickUp has a number of default things [8326] that they send over when you do this web [8328] hook integration. One of them is the ID [8329] of the record. Now there's the trigger [8331] ID ID the trigger payload ID the name of [8334] the thing which was three chat GBT [8336] prompt engineering hacks you need to [8337] start using next some hooks some order [8341] in text some information about the [8343] person that created it the point that [8344] I'm making is we just created our own [8345] integration with ClickUp and it took me [8347] like 30 seconds realistically after I [8348] got off the HTTP method hump so in [8351] practice sometimes APIs like ClickUp I'm [8354] sure they have API documentation [8355] somewhere but sometimes they just don't [8356] tell you right at the point of creating [8358] the web hook whether it's going to be a [8359] get or a post request. So if your get [8361] request doesn't come in, just change the [8362] HTTP method to post and then rerun it [8365] with the post uh example and then one of [8367] those will work, which is pretty cool. [8369] Okay, so that's how you do it as a test [8371] URL. Ultimately though, we don't just [8373] care about having this workflow be sort [8375] of a test. We want it to be live. And so [8376] when your workflow moves to production, [8379] aka you publish it and you make it live [8381] to actually interact with the internet, [8382] you're going to want to go over to this [8383] production URL and then copy this URL [8386] and update all of your web hooks to send [8387] here. And this will enable you to [8388] activate this. If it's in test mode, you [8390] actually won't be able to activate this. [8392] Um, just I guess for safety or security [8394] purposes. It just makes the transition [8396] to publish it unfortunately involve an [8397] additional step, but it also makes your [8399] workflows a little bit more secure. So, [8402] that's how you do web hooks. The last [8404] thing I'll mention are these OpenAI and [8405] AI nodes. Now, I'm going to have many, [8407] many videos after this one be all about [8410] AI agents since that's obviously the big [8411] thing that's blowing up right now. What [8413] I'm going to do here is I'm just going [8415] to cover them super super briefly. I'm [8417] not even going to like run anything, but [8418] I just wanted to show you guys that NAN [8420] is very AI native. And so whereas I've [8423] been doing some very basic um OpenAI [8425] calls with this OpenAI module, there's a [8427] variety of things you could do. You [8428] could create an AI agent which generates [8430] an action plan and executes it. Uses [8432] external tools. You can have Open AAI [8434] message and assistant or GPT. This is [8436] what we've been using. Some basic LLM [8438] chains and a bunch of like specific [8440] tools that are used to do things like [8442] categorize information, summarize [8444] information, and so on and so forth. AI [8446] agent. Just to give you guys a very [8448] brief example, probably is one of the [8450] most intimidating looking modules or [8451] nodes, but it's actually one of the [8453] simplest in practice. When you create an [8455] AI agent, it'll automatically open up [8457] this when chat message receive node on [8459] the side. And then you'll see that down [8460] at the bottom of my screen, there's an [8461] additional button that allows me to chat [8463] with my with my model. But in order to [8465] make this work, what we need to do is we [8467] need to hook this up. Notice how there's [8468] this little um warning here. What we [8471] need to do is we need to go down to chat [8472] model. We actually need to select the AI [8474] module or AI node that we want the AI [8477] service I should say that we want to [8478] use. For most intents and purposes, I [8481] use OpenAI. This is just the best to me. [8483] But you could use O Lama, Mistral, [8485] Google, Gemini, Anthropic. Feel free to [8487] play around with this for whatever your [8488] use case is or whatever your data [8489] privacy security requirements are. So [8492] I'm going go down to my Open AI chat [8493] model. The model I'm going to be using [8494] for this is going to be GBD40. I just [8496] find it has better answers. And then now [8499] you'll see that the warning sign is [8500] gone. Now we have an additional node I [8502] can drag and drop here. And now I can go [8504] to chat and I could say, "Hey, how are [8506] you doing?" We've essentially opened up [8507] our own chat window. Hey, I'm just a [8509] computer program, but I don't have [8511] feelings, but I'm here and ready to [8512] assist you. Thanks, Chat GPT. And on the [8514] right hand side, probably the most [8515] valuable part about this is you could [8516] see a log of what is happening and how [8518] many nodes were called in order to get [8521] you the result. This is important [8522] because the whole point of AI agents is [8524] their ability to call other tools to do [8526] things for you. So this says system your [8529] helpful assistant human hey how are you [8531] doing? This is just their prompt setup. [8532] So the input to open AAI was this right [8536] here. And because we just asked how it's [8538] doing and so on and so forth um you know [8540] it didn't it didn't really do anything [8541] special. There were no additional tools. [8542] This is the same thing as you just [8544] sending a message to chat GBT [8545] essentially. Now in order to make an AI [8548] agent like really work you're going to [8549] want to add two things. The first thing [8551] you're going to want to add is you're [8551] going to want to add some sort of [8552] memory. If an AI agent doesn't have [8554] memory, then basically if I go back here [8557] to chat and then say, "What did I say in [8560] my last [8561] message, it will have no context or no [8564] idea. I don't have any access to past [8566] messages or personal data. Each session [8568] is independent." Basically, this is like [8570] a one it's like it's like a send a [8572] question, receive an answer sort of [8573] window. But we don't want that. We want [8575] this to actually have access to our chat [8576] history. We want it to see what we've [8577] been talking about over the course of [8578] the last like 20 or 30 minutes and be [8580] able to reference those. So, there are a [8582] variety of ways to do this. Basically, [8583] you need to implement some sort of [8584] database. I'll show you guys how to [8585] implement some more complex databases in [8587] the future, but the simplest one, the [8588] one that Naden provides right out the [8590] gate, the one that most people on [8591] YouTube are going to be talking about is [8592] this window buffer memory. Window buffer [8594] memory basically just allows you to [8596] store it here inside of the test window, [8598] which is the easiest to do. And the [8600] default is five messages. So, u [8603] basically every time you send it a [8604] message, it will send up to five pass [8606] messages. But just for the purpose of [8608] this discussion, I'm going to go 10. So [8609] now what I'm going to do is I'll go to [8611] chat and then I'll say hey how are you [8614] doing and I'm going to say what did I [8617] ask you in my previous message and [8620] you'll see that it's asking how it's [8622] doing right so we're actually now [8623] accessing the previous message using [8626] this buffer memory and on the right hand [8628] side you'll see here that the log has [8630] gotten a little bit more intense too so [8632] basically we called the AI agent up at [8633] the top the next thing that happened was [8635] we went through the buffer memory we fed [8638] this in and basically basically added [8640] this to some big long stack of message [8642] history. Then we fed that in plus the [8645] previous message. Then we said, "Hey, [8647] what did I ask you in my previous [8649] message?" This is the input that is [8650] currently being fed into the model on [8652] that second call. And then we went down [8654] into buffer memory. We saved all of this [8656] again. And then uh we kind of came up [8658] and then and sent the answer. How about [8662] now? Cool. So now we're three levels [8665] deep. And as you can see, this is just a [8666] quick and easy way to load the memory. [8668] make sure that we're always having some [8669] sort of topical contextual conversation, [8671] which is pretty cool. Now, the real [8674] juice in AI agents, the reason why [8675] they've gained so much popularity is [8677] just because of this tool section here [8679] where you can essentially call an action [8681] just like we were doing before [8682] procedurally, but you can call it using [8684] AI and you can automatically format and [8686] get information from different tools. [8688] So, there are variety of tools that are [8689] just sort of set up for you. Air table, [8691] base row, calculator, Gmail, Google [8693] calendar, Google Docs, Google Drive, all [8695] this stuff. [8697] What I'm going to do in this example, [8698] just because I don't want to spend all [8699] day on it um before I do my more [8701] detailed AI agent tutorials, is I'm just [8703] going to select Google Calendar. I'm [8705] going to create a new credential, sign [8706] in with my Gmail [8709] account, and then I'll go over [8711] here. I'll close this window. Now that [8715] I've uh I've connected my Google [8716] calendar agent, what I'm going to do is [8718] I'm going to select my specific [8719] calendar, which is nick [8721] leftclick.ai. And then now that it's [8723] connected to my AI agent, this is the [8725] create event. I don't want to create, I [8727] just want to get. So get all of my [8728] events basically from my calendar. Okay. [8730] And then in addition to that, what we [8731] have to do is we have to use this dollar [8733] sign from AI feature here. And we just [8735] have to paste that into the expression [8736] field. Um what this does is this just [8738] tells AI, hey, I want you to provide uh [8741] you know your own details for the value [8743] of a field. In our case, I wanted to [8745] feed in some options that say, hey, you [8747] know, I want you to grab data that is [8749] after this date, but before this date. [8752] So, if I'm asking [8753] AI like, "Hey, what's going on? Can you [8757] tell me what I'm doing tomorrow?" And [8759] I'll just say, "Jan 28, 2025." The whole [8761] idea here is AI now has access to my [8763] calendar. It also has the ability to [8765] call that API. Then it can actually go [8767] and retrieve specific events from my [8769] calendar and then return them here. So, [8771] as you can see, I have this call uh me [8773] and my my buddy Zach. And then it just [8774] has all of this information. Okay, [8776] great. How are you more generally? you [8779] know, I can also just chat with it like [8780] I'm chatting to chat GBT or something [8782] like that. So, I don't always have to [8783] use like the tool that I'm I'm calling. [8785] And the idea is you basically stack on [8787] 3, four, 5, 10, 15, 20 of these tools. [8790] Although, I find in practice when you [8791] get um past maybe six or seven, instead [8793] of calling a tool, what you want to do [8794] is you want to call another agent which [8796] then decides to call a tool. It's [8797] basically like a big almost like a [8798] search tree or something. But any more [8800] or less the AI side of things. The last [8803] thing I'll mention here is uh this [8804] OpenAI note doesn't just have the [8806] message a model text action like we've [8808] been doing before. There's a variety of [8809] other things you could do. You can [8810] create an assistant, delete an [8812] assistant, list assistance, message [8813] assistance, update assistance, analyze [8815] images, you can generate images, [8817] generate audio. Like you have a ton that [8818] you could do here, which is pretty [8819] sweet. I go down to generate audio and [8822] I'll say um I don't know, Nick is [8825] awesome and very pretty and I generate [8827] it using the Nova voice. Click this test [8830] step. Not only can I generate text and [8833] stuff like that, but I can also have [8834] this generate me an audio output I can [8836] then listen to. Variety of cool things [8838] you can do with this. Nick is awesome [8840] and very pretty. You're damn right I am. [8843] Um variety of cool things you can do [8844] with this, but definitely don't sleep on [8846] the AI nodes. Uh you know, don't just [8848] like stick to the one that I've shown [8849] you guys so far. Okay, great. So, those [8851] are the foundational ones. In practice [8852] with NAN, you're probably going to be [8854] using these quite often. What I'll do [8855] next is talk about some nodes that [8856] modify flow. And here are a bunch more [8858] that like you're going to want to read [8859] their docs and add them to your toolkit [8861] because this is like an everyday sort of [8862] thing. The first is an if. The second is [8865] filter. The third is merge. And the [8866] fourth is split into batches. So let me [8869] show you guys a very quick and and [8871] simple example of the if. If I go [8873] here and then I add my own trigger. Uh [8876] and I just want to trigger manually. Oh, [8878] sorry. It looks like I already have one [8879] somewhere in here. Right. So let's just [8881] repurpose this um manual trigger for an [8884] example workflow that I'm going to build [8886] down below. [8887] this example trigger. I'm going to click [8889] it. And then what we're going to do is [8891] we're going to use the edit [8893] fields. We're going to go down to JSON. [8896] This is just a handy dandy tool that [8897] allows you to set your own inputs and [8899] outputs. So I can now set my own um [8901] output. And I could say first name Nick, [8905] last name uh Sarif. And if I if I test [8908] this, if I test my whole workflow, [8909] you'll see this broke because um Sarif [8911] was not in quotes there. Got to make [8913] sure that all of your strings are in [8914] quotes. If I check out the JSON, you see [8916] the output of this module is now first [8917] name, Nick, last name, surf. Okay, I'm [8919] just going to pin this. Now, let's say I [8921] want to do something else, you know, if [8923] the if the input is Nick, I want to do [8927] something really cool. I want to provide [8930] prize. I don't know, um, [8933] $100. If the input is Nick, I want to go [8936] through my my sequence and then I want [8937] to generate another variable called [8939] prize, and I want to I want to have it [8940] be $100. Okay. But I only want to do [8943] that if the input is Nick. If the output [8945] is something else, then I want to have [8950] my prize be just $5. So Nick gets all [8953] the prizes here. He's very greedy. Okay. [8955] So how do you actually implement this [8956] sort of logic? Well, the simplest way is [8957] if I click this plus button and I just [8959] type if, you'll see I'll have this node [8961] pop up that says if wrote items to [8963] different branches, true or false. So [8964] I'm going to add that in there. And what [8966] I'm going to say is if first name, which [8968] by the way, we could still just drag if [8969] we wanted to. could say if first name is [8971] equal to Nick then proceed through the [8975] true node which is up here and if not [8979] we're going to want to proceed through [8980] this false node. Isn't that cool? So now [8983] we basically have two things that are [8985] occurring. Okay, prize up here was 100. [8988] Prize down here was five. I'm going to [8991] click test workflow. This is now going [8993] to run and I just want you guys to see [8995] what's happening. I clicked test [8996] workflow. We then edited our fields. We [8998] added Nick as the first name. We then [9001] went to the if and then as we saw here, [9004] first name was equal to Nick, meaning [9006] oops, if I double click this again, the [9009] output is now only going down the true [9011] branch with one [9013] item. And then the uh upper branch was [9016] illuminated. It's green. And then that's [9017] how we get to edit fields with the prize [9019] equal to $100. Now, if I change this, [9021] instead of Nick, if it's like Sally or [9024] something, and if we run this again, [9027] what you'll see is the [9029] data is flowing through here cuz I [9031] didn't unpin it. So, let's unpin it. If [9033] we if we test this now, uh what you'll [9035] see is the data didn't go through the [9036] top uh route anymore. Went through the [9038] bottom route. Okay, great. So, now with [9039] this example here, why don't we just [9041] pretend like we're emailing somebody. [9043] So, I'll go draft an [9045] email. I'm going to create my thing here [9047] and we'll say congrats you won. Good [9051] expression. Then what I want is dollar [9053] sign [9054] Jason.prise right over here. So like [9057] congrats you won $5. How cool is that? C [9061] title [9063] loser. Uh okay, great. And then I'm [9065] going to go here and I'm going to create [9066] a [9067] draft. Voila. I have it. Now if I go [9069] back here to my SOS media queries page, [9072] see it says, "Congrats, you won $5." [9074] There's nobody to because we didn't set [9075] the email to. But pretty neat, huh? We [9078] gave the same thing with this $100 [9082] field. Go over here. You'll see that I [9084] just copied like all of the same logic. [9086] It says, "Congrats, you won Jason. [9088] Prize." It's grayed out right now [9089] because there's no data coming in. But [9091] you'll see that it'll work if I change [9092] the um input back to Nick. Then if I [9095] test this, I'll see it'll follow the top [9097] route and then also send me an email. [9099] Okay, great. So now let's look to use [9100] the filter node. Um, what I have here is [9102] I have my little first name Nick here. [9105] Um, what I'd like to do instead is I'd [9106] like to just change this a little bit. [9108] So, instead we'll create an array of [9111] names. And inside of this, we'll have [9113] Sally, John, and then Nick. Okay. And so [9117] now, if we test this, we see three [9119] entries in an array called names. We [9121] have our top level array, which contains [9122] an array of objects, and we have our [9124] object. And inside of that, we have key [9126] whose value equals a list of other [9128] objects or an array of other objects. I [9129] know the terminology can be kind of a [9131] lot and unfortunately there are many [9133] ways to refer to the same thing. So if [9135] something doesn't make sense just bear [9136] with me here and we'll in a moment. [9137] Okay, great. So let's say what we want [9140] to do if this names array includes Nick [9143] then um I want to continue with the [9145] flow. So I'll go array. Then what I want [9148] is I want to see if this array of of [9150] names feed that in here contains and I [9154] just want to say Nick. I'm going to test [9156] this out. What you'll see is that we've [9159] kept it because it does in fact contain [9161] Nick, which is pretty cool. If instead [9163] we wanted to see if it contains Peter, [9164] we test this. You'll notice that we are [9166] now following the discarded route. Okay, [9169] there's kept and then there's discarded. [9171] The thing is um it just goes down the [9172] same flow. Whereas if sort of split into [9175] two, there's a true and a false route. [9176] Uh this one actually just like continues [9178] and proceeds down the same flow. If [9180] something matches the filter, it will [9181] continue. Something doesn't match or the [9183] fil match the filter, then it won't. So, [9185] what we could do, if I just paste in [9187] this Gmail node, so we could basically [9189] build uh a very similar flow, but what [9192] we could do is if it is kept, then we [9194] could send a prize of $100 instead. We [9197] could hardcode that $100 in. So, I'm [9199] going to do is I'm going to check to see [9200] if it's kept. Okay, so right now name [9201] contains Peter, it's probably not going [9202] to be kept, right? So, test workflow. [9204] It's going to stop right here. Does not [9206] proceed any further. If instead I change [9208] the filter so that it contains Nick, [9209] then we test it. What we see is we're [9211] going to move on and we're actually [9213] going to like proceed with the rest of [9214] our flow. So, this filter here just [9216] allows us to kind of stop if it doesn't [9218] match our condition or or continue. And [9220] you can add as many conditions as you [9221] want. You can go and or or um you can [9223] add whatever sort of logic you'd like. I [9225] used array logic here too, but there's [9227] also a lot. There's like string. You [9228] could check to see if something exists [9229] or matches array x, number, date and [9232] time, boolean, array, and then there's [9234] also a bunch of object ones as well. So, [9237] that's filter. Pretty straightforward. [9238] But I would say the last thing is two [9241] more. There's one called merge and then [9243] there's split into batches. What I'm [9244] going to do here is I'm going to have [9246] two routes or two outputs of a module [9248] and then I'm going to combine them back [9250] into one. And I'll show you guys what I [9251] mean by this. Remember earlier how we [9253] had some HTTP requests. What I'm going [9255] to do is I'll go first name [9260] Sally and I'm going to [9263] have let's just say second name. [9266] Actually, let's [9268] go person one. Go person two. Just for [9272] the purpose of this example, we're going [9274] to have two people. Person one, Sally. [9275] Person two is Nick. Okay. Next, what [9277] we're going to do is we're going to add [9278] an AI node. You going to down to open [9281] AI. And I'm just going to message a [9282] model. Then here, I'm going to say write [9285] a [9286] detailed fun story about. What I'm going [9289] to do is I'll go I don't know person [9292] one. So, JSON.person one. This example [9295] is sort of silly if I'm honest because [9297] we could just hardcode the names in [9298] there. But I just wanted to do this to [9300] show you guys how this logic of the [9302] merge node would work. I'm going to [9304] select [9306] GPT40. And then I'm, you know, because [9308] this is just a very quick and easy [9309] example, I'm actually going to add a [9310] user [9312] prompt. Okay, it's now going to go and [9314] it's going to write me a fun story about [9315] Jason.person one. Person one was Sally. [9318] So, we're going to see it in a [9320] second. Very fun. Thank you very much [9322] for the detailed story. [9326] Q Jeopardy [9328] music Q other elevator [9331] music. All right, it's taking its sweet [9333] ass time. Could be for a variety of [9334] reasons. I might have like a little bit [9335] of rate limit action going on on my end [9337] just because of all the examples that I [9338] provided, but could also be something [9340] else. I don't [9342] know. Let's see [9345] here. Okay, cool. Looks like it did once [9347] upon a time in the vibrant city of [9349] Elmssworth, where the streets hummed [9351] with the rhythm of hopeful dreams and [9352] endless possibilities. Okay, so we just [9354] uh you know we just wrote a cool story [9356] about Sally. What what you can do in N8 [9358] is you can actually connect the same [9360] output to multiple um multiple future [9363] nodes. So what I've done is I've you [9365] know I have one over here which I'm [9366] going to rename write story about uh [9370] Sally. Then I have another one over here [9372] which I'm going to say write story about [9376] neck. Then down over here, I'm going to [9379] say write a story about person two [9382] instead of person one, which is, you [9383] know, now going to equate to neck, [9384] right? If I test the step, same thing's [9386] going to happen. It's going to call [9388] GPT40, it's going to write me a cool [9390] story. The issue is if you think about [9392] it logically, we now have two routes. We [9395] have one top route that writes a story [9396] about Sally, another bottom route that [9398] writes a story about Neck. Um, so if we [9400] wanted to do something with these [9401] stories, like I'd kind of have to repeat [9402] the same logic up here. Let's say I [9403] wanted to email this to somebody. Well, [9405] I'd have to Gmail up here. and I'll set [9406] to Gmail down here, right? I have to [9408] duplicate it. And it then provides a [9410] pretty simple and easy built-in way to [9411] avoid that. It's called the merge node. [9413] So, you can merge data of multiple [9414] streams once data from both is [9416] available. So, if you just click on it, [9418] you'll see that there's a mode append or [9420] combine or SQL query. I'm just going to [9423] stick with append for now. I'm just [9426] going to feed in these [9428] inputs. And in this way, what I can do [9430] is I could actually just write, you [9432] know, one Gmail node here instead of [9434] two. Um, and maybe I could like append [9436] both of these stories or something. But [9438] let me actually show you um what this [9440] looks like. Now, I'm actually going to [9441] test this workflow from end to end. So, [9443] you see it first does the top route and [9445] you can see this is orange because it's [9446] like filling out the um story about [9449] Sally right now. This is currently [9450] active. It's waiting to fill in the [9452] merge the second this is finished. And I [9454] think I probably should have set some [9455] character limit to the story cuz now I'm [9456] thinking about I was probably writing a [9458] lot of my [9460] tokens. And then after it's done with [9463] the story about Sally, it's gonna go and [9466] just gonna do the same thing. Write a [9467] story about Nick. Um hopefully this [9469] finishes before the next ice age. Okay, [9470] that took way too long, but uh just make [9472] sure you put in some sort of limits next [9474] time you do one of these calls. [9475] Otherwise, you'd be waiting here until [9476] the end of time. However, what we see as [9479] our final product is the top route [9481] completed and then populated the merge [9483] and the bottom route also completed and [9484] populated the merge. Now we had one item [9487] from a top route, one item from the [9488] bottom route. Then we also carried [9490] forward one end from the top route, one [9491] item from the bottom route. But what [9493] you'll see is the output of this merge [9494] is now two items instead of one. The [9496] reason why it's two items is because we [9498] use the the append. So now we have uh [9501] you know the story number one and we [9502] have the story number two. Basically we [9505] don't actually have to just output two [9506] things. We could actually just output [9507] like one item instead. Um but because in [9509] N8 um outputs are arrays of items, you [9513] kind of have a choice there. Now, since [9514] we output two items, what we could do is [9516] we could add our little Gmail node. [9518] Stick that down here. Connect [9521] it. Then I'm just going to pin this. And [9525] what I could do is I could email myself [9527] this [9529] story. I could say story about just cuz [9531] I back myself into a corner here. I need [9533] to write kind of like a little bit more [9534] difficult of a line of code. But I don't [9537] have access [9538] to Nick here, right? Like I don't have [9540] access to a single variable that [9542] contains the value that I'm looking for. [9543] So this is person one, Sally, person [9544] two, Nick. So I mean I could select [9546] person one, but then my second run would [9550] also say Nick, right? So both of these [9552] would say story about Sally, story about [9554] Sally, even though they'd have different [9555] stories. So what I'm going to do is I'm [9556] going to say I'll look at the actual [9559] story. So I'll go [9563] uh sorry, I'm going to go to the merge. [9564] I'll look at the actual story here, [9568] which now that I think about it is [9569] actually just JSON. Then I'll go [9571] message. I'll go content. Then if it [9573] includes the term [9576] Nick, then I'm just going to return [9578] Nick. Otherwise, I'm going to return [9580] Sally. That's how that works. So if this [9583] contains Nick, I'll return Nick. If not, [9585] I'll return the ter I'll ret the term [9588] Sally. This is just a kind of a [9589] shorthand way to use the if um else [9592] logic. Same as what we had before. So, [9594] I'm just going to pop this puppy [9597] open. Um, and let me take a look at the [9600] data. Story about Nick. Nick was an [9602] ordinary guy with an extraordinary [9604] dream. I wanted to become the first [9605] person to ride a unicycle all the way [9606] across the United States. Then Sally, [9609] uh, Once Upon a Time in the quaint town [9611] of Lavender Hill, I think, uh, this was [9613] the one where I timed out or something [9615] because of the rate limit, [9616] unfortunately. So, it doesn't look like [9617] it generated me anything more than Once [9619] Upon a Time in the Quaint Town of [9620] Lavender Hill. But, I'm sure we could. [9622] Yeah, like I could rerun this. Let me [9624] just make sure that the prompt is a [9626] little bit [9627] shorter. Less than 100 words. Let's just [9630] do [9632] that. And then good. Uh, awesome. We [9636] should be good now to actually produce [9637] this puppy. Let me just go over here and [9640] delete [9641] these examples that I don't need in [9644] preparation for the next run. And cool. [9647] We We warmed up two [9649] Gmails. Now we have a story about Sally, [9651] who's a curious hamster. And then I am a [9653] curious inventor. Lovely. Wonder why uh [9656] they use the term curious both times. H. [9659] But anyway, I hope you guys see now that [9660] like basically the merge connects two [9662] things together. The if statement sort [9663] of does the opposite. It kind of creates [9664] two routes, [9666] right? Yeah. This is kind of neat when [9668] you contrast and compare them like that. [9671] So I believe now uh we have everything [9673] we need except for the split into [9675] batches run. Split into batches is kind [9677] of a a little trickier of a thing to [9679] conceptualize. So, I'm going to show you [9680] a real example from a source that I used [9682] to extract a bunch of data. So, let me [9685] take a quick peek here at [9687] um I think I was doing depersonalization [9690] system. Yeah. So, I created a video on a [9692] depersonalization system a while ago and [9694] as part of it um what I'm doing is I'm [9696] waiting over here for data to come in [9698] through a web hook. I send in data to [9701] this web hook and then I use it to call [9703] an API that gets a bunch of data set [9706] items. The data set items are pretty [9708] big, right? As you can see over here, [9709] it's a bunch of data about specific [9710] leads. But notice how it says 128 items [9713] above, right? Anytime you output more [9715] than one item in N8N, what you can do is [9718] you could loop over every item. Then you [9720] could perform something individually on [9722] just that item. And then once you're [9725] done with that, you could go back to the [9727] loop over and over and over and over [9728] again until you're completed. So in my [9730] case, I had a lot of items in this. I [9734] had 128 for Christ's sake, right? And [9736] what I wanted to do is I wanted to run [9738] my five column personalization flow [9739] similar to what we saw earlier. And then [9741] I also wanted to add a row to my [9742] spreadsheet. Now unfortunately every [9744] time I did that I consumed one API uh [9747] call and a lot of these platforms have [9749] pretty intense rate limits. So instead [9752] of me um one issue I always found I [9754] found very frequently was I just kept on [9756] getting timed out. It would say 400 [9757] error or 403 error or whatever. [9760] Basically, the gist of that is that, you [9762] know, I'm over the rate limit and [9764] they're not going to allow me to make [9764] any more requests for a certain amount [9765] of time. So, what I did instead is [9767] instead of me just submitting all of [9769] those requests simultaneously, I added [9771] this to a loop over items and then I [9772] added a designated weight node. The [9775] weight node is a simple node in N that [9777] allows you to wait for a certain number [9778] of seconds. In my case, five. And in [9780] this way, I was able to basically take [9782] one item, go from start to finish, wait [9785] 5 seconds, and then loop back and then [9787] proceed with my next item. And I [9789] basically just went, you know, one after [9791] the other after the other after the [9793] other over and over and over and over [9795] again. So that's just to give you guys [9797] some context on on what that actually [9798] might look like. If I go down [9800] here and I set um my items here, I'm [9804] just going to use a future a feature in [9805] NAN that allows you to automatically set [9807] like your own test data. So I'm going to [9809] say, you know, there's there's first [9811] item and then there's second [9813] item and my data for that. Where is the [9816] edit fields? Right over here. [9819] If I zoom way in, you'll see that I'm [9822] not outputting two items, right? So, [9824] what I can do is I can go loop over [9825] items, split in batches. You set the [9828] batch size to one. What it'll do now is [9831] it will go first item and then second [9833] item. What I'll do is when you add a [9836] loop over items, it immediately adds a [9837] replace me node. And this is what you're [9839] supposed to basically replace with the [9840] thing you want to do. So, in my case, I [9841] just want to wait 5 seconds. So, I'm [9843] just going to go over here and go wait. [9846] wait exactly five seconds. What I want [9849] to do is for the loop route, for the [9850] route that is going to be looping over [9852] my items. So basically for every item, [9855] you can think of this as I want to wait [9858] and I want to wait 5 seconds. Very cool. [9862] Then the output of this needs to feed [9864] back into the input. This is kind of [9865] like the tricky [9867] part. So when you go through a loop, I'm [9869] going to click a test workflow. I'm [9870] going to generate two items and then I'm [9872] just going to pull one item out of that [9873] and I'm going to wait 5 seconds. I'm [9875] going to go to the second item and I'm [9876] going to wait 5 seconds. Is this going [9878] to do anything? No. But notice that [9880] there is both a loop route and then [9881] there's a done route. Basically in NAN [9883] once you're done with the loop route, it [9885] just automatically goes to the done [9886] route. So I could do something like this [9887] and maybe I send myself an email. Let's [9889] just [9891] draft. And then let's say um you [9895] know done [9898] looping. You successfully waited 10 [9901] seconds. [9904] Awesome. So, we're going to wait 5 [9907] seconds and then 5 seconds. Then we're [9908] going to Gmail. Okay. So, that's that. [9911] I'm going to test this workflow. That's [9913] the first 5 seconds [9916] here. And that's the second 5 seconds [9920] here. And once this is done, we can now [9923] send over an email draft or queue up an [9925] email draft, I should say, which is [9927] right over here. I should note that I [9929] may have ran this twice. I feel like I [9931] just ran this twice. Looks like it's [9933] carrying all of these here. Oh, yeah. [9935] Sorry. It'll it'll output all of the [9937] records that you feed it in basically. [9939] So, I fed it in two records and then the [9941] third run it went and then fed both of [9942] those records in as input to my Gmail [9944] branch. Um, what I could do is I could [9946] take these two items and I could convert [9947] it into just one item by combining them. [9949] Um, and then I wouldn't have to deal [9950] with this, which is kind of neat. So, [9952] that's probably what I would do in [9953] practice. I wouldn't actually proceed [9955] here with two items. I would just do [9957] one. There's a really cool built-in way [9959] to do this in NAN just called execute [9961] once. So if you just go to the settings [9963] page of any node and then just click [9965] execute once, you basically stop the [9967] multiple executions regardless of the [9969] number of elements that precede it. So I [9971] just clicked execute once and instead of [9973] me sending two emails, now it's only [9974] going to send one. That's run number [9977] one. That's run number two. Then it'll [9980] go and it'll feed one item as an output. [9984] So if I refresh this now, instead of [9986] two, I'm only going to have one. Quick [9988] and easy hack. Um, and yeah, you know, [9990] because we're building stuff live, [9991] hopefully you guys get to see the [9992] applications of this in real time as we [9994] put something together. All right, so [9996] now I think we are at the point where we [9997] can realistically build out [9998] substantially more complicated flows. [10000] What I'm going to do now is basically [10001] run almost like a test of sorts where [10004] we're going to take all the information [10005] that I just tried to shove into your [10007] brain and we're going to use it to build [10008] out a flow that actually does something [10010] business worthwhile, a flow that I've [10011] sold many times before and a flow that's [10013] made people a fair amount of money. So [10015] this is what the flow looks like right [10017] now. I'm actually going to simplify it. [10018] I've decided to do it a little bit [10019] simpler just over the course of the last [10021] like 20 minutes thinking about it. But [10022] basically, just to keep things make a [10024] long story short, there's this service [10025] out there called SOS. Um, and I [10027] mentioned this at the beginning of the [10028] video, they send out like a a query [10030] every day from journalists uh where the [10033] journalists are looking for people that [10034] match their criteria to answer [10036] questions. So, uh, for instance, you [10039] know, this one up here is from Jordan [10040] Rosenfeld who's saying, "Seeking [10042] healthcare Medicare specialist weigh on [10044] how RFK Junior and Dr. Medat Oz might [10045] affect benefits or healthcare if [10047] appointed. know that this is usually [10048] like US specific. I think they have kind [10050] of like a like a global arm sometimes [10052] too, but most of this is going to be USD [10054] uh US specific. And then it says, "Hey, [10058] um I'm looking to speak to people in a [10059] nonpartisan way, but the possible [10060] changes, things like Medicare, [10061] healthcare, insurance, these are two [10063] stories. Specify what you're commenting [10064] on can be both. Robust and longer [10066] answers are prioritized. You must have [10067] the relevant experience. We'll link back [10068] to your site. Please include pronouns." [10070] There's a lot going on here, right? [10071] Basically what we want to do is we just [10072] want to take this whole long [10075] email and we just want to extract all of [10079] these. So this would be [10082] one, this would be one, this would be [10087] two, this would be three, and so on and [10090] so forth. And we want to feed this into [10092] AI. And we just want AI to give us a [10094] very simple answer. Hey, is this [10095] relevant to me based off of some [10096] characteristics I'm going to give you? [10098] and two, if it is, can you like [10100] pre-draft an email for me? So, pretty [10102] pretty simple, pretty straightforward [10103] stuff, right? Let me show you how [10105] straightforward this flow can be given [10107] what you now know. And I want you to [10108] treat this as like a test. Basically, [10110] like you've made it this far, let's [10112] actually see if you could build [10113] something out that's business [10114] worthwhile. If something that I'm saying [10116] doesn't make sense, uh, pause the video [10118] and look for the specific part that I've [10119] covered the concept in, cuz that's [10121] that's basically the purpose here. I [10122] just want you guys to be able to [10123] reaffirm your knowledge and show you how [10124] now you can do something pretty cool. [10126] Okay, so the first thing I'm going to do [10127] is I'm just looking for a Gmail trigger [10128] there. I'm going to select my [10130] credential. Sorry, not create a new [10132] credential. I'm going to select my [10134] credential, Gmail account 3. And the way [10136] that this module or node works is it [10138] extracts emails from my inbox that match [10140] my specified filters. And it does so in [10142] the timing that I give it. So every [10144] minute, hour, day, week, month, x, [10146] custom, whatever. I'm just going to say [10147] once a day for now. It's going to be [10149] zeroth hour, zeroth minute, simple [10151] stuff. The event I'm looking for is [10153] message received. Then what I need to do [10155] is I I need to add a filter down here. [10157] And there's one called search where I [10158] basically just look for emails from SOS. [10162] Luckily for me, they're all formatted in [10163] very similar ways. SOS media queries. So [10165] if I want to get all the emails from [10166] SOS, this is just what I do. Now I don't [10168] just want to get any email. I just want [10169] to get the specific email just to show [10171] you guys what I'm working with. Later [10172] on, we'll then um we'll separate it. So [10174] it's just SOS media queries will work [10176] with any of them. But for now, I just [10177] want to grab this one. Here's what you'd [10178] do. You just go [10181] subject and then you'd feed this in. [10184] This is a Gmail operator. So just use [10186] whatever same filtering mechanism you do [10187] for your own emails in Gmail. Uh and [10189] just feed it in over here and it'll work [10191] fine. Okay. Now let's test this out. [10193] Let's grab the data. We've received a [10196] ton of data. Uh this is an object with [10198] 11 items inside. But this simplify is [10202] sort of working against us here. The [10204] Gmail trigger just natively always has [10206] simplify on. We actually want to get rid [10208] of this. So, I'm going to go to [10208] expression just like we know how and [10210] press and and type in false. This is the [10212] same, by the way, is just turning this [10213] off. I just wanted to be clear that I [10215] always use the expression field. And now [10217] I'm going to get the actual data of the [10219] email, which is way more as you can see [10221] here. Instead of whatever it was 12 or [10223] something, now it's or six, now it's 13. [10225] And uh the headers object has 27 items [10229] buried in it just in and of itself. The [10231] thing we're looking for is this text [10232] variable, which is the same as what we [10234] had before. Tell friends to join source [10235] of sources. It's always free. want to [10237] know how to strengthen your relationship [10239] with journalists blah blah blah. We're [10240] then going to pin this. So now we have [10242] access to all of this JSON in future [10244] nodes. And I think I got lost here with [10247] my Gmail [10248] trigger. And now let's actually go ahead [10251] and let's let's split this data. Let's [10252] basically get our data so that it's just [10255] a bunch of these. How are we going to do [10256] this? Just think about this. We got a [10258] bunch of text processing features [10259] available to us. We know a little bit [10261] about the JSON uh JavaScript and and [10263] stuff like that. But what are some ways [10264] we might actually realistically be able [10266] to do this? Well, the way that I see it [10268] is the great news about source of [10270] sources and the previous uh service [10272] called Haro is that they just have the [10274] same like characters everywhere. So, [10276] they have a bunch of stars here. Then [10278] between every story is basically just [10280] like these underscores. So, underscores [10283] there, underscores there, underscores [10286] there. So when you see a similar pattern [10290] like this, it becomes very easy for you [10292] to like process this in a noode tool [10295] using a term or a function called split [10297] where you basically just feed in a whole [10298] big string and then you just split it [10300] based off something that you want. So [10302] I'm probably I'm going to probably need [10303] to split this twice. The first thing I'm [10304] going to do is I'm going to split based [10305] off this up here and then is you know [10309] there's like this top section and then [10310] there's going to be this whole bottom [10311] section. Then after that I'll grab the [10313] bottom section. I'll split it based off [10315] of uh this probably. then I'll just be [10317] able to get like the individual [10318] sections. If that sounds like rocket [10319] science to you right now, don't worry. [10321] We're going to go over here, press edit [10323] fields. And what I'm going to want to do [10326] is for now I'm just going to go manual [10327] map and click add field. This allows me [10329] to create my own variable basically [10331] based off of um you know the the [10333] previous module. So I'm going to type [10335] above. Uh [10338] actually yeah, let's let's just call [10340] this [10342] below. And then what I'm going to do is [10345] I'm going to feed in where is this text. [10348] Ah, it's right over here. We'll go to [10350] the expression field. Then I'm just [10351] going to type dollar sign JSON dot. And [10354] what I want is I want text. Okay. So now [10357] if we open up this big fat editor here, [10358] we got all the text right here. Pretty [10360] sweet, right? We don't want all the [10362] text. We only want the stuff that is uh [10364] below this line. So I'm going to copy [10366] this. And then I'm just going to go over [10368] here and press dot. Now we have a bunch [10369] of functions. And I haven't covered all [10371] these functions yet. I will in the [10372] future videos. Um, but one of the [10374] functions that I use all the time is [10376] called split. Just press split. And all [10378] we need to do now is we just need to [10379] feed in the thing that we want to split [10380] it by. So I'm going to feed in what I [10382] just copied a moment ago. Okay. And now [10386] instead of just seeing the string, we [10388] actually see an array. And this is what [10389] arrays look like when they're output in [10391] um naden. It says bracket array and then [10394] colon space. And then we actually have [10396] the whole array here. And this array is [10398] split based off of wherever this was. So [10402] I think it's going to be split right [10404] over here. The last character before it [10405] will say information week. Okay. So we [10408] go information week. I'm going zoom way [10411] in. And yeah, that's what the array [10414] looks like. We have a comma. So this [10415] whole thing was a string. Then we have [10417] um quotes and then a comma, a space, and [10419] then we have another quote. And this is [10420] the beginning of everything underneath [10421] it, which is awesome for us. Okay, so [10424] this is basically what we get. Um, and [10426] now the really cool thing that allows us [10428] to do is it allows you to pull objects [10430] out of an array. So this is an array [10432] with two items inside of it. The one [10435] string that's everything above those [10436] lines, this little star line, then [10438] another string that's everything below [10439] the star line. We can just go dotlast. [10442] And now we'll just pull out the actual [10444] string itself, which is this. All of [10447] this. How cool. Now what else we could [10451] do is theoretically we could just split [10452] this again. We could split this again [10454] and then extract everything split based [10458] off of these characters. So I go [10461] dotsplit feed this in. Now we have [10463] another array, right? How many items are [10465] in here? I don't know. Let's find out. [10467] So I'm going to test the step. You click [10469] on test step. And now we have a bunch of [10470] different items. So yeah, just make sure [10472] you like set the array um here anytime [10475] you're screwing around with data. [10477] Otherwise, I believe they have a field [10478] like autotype convert or something. Um I [10480] haven't used that one before. type [10481] conversion errors or something. Um, I [10483] actually just set the specific, uh, data [10485] type that I want. In this case, I'm [10487] creating an array. I'm splitting stuff [10488] to turn it into array. So, uh, I'm going [10491] to be doing so with this array drop [10493] down. Okay, but anyway, now we have a [10494] big array. Pretty cool, [10496] right? And it looks like we have 19 [10499] items in total. What I want to do with [10500] this is, first of all, I'm going to pin [10503] this. Second of all, I'm going to go [10504] over here to extract titles. And I'm [10506] just going to copy this because I don't [10507] want to have to rewrite the whole [10508] prompt. I think that would probably take [10510] like 15-ish minutes or so once when all [10512] is said and done. Um, what I want to do [10514] is I want to um grab this data which [10517] looks just like this. And all I want to [10519] do is I just want to feed this into AI [10521] now. And I just want to have AI tell me, [10523] hey, am I good? You know, if I'm good, [10525] then go ahead and like draft an email. [10528] If I'm not good, then um then don't. And [10530] I know just from experience that this is [10532] sort of split into two parts here. [10535] So, I'm just going to copy this [10538] over. I'm going to use it to create my [10541] prompt. Okay. What does this prompt look [10543] like? You're a helpful intelligent [10544] administrative assistant. Very on brand [10545] for me. That's a system prompt. Then, [10547] hey, I'm a business owner specializing [10549] in AI, automation, marketing, and [10550] software. Then what I'm going to say is [10552] below is an email requesting a [10558] uh below is an email requesting let's do [10561] an email request from a [10564] journalist looking for a [10568] story about sorry information about [10572] their story. [10574] Then just going to paste a bunch of data [10580] in. Your task is to determine whether it [10583] is relevant to me and if so pre-draft an [10587] email that answers their questions using [10590] my tone of voice and I'll say casual [10593] Spartan. Some [10595] information about me. I own one second [10598] copy. Here are my [10601] links. Then I will say [10606] uh sorry I just got a lot going on here [10608] because I'm piecing this together [10610] between two different [10611] um prompts. But anyway, some information [10614] about me. I own one second copy a [10616] successful AI marketing company came up. [10617] My name is Nick Stra here. My links [10618] don't use unless asked links and then [10623] um below is a request by a journalist [10626] for outreach. Write a syncing spartan [10627] email responding to each query. [10629] says spart an email be concise use the [10633] following [10636] format. [10638] Okay. Then I will [10643] say if it is relevant return a JSON [10647] object as [10650] follows. [10652] True. Email body. Email body goes here. [10660] If it is not [10665] relevant, return false for relevance and [10668] leave email body [10672] blank. Some information about me. [10677] Good. Use the following email format. [10680] Email template when responding to [10682] relevant inquiries. Cool. [10688] Make sure to respond in [10691] JSON. Very sweet. Okay, great. And now [10694] all I'm going to do is I'm going to [10697] provide as input [10702] um the specific item that I am [10705] referencing. So what you'll find is when [10708] you're referencing a an array like this, [10710] what it'll do is it'll grab the specific [10712] item of the array. So JSON.blow0ero, [10714] below zero. I don't actually want that. [10716] Um what I want to do is I I basically [10717] want to loop through this array and then [10719] for every item I want to feed this in as [10721] input. Um this is selecting the first [10723] item here with the zero. Um everything [10725] is zeroth indexed. So this is 0 1 2 3 4 [10728] and so on and so forth. Um so in order [10730] to do that we're going to have to take [10731] our data and do just a little bit of [10732] pre-processing first. [10740] Um, we're going to want to combine a [10742] field from many items. Sorry, uh, turn a [10744] list inside items here using the split [10746] out node. I don't believe I talked about [10749] split out, but rest assured, all this [10751] does is it turns an array into a bunch [10753] of items. So, you can run them one by [10754] one. Okay, great. So, below, no other [10756] fields. And now we have uh 20 items on [10758] the right hand side. And now, basically, [10760] we can feed in every one of those 20 [10761] items to AI. [10764] So all I'm going to do now is I'm just [10766] going to feed in uh this below field. [10769] And now instead of me having to go JSON [10771] items.0 below one below two because we [10774] are now splitting this into a top level [10777] uh array instead of before how it was uh [10779] an array and then the curly bracket [10782] below and then another um array with [10784] like 20 records. Now it's just below [10786] below below below below. It's going to [10787] run basically once for every item that [10789] we've received. So yeah, that's that. [10792] Um, we should be able to get some JSON [10794] here. Uh, I don't want to run it on all [10796] 20 as a test, though, cuz all we're [10797] doing is testing. So, what I'm actually [10799] going to do is I'm going to go in [10800] between these and type in limit. Limit [10802] allows us to restrict the number of [10804] items. So, I actually only want to run [10806] this twice to start, and I want to see [10808] what happens. So, I'm actually going to [10809] do this on two items. Then, we're going [10811] to see what those two item outputs are. [10813] And if they're good, then we'll [10814] continue. We'll pin them and then move [10815] on. And if not, then we won't. We'll be [10817] able to modify them before we actually [10818] waste 20 uh tokens worth of data. And [10822] I'm just going to pin all the data [10823] moving forward. And then I'm going to go [10824] over here to limit. And then I'm just [10825] going to press test [10827] step. Okay. I'm going to pin this now. [10829] So now we have the two items. So I'm [10831] going to go over here. And then I'm [10832] going to test this [10834] step. Looks like we are now producing. [10837] Uh and it looks like both of these were [10838] false. So I'm going to want to up this [10840] limit just a little bit. Maybe we'll try [10843] three last items instead. We'll [10845] overwrite the data that's pinned. We'll [10847] pin it again. I'll go back to extract [10849] titles. Now we're feeding in the last [10850] three enterprise genai users. Yeah, this [10852] is probably [10856] me. Edge AI and stuff. Looks like they [10858] kept their AI entries at the end, so [10860] that makes [10863] sense. And we're now doing three API [10867] calls. It looks like uh there were two [10870] TRS. So true up here, true up here. This [10872] looks like it was just junk data. So we [10874] could actually cut that out. Show you [10875] how to do that later. Um but now we [10877] actually have like emails drafted. Hey [10878] Pam, I own one second copy accessible [10880] blah blah blah. Here's a big answer to [10882] all of these questions. That's pretty [10884] cool. All we need to do now is we just [10886] go Gmail. We draft. Oh, you know [10889] what? Uh, we need to grab the email, [10892] don't we? Yeah, I don't think I actually [10894] grabbed the email address of the [10896] person. Yes, I did not. So, let's [10898] actually change our prompt a little bit [10899] and let's edit it so that we actually [10901] output the email [10903] to. So, I'm going to go back here. I'm [10905] actually go [10911] um email address [10916] um discovered or let's just go their [10923] email. Okay, there you go. That should [10927] probably be [10930] sufficient. Let's actually test this one [10932] more time. So now we should actually [10933] extract their email address as well, [10934] assuming the AI does what I what it's [10937] silly human overlord tells it to [10941] do. And now that we have the the email [10944] um address, we'll actually be able to [10946] like use that to feed into a draft. [10947] Yeah, I kind of forgot about that. So [10948] we'll go back to Gmail. I'm going to go [10951] draft create a draft credential Gmail [10954] account 3 resource draft operation [10957] create. Then I'll say [10959] re and then I'll say SOS inquiry. I'm [10964] going go message and then all I'm going [10965] to do is I'll go back to my schema. Just [10967] going to drag my email body in here. [10970] Then I'm going to add an option called [10973] uh now we'll go to email and then we're [10975] actually just going to feed that puppy [10977] in there. And now we can actually test [10979] this out on three. So let's go one, two, [10982] three. So we have three items. All of [10984] them just wrapped up. We go back to my [10987] email inbox, go down to [10989] drafts, we'll see that uh I created one [10992] for each. It looks like I created an [10994] additional one, but anyway, I'll cover [10995] that in a second. The first was this one [10997] to this lovely Pam lady. Very nice. [11000] Second was this other one to this lovely [11002] John [11004] fella. Very cool. Uh, everybody followed [11007] my email template. No issues. And then, [11009] yeah, looks like we just used one [11010] additional um [11012] email. I think the reason why we sent [11014] that additional email is because we [11016] technically outputed an item. So, I [11018] wonder if we could just not output an [11019] item. That'd be one way to do [11021] [Music] [11023] it. Yeah, we could just not output the [11025] item. Or, you know, we could just add a [11028] filter like I uh was showing us how to [11030] do so [11032] before. So, if uh let's just go down [11036] here. Let's go JSON dot [11043] Let's go item [11046] three. We'll go down to [11048] [Music] [11050] JSON.relevance [11054] message.content.relevance. So basically [11056] if this is equal to true then we'll [11057] continue and then if not we won't. So we [11060] should get two, right? Yeah, there you [11062] go. We uh kept two items and now we're [11064] only going to be sending emails on the [11065] two items that passed our filter. So, [11068] just because I always like to do an end [11070] toend flow, I'm just going to discard [11072] some old drafts here, delete everything, [11074] and then run this one final [11076] time just to show you guys what all this [11078] looks like. We will use the Gmail [11080] trigger, edit the fields, split them [11082] out. I'm going to have the limit be [11083] three items just for now because I don't [11085] want to like draft a bunch of emails. [11087] Extract the titles, add a filter, and [11088] then create three drafts. Let's run this [11090] from start to finish. We're now [11092] extracting the titles. And by sorry [11094] extracting the titles I mean we are um [11097] filtering and creating an email. And [11099] then the end result is we have two [11100] drafts in our inbox which is kind of [11102] neat. And if we wanted to take this even [11104] further what we could do is we go down [11105] to Gmail and then we could add a label [11107] to this message. Just to make it [11109] abundantly clear if I select the message [11112] ID that we just created. It's going to [11114] be right over [11115] here. Uh I could just call this public [11119] relations or something. And [11122] now basically it'll just automatically [11124] apply a label to these drafts inside of [11125] my inbox that I just know that these [11127] are, you know, these are public [11128] relations inquiries basically. Um these [11131] are not, you know, other email drafts [11133] for some purpose. And that's kind of [11135] cool of a flow, but I'm actually just [11137] going to stick that right over there. [11138] And then because I'm already getting [11140] mixed up with the extract titles, I'm [11142] just going to say filter and respond to [11144] email or maybe create email body. There [11148] you go. A little bit simpler. So yeah, [11150] we used a ton of new functions here. Um, [11153] we use the split. I then use the split [11155] out. Uh, I don't actually use all of [11157] these super often. We did use the [11159] filter, which I talked about and [11160] covered. And then the limit is just [11162] basically like an internal tool that I [11163] like to use to uh make sure that I'm not [11165] screwing around with token usage or [11167] spending a ton of like executions or [11169] anything like that. Um, I think this [11171] system is a lot cleaner than that other [11172] system that I was going to build with [11173] you guys before. It's also a little bit [11175] more simple. Here I have just a ton of [11176] code unfortunately, but we'll get rid of [11178] that. We'll use this as the two [11183] templates for us. Then I'll also just [11186] make this nice and easy to see. And [11189] yeah, I hope you guys appreciated this. [11190] Um, just so that we could do a quick [11192] recap and because in my experience doing [11195] a recap of the stuff is sort of how you [11197] remember it. Um, we started off by [11199] talking a little bit about fields [11200] specifically two types of fields. There [11202] were fixed fields and then there were [11204] um, expressionbased fields. I sort of [11206] made a case for you as to why you should [11207] probably favor expressionbased fields [11209] over fixed fields whenever possible [11211] because you could do the exact same [11212] thing anyway. And you also just get like [11214] a ton of code options. So I always just [11216] toggle little expression. I then showed [11218] you how all of these different field [11219] inputs, even like the little toggle [11220] buttons, these really are just [11222] expressions at the end of the day. You [11224] know, if it's a toggle button, it's true [11225] or false. If you're selecting a Google [11227] sheet or something, there's actually an [11228] ID behind it. And so now you know a lot [11230] more about sort of the underlying data [11232] and the way that NAN structure stuff. I [11234] then covered JSON JavaScript object [11236] notation in probably pretty excruciating [11238] detail. Hopefully that wasn't too [11239] boring. But we covered a bunch of [11240] different variable types. Just to recap [11242] them, there was a string, there was a [11244] number, there was a bool or boolean, [11246] true or false. There was an array, and [11248] then there was also another object. So [11250] you could bury JavaScript objects inside [11252] of JavaScript objects. There were key [11254] names, values. We learned a little bit [11256] about the formatting with quotes, um, as [11257] well as commas and and brackets and that [11259] sort of stuff. But the reality is if you [11261] just like stare at JSON long enough, [11262] kind of give it a good squint or two, [11264] eventually it'll start making sense. And [11266] that's why I've now changed all of the [11268] input and outputs inside of our NAND [11270] course tutorial to to favor a JSON [11272] JavaScript object just so you guys could [11273] see it and kind of get used to it. From [11276] there, we covered a little bit about how [11277] data is represented in NAN. So [11279] specifically, all data, all inputs and [11282] outputs in NAD are structured as an [11283] array of objects. So there's some top [11286] level square bracket and inside there's [11288] just a bunch of those JavaScript objects [11289] nestled in it. And if you want to [11291] reference the most previous node, then [11293] all you need to do is just use this [11295] little dollar sign JS O N syntax. If you [11298] want to reference nodes from 2, 3, four, [11301] or nodes back, n standing for whatever [11303] number, then you would do the dollar [11305] sign, but then you'd have to like [11306] specifically reference the name of the [11308] node. No big deal. Naden actually does a [11310] lot of that selection for you. And [11311] there's usually a little drop down or [11313] toggle button that you can just click to [11314] get there. We talked about how to [11315] reference earlier fields, how to do some [11317] backtracking with like dot notation and [11319] square bracket notation. Then I also [11320] covered some common gotchas. The most [11322] common gotch in NAN, just to be clear, [11323] is people don't understand that it is an [11325] array of objects that you're referring [11327] to. And so NAD will run once per item in [11329] the array. If you're trying to reference [11331] one item, but you're really referencing [11332] all of them, obviously you're going to [11333] get an error message. It's not going to [11335] work. Likewise, if you're trying to [11336] reference a number of items, but you [11338] only reference some subset of them, [11339] you're going to have some error, a [11341] message, and you know, you're going to [11342] get that dreadful red text that I think [11343] we all hate so much. So, understanding [11345] that everything is just an array of [11346] items and array of objects. This goes a [11348] long way towards insulating you against [11349] that. Finally, we covered some [11351] foundational notes. We started off with [11352] the HTTP request node, which allows us [11354] to basically request or do the same [11357] thing that your browser is doing when [11358] you access a website, pull all of the [11360] code, and then I also showed you guys [11362] how to do cool stuff with AI, where you [11365] take the extracted or parsed components [11367] of that node, like my leftclick website, [11370] and then turn that into some sort of AI [11372] structured data, like a summary, like [11373] some interesting tidbits about that [11375] website, maybe the contact details if [11377] you could find it. I then covered a [11378] little bit about web hooks. If you guys [11379] are familiar, if you guys remember, web [11380] hooks are just like the glue that holds [11382] so much of the internet together. I [11383] showed you guys how to send a request [11385] from one workflow and receive it in [11387] another workflow. And I also showed you [11388] guys how to use a third party platform, [11390] in this case, ClickUp, but you can [11392] really use whatever the hell you want to [11393] send a request upon some triggers. So [11395] now I'm like connecting NAN and ClickUp [11397] with my own native integration without [11399] even necessarily having to know too much [11401] code. And then at the tail end there, I [11402] covered OpenAI and AI agent nodes. The [11406] real value of N8N in comparison to most [11408] other no code tools in addition to its [11410] ability to self-host is their AI agent [11412] functionality that just works fresh out [11413] of the box. So rest assured, we're going [11415] to be covering a lot more of that moving [11416] forward. But we built a very simple [11418] example where I essentially asked my AI [11420] agent what was going on for the day and [11422] then it pulled data from my calendar [11424] intelligently while also still being [11425] able to like talk back and forth in [11427] natural language. We covered some nodes [11428] that modify flows as well, including the [11430] if, the filter, the merge, the split [11432] into batches or bundles. We covered the [11435] split out and then finally we also [11436] covered while I was building that last [11438] example the limit. And then from there I [11440] showed you guys how to build a super [11441] simple and easy essentially email [11443] autoresponder type flow but one that [11446] does a very high leverage highv value [11448] business purpose which is parsing out [11450] defining whether a journalist inquiry is [11452] relevant to us or not than if it is [11454] actually writing out an example based [11455] off of a template. Okay. So now that you [11457] understand how data works in NAD and how [11459] information flows through a workflow, [11461] let's cover some of the more complex [11462] aspects of NADN. And these are parts of [11464] nodn that usually keep beginners away [11466] from this tool. What I'm covering now is [11469] JavaScript functions. N uses a very [11471] specific take on JavaScript functions, [11473] dot notation, JavaScript functions. And [11475] there's just so many of them that it's [11477] very difficult and intimidating for [11478] beginners to know which is the right one [11480] to use. And that's what we're going to [11481] cover over the course the next hour or [11483] so. You're going to learn how to [11484] transform data, how to filter it, how to [11486] map it, how to reduce it. And if none of [11488] these concepts make sense to you right [11489] now, they certainly will in a few [11490] minutes. Okay, let's get building. I [11492] have an NAN workflow open over here [11494] called all NAT functions. I'm going to [11496] click add tag and go down to NAD course [11498] just so I can help organize it a little [11500] bit. And all we have is we have a start [11502] node. This begins a flow when I click [11504] test workflow down here. So I give this [11506] a click. You'll see that this just [11507] turned green. This just tells us that [11509] this has triggered the flow. Uh [11510] peculiarity of the start node is when [11512] you click it and when you get it going, [11514] it doesn't actually output any data. It [11515] just starts the flow. So obviously if we [11517] want to do something here, we're going [11518] to have to add another node. So, let me [11520] click on that right little plus sign. [11522] And then the nodes that we're going to [11524] be using in this video, I'm going to be [11525] using pretty gratuitously. They're [11527] called the edit fields node. And the [11528] edit fields node, for anybody that's [11530] coming from maybe a different noode [11531] editor, especially something like [11532] make.com, you can just think of this as [11534] a way to set variables, rename fields, [11536] and that sort of stuff. So, I'll go down [11538] to edit fields over here. Give us a [11539] click. And now, you know, we have the [11542] start node on the left, and that's the [11543] input. And then in the middle here, we [11545] have an edit fields node with a couple [11547] of different modes. There's manual [11548] mapping and there's JSON. Basically, [11550] what this allows you to do is if you [11551] give this a click, you can define your [11552] own variables [11554] here. And if I click test step, you'll [11557] see that we now have a new variable [11559] accessible to us in the output called [11560] hello world. Now, what I'm going to be [11563] doing is I'm going to be using the JSON [11565] option here. And I've already created a [11567] bunch of JavaScript um that I'm just [11568] going to be using for the purposes of [11569] running through all the functions. So, [11571] this is what the object looks like. We [11572] have a string called hello, number 3.5, [11576] an array with names of Sarah, Sally, and [11578] Stephanie, an object, and this object [11580] has some parameters like first name, [11582] last name, height, and centimeters. Then [11584] we also have a bool that stands for [11585] boolean, and that's just set to true. [11587] I'm doing this because these are all of [11589] the different function types that we're [11590] going to be working through in the rest [11591] of this video. And so I just wanted an [11593] easily accessible way for us to get all [11595] of these and then do cool stuff with it. [11597] I can now add, let's just give this a [11599] quick rename. Let's just say set example [11601] JSON. Then what I'm going to do is I'm [11603] going to go and do another edit fields. [11605] And this edit fields is where I'm [11606] actually going to be mapping the output. [11608] So I'm going to call this output. And [11610] then for now we'll go off of a string [11612] data type. And what I'm going to do is [11613] I'm just going to drag this string into [11615] the value. And now we have access to it. [11617] Now, the way you use functions in NAND, [11619] as I'm sure you're probably already [11620] aware, but just to reiterate, is all you [11622] do after you've selected a variable from [11624] an input and it's turned green, like [11626] this one here, all you need to do is [11628] just click the dot. A period then opens [11631] up this function editor. And now we have [11633] access to tons of stuff. So, you can see [11635] there's some suggested functions here. [11637] This is just because while Anaden gives [11638] you a large library of functions that [11640] you can do stuff with um in practice you [11642] don't actually end up using the majority [11643] of them. But I'm still going to run you [11645] through every single one of these for [11646] completeness's sake and then if I touch [11648] on something that I actually use pretty [11649] often either for my own workflows or uh [11652] workflows that I've seen other people [11653] use then I'm going to I'm going to [11655] mention it. Okay, great. So let's start [11656] with the very first one. Now if you [11658] remember if I click back here this turns [11660] green and we see a result down here to [11661] hello. If you remember the value of this [11664] string right now is currently hello. [11666] Okay, so keeping that in our minds, what [11669] we start with is the includes function. [11672] The way that the includes function works [11673] is basically we can use this to search [11675] within a string to see if something [11677] includes a substring that we're looking [11680] for. So right now we have hello and what [11682] we're basically saying is does hello [11684] include what I'm about to write inside [11686] of here. So if I write h the result will [11690] be true. But if I write something like [11692] x, you'll see the result will change to [11694] false. Keep an eye on this result panel [11696] because this is going to be your best [11698] friend anytime you're manipulating [11699] functions. Uh because most of the time [11701] it'll give you some sort of real time uh [11702] feedback. So you know if I wanted to see [11704] whether or not my string contains the [11706] word hell. I don't know maybe I am very [11708] pious or something. I type helen here. [11710] You see h e l l is a four-letter [11713] substring that is inside of hello. [11714] Obviously this is going to turn true. [11716] But if I were to jumble up the letters, [11718] right? vertigo l e h you'll see that [11721] this is false because this is reading [11723] all strings left to right. So this is a [11725] pretty quick and easy one. Um you know [11726] it's kind of useful to see whether or [11728] not something includes obviously if you [11730] have a very large string you can [11732] instantly do this just to search and see [11734] whether or not that string includes just [11735] some tiny little thing that you're [11736] looking for a mention of something [11738] perhaps. The next one I'm going to cover [11739] is called split. Now split is something [11741] that I use basically all the time. I use [11743] it at least once a day. Um, and I use it [11745] across a variety of no code tools just [11747] because it's so goddang useful. Now, the [11749] way that split works is you essentially [11751] take your string h l exclamation point [11755] in this case and then you convert it [11757] into an array. And the way that you do [11758] so is you give it a character that you [11760] want to split the thing by. So, let me [11763] give you a very simple example. If our [11765] input string is h e l o, let's [11767] hypothetically say I wanted to split [11769] this into two halves. And the way that I [11771] wanted to split it was based off of the [11773] presence of the L and the L here. Okay. [11775] So, what I could do is I could say [11778] JSON.string.split and then in quotes and [11780] you have to use quote signs. If I go LL, [11784] you'll see that I've now split this [11786] string into two um substrings basically [11789] and then plopped them in an array. Now, [11791] if you're unfamiliar with what an array [11792] is or how an array works, that's okay. [11794] We'll get into that later. But for now, [11796] all you need to know is that we [11797] basically taken one input and we've [11799] turned it into an array that contains [11800] two outputs, the H E and the O. If you [11803] split it based off of the presence of an [11805] L, you'll see that we are now generating [11807] an empty space. Why? Well, this is sort [11810] of nuanced, but if you look at our input [11812] over here, that's H E L L. If we're [11814] splitting based off of an L, and what [11816] this is doing is it's catching the empty [11817] string in between these two L's. So [11820] hypothetically, if I wanted to split [11821] this by something else, let's say the E, [11823] you see that this is now splitting into [11825] a substring that's H and then LL O. If [11828] you wanted to do this based off of the [11829] presence of nothing, you'll see that it [11831] splits it based off every character. So [11833] this is just its default um if you don't [11834] feed it in any input whatsoever. So if [11837] you have an empty string like this, it's [11838] h e l l o exclamation point. And [11841] splitting is really useful just as a [11843] quick and easy way to take something, [11844] usually some sort of tabular or CSV [11846] data, and then just turn it into, you [11848] know, an array that you can use naden [11849] for. So, let me give you a quick little [11851] example. Right now, this editor is set [11853] to dollar sign JSON.string. We're [11854] referencing a variable from a previous [11857] um, you know, uh, node. There's actually [11859] a little hack in Naden that you can do. [11861] If you want to like create something [11862] directly in the function editor to do so [11864] with a string, all you do is you add [11866] quotes and then you do something like [11868] Sarah, [11869] Sally, Stephanie. Everything within [11873] these two quotes still technically [11875] counts as a string. And so you can [11877] dotindex it. You can slice it into uh [11879] you can use dot notation, I should say, [11881] in order to attach a function to the end [11882] of it. So hypothetically, let's say we [11884] had three names here and these three [11886] names were just somewhere, I don't know, [11887] they're in some data source that we're [11889] scraping. Well, we can turn this into an [11890] array very easily just by adding the [11892] delimiter of comma and then space. Now, [11896] because we're going comma and then [11897] space, as you can see, we've turned this [11900] string of Sarah, Sally, and Stephanie [11902] into an array. That's a quick example of [11904] split. Split's pretty awesome. I use [11905] split all the time because we just [11907] deleted all of this. We need to reselect [11909] our string. So, I'm going to go dollar [11910] sign JSON. Then, I'm going to go dot st [11913] i n g. That's the name of the key in our [11916] JSON that we fed. And so now we have the [11918] hello again. Let's proceed. Next we have [11921] starts with. Starts with is kind of what [11923] it sounds like. If you want to see [11925] whether or not a string starts with a uh [11927] series of of letters or not necessarily [11930] letters, numbers and stuff like that as [11931] well, characters I should say, then you [11933] can just use starts with. So in our [11935] case, if we wanted to see whether it [11937] started with h e l or something like [11940] that, then this would return true. But [11942] if we wanted to instead uh I don't know [11944] let's say we wanted to see if the string [11946] started with the term by then it would [11947] obviously be false. Similarly to starts [11950] with as you could see we also have ends [11953] with and so the way that this works is [11956] very similarly essentially all we're [11957] doing is we're starting at the back and [11958] we're just working our way forward. So [11960] if the hello exclamation point string [11963] sorry getting a call there um but it [11965] looks like it went to voicemail. If the [11967] hello exclamation point string is, I [11969] don't know, exclamation point, this is [11971] obviously going to be true, right? But [11972] if it's a dollar sign, it's going to be [11974] false because we don't have a dollar [11975] sign present in our string. If we were [11977] instead to go e l, this would again [11980] revert to true. So, lots of options [11982] there. And there are a lot of uh [11984] functions in reality that you'll find [11985] are just the inverse of each other. So, [11987] if there's something for starts with, [11988] odds are there's something that ends [11989] with. There's something for uppercase, [11991] odds are there's something for lowerase. [11992] We're going to cover all of that over [11994] the course of the rest of the video. [11996] Okay, great. There's also this other [11997] function here which I find myself using [11999] quite often. It's called replace all. [12000] And so replace all sort of a power [12002] function. Basically what it allows you [12004] to do is allows you to take this string [12007] which we have here is hello exclamation [12009] point and we can just replace any [12010] character we want in there with another [12012] character. So let's say we're some crazy [12014] anime weeaboo. What we do is we [12017] replace the first letter L and we go [12021] comma and we replace it with W. What [12024] we're doing now is replacing all of the [12025] L's in the string of hello with a bunch [12028] of W's, hello. Right? So we have a lot [12030] of um you know granularity and control [12032] there. If you look over the expression [12034] and function uh documentation over here, [12037] you'll see that this is the first [12038] instance in which we're now splitting [12039] this into two parts. So you know we [12041] actually have two variables that we're [12042] feeding into the replace all function. [12044] There's a pattern aka what we're looking [12046] to replace and then the actual thing [12047] that we're going to be using to replace [12048] it. I could just as easily replace the [12050] term the O, right, with nothing. And if [12052] I do that, it actually just cuts it out. [12053] Just removes that character completely. [12055] So replace all is pretty powerful. I [12057] find myself using this all the time when [12058] I'm developing flows. Um, and I'm glad [12060] that it's in the suggested editor up [12062] here alongside with split cuz you know, [12063] these are the two most common ones [12064] realistically. Okay, great. Moving our [12066] way down, you'll see that there's a very [12068] interesting looking function. This [12069] technically isn't a function. I believe [12071] this is a parameter in JavaScript. Uh, [12073] you know, like technically speaking, [12074] that's why it doesn't have the two [12075] little brackets next to it. But this is [12077] just a quick and easy way to determine [12078] the length of a string. So you know if h [12081] e l l o exclamation point this is 1 2 3 [12084] 4 5 6 right we should expect this to say [12086] six that's exactly what happens when we [12088] feed in length hypothetically if I were [12091] to replace this with hey how's it going [12094] men you'll see that the character length [12096] of this string is now 24 so uh length is [12100] super valuable I use length all the time [12102] I use length to determine you know [12104] whether or not the input that I'm [12105] feeding into a large language model is [12106] too much right a lot of the time you can [12109] average out the token length of a big [12111] string just by multiplying the number of [12114] um characters per word on average. And [12116] if you look up number of characters per [12119] word, the average is 4.7. Uh and then if [12123] you want to get the number of tokens per [12125] word average, you'll see that that's uh [12128] something like 2 to three. A paragraph [12129] is 128 tokens. I guess I should have [12131] said number of words per token. This [12134] ends up being about um 0.75. So, from [12137] there, if you feed in a string of 1,000 [12139] uh characters, right? Uh what was the [12142] the math there? 4.7 or something, I [12144] believe. Yeah, 4.7. So, 1,000 characters [12147] divided by 4.7 is 212 words. 212 [12154] words* 1 / 0.75 gives us 282 tokens. You [12159] know, odds are if you do this [12161] calculation and you get the length of [12162] your your string, you're going to know [12164] that every time you call a large [12165] language model, you're going to be using [12166] 282 on average over a large uh enough [12169] data set, [12170] 282.6 tokens in order to do so. So, you [12174] know, if you're not working with large [12175] language models, maybe a little bit less [12176] applicable, but there's still a variety [12177] of reasons why you might want to use [12179] length. So, um yeah, length is [12181] definitely one of the big boys. Okay, so [12182] working our way down the function panel [12184] here, uh, we have B 64 decode and it's [12187] partner B 64 encode. Now, if you guys [12190] aren't familiar with what B 64 is, you [12192] can think of it in a really simplified [12193] way. It's just a slightly different [12195] alphabet used to represent strings. Um, [12198] if I were to zoom into this example, the [12200] letters H E L L O when they are base 64 [12204] encoded translate to A, capital G, [12206] capital V, SB, capital G8, and then [12208] little equal sign. So this is basically [12210] just a way to to like uh I don't know [12212] like rotate characters according to some [12214] formula this base 64 um function. And [12217] the reason why they have a function [12219] available is because a lot of servers [12221] and uh some web services will only [12224] accept base 64 encoded versions of the [12226] strings that you send them. This is both [12228] a security purpose and I believe there's [12229] also some sort of compression purpose as [12231] well. Um but to keep things really [12232] simple, we'll start with B 64 encode. [12234] Then I'm going to feed in the thing that [12235] we just B 64 encoded into a B 64 decoder [12238] just so you can see that they're the [12239] same thing. Okay. So if I were to attach [12241] B 64 encode over to the string H E L O [12244] exclamation point, you'll see that it's [12246] very similar to the string that I just [12248] showed you guys um without the [12249] exclamation point. The only difference [12250] is the last letter I think is an h or [12252] something like that instead of an an [12254] equal sign. So as you can see it's very [12256] similar. Now, if I were to take this [12258] string and then I were to attach another [12260] function to it, [12261] base 64 decode. Notice how we've [12265] basically just regenerated our initial [12267] hello string. We could do this an [12269] arbitrary number of times. I go back to [12270] base 64 encode, then base 64 decode. And [12274] hypothetically, we could make this [12275] thing, you know, the distance from here [12276] to Mars. Um, but as I'm sure you guys [12278] can guess, it's kind of pointless to do [12280] so. So, this is sort of a niche [12282] function. I do use that function. Uh, I [12284] use one of the two functions reasonably [12286] often when I'm doing certain API calls [12288] because sometimes you need to base 64 [12290] encode an API key or base 64 encode [12292] credentials, usernames, passwords, that [12294] sort of thing. The only thing I want you [12296] guys to take away from this if you're [12297] unfamiliar with it is next time you know [12299] a service says, "Oh, you'll need to base [12300] 64 encode a string." Well, now you know. [12302] All you need to do is just go to your [12303] string, press period, and then type in B [12306] 64 encode. Voila, you're done. [12308] Okay, continuing on down, we now get to [12312] another function that I use reasonably [12313] often, one called concat. Concat [12315] basically just allows you to take your [12317] string and then add on another string to [12319] it. Kind of think of this as like a [12321] string addition, right? You're like [12322] manipulating the string. You're sticking [12323] two strings together. So, if I were to [12325] press enter here, go to concat, and then [12327] inside of quotes, I were to say space [12331] world, you can see here that my string [12333] has now changed from hello exclamation [12334] point to hello exclamation point space [12336] world exclamation point. right? The [12338] cardinal example of um you know you [12340] doing something cool with a computer for [12342] the first time. Now I should note that [12343] you can also feed in uh more than one [12345] string. So you could actually feed in an [12347] array of strings. That's why the [12349] concatenate function is kind of cool. So [12350] I could technically feed in world and [12353] then I could go how are [12356] you? And then you'll see that you know [12358] we've now taken um three strings. We've [12360] stuck them all together. The first was [12362] hello, the second was world. The third [12363] was how are you right? The next series [12365] of functions I use all the time and [12367] they're the extract functions for [12369] strings. So we have four. Extract [12371] domain, extract email, extract URL, and [12373] then extract URL paths. And basically [12375] the way that this works is this is just [12377] something that allows you to pull out a [12378] domain name from a string that you [12380] supply that might include it. You can [12381] pull out like email addresses. You can [12383] pull out the whole URL instead of just a [12385] domain. Or you can pull out everything [12386] after the backslash at the end. I'll [12388] show you what I mean by all this uh [12389] right now. So I'm going to use extract [12391] domain first. The way that extract [12392] domain works is you either feed in a URL [12394] or you feed in a believe like an email [12397] and it'll basically tell you what the [12398] domain is. Obviously, you know, this [12399] isn't rocket science. If I delete the [12401] hello string here, because this doesn't [12402] actually have any domain inside of it, [12404] which is why it's returning undefined. [12405] If I were instead to type something like [12407] Nick at leftclick.ai, you'll see that [12410] extract domain extracts [12413] leftclick.ai. Okay. Uh, conversely, if [12416] you were to just go leftclick.ai, it [12417] would remain the same. If you were to go [12419] https back/backslash, it would only [12422] extract the leftclick.ai portion. And [12424] there are variety of instances in which [12425] this is useful. Um, you know, a lot of [12427] the time when I'm web scraping for [12428] either myself, you know, people pay me [12429] to build a web scraper for them, or if [12431] I'm doing it for one of my businesses, [12433] you know, a lot of the time I'm scraping [12434] the web for strings using a regular [12437] expression that follow a certain [12439] pattern. Maybe something like this. [12440] Well, this is just a quick and easy way [12441] where I could feed those strings in and [12442] then it could extract the the domain [12444] name because domain names and URLs are a [12446] little bit different. And a lot of the [12447] time you need a domain name for [12448] something that you don't necessarily [12449] need a URL for. So that's just a quick [12451] example of something that allows you to [12452] extract. If I were to add um some spaces [12455] over here though, you'll see that it it [12456] breaks. So this does not work if you [12458] feed in like multiple or something like [12460] that. It's only really going to work if [12461] you feed in one and then you just want [12462] to extract a portion of it. But this is, [12465] you know, comparable to you slicing the [12467] string in halves. instead of you having [12469] to do some sort of fixed type of data [12470] processing where like you're looking for [12472] the string that occurs after the second [12474] backslash, you know, you can just put [12475] extract domain in there and it'll [12477] basically just always get you exactly [12478] what you want whether or not there are, [12480] you know, threeletter tople domain [12482] endings or twolet like I have over here, [12484] right? So very flexible, very nice. The [12487] second function that I'm going to show [12488] you is called extract email. So as I'm [12491] sure you guys can imagine, if you feed [12492] an email into this, it will return with [12494] said email. If I go back to that other [12496] example and go nickleclick.ai AI. As we [12498] see here, we're now extracting Nick at [12500] leftclick.ai. You know what's pretty [12502] cool? If I add a bunch of other text [12504] here to the beginning and then to the [12505] end. This is different than the extract [12507] domain. Unfortunately, the documentation [12508] is pretty poor. But if I feed in a bunch [12510] of additional information, let's say I [12512] scraped a website and we just have tons [12513] of text. And then just somewhere in this [12515] text, there's one little line that says [12517] Nick leftclick.ai. Okay, one tiny little [12520] line. This will extract and pull out the [12522] nick at leftclick.ai based off of like [12524] an email formatting mechanism. um [12526] whereby it looks for a little string and [12528] then it looks for some at symbol and [12530] then it looks for some domain ending. So [12532] that's really really useful. You can use [12533] this just as your email extractor. You [12535] know, you are going on a website or [12537] something like that. You feed in the [12539] entire string of the scraped website to [12541] this function and then it just pulls out [12543] the email addresses for you. I think you [12544] guys could probably come up with a [12545] million use cases for something like [12547] that. Okay, let me just put this back in [12548] here cuz I hate when it screams at me [12550] with red. And we're going to move on to [12551] the next function which is extract URL. [12554] So similarly, the way the URL works is [12557] uh a little bit differently from extract [12558] domain. In case you guys weren't aware, [12560] this is the domain name right over here, [12561] but this is the URL. So the URL tends to [12564] have some sort of I think this is just [12567] the protocol. Then you have some [12569] standardized delimiter which is usually [12571] this colon and then these two [12572] backslashes and then you have the domain [12573] name. Okay, that's how that works. So uh [12576] this will actually extract a URL based [12578] off of the presence of this. Now, if I [12580] take out the P, right, it's going to [12581] break because there is no protocol [12582] called [12583] HTTS. But I could take out the S and [12585] that would work cuz there is a protocol [12586] called HTTP. I'm unsure if FTP works. [12590] Yes, FTP works. Um, does SSL work? No. [12593] Um, SSH, sorry. Uh, no. Anyway, there [12595] variety of these protocols. Feel free to [12597] look them up if you guys are curious [12598] what sort of URL protocols there are and [12600] sort of like URL structures. But yeah, [12602] this is just a quick and easy way to get [12603] the whole URL, which can be very useful. [12605] And then from here, what I want to do is [12606] show you the last one, which is called [12607] extract URL path. And the way that [12609] extract URL path works is as opposed to [12612] getting the URL itself, which is [12613] everything sort of if I put a slash [12615] here, it's everything before this line [12617] in like the HTTP protocol, they call [12619] everything after this first slash the [12621] path. And a lot of the time websites and [12623] services and stuff like that, they'll [12625] actually store a ton of important [12626] information after that backslash. If I [12628] show you guys what this looks like on NN [12629] in particular, you'll see that this is [12631] my cloud account. So if I were just make [12633] this practical, this is the URL right [12635] over here. It's https [12639] back/nixerive.app.n.cloud. Okay, this is [12641] like the the root part of the URL. This [12643] is the protocol. This is the domain [12646] name. And then this over here is a URL [12650] path called workflow slash and then I [12653] have the ID of my particular workflow [12655] that end uses to grab data from its [12657] server and then display it to me. So, if [12659] I wanted to extract this URL path, if I [12661] just feed in this whole thing, just as [12662] an example and replace my little [12663] leftclick.ai example, you'll see that [12666] what results when I extract the URL path [12668] is basically it goes to this backslash [12671] and then it gives me the backslash plus [12674] the term afterwards workflow plus [12676] everything after um you know the next [12678] slash. And the way that URLs work is you [12680] can go arbitrarily deep over here. Okay, [12682] if we continue down the function list, [12684] the next one up is called hash. Now, if [12686] you're unfamiliar what a hash is, a hash [12689] is basically like a mathematical [12691] algorithm applied to a string that [12694] converts it into just some big long [12696] number. The confusion with hash tends to [12699] be that the number that it generates has [12701] letters in it. So, if I take this string [12704] https [12706] back/back/nix.app.cloud, if I take this [12708] here, then if I hash it according to [12710] their default algorithm, which I believe [12712] is MD5, you can see we get this long [12714] result here. And the reason why a lot of [12716] people don't understand these hashes and [12717] you know they're so scary is just [12719] because this isn't actually like a [12721] string. This is a number um in something [12724] called hexadimal. Hexadesimal is just [12726] another number system where instead of [12730] it going up to 10, it goes 0 1 2 3 4 5 6 [12733] 7 9 8 9 and then it goes a b cde e and [12738] f. You know how binary is zero and one? [12741] Well there's technically a bunch of [12742] different number formats. There's binary [12744] which is 0 and 1. I think there's [12745] quadinary which is 0 1 2 and 3. Um you [12749] know there are a bunch of other ones [12750] right there's like a number system based [12752] off five number system based on 6 7 8 9. [12755] Our number system just tends to be based [12757] off of 10. That's why it's 0 through 9. [12759] But this hexadimal is a number system [12760] based off 16. And the thing is we just [12763] don't have any other characters that we [12764] can use. So uh or I don't know it just [12767] wasn't convenient to invent new [12768] characters for the 10th thing, the 11th [12770] thing, the 12th thing, the 13th thing, [12771] the 14th thing, the 15th thing. So what [12774] uh computer programmers or scientists [12775] the people that developed this um you [12777] know standardized format did is they [12779] just decided to use the letters A B CDE [12781] E and F. So you can think of it as this [12783] uh you know the number three corresponds [12785] to the number three. Um A corresponds to [12788] the number 10. B corresponds to the [12790] number 11. C is 12, D is 13, 14, and [12794] then this is 15. And the reason why it [12796] stops as 15 is because we start from [12798] zero. So 0 to 15 is technically 16 [12801] different numbers. So you know this is [12803] one of the main issues with people in [12804] hashing I find you know the hexodimal [12806] doesn't really explain super easily u [12808] but essentially all all that a hash does [12810] is a hash is just like an algorithm that [12812] takes a string. So if we just go hello [12814] instead of this takes a string and then [12816] just performs a bunch of mathematical [12818] manipulations on the value of h which I [12820] don't know might be 85 or something [12822] whatever the the computer programmers [12824] that came up with the standard for the [12825] the numerical value of every letter is [12827] and then it turns it into something that [12829] is just not easily interpretable by by [12831] humans. Um the benefit of having a hash [12833] is you can then de de hash this and then [12836] you can regenerate this from you know [12838] this [12839] 5D4142 back into hello and what you find [12842] hashes commonly used for as I'm sure [12843] you're aware are security applications. [12845] So things like hashing a password for [12847] instance there's this big common saying [12849] in any sort of computer security and [12851] that's never store passwords in plain [12853] text. The alternative to plain text is [12854] hashing the password in some way. So I'm [12856] not going to go too much into this as [12857] I'm sure you can imagine it's very niche [12858] and this doesn't really make you money [12859] to be honest. I mean like you know if [12861] you in some computer security thing [12863] possibly but there are some values you [12865] can feed this and the only real values [12866] that matter here are MD5 base 64 SHA1 [12871] SHA224 SHA 256 Shaw 384 Shaw 512 Shaw 3 [12875] RIPE MD160 these are all just different [12877] algorithms so if the default is MD5 if I [12879] were to go instead and go base 64 you'll [12881] see that we've now basically done the [12883] same thing that we did with the base 64 [12885] encode function right but uh if instead [12887] we want to do Shaw 1 or something you [12889] know we get shot 224, um, shot 256, shot [12893] 512. These tend to get longer and longer [12894] and longer the higher the the SHA number [12897] thing at the end, just because this [12899] basically represents more and more [12900] complexity. So, I'm going to leave it at [12902] that, but just know that there are going [12904] to be a couple of instances that may ask [12906] you for hashing on some point in the [12907] future, but as somebody that's made tons [12909] of money with no code platforms, uh, you [12911] know, I don't know, in like over a 100 [12913] projects, I've had maybe one uh require [12915] me to hash something, and that was just [12917] really briefly for like one tiny [12918] section. Okay, the next function I want [12919] to run you guys through is one called [12921] quote. It is similar in hash in so far [12923] that I don't use it a lot. Um, all quote [12925] really does uh from a bird's eye [12927] perspective is just wraps your thing [12928] around um your your string in quotes, [12930] right? So, if I just remove this, you'll [12931] see that it is now hello. And if I go [12933] back, it now wraps it in these these [12935] quote signs. But quote can actually do a [12937] lot more than that. It's actually kind [12938] of useful when you start getting into [12939] sending and receiving data through um [12941] you know HTTP requests or web hooks just [12943] because a lot of time you have to [12944] sanitize the data that's being sent. Let [12946] me show you guys a quick example. So, if [12948] there's one thing that you guys might [12949] not know, um, you know how earlier we [12951] defined a string with these two double [12952] quotes and then I, you know, wrote it [12953] down over [12955] here. Okay. Um, well, hypothetically, [12959] let's say somewhere in my string I [12960] wanted to use another quote. What [12963] happens if I try and do this? Well, this [12966] breaks the whole string, right? And the [12967] reason why is because there's just some [12968] built-in logic in string parsers. Parser [12971] is just the thing that determines [12972] whether or not it's a string. But [12973] there's some built-in logic in string [12975] parsers that sees this quote, then it [12977] sees this one and says, "Oh, this must [12978] be the string." Then it sees that one [12980] and then that one and goes like, "Oh, [12981] no, no, no. This must be the string." [12982] Then it sees that one and that one. It's [12984] like, "No, no, no. This must be the [12985] string." Well, how many strings are [12986] there? I can't do this. And then it just [12988] quits. So, there are a couple [12990] workarounds uh when you're using quotes [12992] inside of a string. The first is instead [12993] of wrapping in double quotes, what we do [12995] is we just wrap it in single quotes. And [12996] the second you do that, like this [12998] technically, this this is now [12999] technically a valid string again. But [13001] you'll see, you know, if I just go back [13003] here, you'll see that if I try and add [13005] quotes inside of this now with this [13007] quote function, um, something really [13008] interesting happens. And basically what [13010] happens is this this feature called [13012] escaping. So a lot of the time in order [13015] to prevent this exact issue that I was [13017] talking about from occurring, what you [13018] can do is you can escape a quote sign, [13020] which is um, you can proceed it with [13022] this like reverse backslash character. [13024] What this reverse backslash character [13026] does is this just like cancels out. [13028] Actually, is this a backslash? I don't [13029] know. was a reverse backslash or a [13031] forward slash. Anyway, [13034] um that's funny. I've probably been [13036] calling one the other my entire life, [13038] but hey, might as well have that [13039] realization during filming of a YouTube [13041] video, right? So, uh the way that this [13043] works is we are escaping this character [13045] with this backslash with this slash [13047] character. I'm just going to use slash [13048] to like keep my sanity. And then because [13051] we have this slash in front of it, um, [13053] basically all string parsers and [13056] formatterers will will take a look at [13057] this and say, "Oh, okay. I can actually [13058] ignore the formatting of what happens [13060] next." So, let me show you guys an [13062] example using what I did earlier. You [13064] see how it says Nick says hi. Well, if I [13066] actually put a slash here and then a [13068] slash here, it's now like an acceptable [13069] string, right? But I have to do that [13071] manually every time, right? This is kind [13073] of annoying. Anytime I'm I'm I'm writing [13075] or adding something and I basically have [13076] to go find all the quotes and replace [13077] them. Well, guess what? That's what our [13079] quote uh function over here does. It [13080] just does all that automatically for us. [13082] So, if you wrap the outside with the [13083] single quotes instead, then I remove [13085] this [13088] uh like this, you'll see that it's [13089] actually gone through and it's added in [13090] the the the slashes for us. Um so, this [13094] is just a form of I don't want to say [13096] niche because this can be quite often, [13099] you know, used in quite often in many [13101] applications depending on what you like. [13103] Um it says up here it's useful when [13104] constructing JSON SQL. These are all uh [13107] you know formatting conventions for [13109] sending and receiving data over the [13110] internet. But this this allows you to do [13112] that. This has one parameter. It's the [13114] mark. So you can u actually select the [13116] quotation mark that you want to cancel [13117] it out with, which is pretty neat. So uh [13119] if you want to wrap something, let's [13121] just go back to our hello example. If [13123] you want to wrap this in different [13124] quotes, then you could go single quotes [13127] like this. You could also just create [13128] whatever quote you want. So [13130] hypothetically, let's say that the I [13131] don't know the underscore is my new [13133] quote character. Well, I can just um [13135] have that wrap everything. Okay, let's [13137] cover the next string function. As you [13139] can see, we are making some good time. [13141] The next one here is one called remove [13143] markdown. Now, markdown is another [13146] example of a formatting convention. And [13147] you'll see that this is in large part [13149] what string manipulations are for. They [13151] take some formatting convention and they [13152] just fix it for you. So, the way that [13154] markdown works, and this is kind of [13156] beyond the purpose of this discussion, [13159] uh let's just look this up really [13160] quickly. There's some basic syntax guide [13162] here. Feel free to check this out if you [13163] want. But this is very commonly used [13165] when you are calling um large language [13167] models and open AAI and claude and these [13169] various services to turn text um so that [13172] it's not just plain text but actually [13174] has some sort of formatting. So here's [13176] markdown on the left. Markdown. If you [13177] want to like create a header, what you [13179] do is you add a dollar sign, dollar [13181] sign. You add a number sign and then a [13182] space and then the header. If you want [13183] to do like an H2, you go two [13186] H3. They show us what it looks like in [13188] HTML as well, which is another markup or [13190] rendering language over here. And you [13192] can see that, you know, if you want to [13193] do the equivalent thing for markdown in [13194] HTML, you need to wrap this in some H1 [13197] tags. Markdown's a little bit more [13198] efficient. As you can see, the total [13199] number of characters used to represent [13201] the same information was just two here [13202] instead of 1 2 3 4 5 6 7 8 9. And so [13207] when you communicate with large language [13208] models, you know, obviously the main [13209] benefit there is the fewer tokens, the [13212] fewer characters, the less money you [13213] tend to be built, especially with these [13214] bigger APIs. So that's why everybody [13216] just tends towards markdown in order to [13217] get rendered outputs like this. So all [13219] that function that remove markdown does [13220] is hypothetically if I go back to [13222] creating my own string again and then I [13224] were to say heading one, you'll see that [13226] this just takes out the markdown [13228] formatting. It has a built-in parser [13230] again that looks specifically for [13232] instances of these number signs for [13233] headings. If I were to add 2 3 4 5 6 7 [13236] 8, you know, as you can see, nothing [13238] really changes here. You know, it does [13239] add a space, which is interesting, but I [13240] don't believe it adds a space um on [13242] anything up to six. Yeah. So anything up [13244] to and including six doesn't add a [13246] space. It does on seven. Why? cuz this [13248] is no longer considered um like uh like [13251] there is no heading seven hypothetically [13252] and so now it says okay this just must [13254] be like a bunch of bogus markdown um [13257] number symbol stuff so this must [13259] actually be a real character we're going [13261] to render the space peculiarities of [13263] markdown aren't super important just [13264] know that you can remove it all with [13266] something like this if you want [13267] similarly there's also a function called [13269] remove tags which works as I'm sure you [13271] can imagine very similar to remove [13272] markdown it's just all this does is [13274] instead of removing markdown if we go [13276] back to our markdown in HTML comparison [13278] here. It just removes the HTML tags. So, [13280] this is considered a tag in HTML. If I [13283] were to go back to my end function and [13284] if I were to try and create a new [13287] heading called heading one, what this [13290] will do is it'll jump in. It'll actually [13291] just remove all instances of this. Now, [13294] when is this useful? Um, well, I'll give [13296] you guys a quick and easy example just [13297] because I think that this is something [13299] that I do often enough for it to [13301] represent like for it to be valuable. [13303] But if I go and I do an HTTP request to [13305] my own website, notice how on the right [13307] hand side here, I receive a bunch of [13308] HTML. That's kind of a lot of HTML. [13310] Right? Now, if I go and I add another [13312] edit fields node and then I go manual [13315] mapping and then I go um no tags. If I [13319] feed in my [13321] data and then if I go remove tags, what [13325] you'll see is I've basically gone [13327] through and if I just expand this a [13328] little bit so we could see big. I've [13330] basically gone through and I've taken as [13331] input all of this ugly looking HTML. [13334] Then I've gotten as output just the [13335] plain text of the website basically. And [13338] when you have the plain text of the [13339] website, not only is it a lot more token [13340] efficient when you're calling large [13341] language models and stuff like that, you [13343] know, you could you could run like [13344] searches over this uh it' be easier, [13345] faster and so on and so forth. So this [13347] is just a principle of like removing [13349] waste. So that's how you'd use that. The [13351] next function I want to talk about if we [13352] just go back here and then select my [13354] dollar sign JSON and then go back to [13356] string. The next function I want to talk [13359] about is called replace. Now, as opposed [13361] to replace all, which I use a lot more [13363] often than replace. What replace does it [13365] just replaces the first element that uh [13367] it sees with another element, it doesn't [13369] just replace every instance of it in the [13370] entire string. So, remember how earlier [13372] replace all took L's and then I replace [13374] them all with W's and then it was hello. [13376] Well, in this case, if I were to try and [13378] replace an L with a W, it would go hello [13380] instead cuz it's only grabbing the first [13382] one. If I switch this back now to [13384] replace all, it does um all characters. [13386] But if I go back to replace, you see it [13387] only does one. So it's kind of neat. Um, [13389] you know, it's a little bit niche. I [13390] mean, there aren't too many situations [13391] in which you want to replace one [13393] character and not replace all [13394] characters. At least in my experience. [13396] There's another function here called [13397] replace special cars. Basically, you [13399] know, a lot of other languages than [13401] English will have things like accents. [13402] So like alone, you have deja, you have [13409] excuing characters that sometimes, [13411] unfortunately, APIs do not support. What [13414] this does is it just allows you to take [13415] them out. So if you know I had uh how [13420] the hell am I going to write [13421] that? I just realized that I don't [13424] necessarily have any of these. Um you [13427] know if I was going to write something [13429] like you know [13431] zuer let's go back here. What this will [13435] do, you know, if you feed Ju into [13437] replace special characters, um the [13438] output is just going to be zu like [13440] without the the exaltu um on the right [13442] hand side of this. And you know, this [13444] doesn't just apply to French. Obviously, [13446] there's a ton of languages out there [13447] with all sorts of things above letters [13449] like um and stuff like that in German. I [13451] believe that's how you pronounce them. [13452] Anyway, any Germans in my audience, feel [13454] free to roast the hell out of me. Yeah, [13455] it's just a quick and easy way to just [13456] replace those before you do an API call [13458] to a service that doesn't support them. [13460] So, if you're calling a service and then [13462] it just like keeps on giving you weird [13463] error messages that you don't fully [13464] understand and your input includes one [13466] of these characters with like accent [13469] above or some sort of marking or symbol, [13471] call replace special cars and give it [13472] another try. I use this maybe like 5% of [13475] the time. Most APIs are pretty good now, [13476] but some of them are still sort of [13478] modernizing. Okay, the next function is [13480] called slice. Now, slice is pretty [13482] interesting. I use slice all the time. [13484] If I go and select JSON string, what [13486] slice does is it basically allows you to [13488] select a substring, but not based off of [13491] characters, but actually based off of um [13494] the number of characters from the start [13496] or the finish. So, we're not slicing [13497] based off of L to O. Well, I mean, like [13499] we can if we want, but I guess what I'm [13501] trying to say is we're feeding in the [13503] character order and the position and [13504] then we're using that to extract a [13506] substring. So, everything is zero index. [13508] That just means it starts at zero at an [13509] ind. This is technically the zeroth [13510] character. This is the first character. [13512] This is the second character. If I were [13513] to try and grab everything from zero to [13516] 0, 1st, 2nd, 3rd, I think fourth, maybe [13520] I'd go 0 to four and then it would say [13522] hell, right? You know, if I just wanted [13524] to grab the O, I'd go four to six, then [13526] I grab the O, and then the exclamation [13528] point. There is some nuance regarding [13530] the start position, and I believe the [13531] second one is inclusive. You also don't [13534] necessarily always need to have uh the [13536] second value here. So, you can actually [13538] just feed it in a start, and then it'll [13540] just automatically run till the end of [13541] the string. That can be pretty useful [13543] because you know sometimes you don't [13544] know the length of the string, right? [13545] Sometimes you just want to grab [13546] everything from like the third character [13547] onwards. If you think about it using our [13549] previous example, let's say I have [13551] something like this. Well, instead of [13552] using the extract domain, you could use [13554] slicing as an alternative to you [13556] extracting a domain if you wanted to. [13558] Obviously, the only issue would be if [13560] somebody removes the S and it's instead [13562] like an unvalidated or nonsecure [13563] request, then all of a sudden we lose [13564] the first letter. So, it's usually [13566] better uh in those cases to do to use [13569] the tools that were sort of meant for [13571] this. and you'll be able to handle any [13572] flexible amount that you'd like. Yeah, [13574] slicing has a number of uh cool use [13576] cases, I would say. So, generally a fan [13579] of the slice function. Let's go back to [13581] JSON. And let's see what's next. We [13584] already covered split, so I'm just going [13585] to cover that. Next up, we have [13586] something called substring. Substring [13588] is, from my understanding, basically the [13590] exact same thing as slicing. I'm not [13592] really sure why there are two to be [13594] completely honest. Um, all this does is [13596] just returns the same thing that slice [13597] does. So, let me give you an example. If [13599] we were to go uh 0 to four, it's hell. [13602] If we just replace this with slice, you [13604] see the result doesn't really change. [13606] So, I'm not really sure why substring [13607] exists to be completely honest, but this [13609] is just personally uh what I always use. [13611] I like slice better than substring cuz [13613] how much cooler does slice sound? We're [13615] slicing a string than versus we're [13618] extracting a substring. You should just [13620] operate purely off of vibes, clearly. Um [13622] anyway, next up we have a function I use [13625] pretty often. It's called trim. [13626] Basically, what happens a lot of the [13627] time, especially when you're scraping [13629] resources, is you will get data, but [13630] that data will tend to have like a [13631] variable amount of white space to the [13633] left and to the right. Whites space just [13634] means a bunch of spaces or new lines or [13636] something. Trim just removes all of that [13637] for you. So, um, you know, I mean, they [13639] give you an example of lonely. Let me [13641] show you what this might actually look [13642] like with a string that we type in. You [13644] know, this is, hey, how's it going? [13647] Google.com and then we have another [13649] space. What this does, as you can see [13651] here, there are three spaces. There's [13652] one at the beginning, there's one in the [13654] middle, and then there's one at the end. [13655] Uh what this does is it just removes the [13656] ones on the end. Same thing, you know, [13658] if we added well, I mean, you can't [13659] really do it, but if we added like a [13660] bunch of new line characters, uh tab [13662] characters as well. This isn't actually [13664] like taking any of those because the [13665] part of the way that this works is it [13667] just looks for the presence of that [13668] slash and then the nt and I think [13670] there's one more. These characters just [13672] denote like a new line. Pretty useful to [13674] use. So yeah, I like to use trim [13676] basically anytime that I'm feeding in a [13678] string that may have some sort of [13679] variable white space. Uh when I'm [13680] scraping, I use trim all the time. you [13682] know, just kind of make sure that my [13683] data is standardized, formatted well, [13685] and that I'm not just like asking for [13686] any additional like I'm not using any [13688] additional characters or tokens. There's [13690] trim end and then there's trim start. [13691] Um, this just does the same thing that I [13693] showed you guys earlier. It's just it [13694] preferentially removes things at either [13696] the start or at the end. So, trim end [13698] obviously just takes this out. If I were [13699] to change this to trim start, it would [13700] obviously just take that out, but I just [13702] tend to use trim more generally. We have [13704] two more functions under edit, and those [13706] are URL encode and then URL decode. Now, [13710] if you're unfamiliar with how this [13711] works, usually um when you are dealing [13713] with a URL of some kind, you have [13716] characters that look kind of like this. [13718] You have percentage signs, threes, um I [13720] think those rep uh percentage sign 3D, I [13723] think those represent an equal sign. [13724] Percentage sign 20 that represents a [13726] space. The reason why you do this is [13728] because you can't actually just legally [13729] have, you know, like if if this is my [13731] URL, you can't actually legally have um [13733] a bunch of spaces. So, actually, let's [13735] go back and let's go docs.google.com. [13738] Like you can't say hello, how are you? [13740] Uh this would not be a valid URL, right? [13742] But what you could do is you go um [13744] number sign 20 number sign 20 number [13746] sign 20 number sign 20 and now this [13748] would be like an actual URL. It's not a [13750] URL somebody has created but it is a [13752] real URL like we can actually press [13754] enter and and format it. So all that [13756] this does is it basically converts [13758] something that may include those [13760] characters into something that doesn't [13761] and uh vice versa. So let's [13763] hypothetically say you wanted to go to [13764] leftclick.ai AI and then you want it to [13766] go to blog post call. Let's go blog and [13771] then we go a post with the name of [13776] awesome. Okay. If we URL encoded this, [13779] what it would do is it would take all of [13781] the characters that aren't really like [13783] legally allowed. So, you know, in our [13785] case, mostly these spaces, although you [13787] see it actually also does some [13788] transformations under the hood to colons [13791] and backslashes and stuff like that just [13792] because these characters aren't [13793] technically being rendered. you know, [13794] it's just kind of a quirk of how the [13795] browsers are rendering these to us. But [13797] in reality, when you like request to a [13798] server or something like that, they're [13799] they're being encoded. And then uh what [13801] you can do is you can then subsequently [13803] decode this and you can kind of [13804] transform it back to your initial URL. [13807] So sometimes you'll just see an API or [13809] something that'll say, you know, this [13810] requires like URL encoded um or I don't [13813] know this this requires stuff encoded in [13814] a certain way. You can use URL encode [13817] when you're sending and receiving and [13818] making requests to things. I basically [13820] never really use this in practice, but [13822] it is uh something that they offer to [13824] you as a tool in case you need to. Okay, [13826] next up we have a bunch of query [13827] functions. We've already covered ends [13828] with and includes. Now I'm going to [13830] cover index of. Index of is pretty cool. [13832] It basically allows you to find a [13833] substring that is present inside of the [13835] string and then tell you at what index [13838] did that substring occur. This can lead [13840] to some really interesting string [13841] manipulations and some cool use cases [13843] where like you'll find the index of [13844] something first and then you will use [13846] that to take a slice or something from [13849] from one character to another and then [13850] do a bunch of other cool stuff. Send and [13852] receive data that way. But uh yeah, I [13854] mean in our hello example, right, if I [13856] were to feed an index of H, what do you [13859] think would happen? We'd feed in zero. E [13861] would be one. L the thing about L is [13864] notice that you know I have two L [13865] characters there, right? So if I really [13867] wanted to get the index, I'd have to go [13869] L because that's a unique character [13872] there. Could also go O, which would be [13873] four. Then I go exclamation point, which [13875] be five. I go L. I could go L. I could [13879] go L L. I could go low. And then I could [13883] go O exclamation point. And then I could [13885] get like basically a a sliding window of [13888] two characters instead. But just notice [13889] how it always grabs the beginning of [13892] that. in their example steam and then t [13895] we're finding the first um index because [13898] s is at zero t is at one and then even [13900] though it's three characters te ea it [13903] still starts at one which is pretty neat [13905] so yeah I use index of not super often [13907] to be honest I usually don't need to [13909] search through things um numerically [13911] like that but you know it's a good [13913] function to understand last index of is [13915] very similar to index of but it solves [13916] that problem that we had a moment ago [13918] with the l so um you know if we go index [13920] of and we just type in and L the result [13923] is two. But if there are instances where [13925] we might have you know some characters [13928] repeated multiple times or something you [13929] can grab the last index of L and notice [13931] how that is now three in our hello [13932] string. Next we have match. Match is [13934] pretty interesting and you sort of need [13936] to understand a term called regular [13937] expressions in order to really get it. [13939] But essentially this is a much more [13941] powerful find and replace sort of tool. [13944] Um I don't know if this function in [13946] particular allows you to replace [13947] something. I don't believe so. But it [13948] does allow you to find the thing. And [13949] then you could always just like grab [13950] that thing and then replace it later. [13952] But um basically let's say we have a [13954] string, right? And instead of hello, I'm [13956] going to use a much more varied example. [13958] I'm going to say hey man, how are you [13961] doing today? Okay. And hypothetically, [13964] let's say we want to find the man or um [13967] we want to extract the man string. So if [13970] man is present inside of this, we want [13972] to extract it. If it's not, then we [13973] don't want to. Okay. What we do in order [13976] to do this is we build up something in [13978] what's called the regular expression I [13979] think like templating language. So [13982] instead of just like identifying the [13983] thing, we're actually going to extract [13984] it. And the regular expression [13986] templating language like it looks kind [13987] of weird. As you can see here, there's [13988] some there's some backslashes and then [13990] some up arrows and stuff like that. It's [13993] it's not super difficult to do. If I [13994] were to type in a backslash and then man [13996] and then another backslash and I really [13999] got to stop using the term backslash [14000] here. Um, you can see that it did in [14002] fact extract men. But hypothetically, I [14005] could also instead of just looking for [14007] man and like hard- coding it like this, [14008] cuz this really doesn't do anything for [14010] us, right? Instead, what I can do is I [14012] could look for all instances of [14013] threeletter words. Okay? So, um, in this [14016] language, it would be a to z to z. Then [14023] it would be a to z to z. But I just copy [14027] that one last [14028] time. And then we do that one more time. [14032] Now, um, in our case, we're we're [14034] matching the first instance of this. Um, [14035] but if we wanted to match all, I think [14037] we we'd feed in a G operator, which [14040] would be on this backslash and this [14042] slash and then this G at the end, just [14044] because regular expressions are sort of [14045] outside of the scope of a video like [14047] this, and because it's an entirely new [14049] language, um, my go-to is if you want to [14051] build a regular expression, if you need [14052] one, and there are many, many instances [14054] in which you will need one, head over to [14055] this website over here, reax 101. You [14058] can insert whatever your string is that [14059] you want. Hey, how are you doing today? [14062] And then sorry, you'd actually insert [14064] the test string down here. And then you [14066] actually have the ability to play around [14067] live and see how your changes extract [14069] various parts of um the text. So as you [14072] can see, we have this backslash at the [14073] very beginning. Dang, this slash at the [14075] very beginning. We have this slash at [14077] the end, and then we have some options [14079] here. Um these options always just occur [14080] after the last slash. So in our case, [14082] global and multi-line. Um again, this uh [14085] this resource will explain everything to [14086] you if you look at it. But if you wanted [14088] to extract the man, you might type man. [14090] Um, it's going to say that it's not [14091] matching the subject string because we [14093] don't have man in it. But if we say how, [14094] right, you'll see that as I type H, it [14097] illuminates two elements that are being [14099] extracted. H O, now it's these and then [14101] H O. There also a bunch of really cool [14103] things. Maybe we want to go like you [14105] doing, right? But maybe instead of you [14108] doing, we just want to find the presence [14110] of U and then we want to extract [14111] everything from U all the way to the [14112] end. Well, if I were to do that, then um [14114] I could just go period, which matches [14117] any character, and then I could multiply [14118] it an infinite number of times to go to [14120] the end. Or maybe I want to grab [14121] everything before the U. So, I'd go [14124] period U. And now I extract everything [14126] here. You can also play around with the [14128] presence of um these two brackets. This [14130] allows you to extract specific sub [14133] elements or substrings from the parent [14135] string. Um so, as you can see here, now [14136] we have a green section that is [14138] illuminated because we've wrapped this [14140] in a capture group. And then the the [14142] blue U section is sort of also captured, [14144] but it's not in our captured group. And [14147] yeah, that's just more or less a quick [14148] little rundown of what you can expect if [14150] you were to go super deep in regular [14152] expressions. Uh I should also note that [14154] an AI is really really good at coming up [14156] with regular expressions for you. Like [14157] if I were to feed in this and then I [14161] were to say I want a regular [14163] expression to capture [14166] um all threeletter words in the above [14170] string. If I were to press enter and I'm [14172] just using a new model called 03 mini [14174] high. Uh it's new as of the time of this [14176] recording and probably not going to be [14177] new by the time that you guys watch it. [14179] Uh but if I were to do this uh I would [14181] get something like this. And notice that [14183] it's always going to start with a slash. [14184] It's always going to end with a slash. [14186] And if I were to feed this [14188] in, if I were to remove the beginning [14191] and at the end, what you can see is we [14192] basically gone through we we've [14193] extracted all threeletter characters. [14195] Um, and it threeletter words, and it's [14197] done a really good job of it. So, you [14199] know, over the course of the last, I [14201] want to say 6 months or so, AI has [14202] gotten to the point where he can do [14203] this, um, as of the time of this [14204] recording. Uh, and if you know, you're [14206] wondering how exactly to do regular [14208] expressions and you're watching my video [14209] and you're like, "What the hell is that [14210] guy doing?" Um, AI can can do an even [14212] better job than I can like 90% of the [14214] time already. So, they're automating my [14216] regular expressions. What a dang shame. [14219] Next, we have a another uh module or [14222] another function that uses regular [14224] expressions, but instead of returning [14225] the actual extraction, what we're doing [14228] is we're returning the place that the [14231] character occurred. So, in this case, [14233] we're searching for n and then we're [14236] going um I don't know, I think this is [14238] like at the beginning of a word and then [14241] anything else after that. And so it [14243] tells us, hey, what time does the first [14244] word start or in what position does the [14246] first word starting with n occur? In [14248] this case, it's 0 1 2 3 4 and then five. [14251] Um, and keep in mind that regular [14253] expressions tend to be case sensitive [14254] unless I think you specifically turn [14256] that off. So, uh, it's not capturing the [14258] first capital and it's capturing the the [14260] second. I don't really use search [14261] basically ever to be completely honest. [14263] Um, search to me just doesn't really [14264] have any value that index of doesn't. [14266] So, uh, from here on out, we are now [14269] moving into the validate section. So now [14271] we have a suite of functions that I use [14273] very often to validate whether something [14274] is a domain, whether something is an [14276] email, whether something is empty, [14278] whether something is not empty, whether [14280] something is numeric or whether [14281] something is a URL. Let's start with [14282] domain. So remember earlier how we fed [14286] in https [14288] back/back/leclick.ai. Right? And then I [14290] said that this was a URL and inside of [14293] the URL you had a protocol, you had some [14295] sort of delimiter, and then you had the [14296] domain name. Well, this will tell you [14298] whether or not what you're feeding in is [14299] a domain name. So what do you think? If [14301] I feed this in, is this a domain? The [14303] answer is no because we include we've [14305] included the protocol and the delimiter [14306] as well. If I take this out, is domain [14308] now reverse to true. Now, alternatively, [14311] if I change this to is URL, you'll see [14313] that this is true. But if I just feed in [14315] a domain name, you'll see that this is [14316] false because a URL requires all of the [14319] other subsequent [14320] components. Okay, we have a couple of [14322] other ones that we can go into as well. [14323] We can do empty. So if a string is [14325] empty, you can very quickly validate and [14327] check it. So obviously, is this empty? [14329] No. Right. But if I were to take this [14332] and delete everything, then yes, it is [14333] empty. We can go is not empty, which is [14336] just the inverse of is empty. So is is [14338] this not empty? Yes, true. This is not [14340] empty. There is a bunch of stuff inside. [14342] If I take it out, is this not empty? No, [14344] it is empty because there's nothing [14345] inside. And then similarly in the same [14347] vein, um we can do a little bit of [14350] checking to see whether or not something [14351] is an email. So if nick at [14355] leftclick ai, you'll see that this [14358] converts to true because there is [14359] currently no tople domain. That's just [14361] the thing at the very end here. Um that [14363] isn't at least two characters, right? [14366] But if I were to just feed in a domain [14367] name, that would obviously be false. [14369] Quick and easy way to do validation and [14371] verification. And then there's also one [14373] for a numeric, which is somewhat [14374] interesting. Basically, what you have is [14376] the ability to check whether or not all [14378] that you fed in is is a number. [14380] So you can feed in um integers, you [14382] could feed in like decimals, you could [14383] feed in like negative numbers and stuff [14385] like that. Um and if it's a number, [14386] it'll tell you. If you feed in an f or [14388] an e or whatever, um then you know [14391] obviously this is no longer just a [14392] number. It's also a bunch of other [14394] characters here, which is why is numeric [14395] is now reverting as false. Okay, the [14397] next functions are very simple and very [14399] straightforward. There are a bunch of [14400] case functions. So there's two [14402] lowercase, two sentence case, two snake [14404] case, two title case, and two uppercase. [14406] Lowerase is hopefully self-explanatory. [14409] Hello. How are you doing, Nick? If I [14412] feed in this, which has two [14415] capitalizations, it just lowercases [14417] everything. This might be useful when, I [14419] don't know, you're trying to convert [14420] something into a domain. So, if I were [14422] to go uh sorry, convert something like [14424] like into a blog post slug. So, let's [14425] say I had a blog post title and it's 38 [14428] ways to make money online, right? And I [14431] wanted to convert this um into something [14433] that I could stick onto my my URL. [14435] Basically, what I could do first is I [14437] could replace [14438] all instances of a space and I could do [14442] so with a dash and then I could just go [14446] lowercase. And what I'm doing now is I'm [14449] converting um this over to something [14451] that might actually fit inside of my [14452] URL. Pretty cool, right? That's what [14455] lowercase does. Now, obviously, there is [14457] an alternative and that is if I just [14459] remove this here, um there are a bunch [14462] of other similar functions that change [14464] the case of the of the string that [14466] you're feeding in. So, if I were to say [14468] 38 ways to feed, sorry, to make money [14470] online, and then I would go to go [14472] uppercase, well, then we would just [14474] scream 38 ways to make money online. But [14476] there are a couple of other cases as [14478] well. There's something called sentence [14480] case. The way that sentence case works, [14481] if you're unfamiliar, is it basically [14483] just capitalizes the first letter of the [14485] entire string. So, ways to make money [14487] online, right? If I were to remove this [14490] to sentence case, you'll see that I'm [14491] basically taking all of these and then [14493] I'm I'm pumping them. Uh, I'd have to [14496] remove this dot as well. And then I'm uh [14498] bringing up all of the subsequent first [14499] letters of every word back up to capital [14501] case. For to put this in, I just remove [14503] that. And then there's a there's a [14504] couple more. There's one called snake [14506] case. Snake case is pretty interesting. [14508] Um, this basically does uh almost like [14510] what I was what I was saying earlier [14512] with the URL replacement, but instead of [14513] a dash, we're doing an underscore. And [14515] this is just like a way to like create [14516] variable names really quickly because [14518] there are two naming conventions for [14519] variables. There's um camelc case and [14521] then there's snake case. Snake case just [14523] always has underscores between every [14524] word because uh spaces are not [14527] represented well in programming because [14528] parsers break. And then the last one is [14531] to um title case. And what you'll see is [14535] nothing changes between this and this. [14537] The reason why is cuz this is already in [14539] title [14541] case. All title cases is it grabs the [14544] first letter of all major words. So I [14546] think uh words that are not connectors [14548] like to or at or a or 'the' and it makes [14551] them capital. So ways make money man if [14556] I were to go at I guess that [14559] is oh no it's not if I were to go at [14562] then at would not be a connector the [14565] right most would but not the so yeah I [14568] mean all of these are just different [14569] ways to turn something into um something [14572] else which is nice. Okay the next [14573] function is called parse JSON. It's [14575] pretty interesting. Uh, but basically [14576] the way that it works is a lot of the [14578] time when you receive queries uh from [14580] the internet like when you do some sort [14582] of scraping or when you consult an API, [14584] what you get is you get something that [14586] has a lot of those escaped delimiters [14588] that I mentioned, the slashes before [14589] certain characters. So I'll give you [14591] guys a quick example and you'll [14592] understand this intuitively. Let's say I [14593] have a string here. Okay? And this [14595] string is like a JSON object. So I'm [14597] going to go name and in order to do this [14600] I'm going to cancel it out and then I'll [14602] go you know Peter like this and then [14606] I'll wrap it. Uh if I feed this into [14608] parse JSON, you'll see what happens is [14610] I'm actually parsing this out into an [14612] object. Like previously, this is a [14615] string, right? The string is uh this [14618] curly brace, the quote sign, name other [14621] quote sign colon uh quote sign uh Peter [14624] and then quote sign and then this other [14626] curly brace. But if I go parse JSON, [14628] what I'm actually doing is I'm [14629] converting this to an object. I'm [14630] literally converting the data type into [14632] another data type um which I will be [14634] showing you um you know, cool things [14636] about. And if you if you parse this, if [14638] you click test step, [14640] um what you'll see is sorry uh what I'm [14642] what I mean to say is now that it's [14644] parsed, what you can do is you can [14645] actually reference things inside of the [14647] variable of the thing that you just [14648] parsed. So now, for example, I can [14649] actually just extract the name from [14651] this. So I mean, you know, uh obviously [14653] I'm just writing this all out right now, [14654] which is why this doesn't seem very [14656] useful. You can imagine how if you [14657] receive a big long string, well, you can [14659] actually parse it directly in your [14661] expression editor, which makes this [14662] super powerful. Um, you know, as I [14664] mentioned, I don't use this super often. [14666] Uh, just because I'm not like calling a [14667] lot of dedicated or hidden APIs where I [14670] find that this typically comes up. Um, [14672] but you know, you can you can use this [14673] so that you don't have to like add [14675] another node. You don't have to like [14676] render something or or parse something [14678] in this node and then deal with it [14679] later. What you can do is actually just [14681] like get a string that contains [14682] JavaScript, parse it out, and then [14685] you'll be able to extract whatever value [14687] you want. So, you know, because this is [14689] an object, I can now reference keys or I [14692] can get values, right? I can do a lot of [14693] other stuff with it. Um, and I'm going [14695] to be running you guys through the [14696] object functions in a moment. Okay, the [14698] next function is to boolean. Boolean's [14700] pretty simple. Um, basically if I feed [14702] in a one or a zero, what I do is I [14705] convert this data type from a string [14707] into this boolean which is true or [14709] false. So zeros are false, right? Zero [14711] is is um no, it's off. It's false in [14715] boolean logic. One is on, it's true, [14718] it's good, right? So um I'm basically [14721] converting this from a string into like [14724] a separate data type called true. I [14726] rarely use this in practice because most [14727] of the nodes in n that I'm realistically [14730] going to care about. They're going to [14731] have some sort of type conversion built [14732] in. This next one is called to date [14734] time. This is actually super useful um [14736] because a lot of the time you're going [14737] to be converting to and from some [14739] standardized datetime format in order to [14741] do things like add a certain number of [14742] minutes, add a certain number of hours. [14744] The context here is NAN uses this [14747] specific type of datetime formatting [14748] called Lexon datetime. But basically all [14750] this does is it just allows you to [14751] convert like a string into another type [14754] of object that you can now do math with [14756] basically uh which is pretty cool. So [14758] I'll give you guys a quick example um [14759] just to show you guys just how many [14761] things are representable as dates. If [14762] you just feed in like the number one, it [14764] will find the first date of 2001. Why? I [14767] I don't know. There's just some logic [14768] that's going on under the hood. But [14770] hypothetically, if I were to grab the [14771] current date in um I think like uh day [14775] day no month month day day year year [14777] format it would be 0131 [14780] uh 2024. Right? So now this is [14783] converting um the current date to the [14786] standardized date format. Sorry I guess [14788] 2025 it converts into the standardized [14790] detype format. What's the cool thing [14792] about this? Well, if I press uh dot here [14794] now, what I can do is now I have a whole [14796] other function suite available to me [14798] that includes datetime specific [14801] functions. So now we can do a bunch of [14803] really cool things. We could convert to [14804] local string and now this actually [14806] converts this into um the specific uh [14809] basically they grab my local and then it [14812] converts it into the specific type of [14813] string that people are most likely to [14814] see here. So you can imagine this might [14816] be really really useful if you're [14817] working in databases or something like [14819] that. There are a variety of other [14820] datetime functions as well which we're [14822] going to get into. But yeah, you can do [14823] things like extract certain times. You [14825] can do things like subtract uh I don't [14827] know five days from January the 31st to [14830] give us January the 26th. All this stuff [14832] ends up being super super valuable um [14834] when you're working. Okay, great. The [14836] last thing I want to cover is to number. [14838] So let's say I have the number [14842] 123,54. Okay. All this does is it takes [14846] the string that is 123,54 and converts [14849] it to a number. What do I mean by this? [14851] Well, um numbers and strings are [14853] different, right? And so, um all this is [14855] doing is it's allowing me to do a [14856] conversion from the string format of [14859] 1,120,54 to the number format [14862] 123,54 which means now I can do things [14865] like I can add. So, I just added five, [14867] right? If I were to try adding five to [14870] the string, all we do is we actually [14872] literally add the string five to it. You [14874] guys kind of see what I mean? If I go 1 [14876] 2 3504 + 5, what I'm doing is I'm [14878] appending five to this four. I'm [14882] concatenating. But if I make this into a [14884] number, well, now we can actually [14885] perform a logic on it. We can we can I [14887] don't know, multiply it by five or 12, [14889] right? If you were to not, then you [14891] know, if you were to try and multiply a [14893] string by 12, um, I guess it would allow [14895] you to because this is like a very clear [14897] operator. But yeah, the the plus [14900] specifically is sort of like the the [14901] breaking example of doing mathematical [14903] operations on strings. And this is [14905] equivalent to concat [14907] 12 as we could see here. So basically [14910] all this is doing is it's just verifying [14912] that this thing is a number. And then [14914] once it's a number, we can do a ton of [14916] like really cool, you know, math and [14917] stuff like that with it. I use two [14919] number reasonably often. Yeah, a lot of [14920] the time like I'll grab a string, that [14921] string is formatted in like a particular [14923] way and then I extract it. I turn it [14925] into a number and then once I've turned [14927] it into a number um you know I can I can [14929] do really cool things with it. And then [14931] there's one other example here in NADN [14933] where um you can have a number that's [14935] like 1.23 E10. That's like 1.23 raised [14938] to the 10. Well, you can actually take [14939] the string and then you can convert it [14941] into like a usable number that you can [14942] perform mathematical operations on. This [14944] is sort of like more of a scientific [14945] need. So you're not going to use it [14946] super often, but I do use two number [14948] just to make sure that my my types are [14950] okay. Okay. Next up, we have the number [14952] family of functions. This is pretty [14954] straightforward. Now that we've done [14955] string, I'll say that string and array [14956] are probably the most difficult ones. [14957] This one's going to be a little bit [14958] easier. Um, let's just type in the [14960] number. And now let's reveal all the [14962] functions available to us. So the first [14965] one we're going to cover is round. Round [14967] is kind of what it sounds like. If I [14969] were to feed in JSON number, which in [14971] our case is 3.5, into round, what [14973] happens? This goes up to four. If I were [14976] to try and uh change the number of [14977] decimal places and go two, it'll round [14979] to 3.5. If I go three, it won't do [14982] anything because this number doesn't [14983] have any more decimal points, right? But [14985] yeah, this will automatically round up [14986] to four, which is just default behavior. [14988] Anything um up to 3.499 repeater will [14991] round down. Anything at 3.5 and up will [14994] round up. Um and yeah, this is just sort [14995] of like default behavior. It's it's [14997] great for like removing complexity from [14998] numbers and stuff like that. Now, I [15000] should note I want to show you guys a [15002] little bit more context here. I don't [15003] just want to use JSON number. So, if you [15004] want to write a number in NAD, you could [15007] do so just by wrapping round brackets [15008] around it like this. So, if I'm rounding [15011] 234.5, this will be 235, right? I'm [15014] going 499, it'll be down. But what if I [15017] go this and then I want to round to the [15020] second decimal point. How about the [15022] third decimal point? The fourth decimal [15023] point. I don't think there [15026] uh yes, sorry, I was just getting a lag [15028] actually. If I wanted to round to the [15029] sixth decimal point, all the way over [15031] here, right? This is a two, a three, it [15033] would be down. If it's a a six, it would [15035] be up, right? Because we have a five [15037] down here. Anyway, point I'm making is [15038] you can round stuff and rounding is [15040] cool. All right. Now, why don't we do [15042] the uh more directed version of round, [15045] which is where we specifically say, am I [15048] aiming for the floor or am I aiming for [15050] the ceiling? So, if I aim for the floor [15052] of 3.5, what do you guys think is going [15054] to happen? This is going to return me [15056] the number three. If I aim for the seal [15058] of 3.5, what's going to happen? This is [15061] going to return me the number four. So [15063] basically this is just a directed way to [15064] perform your rounding operation sort of [15066] manually. Right? 3.8 is always going to [15069] go up to four. 3.1 is going to go up to [15071] four. Um if I were to replace this now [15073] with the number three ceiling of three [15075] would be three. 2.9 would be would be [15078] three. 2.1 would be three. Two would be [15081] two. 2.001 would be three. So it's [15085] interesting um you know just how much [15087] granularity NN gives you in being able [15089] to manipulate numbers with this. Uh but [15091] yeah, that's the way that seal works. [15094] The next number function is called ABS. [15096] That stands for absolute, not my ripped [15099] six-pack. Uh basically, when you feed in [15101] something like a number here, um you can [15104] do so uh you know, with with positives [15106] or with negatives or whatever, all this [15108] does is just returns to you uh what's [15110] called the the absolute value of that [15112] number. So, ABS just says, hey, if [15115] there's any negatives, something like [15116] that, I just want you to get the [15117] absolute magnitude of it. If I feed in [15119] 2.001, 0 01 it'll just return me two. So [15123] you can kind of think of it as just a [15124] way to strip negatives get only the [15125] actual magnitude of the thing. Magnitude [15127] being the distance from zero. Okay. On [15129] top of that we also have a few other [15131] interesting ones like format. Now the [15133] way that format works is basically you [15135] know how sometimes Americans and [15137] Europeans will format numbers [15138] differently. Like sometimes Europeans [15140] might put like the euro at the end of [15142] the sign or something uh end of the [15143] number and then Americans sometimes [15145] might put the dollar sign or usually at [15146] the beginning of the number. Um, [15148] sometimes they use periods as delimiters [15151] in thousand separators instead of commas [15153] and stuff. Format just deals with all of [15154] that. Now, I'm feeding in 3.5 and I'm [15156] trying to format it. That doesn't really [15158] make much sense for me. So, let me just [15159] feed in a bigger number and show you [15160] guys uh show you guys how it works [15161] intuitively. Let's say I fed in [15169] 3,459,221. If I were to leave this up to [15171] the standard way that the format module [15174] or format function I should say formats [15176] things, I'm basically converting this [15177] and then I'm adding a bunch of these [15179] little um delimiters. But I could also [15181] change this if I just add a period [15183] instead. Oh, sorry. If I uh my bad, you [15186] didn't actually add the delimiter. If I [15187] had the local string instead, right? If [15189] instead I wanted to go [15191] French, you'll see that we've now added [15193] a space in between instead of the uh [15195] comma. If I wanted to go um Dutch [15199] instead, I think Dutch, I may be [15202] mistaken, but if I wanted to go Dutch [15204] instead, um we now add periods, right? [15206] This can be useful when I don't know, [15208] you want to drop like a dollar sign in [15209] front or something like that, right? If [15211] I go en here, then now we have uh [15215] basically like a number that maybe we've [15217] done some math on to get to this point. [15218] Um and now we've turned this into [15220] something that is like realistically [15221] readable as I don't know, a string, [15223] which we could do um tons of things [15225] with. we could pass it into a a pandadoc [15227] proposal and template out, you know, the [15229] amount of money it costs. Make things [15230] look a little bit prettier essentially. [15232] So, that's pretty neat. I'm a fan of [15234] format. I use format pretty often. Um, [15237] aside from that, we have a couple of [15238] very simple functions. Um, is even just [15240] tells you whether or not this number is [15242] even. So, is this number even? No, [15243] because there's a one at the end. But if [15244] it's a zero, then it'll be true. [15246] Likewise, there's is odd. So, is this [15248] number even? No. Is this number odd? [15250] Yes. Is this number odd? No. [15253] Uh there are a few other ones like is [15255] integer. Now if you guys are unfamiliar [15257] an integer just sort of means like a [15259] like a like a number that doesn't have [15260] any decimal points. So this is an [15262] integer because there's no decimal [15263] points. But if I were to do this and [15265] this would not no long no no longer be [15266] an integer. This can be important [15269] sometimes but to be honest I don't [15270] really use these type conversions or is [15272] even or is odd very often. Um there are [15274] certainly places for them though. Next [15276] up we have um some conversion functions. [15279] So two boolean similarly to what we had [15280] before. 2 boolean will convert this to [15283] true. Like if I go uh zero, this will be [15285] false. If I go one, it's true. Then if I [15287] go any number above one, it's also true. [15289] So basically zero is just the only [15291] negative. And then even like negative [15293] numbers and stuff like that are [15294] technically true. This is some nuance [15295] that isn't super important to [15296] understand, but um yeah, just to say [15298] that you can convert this into the true [15300] or the false boolean type. There are [15303] also ways to convert numbers to [15304] datetimes. So 43 uh you know is [15308] extracted as this. If I wanted to [15309] convert this number to a datetime, um, I [15312] would go and I'd get a time [15314] stamp. Unix time stamp is the number of [15316] seconds since January the 1st, 1970. So, [15319] I'm just going to copy this. Going to go [15322] over here. I'm going to feed this in. [15324] What this does is it tells me what the [15326] current date time is. I think I have to [15327] add three zeros actually. Um, when I do [15329] that, because I think this one does it [15330] with thousands, but anyway, as we can [15332] see, the date time here is now [15335] 2025131. Um, it is [15338] 300641 according to my time zone, which [15340] is nice. They automatically do minus07 [15342] because that's where I'm at. Uh, but [15344] yeah, you know, you can convert a number [15346] of things from numbers or numeric um uh [15350] like like numbers into um dates as well [15352] to perform functions on later. And I [15354] should note that, you know, this is a [15356] number um you know like like this right [15359] over here is a number. So what you could [15360] theoretically do is you could probably [15363] do this [15366] So, you know how early I had to add that [15368] um thousand separator? If you just [15370] multiply this by a th00and first [15372] instead, then this is still technically [15373] like a like a functioning um number, [15376] right? Cuz basically what I'm doing is [15377] I'm I'm taking this number. I'm defining [15379] it. Then I'm multiplying it by a th00and [15381] then I'm converting that to a datetime [15383] which is now rendered correctly. Um you [15385] know, this will sort of muck up the date [15386] time, but a thousand in my case. It's [15388] just the nadn conversion between a Unix [15391] epoch time stamp over here. Um and then [15393] you know what what NNN is comfortable [15396] with. Okay, great. Um we have a couple [15399] of additional ones. Uh the only ones [15402] that are are really important are the [15404] local string. Um, so this converts [15406] things from I don't know, let's say 500 [15410] uh 500 and then [15413] 50,34 sorry [15417] 50,50,34 automatically converts this [15419] into a string with those commas and [15422] everything like that um in them. There [15423] are a variety of things that you can do. [15425] Um you could use the same settings that [15427] we had before. So remember how earlier [15429] if I go to the C full list [15433] uh remember how earlier you know I fed [15434] in um fr well there's also a variety of [15437] other ways that things um can be [15440] formatted and this is just like a master [15441] list of all of them and some of them [15443] will be well most of them are going to [15445] be very similar to each other but some [15446] of them are also going to be a little [15447] bit different. This just allows you to [15448] format things into the particular local [15450] or it allows you to format it into a [15451] string that is of the particular local [15453] of the people that you want and sort of [15455] like an an automatic basis which is [15458] pretty nice. And then the last one is [15459] obviously just two string. Um two string [15461] just converts a number which you perform [15464] functions on um sorry perform [15465] mathematical operations on into a string [15468] that you can now do things like [15470] concatenate with the term hello. Right? [15474] So, you couldn't just add the term hello [15476] to uh [15478] 50,50,34 cuz that doesn't really make [15479] sense. But since we converted to a [15481] string first, this is now basically [15483] this. And then we can easily concatenate [15485] any string to this if we want. All [15487] right, that is the number family. Let's [15488] move over to the array family. Um, and [15491] let's knock these out. What I have over [15493] here on the left hand side is I have an [15494] array with three items, Sarah, Sally, [15496] and Stephanie. This is clearly an array [15498] of names. You can also create your own [15499] array in N8 similarly to how we've been [15501] doing so far just by using the square [15504] bracket [15507] operator. All right, this is technically [15509] now um rendered as an array in code that [15511] we could do things with just by dot [15512] notating. But in our case, as usual, I'm [15515] going to start off with that just to [15517] show you guys how all of this works. Um [15519] and we can see our array has now been [15520] pulled and rendered as a variable from [15522] the previous node. So if I click period, [15524] what sort of functions are available to [15526] me? Well, the first is length, which is [15528] probably pretty similar to the string [15529] one. It's just instead of counting the [15531] number of characters, what we do is we [15532] count the number of elements in the [15533] array. So, we had S Sarah, Sally, and [15535] Stephanie. Those are three elements. [15536] It's not surprising then that we have a [15538] length that equates to [15540] three. Now, we have some other functions [15542] here. Last, if I were to put this in, [15545] what do you think would happen? Well, [15546] we'd extract the last element, [15547] Stephanie. Likewise, if I were to [15549] extract the first element, Sarah, [15553] um, we can do includes. This one in [15555] practice I use very often. Um, and this [15557] just verifies whether or not there is [15558] the element that I'm looking for in this [15560] array. So sometimes APIs will return big [15562] arrays with tons of elements. And all [15563] I'm curious about is, hey, does this [15564] contain the thing that I want? Well, you [15567] know, does this contain Sally? Yes. Does [15569] this contain Saul? No. But does this [15571] contain Sally? Yes. Remember, we're now [15573] doing this on array basis. So we're [15575] looking for the array elements that need [15577] to match these strings exactly as [15579] opposed to just the string basis. If we [15581] did a string and then we to typed a [15583] substring or a slice of that, it would [15585] have returned as true, right? But now [15587] that we're operating off of arrays, we [15588] need to make sure that they match one to [15590] one. Okay, we have map and we have [15591] filter. And these are a little bit more [15592] complicated, so I'm going to leave them [15594] till the end. But, uh, moving our way [15595] down, the next function is append. Now, [15598] append is just a way that you can add an [15600] additional element to an array. Um, if [15602] you append something, you're sticking it [15604] on the end. So, if I were to add the [15606] guy's name here, let's go Eric. Then if [15609] we append quote Eric quote, we've now [15613] added something to the end of that [15615] array. So I use this pretty often. Um [15617] the interesting part here that people [15619] don't know most of the time is that you [15620] can actually just feed in another [15622] array. So maybe we have like a guy's [15624] array over [15627] here. Um you can append a number of [15630] things. In my case, you know, I've just [15631] appended another array inside of that [15633] array. Uh you can also append other data [15636] types like numbers. So, keep in mind [15638] Sally, Sarah, and Stephanie, they all [15639] have quotes around them. You can also [15641] append things like objects. So, [15646] um I believe in order to do this, we [15649] actually need to go like this. No, my [15651] bad. There are so many quote signs here. [15653] I don't know what the hell's going on. [15655] So, in order to append this [15658] puppy, we'll remove that. And then we [15661] can see that the next element over here [15663] is uh is an object, right? Right? It's [15665] an object with name equals Peter. So [15668] yeah, you can append a variety of things [15670] um to an array. Uh but append is just a [15672] way to add to the end of it. Another [15674] function I'll show off is chunk. Chunk [15676] is pretty cool. Uh basically if we have [15677] an array and the array has I don't know [15681] uh in this case it has three elements. [15682] So this isn't really going to work. But [15684] basically let's say it has like I don't [15685] know 10 elements or something like that. [15687] We can chunk it into subarrays of two. [15689] So let me make one really [15692] quickly. Okay. Okay. And if I just copy [15694] this and then if I feed this in over [15698] here, [15700] um, basically what we can do is we can [15702] chunk this into uh a bunch of subarrays [15705] that contain the number of elements that [15707] we specify in our chunk. So laptop, [15709] backpack, smartphone, notebook, pen, [15710] headphones, water bottle, whatever. [15712] We're now chunking this into array where [15713] we have two items. So I don't know, [15715] maybe in this specific case we're asking [15716] people to bring um, you know, everybody [15718] brings two items or something and then [15720] like we all get them together. that way. [15722] I don't know. We're sort of at like the [15723] same level carrying wise. Nobody's [15724] carrying a bunch of stuff. Um, if you [15727] wanted to chunk this more, maybe you'd [15728] go three, you go five. Um, you know, if [15730] you want to do one, that's just [15731] obviously um sort of silly because [15733] you're just nesting every element inside [15735] of another element. Um, zero breaks, so [15737] don't do that. Um, but yeah, that's [15738] that's kind of how chunk works. Do I use [15740] chunk? Basically, never. Um, but I [15742] figured I'd at least mention what chunk [15744] was. Okay. Um, we'll go down to chunk. [15748] Sorry, we'll go down to JSON. And then [15751] working our way down here, we also have [15753] a very interesting function called [15754] compact. Hypothetically, let's say we [15757] had that array that we had earlier. But [15759] let's also say that I don't know a bunch [15760] of these elements weren't empty. So if [15762] we look at what's being returned here, [15765] you see we're being returned an array [15767] that still has, you know, 10 elements, [15768] but three of them are empty. Well, [15770] hypothetically, um, what you can do is [15772] if you just wanted to only get the [15773] elements in the array that had values, [15775] you just type in compact, but it would [15777] actually strip everything that is empty. [15779] I should note that these quotes aren't [15781] the only things that you can have. You [15782] can also have null. Um, this null is not [15784] wrapped in quotes and it's a special [15785] series of characters. It's just like [15787] understood by JavaScript to mean that [15788] there's like a null entry there. Um, but [15791] yeah, compact is just a quick and easy [15792] way to get rid of these null entries or [15794] empty entries. And this can be valuable [15795] because sometimes this is how APIs send [15797] information back and forth, right? [15798] You'll receive some big long array and [15800] then like 50 of the fields inside will [15802] be empty. Well, this way allows you to [15804] just strip those and then only operate [15806] off of the data that actually matters to [15807] you. Okay, the next function is concat. [15809] So, as you can imagine, this is very [15811] similar to pend in so far that you can [15813] add a bunch of things to it. In this [15815] case, you know, if I wanted to add um [15817] Sarah or something, we've now added an [15819] additional element inside called Sarah, [15822] but I could also add um like I did [15824] before an array with Peter and then I [15827] don't know, Eric. And now what I've done [15830] is I haven't added a subarray. So, it's [15832] not like I've added an additional array [15834] inside like I did with append. And what [15835] I'm actually doing is I'm just like [15836] taking these two arrays and I'm just [15838] sticking them together. So you can kind [15839] of think of it as like squishing two [15840] arrays together without really [15842] preserving um like the data type uh [15844] necessarily. Next up we have a very [15846] interesting function, one that I use [15848] quite often called difference. I'll also [15850] show you its intersection which is um [15853] inter uh sorry I'll show you its inverse [15855] which is called intersection. But I'm [15858] just going to create a new array and [15859] I'll go 1 2 3. Then I'm going to go [15861] difference. Then I'll go three, four, [15864] four, [15865] five. So basically, oh, sorry, I need to [15868] make this an array. So basically, what [15870] difference does is difference just [15872] returns you all of the elements from the [15875] first array that are not in the second [15877] array. Okay, so one and two are not in [15881] the second array. Three is in the second [15883] array. So we're only getting one and [15885] two. Difference doesn't care about all [15887] of the elements here. like you don't [15889] insert any of these elements here. It [15891] only ever uh uses the the the first [15893] array that you feed in as like the [15894] primary data. So if I were to say two, [15898] what do you think would happen? Well, if [15900] I click two, obviously this is now going [15902] to disappear because one of the elements [15905] here is now over here and the only [15907] element that is unique. You kind of [15908] think of this as like a unique element, [15910] although um there's another function [15911] called unique. So it might not be good [15912] to to conceptualize that way. Um, but [15914] all of this does is this just takes all [15916] of the elements here that are not in [15918] this array. So, there are tons of ways [15921] and and reasons why you should use this. [15923] One way that I just used this the other [15924] day is I'm tracking a bunch of other [15926] people on YouTube that are about the [15927] similar size to me. Uh, just because I [15929] want to see if there's differences in [15930] posting schedule, lengths of the videos [15932] or something like that. And so, I'm [15933] calling a YouTube RSS feed. The YouTube [15935] RSS feed brings me an array of a bunch [15937] of YouTube posts that they make. Well, I [15939] can store their YouTube post in a [15941] database. And then all I can do is I can [15942] just compare to see, hey, um, you know, [15945] is this RSS feed array different from [15947] this RSS feed array? Oh, it is. Okay. [15949] Well, what's the difference? Is it that [15951] post? Okay, great. Well, now I know that [15952] that's the post that I'm going to take [15953] to like update my database with. I'm [15955] going to add that post essentially. So, [15957] uh, yeah, variety of ways you could do [15959] this. If we use our example [15961] here of um you know [15964] names [15967] maybe maybe what I'm doing is I'm just [15970] looking for um any name from this array [15974] that is not in this array back here. So [15978] Stephanie for instance is not in Sarah, [15980] Sally or Peter. Hence why I'm returning [15981] Stephanie. Now the inverse of this is [15984] called intersection. And this is [15986] similarly another function that I use [15988] all the time. An intersection is super [15989] valuable. Basically, instead of looking [15991] for the difference, it looks for the [15992] instances in which we have both data. [15995] So, we have Sarah in both arrays, so [15997] that's what I'm going to return. We have [15998] Sally in both arrays. That's what I'm [15999] going to return. Do we have Stephanie in [16001] both arrays? No. We have another name [16002] called Peter, right? So, intersection [16005] and difference are both fantastic, and [16007] they're things that uh you know, if [16008] you're working with any sort of like [16009] real industrial or enterprise data, I [16012] think you're going to find yourself [16013] using all the time. Okay. The next [16015] function I want to cover is called find. [16017] find is pretty pretty sweet. Um, [16019] basically it allows you to use math as [16021] part of your function. So, if you just [16023] press enter, you'll see that we've now [16024] added it doesn't just allow you to use [16026] math, sorry, it allows you to use like [16027] any sort of operator. Um, now we've [16029] added this cool little syntax which is [16032] called like arrow notation or arrow [16034] syntax in JavaScript where um we've got [16037] now we have an element. So, we now have [16039] some some variable that we're calling [16041] item and we're saying true. This is [16044] pretty interesting. Um, the way that [16046] this works is think of item as the [16048] individual item in the array. So all [16050] we're doing is we're basically saying, [16051] hey, array zero is equal to item. So [16055] item is just the name that we're going [16056] to use to reference the specific uh item [16058] in the array that we are currently at [16060] because it's going to go through all of [16061] the items. So this is kind of a piss [16064] poor example and I don't really know why [16065] they do that, but let me show you [16066] something that you can do with this. [16068] What if we want to return all of the [16070] elements in an array that are greater [16073] than let's see uh I don't know they're [16076] greater they have more characters than [16079] six. So um Sarah has six charact or five [16082] characters. Sally has five characters [16084] but Stephanie has way more than six. [16086] Realistically I think has like 10 or [16088] something like that. So maybe I don't [16089] know we're just looking to see if there [16091] are any names in our array that are [16093] longer than a certain number of [16094] characters. How would you do this? Well [16095] it's actually really easy. We go dollar [16097] sign JSON.array.find and then we take [16099] the thing item. Then we just check to [16101] see if item length is over six. And if [16106] so, then our result is Stephanie. We're [16108] finding an element in an array that [16110] corresponds to this. Okay. Now, there's [16113] some nuance and some some things here [16115] that I should explain. Um there's [16116] another function that does something [16117] very similar to this called map. Uh [16119] sorry, called filter, which I'll cover [16120] in a second. But this element is special [16123] because it only returns the first [16125] instance of the element that uh [16128] satisfies the request. So [16131] JSON.array.find we define our item and [16133] we're saying the constraint is the [16134] item.length needs to be less than six is [16137] going to return uh Sarah but it's not [16140] going to return Sally even though Sally [16142] also fulfills that request technically. [16144] So find is super powerful. I don't use [16146] find as much as I use map and filter. [16149] Um, but I'm I'm going to cover all of [16151] them regardless. The very important [16152] thing to know here is you just need to [16154] be comfortable using array syntax. Um, [16156] um, arrow syntax. This is called an [16158] arrow function in JavaScript. So, I [16160] should note that it doesn't need to say [16161] item. It could say I as long as the [16164] element or the way that you've named it [16166] on the left is the same as the way [16167] you've named it on the right. This [16169] satisfies the condition. So, in our [16171] case, um, I is just a symbol that we're [16173] using to denote all of the different [16175] elements in the array um, one by one. [16178] Okay, great. So, that's fine. Find fine [16180] is pretty awesome. Let's now cover um [16182] index of. Index of, as I'm sure you can [16185] imagine, is very similar in the array [16186] format to the way that things are [16188] represented in the string format. If we [16190] are looking to find the index of the [16191] entry called [16192] Sally, well, then the entry is one. This [16196] is zero. This is one. This is two. What [16198] if we wanted to find Sarah? It'll return [16200] zero. What if we wanted to find [16201] Stephanie? This will return two. Right? [16203] So, that's what index of does. Um, and [16206] one common theme that you'll find is [16207] that arrays and uh strings are actually [16209] pretty similar in terms of what's going [16211] on under the hood [16212] mathematically. Next up, we have is [16214] empty. If I feed in this array with [16216] three elements to is empty, obviously [16218] it's going to return false. We also have [16220] is not empty, which is the inverse. And [16222] then we have a very special uh function, [16225] one that I use very often, called join. [16227] And all join is is it's the inverse of [16230] split. Remember how earlier we took a [16232] string and then we split it into an [16233] array. Well, join takes an array and [16235] then it turns it into a string. So in [16238] our case, we have Sarah, Sally, and [16239] Stephanie here. We can actually just [16240] join all those together and then we can [16242] get Sarah, Sally, Stephanie. This is now [16244] a string. So hypothetically, what if I [16247] wanted instead to put plus signs between [16249] them? Sarah plus Sally plus Stephanie. [16251] Well, all I do is I go space plus and [16254] then space. So what join does is it just [16257] gets all the elements as they're laid [16258] out. Then it adds whatever characters [16260] you want between all of them. So, we go [16263] comma space. We could go this. We go [16269] underscore, right? We have a ton of [16271] options [16272] here. Uh, we we have a ton of options [16275] here for how we want to do the [16276] separator. Uh, which is pretty cool. So, [16278] I use this all the time. I mean, this is [16280] how I turn a bunch of array data into [16281] like a string or something, right? I [16283] also use this to convert things into [16284] like CSV format, which is where you have [16286] like a comma between. And then the cool [16288] thing is you can just take the CSV, you [16289] can actually make a file of it and just [16290] upload it to a Google Drive or [16291] something. So, tons of examples here. [16294] You know, they show you how to do three [16295] with a space plus space. Um, if you just [16298] join with nothing, then if you join with [16300] um like an empty string, it'll just kind [16302] of stack them all together. This is very [16303] similar to like a text aggregator sort [16305] of function if you're using make or um [16307] some sort of aggregation function in [16309] most no code [16310] platforms. Okay, great. Let's now cover [16313] merge. Now, all merge does is it allows [16315] you to take a specific type of array and [16318] that's the type of array that has um [16319] objects as elements instead of just um [16322] numbers, strings or booleans or [16324] subarrays and allows you to basically [16326] take them all and then stick them into [16328] one big object. So, if you think about [16329] this, what we're really doing is we're [16330] converting from an array into an object. [16332] I'll give you guys a quick example of [16334] what that looks like by actually [16335] creating my own. If I were to grab my [16338] own array, and then I were to create an [16340] object inside of set array where I have [16344] name, that's object number one, and then [16346] I were to say city. The automatic curly [16348] brace adding is kind of annoying. Okay, [16350] so name Nick. Uh, let's do city Calgary. [16354] And then we'll go, I don't know, height. [16356] And then we'll go like 188 or something. [16360] Just like [16361] this. Right? We now have an array that [16364] contains three elements. We have name [16366] neck. We have city Calgary. And then we [16368] have height 188. What if we just wanted [16370] to convert this into one object? Well, [16372] we just go merge. Sorry, that's not [16374] going to work because we're outside of [16375] these curly brackets. Let me just add a [16377] space here to make our lives easier. We [16379] go domerge now. And now we basically [16381] taken an array and we've converted it [16383] into an object where all of the um array [16387] elements are now just key names in one. [16390] So it's name, nick, city, calgary, [16391] height, 188. This is now just one [16393] object. And now instead of a bunch of [16395] array functions, we actually have a [16396] bunch of object functions available to [16398] us, which I'm going to go over later. So [16400] merge is, you know, I mean, like I [16401] understand why they put merge in, but do [16403] I ever actually use it in practice? No, [16404] not really. Next up, we have pluck. [16406] Pluck is pretty badass. Um, basically [16408] what we get to do is if I were to feed [16410] in the same thing that I just fed in [16411] before, then instead of merging it, I [16414] were to pluck it. What I can do is I can [16416] extract the specific things from this [16421] array of objects. Like if I had name and [16424] then uh I mean you know this this isn't [16426] a very good example but if I were to [16427] pluck out the name what I'd get as a [16429] result is I'd get nick. Okay. Pluck just [16432] allows you to extract the value of [16435] something that has a key name equal to [16437] what you've put in here. So [16439] hypothetically if I were to just have [16441] another person in with a name Sally. [16443] What I've done is I've plucked out all [16445] of the names. I've plucked out Nick. [16446] I've plucked out Sally. This is another [16449] one of those manipulation functions [16450] which I don't really use too often. Um, [16452] but it's not bad to know. The next [16453] function we have is called random item. [16455] It is fantastic. Random item is just a [16456] quick way to select something from an [16458] array. I use this all the time. I use [16460] this in like roundroin scheduling. Well, [16462] not round robin scheduling, sorry, like [16463] uh random scheduling. I use this when [16465] like I'll generate a a list of random [16467] numbers and I'll just select one. [16468] Although to be fair, there is like a [16470] random function that you can use. I use [16471] these to like, you know, statistically [16474] randomly and uniformly just take things [16476] from an array and then do things with [16477] it. The next function is called rename [16479] keys. You guys remember that example [16481] function I had earlier? If I just go [16482] back to it, if I had a bunch of entries [16485] with name, name name, and then name, and [16489] instead of using pluck, I were to use [16491] rename keys. What rename keys allows you [16494] to do is it basically allows you to to [16496] search for a specific key name of the [16497] object. So in this case, name, then [16499] convert it to something else. So maybe [16501] instead of name, what I want is I [16503] actually want to call it first name. [16505] Well, this will now um create another [16507] array, but it'll automatically go in and [16510] it'll rename all the keys and all the [16511] objects in set array. This is another [16513] one of those like more complicated like [16515] data formatting functions that I don't [16517] really find myself using often, but I [16519] have used this before and uh it's worth [16520] at least knowing. Okay. And JSON.array [16523] reverse does probably what you're [16524] expecting it to do. Um it just takes as [16526] input an array. So, in my case, an array [16528] of Sarah, Sally, and Stephanie, then it [16530] reverses it. But for some weird reason, [16531] every time I put JSON array at reverse [16534] in, it crashes my NAND server entirely [16536] and then I have to spin it up again. So [16538] this is a very interesting development [16539] if I'm honest. I wasn't expecting this [16541] one function to just consistently crash, [16543] but I've repeated the behavior a number [16545] of times and just does not really seem [16546] to be cooperating. Anyway, imagine if it [16548] said Sarah, Sally, and Stephanie in your [16550] input. Um the output would be Stephanie, [16552] Sally, and then Sarah. Sally is the [16554] middle unit, so it wouldn't necessarily [16556] change. Anyway, I'm going to exit this [16557] page, fix it, and then come back. Okay, [16559] next we have the slice function. Um, the [16561] slice function works the exact same in [16563] an array as it does in a string. If we [16565] wanted to slice between zero and two, we [16567] get Sarah and Sally. If we want to go [16568] one and three, we'd get Sally and [16570] Stephanie. Next up, we have a very [16572] interesting one called smart join. Uh, [16574] basically, I'm going to rely off the [16576] given example here just because it's [16578] such a nuanced and and I want to say [16580] uncommon function to use that I don't [16582] really use it basically ever. But you [16584] know over here you see how we have um an [16586] object that is specifically formatted as [16588] follows. Field age value 2 field city [16591] value Berlin. Okay, let me copy this [16594] over. I'll show you guys what this [16596] means. [16598] I were to pump this in and I were to go [16601] to smart join. And if I were to feed in [16605] um field and then value and I close it [16608] off and what this would do is it would [16610] basically take as input my array and my [16612] array is broken down into basically an [16614] object with a field and a value for [16616] every thing. Like if you think about it, [16618] there's no need to break it into a field [16620] and then an age and then a value and [16621] then a two. You could just go age and [16623] then two, right? City and then Berlin. [16625] Um, but it takes this very particular [16626] formatting and then it basically plucks [16628] similar like to what we were doing [16630] before. It plucks out the fields and [16632] then the values and then it uses it to [16634] turn into a new object where the first [16636] element that you feed in is going to be [16638] the key and then the second element that [16640] you feed in is going to be the value. I [16642] don't really ever use this so I probably [16644] wouldn't worry too much about [16644] understanding it if you don't. Next up [16647] we have sort. Sort just sorts things [16649] alphabetically to start. Um, if you want [16651] to do anything more complex than [16652] alphabetical sorting, you're going to [16654] have to use one of those arrow functions [16656] that we talked about again. And [16657] unfortunately, the way that the arrow [16659] function works is not very intuitive. [16660] It's just a handme-down of um I guess uh [16664] you know like some programming or [16665] JavaScript conventions. Basically, you [16667] want to grab A, which is going to be [16668] your earlier element, and you want to [16670] grab B, which is your later element. You [16671] just always want to wrap it like this. [16672] And then in order to turn this bracket a [16675] comma b into some sort of inverse order, [16678] what you'd have to do is you have to go [16679] to b localal compare and then go a like [16682] this. It's kind of annoying, but we've [16684] just reversed it. Basically, we've [16686] sorted this. Well, we didn't reverse it [16687] actually. We sorted this based off of [16689] the presence of the characters in the [16692] alphabet. You know, SA comes before S, [16695] which comes before ST. Uh because we're [16697] we're doing this inverse comparison. If [16699] you were to go alphabetically, it would [16700] just be standard. it just be a and then [16702] b um why you have to use the localal [16704] compar in this particular format to be [16706] honest I don't really understand or get [16708] um I don't really ever sort anything [16710] other than numbers um from like largest [16713] to greatest or strings um alphabetically [16715] ascending and then if you think about it [16717] if you sort things one way you can also [16719] just sort it and then you can just [16720] reverse it in order to get the other [16721] thing right so like most of the time in [16723] practice I'll sort first and then I will [16725] reverse after now I'm not going to type [16727] the two brackets there because I have a [16728] feeling it's probably going to break my [16730] my nan add an instance again for [16731] whatever reason. But yeah, that's that's [16733] how that works. Next up, we have JSON [16735] string. Um, this just converts all of [16736] the elements in an array into like a [16738] JSON string that you could do stuff [16740] with. So, this is now a string. It's not [16742] an object. It's a string and you can do [16744] string manipulations on it. A lot of the [16746] time you have to convert things into [16747] JSON strings in order to send or receive [16749] them through API. So, I'll use this [16751] reasonably often. Next, we have two [16752] spliced. Two splice is actually really, [16754] really interesting and I could see a lot [16756] of cool uses for it, but I personally [16757] don't use it very often. Essentially [16759] what it allows you to do is allows you [16760] to take as input an array. Then what you [16763] do is you will add specific elements at [16767] an index that you specify then remove a [16770] bunch of elements after that and then [16772] actually designate the thing that you [16773] want to add. So I know that sounds kind [16774] of difficult but let me show you as as [16776] our example Sally Sarah Stephanie. Let's [16778] say this is the zeroth position. This is [16781] the first position and this is the [16782] second position right? Let's say I want [16785] to add something at the first position [16788] right over [16789] here. So, in order to add something, I [16791] go one and then I go comma zero. And [16794] I'll show you why in a moment. And then [16795] let's say I just wanted to add another s [16797] name. Let's [16798] say s Oh jeez, I already have [16802] Sally. Samantha. Yeah, Samantha. I would [16806] type in uh like this. What I've done is [16808] I've inserted Samantha into the first [16810] place of our array. If I wanted to move [16813] it so that it's after Sarah, I just go [16814] two. If I want to do it so it's after [16816] Stephanie, I go [16817] three. And I know can I add it in [16820] fourth? No, I can't because of the it [16821] takes the length of the string length of [16823] the array and then it uh sticks it in at [16824] the end. So yeah, this is me just [16827] bringing some at the back. Baby, that's [16828] what I'm doing now. I'm bringing her [16830] forwards. I have the power. Uh next up [16833] is uh the second parameter is kind of [16836] interesting. Basically what this does is [16837] it deletes a certain number of entries. [16839] Uh which is kind of kind of neat. You [16841] can delete the number of entries from [16844] the start index onwards. If I want to [16846] delete, let's say three entries or [16847] something. I think I have to refresh [16848] this unfortunately. Sorry. Let's do one. [16851] Yeah. Yeah. Because we can't delete [16852] anything at the third index because [16854] there's nothing left. But [16855] hypothetically, we go 0 0 first. If I [16858] delete everything from the zeroth index [16861] and then I go one out, I'm going to [16863] delete between zero and one, which is [16865] this, right? If I go two, I'll delete [16868] Sarah as well. If I go three, I'll [16869] delete Stephanie. That still allows me [16871] to add Samantha though. Um, sometimes [16874] the NAD editor will sort of bug out like [16876] this if you have an additional comma. [16878] So, just be really careful. But anyway, [16880] this still allows me to add Samantha. [16881] So, the way that I like to think about [16882] this function is this function is just [16884] sort of like an all-in-one. Um, if you [16886] wanted to do two or three things [16887] simultaneously, if you wanted to add an [16889] element at a specific place, then if you [16891] wanted to remove a bunch of elements, [16892] um, and then if you wanted to, I don't [16895] know, like designate a specific element [16897] to add, um, then you'd be able to to do [16899] so here. And the cool thing is this is [16901] this can be an array. So I could add [16902] more Peter uh more people here too. So I [16905] could add like Samantha, Peter, and then [16908] Stacy. And then I could use that to if [16910] you think about it logically um replace [16912] the three elements that I have in here. [16914] So like you know this is what the string [16915] looks like when I concatenate them. This [16916] is them afterwards. So this is just sort [16919] of like a I don't know. It's like a it's [16921] like a three in one if that makes sense. [16923] Do I use this one often? No, I do not. [16925] Uh still pretty cool though. You know, [16926] you could probably impress some people. [16929] The next one I want to cover is called [16931] union. Union is pretty awesome. Um this [16933] is uh like it's the union operator in [16935] logic. And basically if you feed in two [16937] arrays and they have overlapping [16939] elements, it will just ignore the [16940] overlapping elements and then just give [16941] you a unique um total array which only [16944] contains unique elements. So you know [16946] how we have Sarah, Sally, and Stephanie. [16948] Let's say I feed in another one with [16949] Sarah, Sally, and then [16953] Stacy. What we do is we basically add [16955] these two. perform a union on the first [16957] which was Sarah um Sally and then [16960] Stephanie and then the second which is [16961] Sarah Sally and Stacy and we don't [16964] duplicate the Sarah and Sally elements [16966] right these are unique we just add the [16968] single new element that's sort of like a [16969] difference between the two so you can [16971] kind of think of this as similar to the [16972] intersection and the difference [16974] functions this one just doesn't [16976] preferentially add things from the [16977] beginning or the end it just does it [16979] with both equally which is nice function [16981] is unique and I use unique all the time [16983] it displays only the things that are [16985] unique in your um array. So this is a [16987] very quick way to dduplicate data. If I [16989] if you think about, you know, an array [16991] and I have 1 2 3 4 5 and I pass it [16994] through the unique function, I'm only [16995] going to have five remaining. If I go 3 [16997] 4 5 23, you can see I've added nothing. [17000] But if I go six, now I've added a single [17002] additional element. And it does so by [17003] preserving the placement as well, which [17005] is quite handy. So I use unique all the [17007] time. Very very common for me to use [17009] unique. [17010] Okay, let's now cover um the two [17013] functions that I've been leaving until [17016] the very end here. Actually, three [17017] functions if we count reduce as well. [17019] Map, filter, and reduce. These are [17022] extraordinarily powerful. Um I use map [17024] and filter all the time specifically. [17026] And these, you know, if you figure them [17027] out, will end up being probably your [17028] most used array functions um because [17030] they are just the cardinal v array [17032] functions. So, the first thing that I'm [17034] going to do is I'm going to do map. Now, [17035] if you remember back to um that previous [17037] function that I showed you guys, um we [17039] are now going to be using arrow syntax [17040] again where we have some item and then [17042] what we're doing all the map does is map [17044] just does something to the item. Okay, [17047] so let's hypothetically say I wanted to [17050] append gmail.com to all of these [17053] entries. I could do so very simply just [17056] by [17057] concatenating gmail.com. Let's [17059] dogmail.com like that. So what I've done [17063] is I've taken my item which is I and [17066] then I've said for every item I want you [17068] to perform this function I do concat and [17071] then gmail.com. Pretty sweet, right? [17073] Well, why don't we now make them all um [17076] lowercase as well to lowercase. Then I [17079] double up on the brackets. Um now you [17080] can see that we have basically all of [17082] these formatted as email addresses. So [17084] now I'm kind of mixing and matching [17085] combining functions which is cool. Okay, [17088] so what's really cool about the map is I [17090] mean I just did this with a string, [17092] right? But you can do this with whatever [17093] data type. Like hypothetically, if [17095] instead of JSON array, I fed in 1 2 3 [17098] into map. What I could do is I can just [17100] multiply this by two, then I can [17102] instantly change all of these a [17104] proportional amount. If I divide these, [17106] you know, I could do a bunch of cool [17107] stuff with that as [17109] well. U modulo 2 probably like like [17112] there's there's so much that you could [17113] do with a map function, it's crazy. I'm [17115] not even going to like start, but um [17116] just know that this solves like 99.9% of [17119] all array queries. Now, similar to [17122] similarly to the map function, you also [17123] have one called the filter function. If [17124] you've never used the filter function [17126] before, I'm just going to give it a [17127] click because it'll automatically check [17128] this out for me. What the filter [17130] function does is it basically does the [17132] same thing as map in so far that it goes [17133] it goes over every element in your [17135] array, but it allows you to like filter [17137] out elements that don't match the [17139] criteria. So let's say I have a simple [17141] array here 1 2 and three and I filter [17143] out all elements where I is less than [17146] three. Right? So all elements where I is [17148] less than three. Well 1 is less than [17150] three. Two is less than three. Three [17152] logically is not less than three. It is [17154] three. Um so I only have 1 and two. [17157] Okay. If I were to do this with um my [17160] array, I could also filter based off of [17163] string u constraints. So my array, if [17166] you think about it, is Sarah, Sally, and [17167] Stephanie. What if I was only interested [17170] in returning um entries that had a [17173] length of less than six? Sally and Sarah [17178] more than six, Stephanie. So, we're [17180] basically doing the same thing as find, [17182] but we're we're doing it a little bit [17183] differently. We're sort of proceeding [17184] with it a little bit differently. So, [17186] map and filters I mentioned are [17187] fantastic. I use them all the time. [17189] There's one more which employs similar [17190] logic, but you're probably not going to [17192] end up using it anywhere near as much. [17193] It's called reduce. Now, reduce can be [17195] very complicated to understand. Um, so [17197] I'm just going to cover it like really [17199] really briefly. Um, but essentially what [17200] it allows you to do is it allows you to [17202] define your own function and then you [17204] can do stuff to things iteratively. So [17207] let's say I have 1 2 3 4 5. Okay, I'm [17211] reducing. What you do is you have some [17214] accumulator then you have some initial [17216] value and then you have an arrow where [17218] you go accumulator plus initial [17222] value. So what's happening? I think it's [17225] a c I think it's called initial value. I [17226] might have some other term for it. I [17228] might be misunderstanding but basically [17230] you have like a and then you have b and [17232] what you want to return is you want to [17233] return a plus b. So what this does is it [17237] says a is your current element. So a [17240] would be uh for the first pass around be [17242] 1 and then b would be the one next to [17244] it. Okay? So 1 + 2. Then it would take [17249] the result of 1 plus 2, which is 3, and [17251] then it would add it to the next thing, [17252] which would be 3 + 3. Then it would take [17254] that result, which would be six, and add [17255] it to the next thing, 6 + 4. Take that [17258] result, which is 10, add it to the next [17259] thing, 10 + 5. What do we get as a [17261] result? We get [17263] 15. Now, you can do a number of things [17265] that aren't just mathematical functions [17267] to this. Um, but this is sort of like an [17269] accumul like it like it aggregates [17270] things the further it goes along. So [17271] obviously large arrays, you know, that [17273] you're running some functions on um will [17275] be bigger and bigger and bigger [17277] mathematically. You can do things like [17279] divide too. So I don't know, a divided [17281] by b. It's kind of interesting. A * b [17283] obviously grows. A minus b you're going [17285] to get a negative number, right? Cuz [17286] you're going backwards, but I'll leave [17288] reduce there just because, you know, in [17289] practice, you're probably rarely going [17291] to use it. Okay, that now takes us to [17292] the object suite of functions. So I'm [17294] just going to change the type to object [17296] here. And I'm now going to be extracting [17298] data from this, which is an object that [17300] is nested one level deep with a first [17302] name, a last name, and a height in [17304] centimeters. Apparently, Kof Arladen, [17306] uh, one of my favorite characters from [17307] fantasy, is 186 cm. Wonderful. So, um, [17311] I'm going to go JSON dot object. And I [17315] have access to this. And I'm going to [17316] press dot. And the first thing you're [17318] going to see when you're operating with [17319] an object is you're going to see some [17321] additional fields up at the top. So [17323] basically we'll go in we'll parse this [17324] out and then we have access to the first [17326] name the last name and the height in [17327] centimeters. So these aren't functions [17329] these are parameters but I'm going to [17330] write them down anyway. First name will [17332] equate to both right last name will [17335] equate to Arllin and then height and cm [17338] will equate to 186. Pretty neat huh? So [17340] these aren't functions as I mentioned. [17341] These are just ways to reference um you [17343] know uh values in in set array. Let's [17346] actually get into the functions. There [17347] aren't too many of them so it's going to [17348] be pretty straightforward. The first is [17350] called keys. Keys is pretty [17351] self-explanatory. All we do is we just [17353] get the keys and we pluck it out and [17354] turn it into an array. So in our object [17358] first name, last name and height in [17359] centimeters. These are all the keys. On [17361] the right hand side, both Arland and [17363] 186, these are all the values. So if we [17365] want to extract the keys, we use keys. [17367] Similarly, if we wanted to extract the [17369] values, well, you just type values. So [17370] now we're extracting kind of the other [17371] half, right? Both Arland and 186 instead [17374] of first name, last name, height, and [17377] centimeters. In addition to that, um you [17379] can do is empty. This just tells you [17380] whether or not the object is empty. So, [17382] this object clearly not empty. There are [17384] a lot of things there, right? Is not [17386] empty. That's dang right it's not empty. [17388] There's a lot going on in [17390] there. Next up, we have has field. Has [17393] field is pretty self-explanatory. [17395] Basically, we're just looking to see if [17396] there's a field called um whatever. So, [17399] maybe we're feeding in an object. We [17400] just want to check to see if there's a [17401] field called first name. Well, we just [17403] go first name. That's true. But what if [17406] we wanted to check if there was a full [17407] name field? Full name in this case would [17409] be false because there's no key that [17410] corresponds to full name. Realistically, [17412] they probably should have called this [17413] has key and not has field. But what are [17415] you going to do, right? JavaScript. [17417] Okay, great. Next up, we have compact. [17419] Compact just does the same thing uh in [17421] objects as it does to arrays. So, [17422] basically, if we had any empty um values [17425] here, um we could we could uh basically [17426] remove them instantly. I'll show you [17428] guys an example. If I go first name [17431] Nick, then I go um last name, and then I [17435] go empty, the end result of feeding this [17437] in to our compact function, it just [17440] removes this last um element in field [17442] entirely because it's empty. If I put an [17444] X there, you'd see it had populated. [17445] Okay, the next function I want to talk [17447] about is going to be called um keep [17450] fields containing. This is kind of an [17452] interesting one because I don't know, [17454] they they change the the name or the [17455] meaning of fields over and over and over [17457] again. Basically, you see over here how [17459] I have first name, last name, Arlin, [17460] height, and centimeters. Well, what if I [17462] only wanted to extract parts of this [17464] object that have both in it. So, I want [17466] to extract the field name and the value [17469] of the field and value that contain. If [17472] I put that in there, you see that I've [17473] now created a smaller object called [17475] first name. And that's it. I don't [17477] really ever use this in practice, and to [17479] be honest, I don't use most of the [17480] object manipulators in practice, but we [17483] have remove field. Remove field just [17484] allows you to specifically take things [17486] out that you don't want. So maybe we [17487] want to remove the last name. We want to [17489] remove the height in centimeters, right? [17491] We also have remove fields containing. [17493] So this will go and take out fields that [17496] contain a value that we want or don't [17498] want. So in our case, we don't want any [17500] fields containing the value of both. So [17501] we take first name out entirely. And now [17503] it's just last name, height, and [17504] centimeters. And then we have our [17506] obligatory tojson string which just [17507] takes in the object and then it turns it [17509] into a JSON string that we can send to [17510] receive uh basically um through API [17513] call. So you know if you're trying to [17515] send an API call or trying to send data [17516] somewhere and it keeps on telling you [17517] that your JSON is misformatted just try [17519] passing it through to JSON string first. [17521] Um I use it pretty [17522] often. Last thing I'm going to show you [17524] is URL encode. This is pretty [17526] interesting. Um but basically you know [17528] how earlier we were talking about URLs, [17529] right? Let's hypothetically say I have [17532] some database available. Okay. What you [17534] can do with a URL is you can encode what [17535] are called query parameters. Query [17536] parameters look like this. You put a [17538] question mark and then after you put the [17540] name of the variable or the key name and [17542] then the value and if you want to add [17545] more the name of the variable or the key [17546] name and then the value and name of the [17549] variable uh aka the key name and then [17552] the value. So what this allows you to do [17554] is allows you to turn a JSON object [17556] which is sort of like this structured [17557] thing, right? and it allows you to just [17559] instantly encode it as one of these URL [17562] parameters or query parameters. This is [17564] pretty uh useful anytime you want to [17565] send or receive data add it to a website [17567] or something like that because instead [17568] of you having to like manually put all [17570] this stuff out like hypothetically I [17572] could totally go first name equals and [17575] then I could go dollar sign [17577] JSON.object first name, right? Be kind [17580] of similar. Um, but I'd have to do this [17582] sort of structure over and over and over [17586] again, which would just be a massive [17587] pain in the ass, right? Hypothetically, [17590] instead of me doing this, [17593] um, what if I just went, you know, this [17595] is, as you can see, it's just really [17597] unseammly. Um, you know, instead of [17599] doing this, if I just went, uh, [17602] JSON.object URL encode, u, you know, [17604] this is kind of a lot more [17605] interpretable, a lot shorter, a lot [17606] easier. So, I use URL encode pretty [17608] often. Okay, let's cover boolean [17610] functions. And boy, do I have a surprise [17612] for you. If we go [17613] JSON.boolean.bool, I should say, um, [17615] you'll see that there really only two [17616] functions. There's two number and then [17618] there's two string. So two number just [17620] turns a true into a one and then a false [17622] into a zero. In our case, what we have [17624] is we have a true down here. So the [17627] output is going to be a one, right? If [17630] we wanted to instead turn this to a [17632] string, this just turns the bool, which [17634] is uh technically even though this is in [17636] letters like t r ue e, this technically [17638] isn't considered a string. So what this [17640] allows us to do is allows us to take a [17642] bool and then convert it into a string. [17644] So we could do things like, you know, to [17645] uppercase or something. If we were just [17648] to go bool to uppercase, um, as you see, [17650] it doesn't really allow us to because [17651] this isn't like a function that you can [17653] apply to bools. So you got to go to [17654] string first, uh, basically. Okay, the [17657] last thing we're going to be doing is [17658] talking about datetime functions. Now [17659] the first thing we have to do in order [17660] to get a datetime function is we have to [17662] get a we have to get a date time right. [17664] So if you guys remember the way that I [17666] did this in order to get the Luxen date [17668] time it was called was I went uh [17672] 01 sorry 3101 2025 then I went to date [17678] time saying that it can't convert it. Uh [17681] why was that? I think my format might [17682] have been different [17684] actually. 01 was it 01? Yeah, sorry. It [17687] was um I think it was 0131. Yeah, deluxe [17691] and datetime. Okay. Anyway, uh okay. So, [17693] once we have something in the [17694] standardized datetime format, um there [17697] is a million in one things that you can [17698] do. All you do is you press period. And [17700] now the standardized datetime format [17702] offers just uh god I don't know 20 or 30 [17705] functions. Now, I'm not actually going [17706] to show you every single one of these [17707] because some of these are such uh, you [17709] know, obvious variants of each other, [17711] like you can plus a date, you can [17712] subtract a date, and that sort of thing. [17714] But I am going to cover all the ones [17715] that are important that I find myself [17716] using pretty often. So, the first one's [17718] called format. Format is super valuable. [17721] Basically, it allows you to get [17722] something that is a datetime, okay? Like [17724] this that allows you to format it [17726] however the hell you want. So, you know [17728] how there are millions of datetime [17729] formats out there or millions of date [17731] formats? Some people want it uh year [17733] year slashmon month/ day. Other people [17736] want it month/ year uh day/ year year. [17740] Well, this allows you to do so using [17743] characters that are um designated in [17746] this formatting guide. So, basically you [17749] have tokens like S, tokens like [17751] lowercase U, tokens like Z, tokens like [17754] K, right? And all these correspond to [17756] things like hypothetically if you wanted [17758] to um instantly translate any time into [17762] an extraverbose localized datetime you [17765] could just type fff or sorry ffff and it [17768] would automatically do that. So let me [17770] show you. If I just typed [17772] fff I've now converted this into a [17776] datetime and then I've immediately [17777] formatted it into this super [17779] extraordinarily complicated looking date [17782] which is just like a string [17783] representation. I could remove some [17784] complexity with FF. I could remove even [17786] more with FF. And I could just go FF to [17788] get some other format. Likewise, I [17790] actually create my own format if I [17791] wanted to. So maybe I wanted to go um [17793] year year year. Okay, sorry. Y I meant [17797] to say um because you got to lowercase [17799] Y's. Then month and then date date. And [17802] then let's say I wanted to go hour hour [17806] minute second. Okay, I've taken this [17810] date then I've converted it to a date [17812] time. Then I've formatted it in this [17814] specific structure. As you can see, we [17816] end up with um not only the year, the [17818] day and the month, and the day, we also [17820] end up with like the number of hours, [17822] minutes, and seconds. Now, in this case, [17823] it's 00 0. Why is it 00 0? Well, um I've [17827] been inserting standardized date times [17829] here. What you can actually do is [17831] there's a specific function that grabs [17833] the current date and time called dollar [17835] sign now. So, dollar sign now, if I were [17839] to just remove this, dollar time, dollar [17840] sign now is already in a date time. So [17842] you actually don't need to convert this [17843] to a date time. Um all you would have to [17845] do is you you just format this um as [17848] follows. Year year [17852] um month month day day and then [17855] h mm [17859] ss or maybe hh I think if I want to get [17861] three and then I think you just go a [17865] uh no p it'd say like am or pm or [17869] something like that. Uh, I kind of [17870] forget how to do that though. But [17872] anyway, um, now you know you can format [17874] the exact current time, uh, which is [17876] pretty cool and pretty useful. And I [17878] believe there used to be, and I don't [17880] know if there still are. I think there [17881] was like a time stamp variable or or [17883] something else, but I'll I'll leave that [17884] out um, just for the purposes of this [17887] discussion. Okay, great. So, if I just [17889] go back to my previous um, example, [17891] which just had sort of a simpler look at [17893] a date because we didn't have a bunch of [17894] seconds and stuff like that. If I press [17897] period again, you'll see that now we [17898] also have a few options. We have minus, [17900] we have plus, and then we have diff 2, [17904] and then extract. And these are the most [17906] commonly used datetime functions and [17908] ones that I use basically all the time. [17910] Minus just subtracts a given amount of [17912] time from a date, and it allows you to [17914] designate things just in like natural [17916] language. Well, not natural natural [17917] language, but like using dates, uh, [17918] days, hours, uh, weeks, that sort of [17920] thing. And then plus adds. Let me show [17922] you what this looks like. So, you know [17923] how right now this is like 0000? Like [17927] basically there's no there there's not [17929] even a single second to the day. Well, [17931] what if I wanted to add, you know, 30 [17934] then seconds? Well, you'll see we've [17936] just changed this here. 40 seconds, 50 [17939] seconds, 60 seconds, 70 seconds, 80 [17942] seconds, 90 seconds. Let's say [17944] hypothetically we wanted to add 10 days [17946] to this. Well, now it's February the [17948] 10th. How about 10 weeks? Well, now it's [17950] March the 11th. Well, now how about 10 [17952] months? Well, now it's November the [17953] 30th, right? You could even add years. [17956] Um, this is pretty standard, right? If [17958] you wanted to take this out, you just [17959] subtract instead by using minus. So, [17962] variety of different functions uh [17964] available to you for just doing like [17965] simple date manipulations. Um, a couple [17967] of other ones that I use pretty often. [17969] Uh, there's this one here called diff 2. [17971] Basically, what you do is you feed in [17973] the most commonly used one is now. But [17976] basically, you feed in the starter over [17979] here on the left and then you get the [17982] difference between that and the second [17984] date over here, which in our case, we're [17986] just going dollar sign now. And then we [17988] get the number of days. Hypothetically, [17990] what we could also do if you wanted to [17992] reverse this, right, this is a negative [17994] value. We could go dollar sign now diff [17996] 2. Then we could feed in this whole [17998] thing. And then we'd get that it's been [18001] 667 days from this, aka I'm about 66% [18004] done. um the current day because this [18006] was counting from like the zeroth [18008] minute, the zeroth second, the zeroth [18010] hour of, you know, January the 31st, [18013] 2025. Likewise, we could uh show this [18015] off in weeks. We could do this in [18017] minutes. We could do this in seconds. [18019] Man, it's kind of crazy to me that 960 [18020] minutes have already gone by in my day. [18022] What the hell have I been doing? Anyway, [18024] um aside from the existential value, [18026] obviously there's just a lot that you [18027] can you can do and get [18029] done. And then, uh we could also [18031] extract. So we could extract things from [18033] this really easily. Like now is [18035] obviously January the 31st, 2025, right? [18038] What if I wanted to extract the month? [18040] Well, we get the first month of the [18041] year. If I wanted to extract the year, [18043] what if I wanted to extract the day, [18044] right? I can basically go in, I can [18046] extract the current second, man. I can [18048] extract the the minute, right? The [18050] minute of the hour of the day. Um, so I [18052] have I have a lot of options available [18053] to me. Uh, and so this this ends up [18055] being pretty valuable when [18058] uh I don't know, usually when I'm [18059] sending or receiving something or when [18061] I'm performing logic for stuff like [18062] invoice follow-ups or email follow-ups. [18065] Um, using all of these functions just [18066] makes a lot a lot easier to calculate [18069] how long it's been since something has [18070] occurred and and so on and so forth. [18072] Variety of other functions. Um, this one [18074] uh is end of. This allows you to round [18077] up to the end of the month. So if I were [18079] to give you an example, this doesn't [18081] really make sense because I'm at the [18083] end. So, why don't we do start of [18084] instead? Um, start of just does the same [18086] thing. It just rounds um in the opposite [18088] direction. But if I want to round out my [18090] current date to the start of, then [18093] basically what I've done is I've rounded [18096] my date, which was January the 31st, to [18098] the the beginning of the month, which [18101] was the first. So, this is very similar [18103] to the floor function. It's just you're [18105] technically flooring like a date, which [18107] is pretty wild. Um, if I wanted to go [18109] start of the year, it would be the same [18110] thing cuz this is January, right? If I [18112] wanted to go end of year, you can see [18114] that we're now 2025, 12, 31, 23, 59, 59, [18118] 9999, so on and so forth. This goes all [18120] the way to the very very end of the [18121] year. I don't remember if you could do [18123] decade. No, you can't do decade. Uh, [18124] could you do millennium? Yeah. Anyway, [18126] lux and datetime is a something for [18129] another time. Lux and daytime is for [18131] another daytime. Uh, if you guys want to [18134] check the myriad cool functions, um, [18137] just Google this and then you'll see a [18139] variety of dot functions similar to what [18141] we've been screwing around with here. [18142] Luxon's extraordinarily powerful, but [18144] obviously some of the syntax and stuff [18146] like that can be a little trickier. [18147] Okay. And then aside from that, there [18148] was just a couple other ones that I used [18150] pretty often. Um, oh yeah, yeah, they're [18153] components. So, you know how earlier we [18155] were extracting things and we were doing [18157] so by saying like month. Well, you can [18158] actually just get like day, you can get [18160] like month, you can get like year. Uh, [18162] and you can you can dotindex it that [18164] way. Um, there's also zone. Um, so, you [18168] know, a lot of the time when you feed in [18171] a datetime object that you get from an [18172] API or something, it will [18174] include stuff like this minus 07. Well, [18178] what you can do is if you just type in [18179] zone, it'll tell you what the name of [18181] that time zone is. uh which can be [18183] really useful you know just when [18185] clarifying stuff contractual documents [18186] can be useful because a lot of services [18188] also require you to feed in a time zone [18190] and a lot of these also just use like [18192] zone codes or there's like a lot more [18195] names to these zones than I understand [18196] so in practice I usually end up using [18198] something like that in order to [18199] reference it and then there's um just [18201] some helper functions like is weekend so [18203] like you know you can find out if the [18205] date is a weekend let's say you're [18207] sending some sort of invoice follow-up [18209] well you can you know do your math and [18210] then you can determine if something is a [18211] weekend and then if it is a weekend, you [18213] can grab the date and then you can add [18214] one to it or two to it and then you can [18216] send it on the Monday instead. You have [18217] a lot of options, I should say, which is [18218] pretty neat with formatting, you know, [18220] date times as things like, you know, [18222] whether it's a weekend or in this case [18223] whether it's a leap year or so on and so [18226] forth. So, yeah, I'm going to leave the [18228] daytime functions there, but definitely [18229] check that out um if you guys want a lot [18231] more power and control over the way that [18233] works. I didn't add daytime functions in [18234] the batch of 106 just cuz these aren't [18236] technically like NADN functions. These [18238] are functions outside a library called [18240] uh Luxen and uh you know that's not like [18242] native to NAND or anything like that but [18244] obviously they're still super powerful [18245] to know so I highly recommend it. Okay, [18247] hopefully by this point you now have a [18249] reasonable understanding of NAD [18251] functions. Again, I know I mentioned [18252] this a few times in the video but you [18254] don't have to memorize all these. You [18255] can grab all of the stuff just straight [18256] from the documentation and the NAND AI [18259] tool is also pretty good at just [18260] figuring out sort of the finer nuances [18263] behind some of these functions. So, [18264] what's more important than knowing the [18266] specific information itself is just [18268] knowing how to find the information if [18270] you need to. And that's really what most [18271] modern developers do. It's not like [18272] we've all memorized every single [18274] function on planet Earth. We're just [18275] capable of going through a list of [18277] functions, reading a little bit of [18278] documentation, and figuring out which [18279] ones apply for which use case. Now, [18281] let's take your NAD knowledge to another [18283] level by transitioning from solely cloud [18286] hosted environments to self-hosted [18288] environments. To make a long story [18290] short, self-hosting just refers to the [18291] idea that you actually take the NAND [18294] source code and then you put it on a [18296] server. Now, you are doing it on the [18298] cloud. Technically, you're putting it on [18299] some sort of cloud server out there, [18301] although you can certainly do it on your [18302] own computer as well. It's just a little [18303] bit of nuance that I don't really think [18305] most people care for these days, but [18306] there are a number of benefits to [18307] self-hosting. The biggest one is cost. [18309] So instead of you spending a fixed [18311] amount per you know thousand operations [18313] or executions or or or workflow node [18316] runs what you can do with a self-hosted [18318] environment is you could basically pay a [18320] monthly rental to the service that hosts [18322] the server. Then you could run as many [18323] executions as you want. So instead of [18325] you spending you know hundreds if not [18327] thousands of dollars to run let's say 1 [18329] million executions per month you could [18330] spend maybe 10 or 15 bucks to rent a [18332] server and then um you don't have to [18334] spend any money whatsoever to NAD. you [18336] just take care of all those executions [18338] within the the server rental. That [18339] sounds a little bit more complex to you, [18340] don't worry. I'm going to dive into how [18342] to do all of this stuff in the next few [18343] minutes. It's also really good for data [18345] security and privacy concerns. There's [18347] some niches that you work in, [18348] specifically healthcare, uh, legal, some [18350] financial, where you can't actually send [18353] like customer or patient data up to the [18355] cloud or you can't have it, I don't [18357] know, leave the bounds of your country. [18359] And so in this way what you can do is [18360] you can rent servers that are within [18362] your country or maybe on premises and [18364] then you know run an NAN install there [18366] making sure that you're not leaking any [18367] customer or member or patient data. This [18370] to be honest isn't super important in [18371] practice but there are a few industries [18373] in which this applies and self-hosting [18374] is the primary solution for a lot of [18376] those industries. The first and simplest [18378] way to self-host is using Render. For [18380] those of you that are unfamiliar, they [18381] call themselves the fastest path to [18383] production for a reason. Now, I'm not [18384] affiliated with them, but I'll show you [18386] how you can get up and running with [18387] Render in just a couple of minutes. This [18389] is easily the simplest way to go ahead [18391] and do so. So, first things first, just [18393] create an account over here. Now, I [18394] already have an account, so I'm just [18395] going to put in a fake one here. Fake [18397] email address and the fake password. [18400] We're going to click create account. [18401] They're going to ask you to verify your [18402] email next. Now, since I've already gone [18404] through and done all of the sign up, I [18406] can then go and then sign in. So, I'm [18409] going to sign in with my account. After [18411] you are done verifying your email, [18413] you'll be taken to a screen that looks [18414] like this. It'll say deploy a web [18416] service, static site, Postgres database, [18417] or explore all service types. Now, [18419] unlike a lot of the other videos here, [18420] I'm actually signed up to the service. [18422] I'm actually going to be paying when I [18423] need to. But I want to let you guys know [18424] that like, you know, the these videos [18426] tend to be invalidated pretty quickly [18428] because all of the platforms that we are [18429] signing up for self-hosting on, they all [18431] tend to have different UIs and UXs and [18433] they change the way that their [18434] dashboards look and stuff. So instead of [18436] paying attention to the very specific [18437] buttons I'm clicking and stuff like [18438] that, just try to understand what I'm [18440] doing more generally. So what you're [18442] going to want to do is you're going to [18442] want to find an area in the page that [18444] says deploy a web service and then go [18446] down to where it says existing image. [18448] What you're going to need to do is [18449] you're just going to paste this in uh [18450] verbatim. So nadn has a deployment [18453] method called a docker. Docker is just a [18456] very simple and easy way to grab like an [18458] image of the nadn install off of the [18461] internet. So, if you just Google, you [18463] know, nadn docker like I'm doing here, [18465] you'll get a page that looks something [18467] like this on the docker hub. And if you [18469] just scroll down, you'll find a URL that [18471] looks something like this. [18474] Docker.n.io/nadn.io/nadn. This is just [18476] what you copy. Then you go back to [18478] render and just paste it in where it [18480] says image URL up here. And then you [18482] click connect. I'm going to leave [18484] everything else as blank. And I'm going [18486] to click on free for hobby projects. In [18489] reality, what you're probably going to [18490] want to do is you're going to want to [18491] launch a starter uh standard or pro plan [18493] depending on your usage. If you are [18495] doing thousands of requests a minute, [18497] pro is probably uh sufficient for you. [18499] If you're just getting up and running [18500] and maybe have like two or three clients [18502] or two or three um you know, systems [18504] that you're you're maintaining that send [18506] workflows every few minutes, starter [18507] sufficient for you. If you do free, just [18509] note that they'll automatically spin [18510] down the service. This can be kind of a [18512] pain in the butt, but I'll just leave it [18514] at that. Once you're done, it's going to [18516] go through. It's actually going to spin [18517] up the Docker image and you're going to [18519] set up your server. So, let me cut in a [18521] second. By the way, it was on this [18522] website that I first found what NN [18524] actually means. Uh, it was written by [18526] the creator himself and he says that it [18528] means nodemation and it is pronounced as [18531] N8N. Apparently, the reason why was he [18534] just didn't really like typing a ton of [18535] characters. So, he said Nad, nodemation. [18538] Good enough. Okay. And then after a [18539] couple minutes, you're going to get a [18540] message that looks something like this [18542] with editor being accessible on this [18543] local host. All you need to do is go up [18545] here to the link, give it a click, and [18547] then you'll have the ability to set up [18549] your owner account. So that's what I'm [18550] going to do [18553] here. And once I'm done, going to click [18556] next. This will then send a verification [18559] email using my server actually, which is [18562] interesting. Do some fun little [18565] onboarding. Heard about y'all from [18567] Google. Then we actually have the [18568] ability um and this may not necessarily [18570] be the case when you guys are watching, [18572] but as of the time of this recording, we [18573] have the ability to get a bunch of paid [18574] features for free with a license key. So [18576] I've already done this on a bunch of [18577] other ones. I'm going to skip it, but [18578] yeah, now naden is here. We could start [18580] any workflow we want from scratch. This [18582] is running entirely in our own server. [18584] You'll see that because it's a free [18585] server, it's going to be a little bit [18586] slower than usual. Um but all hot keys, [18589] everything you could possibly want [18591] works. And because you're using a Docker [18592] image, it's going to be up to date. So [18594] this is by far the simplest and easiest [18595] way to get up and running with this. I [18597] should note this isn't the only way to [18598] set up Naden on render and we've also [18601] glossed over a fair number of like the [18602] configuration options that you have. If [18604] you want to check out some of those [18605] configuration options, feel free to [18606] check um the Nad Docker page, there are [18609] variety that allow you to like switch [18610] the database that you're using by [18611] modifying environment variables and [18614] changing basically a bunch of things [18616] related to encrypting and and so on and [18617] so forth. If you also look up the NAN [18620] community environment variables and just [18621] pump that into Google, you'll find a [18623] bunch of different settings that people [18624] use to optimize their NAND installs. Um, [18626] but that's just beyond the course of [18627] this video. The second simplest way to [18629] set up NADN in a self-hosted environment [18631] is using Railway. Now, for those of you [18633] that don't know, Railway is very similar [18635] to Render in that it allows you to very [18637] quickly and easily spin up servers and [18639] spin up databases for those servers. But [18641] our signup here is going to be a little [18642] bit different to what we were doing [18643] before. We're actually going to have to [18644] continue with GitHub. For those of you [18646] that are unaware, GitHub is a way to [18648] host your code or repositories that [18650] you've worked on. Uh, make a long story [18652] short, all you need to do to make sure [18653] that this method works is spin up a [18655] GitHub profile. on. I believe you have [18656] to add some authentication. So, [18659] github.com. Let me just open this in an [18661] incognito tab. There you guys can see [18662] what it'll look like when you do not [18664] have an account. Then click sign up over [18666] here. Add your credentials as necessary [18668] in order to get that account up and [18675] running. Then all you have to do is go [18677] back and authorize your rail railway [18679] app. This will give you $5 in free trial [18682] credits as of the time of this [18683] recording. And now we have an account [18685] here that I just have to accept a bunch [18687] of terms for. Then move on to deploy a [18690] template. The one you're going to want [18691] to click is n with workers. It's [18692] currently the most popular one um on the [18694] platform. Then just type in deploy. And [18697] basically what's going on now is we're [18698] using our $5 in free trial credit to [18700] spin up an NN instance with workers [18703] which are just a little addition and I [18705] believe it's a postcre database with [18707] Reus Reddus. I don't really know how you [18709] pronounce that. But the specifics of the [18711] implementation aren't super under aren't [18713] necessary to know or understand until [18715] you actually get up and running with NN. [18716] So the purpose of this is just to make [18718] sure that you you have an NN self-hosted [18720] instance. We can actually access it [18721] using um a public URL. So let's queue up [18724] some Jeopardy music and let's see how [18726] things go. At a certain point, you'll [18727] get a page that looks something like [18728] this. All of these will turn green. This [18730] is the actual deployment process and [18731] it'll say it's applying a bunch of [18732] changes. You'll get updates in the right [18734] hand column here that show you that [18736] various deployments were done. So in my [18738] case, it started with Reus, then it went [18739] to Postgres, and it's kind of working [18741] its way backwards over to the primary [18743] and add an instance before finishing off [18745] with the worker. Eventually, all of [18746] these nodes will have green little check [18748] marks associated with them. And all I [18749] have to do is go back to primary, then [18751] give this URL a click. It'll open up [18753] your NAD instance, same as we had [18755] before, and I can go through and I can [18758] add all of the information that I want. [18760] And because it's a new instance, [18762] obviously, it's asking me to go through [18763] the onboarding again. And so this is [18765] going to happen every time that you set [18766] up a new instance. It's going to offer [18768] to give me paid features for free [18770] forever. Um, and then voila, you know, [18772] we're basically good to go. Again, we [18773] have our NAND instance up and running. [18775] The third simplest way to get NAN up and [18777] running in a self-hosted environment is [18778] using Digital Ocean. They have a [18780] one-click NAN install template. Very [18782] simple, easy, and straightforward. You [18784] just type in Digital Ocean into Google, [18786] and this will be one of the first hits. [18788] I'm going to sign up to an account here [18789] from scratch. Show you guys what it [18791] looks like. So, just pumping in my email [18793] address and my password. I like Digital [18795] Ocean's design. Very [18797] nice. It's now going to do some bot [18800] verification just to make sure that I'm [18801] a real human [18802] being. And once we are in Digital Ocean, [18805] we're going to have to go through our [18808] confirmation [18810] sequence. And we have some onboarding [18812] that I'm very quickly going to get up [18814] and [18816] running. And then once we're here, you [18819] do have to enter in some payment [18820] details. So, in my case, I'm going to [18822] enter some payment details just to [18823] secure the account. I'm going to do that [18824] offscreen, of course. Okay, great. And [18826] now we are registered in Digital Ocean. [18829] And in order to get all this stuff up [18830] and running, it's very, very easy. All [18832] I'm going to want to do is go over to [18833] the Digital Ocean um I believe it's [18835] called their marketplace or their store. [18838] So, go back over [18840] here. Let me go. I think it's [18842] marketplace. There we go. And what we [18844] want to do is we want to click on or [18846] search for [18848] N8N. be a one-click install. All we're [18851] going to do is create an NN droplet. [18853] It's now going to connect back to our [18854] account. We can select the specific [18857] server area we want. Um, just select [18859] whatever is closest to you. It should [18860] automatically do this. And then it [18862] should automatically select an Ubuntu [18864] version. In my case, it's 22.04 on the [18867] marketplace. I'm just going to use the [18868] basic plan. Um, it's going to try and [18870] like get you up to the the peak. Um, but [18873] I'm just going to go down to regular. [18875] And then I'm going to go down to six [18877] bucks a month or 9 cents an [18879] hour. Actually, 9 cents an hour, I [18882] should [18883] say. Now, you're going to have to create [18885] a root password. So, I'm going to do [18887] this [18888] here. Looks like it needs to be a little [18891] bit [18894] longer. H. Uh, one uppercase letter. O [18897] man, this is [18899] tough. Oh jeez. Uh, why don't we just [18903] go [18905] to Okay, that's rough. So, I'm totally [18908] going to forget that. So, [18912] y three. That sounds good. Paste that [18915] puppy in there. I'm going to store it [18917] very securely on YouTube where everybody [18920] could see it. And then we're going toh [18922] create the [18924] droplet. Now, this is going to do the [18926] whole deploy procedure similar to like [18928] how we, you know, what we've seen [18929] before. very same idea. It's just going [18932] to obiscate or obscure some of that data [18934] from Digital Ocean. I find it's just a [18936] little bit less I don't know, they put [18937] that stuff a little less front and [18938] center. Um it's also an older platform [18940] versus something like Railway or Render, [18942] which is focused a lot more on uh [18944] obviously, you know, user experience and [18946] being modern and stuff like that. So, [18948] we're going to give it a few minutes and [18949] let it finish. Okay. And then your [18950] droplet should be up and running. The [18952] issue in Digital Ocean and the reason [18954] why this is like third instead of first [18956] is because you can't just access it via [18958] the IPv4, the IP address. Paste it in, [18961] you'll have some some issue. It will [18962] refuse to connect. So, we have to do [18964] instead is you have to actually add this [18965] to a domain um using DNS. What I'll show [18968] you guys how to do here is on my own [18971] leftclick.io. I go to advanced DNS here. [18974] Then add an A record. The host is going [18976] to be NAD. The IP address is going to be [18978] this. And I'm just going to try and do [18979] this as quickly as possible. So click 1 [18981] minute. What this is going to do is it's [18983] going to provide me a publicly [18985] accessible URL at [18987] nadn my domain [18990] name.ai that routes to this address [18993] here. So if you don't have this um [18996] you're going to have an error every time [18997] you try and access the IP the IPv4 which [19001] is the IP address. So I'm going to give [19003] it a minute and then I'm going to access [19005] n.click.ai. After that all we need to do [19007] is go to console here. Give that a [19008] click. It'll open up this window, which [19010] looks pretty scary, make you feel like a [19012] computer hacker. All you have to do is [19014] press enter, enter in the domain name. [19016] Enter in whatever the email address you [19018] want to use for their encryption [19019] protocol is, and then um I'm just going [19022] to not set up a time zone. It's actually [19024] going to go through and run some [19025] additional configuration options for us. [19027] So, here it is. It's now building this [19030] out. Once you're done, it'll say [19031] installation complete. Access your new [19033] edit end server in a browser to continue [19035] at this address. So, I'm going to copy [19037] that [19037] over. Go back here. Open up a new tab. [19040] And as you can see, we now have the [19042] owner account screen. Same as we had [19046] before. We can set it up. It's going to [19048] ask us some onboarding [19051] info. [19052] And voila, you can now go in and then, [19055] you know, muck around in our canvas. [19056] Again, the fourth way to set up Naden in [19059] a self-hosted environment is using [19060] Heroku. Now, if you just Google Heroku, [19063] spelled H E R O K U, you'll get to a [19065] website like this. Heroku is definitely [19067] a lot older of a platform. You can see [19068] they have some updates that are coming. [19070] So, maybe that has changed as of the [19071] time of this recording, but we will type [19073] in N Heroku. What you want is you want [19075] this GitHub repo here or a GitHub repo [19078] that looks something like it. Now, [19080] GitHub actually has a native deploy to [19081] Heroku button. So, what you can actually [19082] do is you just click this button and [19084] then it'll deploy it to Heroku. They've [19086] done some updates over the course of the [19087] last 3 months. I should note that every [19088] time we're doing this, we're getting [19089] slightly different versions of NAND and [19091] stuff, but you click on that button, [19092] you'll then be taken to Heroku where you [19094] can log in to an account, which I have [19096] yet to do. So, I'm actually sign up to [19098] an [19101] account. That's what I'm doing here. Uh, [19103] no company. So, enter your email [19106] again. And I am in the United States. [19111] Let's say [19113] Delaware. Now, creating my account. So, [19116] we're going to check my email like I did [19118] a moment ago. Okay, now we have to add a [19120] bunch more info. Um, and it looks like [19122] you have to make your password super [19124] long. Okay, now we have to enter some uh [19127] two-factor [19129] authentication. I don't really know what [19130] I want to do here. Um, one time [19132] authenticator. Yeah, that's probably [19134] what I'm going to do. I then have to go [19137] and download an app called Authenticator [19140] from the um Google Play Store or the [19144] Apple Store. The way that this works is [19146] it'll basically just generate a code [19147] based off of the current date and time [19150] multiplied by some secret key thing that [19152] Heroku has installed. Then what it'll [19154] allow you to do is you're actually going [19155] to be able to scan it using something [19158] that looks just like this. And basically [19160] you put in your little QR code in that [19163] in that center area here, which is what [19164] I'm [19166] doing. And it's just given me a [19168] verification code that I can now pump [19170] in, which will be [19173] this. There are multiple different [19175] authenticator apps. You could use [19177] whichever one floats your boat. I like [19178] using the Google authenticator one. Just [19180] simpler and easier for [19182] me. Okay, now we have some more [19185] onboarding questions just to go [19187] through when this puppy finally loads. [19189] That is, am I doiciled in Italy? No. [19193] Awesome. Okay, great. So now once we're [19194] signed in, we can go back to that N8 [19196] Heroku GitHub install. Click deploy to [19199] Heroku and it'll actually just do that [19201] oneclick deploy for us. [19203] going to call this nadnick common [19206] runtime and I'm going to dismiss this. [19210] And then the only things that we have to [19212] do is are we have to change the [19213] encryption key. So we have to change it [19214] to whatever the heck we want. I'm going [19216] to do [19217] um I don't know Nick is super awesome [19222] and jacked. All [19224] true. Um and then the app name is going [19226] to be the Heroku application name which [19228] is naden Nick. So naden-nick. Cool. and [19232] we click deploy. [19234] Beautiful. As this is a one-click [19236] deploy, all of the configuration [19238] settings are just up on their own. So, [19240] as you can see, there's some config [19241] variables here. These are the same [19242] things the environment variables and [19243] render um and then railway that we saw [19245] earlier. But I'm just going to let it [19247] play and we'll see what happens. Great. [19248] You're going to get a bunch of green [19249] check marks as per usual. And then we're [19251] just going to go view. Now, because we [19253] don't have um like HTTPS installed [19256] basically and Heroku, which is a little [19258] bit behind on this stuff, you're [19259] probably going to get a dangerous site. [19260] What you're going to want to do is [19262] you're going to want to go visit this [19263] unsafe site down here. It'll actually [19265] take you to the page. And as you can [19266] see, there's no real difference in the [19268] uh that's okay. There's no real [19270] difference in um any of the the safety [19273] here. Um it's just like it's your own [19274] website. They're just lacking the [19276] protocol that we'd be interested [19277] in. So yeah. Um voila. We are now on our [19282] website. We're going to go software [19283] business owner, myself, um less than 20 [19286] people, and then Google as per usual. [19289] And we got some paid features. And then [19290] voila, we can now start from scratch all [19292] over again with our naden install [19295] self-host number four. The next way to [19296] selfhost naden is actually just do it on [19298] your own computer using Docker. Uh you [19300] can do so on like your laptop or maybe [19302] you have some server rack or something [19304] like that. I don't necessarily recommend [19305] this unless you know what you are doing, [19307] but I'm putting it in here just for [19308] completeness sake. What you're going to [19309] want to do is just head over to [19311] docker.com. It'll allow you to download [19313] the Docker desktop version. Now I have [19315] an Apple Silicon Mac, so I'm going to [19317] give this a click. [19318] This is then going to go through the [19320] download process. Once I'm done with [19322] that, I have my docker.d image. Again, [19324] this is going to be different if you're [19325] running a um I don't know, like a Mac or [19328] a PC or something. Make sure to download [19329] the right one for your version. In my [19331] case, I'm copying this over to the [19332] applications folder, which takes its [19334] sweet ass time. Then after that, you can [19336] just search for Docker, whatever way [19339] that you are currently interacting with [19341] your FileFinder. That's how I do [19343] mine. It'll verify the package. Yes, I [19347] want to open the package. That is why I [19349] doubleclicked it. And then uh you can [19351] accept and then use these advanced [19354] settings. My case, I need to enter my [19356] password to do so. Okay, great. So, um [19360] you can sign in, you know, through go [19362] through the whole rigomeroll if you want [19363] to like creating an account and stuff. [19365] I'm just going to skip all this. And [19366] what you want is up up here where it [19368] says search, you're just going on paste [19370] in not that um just look for NAD. So [19374] naden io/naden is right over here. So [19378] what you're going to want to do is [19379] you're going to want to click pull. [19380] That'll go through setting this up on [19382] your own computer basically. And once [19384] you've pulled it, you're going to want [19386] to run it. Now I should note that you [19388] can do this through terminal as well. [19390] You don't need to necessarily do this [19391] just through like the Docker desktop. [19392] Docker desktop's just a much easier way [19394] of getting up and running with this. And [19396] then you're actually going to want to [19397] instantiate this by clicking run. And [19399] when you do so, it'll ask you for some [19400] optional settings. I'm going to do 5678 [19404] right over here. Volumes, host path, [19406] environment variables. I'm just going to [19407] leave that as is. And I'll just do [19409] n-nick. Going to give that a run. And [19411] you'll see that, you know, my computer's [19412] a lot faster than a lot of the other [19414] ones we've been using. So, it's already [19415] done with the deploy. If you click 5678, [19418] you'll now be at localhost 5678. Which [19420] is again my own server. And now I'm [19422] actually running n directly on my [19424] computer. So, because I have way more [19427] server resources than, you know, most of [19428] these ones that I could rent out [19429] realistically, I bought like one of the [19431] swankier MacBooks. Um, you know, [19432] everything here is going to run way, way [19434] faster than, you know, if I were to do [19436] so using some sort of cloud instance. [19438] You also need to keep in mind I'm not um [19440] I don't have to send and receive data. [19442] It's actually just all locally here. I [19443] could see this making sense for people [19445] that want to play around with like [19446] higherend applications. Just keep in [19448] mind that this does complicate the [19449] process quite a bit because now, you [19451] know, your web hook urls are all local. [19453] Now, if you want to um find a way to [19455] expose, right, if I go back here, if I [19457] type web web hook, but you'll see that [19460] we can't currently access this. So, if [19462] you want to, I'm actually going to go [19463] back to my docker container. I'll stop [19465] it. If I click delete here, so we're [19467] going to want to find the nio this one. [19469] Uh we can pull it if we want, but in my [19471] case, I'm going to click run. What I [19472] want is I want to set the web hook URL [19475] to this. And then the host port I'm just [19477] going to leave at 5678. We'll call this [19480] NAN-IK again. So now when I run this [19483] after it uh gets up and running I'll [19485] have access to my local host setup [19487] again. So let me just go through the [19488] rigomearroll of the [19491] signup. And now if [19493] I I need to find a way to automate this [19497] just given how many times I'm signing up [19499] to all these. No thank you. Now if I [19501] start from scratch and I add a web hook [19503] URL, what you'll see here is it [19506] automatically puts in um this address. [19508] Now this still isn't enough to make it [19510] accessible. But what we need to do is we [19511] need to find a way to pass in requests [19513] from [19515] naden-nick.leclick.ai to our local NAD [19517] instance. And that specific thing is [19519] beyond the purpose of this tutorial. [19521] Essentially, what you're going to have [19522] to do is you're going to have to set up [19524] ngx, which is uh basically an HTTP web [19526] server that makes it so that when you [19528] send a request over to that address, um [19531] it'll automatically forward it over to [19533] your local host on your machine. But [19534] there's a ton of great documentation [19536] written on all this stuff on NAD. Um, [19538] feel free to check out configuration [19540] environment variables and then if you [19542] just type nadnx right over here, it'll [19545] show you guys uh well there variety of [19546] like answers direct from the founder of [19548] nadn himself um that walk you guys [19550] through what that process looks like. [19551] The last way I'm going to show you on [19553] how to set up nad in a self-hosted [19554] environment easily and quickly is using [19556] Hostinger. For those of you that are [19558] unfamiliar, Hostinger is very similar to [19559] the other tools that I mentioned here. [19561] Um they just kind of hold your hand [19562] through the process a little bit more. [19564] So, if you just type in NAND and then [19565] Hostinger up here, it'll take you to [19567] this page. There's a one-click VPS [19570] template, which will get you up and [19571] running quickly. Um, these are the [19572] prices on a 24-month term, but when you [19574] click on it, you'll actually be able to [19575] select a uh a smaller term if you want. [19577] So, period 24 months. Let's go down to 1 [19579] month here. I'm going to click on [19581] continue. It's obviously then going to [19583] ask me to create an account and do all [19584] my pricing information and stuff, but [19586] let's do this one. Okay, good to go. [19588] We're now going to click get started. [19590] That's going to take us to our H panel. [19593] H panel is just like the hosting or [19595] panel. And we have a guided setup here. [19598] I'm going to choose just the the default [19599] options because they walk you through it [19601] fair amount. The template that I'm [19603] looking for is NAN. So that's the one [19605] that you're going to want to do. It will [19606] launch um it will ask you to set up some [19609] malware scanning BS. I never do that. [19611] And then you do have to set up a root [19613] password of some kind. It'll be the same [19614] sort of idea as before. That looks [19617] pretty good to me. Oh, 12 to 50 [19619] characters. Can I just double this up? [19622] Yes, I can. We have the VPS host name. [19626] We had an SSH key, which I don't really [19627] need. It's going to save all this stuff. [19630] All this looks good to me. I'm going to [19631] click finish setup, and it's going to [19632] run through the process now of setting [19634] up my VPS. After that, you'll get a [19636] message saying the VPS is ready. We'll [19638] click manage VPS here. Um, it's going to [19640] obviously ask us some fun stuff. Thank [19642] you for the onboarding. Then, we have to [19643] do is head to panel access. Click on the [19645] login URL and this will take us to our [19649] lovely hopefully familiar at this point [19651] um NAN signup [19653] page and then from there you can proceed [19656] through the onboarding as I've done five [19658] times already. Click get started skip [19661] the paid features trial and then you are [19663] now good to go. We are in the canvas. [19665] Perfect. So now you not only know how to [19667] put together workflows in Naden and [19669] drive real business value but you know [19670] how to self-host. we've actually leveled [19673] up on the deployment side of things, [19674] which is historically very difficult to [19676] do. What I'd like to do next is I'd like [19678] us to take a step back, zoom out a bit, [19680] and then look at naden not isolation [19682] anymore, but as one of many tools that [19684] you could choose. And particularly what [19686] I'm going to do in this video is compare [19687] naden to make.com. These are two sort of [19690] competing noode platforms, and I know we [19692] haven't talked too much about them up [19693] until now, but I think it's important [19695] for you to understand the merits because [19696] some organizations are going to want one [19697] solution, some organizations are going [19699] to want another. And especially if [19700] you're doing any sort of consulting, [19702] you're going to want to know enough of a [19703] difference between the two platforms to [19705] be able to make strong educated [19706] decisions. Yeah, let's start with module [19708] availability. I've also included a [19709] winner here. So I think that the winner [19710] in module availability is make if we go [19712] back to NAND here and then I click on [19714] this plus arrow on the right hand side [19716] and I type action in an app and I scroll [19717] through. Don't get me wrong, there are [19719] lots of platforms but I don't know in [19721] total maybe a couple hundred, right? [19724] These are all the platforms that NN is [19726] natively um connected to. Whereas, if we [19728] go back over here to make, we click on [19730] this plus button, scroll through, I [19733] mean, that's probably to where NAN was. [19735] So, I don't have a numeric way of [19736] figuring this out, but I'd say make.com [19738] is probably at least 15 to 20, maybe 25 [19741] times as many platforms. And that's not [19743] taking into account community platforms [19745] and stuff either, although I don't [19746] really know if that's fair considering [19748] that NN probably has some community [19750] functionality as well. But yeah, I guess [19751] the point that I'm making is since [19753] Make.com's been around a little bit [19755] longer if you're just looking for like [19756] direct out of the box connections that [19757] just tend to work, make.com is probably [19759] your your better bet. Um, it's [19761] definitely substantially more [19763] streamlined to get up and running as [19764] opposed to you having to make your own [19765] API calls or that sort of thing. Okay, [19768] the next is JSON and code integration. [19770] So, you know, as I mentioned earlier, if [19772] we click on label general Q&A, we scroll [19775] in a little bit. Message ID, JSON ID. [19777] This is pretty interesting because we [19779] actually have like code in our no code [19781] or low code tool I should say. And the [19784] really cool part about it is naden [19786] actually allows you to use JavaScript [19787] just natively in any of these fields as [19789] long as you um go over here and click [19791] expression. So for instance if I just [19793] like you know I don't know wanted to do [19795] something to this JSON ID. Okay. I [19798] wanted to uh check if it starts with the [19800] number three or something. Uh like I I [19803] can do that. I can I can literally do [19805] that. Um, let me check what this [19807] actually was. This is a one. If I click [19809] one here, you see it just turned to [19810] true. Two, false. One, true. So, I can't [19813] understate how crazy this is to me as [19815] somebody that, you know, kind of like [19817] back in back in the hood, man, like the [19819] make.com hood, things were rough out [19821] there. We didn't have any JavaScript or [19823] anything like that. Uh, we we had to [19825] make do with like built-in make.com [19826] functions. The second that you sprinkle [19828] a little bit of code onto your Note Code [19830] platform, like like basically everything [19832] becomes possible very very quickly and [19834] easily. Um, you know, make doesn't [19836] really want to let you do that because [19837] obviously if you could just like do [19838] something like this with one little, you [19840] know, like a few characters, then how [19841] are they going to make their money, [19842] right? Like obviously it's uh the [19844] simplicity and effectiveness of the no [19847] code automation platform in a way is [19848] directly opposed to their ability to [19850] monetize if it's being built on a per [19853] operations basis. So NAN definitely [19855] wins. There's no comparable feature in [19857] make.com. The only thing that's even [19858] somewhat comparable is they uh there's [19861] this third party service called customjs [19863] and this isn't even like a like makes [19865] company like this is some other company [19866] that like built a way to do this. You [19868] can actually like add some code yourself [19870] in JavaScript but as you see it's [19872] nowhere near as dynamic. You don't get [19873] any feedback. You don't know when the [19875] code was sent or received. Uh you don't [19877] have little tool tip windows that pop [19879] up. It's just nowhere near as as [19881] dynamic. And you actually have to pay [19882] another platform in order to run [19884] JavaScript inside of make which is [19885] hilarious. So, JSON and code [19887] integration, N wins hands down. There's [19889] no, it's not even close. Um, I could [19891] show you, you know, a bunch of other [19892] stuff here. Like, you could literally [19894] make your own JavaScript window. You [19895] could write as much code as you want [19896] here. Um, but I'm not going to cuz I [19898] think it's pretty clear who wins that [19899] one. Okay, the next up is flow control. [19902] N wins flow control. Now, what is flow [19904] control? Essentially, you know, earlier [19906] I was talking about how this is one of [19907] the simpler flows that you could build, [19908] right? This is sort of like in one [19909] direction. It's unidirectional. You [19911] don't have like loop backs and stuff [19912] like that. And it can get pretty [19913] complicated with that stuff, but in [19914] general, it's it's much more powerful in [19916] nuance than anything that make.com could [19918] hope to do. Um, a good example of this [19921] is just this text classifier. As you [19922] see, this Gmail trigger feeds into a [19924] text classifier which natively outputs [19926] like five different if then statements. [19928] Okay, cold outreach, general Q&A, [19930] Gumroad notifications, invoices and [19932] receipts, unknown. It just automatically [19933] does this built-in. If we wanted to do [19935] something similar here in make.com with [19938] a [19938] router, which is the equivalent um [19941] function that kind of splits flows [19944] up, I would have [19948] to go and add a filter for every route. [19952] I have to say, you know, category has to [19955] be equal to um you know, cold [19959] outreach. I have to label it. And then I [19961] have to do that like, you know, six [19962] times or however many times I did. [19965] Um, so, you know, for one, we we just [19968] tend not to have that built-in kind of [19970] filtering or or uh what's the term flow [19974] functionality. On the other hand, um, I [19976] find loops are just a lot better done in [19978] N8. Now, I'm not going to show you an [19980] example of a loop here, but you can [19982] actually just like natively loop things [19984] back into each other in N8. Um, it's [19986] kind of crazy to me just to be able to [19988] do that to drag the output of one [19989] function into the input of another. [19991] There is no native way to do this in [19993] make. Like I can't can of do that. And [19995] the main reason why is they just don't [19996] want to like you know over complicate [19997] the hell out of the process for you. Um [20000] so instead the way that it works is if [20001] your previous module outputs multiple [20003] bundles then all um subsequent modules [20006] will run for the same number of times or [20010] they will run the same number of times [20011] that there are bundles in the previous [20013] module. If I give you guys a very simple [20016] example with a parse JSON module, which [20018] is just a way for me to convert um [20020] JavaScript object notation into [20023] something that's accessible by [20025] make.com. If we go array and then I go [20029] here and [20030] then go [20032] one [20034] to if I were to run this, what would [20037] happen is my first module would run once [20041] because I just outputed an array. I just [20043] converted this into make.com's format. [20045] So an array was um produced with three [20048] elements. I then iterated over this [20050] array which basically just means to turn [20052] an array of elements into three separate [20055] runs. So this is run number one, bundle [20056] one, run number two, bundle two, run [20058] number three, bundle three. Then it ran [20060] this set variable module three times. If [20062] I make um the value of this the [20065] value I run this [20068] again you'll see that I don't really [20070] have like a looping feature but we do [20073] run the same number of times as there [20074] are bundles in the previous section. [20076] What I mean by that is if the input to [20078] this is uh one bundle then the output is [20080] that same bundle but we didn't just [20084] input that one bundle we output three [20086] and then three outputs were made [20088] simultaneously. Operation three has a [20090] value of three. Operation two has a [20092] value of two. Operation one has a value [20093] of one because that is the value that I [20095] extracted from the particular bundle run [20098] um from that parse JSON module at the [20100] beginning. So without really beating a [20103] dead horse at this point, I'm just going [20104] to call it there. But n is is certainly [20108] far far better than make.com in flow [20111] control. Um they have the ability to [20113] filter just like make.com does, but then [20115] also have built-in ifs, loop over items. [20117] They can merge data from two different [20119] data sets. uh they have built-in error [20121] handling. It's [20123] fantastic. Another thing I want to bring [20124] up is testing. If you guys remember [20126] earlier when I was attempting to test [20128] the NA10 flow, all I did was I pinned an [20131] example and then I could actually [20132] manually modify the content of that [20134] example here. Then all I needed to do [20137] was I just ran the subsequent modules or [20139] subsequent nodes rather one by one, [20141] right? And it always just used that same [20143] input. I can't overstate how valuable it [20146] is to have that ability in a noode tool [20149] because the alternative is basically [20151] make.com where if I want to run [20153] something from left to right, I [20155] basically need to make an API call to my [20157] email server every single time I do [20158] that. So there's no caching of data. [20160] There's there's nothing that easy. If [20161] you wanted to build that in, you'd [20163] actually have to manually do that by [20164] using something like a set variable [20166] module, setting it to whatever you want. [20170] Yeah. [20171] And then on all downstream modules [20173] having to reference that set variable [20175] module for your testing and then anytime [20177] that you wanted to switch from staging [20179] to production basically you'd have to [20181] switch back over and over and over and [20183] over again. Um which means you'd have to [20184] go through every module and then change [20185] the email body variable back to uh you [20188] know the text the email text variable [20190] over and over and over again. And that's [20192] really annoying. It's also annoying [20193] because they kind of charge you a little [20194] bit more for it. So not even close and [20197] AD's just much better with testing [20199] authorizing and connecting. Uh, make [20201] wins for sure. Um, I know that I showed [20203] you some pretty simple connection flows [20204] here where all you needed to do is log [20206] into your Gmail, but in reality, Naden's [20208] connection flows are substantially [20210] harder most of the time. Um, if you [20212] wanted to connect, I don't know, like a [20213] Google sheet or [20216] something. Actually, you know what? Now, [20218] you could probably do one click off, [20219] right? Yeah. Okay, I take that back. You [20221] can do one click off here. But [20222] previously, if you wanted to do um I [20224] don't know, something like a Google [20225] Drive, you would have to create a [20228] credential and then you would have to go [20230] and use um you'd basically have to like [20233] do a whole API connection, which is [20235] obviously extraordinarily intimidating [20236] for new users. So like really, you're [20238] going to have to go into the Google [20240] Cloud Console and get the OOTH redirect [20242] URL, the client ID, the client secret, [20245] and you have to read super annoying but [20247] also very intimidating documentation on [20249] how to do this. you know, honestly, you [20250] could screw up and it could take you [20252] forever and you could be totally [20253] dead-ended. Whereas, if you wanted to do [20254] the same thing with make.com, you would [20256] just add a, you know, a Google Drive [20257] module here. And then the connection to [20260] this is literally just again sign in [20261] with Google. It's sort of a one-click [20263] sort of deal. So, very straightforward. [20265] Make.com even despite the fact that they [20268] have like 10 times the built-in modules, [20270] it's just much much better there. So, [20272] make definitely wins uh on that respect. [20274] For web hooks and mail hooks, u make [20276] wins as well. It's extraordinarily [20278] simple. And this isn't going to make [20280] sense unless you have like a um no code [20282] background, but it is extraordinarily [20285] simple to set up a custom basically [20288] event handler in make.com. All you do is [20291] you click add, you make new web hook. [20294] Let's just do YouTube example. I've had [20296] to start writing YouTube example cuz I [20298] went through all of my connections a [20299] little while ago and there were like 8 [20300] million that were just ASDF. I'm just [20303] going to say YouTube example and 8N [20305] versus make web hooks. They just give [20307] you an address and you can just send a [20308] request to this address anytime you want [20310] and then something will automatically [20311] populate here. It's crazy if you think [20313] about it. And NAD, you know, they have [20314] an equivalent feature if you go down to [20316] web hook, but I find in general um it's [20318] just it's just a lot clunkier and it's a [20320] lot more annoying to use. The NA web [20321] hooks are substantially more annoying to [20323] deal with. If you do the wrong request [20325] type instead of a get or you do a post [20327] or something like that, they won't just [20328] tell you that you did the wrong request [20329] type. You'll just be stuck here waiting. [20332] uh there's a difference between test [20333] URLs and then production URLs which you [20336] know is important if you're like a [20337] computer programmer or something but the [20338] vast majority of nontechnical folks they [20340] won't remember to change um the test to [20342] the production likewise and then they [20344] ask for some sort of like off usually um [20346] by default so it's a lot more secure [20347] don't get me wrong but if you want to [20349] just get up and running with this stuff [20350] make is is definitely superior another [20352] issue is uh there's no built-in mail [20354] hook feature make basically coined the [20356] term mail hook like a lot of people [20357] expect this a mail hook is just like a [20359] web hook it's just instead of a web hook [20360] it's an email address. So if you send an [20363] email to this address, like if I go back [20365] here and if I were to just make an [20367] email, I could actually like have a flow [20371] set up that, you know, basically like [20373] does something every time you send an [20374] email to this address. Think of the uh [20376] possibilities and opportunities here. [20378] You could basically instantly, you know, [20380] create a system that you CC something [20381] and it does something else. It it it [20383] adds a record to ClickUp. or if you BCC [20386] or something like that, maybe it [20387] automatically starts following a user on [20389] a social media platform. Like the [20391] abilities here for mail integrations [20392] particularly are limitless. So if that's [20394] something that you're looking to do a [20395] lot of, you know, definitely look more [20397] towards make AI features. Uh I hope that [20399] this is self-explanatory, but um NAN [20401] wins hands down. Uh I know I covered the [20403] text classifier here, but the biggest [20405] module and probably the most popular one [20408] is the AI agent module here. As I [20410] mentioned, the really cool part of the [20411] AI agent, if I just exit out of this and [20413] kind of scroll down, is it even has this [20415] inherent chat feature, which is crazy, [20417] but uh there's nothing like this in [20419] make.com. Make's not even close. You [20420] basically have to rebuild the wheel [20421] every time you want to do something like [20422] this. So, uh you know, when a chat [20424] message is received, and you could even [20426] you could chat with the model right [20427] here. It will go and it will call a chat [20430] model of your choosing. So, open AI chat [20432] model. Going to select my [20435] credentials. Uh sure, let's do GPT4 [20438] mini. Then it'll also talk to a uh [20442] memory store that you have which stores [20445] five or however many messages you want [20447] from your past conversation history. And [20449] then depending on that you can choose a [20451] tool that you want it to do which is [20453] pretty crazy. So uh I don't know this is [20455] the the simplest API in the whole wide [20457] world. Um I don't know if I'm actually [20460] going to do a tool usage. I'm trying to [20461] like find a very simple example. Maybe [20463] we'll we'll do the Gmail API and then [20466] we're just going to read through [20470] Um, let's not send. Let's [20474] get maybe get many. We're going to [20477] simplify [20478] them. And then now we're going to chat [20480] with our little AI agent. Hi, how's it [20484] going? Our AI agent is already here and [20487] ready to help you. What can you do for [20490] me? It can retrieve information, do [20492] email management, task assistance, and [20494] general advice. Like, that's pretty [20495] crazy. Could you retrieve the most [20498] recent email from [20499] info@leftclick.ai? We're just going to [20500] send it a message, ask it to retrieve [20502] the most recent email from info [20504] leftclick.ai. It's then going to call my [20506] little tool and it's going to take a [20507] while for that tool to obviously consume [20509] and do whatever it is that it needs to [20512] do. But then it goes through and it [20514] finds the tool in my email inbox just [20516] using natural language. And as you can [20517] see, I set that up in like 3 seconds, [20519] right? So it includes a snippet, [20521] includes all the data and all that [20522] stuff. Um, you can make this arbitrarily [20524] complicated. I added a single tool here. [20526] You could add 500. I mean, you probably [20528] shouldn't add 500, but what you can do [20530] is you can add five and then one of the [20532] other ones you can add is another AI [20533] agent which filters some other stuff. [20534] Essentially, what you're doing is you're [20536] you're making this big decision tree, [20537] which is pretty neat. And you can chain [20539] together however many of these things [20540] that you want. Um, it does start to [20542] break down after a certain point. And I [20544] won't say that it's like super business [20546] um capable at the moment, but it's very [20547] clear that this is going to be the [20548] future of the vast majority of [20550] businesses. They're just kind of a [20551] agents that route decisions and do [20553] queries. So yeah, not even close. Nad [20556] wins hands down. If you're looking to [20558] get more involved in AI agents and [20559] that's like kind of the the the next [20561] step you want to take, then NAN's the [20563] one for you. Sharing and collaborating [20565] functionality, Nad also wins on that [20567] front. Um, if I just go over here, uh, [20570] if I wanted to share this flow, which, [20571] you know, it's kind of two parts. So, [20572] let me just delete this Agent. Sorry [20574] buddy, you're not taking my job just [20575] yet. We click share over here. Sorry, [20578] not share. Well, we could we can [20580] collaborate with other people in our um [20581] workspace very easily with that button. [20582] But if we go over here and then we click [20584] um download uh you can basically um very [20588] quickly and easily download like a [20590] blueprint file or a JSON uh which is [20592] similar to um what make.com allows you [20594] to [20595] do. And what this data is is it's [20598] basically like a code representation of [20599] all of the modules in your flow along [20601] with all the connections and like the [20602] positions on the page and all the test [20604] data and stuff like that which is [20606] obviously pretty neat, right? [20608] The benefit to this though is if you [20610] think about it um there there's also the [20612] ability to import from a URL um which is [20614] kind of new. So you can actually import [20616] a workflow from a URL. You can remember [20618] how earlier we said that there were a [20619] bunch of templates. Well this is what's [20621] happening under the background. You can [20622] actually just click any one of these [20623] workflows and instantly just import it [20626] to your um a workspace. You can also [20628] copy the template to your clickboard and [20630] I can just paste this in and it'll [20631] literally just like paste in this huge [20633] Lego block like thing. And as you can [20635] see, you know, you can get arbitrarily [20637] big and complicated with this stuff. I [20639] mean, you know, this flow could be, I [20641] don't know, it could start here or go [20642] all the way down here. There could be 8 [20644] million modules involved. Not that I [20645] recommend you build flows that have 8 [20646] million modules, but I think you guys [20647] see what I'm saying, um, with this copy [20649] and paste stuff. Make.com's a lot more [20651] annoying, I find, with this. Um, you [20653] have to use this little import blueprint [20655] thing, and they have to choose a file on [20657] your computer. Um, there's nowhere near [20658] as big of a template library available. [20660] Like, there are templates, don't get me [20661] wrong. I just find that the templates [20663] are nowhere near as nuanced or as [20664] valuable and this is coming from [20666] somebody that like actually uses these [20667] to make real money. These are usually [20668] just one or two step flows and like yeah [20670] they're cool and stuff and that's nice [20672] but nowhere near as detailed as like the [20674] thriving developer open source community [20675] that NAN has unfortunately. So your [20678] ability to collaborate is definitely [20679] impacted. Hotkeys NAN definitely crushes [20682] it with hotkeys. Not just um uh like the [20684] the availability of the hotkeys but also [20686] the fact that they like teach you [20687] everything. If you mouse over stuff, [20689] it'll just tell you what hotkey you need [20690] to click in order to have it happen. So, [20692] top right hand corner here, I'm mousing [20694] over this plus button. It says, "Hey [20695] man, quit clicking this button. Next [20697] time, just press tab instead." Right? [20698] Variety of other examples of this, but [20700] yeah, they lend themselves to this [20701] little text interface quite a bit, which [20703] I like. And uh you know, there aren't [20705] very many hotkeys in make.com at all if [20707] I'm being honest, aside from just like [20708] the built-in ones in your browser. Like, [20710] you know, you can tab through fields for [20712] sure, but really like that's it. I could [20714] just tab through fields. Is there really [20715] nothing else? If I wanted to um copy [20718] something, the [20719] copy, paste, you know, cut. I mean, like [20723] these are all things that are obviously [20724] native to my um native to my computer, [20727] not really built into make.com. And I [20729] consider it such a shame because I think [20730] make.com could be so much more easy to [20732] use with some hotkeys, but they are [20733] really just targeting that total noob [20735] demographic, I would say. Um note-taking [20737] and documentation, naden wins for sure. [20739] Um if I wanted to document a flow in [20741] make.com for this, I would have to click [20743] on this notes feature. I'd have to right [20745] click on this, go add a note, and I'd [20748] say, you know, note about [20750] XYZ, then click exit out of this. I' [20753] right click this, add a note, note about [20758] ABC. Not only is this just not very [20760] intuitive, like the only way to see my [20763] notes is I have to physically go down [20764] here to notes and then give it a click [20766] and then and only then will I see it. [20768] Not only is this not very intuitive, [20769] it's just it's very limited with like [20771] what you can do. I mean, sure, you could [20772] make this really long if you wanted to, [20774] I guess, but I don't know. There's like [20775] no there's no formatting. You can only [20777] see it if you click on the button. You [20779] have this little arrow. I guess what I'm [20781] trying to say is NAD just does a much [20782] much better job on notes because [20784] remember that template that I just [20785] copied and pasted a moment ago. If I [20786] copy this again and go back here, like [20789] if I paste this puppy in, just look at [20791] the way that this is documented, right? [20793] You have a variety of different [20794] formatting um options natively accepts [20796] markdown, which is just a text [20798] formatting method. You can drag and drop [20799] these to be visible anywhere you want. [20801] There's so much information basically on [20803] everything that you can you can like [20804] document any flow that you possibly want [20807] uh for you or somebody else in your team [20809] for instance. So that makes it just a [20811] lot easier and clearer to use in [20812] general. Okay, let's do the financial [20814] comparisons and then at the end I'll [20815] talk about which platform I would use if [20816] I were in your shoes right now and I [20818] were kind of at the start line of my [20819] business versus if I were sort of [20820] halfway through. So financial comparison [20823] wise um now I think you know how each [20825] platform works realistically. Let's now [20827] turn to the major topic that is on most [20829] people's minds and is honestly the main [20831] reason why most people choose one [20832] platform or the other. Um, the [20834] financials involved. So, how much money [20836] could you realistically expect to spend [20838] on each platform if you wanted to? What [20839] I'm going to do next is I'm going to [20840] break costs down below so you guys can [20842] make the best decision for you. To keep [20843] things relatively equal across each of [20845] these, I'm going to be using a [20846] hypothetical example. We just need to [20848] run the system that I built 2,500 times [20850] per month or a little under 100 times [20851] per day. So, 2,500 times per month. I [20854] don't know, it's like 80 times a day or [20856] something like that. I'm assuming that, [20858] you know, you get 80 emails a day. That [20859] may seem a little crazy for you, but I [20861] guess if you think about it logically, [20862] if you're running like a big info ad [20864] email or hello ad or something, 80 [20866] emails a day, while on the higher end of [20867] the number of emails you might receive, [20869] it's actually not that crazy to [20870] consider. So, we're going to start by [20872] doing a financial breakdown of NAN and [20874] then I'm going to do a financial [20874] breakdown of make.com as well. If I [20876] start with this N8N financial breakdown. [20879] Basically, the way that their pricing [20880] works is, and I I've clicked monthly on [20882] all of these. You can also buy annual [20883] plans, and I think the pricing is a [20884] little bit different, but not by that [20886] much. NAND is absolutely 100% free if [20891] you self-host it. I'm going to cover [20892] that in a second, but I just want to [20894] make sure that everybody here knows [20894] that's like one of the main draws of the [20896] the self-hosting feature. Now, I'm going [20898] to be comparing this on a cloud hosting [20900] to cloud hosting um basis just because [20902] doesn't really make sense to compare [20903] apples to oranges. Let's compare oranges [20905] to oranges to start. If you were to [20907] compare oranges to oranges and then go [20908] cloud um based hosting for both nand and [20912] make.com, here's what it looks like. Um [20914] you will pay $24 a month for 2,500 [20917] workflow executions and five active [20920] workflows. What is a workflow execution? [20924] To be clear, a workflow execution is [20928] this. One run of this is a workflow [20930] execution. So that runs 80 times a day. [20933] you're consuming 80 workflow executions [20935] a day. You are allowed five active [20936] workflows. What is an active workflow? [20938] If we go back to personal here, I'm just [20939] going to save this flow and exit out and [20941] go back to the dashboard. Five would be [20944] five systems that are clicked to active. [20947] So 1 2 3 4 5. That is all you would be [20950] able to do for $24, which to be honest, [20954] pretty crappy. The fact that they limit [20956] the number of active workflows you have [20957] on the $24 month plan, that's kind of [20959] crappy. Um, so not very good there [20961] because I mean I can think of a dozen [20963] scenarios where well scenarios is a [20965] funny word. Uh, I can think of a dozen [20967] instances where you could have where you [20970] would need substantially more than five [20971] to do even like some of the more basic [20972] things um in a business. So I really [20974] don't like how they limit the number of [20976] active workflows. It's probably like the [20977] shittiest part of their pricing model to [20979] be honest. But obviously, you know, the [20981] self-hosting comes in handy and anytime [20983] you're over five, that's typically what [20984] people do. So, if we were to run a [20986] scenario 2,500 times, you know, [20988] obviously this would be under the $24 a [20990] month plan because we have one active [20991] workflow. That's how much it would cost. [20993] $24, I should say, per month. Now, let's [20996] chat really quickly about the [20997] self-hosting. If you self-host an N [20999] workflow, you don't pay them a dime. [21000] Your only costs are the server that you [21002] are going to be using to host your NA10 [21005] open- source instance. That's it. So, [21007] most of the time in practice, a server [21008] costs like at the beginning and low end [21010] of the range might be 5 to 10 bucks a [21011] month. the higher end of the range, you [21013] might be spending like 30, 40, 50 bucks [21014] a month if you have like a pretty good [21016] server. If you want to spend like a [21017] couple hundred bucks a month or [21018] whatever, you'll have like the best [21019] server ever, but you probably don't [21021] really need to unless you're doing [21022] something mega enterprise. So, what that [21024] means is, you know, you can kind of get [21026] away with five bucks a month and [21027] theoretically on that five bucks a [21028] month, you could like probably scale to [21030] over 100,000 workflow executions. So, [21032] like that's 40 times what you're getting [21034] for €24 a month. You know, there are so [21036] many options like there's render, that's [21038] one uh service, digital ocean, easy [21040] panel. I mean I could throw out like 500 [21042] here but yeah you can you can get you [21044] know servers and all these for like 5 to [21046] 10 bucks a monthish and then you could [21047] run 100,000 uh workflow executions and [21049] since a workflow execution in nn is very [21051] different from an operation consumption [21053] in make like this is pretty huge right [21056] if the average make scenario has 10 [21059] operations or 10 modules and it run it [21061] takes 10 operations every run like [21063] theoretically this is like a million [21064] operations a month for like five bucks a [21066] month so that's what's really attractive [21067] to a lot of people that do make.com uh [21070] and that's one of the reasons why a lot [21071] of people are switching over to [21072] NANN. Now, in terms of scaling, they're [21075] not captured in our example. Um, the key [21076] point in NN is how affordably it scales. [21079] Make.com doesn't really scale very [21081] affordably. A single scenario can [21082] consume many ops, usually between 5 to [21084] 25, I want to say. Um, N8N will only [21086] ever count a single workflow on their [21089] cloud offering. Additionally, if you're [21090] doing self-hosted, you can run an [21092] infinite number of workflows for the [21093] same or slightly elevated cost per [21095] month, which is nothing. So, that's [21097] pretty cool. Obviously, um, NAN has, uh, [21100] quite a lot of big deck energy there. If [21102] you could just self-host your make thing [21104] and just never have to pay them, how [21105] great would that be, right? Moving on, [21107] let's do a make.com financial breakdown. [21109] So, as you see here, there are variety [21110] of plans on the monthly side of things. [21112] There's a free plan, there's a core [21114] plan, a pro plan, themes plan, [21115] enterprise plan. I should note that um, [21117] you technically don't have like a free [21118] plan here for the cloud hosting. It's [21120] just the self-hosting. So, technically [21121] like make.com is more accessible um, at [21123] the lower levels. You can get started [21125] for free, right? All right, you don't [21126] actually have to pay a dime, nor do you [21127] have to know any computer programming or [21128] anything. You can actually get up and [21129] running for $0. But generally, if you [21132] want to do anything meaningful in a [21133] business, you're going to need you're [21134] going to need core or up. Um, the good [21135] news is core starts at just $1059, so [21138] 10,000 ops a month. Pretty simple. When [21139] I wrote this, I thought that our [21140] scenario would include five modules. I [21142] believe it only ended up including four, [21144] right? Yeah, it only ended up including [21146] four. So, um, this is actually even less [21148] than this. So the logic that I did here [21150] with five was I said, you know, if we [21152] run this 2,500 times a month, we have [21154] five modules which get executed. 5* [21157] 2,500 is [21158] 12,500. 12,500 would be over the limit [21161] of most built-in $10,000 and ops a month [21163] plans like core for$1059 or pro for 1882 [21166] or teams for uh 3412. So you'd have to [21168] upgrade. Um that would then cost $18.82 [21171] per month on this plan on 20,000 [21172] instead. Um, but you know, because we're [21174] doing this for just uh I don't know, [21176] four time. Technically, this fits under [21178] the core plan for $1059 a month, which [21181] makes a lot more cost- effective than [21183] NNN's cloud hosted offer for this [21184] example. Uh, this does make it less cost [21187] effective than their self-hosted offer [21188] still in most cases because you can [21189] usually get a server for less than this. [21191] Um, and that server would be able to run [21192] like 100 times this, right? Now, the [21195] issue with make.com, I would say pricing [21197] wise, is it just scales really fast. Um, [21199] most scenarios are going to include a [21201] ton more modules than our little example [21202] did with five or four I should say. And [21205] a lot of the time there'll be some sort [21206] of looping functionality where you might [21208] run the scenario once, but you have 50 [21210] bundles. So 50 * 5 or four is instantly [21213] 200. And if you run that like more than [21215] a few times a day, you basically are [21216] like using your entire month's operation [21218] budget with just one scenario. So that [21220] kind of sucks. Um, yeah, I'm not going [21222] to graph it for you guys, but [21223] essentially it's like more affordable at [21226] the beginning and then it like spikes [21228] way up. And what's interesting, um, [21230] depending on how long you guys have been [21232] in, you know, the no code business for [21234] is this is basically the comparison [21235] between Zapier and Make.com. Um, a few [21238] years ago, Zapier was kind of the one [21239] that was like, you know, scaled way the [21240] hell up. And if you were like a pro and [21242] you wanted to like get better at this [21243] stuff, you'd move over to make. But now [21245] that same determination is kind of being [21246] made between Make and and N. And it [21249] makes sense if you think about it [21250] because the market itself in no code is [21252] getting more sophisticated like I don't [21254] know five or 10 years ago. I mean how [21255] many people were out there developing no [21257] code stuff? Fewer, right? But over the [21258] course of the last 5 years like some of [21260] those people have become really good and [21262] the median ground of the market has [21264] become reasonably good. So if you're [21265] really good or reasonably good, it makes [21267] sense that you'd start going towards [21268] more developer friendly applications, [21270] right? That's just logical. Anyway, [21272] which one should you choose? Drum roll, [21274] please. This is probably what most [21276] people here were waiting for. Nick, what [21278] would you choose if uh you were in my [21279] shoes? Let me tell you, it depends. I'd [21283] pick uh I'd pick one or the other [21285] depending on circumstance. So, as I [21287] mentioned before, almost all no code [21289] platforms are capable of the same [21290] things. If you can do something in make, [21292] you can absolutely do it in NAD. It's [21293] not just a matter of is this possible? [21295] It's a matter of how many steps would be [21297] required in order for me to do this? How [21298] difficult would this be? Right? So, I I [21300] really want to like prove that to you [21302] guys that you can do anything in either [21303] one. And that's why I built that same [21305] system in both. and we had relatively [21307] different approaches for them. Now, a [21309] simple answer to the question is make is [21310] going to be easier for simpler things. [21312] Nad is going to be easier for more [21314] complex and operationally intensive, [21315] more expensive things. So, if you find [21317] yourself doing easier things more often [21320] and if you're not very technically [21321] competent, you know, it's easier for [21323] simple applications. Nad is going to be [21325] better for you if you're operationally [21326] intensive. Congratulations. You guys [21328] have now made it to the end of the NAND [21329] mastery course. You went from somebody [21331] that probably had no idea what NAN was [21334] or how to put together a workflow to [21336] somebody that is now comfortable and [21337] confident enough to do this sort of [21339] thing regularly while also understanding [21340] some of the finer nuances related to [21342] data related to some of the nodes that [21344] most people don't get stuff like the [21346] merge node the split node and then how [21348] to um coral those hundreds of NAD [21350] functions into something that actually [21352] works and hopefully makes money. After [21354] that we covered self-hosting. though you [21356] learned how to actually deploy a real [21358] live instance of nadent directly from [21360] the source code. Then finally we looked [21361] at nad not in isolation but as a [21363] comparison to make do one of the [21366] competing tools right now that a lot of [21367] people are also using. At this point you [21369] are no longer an NAND beginner. You are [21371] an NADN master. You have spent more time [21373] on this tool than most people ever would [21375] believe it or not in just a few hours. [21376] You guys can reference anything in this [21378] video using the bookmarks and using the [21380] chapter headings down below. So don't [21383] feel like now that you've gone through [21384] it, you can never brush up on any of [21385] these skills again. I've tried to make [21387] this as organized a resource as humanly [21389] possible. Now knowledge is not valuable [21392] in isolation. So now that you know all [21394] of this stuff intellectually, it's time [21396] to actually go out there and do [21398] something with it. And this is what I [21399] think the main gap is between people [21401] that understand AI and automation [21403] concepts as builders and then people [21404] that understand AI and automation [21406] concepts as strategic business people. [21409] Now, I'm obviously leaning more towards [21410] the latter. Everything that I teach is [21412] always in a business context, but to be [21414] honest, that's really where no code [21416] shines. It's not really great for hobby [21418] projects. It's more of a thing to [21419] actually drive actionable revenues. So, [21421] if you guys like what you've done so [21422] far, you guys see potential in potent [21425] and maybe wanted to start a business [21426] model doing something like this, then [21429] join my community, Maker School. It is [21431] the simplest, straightest line road map [21433] to go from a total beginner who has [21434] never sold any sort of AI automation in [21436] their life to an experienced business [21439] professional who runs a thriving AI and [21441] automation company. Inside you guys are [21443] going to find a 90day road map that [21445] takes you from a total automation agency [21448] beginner to somebody that has their [21450] first client guaranteed or your money [21452] back. daily accountability and [21454] step-by-step guidance where I will [21456] legitimately check in with you at least [21458] every 24 hours to make sure that you're [21460] on the right path. Copy and paste [21463] outreach and sales templates that are [21465] closing deals right now. A library of [21467] proven naden and make.com workflows and [21470] blueprints that you can copy and paste [21472] immediately. And coaching calls that I [21475] do live with thousands of people where I [21477] answer specific questions that you guys [21479] ask. Plus, you'll see me there every [21481] day. I respond to the bulk of community [21483] posts. I record customized videos for [21485] all of you. And I'm essentially just a [21487] pillar of that community. So, if you [21489] guys are serious about making money for [21490] yourselves rather than just watching [21491] videos on YouTube or a bunch of other [21493] people do that, then this is the sign. [21495] I'm giving you permission to go out [21497] there and try something new. We'd love [21499] to have you. And uh if you do end up [21500] joining, definitely say hi. Would love [21502] to help coach you through the first few [21504] steps of your AI and automation journey. [21506] Thank you for completing this course and [21507] I earnestly hope to see you inside a [21508] maker school and just on my YouTube more [21511] generally.

Video: https://www.youtube.com/watch?v=RmYTguzXrVM
Title: How I Turn One AI Project Into $5K Monthly Retainers
[0] Today I'm going to talk about how to [1] turn a one-time project revenue into [3] recurring revenue, which is one of the [4] most important skills that I think an AI [6] agency owner can have. So, we're going [7] to solve this very particular problem [9] over the course of the next little bit. [11] I'm going to make sure it's short, to [12] the point, and ultimately high value. [14] So, first of all, what is retention? Why [16] is it important? I focused on retention [18] a ton when I scaled my automation agency [19] to 72 grand, and my copyrightiting [21] agency to 92 grand. But there are a [22] couple reasons. The first is this is [25] what your agency looks like without [27] retention. Okay, month one, you might [30] make [31] $25,000. Isn't that so cool? Month two, [34] you'll make [35] $15,000. Month three, you'll make [39] $45,000. But then month four will come [41] and you'll hit [42] $12,000. Okay, what are we seeing here? [45] We are seeing a very big variance [48] between one month and the next. Now, [50] this isn't the right term. It's stats [52] and I'm not very good at stats, but [54] essentially if we could just graph this. [56] When you don't have a recurring product, [59] this is what your revenue looks like [60] monthtomonth. Okay. Now, how is a [63] business supposed to be able to project [65] and anticipate its needs and demands if [67] this is the revenue over time? Let me [71] tell you from experience, not very well. [73] It's very difficult to confidently [75] invest in a software platform. It's very [77] difficult to hire reliably. It's very [79] difficult to basically do any sort of [80] capital allocation when your revenue [82] goes all over the place cuz you don't [83] have a stable base. Now, if you contrast [85] that to what things look like with [87] recurring revenue, okay, basically, [90] instead of you starting at some massive [92] figure like $25,000, month one, you [94] might make 10K. Month two, you might [97] make 12K. Month three, you might make [99] 15K. Month four, you might make 20K. [102] Month five, you might make 25K. Month [104] six, 30K. So on and so on and so forth. [106] Okay, so what does this mean? Well, the [109] variance or the variability between one [111] month's revenue and the next is actually [113] pretty low and usually it's trends [115] positive because it's not like, you [117] know, when the month finishes your [118] freaking revenue falls off a cliff and [120] you got to restart the whole sales [121] engine again. You actually have a stable [122] base. You don't start from zero every [124] month. What you do is, sure, you might [125] have a little bit of churn. You know, [127] maybe 10K goes to 9K because you lose a [129] $1,000 a month maintenance subscription [131] or something, but it's much easier to [132] add that back on. Okay, so that's reason [135] number one why you might want to focus [136] on MR and the monthly recurring. The [138] second is that acquisition is really [140] expensive. Nobody really talks about [142] this and I'm kind of to blame for this [143] because I always talk about how you [144] should frontload acquisition wherever [145] possible. You should always be focusing [147] on the Upwork apps and cold emails, the [148] community posts and the the ads and the [150] the the DMs and so on and so forth. [152] These are great, don't get me wrong, and [153] you should be putting a ton of your time [154] and effort in them. But after you've [156] gone from 0ero to one and you have a [157] couple clients under your belt, the game [159] changes a bit and it becomes less about [160] how do I get new acquisition through the [162] door and becomes more, hey, how do I [164] take full advantage of this massive book [165] of business I've already built? So [167] acquisition's expensive. Let's say you [168] win a 10K project as an AI automation [170] agency. Okay, right off the top, before [173] you even get a scent of that $10,000, [176] you got to pay money to acquire. So [178] maybe you spend $500 on the cold email [181] systems and leads in order to get that [183] project. Maybe you spend another $500 on [186] the sales, maybe your time, maybe the [188] salesperson's salary, maybe you, I don't [191] know, actually have this land in your [192] lap because it's some sort of referral. [193] And you pay the referee um 5% on the [197] amount. Well, if we take this into [198] account, that's [200] $1,500. Meaning of our $10,000. Okay, we [203] have just lost $1,500. We're only going [206] to make $8,500. So this 10K project now [209] is literally right off the top already [211] down 15%. And we're not even talking [214] about the other expenses that you have [215] like you know let's say you have a team [217] you actually need to fulfill you let's [219] say you have software like make.com [220] expenses tokens right you know when you [222] factor in the cost of goods sold COGS [225] you know you might actually be left with [226] 35 to maybe 50% margins that's really [229] not good how much better would 50% to [232] 65% margins be in this case well the [234] difference between business A at this [236] number and business B at this number is [238] usually the difference between the [239] business that lives or dies okay and we [241] want to be business B so Hopefully, I've [243] made a very short case for why you need [244] to focus on retention versus [246] acquisition. Let me make even more of a [248] case for it below. So, as we know, [250] retention is free, whereas acquisition [252] costs money every time. When you have a [254] one-time project, you get fixed return. [257] When you have a retainer, you have an [258] ongoing revenue stream. Now, if we just [260] math it out, acquiring new clients costs [263] an insane amount more money than [265] retaining existing ones. I said five to [268] seven times here based on personal [269] experience and just numbers I found on [270] the internet. I think some companies are [272] paying way more than this. So, companies [274] that are in that situation should focus [276] on retaining their current client base [278] as opposed to spending a ton of money in [280] order to acquire new ones. Okay, [282] retained clients also usually end up [284] with higher profit margins. Why? Well, [286] there are a bunch of reasons why, but [287] the biggest one is you know them. Okay, [289] you know what happens when you know [291] them? Well, you can optimize your work. [295] When you optimize your work, you [296] optimize the allocation of staff [298] members. you you you optimize the [300] software products and platforms that [302] you're using. Um things get easier. You [304] can also upsell them because you know [306] their business. Now, when you know their [308] business, you can offer specific, more [310] nuance solutions that solve more nuance, [312] deep problems that they're suffering [313] from and then demand more money for it. [315] Okay? So, you're going to make more [316] money retain clients anyway. And then [318] the way that all this stuff works is [320] let's say you try and convert totally [322] cold traffic to a retainer. Okay? So, [324] this is a new lead. they come in and [327] then you are trying to convert them into [329] some sort of retainer. Well, if it's [331] totally cold traffic, think of how much [334] more difficult it is to sell a retainer [337] product where it's like, "Hey, I want to [339] work with you for a very long period of [341] time. You have zero idea who I am. You [344] have no idea what sort of results I've [345] delivered. I have basically no authority [347] or no credibility here. Do you want to [349] sign this contract at $5,000 a month for [351] the next 12 months?" That's a $60,000 [353] capital outlay. the lead has to make a [355] decision on whether to do it. How many [356] people are actually going to convert [358] totally cold into a retainer product? [360] Very very low. You have like good sales [361] mechanisms mechanisms 5 to 10% maybe [365] 15%. Okay. Whereas if you uh stagger [368] this, you have a lead come in. What you [370] do is you start off with a onetime [372] project like many of you guys do which [374] is great. How much easier is selling a [377] simple maybe $1,000 or $1,500 onetime [379] project. Okay, you could convert like [381] 30% of these people. And then after you [384] do the onetime project to retainer [385] conversion when you when you you know [387] follow up and try to retain them maybe [389] you convert another 30%. Meaning that [391] here you know you're getting 9% you know [394] mathematically you're getting 9% of [395] these leads anyway but you're also [397] getting a onetime project. So you just [398] you're getting to double dip basically [400] you just get to make double the money. [401] So I mean I could go on and on and on [403] there actually a number of more reasons [404] why retention is better than [405] acquisition. But I hopefully have made a [406] case for once you've acquired a few [407] clients, why you guys should focus less [408] on acquiring more than more on, okay, [411] how do I actually squeeze as much juice [413] out of this towel as I possibly can [415] before I move forward? Obviously, [416] eventually you have to acquire more [418] clients. Everybody does. But if you [420] already have a pretty good client base [421] that you haven't done any sort of [422] upselling to and you haven't really [423] pitched any sort of retainer, we're [425] going to dispel those notions this [426] video. We're going to make you really [426] good. Okay. So, let's say client [428] acquisition costs you 500 bucks and then [430] you make $3,000 with that retainer. If [433] you do not convert it, you make $3,000. [435] You just spent $500, meaning your [437] margins on this deal are 80, I think [440] it's 84% or something like that. Okay, [442] let's say you end up converting that to [444] a monthly $5,000 retainer. Okay, not [447] only did you make the 3K, but you also [449] made, let's say for a full year, another [450] 60K, which is 63K. And if you do the [453] math, um, how much do you spend to [454] acquire that? $500 over [459] $63,000 is uh [463] 99.2% margins. Now, wouldn't you rather [466] be in this camp? I know I definitely [467] would. All right, so let's actually talk [469] about practically how to do this, not [470] just why. Um, what I do is I I do what's [473] called setting the foundation. Okay, so [475] when I pitch a retainer, I will [476] legitimately pitch a retainer during the [478] very first sales conversation I have [479] with the person. I won't make this a big [481] deal, but usually when I do the the [483] pitch during both the sales call and [484] then during the initial like lead gener [485] outreach, I will say something along the [487] lines of, "Listen, my goal is to get you [489] on a long-term monthly retainer because [490] from experience, that's how I deliver [492] the most value to clients. It aligns my [494] incentives because I get to know how [495] your business works and I get to figure [496] out the nuanced ways to add value. I'm [499] confident that if you work with me on a [500] long-term retainer, I will multiply the [502] investment you make in me by 5, 10, 20, [505] or more, just like I've done for X, Y, [507] and Z client." Okay? Now, I've actually [509] done this multiple times. This is just a [511] simple um Upwork conversation that I [513] had. Maybe you guys that are on Upwork [515] will recognize the the font and stuff [517] like that. This is somebody that I [519] legitimately jumped on a sales call with [520] and then I drafted a proposal for a [522] monday.com CRM build. Okay? And then [524] down over here, I legitimately say, [526] "While I deliver the proposal for a [528] one-time project, my end goal would be [530] to get you on a retainer for monthly [532] services since it lets me interface with [534] and learn your business deeply. I'm very [536] confident you'll be able to make a [537] significant multiple 5 to 10x on [539] whatever I charge you. Not to mention [540] the improved growth as a result of [542] better follow-ups, etc., but you can let [544] me know how amendable your team is to [545] that. And then, you know, I was heading [546] on a cool snorkeling trip. So, um, [548] that's obviously why the guy signed the [550] deal cuz he knew that I was cool enough [551] to go snorkeling. The point that I'm [552] making is when you make your intentions [554] abundantly clear from the very [555] beginning, you never run into a weird [557] conversation later on. You know, you [558] have to be like, "Hey, I think we could [559] do something else." point that I'm [561] making is um by making your intentions [563] abundantly clear uh upfront and being [565] confident that you can deliver return on [566] investment and implying that you do [568] these sorts of retainers all the time [569] sets you up much much better for success [571] later on. So I position for the retainer [573] during literally sales call number one [575] um hell uh a marketing message number [577] one sometimes I do it in the Loom videos [579] I will send prospects my goal is to get [581] shown a long-term monthly retainer [582] because it aligns incentives. It helps [584] XY and Z. I'm confident I can deliver a [585] multiple on the investment that you make [587] in me. You also have the ability to [589] select initial projects that naturally [591] reveal additional opportunities. Now, [592] what do I mean by this? Well, I mean [594] sales projects. If you build a sales [596] system for somebody, you have to hand [598] off leads to somebody on their team. You [600] learn pretty quick what the bottlenecks [602] are are on their front end. If you do [603] some sort of fulfillment system, maybe [605] you help people draft, I don't know, ad [606] copy or ad creative. You hand that off [608] to to staff members, you learn pretty [610] quickly where the bottlenecks are in the [612] fulfillment process. Okay? When you do [615] long-term retainers, when you actually [617] make a pitch, like I did back over here [618] on that Upwork example, I always talk [620] about long-term partnership potential [622] because I also like to set the ground [623] for maybe a potential revenue share [625] later on. Highly recommend. And then the [627] way that I do it is I structure the [629] actual proposals themselves to position [631] my retainer as a natural next step. I [633] don't actually, you know, like in the [635] proposal itself, I will either mention a [637] retainer or I will talk about retainers [638] I've worked on with other clients to [640] achieve similar results. Uh, the point [641] that I'm making is I'm always putting [643] seeds essentially that this is not just [645] a one-time thing. If you work with me [646] and I deliver crazy results for you, [648] well, why wouldn't we want to work [649] together again? Doesn't that just make [650] sense? You guys want to look at what [652] actual examples of this look like, [653] definitely check out Maker School, my [654] automation community. We just hit 2,250 [657] members as of the time of this [658] recording, and we make the price go up [660] every 100 members. So, you know, [662] essentially this is like the the SOP, [664] and I really like doing these because [666] this is just a simple operating [667] procedure or checklist that you could [669] make every time that you go through a [670] sales conversation. So, every time you [672] have a sales conversation, you plant [674] seeds of long-term value. You discuss [676] how most of your other clients are on [678] long-term retainers and they see value [680] because of X, Y, and Z purpose. You're [682] confident that they could multiply their [683] investment in you if you, you know, get [685] to the point where you are able to [686] deliver said long-term retainer. Then, [688] select a strategic initial project. [690] Establish measurable KPIs. What are some [692] KPIs? ROI. Okay, things like uh cycle [695] time for fulfillment. That's how long a [696] project takes to go through their queue. [698] It's things like, I don't know, savings, [699] right? How much money they're spending [700] on software. Then you deliver the [702] initial project. You track the value [704] that that initial project creates. And a [706] lot of the time this is going to be [707] estimated. But basically now what you [709] have is you have a list of bullet points [710] that you could use in a retainer [712] conversation later on. I'm going to show [713] you exactly what those retainer [714] conversations look like. Okay. All [716] right. Next up, while you're actually [718] doing the project is probably one of the [720] greatest opportunities to show a client [722] what an actual long-term relationship [723] with you would look like. And one of the [725] simplest and easiest ways to do this is [727] project updates. Okay? Now, I've done a [730] bunch of different project update [731] templates over the years. This is [732] probably the simplest one that I found, [734] but basically, okay, once every day or [736] two, depending on how involved you want [738] to be with your clients. If you can get [739] to a cadence where you do this every day [740] though, you'll be a lot better. You say [742] something like, "Hey, blank. Hope you're [744] having a great blank. Just wanted to [745] check in with an update on where we're [746] at. Here's number one thing that we did. [748] Here's number two thing that we did. No [750] action needed or action needed. Simply [752] giving you an update. I know it's a busy [754] day if you use your best luck at the [755] conference. This is one that I sent and [756] I've since obfiscated, hence the uh the [758] specifics. But hopefully you guys see [759] the idea. Very quick and easy constant [762] contact where you show proactively that [765] you are doing work for them and they [767] don't necessarily always need to like [768] babysit you through it because that's [769] really important in retainers. It's also [771] important because if the client is the [772] one that's always driving the retainer, [774] okay, they usually try and run you at [776] 100% utilization. This is kind of a [778] nuanced point, but a lot of the time in [780] retainers, you end up making a ton more [782] money because the client just doesn't [783] utilize you 100%. They'll utilize you [785] like 90%. Well, what does that mean [786] realistically? That just means you made [788] an additional 10% of your entire revenue [791] with that client per unit time that you [793] spent on that client because they're [794] just not utilizing you 100% because [796] you're kind of autonomous. You kind of [797] direct and and drive your schedule. And [799] and it's just a quick and easy way to [800] make more money. I mean, you know, if [801] we're being real here, that's a big [802] chunk of what makes subscription [803] products so good. A lot of people don't [805] like remember to turn their subscription [807] product off or whatever and then like [808] the next month they just get build [809] again. I don't like it. You know, it's [811] not the best way to to drive value in [814] the world, but uh it's definitely like a [816] kind of a pragmatic look into how [818] businesses actually conceptualize making [820] money. And you know when you drive and [822] are autonomous and you don't require [823] handholding and you do the work [824] yourself, you get to start creating [826] systems and optimizing workflows on your [828] end without the customer or the client [830] interfering. You can usually end up a [831] lot more efficient and effective as a [833] result. Okay. All right. So that's [834] number one. Number two is strategically [836] overd deliver in areas that showcase [838] retainer potential. What do I mean by [839] this? I mean if there is an area of the [842] person's business that you know that [843] they struggle with, whether it's related [844] to the project you guys are doing, maybe [846] it's tangential, okay, overd deliver on [848] those. like actually do work that solves [850] problems that you noticed while doing [852] the first project without even asking. [854] It's better to beg for forgiveness than [857] it is to ask for permission. I don't [858] mean go in and like implement a system [860] on their actual business or anything [861] like that, but while you do your initial [863] project, say, "Also, I noticed X, Y, and [865] Z issue. I was wondering if you wanted [867] me to solve it. Whether or not you do, I [869] thought I'd put something together for [870] you to solve it proactively. So, if you [872] end up wanting to work with me later on [873] down the line, I can implement this for [875] you." If you have somebody on the team [876] that can, um, then that's cool, too. and [878] then give it to them. Give it to them [879] for free. Okay, this is like your your [881] advertising cost. The time that you [883] spend doing this now becomes your [885] acquisition cost. But notice how that's [886] not like uh it's not a dollar value [888] that's coming out of your account, you [889] know, it's it's time. Not to mention, [891] when you do this right, you end up being [893] able to command a significantly higher [894] price for retainer later on. So, you [896] don't actually end up out anything, I [897] guess, is what I'm trying to say. Next [898] up, instead of positioning yourself as a [900] builder like a lot of people do, okay? [903] Don't position yourself as a builder. [905] Position yourself as a consultant. Okay? [908] Position yourself as a strategist or [911] position yourself as a partner. These [914] are all way more powerful than builder. [916] A builder is just somebody that you hand [918] a project off to and say, "Hey, here's a [920] bunch of specs. I've already done all [921] the work and I'm looking to get this [922] finished as quickly and as cheaply as [924] possible. Do it." A strategist is [926] somebody that sits down with you and [928] says, "Hey, here's where we're at. [930] Here's where I think we can be. Here's [931] why I think that. And here's how I [933] believe we can bridge that gap [934] practically. Do you want me to do it? Do [935] you want me to find somebody to do it? [936] Is there somebody in your team that I [938] can give it to? This is significantly [940] higher up the value chain. Okay. You're [943] no longer a builder. Okay. You're no [945] longer the I don't know the the the [946] grunt. You're no longer the the hands. [949] You're also no longer a manager. What [952] you are is you are strategic. And this [956] is very very much closer to where the [958] business owner is. Wouldn't you rather [961] be um here as opposed to here? I know I [965] would. I want to minimize that perceived [966] value gap as much as possible because [968] the closer I am to their value, the more [970] I can position myself as their partner, [972] the easier it is for me to pitch, let's [974] say, a retainer re plus revenue share [976] later on down the line. I've literally [978] gotten equity in businesses as a result [980] of doing this approach. Um as much as [982] 25%. So, this isn't something that I'm [985] just talking about the theoretically. [987] This is like an actual day-to-day [988] step-by-step road mapap on how to do [990] this for small to mid-size businesses. [992] Okay. While you're fulfilling the [994] project, note a bunch of opportunities [995] for your retainer pitch. If you see [997] issues with their business that you [998] don't want to solve for them, just write [1000] them down. Make sure that you know what [1002] issues that business is going through [1004] when you end up making the retainer [1005] pitch, which we'll cover. And then as [1007] you're finishing the project, just [1008] document all the value you've created. [1010] Basically, just tabulate, hey, how much [1011] value am I providing? because you're [1013] going to want to be able to take that to [1014] them at the end when you do that [1015] retainer pitch later on. So, here's our [1017] little SOP again, okay? When you kick [1019] off the project, frame your updates in [1021] ROI terms. When you say, "Hey, I just [1023] did X, Y, and Z." Don't just say, "Hey, [1025] I did X, Y, and Z," but say, "Hey, I [1026] just did X, Y, and Z." So, we've now [1027] solved that $50,000 a month problem. [1029] Remind them constantly of your value [1031] when possible. Then, strategically overd [1033] deliver on things that you think are [1034] important. Ask consultative questions. [1036] Pitch yourself not as a builder, but as [1038] a strategist, as a partner, as somebody [1040] that's on their level. Document the [1042] value created. Identify additional [1043] opportunities. These are all essentially [1045] case points for your retainer pitch [1047] later on. Okay. Now, I want to talk [1049] about the strategic delivery process. [1051] So, if you think about it logically, [1053] when is the best time to make the [1055] retainer pitch? [1057] The best time to pitch somebody on a [1060] massive, massive value ad or a big deal [1063] or whatever is immediately after giving [1066] them everything that they paid for and [1067] then a little bit more because you want [1069] them to be as overjoyed with you as [1071] humanly possible when it comes time to [1073] make that big pitch. And so the way that [1076] I do things is I take advantage of [1077] reciprocity. It's this cognitive uh [1080] psychological bias humans have where [1081] when you give somebody something, they [1082] want to give you something back. When I [1084] deliver my project is when I will pitch [1086] my retainer because when I deliver my [1088] project and then I go above and beyond [1090] the expectations and make them very very [1092] happy, they are significantly more [1094] likely to want to say yes to you. This [1095] is how you get high conversion rates. [1097] Okay. So project delivery is your [1098] highest leverage moment for retainer [1101] conversion. Okay. So my recommendation [1103] is provide comprehensive documentation [1104] and training that hints at future [1106] possibilities. One big thing I always [1108] talk about in make money with make and [1110] maker school is when you do your [1111] deliveries always add like free wins or [1114] free scoped line items essentially. So [1116] don't just you know deliver the project [1117] deliver a blueprint or whatever um in [1119] your scope deliver like a make.com [1121] configuration plus setup deliver um [1124] Google doc textual SOP deliver loom [1127] video documentation on how to do the [1128] thing. So add a bunch of additional line [1130] items usually related to documentation. [1132] And when you do that documentation, [1134] during the documentation, talk about [1136] things like assuming we extend this [1138] system, assuming we take this system [1140] forward, this is what another solution [1141] might look like or this is what uh you [1143] know some potential add-ons to the [1145] system that you might want to get done [1146] would look like to make this thing even [1148] better. Okay? Then follow the 7030 rule. [1152] This is my personal litmus test or rule [1154] of thumb for how I do things. I will [1156] talk and celebrate 70% of the time. Then [1159] that other 30% of the time while I, you [1160] know, deliver the great news or [1161] whatever, then I say, "Listen, I think [1163] there's an opportunity here for us to [1165] make a little bit of money. I'll show [1165] you guys an actual email template in a [1168] second." So, this is my uh this is like [1170] an example of a delivery that I did for [1172] an actual client. U and in it, just to [1174] make a long story short, feel free to [1175] pause the video and read this if you [1176] want. This is an Upwork client to mine [1177] that started off as an extraordinarily [1179] low hourly rate initially and then we [1181] moved to fixed price and then uh we [1182] ended up actually on a retainer, a very [1184] long-term retainer. And I said, "Hey, [1186] name project is good to go. I had a lot [1187] of fun working on this." Then I linked a [1188] video. This is my Loom. Not only is this [1191] a video of me delivering the project, [1194] it's me documenting how the project [1196] works. And then if they took this took [1199] them, let's say 7 minutes to read [1201] through this. I made like 30% of my [1204] email about the opportunities that they [1206] had. And the opportunities that they had [1208] are, hey, I'd also like to discuss that [1210] retainer. I seen a reason why I can't [1211] add 5% or more onto your margins with [1213] just a few changes. This is how you [1214] pitch yourself as a consultant and a [1216] strategist and as somebody on their [1218] level. You talk about the things that [1219] they care about which if we're frank are [1221] money. Okay? We don't care about [1222] relative metrics like efficiency. We [1224] don't care about relative metrics like [1225] number of new leads. What we care about [1227] is how much money can I make you over [1228] the course of the next month assuming we [1230] work together. And in my case, I said 5% [1232] or more. I believe that this was a [1233] reasonable assumption at the time and it [1235] ended up working out a little bit better [1236] than 5% although it did take uh longer [1238] than I initially anticipated. And then I [1240] said, "Hey, here's more or less what I [1241] want to do. I want to build a dashboard. [1243] I want to create a streamlined work [1244] management system. I want to automate [1245] discounts and assignments and so on and [1247] so forth. And then here's my calendar if [1248] you're interested. So I actually dropped [1249] all this stuff in the delivery email. He [1251] ended up booking using my calendar link [1252] and then voila, before we knew it, we [1254] were on a call where I obviously pitched [1256] him deeper on the specific things I [1257] wanted to build. He said yes and then [1258] boom. When you deliver, okay, use video [1260] documentation. This increases your [1261] perceived value and it highlights [1262] scaling potential. It's also a lot more [1264] personable than, you know, just sending [1265] a bunch of text or something like that. [1267] And then while you are doing the project [1269] and delivering the project, while you're [1270] jumping on that call, just plant seeds [1272] of FOMO. That stands for fear of missing [1274] out. Talk about other clients that are [1275] on retainers. Talk about how retainer is [1277] the primary way that you do work and so [1278] on and so forth. Okay. So if we had an [1280] SOP here again, it would be to complete [1282] the initial project as you complete it, [1284] create comprehensive docs, then record [1286] training videos. And then when you are [1287] on the call, you don't have to do a call [1290] in order to deliver the project. I just [1291] do it through email. But after when you [1292] are on that call, okay, spend a lot of [1294] your time celebrating wins, but then [1296] introduce some new opportunities using [1297] that 7030 approach. Okay. Finally, it [1300] comes time to actually pitch the [1301] retainer itself. How do I recommend [1303] doing this? Well, I recommend timing [1305] your retainer pitch so it's immediately [1307] after project delivery. Don't wait a [1309] month or a week or a year. Okay? When [1312] you give somebody something valuable and [1314] then you overd deliver on that and give [1316] them even more, they will be in the [1317] sense of reciprocity where they are [1319] significantly more likely to give you [1320] something that you ask for. Take [1322] advantage of that by timing your [1323] retainer immediately after the project [1325] delivery. When you send the calendar, [1327] like I talked about before, reduce the [1329] total number of bookable days that they [1330] can't book after a week or something [1331] like that. Try and get them in as [1332] quickly as possible. Okay. Now, when [1334] you're on the call, okay, spend most of [1336] it celebrating the wins like I talked [1337] about, but then start talking about some [1339] untapped opportunities and some ROI [1341] expansion. So, one of the main reasons I [1343] wanted to get you on this call today was [1344] because while I was doing X, Y, and Z [1346] project, I noticed some other stuff. And [1348] I thought that I might be able to solve [1350] that then make you a ton of money. XYZ [1353] margins, minimizing your expenses, XYZ [1356] top of funnel, whatever the specific [1358] thing that they're suffering from is. I [1360] thought that I could offer a ton of [1361] value and I just wanted to see if you [1362] were open to it. And I want you to know [1364] that even if you're not open to it, I'm [1366] just going to give all the stuff to you [1367] anyway so that you have everything that [1368] you need. So whether you choose to work [1370] with me or you want to hand this off to [1371] your internal team, you have everything [1372] you need because I've really enjoyed [1373] working with you. Okay? This is the vibe [1375] that you want to give people while [1376] you're on that call with them. This is [1378] also, even if they choose not to work [1379] with you on this project, going to [1380] significantly improve the probability [1382] they're going to want to work with you [1383] on another one. Okay? Then another thing [1386] you can do is you can position your [1387] retainer as a discount compared to [1389] individual project pricing. So, what I [1390] see a lot of people do, okay, is let's [1393] say, so there's kind of two examples of [1395] this, just like hourly. We'll cover [1397] hourly. Let's say you're working with a [1399] client and you're at $120 an hour. Now, [1402] on average, they work with you for 10 [1403] hours or let's say 20 hours a [1406] month. So, that means that, you know, [1408] usually you end up making $2,400 a month [1411] off that client. Okay. The thing is, [1413] this is variable. This is up and down. [1415] Some months you'll get the full 20, [1417] other ones you'll get less. Sometimes [1419] you'll be over capacity, sometimes [1420] you'll be under. What you do is you [1422] position it as a benefit. You say, [1424] "Listen, instead of you paying me $120 [1426] an hour for 20 hours a month, because [1428] that's how much we've been averaging [1429] over the course of the last few months, [1431] I'm happy to lock that in and give you a [1432] 20% discount approximately. Instead of [1435] paying me $120, why don't you just pay [1436] me 100 bucks an hour, okay? And then [1438] we'll lock in the 20 hours a month. This [1440] will give me stability. It'll give you a [1443] discount. And for both of us, it's going [1444] to be a win-win. you'll save [1446] $400 and then I'll know how to pre-plan [1450] my schedule, um, juggle you alongside my [1452] other clients and so on and so forth. [1454] So, that's what hourly looks like. If [1455] you're doing some sort of like fixedric [1457] project basis, which is usually what I [1459] what I [1460] recommend, just pitch them a certain [1463] amount for the project that you had in [1465] mind, and make this pretty big. and then [1468] say, "Well, how about instead of this, I [1470] could work with you on a retainer for, I [1473] don't know, maybe this is [1475] $10,000. Maybe uh, you know, for onetime [1478] project. This one is $3,500 per month." [1481] Okay? What you say is, "In addition to [1484] all of this money, I'm not just going to [1485] do that project for you. I'm also going [1487] to do a weekly strategy call. I'm also [1490] going to do unlimited maintenance on all [1492] of your past projects, including that [1494] last one. I'm also going to do 12 till [1497] 2:00 p.m. PT. I don't know, Slack [1500] availability. So, you'll be able to [1502] reach me anytime you want. I'll also do [1504] one monthly training session. Notice how [1507] these are not things that take a [1509] standard number of your hours. Even the [1511] 12 to 2 p.m. Slack availability is not [1513] time you will actually spend fully [1514] utilized, but it delivers a big [1516] perceived value upfront to the client. [1518] Okay, these are all ways that you can [1520] significantly improve the probability of [1521] somebody wanting to transition between [1522] some very big scary number to some sort [1525] of maintainable monthly thing because [1527] the monthly thing also includes all [1528] these benefits. The idea is make the [1530] retainer like a no-brainer. Okay, [1531] wouldn't you rather spend 100 bucks an [1533] hour versus 120 bucks an hour? [1534] Obviously. Yeah. So, somebody gives you [1536] that option, I'm going be like, "Check, [1537] let's do it." Absolutely. That's the [1539] vibe that you want to give your clients [1540] as well. Okay. Use price anchoring and [1542] no risk trial periods to overcome [1544] objections. Say stuff like, "Let's start [1548] with one [1550] month. There's no lock in. There's no [1554] nothing. I just want to show you how [1556] much value I can provide to you in 30 [1558] calendar days. And if at the end of the [1560] 30 calendar days, you don't want to work [1561] with me anymore. Then all good. I'm [1564] going to give you everything that you [1565] need to either take that in house or [1567] hand that off to somebody else. And I'm [1568] going to make sure that there's zero [1569] interruptions to your business. But I [1571] like, you know, I'm really putting all [1572] my cards on the table here. I think I [1574] can offer a lot of value to you, which [1576] is why I'm willing to do [1577] this. Then finally, another little tip [1580] you can do here, this is more of a [1581] tactical tip, is when you do your [1584] retainer, don't just offer one price [1587] like I talked about back there. Don't [1588] just offer 2K for 20 hours. Have [1592] multiple tiers. Say we could do 1K for 8 [1596] hours. We could do 4K for 50 hours. [1602] Obviously, make sure that this is not a [1603] linear step up because you want there to [1605] be incentives. The more money that [1607] people pay you, the bigger of a discount [1609] that they get. You know what is 4,000 [1611] divided by 50? This is 80 bucks an [1613] hour. This is 100 bucks an hour and this [1617] is 125 bucks an hour, I believe. So, [1621] obviously, you know, this is the cheap [1622] one if you think about it. It's an [1624] expensive one, but it's also the cheap [1625] one. But maybe this is the one that you [1626] want. when you give them multiple [1627] options, then you get to anchor and you [1629] get to frame the one that you really [1630] want as maybe like a the good [1631] alternative for where they're at. So, [1633] these are all tactical tips, guys, but I [1634] just wanted everybody here to be on the [1636] same page. Retainers are where you make [1637] a ton of money with AI and automation, [1638] both for the utilization thing that I [1640] talked about earlier, also because [1641] there's significantly more leverage when [1642] you work with a client for a long time. [1644] Also, because when you install one [1645] system in their business that performs [1646] repeatedly every month, that's time that [1649] you are not spending working that is [1650] still spent delivering value for the [1652] client, which is ultimately going to [1653] stack up and justify. You also get more [1655] nuanced problems like I talked about. [1657] It's all positives. Okay, here's the [1659] SOP. Schedule your strategy call. Review [1661] the results. Present the untapped [1662] opportunities. Outline a road map. Now, [1664] I do 90-day road maps. I actually have [1666] an example of a 90-day road map in make [1670] moneywithmake.com or maker school, but I [1672] believe you have to wait till the fourth [1674] month, which is, you know, four months [1678] in. I'll unlock a resource which walks [1679] you through literally a step-by-step [1680] example of a proposal that I pitch a [1683] 90-day road map with. Then present some [1685] tier retainer options. Position as a [1687] discount versus individual projects. [1688] Offer some sort of no- risk trial period [1690] or maybe like a like a one month you [1692] guys can uh get off at the end of the [1693] month, no problem. Off-ramp them, then [1695] ultimately secure your retainer [1696] agreement the same way that you secure [1697] any other acquired new project. [1699] Hopefully, I've provided a bunch of [1700] context to you guys as to why retainers [1702] are the way to go with AI and automation [1704] and a practical roadmap that you guys [1705] can implement yourselves to turn this [1707] plethora of new acquisition [1709] opportunities into actual retained deals [1712] that deliver that MR that I'm talking [1713] about. I think both from a revenue [1715] stability standpoint, also from like a [1716] partnership standpoint, also from like [1718] an interest standpoint, and also from [1720] like a potential standpoint, especially [1721] when you get into like recurring [1723] percentage revenue share deals, which is [1725] sort of like the the final tier of, you [1727] know, the big final boss of AI and [1729] automation partnerships, I think that [1731] retainers just the way to go. And if [1733] you're not currently utilizing [1734] retainers, you're leaving most of your [1735] money on the table. If you guys like [1736] this sort of stuff, you like this [1737] tactical and strategic talk about how to [1739] take your business from 0 to one and [1741] then scale it from 1 to 100, you'll [1742] definitely like Maker School, my [1744] introductory day-by-day accountability [1745] roadmap, then make moneywithmake.com, my [1747] higher level community capped at 500, [1749] which focuses specifically on taking a [1751] winning product or service, which you [1753] already have that's making you money, [1754] and then scaling that through AI and [1756] automation. Really appreciate [1758] everybody's love. Thank you very much [1759] for getting me to over 80,000 [1761] subscribers now. And I'm looking forward [1762] to seeing you all in tomorrow's video. [1763] Have a lovely rest of the day. Cheers.

Video: https://www.youtube.com/watch?v=On_DVAjnkRY
Title: AI automation is just like any other business
[0] A lot of people see AI automation as [1] this hype train and big bubble. And I [3] want to push back against that. AI [4] automation is just like any other [5] business. Don't get caught up in the [7] hype. The skills that make you a [8] successful automation business owner are [10] the exact same skills that make you a [12] successful plumber. We start with lead [13] genen. We can do cold email, paperclick [15] ads, referrals. These are all ways of [17] getting people interested in your [18] business and shuttle them to some sort [20] of conversion. Usually, this is a sales [22] call. You'll send a proposal, also known [24] as a quote. After that point, the person [27] becomes a client. When they become a [28] client, you then fulfill. And ideally, [30] at the very end of this, there would be [31] some sort of retention mechanism that [33] gets them back in through some other [34] call and then just repeat. And this is [36] really what makes you money. What you'll [37] notice is this doesn't just apply to AI [39] automation businesses. That exact funnel [40] that I drew literally applies to like [42] 90% of B2B businesses all over the [44] world. The only difference between an AI [46] automation business and the vast [48] majority of other businesses is this [49] section right here, fulfillment.

Video: https://www.youtube.com/watch?v=_0BwBkaxO4c
Title: 6 Skills That Won't Be Replaced By AI Until 2030+
[0] I think a lot of people are rightfully [1] worried about how to futureproof [2] themselves against developments in AI [4] technology. So, in this video, I wanted [5] to cover six skills that I don't believe [7] are going to be replaced by AI by 2030. [9] And I'm saying 2030 here because I do [11] think that eventually models are just [13] going to outperform humans at most [14] economically valuable tasks. I don't [16] really see any alternative where that [18] isn't the case. So, what I'm really [19] concerned about is just the next few [21] years. How do we get to that point while [22] still remaining economically viable? And [24] the markets are shifting a lot right now [26] and they're going to continue to shift. [27] So, I think understanding all this stuff [28] is very important. The first major skill [30] that I would focus on if I were starting [31] from scratch and I had not made all of [33] this money using AI and automation would [35] be agency under uncertainty. Now it's [37] funny because agent is a term that [39] people use to describe AI AI systems [41] now. But agency is basically your [43] ability to act. Okay? So cultivating [47] this skill then is cultivating your [48] ability to act void of some external [51] trigger or stimulus. If you're the sort [53] of person that can act and if you can do [54] it consistently without being 100% [57] certain about what it is that you're [58] doing paying off, maybe being 70% [60] certain or something, you will succeed. [62] And there are a couple of reasons for [64] this. The main one is that the value of [66] knowledge in the AI era is decreasing. [70] Okay? And the complexity of things in [73] general is increasing. So if this is [76] knowledge and this is [79] complexity, well the natural conclusion [82] to this is that if you waited to be 100% [84] certain about increasingly complex [86] systems and that knowledge itself grew [88] less valuable over time, waiting until [90] that point is just a losers game. So the [92] winners instead they get to a point [93] where they're reasonably confident that [95] what they're going to do is going to [96] work and then they just start acting. [98] Okay? And they act consistently and they [100] act often and sometimes they act [102] recklessly for long periods of time. So [104] this is an AI generated image of [106] supposedly some pretty ripped looking [107] dude doing that. Now if you are a person [110] with high agency, you're the sort of [112] person that takes initiative without [113] waiting for permission or perfect [114] conditions. Okay? If you are the sort of [116] person with high agency, you believe [117] that hard problems are solvable through [119] persistence and effort whether or not [121] you know the answer now. You believe [123] that given enough time and effort, you [125] can find the answer, which is why you're [126] willing to move forward. Okay? Instead [128] of avoiding opportunities that other [130] people see as challenges, you move [132] forward with them and relentlessly [134] execute. Okay? You create your own [136] opportunities essentially instead of [137] waiting for them to appear. Now, when I [139] say uncertainty here, I mean, I said 70% [141] above and here, this this number is [144] actually going to go down, you know, the [145] faster that these technologies get at [147] being able to do things. But if you are [148] capable of making confident decisions [150] with lower than 100% certainty, if you [152] break out of the paradigm that you know [153] society has has taught us where you need [154] to put your hand up before you speak or [156] before you use the washroom, you need to [158] ask for permission or something like [159] that, um you will be a lot more [160] successful in a future environment that [162] rewards speed over perfection. Okay, if [165] we're talking technically speaking, you [167] know, I mean, I talk a lot about AI and [168] automation, right, on this channel. [169] That's kind of the main point. uh if [170] we're talking technically speaking, this [172] means creating architectures and systems [174] that are flexible and that accommodate [176] unexpected changes and improvements in [178] new models. If we're talking, you know, [180] in terms of business, instead of you [182] building out the whole solution, you [183] build out an extraordinarily minimum [185] viable solution and then you just test [186] it with actual market feedback. And [188] essentially, your whole road map is just [190] turning ambiguity into some sort of [192] competitive advantage through decisive [194] action. And if other people are afraid [195] to operate in your space because they [197] don't really know if it's going to work [198] and if you're the sort of person that [199] can just say, "Oh, well that's good [200] evidence that I should probably try that [201] space." You're the sort of person that's [203] going to succeed over the course of the [204] next 5, 10, maybe 15 years. All [206] right. Another big thing that I think is [208] pretty obvious is that interpersonal [210] coordination, empathy, um I'll also say [213] leadership. These skills are going to [215] gain a premium because artificial [217] intelligence and models are soon going [218] to dictate a lot of customer [220] interactions and a lot of business [221] management. So people just like when you [224] know we started automating the [225] manufacturing of bowls and fine china [227] and stuff like that. Just like people [229] still value arteasonal handrduced goods [232] because they were made by a person [233] people are going to value and prefer [236] interpersonal coordination with human [238] beings. Okay, as opposed to robots. And [241] so if you are the sort of person that is [244] compelling to be around, if you're [245] empathetic, if you're capable of [247] demonstrating an understanding of of [248] what a person is going through and then [250] authentically, you know, helping them do [252] that, maybe with some leadership skills, [253] some empathy skills, whatnot, your [255] ability to sell and persist in this [257] economy um is going to be a lot better [259] than if you relied on, let's say, [260] technical skills. Because again, the [262] value of knowledge is decreasing over [264] time. That is basically what all of this [265] is is saying. The knowledge economy is [267] not really going to be for us, right? [268] And it's for models that are just going [269] to learn smarter than us. So as a [271] result, big things that are going to [273] gain a premium are human to human [274] selling. So you know, your ability to [276] sell is something that is going to [278] increase in value over time. Okay? Your [280] ability to read between the lines, not [282] necessarily just what you see in a text [284] prompt, right? Your ability to take [285] advantage of things like, I don't know, [287] facial expressions, body language, stuff [289] like that. All of this stuff is going to [290] gain a premium. Okay? It's your ability [292] to build trust through authenticity. [294] It's actually your ability not to be [295] perfect. It's your ability to have [296] flaws, but then own those flaws. Okay, [299] active listening, emotional [300] intelligence. These are things that AI [302] will, I'm sure, eventually solve, but [303] probably not in the next uh next few [305] years. And these are things that can [306] give you a competitive advantage. [307] Ultimately, a big thing that people are [309] going to like is your ability to convert [311] complex technical solutions into um at [313] least what people think of as being [315] human- ccentric business value. So if [317] you are selling a system and 99.999% of [320] that whole company is AI automated at [322] this point. There are models that deal [324] with customers. They generate ads for [326] you. They reach out to people on your [327] behalf and so on and so forth. Finding a [329] way to weave in some human touch is the [331] way that you persist in an environment [333] where everybody else is fully automating [335] everything. Okay. So finding a way to [337] weave in actual people. Another big [339] skill is obviously learning how to [341] learn. What did I mention before? I [342] mentioned again and I'm going to keep on [344] saying this because I really want to [345] drive this point. the value of knowledge [347] is decreasing and the complexity of [348] things in general is going up. Okay. Now [351] because of that what is important is not [353] necessarily your [355] knowledge. Okay. It is instead your [358] ability to learn new [361] things with the value of knowledge [364] decreasing the complexity of systems [365] going up and then the ability of models [367] to do things for us like I don't know [368] code whole SAS apps overnight. The [370] crystallized knowledge is not as [372] important as your ability to quickly get [373] up to speed and maybe get 70 to 80% [375] certainty on anything. So the ability to [377] learn, okay, this is the thing that is [380] gaining a premium along with everything [382] else that I've mentioned so far. If you [384] can structure your life in such a way [386] where you have periods of uninterrupted [388] focus, where you could sit down and [390] actually dedicate a certain amount of [392] time to learning a topic, and if you [393] could do this employing the best [395] learning methods and whatnot, if you can [397] get up to speed with new changing, [399] rapidly dynamic business landscape, you [401] will win. It's not about what you know. [403] crystallized fields like medicine or a [405] super complex engineering and whatnot. [407] These are a lot less valuable than just [409] your ability to get okay enough to build [411] things with new and rapidly developed [413] fields. I mean obviously we have AI [415] available to us now. The people that are [417] doing exactly what I'm talking about [418] here, they are using AI to augment their [422] learning. They are talking to chat GPT. [425] They are communicating with Claude and [427] obviously backfilling references where [428] necessary. AI is extraordinarily [430] powerful at creating personalized [432] learning paths that adapt to your [433] specific goals. Um, I think I probably [435] learn a time and a half to two to maybe [437] three times faster when I use these [438] models in order to learn a concept than [440] when I tried to do it in the old way. [441] And if you can combine basically these [444] two skills, focus with the ability to um [448] use AI to learn, you know, your ability [451] to prompt and whatnot, which I'll cover [452] in a second. This is really the the main [454] quality that will make you successful [456] when you have business spaces that are [457] literally appearing and then whole [459] industries disappear in the span of [460] weeks. That's the sort of environment [462] that we're all wandering into. Okay. So, [464] you know, have AI help you break complex [466] skills into manageable components. Have [467] a AI feedback loops where you have [469] quizzes at the end of every learning [471] module. Basically, treat AI as like a [474] 16th century tutor for the nobility. [476] Okay, this is your chance to get that [478] level of competitive advantage that [479] other people lack. Okay, so that's [481] that's big skill number three. Big skill [484] number four is obviously while we're [485] developing these tools and these tools [487] are more complicated than the most [488] complicated nuclear bomb was just a few [490] years ago. Your ability to use these [491] tools is what's going to set you apart [493] from other people. It's not necessarily [494] your crystallized knowledge. It's your [496] ability to use these tools to synthesize [498] and and and take all that knowledge and [499] do something with it. Okay? So, people [501] that know how to use AI are going to [503] win. People that know how to chain [504] multiple AI tools together with maybe a [506] drag and drop no code builder like I [507] talk about make.com and these sorts of [509] tools, they're going to win because [510] they're going to be able to build things [511] out a lot faster. People that are able [514] to extract maximum value while [516] minimizing the cost and controlling the [517] output quality of a big model pipeline, [520] these people are going to win. And then [521] people that you know have the ability to [523] develop new prompting approaches are [525] essentially going to build competitive [526] edges in doing so. Like if you can build [528] a really cool prompt pipeline if you [530] know enough about prompting and AI that [532] you can legitimately just put together a [534] prompt. You could build a business in an [536] afternoon. There are entire businesses [538] that are basically nothing more than [539] prompt rappers around, you know, very [541] sophisticated models like chatbt and [542] whatnot nowadays. So learn AI, use AI [545] every single day. It's the people that [547] are AI native and AI fluent that combine [549] that with some old school techniques [550] like focus, consistency, high agency, [552] and execution. These are the people that [554] are going to essentially be crowned in [556] the future. Some quick and easy ways to [558] do everything that I've talked about is [560] another skill called systems thinking. [562] Now, systems thinking is basically your [564] ability to run through like a a list of [566] mental models every time you're faced [568] with a problem. Again, the value of [570] knowledge is decreasing. And so, it's [572] not necessarily do you know everything. [574] Do you know all of the ins and outs of a [575] particular problem? Do you understand [577] that one problem really well? It's not [579] about having crystallized knowledge that [581] lets you solve that one thing. It's [583] about having generalized knowledge that [585] allows you to solve more or less 80% of [587] every problem very quickly. And the best [589] way you do this is with systems. Now, [591] there are a bunch of very simple [593] examples of systems thinking. Um, one, [595] for instance, is called first principles [596] thinking. This is just a heruristic or a [598] strategy where you will grab a problem [601] and you will just try and break it down [602] by first principles. You'll ask [603] yourself, hey, if I knew nothing about [605] this problem, if all I had was my mind, [607] but you removed all of like the specific [609] information about the the industry and [611] the field and how to do business and [612] everything that I've learned my entire [613] life. Basically, if I was just like a [615] fresh mind and I was tackled with this, [617] where would I actually start? First [619] principles thinking is at the core of [621] why so many major businesses exist today [624] because the entire strategic advantage [626] of those businesses like SpaceX for [627] instance was you know instead of looking [629] at things through a conventional lens [631] you know uh certain rocket components [633] cost this much uh you know the current [635] going rate for all of the stuff is that [636] much you know first principles thinking [637] breaks it down well what are the [639] materials that go into a rocket h if I [641] were to try and manufacture x y and z [643] myself and maybe change the design [645] what's the cheapest and most efficient [646] way I could probably solve this if I [647] knew nothing about the industry I guess [649] the point I'm making is it's not top [651] down, which is what a lot of people do, [652] okay? Instead, it's it's bottom up. You [654] start with the facts. You start with [656] basically no assumptions and you try and [657] arrive at some sort of solution. So, [659] first principles thinking is an example [661] of a model. Another sort of system is [664] ecosystem based thinking. So, thinking [666] of everything as an ecosystem or as an [668] environment, right? Like the economy is [670] actually an ecosystem. It's uh an [672] ecosystem that is sensitive to some [673] changes but very resilient to certain [675] other changes. Okay? These are all [677] different types of mental models. If you [678] guys want a really good source for this [680] stuff, check out um Farnum Street that [683] now has a series of books called The [684] Great Mental Models where they basically [686] run you through a giant list of [688] different ways to become better decision [689] makers. Okay, I'm not going to pitch [691] them. I'm not affiliated with them at [692] all, but these guys have helped me a lot [693] in my own thinking. And I basically run [695] every problem through a variety of [697] different systems established by these [699] people and also some of the greater [700] thinkers um throughout history. Okay. [703] All right. And the last big thing that I [704] think is going to be probably the most [706] important skill moving forward is your [709] ability to be authentic and in doing so [711] build an audience. So this is sort of [713] meta because it's what I'm doing right [714] now. Um and it's one of the the key [716] reasons why I am doing what I'm doing [718] because I see a ton of potential moving [719] forward. Now if you think about it over [722] the course of the last few years, what [723] have we seen? We've seen AI models get [725] to the point where they are capable of [726] generating images like this, cartoon [729] strips, highquality, you know, things of [731] human faces. We're seeing models now [732] come up with the ability to joke and to [734] elicit emotional reactions from people [736] and and write pros and whatnot. [738] Basically, what we're seeing is AI [740] models are soon going to be able to make [744] really highquality [745] content. And it's already happening [747] right now as we speak, but it's going to [749] continue happening more and more and [750] more over the course of the next few [752] years. What does this mean? Right now, [753] the ratio of human generated content to [756] AI generated content on most platforms [759] is something like, you know, 99% to [761] maybe 1%. This is going to flip at some [764] point in the next few years and we're [766] going to be faced with basically a [768] synthetic content boom where [771] 99.999% of all of the content that most [773] people see is going to be AI generated. [775] Okay? And then [777] 0.00001% of the content is going to be [779] human generated. Now because of that [781] massive divide there's going to be [784] massive massive supply of AI generated [786] content. Human generated content is [787] going to gain a premium but the value of [790] the knowledge of the human generated [791] content is not going to matter as much [793] as just the ability of an audience to [794] build a connection with a person. Okay? [796] And that's where authenticity comes in [798] and that's where these interpersonal [799] skills that I was talking about come in [801] cuz knowledge is not going to matter. My [803] ability to explain something to you is [805] not going to matter. As crappy as it is [807] for me to say, it's a skill I spend a [808] lot of time building. But at the end of [809] the day, it is not anywhere near as uh [812] as powerful as an AI model will be in [814] the next couple years that's tuned to [816] your specific preferences, tuned to your [818] specific reading level, knows exactly [819] where you're at, and so on and so forth. [821] So, where does the value of connection [823] come in? It comes in in your [824] authenticity. It comes in in your [826] ability to relate to people. And it [827] comes in, to be honest, in your ability [829] to just be yourself, a flawed human [831] being. As we lose our economic value, [833] the other values of humanity start to [835] crop up. And so that's things like [836] authenticity, connection, empathy, and [838] coordination. So what does that mean for [841] people that might be watching this? [842] Well, my recommendation is if you guys [844] wanted to build an audience. There is [845] basically no better time than today. The [846] best time to plant a tree was 20 years [848] ago. If you're going to do this, create [850] valuable content that demonstrates your [851] unique expertise. That's important for [853] sure. But what's more important is do [856] this authentically. Okay? How do you do [858] this authentically? Well, one of the [859] quickest and easiest ways to do so is [861] when you're building an audience, build [862] two-way relationships rather than [864] broadcasting one directionally like a [865] lot of people have been doing up until [867] now. So, for instance, this is what I'm [868] doing with my daily updates channel. [870] This is a simple channel where I publish [871] every day. And I basically just answer [873] questions directly from my community, my [875] YouTube subscribers, and so on and so [877] forth. I do this because I'm developing [878] two-way communication, not one-way [880] communication. And two-way communication [882] is what builds perceived authenticity. [884] It's what builds credibility. And I show [886] people basically who I am. If you look [888] at all of the major channels right now, [890] okay, I'm not the one that invented [891] this. I wish I was, but I'm not. If you [893] look at all of the major channels right [894] now, all the people that are blowing up [895] on socials and stuff like that, a lot of [897] them have approaches just like this. [899] They are doing some sort of authentic [901] audience building. They are doing the [903] the old Gary Vee approach where they [905] respond to their ex comments and and [906] replies for literally three or four [908] years. You know, they're doing the Alex [909] Formoszi approach right now where every [911] single day he just does one question and [912] answer on school. Essentially, the point [914] I'm making at is they're making [915] themselves a fixture in people's lives [916] in the same way that you would with a [918] relationship that you have in front of [920] you, okay? Where you talk with them [921] often, you build two-way relationships, [923] you show them that you're a human. [924] Again, as the um economic the knowledge [926] value of humanity goes down, okay, other [931] values are going to come up and the [932] biggest value that I see in the near [934] term is authenticity. Apparently, my [936] spelling value has also gone down quite [938] a bit. Okay, so share your successes. [941] Also, share your failures. People don't [943] like that perfectly uh pruned thing [945] anymore because AI is going to be able [947] to generate tons of that. Focus on long- [949] form content. Okay? Long form content [951] allows people a better barometer by [953] which to see how much you align your [955] words, actions, and values over time. [956] Okay? It's one thing if people see you [958] for 5 seconds on an Instagram reel. It's [960] another thing if people see you for [961] several hours watching a video like [962] this, for instance. Focus on [964] relationships that are going to survive [966] technological disruption. Okay? And [968] then, you know, create unique [969] perspectives that AI can't replicate or [971] mimic realistically well. And on top of [972] perspectives, also create like content [974] formats. Like what's one of the reasons [976] why I'm doing these whiteboard videos [977] that I've been doing recently? Well, [979] one, I think it's an interesting and fun [980] way to share knowledge. Two, it's like [981] low production value, which allows me to [983] poop out a lot of these to be honest [984] without much additional work. But three, [986] it's not something that a is really [987] going to be able to replicate for quite [988] a while. There's a lot of like minor [989] nuance here in the way that I draw [990] things and move the screen around and I [992] I show you guys, you know, various [993] concepts and so on and so forth. So, in [996] a nutshell, these are six skills that [997] won't be replaced by AI in 2030. They [999] are what I am focusing on and what a lot [1001] of other people are focusing on. I hope [1002] you guys appreciated this shorter sort [1004] of video. And if you guys have any [1005] questions about what the future might [1006] look like for you, me, or anybody else [1008] watching, just drop a comment down [1009] below. Thanks so much. See you all in [1011] the next video. by

Video: https://www.youtube.com/watch?v=RlnjZKMsXHI
Title: Why AI Agencies Are The New SMMA (Crazy Opportunity)
[0] Most of us are probably familiar with [1] the term social media marketing agency [3] or SMMA because everybody likes their [4] four-letter acronyms. This is a business [6] model started back in the early to [8] mid2010s where essentially a bunch of [10] business owners had no idea how to [11] incorporate social media into their [12] marketing mix. And so young whippers [14] snappers like myself put on our ball [16] caps and our boots. We went out door [18] knockocking and cold calling and we sold [20] these people on the idea that we could [22] do it for them because we were digital [24] natives, because we grew up with this [25] technology and because there was a [27] massive opportunity right around the [28] corner. So, as I'm sure you guys could [30] imagine, a lot of people made a ton of [31] money. And everything that I've said so [33] far, hopefully you guys could see, is [35] currently paralleling what is going on [37] right now with AI, too. And so, the [40] thesis of my video, basically, what I'm [41] going to be talking about is that AI [42] agencies are the new social media [44] marketing agencies. I'm going to [45] contrast them. I'm going to talk about [46] why I think AI agencies are actually [48] much better than social media marketing [49] agencies. But, I'm also going to do a [51] couple other things on top of me talking [52] about the benefits and how much money [53] you could make with this industry. I'm [55] also going to talk about some of the [56] cons that I'm seeing, okay? some of the [58] negatives and hopefully I'm going to [61] dispel some of the frequently asked [62] questions that I see when people enter [64] my communities and my products and so on [66] and so forth looking to make bank in [68] this gold rush. So the very first thing [69] I want to talk before I get into [70] anything else is that this is a very [72] simple business model. I know you're [73] thinking no it's not. It's artificial [75] intelligence. There's no way it can be [76] simple. But it is. You're only about a [78] week or two away from realistically [80] being able to make a lot of money in [81] this niche. You don't need a lot of [83] concrete crystallized knowledge. But [85] just because something is simple does [86] not mean that it's easy. In fact, I [88] would go as far as to say as the [90] simplicity of a business model, the [91] simpler that it is, the harder it tends [93] to be as a result. And so if you come [95] into a business model like this or even [97] SMMA or website design or or whatever [99] agency model that you are looking at and [101] you think that it's going to be easy [102] because it's simple, you're dead wrong. [103] It's probably going to be a lot more [105] work than you're comfortable with. So [106] right off the bat, just dispel yourself [108] with the notion that simple is easy and [109] that this business model qualifies [111] because it unfortunately does not. First [112] thing I want to do is I just want to [113] compare social media marketing agencies [115] to the AI automation agencies. We'll [118] throw around some acronyms in a moment, [119] but um essentially hopefully it's clear [122] that on the left hand side this is the [124] SMAS today. It's a very competitive [126] niche. There are a lot of people and not [128] a lot of money going around. And on the [130] right hand side here we have AIAS or [132] AAAS or I don't know AIAS or ABCDS. No, [137] I'm just kidding. There are a lot of [138] acronyms here. Basically, these all come [140] out as agency model that sells AI and [143] automation services to mostly SMB, small [146] to mid-size businesses. Okay? Now, if [148] you contrast that with the left, which [149] is all crowded and there's like no room [151] for anything, on the right, you just [152] have these giant bags of money sharpied [154] with the the term AI on them floating [156] around in the water and there are very [158] few people here. This is basically your [159] blue ocean. Okay, this over here, this [162] SMMA model is sort of your red ocean. [164] So, if you're going to start a business [165] today and you were looking for the one [167] with the lowest barrier to entry, SMMAS [168] and AA automation agencies, they have [170] very similar levels of barrier to entry [171] to be honest with you, but the ones on [173] the left, the SMAS are just way, way [175] more competitive right now. And you [176] know, there are a couple other things to [178] get into. So, number one, the same [180] explosion patterns that we're seeing [181] from SMMA back in 2014 2015, they're [184] happening right now with AI, although I [185] think the slope of the curve is a lot [187] higher. So, this is the [188] SMMA. This is sort of like the A I A A. [193] Okay. The second is that the customer [195] lifetime value of people that are [197] purchasing AI projects tend to just be a [198] lot bigger than the customer lifetime [200] value that you could make out of, you [201] know, a social media marketing agency [203] package. The comparative value is a lot [205] lower for social media marketing because [207] people sort of understand how Facebook [208] works now. It's been around for long [209] enough. Social media platforms have been [211] around for long enough. People get the [212] whole SMMA model. But AI as a business [215] model, there's still a lot of perceived [217] hype. And so, and I mean this in the [219] best way possible, you can take [220] advantage of that perceived hype in [222] order to sell projects for a lot more. [224] People are just very excited about this. [225] And I understand why it's a [226] transformative technology, right? So, [228] you can actually just sell upfront like [230] a one-time project or recurring for [231] substantially more. I've seen people [233] sell projects over $200,000. I haven't [235] sold a project that large on a one-off [237] for AI automation, but I've seen that [239] done before. And on average, you could [240] sell things between 15 to $50,000 if [242] we're talking CLB, so customer lifetime [244] value for a client. Another main point [245] I'm going to make is that SMMA is huge [247] because every business needs a Facebook [248] page, right? But if you think about like [250] the businesses that could actually [251] capitalize on those Facebook pages, it's [253] actually very few. Like in reality, a [255] lot of people thought that they could [256] make Facebook pages and make a ton of [257] money with them or something, you know, [259] using the social media marketing agency [260] to help set it up and stuff. But I mean, [262] how many HVAC companies actually make a [264] ton of money through Facebook? Very few. [266] How many, you know, flower shops down [268] the street actually make a lot of money [269] with Facebook? Very few. The point I'm [271] making is that this was a specific tool [274] for marketing, but AI is a lot more [276] foundational. It's not just a specific [278] lead generation channel. What AI is is [280] it is the foundational underpinning of [282] all future businesses from this point [284] onwards. AI handles your communication. [287] AI handles your decision. AI handles [290] your logic. AI handles the legal aspect [293] of your business. It's going to handle [294] all the customer support. It is [296] essentially going to be your business. [298] And so instead of there being one or two [300] opportunities to use, let's say, [301] Facebook or something in a business 10 [302] years ago, there's 10 or 15 [305] opportunities for every business to sell [307] AI and automation services to. Okay? And [310] so because of that, the total market [312] size, if you think about it, you know, [313] is at least 10 to 15 times bigger right [314] there is a lot bigger and it's a lot [316] less saturated as a result. So if you [318] were to choose right now, you know, you [320] could choose SMA on the lefth hand side [321] here, it' be really high competition. [322] You'd have relatively low customer [324] lifetime value or project size. It'd be [326] kind of be like a red ocean, you know. [327] Whereas if you were to go with the AI [328] agency model, the commit to rate, high [330] opportunity here, you have a large [332] opportunity with very little competition [334] comparatively as of the time of this [336] recording. Anyway, average project size [337] substantially higher because people get [339] to ride that hype wave. And really, it's [340] a blue ocean as of the time of this [341] recording. So hopefully, you know, ding- [343] ding, winner winner, chicken dinner. Um, [345] hopefully you guys are seeing that the [348] AIA or AIA or the AAA definitely it's [352] way better than the SMMA right now. And [355] same thing with, you know, a bunch of [357] the other services you could do like web [358] design. We'll talk about web design in a [360] second, but like this is sort of like [361] the pre SMMA. So definitely don't choose [363] web design if you guys want to get into [364] something, make your first few bucks [366] doing services. Okay, so why now? Well, [368] as we see, there's a lot of stuff going [370] on today that parallels stuff that [371] happened in 1995. Okay. So, and this is [373] what this really is is this is like a [375] repetition of the same trend, the same [376] cycle. So, back in 20 well actually [379] let's start even earlier back in [381] 1995. Okay. Websites became a thing. And [384] so, companies realized they could use [386] websites as a marketing mechanism. And [388] so, there exploded this whole new [390] business model called the website [392] designer or the website design agency or [395] website developer, the website [396] development agency. And so, basically [398] this whole new ecosystem sprang up [400] overnight. Okay, that happened in 1995. [402] You know, basically up until like maybe [404] early 2010s. That was the majority [405] period. Then in 2014 to 2016, SMMA [408] exploded when businesses started seeing [410] these social media platforms and [411] realizing, hey, I have no idea how the [412] hell this works, but I feel like I could [413] make some marketing money with them. [415] Well, that's the exact same pattern [416] that's happening now. There's a lot of [417] confusion about AI because the perceived [419] difficulty of getting to learn it is is [420] quite high, which I'll talk about. But [422] this is what is currently creating a [423] massive service opportunity like there [425] was with websites. They're also, you [427] know, I mean, I could throw as many [428] stats at you as I want because everybody [430] and their mom is talking about AI right [431] now, but there's a lot of money that is [433] coming into artificial intelligence over [435] the course of the next few years. People [436] are creating whole financial products [438] that are just subsets of AI companies. [440] They are creating whole technology [443] businesses that are solely about [444] optimizing a very tiny aspect of part of [447] an AI model that, you know, hundreds or [448] thousands of companies are using. Whole [450] new hardware companies are cropping up. [451] There's a very large financial [452] opportunity just to have the word AI in [454] your business nowadays. Another thing is [456] most of the businesses you would [457] realistically work with in any service [458] model just don't know how to implement [460] AI. They think it's a lot harder than it [461] actually is. Okay? And so anytime you [463] have a new technology, you have a group [465] of people that don't know fully how to [466] use it. I will say that the proportion [468] of people that don't know how to use it [469] is going to go down over time, which is [471] why starting early is probably the best [472] way of going about it. And then yeah, [474] the last bit here is just history [475] repeats. It's just like websites in 1995 [477] where basically business discovers that [479] there's some money to be made with this. [481] Business hires like a website agency and [483] then website agency makes a little bit [485] of money with us and that helps the [486] business make money just like there's [487] that symbiotic relationship between the [489] business the website [490] agency. The exact same thing happened [493] with the business and the SMMA with [494] social media [495] pages. And the exact same thing is [498] happening right now with AI automation [500] agencies. Okay, with you know reducing [502] the cost of labor, automatically [504] responding to your emails, following up [506] with clients autonomously, generating [508] leads using one of various automated [509] mechanisms and so on and so forth. So, [512] you know, you kind of have a choice [513] here. Back in '95, people that got on [516] the website trend obviously made web [517] agencies and the majority of these [518] people made money. Maybe not the [520] majority of these people, but the people [521] that approached it intelligently made [523] money. In 2014, social media happened, [526] people that approached it intelligently [527] made money. Well, right now AI [529] technology is booming and so essentially [531] the people that are going to approach [532] this intelligently are going to make [533] money. And I think just due to the [535] foundational nature of AI, I don't know [537] how many more of these big cycles there [538] are realistically going to be. And I [540] don't mean to say this as like an [541] alarmist or something, but you know AI [543] is not really like the industrial [544] revolution. Sam Alman said it best the [546] other day. It's more like the [547] renaissance. There is like a [550] fundamentally different future ahead of [552] us and how that is going to look [554] economically is still very much in the [556] air. If AI can do the vast majority of [558] things that most service workers can do [559] at a certain point, then where are we [562] going to put the service workers and [563] what are they going to do? Right? If [565] they can replicate human thought [567] processes to a certain degree, what the [569] heck is our economy going to look like [571] in a future where human thought [572] processes are not valued? Our whole [574] economy is called a knowledge economy [576] for a reason, right? Anywh who, that's [577] more philosophy for you. Little bit of [579] of a reality check right now. AI [581] agencies compared to most other service [583] businesses have way less competition per [585] potential client. Okay. SMMA and other [587] business models just have significantly [589] lower project values than AI. There's a [592] lot of enterprise companies currently [593] getting into AI. Okay. Um the stats has [596] enterprise adoption at 63% um and [598] climbing. But I think that this is [599] actually a good opportunity for small to [600] mid-size businesses which is why I frame [602] this as an opportunity for small to [603] mid-size businesses because you know the [605] big like AI players are pitching their [607] services to these enterprise companies [608] and the enterprise companies are [609] adopting it. But that just leaves like [610] the mom and pop shops essentially or [613] like the solarreneur businesses or like [614] the small to midsize companies that have [616] been operating with the same principles [618] and procedures over the course of the [619] last 5 years out in the dust. And to be [621] honest, these are the businesses that [623] most human beings interact with. These [624] are the businesses that most people [626] interface with as part of their economy. [628] If we can help optimize this, I think [630] there's both more of a payoff for us [632] financially because there's just going [633] to be a lot of missed opportunities that [635] these big AI companies will not offer [637] their services or their infrastructure [638] to. But I also think it's just better [639] for the world, right? Most people [641] interact with small to mid-size [642] businesses on a daily basis. I think we [644] can help them a lot. So a lot of [646] businesses are planning AI investment. [648] Only 21% of these 97% of businesses [651] have. So I mean, you know, just do the [652] math there. That's what 76% of all [654] businesses on planet Earth with money in [656] their hands that are considering [658] spending it on various things. You know, [660] some automation chat bots. I don't [662] personally recommend selling them right [663] now, but I thought I'd mention them. [665] lead generation AI, some sort of voice [667] assistant or something. People have [669] money in their hands and they are [670] willing to spend it. The reason why [672] they're willing to spend it is I just [673] want you to think, okay, there's this [676] person over here. Her name is Sally. And [680] Sally is lovely business owner that's [682] operated, I don't know, maybe like a [684] recruitment business for the last like [685] 15 years. I can't really draw the smile. [687] Okay, I can That's a weird eye. Sally, [689] hope you're doing okay. All right. And [691] Sally, she hasn't really had the time to [693] learn AI or really get deep into into it [695] because she's just been really busy [696] operating a business. She's been busy [698] feeding people's families to be honest. [700] She's been uh busy dealing with her [702] competition. But all of a sudden, one [704] day, Sally notices that things are [705] getting harder for her. She's noticing [706] that the competing recruitment [708] businesses around her are growing faster [709] and they're doing more and that her [711] margins are going down and that it's [712] more difficult to get customers. Okay. [714] And in the news every day, she hears [716] about this term AI. You know, AI, AI. [720] She hears Chad GPT, companies are now [722] implementing voice bots, companies are [724] implementing X, Y, and Z. What's [726] happening right now is Sally is getting [727] pushed out of the market. When Sally [728] gets to that point where she's feeling [729] pushed out of the market, Sally is [731] obviously very afraid and fear is the [734] primary motivator by which people spend [737] their money. [738] Okay? So, a lot of people are in Sally's [742] shoes right now. And I don't mean this [743] in a negative or sort of like Mchavelian [746] sense, but when people are confused and [749] they're afraid and maybe they're a [751] little excited, that is the best time to [753] sell them and that's really where you [754] can make the most money doing so. All [756] right, so yeah, a lot of digital [758] agencies right now, not a lot of AI [760] companies. I think comparatively if you [761] were to try and go into the former niche [763] versus the latter, you'd just be [764] shooting yourself in the foot. I think [765] if your business model and you know, our [767] current day and beyond does not include [768] the term AI, you're just leaving a lot [770] of money on the table. So, you know, if [772] you were to try something in the digital [773] agency space, there's like a 60 to1 [776] ratio essentially of US businesses and [778] then digital agencies right now, okay? [780] You're probably going to be operating in [782] a much more red ocean to begin with. [784] Whereas, if you're doing, you know, [785] let's say an AI um agency sort of [787] business model, there's significantly [788] fewer AI companies out there. It's also [790] significantly um younger business model, [792] so they're probably not as mature, [793] sophisticated. The ratio is a lot better [795] for you. And so, you can also charge [796] significantly more a project size just [798] going off of simple supply demand [800] economics. So, if we just do some very [802] simple money math here, okay, very very [804] simple money math. This is the AI A [807] Chad. These are the, you know, SMMA and [810] website Pepe frogs. I'm going to get [813] cancelled for that. Um, it's a lot [815] easier for for this fella over here to [817] make the money, right? If we just do a [819] little bit of math, you know, if you if [820] you wanted to make 30,000 bucks a month, [822] you might need 10 clients at 3K if you [823] ran an SMMA. If you wanted to do [826] equivalent with an AI agency and you [828] sold mid to high ticket projects, you [829] sold some sort of all-in-one fractional [831] AI retainer, you know, essentially what [833] I do, you might only need two or three [834] clients at, you know, 510 or $15,000 to [836] hit that same goal. Okay? You're also [838] seeing significantly higher profit [840] margins. And because AI is just [842] leveraged by nature, you also need many, [845] many fewer hires. Okay? Many fewer [848] hires. I mean, um, you know, when I hit [850] $72,000 a month with my AI agency, I did [852] it with myself plus a [855] VA. Try and find a traditional agency or [858] SMMA service where you could make, you [860] know, I mean, it depends on how you want [861] to pitch this. I did the vast majority [862] of the business, but even if you divide [863] that by two, that's like a $36,000 um, [866] revenue per staff member, RP or RPS or [868] whatever, right? Like like find an find [870] an SMA model where you're going to do [872] that. Okay. The really cool thing about [874] AI solutions is they're also very [876] reusable across clients. And so, you [878] know, if you sell something to client A, [880] realistically, you just copy and paste [881] that with client B. You can't really do [883] that with social media marketing. Social [885] media marketing is pretty unique for [886] every client if I'm honest. But the way [888] that I see AI solutions is these are [890] basically like [892] honestly they're kind of like Lego [894] blocks. Okay, this is supposed to be a [895] Lego block and I'm just looking like a [897] pimply cube. Anyway, they're basically [899] like Lego blocks, okay? And so, you [902] know, you could take this Lego block, [903] you could just get the exact same Lego [905] block and you could put it on another [906] business because usually this is some [907] internal mechanism of the business is [909] not always super customerf facing. And [910] even if it is customerf facing, you can [912] still reuse the vast majority of it. And [914] yeah, you can build like good recurring [915] revenue streams with AI automation. I've [917] done it. I'm currently doing it. A lot [918] of people in my communities and groups [919] are doing it. A lot of people that are [920] watching my YouTube video right now are [922] doing it. If you are, I'd love it if you [923] just dropped in the comments um how much [924] money you are currently making with AI [925] automation just to show other people [927] that this sort of stuff is possible. [928] Okay, cool. So, you know, again, two [930] different paths here. You know, if you [931] do the SMMA path versus the A agency [933] path, I think you'll very quickly and [934] easily see uh which one is better, [936] right? A agency path is obviously [938] significantly higher project size. [940] You're working on more exciting [941] technologies. There's lower overhead [942] because you're probably using AI in your [944] business. You're learning about how to [945] use AI in your own business while [947] helping other people do other [948] businesses. So, you're arming yourself [949] for the future. You're going to end up [950] with a lot more margins and you're just [951] going to be a lot happier. You know, the [952] social media marketing agency, the math [954] is a little bit different. So, why do I [956] think that, you know, most of the people [957] that are watching this video are [958] probably better positioned to do cool [960] things with it? Well, the first thing [962] is, you know, if you've been watching my [963] videos for a while, you'll know that I'm [965] big on no code tools. So, I came up [966] basically doing make.com tutorials [968] showing people how to use these no code [970] tools to go out there and actually like [971] build things that make people money. So, [973] nowadays we have these no code tools [974] basically. Okay? And no code tools have [977] eliminated the vast majority of [978] development costs. the vast majority of [981] development costs used to need a whole [982] team of developers and now it's [985] basically like hey team or you just use [988] a software product that's like 15 or 20 [990] bucks a month. So obviously most people [993] nowadays are just going to opt to use [994] the software product cost 15 20 bucks a [996] month. The thing is the rest of the [997] market hasn't really caught up yet. For [998] most people most small to mid-size [1000] businesses um they're still thinking oh [1003] crap I'm going to need to hire a team. [1004] They still assign a very high level of [1006] difficulty to this stuff. And that's [1007] where you can offer a ton of perceived [1009] value coming in using a simpler [1011] implementation method like make.com nan [1013] one of these no code or simple AI [1015] builder tools delivering the same [1016] quality product but doing it faster [1018] doing it better and then also doing it [1019] in a more maintainable way for them. So [1020] really you're benefiting the client at [1022] the end of the day. Okay. Also very [1024] basic AI knowledge can put you ahead of [1026] 90% of the market. Let me draw you a [1028] quick little example. Okay. This is you [1031] and your life and this is today and this [1034] is when you chose to learn AI. Well, [1037] this is 2 weeks from now. Now, [1041] between today and 2 weeks from now, you [1045] could realistically gain all of the [1047] knowledge that you need to start a $5 to [1050] $10,000 a month [1053] business. Because the perceived [1057] difficulty, the perceived hurdle to [1059] getting up and running, okay, this is [1061] like the perceived [1063] perception of [1065] difficulty is actually very different [1068] from the actual [1071] difficulty. Most people think that AI is [1074] what is in black here. They think, "Oh [1076] my god, I have to become a developer. I [1077] have to learn everything that there is [1078] to know about artificial intelligence. I [1080] have to become a professional uh uh [1082] server host prof, you know, I have to [1084] become an engineer. I have to do all [1084] this stuff. Okay, the reality is you do [1086] not have to do that. Most of these tools [1088] work really easily and conveniently out [1090] of the box for you. And the AI [1092] automation industry is not actually like [1095] an academic thing. We're not actually [1097] like engineers as in we are like [1099] building like engineering solutions. [1101] We're not actually creating the models. [1102] We're not actually really creating the [1103] technology. All we're doing, if I am [1105] completely and bluntly honest with you, [1107] is we're using tools that have been [1108] developed by engineers. We're using [1111] tools and mathematical constructs that [1113] have been developed by theoreticians [1115] like physicists and these [1116] extraordinarily intelligent people. And [1118] then we are turning them into simple and [1122] very malleable little Lego blocks that [1124] we can plug and play into businesses. [1126] So, we're not actually doing to be [1127] honest like the very extraordinarily [1129] intellectually difficult part. And so [1132] most other people think that we are [1133] which is why the perception of [1134] difficulty the perception of the hurdle [1136] you need to overcome is very high when [1137] in reality it's it's quite low indeed. [1140] This is like the ground. This is you. I [1142] mean what is the amount of time and [1143] effort that it takes to get here versus [1145] you know all the way up here. It's a lot [1147] easier than most people think I guess is [1149] the point that I'm making. All right. [1151] There's also a lot of free resources out [1153] there like like the ones on my channel [1154] to show you how to do so. Including [1156] obviously free resources and paid [1158] resources like Maker School which is a [1159] 90-day path to competency. takes you two [1161] or three hours daily and at the end of [1162] it you're guaranteed your very first AN [1164] automation agency client and nowadays [1166] compared to you know the pioneers in the [1168] SMMA industry you actually have like [1172] tons of resources tons of knowledge tons [1174] of accessibility if the barrier to entry [1176] with social media marketing was I don't [1179] know like like this then you know this [1180] is the ground and that's the barrier to [1182] entry with social media marketing the [1183] barrier to entry with this stuff because [1184] of all the free resources tools and and [1187] templates and blueprints with videos [1188] like mine uh It's so much lower, it's [1191] not even funny. You I'm sure that there [1193] are probably 13 or 14 year olds out [1195] there right now that are currently [1196] making money with this business model. [1197] And I'm not even saying that as an [1198] exaggeration. I've had a few of them [1200] send me emails. So, there's no [1203] experience required. There's no coding [1205] knowledge needed because it's covered by [1206] these no code tools. Uh there's tons of [1208] free resources. Okay? You spend, I don't [1211] know, 30, 60, 90 days learning. You gain [1213] basic AI skills. You get maybe your [1215] first free client or first paid client. [1218] Then you hit your first actual big [1219] project and I mean before you know it [1221] within the space of a couple of months [1222] you can basically completely transform [1223] your current financial situation. And [1225] the benefit of this is whereas all other [1227] businesses typically have relatively [1229] high capital investment costs something [1231] like this might have a capital [1232] investment cost of like $500 when all [1234] said and done. Now I'm not going to lie [1235] to you. It's not free to start any [1237] business model. Right? If you join my [1238] programs you have to pay even more money [1240] to join the program. But usually you [1241] could save a lot of money because um we [1243] give you discounts and and blueprints [1244] and templates and also just point you in [1246] the right direction. Q&A and stuff, but [1248] but even if you're starting from [1249] scratch, like you're going to have to [1250] spend a little bit of money with any [1251] business model. If you're going to SMMA, [1253] you typically need like, you know, [1254] social media scheduling services, which [1256] cost you a little bit of money per [1257] month. You need like access and [1258] authentication services, which cost you [1260] a little bit of money per month. You [1261] need, you know, like business [1262] infrastructure, like project management, [1264] whatever. This is the exact same thing. [1265] Just keep in mind that these are all [1266] digital tools and so you're not actually [1268] having to like go procure a heavy piece [1269] of machinery or something. [1271] Realistically, your costs usually end up [1272] being just a few hundred bucks a month. [1274] So, you might spend this over the course [1276] of a few months and then, you know, at [1278] the end of it, you might have $10,000. [1279] You might make a 20x ROI and you might [1282] eventually scale up this business enough [1283] to retire your mom and live in fantasy [1285] land for the rest of your [1286] life. Now, the reason why I say all that [1289] stuff at the end is because, you know, [1291] it is simple, but again, that doesn't [1292] mean that it's easy. You can look at [1294] these 1 2 3 4 and fivestep processes [1297] like I've laid them out here and you [1299] could say, "Wow, that's it. That's all I [1301] need to do." But I mean, how many people [1302] are actually willing to spend, you know, [1304] hell, even a third of that, 30 days [1305] doing something consistently every day [1307] in a row? Very few people, right? And so [1309] the barrier to entry is never the [1311] knowledge with the stuff, okay? [1313] Knowledge is no longer the barrier to [1314] entry. Honestly, artificial intelligence [1316] is rendering that obsolete. The barrier [1317] to entry really is just your [1319] consistency. It's your focus. It's your [1320] ability to like do a thing repeatedly [1322] and consistently for like a month at a [1323] time. And if you head over to maker [1326] school or make moneywithmake.com, my [1327] communities, you will see that basically [1329] everybody that does some form of daily [1331] accountability where they just do the [1332] thing that is laid out in front of them [1334] and they do it every single day for 30, [1336] 60 or 90 days inevitably reaches some [1338] level of of massive success. And it's [1340] incredible to see. So they would have [1342] done this with any business model. They [1343] just happen to pick AI and automation [1345] because, you know, I convinced them or, [1346] you know, they happened to like my [1347] content or a friend of theirs told them [1349] to get into it. They would have been [1350] successful with any business model. But [1352] because they chose A in automation, they [1353] were significantly more successful. They [1354] made multiples on their timing. Okay. [1356] Anyway, uh first mover advantage. So, [1359] you know, first movers basically become [1360] default industry experts. Like think of [1362] the here in my garage guy. Think about [1363] Mr. Lopez, right? You know, he was one [1365] of the first movers in SMMA. I'm sure [1366] he's made many dozens of millions of [1368] dollars at this point. If you wouldn't, [1370] he probably wouldn't live in that super [1371] swanky mansion. The benefit in being a [1373] first mover as well is that you get to [1374] explore a bunch of niches when they're [1375] relatively untapped. And so, you [1377] actually get to set the market rates for [1378] things, which is pretty great. and you [1379] get to take advantage of that first [1381] market rate before you know there ends [1382] up being a dog pile of competition and [1384] then it ends up ultimately being like a [1386] race down to the bottom and then yeah [1388] you know it's it's one of the main [1389] benefits and I think one of the reasons [1390] why so many people are getting in right [1392] now we are currently establishing the [1393] market rates for this stuff we are [1394] establishing the value we are currently [1396] establishing how to go about doing this [1398] thing if you guys want to be part of [1400] that first mover advantage you know my [1401] recommendation for you is to get going [1403] pretty quick anyway last thing I'll [1404] mention here before I sign off is just a [1406] blueprint and like a practical how-to [1407] because when I was watching a bunch [1409] YouTube videos and I was considering [1410] business models back in the day. One [1411] thing that I really hated was they would [1413] stoke me up about this awesome [1414] opportunity or they would show me this [1415] cool way of doing business or open my [1417] eyes to the possibility or or [1418] opportunity somewhere and then they just [1420] would be like, "Okay, well that's it." [1422] You know, join my program or or pay me [1424] money or whatnot. Obviously, I am [1425] offering a service at this point where I [1427] help people do all the stuff that I'm [1428] talking about faster, right? That's my [1430] value. But what I'd like to do is I'd [1431] like to at least democratize the [1432] knowledge that anybody can get started [1434] and then once you have a couple of quick [1435] wins, maybe then, you know, if you're [1436] that sort of person that is okay taking [1438] more time, you can come to me and and so [1439] on. So, here's a quick little blueprint [1441] that I'm going to give you, a quick [1442] little 90-day plan. And I've talked [1443] permutations of this 90-day plan before, [1445] but in this video, I'm just going to [1446] give you the entire thing laid out. And [1447] then, if you guys want, you can check my [1449] last video. You can check some of the [1450] videos that I published in the last [1451] couple of weeks with like a step-by-step [1453] granular guide on how to get all this [1455] stuff up and running. So, days 1 to 14, [1457] this is like your day-to-day guide, [1458] okay? Set up your business [1459] infrastructure. Pick two or three [1461] niches. Pick a business name. Create a [1463] website using Web Flow or Card or [1465] Lovable or Bolt. Set up affiliates for [1467] all of your platforms. Between days 15 [1469] to 30, launch your lead generation. So, [1471] start sending cold emails. I recommend [1473] 90 a day. Start sending Upwork [1475] applications. I recommend 10 a day. Join [1477] a bunch of relevant communities, AI [1479] automation communities as well, but [1480] communities in the niches that you [1481] picked earlier. Start making posts and [1483] becoming wellknown in these communities. [1484] Days 31 to 90. Okay. Rinse and repeat. [1487] and do that every single day for the [1489] next like two and a half months. Just do [1491] 90 cold emails, do 10 Upwork [1493] applications, and do two or three [1494] community posts. By the end of it, you [1496] will have assembled a massive list, [1498] massive list of wins. Once you're done [1500] with that, oh, I think I said 50 over [1502] here. My bad. Anyway, I recommend 90 90 [1504] emails, 10 applications, three community [1506] posts. Once you're done with that, you [1507] will have inevitably gotten a ton of [1508] interest with your services. If you guys [1510] want to see exactly how to do this, I'm [1511] publishing a video in the next couple [1512] days where I will legitimately spin up a [1515] whole AI automation business from [1516] scratch. in front of you and get a [1518] meeting legitimately from scratch. I'll [1520] probably do it in like two or three [1521] hours knowing my track record. After [1523] you've done this and you've gotten some [1524] interest and maybe you've gotten your [1525] very first deal, then just increase your [1527] prices, okay? Increase them five, 10, [1529] 20, or 30% depending on how confident [1532] you are. And just cycle that over and [1533] over and over again until you reach some [1536] level of money that you're happy and [1538] comfortable with. I got to say this is [1540] the simple but not easy part right here. [1542] Okay? Because this all sounds incredibly [1545] simple. But just because something is [1547] simple again doesn't mean that you can [1548] actually do it without a modeicum of [1550] will. And I think that's what a lot of [1552] people here are probably struggling [1553] with. So my recommendation for you is [1555] make it easy on yourself. Okay? Get some [1557] sort of accountability partner if you [1558] guys really want to start this thing. [1560] You, yes, you you know call up a friend [1562] of yours that might have talked about [1564] starting business or somebody that maybe [1565] is a little bit further ahead than you [1566] are in their career and say, "Hey, I [1568] really want to do this new business [1570] model that Nick was telling me about. [1571] Would you mind if at the end of every [1573] day I just texted you a screenshot of [1575] all of my progress? And if one day I [1577] don't send you a screenshot of my [1578] progress, just call me a jackass. Okay? [1581] I mean, make a public declaration on [1582] your Facebook or social media. I mean, [1584] tell your mom or your dad you're trying [1585] to do this cool thing and you just want [1587] them to check in on you every once in a [1588] while. These little accountability [1590] mechanisms go a really long way. and [1592] they help change it from something that [1594] might be simple but very very hard to [1596] something that you know while still hard [1598] is manageable and consistent as long as [1599] you look at it as a daily thing. Okay, [1601] so let's just make this 90 10 Upwork [1604] apps, three community posts. Get to it. [1606] And you know, here's a more granular [1607] road map of what that actually looks [1609] like. There's some platforms that I [1610] recommend over here. Instantly, Upwork [1612] and School. Hopefully, I'm not going to [1613] like beat a dead horse at this point [1614] because I've talked about how to do all [1615] this stuff a million in one times. [1617] Hopefully by this point you understand [1618] how AI automation agencies are like [1621] social media marketing agencies. Just [1623] like SMMA eventually got pretty [1625] saturated, just like SMMA got [1626] extraordinarily competitive, I do think [1628] that there is of course a limited life [1630] cycle of any business model. So, you [1633] know, just to be pragmatic, focus more [1634] on the strategy that underlies how this [1636] business model works than the specific [1638] tactics that I'm showing you or that you [1640] might be seeing. Because tactics tend to [1642] expire with market competition, with [1644] saturation, and with just the dynamics [1646] of the economy changing. But if you [1648] understand the strategy, then it doesn't [1650] matter what tactic you may or may not be [1651] using today. You'll always have the [1653] skills to develop a new tactic later on [1655] that fits with the current market [1657] conditions. Hopefully, everything I'm [1658] telling you so far makes sense. This is [1660] why I firmly believe that AI agencies [1662] are the modern social media marketing [1664] agencies. If you guys want to see the AI [1666] agency business model play out in real [1668] time for you, check out Maker School. [1670] It's my zero to one accountability [1672] roadmap where I legitimately give you a [1674] giant list of tasks to do every single [1676] day. Day one, do this. Day two, do that. [1679] Day three, do that. You go down this [1680] linearly top to bottom. And by the end [1682] of this 90-day period, you will have [1684] your first AI automation customer [1685] guaranteed or your money back. It is by [1688] far the simplest and straightest line [1689] road map to actually acquiring your [1691] first AI automation customer, which is [1692] why I think so many people have just [1694] joined like a frenzy over the last [1695] little bit. Uh we just crossed 2,000 [1697] members. So, I'd really appreciate it if [1698] you joined. Uh if you are on the fence [1700] and considering doing this sometime in [1702] the near future, thank you very much for [1704] watching this and I very much appreciate [1706] your love on all of the recent videos. [1707] You guys have made it this far. You are [1709] real ones. Like, subscribe, do all that [1711] fun stuff. That gets me to the top of [1712] the YouTube algo and I'll catch youall [1714] later. Thanks so much.

Video: https://www.youtube.com/watch?v=whXs1RaQIDA
Title: Ranking Every AI Service You Can SELL in 2025
[0] Here's every AI service that you guys [1] could sell in 2025 ranked. I'm going to [4] rank them on the basis of their ability [5] to produce a return on investment for [6] the customer. I'm also going to rank [8] them on their ability to sell for you. [10] I'm going to show you guys how to do all [11] of this on this big tier list. And I've [13] built every single one of these systems [14] at some point in time over the last year [16] and a half on my channel so you guys can [17] get templates and blueprints and [19] basically copy and paste these into your [20] own. The way that I'm going to do this [22] is I'm going to recommend you guys sell [24] anything that's ranked S, A, or B. And [27] then I'm going to heavily dissuade you [29] from selling anything between C, D, E, [31] and F, just based off my personal [33] experience. Okay, so let's get up and [35] running with the very first, which is [37] the proposal automation system. This is [39] a system I sold quite a bit on my own [41] journey to $72,000 a month here. To make [43] a long story short, what this is is this [45] is a three-step system where you have a [47] sales event. This sales event triggers [50] some sort of AI which fills in a [52] template and this is a proposal [53] template. Okay. So what I mean by this [56] is on the sales event you'll usually [57] have either a form that you or a [59] salesperson will fill out. Alternatively [60] you could use the transcript of the call [62] recording itself. That's all information [64] that you then feed into artificial [65] intelligence. You say something like hey [67] here's all the information from the [68] call. I want you to fill in the [70] following template based off of that. So [72] you feed info into the LLM. AI then [74] generates a bunch of templated fields [76] and then you use that to fill in a PDF [78] or a panda doc maybe like a Google slide [81] or some format. There are variety of [83] different tools that you could use for [84] that purpose. So I'm not going to [84] enumerate all of them but the value in [86] this is quite immense. Okay. From a [88] business perspective, you are helping [90] them generate revenue immediately. [92] Because if they have a sales call-based [94] flow, like we do as a automation [95] agencies, I'm sure we could all agree [97] that how quickly you get high value [99] stuff in front of a prospect determines [102] to a large part how likely they are to [103] buy. So, if you can have a sales call [105] with them and then within 30 minutes [107] send them over an extraordinarily [108] detailed, super customized proposal that [110] makes it seem like you spent hours [112] putting that together. I mean, on the [113] one hand, they're going to be like, [114] "What the heck? Are you kidding? How the [116] heck did you do that?" But on the other [117] hand, they're going to be in the mood to [119] buy when you put the asset in front of [121] them, which will substantially improve [123] your conversion rate, your your CVR. [125] Now, if you think about it from the [126] client perspective, you sell them a [127] system that allows them to do this and [128] they have higher CVRs, that's more [130] money, that's more revenue. Okay? So, [131] this is immediately demonstrable return [133] on investment, which is nice. There's [134] also some minor cost reduction. So, if [136] you think about it, this is time that [137] their sales team would have had to spend [139] putting together this proposal. And I [140] will say, I think a big lowhanging fruit [142] is that most sales people are not like [144] great at admin and stuff like that. I [145] mean, I was definitely not very good at [146] admin back when I was doing door to door [148] sales. That was one of my main issues [149] and I had the back office always yelling [151] at me for forgetting to fill out various [153] fields and not like doing my agreements [154] properly and stuff. This just eliminates [156] all that cuz you actually just have [157] artificial intelligence do it. This is [158] going to reduce the cost of errors [160] basically and ultimately like the return [161] on investment is pretty high. It's going [163] to transform hours of work into just a [165] few minutes which you know anytime that [166] you introduce something that can [167] transform hours of work into a few [169] minutes obviously there's a return on [170] investment for it. How would I go about [171] selling this? I do a delivery model with [173] a one-time setup and then maybe I'd [175] offer some minimal maintenance. After I [176] do it, I'd offer like a revision period. [178] So, after I build the system, I'd give [180] them maybe a week or so, maybe two [182] weeks, where I basically say, "Hey, you [184] know, if you guys want any changes on [185] the system, let me know. I'm going to do [186] them entirely, no cost for the next week [188] or two. After if you'd like me to [190] continue making changes, I can either [191] get you on a monthly maintenance [192] package, which will cover all of this. I [193] can bill you hourly, which will be at my [195] full hourly rate of $225 an hour, or I [198] can get you on a monthly recurring [200] retainer, which also includes all of [202] these benefits, like I'm going to do X, [203] Y, and Z system. I'm going to implement [205] this, I'm going to do that, I'm going to [206] offer you all these new build hours or [207] all this new build time or all these new [209] systems. So, you know, this is a good [211] upsell opportunity and it's a good [212] mechanism to do that as well. It's not [214] very technically complex. I'd rate the [216] technical complexity is like moderate. [217] It does require integration with your [219] CRM if you want to like really knock it [220] out of the park for the client. You [221] don't just want to like generate the [222] proposal. You want to take that proposal [224] and then put it in a CRM so that they [226] have everything logged and organized. [227] You also need to understand how document [228] generation tools work. And then you know [230] it's basically it's ready right now. The [231] techn is mature. I've sold maybe [233] $100,000 or more with this particular [234] product. The market demand for this is [236] strong and I use it myself anytime I [238] generate a proposal. So this is like [239] evidence that if I'm using the proposal [241] generator to sell people on the [242] viability of the proposal generator, [243] odds are that system itself is pretty [245] good, right? So where exactly would I [246] rank this? Well, to make a long story [248] short, this system is good enough that I [250] would rank it a tier. Proposal generator [252] system is very cool. All right, let's go [253] down here to personalized email [255] follow-up system. What is a personalized [257] email follow-up system? Well, [258] essentially a lot of companies nowadays [260] have inbound flows. And what these [262] inbound flows look like is they will [263] have a lead come in through an ad, like [265] a Facebook lead ad or some sort of [267] Google ad or something. Okay? And then [269] the person will fill out a form of some [270] kind. Now, once they're at the form, [271] what do they do? Very similar to the [273] proposal generator conceptually, they [274] add a bunch of information to this form. [276] What we do is we feed that into AI and [277] we have it template out the first few [279] lines of maybe like an icebreaker or [281] something and then with that customized [283] icebreaker, the first line of the SMS or [285] email, we send them some sort of [287] communicate and we do that within like [289] 60 seconds. Basically, there's this big [291] stat that people talk about. I think the [293] stat is dependent on industry and it's [295] dependent on exactly what we're doing, [296] but it's something like if you can [297] respond to a customer within 60 seconds [299] of their inquiry, you increase your [301] final conversion rate by 396% or [303] something along those lines. And I think [304] there's no situation in which that's [306] more true than some sort of like [308] advertising based flow. If somebody is [310] clicking on an ad and they are filling [312] out their information, odds are they [313] want something now. They don't want [315] something in a week. They don't want [316] something in a month. They don't want [317] something in however long the average [318] digital agency takes to get back to [319] people. They want it now. And so what [321] this system does is it allows you to [323] solve for that. This allows you to get [326] in front of a customer within a minute [328] of them submitting a form and implying [330] that you're going to give them a call [331] back or connect with them or something, [333] right? Hey, Pete. Just saw you filled [334] out the form for X, Y, and Z. A uh [337] place, dude. Love uh the neighborhood, [338] by the way. Big fan. Listen, I'm just [340] heading into a parking garage. Let me [341] give you a ring in the next 5 minutes or [343] so, and we can sort this out. Okay, that [344] sort of informal personalized stuff. [346] Crushes. So, what is the business impact [349] here? Well, obviously, you're generating [350] a ton of revenue. We just said 396%, [353] right? You're reducing a little bit of [354] costs. It's not that insane, but you can [356] tie this into a follow-up flow, which [357] reduces your sales people's needs to [359] follow up on this stuff manually, and [361] ultimately, you save a fair amount of [362] time. couple of different models that [363] you could sell this with. Um the first [365] is you do some sort of initial setup fee [366] and then um you have some sort of [368] ongoing monthly management fee. You [370] could also do this as like a oneshot and [371] then you just give the customer all of [372] the information they need to maybe [373] update the prompt or update the framing [375] of the messaging and the packaging and [377] stuff like that. And then you could [378] charge them some sort of ongoing monthly [379] management fee as well just to update [381] this and I don't know like build out on [383] it. Usually a system like this um [385] delivers such a return on investment for [386] people that have inbound funnels that [388] they're willing to invest very heavily [389] in it in my experience. Just like the [391] other one, I have you a little uh pitch [392] over here. I have a bunch of remarks [394] around the technical complexity and the [396] market readiness. But basically, if I [397] could just make a long story short here, [399] this is a great system and it's [400] something that a lot of people are [401] selling right now. And because it [403] delivers such a high ROI, I would rank [404] this as an S. Okay. All right. Let's do [406] more. This is an AI chatbot lead capture [408] system. What is an AI chatbot lead [410] capture system? This is where you get [412] people on your website that are filling [413] out maybe a form or something like that [415] and instead of the form, you put a [416] chatbot in front of them. So, a little [418] widget in the bottom righthand corner [419] that says, "Hey, you know, I'm currently [421] online. How can I help you?" And the [423] idea is this chatbot. It's usually like [424] an AI agent and it can guide people [426] through the sales process or your [428] appointment setting process usually. [429] Then ultimately, you end up with some [431] sort of booked appointment. You usually [432] build these out in NAN is the most [434] common platform to do this sort of stuff [435] right now just because it's, you know, [436] relatively simple and straightforward to [437] set up an agent and the idea is, you [439] know, this will increase your conversion [440] rate and and so on and so forth. Now, I [442] am a little bit hesitant about systems [443] like this because I've implemented them [445] in a couple of businesses. they haven't [446] really produced that viable of a result. [448] There's a lot of demand for them right [449] now. A lot of people are asking for [450] stuff like this. But in terms of how [452] like speced out all this is right now, I [454] don't really know. I don't I don't think [455] it's super specked out. But, you know, I [457] think the way that you sell this is with [458] some sort of medium to high revenue [460] impact if targeted properly and if your [463] website has like massive flow of people [465] coming in that are asking pretty mundane [466] questions. So I think if you are very [468] maybe specific about the audience that [470] you sell the stuff to and it is an [472] audience that is suffering from exactly [473] that problem that I'm talking about. [475] They have so many people coming in that [476] are already interacting with some sort [477] of agent-based thing. You know it's like [479] customer support agents or customer [480] service agents and you just start [482] swapping that out for some sort of AI [483] tool instead. I think that this can have [485] a pretty high revenue generation impact. [487] You just need to be careful with who [488] you're selling it to and the promises [489] that you're making people. Aside from [490] that you are saving some costs as well [492] because you are supplementing rather [494] than replacing human interaction. So [495] you're going to have reduced cost. The [496] idea is you're going to have higher CVR [498] and then you know it's also going to [499] save a little bit of time because you're [500] going to handle some really routine [501] inquiries with just a model. Okay. The [503] way that I would personally do this is I [504] would do an initial setup plus an [506] ongoing management fee. That ongoing [508] management fee is important because [509] usually in my experience these things [510] require a lot of tweaking. You need to [511] make a lot of changes to the stuff over [513] time. People aren't comfortable or happy [514] with the language. They're always these [516] edge cases that come up. So you're going [517] to want to be on the hook for some sort [519] of ongoing management for sure. And then [520] yeah, I mean you know there are a couple [522] of gotchas. You want specific [523] high-intent customer interactions, also [525] high volume customer interactions. And [526] you also want to focus on businesses [528] that already do this sort of lead [530] qualification pretty often. And you [531] don't just need technical skills to [532] install this. You also need a lot of [534] like understanding of what customers are [535] looking for and how to build the prompt [537] of the model to solve pains. All right, [539] so I'd still consider this ready, but [541] it's ready with caveats. You know, it [542] works well for specific use cases, not [544] really as a general solution. There's a [545] way to sell this over here. Let me take [546] this now and let's actually rank this. I [548] would rank a system like this as of the [549] time of this recording squarely in C. [552] Okay, so in my humble opinion, this is [554] just underneath the cuff, underneath the [556] cutoff, I should say, um, where most [558] people here should consider selling. So, [560] I probably would not sell this if I were [561] just getting up and running with an AI [562] automation agency myself. And that's [564] just because I've had some experience [565] selling them, and things haven't really [566] worked out. There are a lot of systems [568] you could sell that would probably [569] deliver more of a return. You know what [570] I mean? Okay, next up are some [571] appointment setting agents. So, similar [573] to how we had a website chats agent back [577] over here, what this is is this is [578] usually some other inbound inquiry. So [581] maybe you have like a WhatsApp agent or [582] maybe you have like a telegram agent and [584] the idea is this is like an AI agent [585] that responds to inquiries from these [587] and the goal is to try and book an [589] appointment. Usually it has access to [591] some sort of tooling or something like [592] that to that purpose. And then after you [593] book the appointment, you know, the idea [594] is that this is going to increase your [596] CPR and it's going to reduce costs. It's [598] massively going to increase your [599] throughput and stuff like that. [600] Hopefully you guys can see at this point [601] that there are still some caveats to [603] agents like this just because, you know, [604] if you're thinking about it, if [605] somebody's at the point where they're [606] considering wanting to buy from you, [607] theoretically, they're probably the most [609] valuable and the closest to actual money [612] that anything will ever be in your [614] business. So, it kind of makes sense [616] that that is where you'd invest your [617] time and energy, right? The thing about [618] these agents are they do a pretty good [620] job and they are able to handle a very [623] high volume of customer inquiries, but [624] they're usually just a little bit worse [626] than people are right now. They just [627] miss a little bit of the nuance. Okay? [629] And so if you have a 100 inquiries [631] coming in and this agent's able to [632] convert 15%. And then if you contrast [635] that with 100 inquiries that a human is [636] able to convert at 20%. This 5% is [638] usually way more revenue value than the [641] savings that you'd get out of not hiring [643] people to handle these inquiries. Do you [645] know what I mean? Like if this is for [646] $1,000 product or something, right? 100 [648] people at $1,000 product. That's [649] $200,000. This is $150,000. You're [652] sacrificing $50,000 if you think about [654] it in your ability to convert. And [655] you're probably saving like $5,000 or [657] something like that in your net. So, [659] it's a little bit nuanced, but the point [660] I'm making is this revenue can be very [662] high, but only really if done right. Um, [663] the cost reduction potential here is [665] high, but you know, you have to make [666] sure to weigh that against the trade-off [668] against the revenue. And then, you know, [669] the client experience is still a little [671] bit questionable. So, I don't know if [672] I'd really dive super deep with this. As [674] you guys could tell, um, the delivery [675] model for a lot of the stuff tends to be [677] similar. I charge an initial setup plus [679] an ongoing payer performance, maybe some [681] sort of booking lead, or we'll have some [683] sort of like recurring management fee. [686] Okay? Okay, I think there are a variety [687] of ways to pitch this realistically, but [688] this is probably what I would do. One of [690] these two options. Either these two or [692] these two. Okay, great. So, given that, [694] where exactly would I rank this? Hm. Let [696] me think. Oh boy, there's a lot going on [698] here. Where are we going to rank this? [700] Where's this one going to be? C D E F S [703] tier. No, it's going to be Ctier. I'm [704] going to rank this basically side by [706] side with AI chatbot lead capture [707] systems cuz theoretically these are [708] basically doing the same thing. They're [710] just doing it on different platforms. [711] Okay. All right. How about client [713] onboarding automations? So, what is a [714] client onboarding automation? Basically, [716] it's where you have some sort of new [717] client trigger. So, a new client comes [719] on board. Maybe they pay you. It's like [720] a Stripe trigger or maybe they sign some [722] proposal. It's Panda or there's [724] something going on basically is what I'm [725] saying. And then what you do is you send [728] a bunch of onboarding assets. Onboarding [730] assets might mean like a PDF saying, [732] "Hey, here's all our company." Or maybe [734] it's an email saying, "Hey, you know, I [736] need just need some information about [737] your tour proceed." Or maybe it's a form [738] asking the same thing. Maybe it's a [740] video. Right? The point I'm making is it [742] just templates out the onboarding and [744] then maybe there's some follow-up CRM [745] stuff. So maybe it moves some CRM stages [747] around. Okay, this is a very valuable [750] automation because onboarding is one of [752] the most important experiences to get [754] right for most clients customers. And if [756] you can do a really good job getting the [758] onboarding, getting the people on ramp [760] to working with your business, okay? If [762] you can do a really good job immediately [764] delivering some sort of return on the [766] person that just spent the money, you [767] know, minimizing their buyer remorse, [768] showing them, "Wow, these people are [770] really taking care of me." you can [771] usually massively improve retention. [774] Okay? So, you know, you don't think this [776] impacts revenue, but a lot of the time [778] because you are increasing retention, [780] you actually do see a massive revenue [782] increase from stuff like this. When you [783] nail onboarding, this is your business. [785] One of my famous pipelines. These are [786] people coming in. This is the value ad [788] that your business does. And then these [790] are people coming in. You just made a [791] bunch of money. Okay? You 3x your return [793] or whatever. This basically maximizes or [796] improves the probability people are [798] going to just come in again through your [799] pipeline. They're not just going to like [800] leave you and then that's it. You'll [801] never get them. You're actually going to [802] have some sort of retention occurring. [804] Increased retention, increased revenue. [805] Also, you typically have reduced costs. [807] Again, why? Because you're no longer [809] having people do all of that stuff for [810] you. And people are just notoriously [812] poor at like following and making sure [813] that all the check boxes are ticked [815] essentially in an onboarding process. [816] So, as a result, things are usually a [817] lot faster, a lot smoother, and you can [819] allocate team resources and places that [821] actually matter. Then, yeah, time [822] savings are high as well. So, improve [823] client experience because they still get [825] the personalized touch and you also [826] reduce the administrative work. And if [828] you want to make this even better, my [829] recommendation is when you have that new [830] payment trigger and you send the [831] onboarding assets, take the info from [833] the sales call and actually use that to [835] have AI generate you some sort of [838] personalization to the onboarding [839] assets. So now you're not just sending a [841] templated form. You're actually sending [843] a form that says, "Hey John, we'd love [844] to get some more information about you." [846] These tiny little touches here or there, [848] tiny little changes to the PDFs that [850] you're sending, or maybe you create a [852] custom notion page for the customer or [853] something. This makes a really big [854] impact on how they perceive their time [856] and experience with the business that [857] they're working with. Again, this is [859] stuff that I use in my own business. [860] It's stuff that I am selling people on [862] while actively showing them what it [863] looks like. And I think that's one of [865] the most uh the most important things to [866] do, right? Lead by example. Okay. So, [869] here's the delivery model for this [870] initial setup plus some sort of minimal [872] maintenance. Okay. Uh realistically, [874] client is going to know how their [876] business works. So, you're probably [877] going to get most of the information [878] that you need kind of upfront here. What [879] I would do is I would just give the [880] areas to tweak in the system in order [882] for them to be able to manage it and [884] adjust it on their own. The cool thing [885] here though is there's a lot of upsell [887] potential because the second that you [888] start touching onboarding, you start [890] being able to touch everything else, [891] right? Like if you think about it, [892] onboarding is the first step of [893] fulfillment. Then you have the actual [894] fulfillment of the project, right? But [896] if you could start templating out things [897] here, there's no real reason why you [898] can't start templating out things here, [899] too, right? You could use AI to take a [901] person's form input and then use it to [903] generate some customized Google doc that [905] you send them that, you know, runs them [906] through how your company works. Why [907] can't you actually just use that to like [909] start doing some of the work too? Well, [910] you can, right? So, this is a very very [912] easy way to like entrench yourself in a [914] business become very very sticky. All [916] right, cool. So, yeah, you know, I [917] consider this to be probably one of the [918] more technically complex things to be [920] honest cuz the second you start putting [921] your fingers across all the different [922] pots in the person's business, you know, [924] you do have to juggle quite a bit. And [926] yeah, market readiness, it's 100% ready [927] right now. I use it all the time myself. [929] A lot of high ROI businesses are using [931] this right now to maximize the quality [932] of the client experience. They basically [933] automate most of their company. So, [934] where would I put this client onboarding [936] automation? I would put this as S tier. [938] This delivers immediate return on [939] investment, which is all we really care [941] about. Okay. All right. What else we [942] got? This is all we do, baby. Let's go. [943] Sales pipeline and follow-up automation. [945] Oh, this one's fantastic. What this is [947] is this is essentially you building an [950] automated pipeline management system [952] that when somebody comes into your flow, [953] you add them to a CRM. Okay, let's um [956] say trigger. Again, we have some sort of [958] like new event. Somebody comes into our [960] business, they fill out the form that we [961] talked about with like the automated [962] autoresponder. Okay, then you add them [964] to the CRM. you add to some sort of [966] dashboard or maybe database that tracks [968] them and then it creates automated [970] follow-up events. So, I've built this [972] out a number of times on my channel. I [974] consider this really really high ROI, [975] especially for high volume applications, [977] so like recruiting agencies and stuff [979] like that. Um, you do some sort of [980] automated follow-ups and then you also [982] have some sort of automated um stage [984] changes. When I say stage changes here, [985] the way that CRM work is that they [987] basically a new customer comes into your [989] CRM and then they are in the stage [991] intake or something, right? And then the [993] idea is your salespeople go every day to [995] all of the customers or all of the [997] prospects that are in the stage intake [998] and then they try and pitch them to book [999] a meeting. Then some of them book [1000] meetings. So they move to the stage [1002] meeting booked, right? Then some of them [1003] send proposals. So they move to the [1004] stage proposal sent awaiting reply. [1006] Right? There all these little stages [1008] basically in every CRM. Well, what this [1009] does is it basically just automatically [1011] manages all of that and it allows you to [1012] squeeze as much juice as possible out of [1014] the leads that have already made it into [1015] your pipeline. What you do is you say, [1016] "Hey, you've been in the meeting booked [1018] stage for 4 days and you haven't moved [1020] out of Well, odds are it probably didn't [1021] show up to the meeting or there was some [1022] issue. So, if that's the case, then [1024] we're going to send an automated [1025] follow-up email rebooking you or they've [1026] been in the send proposal stage for a [1028] week and they haven't really made any [1029] moves. Well, what we're going to do is [1030] we're going to have a system that just [1031] checks every day to see how long you've [1032] been in that stage. And if you've been [1033] in that stage for more than 2 days or [1035] something, it'll send a simple SMS [1037] follow-up or email follow-up saying, [1038] "Hey, Pete, just wanted to double check [1039] how things are looking on the proposal. [1041] We good to go? If you have any [1042] questions, can I jump in there and add [1043] some more value?" You do that repeatedly [1044] over and over and over again and you can [1046] turn a conversion rate that might be I [1048] don't know 15% to 20% to something like [1050] 30%. You could literally double the [1053] whole revenue of the company by doing [1054] this. So very very valuable stuff. Okay, [1056] as we see high revenue impact cuz CVR [1059] high cost reduction impact cuz you're no [1060] longer having sales people do all that [1061] manual follow-ups and then it also saves [1063] a bunch of time and chaos. Delivery [1064] model for something like this. I always [1066] do some sort of initial setup plus some [1067] sort of maintenance. Okay. And what I'll [1069] do is I'll actually take these and I [1071] will say, "Hey, I'll give you a discount [1072] assuming that we get on some sort of [1073] like retainer or in my case what I'm [1075] doing now more than retainers are like [1077] subscriptions. It's like a monthly [1078] fractional CO subscription where you [1080] basically get like a professional like [1081] me that just comes into your business, [1082] manages all your ops. We don't track [1083] hours or do anything like that." Okay, [1084] so I actually use these as upsells and [1086] then I give people some sort of discount [1087] assuming they want to sign up to my [1088] package. So where would I rank the sales [1090] pipeline and follow-up automation? Well, [1091] to make a long story short, hopefully [1093] you guys are seeing some trends here. [1094] Okay, procedural flows. I'm going to [1096] need to make this a little smaller, [1098] aren't I? procedural flows that actually [1099] like directly interact with the sales [1102] systems. I'm usually ranking pretty high [1103] cuz once somebody's actually in your [1105] business, you can sprinkle in a little [1106] bit of magic with these linear and [1108] procedural flows, you can make people a [1109] lot of money. Notice how all the systems [1110] that I'm talking about here, the system [1111] back here, this uh pipeline CRM [1113] follow-up thing. Part of it adds to a [1115] dashboard for data visualization. Now, [1116] I'm talking about a reporting and [1117] analytics automation, which presumably [1118] would take data from that dashboard. So, [1120] the reality is all of these systems are [1121] very intertwined. And the benefit to [1122] this business model is once you build [1124] one, well now you have five other spider [1126] web systems that you could build on top [1127] of that and add more value. So this is a [1129] good example of a system that adds value [1131] assuming that you've built people out [1133] that previous step. Okay. So what are [1135] reporting and analytics automations? [1136] Well, basically this is like some sort [1138] of like data monitoring. So you have all [1141] of those previous steps that I talked [1142] about. You have automated autoresponses. [1145] You have some sort of agent chatbot [1147] that's like logging people as they come [1148] in. What you do is you monitor all of [1150] these and then you add to some sort of [1152] database upon a trigger. This database [1154] is set up in a specific way. You might [1156] have three or four tables in the [1158] database. One might be like leads, [1160] another one might be sales, another one [1162] might be clients, another one might be [1163] projects. And what you do is every time [1164] there is a stage change in your CRM or [1167] project manager, every time a new lead [1168] comes into your system, you update it. [1170] Okay? And when you update it, what [1172] you're doing is you're getting you're [1174] updating data. Then you have some data [1176] visualization platform like looker [1178] studio or plecto or something that pulls [1180] from the database. And so in this way [1182] what you have is you basically have like [1184] a dashboard and that dashboard is [1185] constantly being updated every time [1187] anything happens in your business. Now [1189] this is quite valuable. I'm not going to [1191] say this is the most valuable because if [1192] you think about it this is not like [1193] directly related to the revenue or [1195] whatever. It's sort of like one step up [1197] and anytime you're dealing with like [1198] abstraction stuff it's it's harder to [1200] justify the return. But what you end up [1201] getting, you know, this is indirect, but [1202] you end up getting a company that's just [1204] a lot more data driven. When you have [1206] real-time visibility into every aspect [1208] of a business, if it's an agency or it's [1210] like a B2B SAS product or it's like some [1212] manufacturing business, some enterprise [1214] resource planning thing, if you have [1215] visibility into everything that's going [1216] on your business, I mean, how are you [1218] not going to make better decisions? So, [1220] you know, there's no direct revenue [1222] impact. Uh, I'll say everything's [1223] indirect, but you usually do have [1225] increase across all the metrics that you [1227] care about because you can log the CVRs [1229] across all your salespeople. Okay? You [1231] can see which sales people make sense to [1232] promote and and send more leads to and [1234] which ones don't. Because you can log, [1235] you know, all the expenses and stuff [1237] like that, you can see which ones are [1239] actually driving an ROI. Because you can [1240] log things like like average time to [1242] lead or whatever, you can significantly [1244] improve, you know, your top line, the [1246] number of clients that come in. Because [1247] you log things like your cycle time, [1249] okay, you can actually reduce your cycle [1251] time. Cycle time being the amount of [1252] time it takes to like finish a project [1253] after a project comes into your queue. [1254] You can reduce your cycle time and when [1256] you finish projects faster thing that [1257] nobody will tell you is because you [1259] because the throughput of the business [1260] goes up because you can get more [1261] projects in your queue in a shorter [1263] period of time. The company itself makes [1264] more money per unit time as well. Okay. [1266] So all the stuff is like indirect but um [1268] still makes a lot of money. Cost [1270] reduction high because it eliminates a [1271] lot of manual reporting tasks. So, you [1273] know, other businesses a lot of the [1274] time, like the old school ones, they'd [1275] have like monthly tasks where it's like [1277] compile all of the data, put it into a [1279] report, and then send it out to our [1281] clients or maybe we'll do some internal [1282] stakeholder meeting. Well, you don't [1284] need to do that when you have a [1284] dashboard cuz the dashboard is the [1286] report and it's updated and there's [1288] usually a little way to like, you know, [1289] change the time period on the dashboard. [1291] So, instead of looking at like last [1292] week, you look at last month. So it [1294] actually turns this thing which you know [1296] used to be a fair amount of labor hours [1298] realistically into something that's just [1299] like completely automated on the back [1301] end. Delivery model for this stuff is [1303] similar initial setup and then some sort [1305] of monthly maintenance. Okay. Um there's [1307] no real way to go like performance-based [1308] here unfortunately because we are just [1310] dealing with reporting and dashboard [1311] automation. But yeah I'm sure you guys [1312] could tell pretty straightforward pretty [1314] simple. Um all you do is you basically [1315] just log every event that's occurring in [1317] the business using some sort of web hook [1319] trigger. Where would I rank this? I [1320] would rank this as a B. Now, I'm ranking [1323] this as a B as opposed to these other [1324] ones that are S's and A's. Um, [1326] specifically because these this just [1328] doesn't immediately impact revenue. And [1329] anytime something doesn't immediately [1330] impact revenue, it's a little bit [1332] tougher to sell. Okay? Easiest things to [1333] sell are always the things that [1334] immediately impact revenue. Hopefully, [1336] that's clear because then you can say, [1337] hey, you know, I will deliver the system [1339] for you and I estimate that this will [1341] deliver a five times return on the money [1342] that you are spending with me. And that [1343] is the whole game plan. You give me [1345] dollar, I give you $5 back, right? If [1347] you simplify it. Okay, let's talk about [1350] industry specific CRM systems. Now, [1352] okay. So, what this is is this is [1354] usually a template you will develop for [1356] a variety of industries. Let's say you [1358] have one for recruitment, you have [1360] another one for creative agencies like [1362] me, you have one for, I don't know, [1364] coaches. Okay? And the thing is, you [1365] invest a lot of time and energy into [1367] each of these [1368] templates. And the idea is you make [1371] these super optimized for the specific [1373] business that you're working with. So, [1374] you will build out an optimized [1376] recruitment CRM. You will build out an [1378] optimized creative agency CRM. You'll [1380] build out an optimized coaching CRM that [1382] just eliminates a big chunk of the [1384] administrative work. You optimize for [1386] the the stages. Instead of being 50 [1388] unwieldy stages, there's five stages [1389] that actually matter. You build out [1391] simple triggers and automations, the [1393] dashboards and stuff that I was talking [1394] about earlier. You build all that stuff [1395] into these oneclick templates and then [1396] you just put them in front of customers [1398] and say, "Hey, this is a CRM that XYZ [1401] really big company uses or hey, this is [1402] a CRM modeled around, you know, the same [1404] flow that XYZ really big company uses. [1406] I'm super confident this will improve [1407] your bottom line by XYZ." And because [1410] it's optimized, you're delivering more [1411] or less best practices for that [1413] industry. You're capable of driving a [1414] return. Okay? And then when it comes [1416] time to actually fulfill, what do you [1417] what do you actually do? Well, it's very [1419] easy. You just basically like click the [1421] template and then like your delivery is [1423] like 80% done, right? What you do after [1425] that is you make some fine tweaks. Um [1427] because the customers always want like [1429] in my experience, I've sold a lot of [1430] CRM, customers just always want some [1432] sort of perceived control over the [1433] thing. It's sort of like um the old [1435] designer adage like the way that like [1438] high quality design companies work is [1439] they will and this is totally unrelated [1441] but they will make the design and [1443] they'll make it perfect and then they'll [1445] like kind of fudge up one tiny little [1447] part of it and they'll say hey here's [1448] the project here it is delivered let us [1450] know if you have any revision requests [1451] and the customer loves it and they're [1452] like god this is amazing but what's that [1454] weird little fudged bit you know in the [1455] corner hey can you do you mind changing [1456] that little fudge bit aside from that [1458] though everything's great and the idea [1459] is you want to give people some sort of [1460] autonomy or control perceived control in [1462] the process of project delivery clients [1464] usually aren't happy unless they feel [1465] like they were a part of something. So, [1466] um anyway, when you deliver your [1468] template, I guess what I'm trying to say [1469] is it's often uh despite being like [1471] perfect objectively, people want some [1472] changes to it, but you know, you still [1474] get 80% of the way there, those changes [1476] are only 20%. You don't have to build [1477] the whole thing from scratch, right? So, [1479] that's the value there. It's a little [1480] bit of leverage. Anyway, the impact on [1481] this I would call u medium revenue [1483] impact, but very high cost reduction [1485] impact, very high time-saving impact. [1487] Basically, the way that I see good CRM [1488] is they are like a lift mechanism. I [1491] don't know like if all let's say you [1493] have a bunch of KPIs or metrics here, [1494] right? 5%. 12% I don't know these are [1496] just random ass metrics just whatever. [1499] Uh what a good CRM will do is it will [1501] lift all of these. You won't do so [1503] immediately but it'll just make [1504] everything in the business just a little [1505] bit faster. It'll make all the costs [1506] just a little bit lower. Right? Delivery [1508] model for this initial setup. You need [1510] some sort of recurring management [1511] service I find because what you'll do is [1512] you'll build a lot of automations into [1514] the CRM and then the people will just be [1516] it'll usually be so unwieldy they'll [1518] have no idea how to like manage it all. [1519] So, the way that you sell this is you [1520] sell them on some initial setup. Then, [1522] in addition to the initial setup, you uh [1524] you charge them a monthly management [1525] fee. Usually, you do like a retainer [1527] that bundles in a bunch of the other [1528] automations that you'll put together. [1530] And so, it's actually difficult to sell [1531] this as like a one-off like initially. [1533] What you usually do is or what I will [1535] usually do is I will do like a proposal [1536] automation system first. Then, I'll be [1537] like, "All right, let me add this to [1538] your CRM. Where's your CRM? How does [1540] your CRM work?" Like, "Run me through [1541] your CRM." And then they'll be like, [1542] "Well, we're currently using X, Y, and [1543] Z." And it's like, "All right, well, why [1545] don't I fix that up, too, while I'm at [1546] it?" The second you get into their CRM, [1548] you start getting into like the client [1549] onboarding fulfillment like I talked [1551] about earlier. Then you get into like [1552] the project management fulfillment. [1553] Again, you become very sticky. Okay. So, [1555] where exactly would I rank the industry [1557] specific CRM system? I'd rank this puppy [1560] as an A. So, it's right up there with [1562] the proposal automation. These two are [1563] really weaved in together. Not as much [1565] revenue impact as the rest of these. [1566] It's a little bit indirect, but it's [1568] more direct of a revenue u boost than [1569] the reporting and analytics automation. [1572] We are making some solid progress here. [1574] Why don't I next cover the fabled fabled [1577] all-in-one AI agents that do everything [1579] for your business? Now, I'm already [1583] [ __ ] on this because I've seen a lot [1584] of people on the internet recently talk [1586] about these all-in-one AI agents that [1587] will do all the bookings for you and [1588] they will manage all client [1589] communications and they'll follow up [1590] with your leads for you and blah blah [1592] blah blah. The reality is we are [1594] currently not here yet. We can't have an [1597] AI agent that runs our whole business [1599] and does everything completely [1600] autonomously because the reality of the [1603] situation is there's just so much [1604] context at the moment that these things [1605] are just not yet there. There are so [1607] many issues with this that it's hard for [1608] me to state every specific issue. But [1611] these models typically lack context [1613] regarding prior sales interactions. The [1615] value of a single lead is so high that [1617] if you miss out on an important piece of [1619] context, you will usually either burn [1620] the lead or just make that person not [1622] want to work with you. If they determine [1623] that it's an artificial intelligence [1624] talking to them and not a person, their [1626] reactions are usually not positive. [1627] They're quite negative. You don't want [1629] to burn people at the front end to your [1630] business. Likewise, if somebody's [1631] already sent you money, you definitely [1633] don't want to burn people in the middle [1634] side of your business either, like, you [1635] know, in the actual chunky fulfillment [1637] stage. If they think that an artificial [1638] intelligence model is doing the service [1640] instead of a human, and you imply that a [1642] human being would be doing it only to [1643] then outsource it to artificial [1644] intelligence models, people typically [1646] don't like that. They feel like they've [1647] been gotchaed. So basically the way that [1648] all-in-one agents work, the whole like [1650] mechanism by which they do is they're [1652] supposed to be leverage multipliers that [1653] allow you to do things faster, but in [1655] reality they end up just being very [1656] risky machines that because the quality [1659] of the I don't know the size of the LLMs [1661] and like the the way that the prompts [1662] are set up for the most part and like [1664] the way that the agents frameworks are [1665] built, MCP is not really there yet. Um [1668] Google's agent agent framework is not [1670] really there yet. You know, like the NAN [1671] agent builder is not really there yet. [1673] What really ends up happening in [1674] practice is it just ends up being pretty [1675] pretty leaky. So, you know, if properly [1679] scoped and validated and targeted, you [1681] could have a medium to high revenue [1683] impact. That's what you could sell [1684] people on. But I don't really think that [1685] that works that well in practice. Cost [1687] reduction just really isn't that high. I [1689] mean, you know, you might save a little [1691] bit in costs, but you'll also [1694] significantly reduce your closing rate. [1696] You'll significantly reduce like [1698] retention because the quality of the [1699] project's usually going to go down. [1700] Like, you know, a agents get you like [1701] 80% of the way there, I want to say, for [1703] most things. But the most important [1705] thing is the gap between 80 to 100%. [1707] Like you know the the zero to 80 in any [1710] business is actually the least [1711] expensive. It's the 80 to 100% that's [1712] like the things that really matter and [1714] the reason why they're hiring you as [1715] opposed to just using one of these [1716] models in the first place, right? So I [1718] don't really have a defined delivery [1719] model because every time I've seen [1721] anybody sell one of these things, they [1723] generally just don't deliver a lot of [1724] value. I don't think that there is a [1726] good delivery model for these yet. And I [1727] think when we eventually we're at the [1729] point where, you know, these AI agents [1730] are good enough, which could be in the [1731] next couple of years, to actually do [1732] most things that a business would want [1733] to do. There will be out of the box [1735] solutions that will just manage most of [1736] the technical complexity for customers, [1738] they'll probably do that themselves. [1739] Okay? So, instead of you having to deal [1740] with this really high technical [1741] complexity, odds are they're probably [1743] just going to like get a a software [1744] platform to do it. So, I hate to say it, [1747] but this to me is probably like E tier. [1750] We're going real low on the all-in-one [1752] agents. And you see this anytime there's [1754] like a hype bubble in any industry, [1755] right? Anytime there's a hype bubble in [1757] any industry, you know how there's like [1758] races to the bottom? This is like a race [1759] to the top of like claims that like this [1761] agent does this, this agent does that, [1763] this agent does that. There becomes so [1764] much anticipation and expectation that [1766] your agent can eventually do everything [1767] that in in honestly the people that [1769] you're selling to and then you know AI [1772] automation people just typically over [1774] they overexpect the value of a system [1777] like that. So I would not sell AI agents [1779] as of the current time of this video. I [1782] remember I made a template on some [1783] Upwork AI agent a little while ago and [1785] then I played around with it a bit and [1787] you know I had some promising results [1788] initially and then I continued playing [1790] around with it and then after a couple [1791] weeks I was like all right what is the [1792] actual accuracy of this I should [1794] probably tabulate how many times this [1795] has worked versus failed for me or you [1797] know how what the return on investment [1798] has actually been right and I realized [1800] that this thing has failed more often [1802] than it actually worked so immediately [1803] after I just refunded everybody that [1804] bought my agent I think a lot of people [1806] are honestly in similar positions [1807] selling this as a service too so I [1809] wouldn't do it um anyway let's talk [1810] about recruiting and candidate screening [1812] automation. So this is more of like a [1813] hiring automation. What this is is you [1815] know how earlier we had like that CRM? [1816] Well, there's also like candidate [1817] management systems basically and the [1819] idea is like you know uh HR or [1822] admin will use systems like this in [1824] order to hire people. What they are is [1826] they're basically CRM but for hires. [1828] They have stages like application form [1830] filled. They'll have another one like [1831] you know interview or pre-screening or [1834] stage three or qualified or disqualified [1837] or or whatnot. And basically you have [1839] all of these stages and these stages for [1841] the most part are filled out manually [1843] right now by the HR admin or or even [1845] like business owner if it's a small [1846] enough business. Now doing all this [1847] stuff manually and organizing all the [1848] candidates for any position it's usually [1850] like quite quite a lot of work. So what [1852] this recruiting and candidate screen [1853] automation does is it breaks these [1854] stages down and then it automates them. [1856] So what'll happen is inside of your CRM [1859] or your project management system or [1860] whatever, you will have some sort of [1862] trigger like a form fill. When the [1864] candidate fills out the form putting [1866] forth interest in the job, what you will [1869] do is you will automatically email them [1870] maybe asking for more information or [1872] something. Okay? When they fill that [1874] out, you'll pass the results to AI. [1876] Maybe AI will then do a first pass and [1878] score it out of 10 or something. Okay? [1880] Then you will use that to add them to a [1882] next stage. Then after you've add them [1884] to the next stage, there might be some [1885] human Q&A that sorts based off of people [1887] ranked, I don't know, 10, 9, and eight, [1889] and they just like ignore everything [1890] that's a seven or below. So now we've [1892] just, you know, significantly streamline [1893] the Q&A process for admins. Then maybe [1896] there's like a trigger attached to the [1898] stage change. So when the human changes [1901] the stage to the next one, maybe you [1903] send a form that asks for more questions [1907] or you send a calendar that has them [1908] book with a real human being to do an [1910] interview and and so on and so forth. [1911] So, what we're really doing here is [1913] we're just streamlining with both AI [1915] plus automation and that's all that this [1917] system really does and it's a great [1919] system. I use it for myself when I hire. [1920] I sold it to many people. Um, systems [1922] like this work really well. So, what is [1925] the revenue generation impact on this? [1927] Well, it's not direct, but if you think [1929] about it, if you can hire better people [1930] and if you can hire people faster, [1931] usually it's a better performance. Most [1933] people hire way too late. So most people [1935] will have a need and then they'll start [1937] hiring and then the hiring cycle takes [1939] weeks if not months and then they'll [1941] have a gap period of about a month or [1942] two where their needs aren't really [1943] fulfilled before the hireer gets up to [1944] speed and then the hire will you know be [1946] okay and then you know the need will be [1948] filled. What in reality most people [1949] should be doing is they should [1950] anticipate a need. They should say well [1952] I'm going to have some need in the next [1953] two weeks where I'm going to need [1954] somebody to do a bunch of admin and [1955] stuff because my business is growing so [1957] I should probably start hiring now. [1959] Right? What the system does, it [1960] minimizes the gap between when most [1962] people think about hiring and then when [1963] they actually get the hire. And it also [1965] reduces the probability, which is [1967] unfortunate it happens, where you hire a [1968] bad person, a person that doesn't [1969] actually deliver value to your [1970] organization, which you then have to let [1972] go and then you basically have to just [1973] repeat the cycle over and over and over [1974] again. Hiring is really hard. So if you [1976] can make it easier for people, there's [1977] some value in it. Usually very high cost [1979] reduction is the main thing. And then [1981] yeah, you know, automates very [1982] timeconuming aspects of recruitment. [1984] What's cool is you could actually sell [1985] this to recruiting agencies to sell to [1987] their clients and stuff like that as [1988] well. Recruiting agencies are obviously [1990] a really big niche in AI automation just [1991] because they're high volume. There's [1992] candidate opportunity, there's employer [1994] opportunity, and a lot of it's like [1996] email based, which, you know, we [1997] automate the hell out of here all day [1999] every day. But yeah, anyway, you could [2000] do some sort of initial setup plus a [2001] recurring management service. Probably [2002] the best way to do so because just like [2004] a CRM or whatever, there's a lot going [2005] on here and a lot of changes usually [2006] have to make. Um, you know, companies [2008] typically think that they know how to [2010] hire, but in my experience, they don't [2012] really know how to hire for the most [2013] part. That said, we're not seeing a [2014] direct revenue impact here because [2016] there's no direct revenue impact. It's [2017] mostly just savings. I would rank this [2018] right now as B. Okay, so we're seeing [2021] some trends here hopefully, right? The [2022] systems that you realistically want to [2024] sell and that are probably easiest to [2025] sell are ones that deliver return on [2027] investment and just like add immediate [2028] cost savings. The ones that are a little [2030] bit more iffy, you know, down here at C. [2033] They don't necessarily have as much [2034] direct or immediate impact. They're more [2035] flashy for sure, but um you know, the [2037] ones that are kind of the middle ground [2038] are things that provide some sort of [2040] revenue lift, but they don't immediately [2041] add return on investment. And then [2043] all-in-one agents are down here just [2044] because the current hype factor of this [2046] stuff is unbelievable. [2048] All right, what else we got? We are [2050] working our way through the stack. The [2052] next is a customer support ticketing [2053] automation. And this one is probably [2054] like the only one where you could [2055] actually use AI agents, I would say, to [2058] some level of of return on investment. [2060] What is customer support ticketing? You [2061] know, like normal customer ticketing is [2063] where you have people that are [2065] interacting with your team through some [2067] sort of chat form or widget or something [2069] like that saying stuff like, "Hey, I [2070] found that uh I don't really like the [2072] software platform as much." Or, "Hey, I [2074] just saw that I was build again, but I [2075] thought I canceled." or hey you know can [2077] I get a refund for XY andZ and it just [2079] it just handles most of it [2080] automatically. This could actually be [2081] somewhat valuable. Okay so you have some [2083] inquiry and you can do this through a [2084] variety of ways right like we just [2085] mentioned it could be chat it could be [2087] form it could be email whatever but [2089] usually what you do is you pass that in [2091] AI and it's like a triage agent kind of [2093] like a you know at a hospital and the AI [2094] triage just tells you where it's going [2096] to be. So you know is this a refund [2098] request? Well if it's a refund request [2100] well usually refund requests are pretty [2101] simple to process. We'll just move [2102] forward and maybe do it all [2103] automatically. Is this a complaint? your [2106] feature request. Well, you know, we're [2108] gonna send this over to the engineering [2110] team or something like that. Is this a [2112] um I don't know, is this like some some [2114] other right? Basically, a will triage [2116] and categorize it and then you'll have [2118] like purpose-built flows [2120] here to eliminate the human aspect of it [2123] or what I should say augment the human [2126] aspect of it to make things easier. [2128] Okay. Usually other is just a catchall [2130] where you actually send it like a human [2131] because you don't really know what the [2132] hell's going on. You don't want to like [2133] miss it. But um you know I'll give you a [2135] quick example of like the refund [2136] request. I mentioned this in a couple of [2137] videos, but Amazon's a really good [2138] example of this. Amazon basically has a [2141] very simple refund flow where it's like [2142] the very first thing that happens is you [2144] have a complaint about a refund. So it's [2145] like would you like a refund? You click [2147] a button. The second you click that [2148] button, okay, it triggers this flow. It [2151] says calculate how much money that [2154] they've spent with Amazon in the last I [2157] don't know 365 days. So let's say it [2161] comes out to $10,000. Then you calculate [2163] the value of the [2165] product which you know is usually just [2168] there but maybe they do some margin [2170] calculation. Then they say I don't know [2172] 50 bucks. Then you calculate all refunds [2177] sent to that customer in the last year [2179] which might be $350. Okay. And then they [2183] add product refund cost up. So that 350 [2187] is added to the 50 and the total refunds [2190] that they've requested in the last year [2191] are 400 bucks. And then what do they do? [2193] They just compare um of the $10,000 [2196] let's say that they've spent in Amazon. [2197] If they've requested less than let's say [2201] 4.5% of the total revenue as a refund, [2204] which in this case $400 is, right? $400 [2208] divided by 10,000 is um like 4%. Right? [2211] and you say, "Well, if their current [2212] refund request is less than some number [2214] that we come up with, maybe 4.5% or [2216] something like that, then automatically [2218] process a refund." So, I can't tell you [2220] how valuable simple systems like this [2222] are because refund requests probably [2224] make up like 70, I don't know, I'm just [2226] throwing numbers at the wall. May maybe [2227] like 50% of all of like the messages [2228] that Amazon will receive. If you could [2230] legitimately just automate that and then [2232] only send refund requests to a human [2234] being when the total amount of the [2237] refunds that the customer has asked for [2238] is over a certain amount and then it [2240] starts being questionable like we should [2241] probably actually look into this like [2242] this is probably maybe maybe [2243] illegitimate or you know this is [2245] actually a margin issue now then and [2246] only then by doing so you save a lot of [2248] customer hours. So this can actually be [2250] pretty valuable and agents are at the [2251] the place where they can currently do [2252] that. Okay. But when we talk revenue [2254] impact wise you don't really see an [2256] immediate revenue impact. This just a [2257] customer support ticketing agent. You [2258] have higher customer satisfaction for [2260] sure, which is valuable, right? But the [2262] higher customer satisfaction does not [2263] immediately translate over to more [2265] money. You do have retention and but [2266] it's just downstream of the the actual [2268] signup. But the main thing here is the [2270] savings, right? This these savings can [2271] be very high. You could legitimately cut [2273] off like 30% of all of your customer [2275] support staff. As you can imagine, in [2276] like a SAS business or something like [2277] this could be pretty major. Like you [2279] know if you look at most social media [2280] companies or most software companies or [2282] whatever it's really interesting because [2283] you'll have like you know 15 developers [2285] like a billion dollar business and then [2287] you'll have like 300 customer support [2289] staff members. So customer support staff [2290] is like the main payroll expense right? [2292] So something like this can actually [2293] limit a vast majority of them which is [2295] really nice. Make your business just a [2296] lot more efficient and then yeah you [2297] save a lot of time as well. Delivery [2299] model for something like this initial [2300] setup fee plus some sort of recurring [2302] management maintenance. Usually, you are [2304] justifying it with, I don't know, like [2305] if you lay off like 10 support staff [2307] because you have a system like this and [2309] you know, these people are usually paid, [2311] let's say, $2,500 a month, like you just [2314] made the business 25K, [2316] right? So, I mean, just keeping you [2318] around at like 5K a month or something, [2321] just charging 5K a month for this is [2322] already worth it. They're in the in the [2324] black by 20K. So, I can go into more [2327] detail about the specifics on this, but [2328] I'll let you guys do that on your own [2329] time. Let's rank customer support [2331] ticketing automations, shall we? [2333] I would currently consider customer [2335] support ticketing automations as [2337] Btier because again they don't have an [2339] immediate impact on revenue but they do [2340] improve things like customer [2341] satisfaction or whatnot which are pretty [2342] good. Okay, what else we got here? Looks [2345] like we got four or five more. Let's [2347] chat about the dreaded outbound voice [2349] caller. So what this is is this is [2351] usually like some sort of Vappy or well [2353] I mean there's like 10 software [2354] platforms. I'm not going to enumerate [2355] all of them but you know this is like [2356] one of those like voice agent platforms. [2359] And then what you do is you just load a [2361] script or a simple prompt. This simple [2364] prompt just says, "Hey, you are XYZ [2366] person at XYZ company. You are currently [2368] trying to sell people on this. Your [2370] first phrase should be this. After that, [2372] see what the customer has to say and [2373] then I don't know um try and sell them [2375] on some appointment or whatever." Okay, [2377] then the idea is you make a lot of [2378] money. Well, hopefully by now you guys [2381] could see why I'm skeptical about stuff [2383] like this. because if this is the first [2385] contact that you're having with a [2386] customer or maybe it's somebody that's [2387] actually warm that's actually like [2388] submitted some requests to you and [2389] you're you're giving them a call to try [2390] and like validate and collect some [2391] information. That's about as close as [2392] you can get to real money. So you know [2394] if you have real money in front of you [2395] if there's one thing you should actually [2397] uh you know spend human labor on it's [2399] like collecting the real money [2400] realistically. So I don't really think [2402] the technology is here yet for good [2403] outbound voice callers to be honest. [2404] I'll show you what people think. you [2406] know the think the revenue generation [2407] impacts really high and it is for [2409] specific use cases like I've run [2410] campaigns on this like hey for for [2412] dental camp it's free electric [2413] toothbrush really simple outbound [2414] campaign right like that that's that's [2416] actually really simple there's there's [2417] minimal customization minimal whatever [2419] hey Pete just want to let you know we [2420] have a free electric toothbrush we [2421] didn't know how else to reach you so [2423] just thought we'd drop you this [2424] automated message if you want a free [2425] electric toothbrush then just make sure [2427] to get your uh next appointment booking [2428] in by September or something like that [2430] and if you want to give us a ring just [2432] um call back at this number you could [2433] actually just drop like voicemails like [2435] this you could simple outbound voice [2436] call flows. That that's valuable, okay? [2439] But it's very specific. What most people [2440] sell outbound voice callers as right now [2443] are they sell them as like cold calling [2445] agents that will like save, you know, [2447] you'll fire your whole cold call team. [2448] And it's like, no, that isn't how it [2449] really works. Um, we're just not really [2451] there yet. So cost reduction is medium [2453] because you have some sort of SDR [2454] reduced cost for initial outreach and [2455] the time saving is supposed to be high. [2457] Um, but all this stuff comes with [2458] caveats. Hopefully you guys could tell. [2460] You'd sell this with a setup fee and you [2461] could sell a fair setup fee if you're [2463] doing something like this and then some [2464] sort of u performance based ongoing [2466] cost. Maybe you could actually tie the [2467] voice agent with some performance basis [2468] to maybe how many people accept a [2470] specific offer. Although you will have [2471] to renegotiate that offer every time you [2472] change them. And then yeah, um, right [2474] now I'd say the technical complexity of [2476] actually making this work is is pretty [2477] high because there's no real way like [2479] unless you are really fine-tuned with [2481] the prompts, unless you have like a very [2482] dedicated sales flow and unless you get [2484] like the super low latency models right [2486] now and just like optimize everything [2487] right out of the box, the likelihood [2488] that you are going to be able to [2489] outperform a human salesperson that is [2490] generating outsized revenue is pretty [2492] low. And because we're talking savings, [2493] which are a very tiny fraction of the [2495] total cost of like a very competent [2496] salesperson, usually the the return just [2498] isn't there. At least not right now. So, [2500] personally, I would rank this as C-tier [2502] right now. Okay, it's better than, you [2504] know, the all-in-one AI agents. [2506] Hopefully, you guys could see, but it's [2507] not it's not phenomenal. It's not [2508] perfect. Okay, the next system is an AI [2510] powered content creator for social [2512] media. Okay, what this is is this is [2515] usually some sort of input. There's [2517] usually a form or maybe you're scraping [2519] blogs from competitors or whatever. What [2522] you do is you feed all that into AI. And [2524] there are variety of approaches to do [2525] this. I've done like cyclic content [2526] generators. I've done oneshot content [2528] generators. I've done like idea based [2529] content generator, scraping content [2531] generators. You can find them all on my [2532] channel. I do a lot of these and then uh [2534] we have AI generate some piece of [2535] content and then we'll use um procedural [2538] workflow automation to I don't know [2540] usually post it or at least like ceue it [2541] up. The best performing implementations [2543] of this usually have a human in the loop [2545] that like they do some sort of Q&A here, [2548] some minor adjustments or whatever. As [2549] I'm sure you guys can imagine, this is [2550] like one of the main use cases of large [2551] language models right now cuz they're [2553] just like content creators, right? [2554] Content producers. The potential [2556] business impact of something like this [2558] could be quite high because you are [2559] driving some new leads assuming that the [2561] um content that you're producing is [2562] good. The cost reduction of a system [2564] like this could be medium because you're [2565] replacing certain content creation staff [2567] or freelancers. It's not all about [2569] replacing but you can think about it as [2570] instead of doing like 100% of three [2573] people's [2575] jobs. What you're doing is you're doing [2577] like 90% of like you know 10 people's [2579] jobs. Okay, this is leverage reducing [2582] the cost of labor. Okay. And then time [2584] savings can be high because there's uh [2585] typically a lot of manual work that goes [2587] into content creation and whatnot. And [2589] systems like this just eliminate 90% of [2591] it. As I mentioned before, delivery [2593] model for this would be an initial setup [2594] one-time project. You charge a fair [2596] amount of money for this especially for [2597] like content companies. I used to run a [2598] content company that scaled to 90k [2599] amount called 1second copy. And we use [2601] similar systems like this to remain very [2602] competitive and just deliver [2604] significantly higher margins than most [2606] other uh content businesses. And then um [2608] you know some sort of recurring [2608] management service to like fine-tune it. [2610] Uh you could also do an initial setup [2613] plus now that it's just coming to me [2614] some sort of like usage based. So you [2616] could also do like hey you know you want [2619] 100 blogs per month then now you pay X. [2621] You want a,000 blogs per month then you [2623] pay Y. Or you could give them caps um [2625] based off the the cost of the recurring [2627] management. Maybe 100 blogs a month, [2629] $500 a month. After that you want more. [2632] You want a,000. I'm not going to charge [2633] you 5,000. I'm going to charge you 2,500 [2635] or something. You could tear it up. [2637] Okay. Yeah. So um you know the technical [2640] complexity of this stuff can be pretty [2641] mo uh pretty chunky I will say depending [2644] on the platforms that you're posting to [2645] some of them like Facebook, Instagram [2647] and stuff have these like graph APIs [2649] which are just a massive pain in the ass [2650] to deal with. Obviously once you figure [2651] anything out it stops being that hard [2653] but just wanted to point that out. So I [2655] guess the question is where would I rank [2656] this puppy? Well as of the time of this [2658] recording I would not rank this S tier [2660] anymore. I would rank this as a tier. [2663] And the reason why is this is just a [2664] little bit divorced from actual I mean [2666] you know companies that actually [2667] generate leads through inbound will [2668] obviously benefit from this but um the [2671] value of AI content has gone down quite [2673] dramatically over the course of the last [2674] couple years just because people now [2675] have access to basically like wizard [2678] like godlike intelligence in their [2679] pocket at any point in time. So you know [2681] anybody can just ask a question about [2682] any subject nowadays and get like [2684] probably a good enough or high highish [2686] quality answer similar to what you would [2687] get on a blog. So I don't really think [2689] like written content and stuff like that [2690] is really all that valuable. And um I [2693] have another system here called SEO AI [2694] content producers. Uh the first one was [2696] for social media posting. This one is [2698] more for like blogs and stuff like that, [2699] but just for brevity sake, I'm just [2701] going to rank this one there as well. [2702] The two system implementations are a [2704] little bit different. I've done a lot of [2705] these on my channel though, so I'll let [2706] you guys check them out. But basically, [2707] the system just does the same thing. It [2709] just doesn't post it on social media, [2710] post it on your website or whatnot [2712] instead. So, you know, WordPress instead [2713] of Facebook graph API. Okay. All right. [2715] The last system I want to talk about is [2716] probably my favorite right now. A shame [2718] I left it for the end, huh? It's this [2719] deep personalization cold outreach [2721] system. What this is is, and this works [2723] really well when a company's already [2724] sending cold emails, is they're sending [2726] cold emails and they're getting kind of [2727] like mid reply rates, you know, and it's [2729] like it works. You scale it up, they [2730] make money, but it's not very good. What [2732] this depersonalization cold outreach [2734] system is is before they send the cold [2736] emails. Okay, this researches the [2739] prospect, hits all their social media [2741] platforms or the ones that are relevant [2743] anyway. Google searches them. Hell, you [2746] can even have this like watch or [2747] transcribe podcast the person has been [2749] in and so on and so forth. Then it feeds [2750] all that information in to the cold [2753] emails. Then it personalizes it using [2755] AI. And now instead of it just being a [2758] cold email with a 2 to 3% reply rate, [2760] actually significantly improve that. [2761] You'd have like a 5% to a 10% reply rate [2764] because the people on the other end of [2766] the line don't feel like they're being [2767] sold to necessarily. They're feeling [2768] like there's a bit of serendipity here. [2769] They feel like you've actually like sat [2770] down, done a ton of research on them, [2772] and crafted an offer that's perfect or [2773] right for them. So, I mean, if you think [2775] about it, if we if we just went 2% to [2777] 10%, we've just 5xed the bottom line, [2780] right? Or 5x topline, I should say. [2782] That's massive, massive return on [2783] investment. So, this system is really, [2785] really, really popping right now. [2787] Everybody that's making money with cold [2788] email is is is now employing and [2790] implementing some level of [2791] personalization. Some of it is very deep [2792] personalization. Some of it's not so [2794] deep, but we'll just bundle all them [2795] together. Revenue generation impact of [2797] this is very high. Significantly [2799] improves the cold outreach [2800] effectiveness. Your replies are going to [2801] shoot through the roof if you do a good [2802] job with this stuff. The cost reduction [2804] on this is medium just because it [2806] reduces time spent on manual research. [2807] If your team was already sending a bunch [2809] of like super personalized emails, then [2810] yeah, this is going to save you a lot of [2811] time and energy. If not, if they were [2813] just sending like blanket blast cold [2814] emails, then obviously it's not going to [2815] save that much. It's going to cost you a [2817] little bit more probably. And then um [2818] time savings are very high, right? [2820] Prohibitively timeconuming to [2822] personalize a thousand emails a day. [2824] Delivery model for this initial setup [2825] ongoing management. I uh missed one [2828] more I would personally do. some sort of [2834] performance basis because this is where [2836] you make real money nowadays. Oops, [2839] sorry about [2840] that. Okay, where you have an initial [2843] setup of the project. You might charge [2844] them, I don't know, two just 2K to set [2845] up a system that that scaffolds this. [2847] Then you charge them, I don't know, like [2848] a like a 1k a month fee, something [2850] really really low. And then you'd have [2852] some performance basis thing where, hey, [2854] every time I book you a meeting using [2855] this depersonalization system, you pay [2857] me 150 bucks. Okay? Then you book 100 [2860] meetings in a month, okay? which [2862] hopefully they're prepared for and they [2863] can handle. Well, now you've just made [2865] 15K plus the 1K, you made 16K. The [2868] overall cost and risk from the customer [2870] perspective is pretty low risk, right? I [2872] mean, it's $1,000. $1,000 means [2874] different things to different people [2875] obviously. Um, but um, you know, like [2878] uh, you can generate a [2880] significance basis here um, versus the [2883] the ongoing management fees. And that's [2884] usually what I do because the deep [2885] personalization system is very new. It's [2887] obviously very popping. Not a lot of [2888] people are fully understand how to [2889] implement something like that in their [2890] companies yet. The technical complexity [2892] of something like this is pretty high I [2893] would say um because you need to [2894] understand like cold email in order to [2896] do it right. Like a big part of this and [2898] one thing that I'm seeing people kind of [2899] really struggle with is like your [2901] ability to succeed in cold email is [2902] actually not as much about the system. [2904] It's more about like your ability to [2905] write copy, the ability to hit pain [2907] points and the ability to like make the [2909] copy seem very customized and [2910] personalized. And you can't just offload [2912] all of that to AI. You do need to know [2913] what you're doing and you do need to [2915] like know the game of cold email. So if [2917] you really want to make this work well, [2918] you know, ideally you'd have some sort [2919] of background in cold email or you would [2920] have at least been sending cold emails [2922] for a few months by that point. This [2924] market readiness is is massive. It is [2926] very high and there's a lot of demand, [2927] especially in companies that are already [2928] using cold email. So pause the video. [2931] Where do you think I'm going to rate [2931] this [2933] puppy? If you guys said S tier, you are [2936] 100% [2937] right. Okay. All right. Zooming out. Do [2939] I have any other systems? Nope. Believe [2941] I got them [2943] all. Cool. I did. Absolutely. These are [2945] the 15 major systems that I'm seeing [2947] people sell right now. Hopefully, you [2949] guys understand my mindset and thought [2950] process behind how I ranked all of [2952] these. I think I I'm now coaching [2954] something like 2,600 people across both [2956] of my major communities, maker school [2958] and makemoneywithmake.com. So, I see [2960] people sell stuff like this every day. [2961] There are over 2,000 people actively [2963] selling products like this every single [2964] day. And this is for the most part like [2966] a pretty wide breadth of most of the [2969] systems that people are probably putting [2970] together. Are there other systems people [2972] are probably selling today? Yeah, for [2973] sure. Don't get me wrong. But do I think [2974] that those systems are probably just [2976] variants of these systems? Yeah, I also [2977] do. So hopefully this gives you guys an [2979] exhaustive look at all of the things [2980] that you guys can sell and why you might [2983] want to sell stuff like this a lot more [2987] than, you know, stuff like this. Okay, [2990] I'm realizing I didn't rank anything as [2992] D or anything as F, but I think that's [2995] because these are all conceptually very [2996] similar. Um, and you know, all in one [2998] age. It's just ain't it, dog. There's [3000] one thing you take away from this video [3001] is that they just ain't it yet. you [3002] know, focus on making a little bit of [3004] money with um these systems first. It's [3006] a lot easier. There's like a multiplier, [3007] right? It's probably like five times [3009] easier to sell these. It's three times [3010] easier to sell these. Probably two times [3012] easier to sell these. It's probably some [3014] like middling difficulty to sell these, [3016] then it's probably like five times [3018] easier to sell these, but these actually [3019] like really screw with the client, don't [3021] actually deliver return. So, that's my [3022] mindset there. You guys like this sort [3024] of stuff, you guys want to see other [3025] systems that people are selling or get [3026] actual templates and blueprints and all [3028] this stuff, definitely check out Maker [3029] School where it's a day-by-day [3030] accountability program that I use to [3032] walk you through everything, including a [3034] broken down list of steps on day 1, day [3037] 2, day three, all the way up to six full [3039] months of daily actionables on exactly [3041] what to do in order to get your first, [3043] second, third, and nth automation [3044] customer. If you guys are already [3046] running successful and profitable [3048] businesses, whether they're in [3049] automation or in other niches, and you [3050] guys want to look at how to scale that [3051] using AI and automation standardization [3053] or productization tools, definitely [3055] check out makemoneywithmake.com. It's [3056] the premier automation community that is [3058] currently capped at 500 that I launched [3060] about a year ago and that has tons of [3061] people making seven and eight figures. [3063] So, great network, great group of [3064] people. I do weekly office hours, so I [3066] answer all your questions live and we do [3067] live coaching. Finally, if you guys made [3069] it all the way to the end of the video [3070] and listened to me advertise the last [3072] two products, then you're real ones. [3074] Thank you very much for always doing [3075] that. And if you could like, subscribe, [3077] get me to the top of the algo, I will [3078] catch youall on the next video.

Video: https://www.youtube.com/watch?v=wLNw-rpklfE
Title: Watch Me Start & Sell an AI Service in 10 Hours
[0] Today, I'm going to start an AI [1] automation service completely from [3] scratch and build out all of the [4] infrastructure that you need in order to [6] get your very first paying client using [8] this business model. I'm going to whip [10] up the offers. I'm going to do the [11] copywriting. I'm going to talk templates [13] and blueprints. And I'm going to do it [14] all live in front of you all the way up [16] to getting my very first interested [18] party on a call. And the reason why I'm [19] doing this is cuz I just want to show [20] you guys how accessible this business [22] model is. So you guys have everything [23] that you need. Basically like a copy [25] paste playbook to get up and writing [26] yourself. In a nutshell, this is what we [28] are going to do today. We're going to [29] start by finding and choosing a high [31] demand AI service the clients are pretty [33] desperate for right now. I'm then going [35] to set up my lead scraping and outreach [36] infrastructure in just a few minutes. [38] Then I'm going to create an irresistible [40] offer that practically sells itself. I'm [42] going to generate qualified leads using [44] two proven methods that cost very little [45] in the grand scheme of things. And then [47] finally, I'm going to generate my very [48] first interested leads using these [50] methods. So, doesn't need to be scary, [52] doesn't need to be intimidating. I'm [53] going to give you guys everything you [54] need. Let's get started and make some [55] freaking money. Okay, this is going to [57] be the document. and I'll do everything [59] off of. And this is the road map. I'm [61] going to start by picking three niches [63] and I'm going to determine two high [64] demand AI services per niche to solve [67] real client problems in them. I'll even [68] show you how I do a little bit of [69] research. After that, we're going to set [71] up lead scraping and outreach [73] infrastructure. This is a pain point for [74] a lot of people that are watching this [76] video. So, I'm looking forward to [76] solving that. Then, we're going to [78] create an irresistible offer using a [79] simple copyrightiting formula that I've [80] talked about, but I don't think a lot of [82] people have seen. Then, we're going to [83] actually generate real qualified leads. [85] Then we'll chat in next steps how to [86] actually, you know, like send a proposal [87] and and close the deal and so on and so [89] forth. Okay. So, you're going to see [91] everything in this video from start to [93] finish. I've named this watch me start [94] and sell an ASA service in just X hours. [96] I don't know what the X is yet cuz I [98] decided to record it before I did all [99] the stuff, which I think is the best way [100] to do it. So, let's get up and running [102] with just the very first step, which is [104] picking three niches. So, I'm going to [106] be relying on some of the templates in [107] Maker School, which is my automation [109] community, which basically just covers [111] how to do all this stuff. So, the very [112] first thing I'm going to do is go over [114] to month one and then I'm just going to [115] find some niches. Okay. So, what I do in [118] day two is um I have a little document [120] over here called the niche discovery [121] spreadsheet. And what this document is [123] is it's literally just a bunch of [125] possible niches that you could pick for [127] this business model. Then a bunch of [128] different service lines that I could [130] pick for this business model. Then I [131] literally just mash them together to [132] give you a ton of different positioning [134] statements. And a positioning statement [135] is just what I call something of the [137] form I build X for Y. So X is the thing [140] that we build and then Y is the business [142] type that we are approaching. Okay. So I [144] don't actually know what niches I'm [145] going to pick yet. The reason why I [147] haven't thought about this is because I [148] wanted to put myself in as similar a [149] position to as many of you as possible. [151] So I'm just going to do a little bit of [152] brainstorming out loud and maybe we'll [154] cut it so it's not just me staring off [155] into the void. When I'm thinking niches, [157] I'm thinking digital businesses that I [160] can source leads for very easily using [162] automated methods. I'm also looking for [164] businesses that have pain points that [166] I'm pretty good at solving. And so [167] historically, one of the main strengths [168] that I have is like marketing, lead [170] genen, growth for the most part. So I'm [172] probably looking for businesses that I [174] can realistically help with their [175] growth. So there are a variety of [177] different business types here that I [179] think that I might have some prior [180] experience with. I might have some sort [181] of unique understanding of. And what [182] I'll do here is I'll just I'll just pick [184] a bunch. Hello to the anonymous panda [186] that is currently on this page with me. [188] So like I think website developers are [190] okay. I'm also looking for niches that [191] have money to spend, right? So I could [192] do some sort of like website development [194] agency. One niche that I've tackled [195] before and I've had reasonable success [197] with is the creative agency. And some [198] creative agencies do website [199] development. So, why don't I bold this? [201] I could do sales with uh website [202] developers actually, which is nice. Let [204] me scroll through here and see more. Hm. [206] IT consultants, e-learning consultants. [208] H just trying to get some ideas here. [209] You know, maybe I'll do video editing [211] agencies as well cuz I've actually [212] worked in video editing. So, I sort of [214] have like some unique understanding of [215] the problems that they face. And then h [217] let's see here. I want to keep this [219] pretty easy and pretty fast. I don't [221] really want to spend too much time [222] thinking about the niches. is I just [223] want to get the 8020 in front of me and [224] then I'll move forward. Probably do some [226] content writing firms as well. No, I I [228] don't think I want to do content writing [229] firms cuz then I'd have two that I've [230] run before. I've run a video editing [232] agency and a content writing agency [233] before. I don't want anybody to accuse [234] me or I want to beat the allegations [235] that I'm just doing businesses that I've [237] already operated. So, let me think what [239] else we got. Why don't we do real estate [241] agents? A lot of people chatting about [243] real estate agents now. That looks [244] pretty good. Okay, so website [246] development. I'll do video editing and [248] then I'll do real estate. Okay, so I'm [249] going to head back over here. I'm going [250] to have my three niches laid out. We are [253] going to do website agencies. So, I [254] might just do creative to be honest. A [256] creative agency might be a better way to [258] conceptualize this, but we'll see. I'm [259] just going to put this down for now and [261] then we'll figure it out later. Then [262] we're going to do video I'll just say [264] video editors for now plus real estate. [267] Okay, that seems pretty easy to me. We [269] got three niches. We can actually [271] already move on to the next step. And [273] the next step is us going to be [275] determining two high demand AI services [277] per niche that solve real client [279] problems. Okay, so this is another step [281] where a lot of people get kind of caught [283] up. They don't really know how to go [284] about actually determining what services [286] to sell to people, and that's totally [287] okay. I don't have any like built-in [288] resources for this, but what I'm going [289] to do is just show you a simple [290] framework that I always use when, you [292] know, trying to figure this stuff out. [293] So, assuming that I had no knowledge of [294] website agencies and video editing and [296] real estate. How would I go about [297] actually getting it? Well, I would [299] probably first turn to communities or [301] Reddit threads or basically areas on the [304] internet where a bunch of the people in [305] these three niches congregate. So, what [307] I'm going to do is I'm just going to [308] find some communities where I've seen [310] website agencies go in. Maybe like a [311] website developer community or something [313] like that. I'm going to join a bunch and [314] then I'm just going to read top to [315] bottom and see what some of the problems [316] that they face are. So, I'm going to [317] head over to [319] school.com/discovery. School is just the [320] main community platform right now. So, [322] I'm just going to go here and then I'll [323] type in website and let's see. Looks [325] like getting tons of abs. So, I think [327] the term website is probably not the [328] term that I want to use. I imagine [330] website is just like a general purpose [332] term that like everybody has somewhere [333] on their page and the search feature [334] here is just pulling them up. like a [336] website developer maybe. Okay. Software [337] developer academy. Dev builders club. [340] There's the AI automation agency hub. [342] That's actually uh basically what we're [343] talking about. So I'm not going to do [344] that. Web agency accelerator. You see [346] this? This looks perfect. This is [347] exactly the sort of stuff that we want. [348] Awesome. What else? Web designers [351] collective. That's perfect. Exactly what [353] we're looking [354] for. Cyber value. No. Real estate [358] developer. Not yet. Software engineering [360] accelerator. Next level web design. Oh, [362] this looks good. I'm looking for stuff [364] that has to do with business, right? [365] Like I don't just want a bunch of people [367] building websites or whatnot. I want [368] people selling stuff so that I could see [370] what their problems are. Okay. But [371] anyway, what do we got? So, it looks [373] like one of these communities actually [375] just allows us to read through all the [376] posts without actually being part of it. [377] So, what I'm going to do here is I'm [378] just going to read through this and then [379] I'll make my determinations afterwards. [381] So, what am I looking for first and [382] foremost? Well, first of all, actually, [383] I am looking for wins post. So, it looks [385] like there's a category called wins [386] where this guy Tyler just sent 900 cold [387] DMs in the last two days and closed two [389] deals. That's pretty sweet. So, I like [390] that. Looks like he's also using [391] automation, which is very cool. Nice. [393] There's a lot of questions about prices. [394] What sort of price should I charge? [396] Right? What platforms am I using? So, [398] what I'm looking for really to be honest [399] is I'm looking for I'm looking for [400] questions. So, I see that there's a [402] questions category. I'm just going to [403] pump through here. And I'm looking for [404] questions cuz I want to see what sort of [405] questions that like the average website [407] developer has. And this is just going to [408] teach me more about the niche. I'm going [410] to learn more about how to come up with [411] a service that might effectively answer [413] some of these problems. So, what's a big [414] question I see? How do I find clients? [416] Obviously. How to get clients? [417] Obviously. How to get hired? Obviously. [420] Agency versus freelancing. That's [421] interesting. What sorts of clients [422] should I pick? National, international, [424] different platforms. How did you get [426] your first client? That's big. How to [429] acquire new clients. So, hopefully you [431] guys are seeing that, you know, one of [432] the main issues here is acquiring your [433] new clients. And so, like a big problem [435] statement first of all, and this [436] honestly, you know, really got to be a [438] rocket scientist to figure this out, but [439] like some real client problems are [441] basically all these niche are more [443] clients. Okay? So, actually, let's frame [444] this as a problem. Not enough clients. [448] You know, we want more clients. That's [449] problem number one across basically [451] every niche. So that's a good problem [453] that we could solve with a couple [454] systems already that are coming to mind. [455] But I'm not going to stop there. Let me [457] do a little bit more research. [458] Outsourcing got too many clients doesn't [460] seem like a very common issue to me. [462] Legal registration. Go highle website. [465] People asking about specific design [466] stuff. Very cool to niche down or not. [469] SEO. SEO is cool. We could do like an [471] SEO system. We could do some sort of [473] like add-on for website developers. It's [474] like, hey, you know, after you design a [476] or build a website, you could also just [477] like generate 100 blog posts for them [479] completely free of charge or something [481] like that. That's kind of cool. I like [482] that. I like that idea a lot. I think [485] that could have some merit, you know, [486] like content generation for clients, [490] right? Clients saying SEO. Yeah, really [492] glad I found that. Was not expecting [494] this at all. Let's just do website devs [496] first and then I'll do the other ones. [497] Okay, so obviously a little bit of [499] business knowledge helps you do this [500] faster, kind of understand the main [502] problems that customers are suffering [503] from. But I'll be honest, a lot of [505] people have tried to automate this step. [506] I think that automating the steps is [507] probably the silliest thing that you [508] could do. Like you actually [510] understanding a customer problem is [511] directly correlated with your success as [512] a business owner. Like if I think about [514] just the number one skill or handful of [516] maybe top three skills that have made me [518] a successful business owner, the biggest [519] one is probably just understanding [521] customer problems. Like reading through [523] people bitching and moaning about their [525] customer problems and stuff like that. [526] So this is not something that I would [527] automate. Like sure, maybe I'd ask chat [529] GPT what are some problems businesses [530] face? But I, you know, I wouldn't just [531] take all that at face value. I'd [532] actually go really deep. I'd actually [534] like try and drink directly from the [535] faucet if that makes sense as opposed to [537] take some opinion or whatnot. Go and [539] actually find problems that people are [540] facing. So anyway, I found two, right? [541] We found um not enough clients content [543] generation for clients, SEO or whatever. [545] That's good enough. I'm going to move on [546] to the next niche, which is video [547] editors. I'm just going to type in [548] video. This is interesting. We'll open [550] up that [551] one. Scale with video. That's [553] interesting. Educate with video. Hm. Get [555] started with video. Maybe maybe we'll go [560] editing. Editing lab. Editing layer. [563] [Music] [565] Edology. Short form training. Can I type [567] in videography? How about that? That's [570] cool. Wedding filmmaker. I guess you got [571] to pay a,000 bucks for that. So, I think [573] I'll leave that out for now. Wealthy [574] filmmakers. Cool. That sounds good. All [576] right. Let me just see how many of these [577] I have direct access to right off the [579] top. Looks like I only have one. Art FX. [580] The rest of these I got to click a join [581] button. So, just for the purposes of [583] brevity, I'll just go through here and [584] we'll start. So, everybody's talking [585] about cold outreach again. That's cool. [588] Looks like most of this community is [589] this person Arthur just posting. So, [591] this is not seeming like a very good [592] community to start if I'm honest. [594] Usually, you'll find that like some of [595] these are just people's business models. [596] They're like building a funnel. Okay, so [598] some people are actually asking for [599] videographers in specific areas. Okay, [601] people are asking some pretty basic [602] questions. People are advertising. I got [604] fired from working with Gary Vee at [606] Vayner Media. Wow, that's interesting. [607] Okay, so color grading presets. That [608] sounds like a pretty interesting [609] problem. So, a lot of people want [610] templates, out of the box templates and [612] stuff, right? I wonder if I could solve [613] that with automation. What are the [614] simplest templates to get or whatnot? [616] Hey, I'm a automation agency. I work [619] specifically with video editors, and I [622] wanted to give you a big list of all the [624] best LUTs and templates and stuff right [625] out of the box. That might work. I'm not [628] entirely sure. People are posting their [630] videos. I'm not seeing too many problems [632] here. Okay, so I'm not seeing much [633] success here. I'm just going to go to [634] Reddit video editor subreddit. Let's try [637] that. See, there's video editing here. [639] There's editors, there's video editors, [640] video editing requests. Let me just jump [642] through this really quickly. See what we [644] got. I'm really outing my uh myself [647] here. LeBlanc [648] [Laughter] [650] mains. [651] Yep. Been crushing some League. I'm just [654] going to go to top really quickly. Just [656] see top post for today. Alt tab all [658] these. People are looking for specific [660] help. This looks more technical. [661] Probably not what I'm going for. Let's [663] move on. This looks more like almost [665] political. Ah, here we go. Video [667] editors. This is like a smaller [669] community about video editing. Longtime [670] editor struggling to find freelance [672] clients. Let's um open up this thread, [673] read a little bit. Think I'm doing so [676] much wrong. Cool. Let's see what this [678] person's worried about. Obviously, there [681] are a few people that are just talking [683] shop and how do you make a living? [685] That's that's a great question. Cool. We [687] should be able to get some juice here. [688] Help with my [690] portfolio. Okay. [693] H full-time position. Finding clients [695] has never been my forte. [698] It's a rap. This person's just talking [700] about how tough it is. That's actually [702] pretty good though because when you have [704] really negative nancies like this, it a [705] lot of the time like shows the fears [707] that the niche is facing. Even TV, it's [709] over because of automation. Well, that's [710] unnecessary. I make a living with this. [713] Yep. No jobs right now. Okay. Well, that [715] one is obviously not enough clients. [717] That's the main one. What you'll see is [718] they're all kind of together, right? I [720] mean, I already know that this is a [721] major problem for real estate, so I'll [722] just write not enough clients as well. [723] Just insanely clear. All right. Well, [725] yeah, that's all I got for video [726] editing. If you joined all of these [728] communities, kind of went really deep [730] into them, I'm sure you'd find [731] significantly more concrete problems. [733] Let's now do real estate. Your real [735] estate agents, global real estate [737] agents, that looks great. Real estate, [738] that's $999 a month. Probably not going [740] to work for me. Let's um just filter [742] this. So, for English, I don't think we [744] can filter by free, can we? No. Okay. [747] Another issue I'm seeing is busy work. [749] When I say busy work here, I mean kind [751] of mundane things like following up. A [753] lot of the time, real estate agents, [754] they make their money just by being in [756] front of people enough like at the right [758] times that when somebody or somebody [760] that they know is interested in buying [761] or selling a property or something, it's [762] like, oh, you know, I just remember [763] hearing about XYZ person 2 days ago. Let [765] me send them a message. So, I think [767] following up is probably a big problem [768] point and just basic busy work and [770] whatnot. I could probably come up with [771] some systems to solve that. All right. [773] So, as you guys can see, uh, am I like a [775] rocket surgeon here, you know, niching [777] super hard down into the specific issues [779] that these guys are facing right off the [780] get-go? No. I don't need to have the [782] best problems right off the bat. What [784] I'm going to do is I'm going to start [785] talking to customers. I'll worry about [786] figuring out like the nuanced natures of [788] all these problems afterwards. Okay, [790] we're just going to frontload the actual [791] conversations with the business owners. [793] We'll worry about everything after we're [794] already up and running. So, this is [796] sufficient for me. Okay. Now, after [797] this, I'm going to have to come up with [798] some high demand AI services. Now, you [800] know, I have the problems. So, why don't [802] I just list some services at the top of [803] my head that I think could solve things. [805] Okay. So, we'll have three categories. [807] And I'm just going to aim for two [808] services each. And they don't [809] necessarily have to solve these problems [810] one for one. We'll just come up with two [812] each for three. So like let's just do [814] website [815] devs/creative agencies. All right. So [818] the first major problem as we saw was [820] not enough clients, right? So the not [822] enough clients is the main problem. [824] Well, what's the solution to not enough [825] clients? Well, one of the simplest [827] things that I sell all the time is cold [829] outreach system. A variety of different [831] cold outreach systems you could sell, [833] but I don't even know what the shape of [834] this is going to look like. I'm just [835] going to get some cold outreach systems [837] in front of my customers and I'll worry [839] about exactly how to do it afterwards. [842] Okay. But yeah, cold outreach systems [843] are really big. When I say cold outreach [845] systems, I just mean like scraping [846] systems, email systems, systems that [848] allow us to pump things into like a cold [850] email platform. Basically, the same [852] system I'm going to be building to get [853] myself clients and then pitching that to [854] other people. So, very meta, very much [856] like using cold outreach to sell cold [858] outreach for people, but it works really [859] well. Next one is content generation for [861] clients. So, I could absolutely see, you [862] know, some instant content generation [864] system for the websites that you just [866] make for a client. Like, think about [867] this. How cool it would be if it's like [869] you already make websites as part of [870] your whole thing. Imagine if you just [871] had a single form or like a button that [873] you could press or something that just [874] immediately generated you 100 blog [876] posts. And then you just took that added [877] that to your client website and you [879] said, "Hey, by the way, I already loaded [880] this up with 100 blog posts for you, [881] right? To simulate activity or whatnot." [883] Very simple and easy add-on, which I [885] think would uh probably be pretty cool [886] and I'm interested in seeing how I how I [887] might solve that. So, these look [888] sufficient for me. I'm not going to [889] think too hard on it. What we need to do [891] after this is transform this into like [892] an offer for cold email, but that's [893] okay. Let's do the second niche now, [894] which is videography. This might take me [896] a little bit more time, but let's say [898] right off the bat, I'm just going to [899] sell cold outreach systems to these as [901] well because we just saw how do we get [902] clients? How do we get clients? We can't [903] get clients. Clients don't exist. Uh, [905] you know, this whole business model is [906] dead. So, I probably sell some cold [907] outreach systems to them, too. These [908] cold outreach systems in particular will [910] take a different approach than website [911] devs, though. It's going to look a [912] little bit different. I think we could [913] probably do like a search intent system, [914] which is like a job scraper, basically. [917] So, you know, we'll scrape a bunch of [918] jobs for people that are looking for a [919] videographer to become in in-house and [921] then we're just going to add them to [922] some system and then we'll send them out [923] to people that are hiring for that role. [925] We're basically going to say, "Hey, I [926] know you're looking for somebody to hire [927] for X, Y, and Z role. I thought it'd be [928] a little proactive, so I'm actually just [929] going to send you a bunch of value right [931] up front. I'm happy to do like a sample [932] edit for you or something like that. [934] 100% free. Just send me over source [936] material what you want and I'll whip it [937] up for you within 24 hours." This would [938] be a really good cold outreach system. [940] I've seen a lot of people do something [941] so that's actually how one of my video [942] editors sold me. Okay, so what else are [944] we going to do? Hm. Videography. [945] Videography. videography. We could [947] probably sell clipping. So, I see a lot [949] of long form videos coming in. What we [951] could do is we could offer videographers [953] a way to very quickly and easily clip or [955] maybe they upload the transcript of the [957] video to my service and then my service [960] automatically identifies timestamps. [962] What else do video editors usually do? [963] Hm. Exports. That's a big chunk of their [966] workflow. Templates and whatnot. That's [968] a big issue. I really like the idea of a [969] clipping service for long form. Let's [971] say a video editor is working with [973] somebody for long form. You could very [974] quickly and easily repurpose all that [975] and make social media posts for them. So [977] we'll either do clipping service. A [980] clipping service is literally just [981] something like Opus clip or V or [984] Goldcast. What these are are you [986] basically chunk in like a long video and [989] then it just generates a bunch of short [990] form ones. Same thing with V. Pump in a [992] long video generates a bunch of short [994] forms one ones. Same thing with Opus, [995] right? Pump in a long one makes a bunch [997] of clips like this automatically. So [999] that's pretty cool. Um there's obviously [1000] a lot of value there. So I think we [1002] should probably do something like that. [1003] clipping service and or let's do like a [1006] content generation or maybe we make a [1008] bunch of Instagram posts or something [1009] about it. Okay, now let's do real [1010] estate. And what did we have? We had not [1011] enough clients. So, we could totally do [1013] some sort of email scaleup system. This [1016] is going to depend. Real estate's a [1017] little nuanced, right? There's like the [1018] buy side, there's the sell side. So, I [1019] might be selling a buy side system, but [1021] then that'll have like a fundamentally [1022] different meaning or purpose than a [1023] sellside system. If you think about it, [1025] a sellside system is basically like how [1026] do we get listings in front of as many [1028] people as possible. So, we could build a [1029] system that like, I don't know, [1030] automatically post it on a bunch of real [1032] estate agency websites or whatnot. Uh, [1034] that seems kind of lame to me, and I [1035] don't really think I could realistically [1036] do that in a short period of time. So, [1038] we could look for people to sell homes. [1040] Maybe what we do is we set up a pipeline [1042] for real estate agents that are looking [1044] to work with people on the sell side, [1046] and then all they do is they just supply [1048] the leads and then this system, you [1050] know, has really high response rates, [1051] and everything's like super high [1052] quality. I I think probably some sort of [1054] like email BTOC system would make sense. [1057] I don't know about sourcing the leads, [1058] but sending them out. And then I think [1060] we could probably do some sort of [1062] automated [1064] followup/reactivation system for them. [1066] Again, I'm just these are all off the [1067] top of my head. We're going to see how [1068] these evolve. But as a first pass, that [1070] looks pretty good to me. Do I know [1072] exactly how all this stuff's going to [1073] end up? Nope. I am just pulling some [1074] stuff out of my ass. I'm like pretty [1076] certain. I'm like 50 to 70% certain. [1077] Yeah, I think this might have some value [1078] for some people. That's enough for me. [1080] I'm just going to put it on the page, [1081] put together some offers, send it out to [1082] a bunch of people, and I'm going to hear [1083] their feedback first before I try and [1085] plan uh for every eventuality. Okay. All [1087] right. So, now that we have a bunch of [1088] these systems, what I'm going to do is [1089] I'm going to set up lead scraping and [1090] outreach infrastructure that I'm going [1092] to use to source people in all of these [1093] audiences. Then once I've done this, I'm [1095] actually going to go and I'm going to [1096] copyright and then start sending out or [1097] blasting out outreach. So, we're [1099] actually getting pretty far already and [1100] I think it's only been what, like 25 or [1102] 30 minutes or something. Pretty simple, [1103] pretty straightforward. So, setting up [1104] lead scraping and outreach [1105] infrastructure. Well, there are variety [1107] of different ways to do this. Here's [1108] what I'm thinking of doing. Okay, just [1110] going to go all the way down here to [1111] make it a lot easier. What I'm thinking [1113] of doing is any sort of lead scraping or [1115] sourcing system is first we have to [1116] source leads. Then we have to scrape the [1119] leads. And then nowadays what we need to [1120] do is we also need to enrich the leads [1122] with some sort of personalization. Okay? [1123] So it's sort of like a three-step [1124] process. So what I'm going to do since [1126] I'm doing cold outbound is I'm going to [1127] start by sourcing leads. And there are a [1129] variety of different ways to source. [1130] Easiest one is definitely Apollo right [1131] now. And I don't know how long Apollo is [1133] going to work. So I'm just going to hop [1134] on that for sure. But you could also do [1135] like sales nav which is LinkedIn sales [1137] navigator. You could also do like job [1139] posts. That's pretty big. A lot of [1140] people doing job posts. After that, you [1142] scrape using a service usually like [1143] Amplify or some custom scraper you [1145] built. By the way, you could also do [1146] like a directory or something if you [1148] find a specific directory of people. [1150] Maybe a directory website. You could [1151] build your own custom scraper, scrape [1153] them, and your lead list would be way [1154] higher. But we're going to scrape these [1155] using Appify. And then at the end, I'm [1157] just going to enrich these. The way I'm [1158] going to enrich them is I'll probably [1159] like AI personalize, but I'm not going [1160] to AI personalize all of them. I'm [1162] actually going to just like try getting [1163] by with, you know, procedural variables [1166] and then AI personalization after. And [1168] then kind of the first step is we need [1169] to pump them into like infrastructure. [1171] we actually need to send, right? So, the [1172] main sender that I'm going to be using [1173] today is called Instantly. Instantly is [1175] just a very quick and easy way to get up [1176] and running with mailbox infrastructure. [1178] What I'm going to do is I'm going to [1179] source a bunch of leads, scrape them, [1180] and then enrich them first. That's kind [1182] of like, you know, what we're going to [1182] do now. Then in a few minutes, um after [1184] I'm done with that, I'm going to start [1185] uploading them to a platform instantly. [1187] And then after I'm done with that, I'll [1189] actually queue them up and we'll start [1190] sending the emails. Okay. All right. So, [1191] very first thing I'm going to do is I [1193] need to start sourcing leads. I see [1194] there are a variety of ways to do so. [1196] I'm probably just going to do Apollo cuz [1197] that seems pretty easy to me. Maybe I'll [1198] do job post, too. We'll see. But how [1199] would I go about this? I would actually [1201] just go Apollo.io. I'm just going to [1203] create three audiences here. First are [1205] going to be website development agencies [1207] or creative agencies. The second are [1208] going to be videographers and the third [1210] are going to be real estate agencies. [1212] You can see, you know, I work with [1213] creative agencies a lot, which is why I [1214] literally pumped in the search term. [1215] This is from the last time I ran a [1216] similar search. So, creative agencies [1218] sound pretty good to me. Um, maybe what [1220] we should do is we should have creative [1221] agency and then we could also add a term [1223] website here. Yeah, I could probably do [1225] that. I wonder if I type in creative [1226] agency and website. Maybe like website [1229] developer. Wonder if that would work. [1231] Maybe website agency cuz that's only 51 [1234] people. Let's see. That's 54 people. [1236] H. Anything else that's limiting my [1239] search? How am I going to do this? I [1241] just type in website. We have 581, which [1243] is pretty cool. But as you see, a lot of [1245] these search results are like music [1247] website, outsource website, website [1249] factory. If I type in agency, what [1252] happens? If I type in agency, we have [1253] 24,200. [1255] connective agency, MI6 agency, labeled [1257] agency. I wonder if we could add an [1260] additional [1262] filter. No, I don't want to generate an [1265] output for each record. Let me see here [1268] exactly what I would do. Keywords I [1270] would use website. So now I should be [1273] scraping agencies or co-founders, [1276] partners at agencies that include the [1280] term website. And so now I have multiple [1282] levels here. Now, what I'm going to do [1284] just to determine that this is pretty [1285] good, and we're never going to get a [1286] perfect scrape or a perfect data source. [1288] What I'm going to do to make sure it's [1289] pretty good is I'm just going to open up [1291] this page. Notice how many results here. [1292] 1 2 3 4 5 6 7 8 9 10 11 12. So, let me [1296] just zoom in a bit. 1 2 3 4 5 6 7 8 9 [1300] 10. Okay, so there are 10 results here. [1301] What I'm going to do is I'm just going [1302] to like do this two or three times. I'm [1303] going to go through the 10 results and [1304] I'm just going to see how many of these [1306] companies are actually companies I might [1307] want to work with with my search terms. [1309] I'm aiming for like 80% [1311] plus. So, let's open up all these and [1314] just see. Off the top of my head, you [1315] know, is this search good enough that [1317] 80% of the leads I'm going to generate [1318] are probably companies I'm looking for. [1320] B TOC digital marketing agency whose [1322] name is Inspired. Okay, we do [1325] state-of-the-art websites. We built a [1327] bunch of websites. Okay, great. Digiv [1328] Vortex is good. So, we're one out of 10. [1330] This is Sydney website design agency. [1332] Good. We're two out of 10. H full [1334] service marketing agency. Okay, I think [1335] we could probably pitch that. That's [1337] three out of 10. Web design agency, four [1339] out of 10. Hm. I don't know if these [1341] people do websites specifically. It [1342] looks like they're more of a creative [1343] agency. They do storytelling. H I'm not [1346] entirely sure to be completely honest, [1347] but I think, you know, I think they're [1350] probably sufficient. Let me check their [1352] websites and see. Wow, this is very [1354] clean. Oh, they're in Calgary, too. [1355] That's uh where I live right now. Web [1358] site. Hm. Could I see maybe some of [1360] their work that they've [1361] done? Okay. Yeah. Yeah. Yeah. I'm seeing [1365] media production, business development. [1368] Okay. Branding. You know, branding [1369] probably has a lot to do with the [1372] website. Okay, they made a new website. [1374] Okay, so these guys do websites as well. [1376] Perfect. That's five out of [1379] 10. Okay, this is like a brand agency [1382] tomorrow. I don't know if this is [1383] sufficient, but I'm just going to type [1384] in [1385] website. Oh, very clean. Very clean. [1388] Looking for the term website because I [1389] want to make sure that they make [1390] websites. If they don't make websites, [1392] this would not make any sense. [1394] Unfortunately, one thing that uh on a [1396] meta level, a lot of um website design [1398] agencies are doing is they're branding [1400] themselves as not website design [1402] agencies now. They're like, "We're [1403] multiddisciplinary creators. We're [1405] branding experts. We're architects of [1409] your vision, right? It's not like actual [1411] website." When I see stuff like rebuild [1413] our core business, though, odds are [1414] that's probably a website. So, I'm going [1416] to say yes to that [1418] one. Full service marketing agency. Uh, [1421] okay. Labeled agency. I feel like I I [1424] might have just doubled up on this and [1426] got two of these links, but I said that [1427] they were good. This is a website [1428] agency, web agency. Okay, so [1430] realistically, I'm thinking like nine [1431] out of 10 of my first search is fine. [1433] 90% is pretty solid to me. I could go [1435] through more of this, but just off the [1437] top of my head, this is probably enough. [1438] So, I know that this lead list here, [1440] this source is probably sufficient. [1441] Okay, so very first thing I'm going to [1443] do, let me just make sure I'm nice and [1445] organized here. I'm going to go right [1446] over here. Then I will paste this in. [1449] This is just going to be my little [1450] scratch pad here. This is going to be my [1452] website website agencies URL. Okay, cuz [1455] the way you do this with Apollo is you [1457] just get the URLs. All right, now that [1458] we have the number one done, why don't [1460] we go number two? And this is good. We [1461] have 4,294 leads. I generally want like [1463] more than a couple thousand to run a [1465] test on. And we can get way more leads [1466] in this if we're smart. Uh, let me see. [1468] Let me see. Let me see what else are we [1470] going to do. So, we need videography, [1472] right? I wonder if I could just run the [1473] exact same hack here with the term [1475] videography instead. Now, odds are if we [1477] do this, probably going to get some [1479] duplicate records. Some of these website [1480] agencies are also going to do [1481] videography. Yes, I already see the [1483] tadpole agency. We already saw that [1484] labeled. So, already 20% of these are [1486] already the same agency, right? So, [1488] we're going to have some overlap, but [1489] videography is not the best term. Let me [1491] actually select this everywhere. So, h [1495] we do video. If I just do video, odds [1499] are they're going to do some [1499] videography, right? Okay. So, 4,188. And [1502] yeah, the labeled agency's with us as [1504] well. That's one duplicate. [1507] Tadpoles. That's another duplicate, but [1508] that's among 30. I think this is [1509] probably going to be fine. So, honestly, [1511] I'm just going to open up a bunch of [1512] these again. Four, five. Uh, yeah, [1515] labeled six, seven, eight, nine, 10. [1517] Double check. Animated explainer videos. [1521] This one is not in English. Videos. [1524] Okay. [1525] Videos. Videos. Cool. Yeah, these guys [1529] are the Calgary ones. I don't know about [1531] agency 360 video. H storytelling with [1534] video. Okay, that's good. [1537] Reasonable video. Cool. These guys do [1540] video, too. Video. Cool. They do video [1542] as well. Video. I'm not seeing anything [1544] here. So, let me just jump in. Double [1546] check that this is actually something [1547] that's produced. Man, what a clean [1548] website. I love these guys. Video. Hm. [1551] I'm not seeing any video here. If I type [1553] in [1554] portfolio, I see they have a show reel. [1556] They probably do videos. Yeah, I mean, [1558] if you Yeah, motion graphics. Looks like [1560] it. Okay, good. Miracle Video Agency. [1562] Again, this is in Italy. I'm not really [1564] targeting Americans here. I just wanted [1565] to keep this reasonably broad. Um, but [1567] yeah, video. Cool, cool, cool. So, this [1569] is another audience I'm going to pump [1570] in. We'll worry about the specifics of [1572] this later. So, I've mentioned we will [1576] now just do a [1580] videographers, videography agencies. [1583] Let's do that. [1584] Slashed. All right. And now we just have [1586] one more, which is real estate agents. [1588] So, let me just copy this, paste this [1590] down here because I want nice sizing. [1591] And then I'll just call this real [1593] estate agents. I don't want agencies. [1596] Agencies are big. So we'll just go real [1598] estate agent. I'm going to remove video [1601] here. And let's see how many of these [1604] are real estate agents. 1 2 3 4 5 6 7 8 [1610] 9 10. Life improvement platform. Nope. [1614] Nope. Okay. No, this doesn't really look [1616] like good search. This is an example of [1618] one that is not good. It's probably [1619] because the job title, right? So, I'm [1622] thinking we're probably going to have to [1623] add like agent or maybe real estate [1624] agent. We could do like real estate [1626] broker or something like that. Well, [1628] real estate broker is not exactly the [1629] same, but should be sufficient. Okay, so [1631] as you see, we're getting way too many [1632] here. We're getting like 258,000. This [1635] is uh Greg W at Wallace Real Estate. [1637] This is a good sign for me because it's, [1639] you know, this sort of person we're [1640] going for like solo or or head owner of [1643] real estate brokerage. But yeah, we are [1645] getting way too many results to really [1646] do anything with this. So why don't I go [1648] to number of employees? Why don't we [1649] just look for people in the 1 to 10 [1651] range and then maybe 11 to 20 range. [1653] This this will keep the companies pretty [1654] small. Um let me think. Are there other [1656] signals that we could use? Industry and [1659] keywords obviously need to be real [1660] estate, right? 41,000. Um we could chunk [1664] this down substantially further. Why [1665] don't I go location? We'll go United [1667] States because they tend to have more [1668] money and because we could just get this [1670] 41,000 down to like 20 something,000. [1672] Okay. And yeah, still too many. So we're [1674] going to need [1675] fewer. Okay. Okay, I ended up filtering [1677] this down to about 16,000. This is still [1679] a little too many for me. And some of [1681] these work with like big corporations [1682] like Remax and so on and so forth. They [1684] actually have limited control and [1685] autonomy over the money that they could [1687] spend for marketing. Still, I don't [1688] really see this getting much better than [1689] that. So, I'm just going to call it here [1691] and put in my little real estate URL. [1693] Okay. All right. So, now we have three [1695] Apollo URLs. These all look pretty [1696] reasonable. What do we need to do with [1698] these? Well, we need to actually scrape [1699] these, right? It's one thing to have a [1700] URL, another thing to actually scrape [1702] these URLs. So, I'm going to pump all of [1704] these into Appify now. And I'm just [1705] going to run three manual runs. The one [1707] that I use is called Apollo code_crafter [1710] just because it's like a$120 per [1712] thousand leads. And uh when I say a$120 [1714] per thousand leads, I don't actually [1715] mean that we are generating a,000 leads [1716] here with email addresses. We [1718] realistically generate like 2/3 of [1719] those. Okay. So let me see. Uh looks [1722] like we can only run this once at a [1723] time. So I'm just going to run this [1725] three separate times simultaneously. And [1727] I'm going to look for 2,000 leads first. [1729] Okay. So 2,000 for each. So just jumped [1731] on Appify, make an account. I'm at like [1733] a pretty high usage tier, but I think [1735] you can get by with substantially less [1736] than this. And then it's just $120 per [1738] thousand. So, not totally breaking the [1739] bank here. That's the first run. This [1741] going to be my videographer run. Let's [1742] go here and then save and start. Then [1745] I'm going to go to my real estate agents [1746] and then I'm just going to open up a new [1748] instance of this and then run it. Save [1750] and start. And now what we should have, [1751] if I go back to my actors, we should [1753] have three runs running simultaneously. [1755] Okay, so we have one here, one here, one [1756] here. Now we just need to wait until [1758] these finish basically because they're [1760] 2000s. Probably going to take us like 5 [1761] minutes or so. Okay. And these are now [1763] just getting to completed. This one is [1766] 600. This one is 1,300. So, I'm just [1767] going to set everything up for the first [1768] 2,000 run. And then as I'm doing it, the [1770] rest will finish. If I go to output [1772] here, I'm going go to export all 20,000 [1774] results. There are a lot of fields. [1775] Okay. Tons of different fields. Um, [1777] realistically, and you guys are going to [1779] see that when I import all these fields, [1780] it's going to be crazy. There's going to [1782] be like a million in one. Uh, ideally, [1784] we wouldn't have that many, but um, it [1786] is what it is. I'm just going to [1787] download all these, show you guys what I [1788] mean. Uh, what I'm going to do is I'm [1789] going to have three. First of all, I [1791] don't actually remember what that [1793] specific export is. So, I'm going to [1794] export it now. Let's see. Going to [1797] append to current sheet import. I'm just [1798] using Google Sheets. It's the easiest [1800] way to do it. And we're going to start [1802] by doing all this [1803] manually. So, uh what is this? Yeah. [1806] Okay. So, this is the real estate. So, [1807] I'm just going to have one sheet. I'll [1808] call it actually I guess I could just do [1810] all this in one, right? Leads. I'll just [1813] call this leads. In fact, let's just go [1815] here for my own organizational purposes. [1817] Just go watch me start and sell. There [1819] you go. That'd be good. Here we'll go [1821] real estate. I'm just not going to use [1824] spaces. It'll make my life easier. And [1826] then what I want is I just want to get [1827] rid of all the fields that don't really [1829] mean anything to me. Okay, so first of [1830] all, just I want to count up the number [1831] of emails. There's a thousand in this [1832] list. So we actually only ended up about [1834] 50%. Second of all, I want to delete all [1836] the fields that don't really mean [1837] anything to me. So realistically, what [1840] fields don't mean anything to me? Well, [1841] do you see how much space there is here? [1843] All these columns. Most of them are [1845] freaking empty as hell. What [1847] we want is we want to get rid of the [1850] vast majority of them. So I'm [1853] thinking there's two big swaths that I'm [1855] going to get rid of. Okay. The first is [1859] I'm going to get rid of everything after [1861] from [1863] AC all the way over [1865] to WH. Okay? And I'm going to do that [1869] for all three. And then I'm also going [1870] to prune a couple others. This way it'll [1872] just be a lot more easy and manageable [1874] for us. And you guys will see what I [1875] mean. If I'm to pump this into some sort [1877] of email enrichment service, I just kind [1879] of have to do this. So, what was it? AC [1880] to WH. Just going to copy and then [1883] delete. So, 500 columns are being [1885] deleted. Okay, this is a lot smaller [1887] now. A lot more manageable, right? Still [1889] pretty big, but it's a lot more [1890] manageable. Next thing I'm going to do [1892] is I'll go to personal emails. So, B I [1894] go to C. There you go. So, I think it [1897] was A C to WH and then BI to CE. Is that [1902] right? Hopefully that's right. Anyway, [1904] at the end of it, we want um like sheets [1906] that just all look the same because [1907] we're going to pump this into an [1908] icebreaker generator. We're basically [1910] going to have AI tell us a little bit [1911] about each person and then we'll use [1912] that to improve the the strength of the [1914] outreach. Okay, so this one is now done [1916] as well. Looks like it finished with [1918] 2002. So, I'm now going to download this [1920] same energy CSV. Go over here to sheet [1923] 2. Then I'm going to import. Go upload. [1926] There's a million in one ways to do [1928] this, by the way. Uh this is just how I [1929] personally like doing it. Then I'm going [1931] to append. That way it just goes into [1933] this one and then there are a lot of [1934] leads here and a lot of fields so might [1936] take a second. Okay, so it was so AC all [1939] the way to WH. It's going to be pretty [1944] far. This one has way more actually. [1948] Check this out. This one has a ton more. [1952] I think the reason why it works out like [1954] this is because basically LinkedIn where [1956] these guys get all their data from just [1958] stores all of the employment fields that [1960] you have. So yeah, this one actually [1962] isn't. We need to go even further than [1964] this. So never mind. You can't just copy [1965] the same uh things. I think you got to [1967] go all the way to here. So this one goes [1969] to ZS. Annoying. Anyway, um that's that. [1972] And then let me just go back to my [1974] poloscraper. Grab my last run, which is [1976] this one here. Go output. I'll export [1979] all these. Download these. And uh sorry, [1982] which one was this? Art [1984] director. Is this videography? I think [1986] this might be videography. Yeah, video [1989] agency. So, we'll just go video agency. [1992] Then this last one will be website [1995] agency and import [2001] upload. Okay. Now, I'm just going to do [2003] a little bit of reorganizing because I [2004] just want my fields arrayed linearly. [2006] I'm going to want the first name, then [2007] I'm going to want the last name, then [2008] I'm going to want like the company name, [2009] then I'm going to want a couple of other [2011] pieces of information. So, I'm just [2012] going to reset these so these all [2013] basically have the same information, the [2015] same columns. This is necessary for me [2016] to run the automation. I'll show you [2018] guys in a second. Okay, I have all these [2020] set up. Just for my own sanity, just [2023] going to make all of these fields about [2025] the same [2026] width. About boot. That's my Canadian [2028] coming out. This looks good. So, as you [2031] can see, we have first name, last name, [2032] headline, employment industry, industry, [2033] city, employment history, industry, [2036] city, country, email. Right? So, we have [2037] all of the fields that we will [2039] realistically need. And what I'm going [2041] to do now is I'm just going to pump all [2043] of this into a service. Well, my own [2045] service I'm going to whip up in a second [2047] to generate an icebreaker. So I'm just [2049] going to take all this information and [2050] I'm going to use it to generate, you [2051] know, some AI icebreaker for final [2053] confirmation check. How many emails do [2054] we have? We have about 1,100 for each. [2057] This is 1,026. Other was,233. This other [2059] one's whatever. So I'm just actually [2061] just going to run a,000 across all three [2063] of these. So 1,000 for real estate,000 [2065] for video agencies, thousand for website [2066] agencies. And we're going to see where [2067] we land. Of note, I'm not verifying or [2070] validating my domains. So I'm not just [2071] using the verified ones here. You can, [2073] and I think in many cases you should, [2076] but I find that as a first go, right off [2078] the top, I just like to bust out as many [2081] emails as possible, not make any [2083] assumptions as to the quality of my [2084] data, and then after I run at least that [2086] first campaign, if something is like [2087] severely underperforming or if I do have [2089] high bounce rates or really piss poor [2091] deliverability, then I make my little [2092] changes afterwards. But for a first bet, [2094] I'm not even going to worry about that [2095] yet because I want this to be simple and [2096] uh nowhere near as complicated as I [2098] think most other people make it out to [2099] be. So now what I'm going to do is I'm [2100] going to add an additional column here [2103] called ice breaker. We'll just do column [2105] I for all of these. Okay, ice breaker. [2107] Then one more icebreaker. And I'm going [2110] to have AI go through and then generate [2111] ice breakers for all these. What I'll be [2113] using to make my life really simple is [2114] I'm going to use make.com which is a [2116] service that is basically no code. One [2119] of the foundational noode platforms [2120] similar to NAN, similar to Zapier and [2123] all these other ones. Realistically, if [2124] you're getting into AI and automation, [2126] you have no idea where to start. I [2127] recommend that you start with this. It's [2129] much easier and faster way of going [2130] about things. What we're going to want [2131] is we're going to want the sorry search [2133] rows. Go search rows to start. Then I'm [2136] just going to select the right account. [2137] I'm going to have to make this [2138] accessible to that account. So I'll go [2140] nick at leftclick.ai. Going to give [2141] myself editor access. No need to notify [2143] me. And the sheet I'm going to be [2144] looking for is watch me start and sell [2146] an AI service in just x hours. Right. So [2149] I'm going to go down to search method. [2151] Um using the wrong account here. One [2154] sec. Then I'm going to grab [2155] the ID up here at the top. Paste that [2160] in. It's saying that it's empty. I think [2162] just because of a bug. So let me retry [2164] this. The first one is going to be real [2167] state. [2169] Okay. Not entirely sure why I keep on [2172] getting empty for this. H might be a [2174] bug. For now, I'm just going to return [2175] five because I just want to make sure [2177] this actually works. So let me run this [2178] module. Get [2180] five. Cool. So it got the data. [2182] Basically, what I've done is I've just [2183] confirmed I can get the data from my [2184] real estate sheet here, uh, then pump it [2186] into make.com, which is good. After [2189] we've searched through it, we'll just [2191] call this icebreaker generation. Um, [2194] after we've searched through it, uh, we [2196] can now build out the rest of this flow, [2197] which is going to be pretty simple and [2198] pretty straightforward. We're basically [2200] just going to take all of the [2201] information in. Then we're going to, um, [2204] send a message over to GBT. Probably use [2207] 40 for this one just for cost purposes. [2209] I'm going to have it generate ice [2210] breakers for all of these. So, let's go [2213] GPT4. Uh, let me just see actually [2215] what's the model prices. OpenI. Let's [2217] see the cheapest one right now. These [2220] are good, but they're quite expensive. [2222] This is 2 million. This is 40. This is [2225] one. Okay. Oh, wow. That's crazy. So, [2228] this one is affordable model balancing [2230] speed and intelligence. I'll probably [2231] use this one. GBT 4.1 mini, I think. [2234] Right. 2 million 1 million input tokens. [2236] I I don't know. We'll try it. [2239] one mini right over [2244] here. And then here is where I'm going [2246] to go and I'm going to uh design my [2248] prompt. So you're a helpful intelligent [2250] writing assistant. I always like to have [2252] a developer assistant prompt first. Then [2254] here is where I'm actually going to your [2256] task is to take is input a bunch of [2260] personal information about a prospect [2262] and then design a customized oneline [2265] icebreaker to begin the conversation. [2268] You'll return this icebreaker in JSON [2271] using this format. I'm going to say [2274] icebreaker and then rules write in a [2278] Spartan. How do you pronounce [2281] this lanic? [2286] Laconic. Oh, interesting. Renpartic [2288] lanic [2289] laconic tone of voice. [2293] Um, weave in uh context wherever [2301] possible. Here is a bunch of information [2304] about [2306] me, but you can make these ice breakers [2308] more [2310] personalized. Then I'm just going to [2312] list a bunch of stuff about me. And then [2313] down here, weave in context with my own [2315] personal information wherever [2318] possible. Keep things very short and [2320] follow [2322] the format. Hey, [2325] name we'll go new line. New [2328] line. Really respect X and love that [2333] you're doing [2334] Y. Thought I'd [2337] connect. Wanted to run something by you. [2340] That should be a good one. Okay. Keep [2342] things very short and follow the [2344] provided format. Leave in contact with [2346] me on personal information wherever [2347] possible. [2349] deniability possible. Try and imply that [2352] I like [2354] do believe. Oh. Oh no. Did I just delete [2360] the whole [2361] thing? That's [2363] brutal. Okay, I'm going to write the [2365] whole thing again. It's not going to be [2366] the same. That sucks. Be careful with [2369] the escape commands, ladies and [2371] gentlemen. That is tough. Do not want to [2374] escape. take as input a bunch of [2377] information about a prospect and then [2379] generate a customized oneline icebreaker [2382] to imply rest of my communicate is [2385] personalized. You'll return your ice [2388] breakers JSON format icebreaker and then [2391] here I'm going to say hey name love [2395] thing also a fan of other thing wanted [2400] to run something by you cool rolls right [2403] in a [2404] Spartan oh be very careful with that [2407] that's [2409] why keep things short and [2411] punchy short let's say imply familiarity [2415] wherever possible possible if you see an [2417] opportunity i.e. if you see an [2419] opportunity to imply that I like the [2422] same things believe the same things or [2425] want the [2427] same things as they do. Go for it. Sure. [2430] That should probably be okay. Let me [2432] save this this time. Learn my lesson. [2434] And I'm going to show advanced settings. [2436] And what I'm going to do next is I'm [2437] just going to do a bunch of examples for [2439] it. So we're going to go JSON object [2440] parse JSON response. Next up I will do [2442] user. I'm going to provide some um [2444] personalized information about the [2446] prospect. So, uh what am I going to do? [2448] We'll just we'll just spam it all like [2450] in this one, [2452] two, three, this. We'll do [2456] this. We'll do this. Okay. So, we're [2460] just going to add all this information [2461] in. And then next, the assistant's going [2463] to have some personalized stuff. But, uh [2465] we don't want this to be the la the we [2467] actually want this to be the last [2468] message before this. We actually want a [2471] couple other examples. So I actually [2472] just generate one. We are going to have [2474] an example of this exact format. Put it [2477] right here. I'll fill this in with some [2479] actual information. And then we'll have [2480] the icebreaker here. Then we'll just do [2482] this like twice. And then in this way [2484] we're going to have a model of what [2485] we're saying. So the value here is [2487] you're actually just reaching out to [2488] people as if you were doing totally [2490] custom outreach. So let me see. Is there [2492] any other information we can get about [2493] the Now that I'm thinking about it, I [2494] don't actually have too much information [2495] about the company, right? It's like a [2497] company oneliner or something. [2498] Otherwise, we're really going to be [2499] riding the plausible deniability train [2501] here. No organization description, huh? [2503] O, brutal. Yeah, you don't really get [2504] too much information. Oh, we got some [2506] personal emails, too. Interesting. [2507] Interesting. Huh. Well, actually, I [2509] didn't even realize we're getting so [2510] many personal emails. Instead of just [2512] using this email column, we should [2513] probably concatenate the two. I bet you [2514] if I did this, um, if I merge these two, [2517] might even get more. It's been a while [2518] since I've used the personal field here, [2520] but like I don't know if Apollo's gotten [2521] a little bit better at this over the [2522] course of the last little while or what, [2523] but that's crazy. Look at that. That's [2525] juicy. That is a very juicy column. I'm [2527] actually going to go back here now to [2528] where it says email. paste this in. Like [2531] check this. Oh man, there's a ton of [2533] emails here. Tons of emails. Okay. Well, [2537] I gotta say most of these are looking [2540] pretty good. If I go down to the very [2542] bottom of this uh 2000 list, if I go all [2544] the way up here now, we actually get [2546] 1500 emails instead of just and some of [2548] these are like hotmails and Gmails. Now, [2550] some of these aren't verified, so I'm [2551] probably going to have like much higher [2552] bounce rates, but I feel like I should [2553] probably concatenate these two now that [2554] I'm thinking about it into just one [2556] email column, right? Basically, if they [2558] double up, then we won't put the same [2560] info. Or maybe we will. Who knows? Okay, [2562] let's add one more column. We'll go [2565] emails. Okay, so I'm just going to [2567] filter this. Just sort A to Z. Should [2570] have all the emails now sorted. I don't [2572] like how this looks. So, let me just do [2574] some spreadsheet magic here. Um, I'm [2576] then going to cut this. Paste this in [2579] here. Then we can actually just resort [2582] this based off a toz. Now, we should [2585] have all of the emails, right? Yes, we [2587] should have some more emails here. Okay, [2588] cool. I'm going to do the same for all [2590] the rest of these just to get some of [2591] those um those bonus emails that I might [2592] have missed. I think that's [2595] important. Okay, so yeah, we just [2597] leveled up and got a few more email [2599] addresses, which is nice. Now that we [2600] have all that stuff done, we should be [2602] able to do our icebreaker. Um so why [2604] don't I just start with some leads here? [2605] I'll just do some manual ones. Let's [2607] see. Let's do H. So, a couple things. [2609] I'm seeing some duplicates here. So, we [2612] got to pre-process our thing. Uh [2614] actually, no, we don't. Sorry. instantly [2615] will automatically do this for us. But [2617] now that I'm sorting these manually like [2618] this, I could tell there's a fair number [2620] of duplicates in here. The reason why [2622] might be because we have different [2623] emails. So, let me just double check [2626] this. No, no, we can um dduplicate [2633] this. So, columns to analyze, the only [2635] one that I really want is H email. Just [2640] remove all instances of duplicates under [2641] H. [2645] So, looks like we had some duplicates. [2647] Might have just been because of how I [2648] processed that. Let me just double [2650] check. Same thing [2657] here. Okay, let's now replace this just [2660] with some false or sorry, real data [2665] here. Then we'll copy over the headline. [2671] Then we'll do the employment [2675] history. Then we'll do the [2677] industry. Then we'll do the [2680] city. Then we'll also do the country. [2683] Okay. So basically I'm going to feed in [2685] this. And then I want some personalized [2687] snippet as a result of this. So I wanted [2689] to say something like hey I know. The [2691] reason this is valuable is you can then [2693] make abbreviations as to the company. So [2694] instead of Maki agency we could just say [2696] Maki which makes it seem as if it's like [2698] custom written. We can also play around [2699] with like the capitalization and stuff. [2701] I'm not going to do that, but I'll say, [2702] "Hey, Anna, I'll add two new lines here [2704] so it jumps down." And I'll say, "Love [2707] what you're doing at Maki. Also doing [2710] some outsourcing, [2712] offshoring right now. Wanted to run [2714] something by [2716] you." Cool. That looks pretty good to [2719] me. What are we getting from here? We're [2720] getting it uh perceivably blunt with the [2722] love what you're doing at Maki. We're [2723] also getting, you know, if somebody were [2725] to scrape this, they would say [2726] something. I love what you're doing at [2727] insert company name here, but this just [2729] maki. It seems a little bit more [2730] personalized. And then these this is [2733] like a an exact variable outsourcing [2735] offshoring. So I don't know if I should [2736] really do this. So maybe I'll just say [2739] also doing some outsourcing right now. [2741] Wanted to run something by that looks [2742] pretty good to me. Okay. So we have one [2744] example right now. So what I'm going to [2746] do now, keeping in mind this is an exact [2748] duplicate of some data that's already in [2750] here. So, I'm just going to run this on [2751] three and then I'm going to see how good [2753] it is on three of my What is this? Is [2756] this real estate or what did I do? [2758] Websites [2759] or just double check real estate. Okay, [2762] let's run three and let's see how this [2763] goes. All right, we just finished the [2766] three icebreaker [2769] generations. Notice Blue Edge in Boon [2771] Beach. Been around South Florida real [2772] estate, too. Wanted to run something [2773] about that. Seems pretty realistic. Uh, [2774] it's not the worst. Okay, I don't really [2777] like that one. Okay. All right. Well, I [2778] mean like for the most part this is [2779] good, but it's not sticking to our [2781] formula. So, what I'm going to do is I'm [2782] going to go down reduce the temperature [2783] drastically. Just have it try and stick [2785] to the exact formula that I'm doing [2787] here. [2789] Okay. Use the the above [2793] format when constructing your ice [2796] breakers. Let's run this again. Let's [2798] see if this is a little bit better. [2800] Location isn't super important. [2803] just want [2806] the okay this is perceivable like I'm [2809] not selling real estate but this is I'm [2811] perceivably there's like a lot of heavy [2813] on the implication here I'm working in [2814] real estate around here right it's like [2815] well I'm not actually selling also a fan [2817] of finding the right fit okay well that [2819] kind of sucks it's pretty bad if I got [2822] this I'd be like h I mean real estate's [2824] a grind yeah know I don't like this [2826] we're going to have to give it a couple [2827] more examples unfortunate but it is what [2829] it is so I'm going to go over here uh [2832] Uh, let me just adjust the prompt a [2834] little [2835] bit. Maybe I'll just say make sure to [2837] use the above [2839] format. Let's tweak this one more time. [2841] Let's see if that is sufficient to get [2843] us a three out of three on the score. If [2844] so, I'll scale it up. Do 10. And then [2846] I'll [2849] check. [2853] Okay. Okay. No, no, no. One more thing. [2857] If you see the ability to make an [2860] acronym, if you see an opportunity to [2863] shorten the company name, [2866] say instead of XYZ [2870] agency, do so wherever [2872] possible. Say things like, "Love AMS [2876] instead of love [2878] AMS professional [2881] services." More examples. [2892] Okay, that looks pretty good. And now [2894] let's just add one more example. So [2896] we're going to add two, right? One's [2898] going to be user with the example. The [2900] other one's going to be assistant. I'm [2901] going to map the user back up [2906] here. Assistant, I'm going to map over [2911] here. Going to copy the assistant [2913] prompt. And now I'm just going to add [2914] one more user [2916] thing. Let's do this one [2919] here. This doesn't really give me too [2921] much information. So, let's maybe do [2922] this. Uh, let me just make sure the data [2924] is formatted [2927] right. Visionary agency leader. Oo, [2930] fancy. Wow. [2933] Okay. I found that stuff funny. That's [2935] all. Okay. Uh, information technology [2937] and services. And we have the location, [2940] Dubai, United Arab Emirates. [2943] Cool. And we'll say, "Hey, Adam, the [2947] human tech agency." So, I should go, [2950] "Hey, [2954] Adam, what you [2957] doing?" The human tech agency. The human [2961] tech. Let me just see if there's [2965] some No, this is Dubai, [2970] right? Let's take a peek at this. Oh, [2973] guys. Okay, this guy's actually pretty [2976] huge. I was [2979] uh kind of crapping all over it [2982] because it's visionary. Yeah. Wow. No, [2985] for sure. The human tech [2993] agency branding in particular [3004] is let's [3010] see just getting an agency off the [3013] ground wanted to run something by Okay, [3015] cool. That's [3017] plausible. Now, let's give this a go on [3019] the top three [3021] hits. Okay, first result was much [3024] better. Hey, Aaron, love Blue Edge. Also [3026] in real estate down here. Want to run [3027] something by you. That's super cool. [3030] We've now finished the other [3031] two. Don't like that it says elevation [3034] real estate. Also fan of the San Fran [3035] market. Wanted to run something by Yeah, [3037] that's not ideal, but it's honestly it's [3038] not the worst. [3040] So, what we're going to do is we're just [3042] going to force it to make acronyms or [3044] not acronyms, shorten the names a lot [3051] more. We'll say shorten the company name [3054] wherever possible. Say XYZ [3058] agency. XYZ [3066] agency. Do the same with locations. San [3069] Fran instead of San [3072] Francisco, BC [3074] instead of British Columbia etc. Cool. [3079] All right. Now that I've done this, what [3080] we need is we need one more to update a [3082] row. And what we're going to do is we're [3083] just going to go down this and then add [3084] icebreaker right over here. Okay. We're [3086] going to do this for real estate first, [3087] then we'll do this for websites, and [3088] then we'll do this for that other um [3091] Yeah. So, let me add the ID of this [3094] sheet right over here. [3097] Going to call this real estate. The row [3100] number I'm going to grab from [3101] this. Then the column range. We're just [3104] going to go A to [3106] Z. Okay. What do we want to update? [3108] Column I. The only thing we want to [3110] update with column I is the result [3112] icebreaker. Okay. So now I have these [3114] three. I'm going to give it one more [3116] test to see if it updates the column [3118] correctly. Cool. Looks fantastic. Now [3121] that this is done, I'm just going to add [3122] one more step here, which is a filter. [3124] I'm going to filter to make sure that [3125] the icebreaker column is [3127] empty. So, um only return rows where the [3130] icebreaker does not exist. Then I'm now [3133] going to go I don't know how many we [3135] realistically want to do. Well, I guess [3137] we just do all of them, right? So, I'm [3139] just going to go back here and then [3141] yeah, we're just going to run it. Um so, [3143] we're just going to try and go through [3144] all the way from the top to bottom of [3145] this whole sheet, which is going to be [3146] about a thousand records, which should [3147] take us realistically like I don't know, [3149] a few minutes. Just returned. Now we're [3152] pumping through one, two, three. Might [3155] take us a little bit longer than that [3156] actually. Thousand rows, maybe about 1 [3158] second per row. Might take us uh yeah [3161] about like 15 minutes or so. So while [3163] this is running, what I can actually do [3165] so I could just copy this and run this [3166] three times. So I could just do it all [3168] simultaneously. Now I'm doing this [3170] manually. You really you do not have to [3172] be doing this manually. You can [3174] absolutely just automate this by pulling [3176] some system that um just does it all [3179] kind of sheet by sheet. you know, [3180] iterate all the sheets and then run it [3182] one row at a time. But I'm just on [3183] something of a time crunch today. So, [3185] obviously, I want to do this quickly. [3187] I'm just going to create three [3189] scenarios, one for each of these. One [3191] will be icebreaker videography. Another [3193] one will be website design or website [3196] agency. Then, I'm just going to copy [3197] these three. I'm actually going to run [3199] them all. Now, I can do this simply [3201] because I have a lot of token rate [3204] limit. I have a very high rate limit. [3207] Not a lot of other people can because [3208] their rate limits aren't as high as [3209] mine, but I can actually like feasibly [3211] run three of these. So, one [3212] simultaneously with the other two. Then [3214] I can just go through all of them [3215] generating the ice breakers. So, let's [3217] just double check that that looks good. [3220] Then we'll just go over here, double [3221] check that that looks good. Cool. And [3223] then I'm just going to make sure that [3224] all of these columns are good. [3225] Icebreaker. Icebreaker. Icebreaker. [3227] Nice. We should now just be able to send [3229] it. So, I'm going to do one. I'll do [3231] another. I'll do another one. And let's [3234] see how we're doing. [3236] Yep, these are all now running [3237] simultaneously. So, I should be able to [3238] do all 3,000 if you think about it, um, [3241] in about 15 minutes or so instead. All [3243] right, just grabbed a cup of coffee. I'm [3245] ready to go. While these are generating [3248] the rest of the ice breakers, which by [3249] the way, we could see if we just go to [3250] any one of these sheets. See, these are [3252] filling in as we go along. I'm doing the [3254] alphabetical order, which is why it's [3256] Dennis, Dennis, Derek, Tzita, so on and [3257] so forth. While all this stuff is [3259] happening, let's head over to Instantly [3260] and make these campaigns. I'm just going [3261] to call this one the title of this [3263] video. That looks good. [3265] Click continue. Now we have the [3267] Instantly campaign up and running. [3268] Instantly is the service we're using to [3270] send the cold emails just to make sure [3271] everybody's on the same page. Very quick [3272] and easy to get up and running with [3274] this. If I just show you guys the email [3276] accounts, you'll see that I purchased a [3278] bunch of pre-warmed email accounts using [3280] their pre-warmed inbox feature. The [3282] benefit to this is it just takes me zero [3283] time to get up and running. So instead [3284] of me having to spend two or 3 weeks [3286] warming up emails, I just clicked one [3288] button, spent a little bit of additional [3290] money, and then got myself these [3292] pre-warmed ones. They sell out of these [3293] pretty quick. So, if you guys want them, [3295] definitely just head over here, select [3297] one of them, and then uh you know, buy [3299] both the domain and then also get the uh [3301] email addresses here. We're seeing a [3303] trend where female names perform better [3305] than male names, which is why there's so [3307] many females like Britney, Kimberly, [3308] Allison, Caroline, Hazel, so on and so [3310] forth. So, if you see any of that and [3311] you're wondering, you know, what the [3312] hell I want a guy name, then don't sweat [3314] it. The way that you work with these, [3315] it's a different name, right? It's [3316] Audrey, it's Britney, it's Brooke, it's [3318] Carly, it's Elizabeth. The reason why [3319] it's all these different names is [3321] because instantly had to purchase the [3323] email inboxes ahead of time and warm [3324] them all up for us, right? So, a big [3325] issue that a lot of beginners think is, [3327] well, like, dude, this isn't me. This is [3328] Britney. This says Carly. That's all [3330] right. You have total plausible [3331] deniability when you send out the [3332] outreach. The important thing is not [3334] necessarily what the first name and last [3336] name on the email addresses. The [3337] important thing is like in practice, you [3339] will send outreach. People will be [3340] interested in wanting to work with you [3342] and then you get them on a call and then [3344] you'll show up on the call and they'll [3346] just assume that it's either like a [3347] misspelling of your name or it's [3348] somebody else in the organization or [3349] whatever. So you guys don't actually [3350] have to worry about that if you end up [3351] doing the pre-warm mailbox route like I [3353] did. But you know, you also don't have [3354] to do the pre-warm mailbox route. You [3355] could do something else. Anyway, let's [3357] actually spin this up. So I'm going to [3358] go to sequences now. Sort of have like a [3360] four-step copyrightiting, you know, [3362] structure for this and I'll run you guys [3363] through it all line by line. But I also [3365] want you guys to know that I'm going to [3366] pull some of the templates directly from [3367] Maker School and then I'm just going to [3368] make some slight edits to them because [3370] the way that I like to do things is I [3371] like to just operate off of templates [3372] wherever possible. Like I've already [3374] built the wheel a bunch of times. No [3375] need for me to rebuild the wheel. Just [3376] same thing with you. If templates exist [3378] that do 90% of what you want to do, just [3380] start with those templates and then you [3381] just 10x your leverage, right? You got [3382] to go from 90 to 100% as opposed to zero [3385] to 100. So, you know, now that we've set [3387] up our lead generation infrastructure, [3389] let's just do this and not knock over my [3391] cup of coffee. Time to create an [3393] irresistible offer using my copyrighting [3395] formula. Hell to the yeah. Let us go to [3399] maker school. I'm go down to my [3402] classroom and then I think the templates [3404] I'm looking for month four. Yeah, here [3405] we go. There's a bunch of instantly [3407] templates. These are the exact templates [3409] that I've used on a number of campaigns. [3411] You'll see that my uh my rates weren't [3412] tremendous on these. Like, you know, [3414] this one had a 4.8% reply rate still [3416] made me tons of money. This one down [3417] here was a little bit better, 11.6, but [3420] this wasn't directly as monetary, so it [3421] made me about the same. This one made me [3423] 6.1% reply rate. This one is um probably [3425] what I'm going to use for a couple of [3426] these. But what I'm going to do to start [3427] is I'm just going to copy over one of [3429] these campaigns. And then I'm going to [3430] worry about, you know, touching it up [3431] and making it look really sexy after. [3433] Okay, this is going to be one. And [3434] actually, I should probably create one [3436] campaign for each, right? So, I need to [3437] rename the campaign. So, what I'm going [3439] to do is I'm going to duplicate this one [3440] more time. This one will [3443] be real estate. [3447] Okay. This other one here, videography. [3450] And this last one here is going to be [3453] website. Okay, now I have three [3456] different campaigns. This is valuable [3457] because we're going to have three [3458] different audiences, right? And once I [3459] have that, now I can go through and [3461] actually I'll open up three tabs. One, [3463] two, three. Then I'm just going to copy [3465] this over. I'm going to go to sequences, [3467] paste, sequences, paste, sequences, [3470] paste. Cool. So now I have like a [3472] starter sequence. This is real estate. [3473] This one's videography. This one's [3474] website agency. So now I just need to, [3476] you know, change the language and [3477] whatnot. And I'm also just going to do a [3478] little bit of copyrightiting. So, when I [3480] designed this template, it was before [3482] ice breakers and personalization were a [3483] thing, which is why um we're seeing, you [3486] know, I found you on LinkedIn. I thought [3487] I'd reach out. So, realistically, this [3489] section over here, this is going to be [3490] replaced with the icebreaker. Back in [3491] the day, you didn't actually have the [3493] ability to do this, right? Or if you [3495] did, it was like very minimal or not [3497] very good. So, you used to have to imply [3499] a bunch of things. Nowadays, you don't [3501] actually have to imply as much. You [3502] could um get away with like some sort of [3504] AI personalization to make it seem like [3505] you've done some research on them, which [3506] they like. Anyway, in terms of the [3508] four-step copyrightiting process, the [3509] the very first thing that I like to do [3510] is I like to answer the question, um, is [3512] this spam? So, the quickest and easiest [3515] way to answer the question, is this [3517] spam? Is you just give them some [3518] personalization up front. That's what [3519] this first section is going to be. Okay. [3521] The second question is going to be like, [3523] okay, so who are you? If it's not spam, [3526] it's like, all right, we verified that. [3528] So, who the hell are you? And that's [3529] what this section over here answers. And [3531] this is just sort of putting yourself in [3532] the the mindset of the prospect, right? [3535] The third one is why does it matter to [3537] me? Okay, and why it matters is because [3539] well I'm not just some random guy. Okay, [3541] it matters because I made people a ton [3542] of money with this before. Then the [3544] fourth one is okay well then what [3547] next? Right? Like now that we verified [3550] all this, what do we what do we do after [3551] this? Well, uh what we do after this is [3554] we have some sort of offer or call to [3555] action. Offer and call to action. Okay, [3558] simple four-step copyrightiting formula. [3560] Don't feel like you have to copy my [3562] exact wording here or anything. As long [3563] as you just follow this structure, show [3565] them that it's not spam by personalizing [3566] it. Answer the who are you question and [3569] make it seem like it's you talking to [3570] them, not a faceless company talking to [3572] them. Justify why you're reaching out by [3573] basically saying, "Well, I made all this [3574] money for other people or I've added all [3576] this value to other companies." Then [3577] finally, what next down at the bottom, [3579] as long as you do this, you have four [3580] steps, you're you're pretty good, I [3582] would say, in most cases. So now, I'm [3583] just going to go through and I'm just [3584] going to make some adjustments to it. [3585] I'm going to throw in some of my own [3587] little spin and magic. And then after [3589] that, I'm going to split test this with [3590] another one of my sequences. Okay. Okay. [3592] Okay, so my real estate system is some [3594] sort of BTOC system. So I just need an [3596] offer for a B toC system with some sort [3598] of deliverable. So what I'll probably [3600] say is let's just make sure the [3602] icebreaker is good. So something like [3604] this. Hey Dennis, love Prada also work [3606] in real estate in St. George. Wanted to [3607] run something by you. Okay. Implication [3609] is I'm working in real estate. So it [3610] could be that I'm selling to real estate [3612] agents. It could be that I am a real [3613] estate agent myself. Whatever I'm doing, [3615] I'm just getting the click and that's [3616] all that matters. Now that we've gotten [3617] the click, I need to identify myself. So [3619] if I had something like this, what would [3620] my copy be? Really? wanted to run [3622] something by you. I'm just getting up [3623] and running. Okay, I'm just gonna play [3625] around with it and we'll figure [3626] something out. Okay, first campaign [3629] looks good. Hey, name love whatever. [3631] Also working in whatever and whatever. [3633] Wanted to run some bio. I'm new to the [3634] buy side. Put something interesting [3635] together a few months ago that works [3636] well. To make a long story short, this [3638] outreach system that uses AI to generate [3639] buyer leads around 30 per month on [3640] average cost just a few cents to run. I [3642] ran it for similar position at agent in [3644] SD. I'm leaving this um intentionally [3646] vague and we made 125K in a little over [3648] a week. This is real. I know this is [3650] completely out of left field, but I'm [3651] fairly confident we can do something [3652] similar. Just want to see if there's [3653] interest. You're one of the first agents [3654] I found looking into it. Would this be [3655] of value to it all? Wouldn't cost you [3656] anything. I'd pay for it all myself up [3658] front. If you're open, we could work out [3659] some sort of deal, but up to you. Let me [3660] know your thoughts when you have a sec. [3661] Thanks. Sending account name. So, yeah, [3664] a couple things. I mean, I don't know if [3665] this is going to work. We're going to [3666] try to I think it'll work. I've ran some [3668] campaigns like this before and it's [3669] worked. But, uh, the key in my humble [3671] opinion is to just make it seem like you [3672] are writing directly to the other [3673] person. You're not like putting them in [3675] a sequence. You wanted to make it seem [3677] very informal and like plausibly [3679] deniable and hey, I was just looking [3682] into your stuff and I wanted to run [3684] something by us, see if there might be [3686] interest, right? That's basically the [3687] vibe. Obviously, it helps when you have [3688] some social proof. So, I have social [3689] proof. I've run a very similar sort of [3691] campaign once for buyer agent and SD. [3693] So, that's pretty cool. Made a ton of [3695] money very, very quickly for them, not [3697] for me. I way underpriced. But yeah, you [3699] know, if you don't have something like [3700] this, then obviously that's one of the [3701] reasons why at the beginning when I said [3702] pick a niche, you know, do you have [3703] niches that you guys have some sort of [3704] experience and some sort of [3706] accomplishment, some sort of unique [3707] advantage. So yeah, I'm just going to [3708] copy this over and I'm going to do a [3710] very similar campaign for the other two. [3711] One of the reasons why I always [3712] recommend picking three niches is [3713] because once you've done the work for [3714] one, you just multiply the effort for [3716] the other two. So let me do something [3717] similar now for videography for a [3719] product and then I'll finally do one for [3720] website agencies as well. Okay, similar [3722] vibes. I actually used to run a [3724] videography company in Vancouver, BC, [3726] and I scaled it to about 10,000 bucks a [3728] month. Now, I didn't use this system to [3730] get all of that revenue. In fact, I I [3732] experimented with a similar system, but [3734] obviously it wasn't the same system. So, [3735] we're going heavy on the implication [3736] here. But, you know, again, we're using [3738] the plausible deniability. Hey, I put [3739] something interesting together a few [3740] months ago that works well. To make a [3741] long story short, it is blank, right? [3743] It's an outreach system uses and I find [3745] people hiring videographers agencies and [3746] then pitches them cost just a few cents [3748] to run. All of this is true. Obviously, [3749] when they work with me, it's not going [3750] to cost them a few cents cuz they're [3751] going to pay me for it. But the actual [3753] system costs a few cents. And then, you [3754] know, I'm kind of leveraging the listen, [3755] I know this is totally wild, but right, [3758] which I find some self-deprecation is [3760] pretty valuable. You know, it just makes [3761] things seem realer when you can insert [3763] like a sliver of almost doubt, right? [3765] Kind of clean. So, that's the [3766] videography one. That one took me like, [3768] you know, 30 extra seconds to put [3769] together. This is going to be the [3770] website agency. So, this is going to be [3772] really similar system, I think. Man, [3774] I've done the exact same thing for all [3775] of these niches, haven't I? Good god, [3777] I've worked in a lot of niches. I used [3778] to run a website design agency. It's [3780] like your classic digital marketing [3782] agency, but we did websites. So, I can I [3783] can get away with saying that, you know, [3784] I've run similar systems for myself, [3786] too. That's pretty funny. You know, I [3788] got to be honest, after you've worked [3789] with one agency, you've worked with a [3791] lot of them. You've worked with a lot of [3793] them. Very similar. Okay. Anyway, so [3795] please bear with me, but I put something [3797] interesting a few months ago that works [3798] well. To make a long story short, it's [3799] an outreach system that uses AI to find [3801] people hiring website devs, then pitches [3805] them around 30, then pitches them [3815] customized [3820] templates makes them the demo [3824] website run high converting. I ran [3828] something similar for myself back when I [3831] ran a site agency. [3834] This was in Vancouver, [3837] BC around five years ago and it got to [3839] the point where we're making well this [3841] is well over 10,000 bucks per month. No, [3843] this is completely out of left field but [3844] I'm fairly confident we could do [3844] something similar. Just want to see if [3845] there's interest. You're one of the [3846] first people I found when looking into [3847] it. Would this be a value at all? [3848] Wouldn't cost anything blah blah blah. [3851] Cool. That's sweet. Awesome. So, that's [3854] some campaign variant number one. What [3856] I'm going to do now is I'm going to add [3857] an additional variant. Okay. And this [3860] additional variant is now going to pitch [3861] like a fundamentally different thing, [3863] fundamentally different offer. And I'm [3864] just going to run all these side by [3865] side. So, what am I going to do for this [3866] one? I think I'm going to use this one [3868] here, which is this Longshot creative [3871] agency campaign. I really like this one. [3873] This one was really neat. And then I [3875] think for this one, I'm going to weave [3876] in um my own social proof, my own like [3878] YouTube channel cuz uh you know, it's [3879] obviously very big dick. If you could [3881] say I have a YouTube channel which has [3882] several tens of thousands of [3884] subscribers. People really like that. [3885] Okay. Follow-up reactivation system. [3886] That looks pretty cool. This is going to [3889] be the real estate one. So, we'll have [3890] some personalization, which uh in this [3892] case is going to be an icebreaker. Let [3893] me just make sure that's [3895] right. Checking in on my system here. [3897] We've actually now finished and wrapped [3898] up all of them. I think this one is just [3900] hanging. That might be a bug, but that's [3902] good. Let's now put some stuff in there. [3905] Okay. Personalization. It is a long [3907] shop, but I work specifically with real [3909] estate agencies. Basically, I make [3913] custom follow-up systems, AI follow-up [3916] systems that nurture old leads on both [3919] the buy side, sell side. I I run an [3922] Instagram channel that just hit 100,000. [3925] We're talking about stuff like this. I [3927] know this is a long shot, but I work [3928] specifically with real estate agencies. [3929] Basically, I make custom AF follow-up [3931] systems that nurture old leads on both [3932] the buy side, sell side. I run an IG [3934] channel that just hit 100K followers [3936] talking about stuff like this. There are [3937] a lot of agents picking this up right [3940] now. This will be my social proof right [3943] now. And I've personally helped a [3947] few [3948] scale their monthly sales. Oh, I don't [3951] know any off the top of my head. It's [3953] going to be tough. I'm probably gonna [3954] have to find that out later. Like go [3956] through maker school or make money with [3957] make and see what sort of numbers have [3958] helped people. But I imagine it's [3960] probably at least five figures. Anyway, [3962] am fully aware we haven't talked prior [3965] to this. You'll probably think this is [3968] cold outreach. I looked into I think [3972] I'll borrow a section from the previous [3973] one. [3978] outreach I looked into. To be frank, you [3981] were one of the first agents I found [3983] when looking into it and into it, but I [3986] think you'd be a good fit. Also, in my [3989] experience, client [3991] reactivation is super easy to [3994] implement, do this for you, totally [3998] upfront, at no cost. That make sense for [4000] you? If so, do you want me just go ahead [4003] show you an example or would you rather [4004] chat first? Kind of awkward over the [4006] phone. We can chat if you're game get on [4007] a [4009] call. Okay, cool. All right, I think [4011] this is plausible. I don't think this is [4012] going to be as good as the initial one, [4014] but what are you going to do, right? [4015] Let's just use first name Q is my [4017] question. We'll call it there. I don't [4020] think I could use PS if you're not sure [4021] who I am or a [4023] skeptical. Okay, anyway. Okay, let's [4026] just make sure I remember to fix that up [4027] later. Ooh, videography. Uh oh. What the [4030] hell am I going to do for videographers [4031] again? Let me think. Uh clipping. Oh, [4034] right. Clipping. Clipping. Yeah. Yeah, [4035] that's good. [4045] Basically, Basically, I build systems [4047] that [4052] automatically build AI systems that [4054] automatic long form videos like [4057] interviews, etc. to short clips for [4061] social media. I did this in my own [4063] agency once copy scaled revenue to 90k a [4065] month at around 50% margins. Oh, that's [4067] true actually. content like video [4069] interviews to short clips for social [4073] media costs sense to run but actually [4076] you know I could actually totally use my [4077] own case study [4078] here because I'm specifying long form [4081] content right does cost sense to run and [4085] I did do a similar system in one second [4087] copy that's pretty neat [4090] similar service business although [4093] obviously all about copyrightiting also [4095] is my own company so I had a lot of [4096] latitude but I want to see if I could [4097] build a similar [4099] thing for you is I think your vertical [4101] is one where you could easily do more [4102] than 2K if you have a good pipeline. [4103] Also in my experience, this is a really [4106] easy win to offer [4108] clients. Clients takes no extra work and [4112] you can add few hundred bucks in [4117] perceived [4118] value for [4120] free. [4121] Cool. [4123] Cool. Cool. [4126] Cool. All [4128] right, we'll also go sending account [4130] name. Very sweet. And then over [4135] here, let me think. Um, this website [4137] agency stuff, content generation systems [4139] for websites. I really like that angle. [4141] I really, really do. How can I make [4142] this? I mean, like I know I'm meta stuff [4144] here. These are pretty long. I normally [4145] don't make campaigns this long, but um, [4147] at the beginning, I just like split [4148] testing a variety of approaches. So, [4150] some I like to be really long and [4152] intense. Other ones I like to be really [4153] short and punchy. after I run the first [4155] last, you know, like where I actually [4156] run this on 100 emails a day probably or [4158] something like that per vertical. I tend [4160] to iterate pretty quickly after the [4162] first week and then I tend to just like [4164] test the next bout with like I'll [4166] literally grab an email, I'll cut it in [4167] half and then I'll just make it super [4169] punchy and I'll see if that one works [4170] better or not. So, I think what a lot of [4171] people are thinking is like, man, this [4172] is super long. How the heck is this [4174] going to work? Well, my tip for you is [4175] that once you understand the patterns, [4177] you can break the patterns a little bit, [4178] but you do have to understand what the [4180] patterns are. And that's sort of what [4181] I'm doing with the second pitch. Okay, [4182] so Q. And then this one here is going to [4184] be just like first name Q. Okay, so [4188] where the heck was I? Oh, and this is [4190] icebreaker, not personalization. I'm [4192] just forgetting all my variable names. [4194] Okay, so what do I do? I work [4196] specifically [4198] agencies. So wanted to run something by [4200] you. I know this is a long shot, but I [4201] work specifically with website design [4202] agencies. Basically, I built a system [4206] that lets you that upon creating a [4208] website for a client in whatever [4211] framework platform lets you [4215] generate around 100 blog posts for that [4218] client for free. I ran a similar system [4220] my own agency, Skilled Revenue 90K, [4222] though obviously all about [4223] copyrightiting also has my own company. [4225] But I wanted to see if I could build out [4227] you since in my experience is a really [4229] easy win to offer clients. takes no [4230] extra working to add a few hundred bucks [4231] in perceived value for free. Like you're [4233] going to deliver a website anyway. [4235] Website anyway. How much nicer would it [4239] look if it came preloaded with a bunch [4241] of blog [4243] posts? Anyway, um that looks pretty good [4245] to me. Cool. Just going to run it. And [4248] honestly, yeah, no idea how good these [4250] are. No clue. I'm just going to give it [4252] a go and we're going to see where we [4254] land. [4255] Let me just make sure that all these [4256] variables are right and then we can [4258] upload the leads to the campaign and [4259] start gunning it. Okay. Icebreaker. [4260] Icebreaker. Now this has to be [4261] icebreaker. Icebreaker. Cool. Okay. So, [4265] now that I have all this, I think I'm [4266] going to have to change some of these [4267] variables. Actually, now what I have to [4269] do is I have to add follow-ups. That's [4271] annoying. Um, okay. Probably grab [4274] follow-ups from an old campaign that [4276] I've already written. Uh, let's see this [4279] one here. Okay. Let's do this. TLDDR. [4282] Know this is a long shot but agents [4285] agencies think I can add a fair amount [4287] of value. See previous email. This isn't [4291] ideal. Ideally you'd restate your whole [4293] pitch but um to be honest my back is [4295] sort of hurting and I just want to get [4296] something up and running. So I'm [4298] probably just going to copy this. Use [4299] the previous subject and we'll just run [4301] one follow-up from now on. The value in [4303] a single follow-up is obviously you send [4304] more emails that way. There looks to be [4307] a new line here. So I'm going to add a [4309] new line here. Instead of re agents, [4311] it's going to be [4312] videographers, editing agencies. We'll [4315] say website creative [4319] agencies. Okay. Then because we're using [4321] the previous step subject, it should [4322] come nested with the previous one up. [4325] Then why don't we just do two days in [4327] between each. Okay. We'll do 1 2 3. [4330] Okay. And now we'll just go to my [4331] inboxes here. So I think I have 15 [4333] mailboxes. 1 2 3 4 5 6 7 8 9 10 11 12 13 [4337] 14 15. Yeah, we do. So I'm going to do [4339] five each. So, one, two, three, four, [4341] five. This one. Uh, well, what am I [4342] talking about? Actually, let's just run [4344] all of them. Doesn't really matter, [4345] right? Yeah, we're just going to do all [4346] of them. 1 2 3 4 5 6 7 8. Looks good. [4350] And then we'll do all of them here as [4352] well. All right. Now, let's see what [4354] these settings are going to be. Are we [4355] going to do open tracking? Uh, no, I'm [4357] not going to. Delivery optimization, [4359] yes, please. Send first emails text [4361] only. Yes, please. We always send the [4364] first emails text only. Daily limit. Uh, [4367] well, I have 15 mailboxes times about 30 [4370] a day is 450 daily limit. So, how many [4372] am I actually going to send per [4373] campaign? Let's divide that by three. [4374] We'll do 150. Send 150 here, 150 there, [4378] 150 there. Easy. Show advanced options. [4381] Show advanced options. So, advanced [4382] options. Let's see what do we got. CRM, [4385] time gaps. Okay. Okay. Auto optimize. [4388] Yeah, we'll do reply [4390] rate. We'll do provider matching as [4392] well. [4396] So, provider matching and then reply [4399] rate. Then down here, I'll do the same [4401] thing. We'll do provider matching and [4403] then reply [4405] rate. And that looks pretty good to me. [4408] I think I'm just going to [4410] Yeah. So, now um we need leads, right? [4413] So, I don't actually have any leads in [4414] here. So, I'm just going to save all [4415] these first. I'm going to go um upload [4417] all the leads. And then I'm just going [4418] to double check before I make everything [4420] live. And then, um yeah, we should be [4423] good to go. So, let me just verify that [4424] we have all the ice breakers. Yep, looks [4426] like we do on that page. Real estate. [4429] Let's go down to video agencies now. [4431] Verify we have all the ice breakers [4432] here, too. No, not seeing any ones. Why [4436] not? So, do we get a bug or [4439] something? Okay. Well, how about the [4441] website aid? Oh, [4444] no. Oh, I ran them all. I just wasted [4447] like 3,000 ops. That sucks. I updated [4450] the same sheet. All right. Well, we'll [4452] just run them all again. No big deal. No [4454] problem at all. Sometimes you make [4455] mistakes and when you do, they cost you [4458] $6. And I just made myself a $6 mistake. [4462] video agency and then website agency. [4465] Rough [4466] stuff. But what are you going to do? [4468] Huh? Website [4471] agency. Don't do what I did. All right. [4476] Okay. All right. Let's run this again. [4478] So, I'm going to have to remove all of [4480] the old ice breakers because there's no [4482] Yeah, I think the reason we got that is [4484] because we didn't pass in a row number, [4485] right? There's no row number. Okay. So, [4488] let's run this [4490] again. Okay. Okay. Now, let's verify [4493] that looks good. It does. [4496] Sad. This one. How we [4501] looking? No, I don't seem to be filling [4503] that in. [4506] Am I doubling up again? I'm probably [4509] doubling up [4511] again. We're pulling from video agency. [4514] We're dumping in video agency. We're [4516] doing the row number. We're getting the [4517] Icebreaker. Oh. Oh, sorry. That's two. [4520] Icebreaker. [4521] Yeah. Yep. We got a lot [4524] of mistakes over here. This is also two [4527] icebreaker. So, Oh, in fact, [4531] it's even more. We'll go icebreaker [4534] there. [4537] And we just got to verify that this [4538] looks good. It does. [4542] Cool. All right. Now, let's make sure [4544] that everything is good. Website agency [4546] filling up. Yeah, website agency is [4549] filling up. How about this [4553] one? This one looks like it's filling [4556] up. Cool, cool, cool. And then how about [4559] this one? Yeah, looks good. All right, [4561] guys. So, do not waste 3,000 operations [4563] like me. [4565] You do not want to be wasting the [4567] operations. I wonder how many we've [4569] wasted now. Yeah, you can see my daily [4571] ops usage before like 500. Now it's at [4573] like 7,000. So, how many more I got? [4575] Okay, I have enough. I can run it [4578] all. Rough. I should note that you could [4581] build systems that optimize the hell out [4582] of this. Right now, we're sending 80 [4584] Google Sheets calls and we're also doing [4586] 80 OpenAI network requests. You could [4588] actually batch all this to one and you [4589] can make this one, well, you shouldn't [4591] do one, you should do two or three. [4592] usually like one every batch request for [4594] 500 or so rows. But yeah, we could [4595] realistically like do this whole thing [4597] in like 10 ops, but I decided that I [4599] would rather go speedy and still show [4600] you guys how to get up and running as [4602] quickly as possible rather than worry [4603] too much about making it super perfect [4605] and then spending a bunch of time on the [4606] [ __ ] that really doesn't matter. You [4608] could spend money for time. And that's [4609] exactly what we're doing here. All [4610] right, just reran the icebreaker [4612] generator and now we have everything all [4614] good to go for all three groups. I'm now [4617] going to just download this as a CSV. [4620] So, we're going to do just the real [4621] estate one first, and then I'm going to [4622] go to my real estate campaign, which [4624] would be this one here. And then just [4625] going to upload the leads. So, head over [4627] to leads, add leads. Notice I'm doing [4628] this manually for now, but obviously we [4630] could automate the hell out of it later. [4631] What we need to do now is we need to [4632] match the column. So, first name, last [4634] name, headline. Nope. Nope. Nope. We [4637] don't need any of this stuff. Nope. Not [4638] location. No, no, no. Email, though, [4640] icebreaker. That's what we need. So, [4642] we'll go custom variable there. The rest [4644] of the stuff I don't really need either. [4646] Obviously, you can import as much of [4648] these as you want. I just didn't import [4650] many of them. That's a lot of fields, [4651] right? So, I do not do the verification. [4654] I am going to check for duplicates [4655] across campaigns list and the rest of [4656] the workspace cuz I don't want to be [4658] sending people to different campaigns. [4660] Usually, we end up with like a few [4662] people dduped. So, that's that. Then [4664] I'll do the same thing for the second [4666] campaign which was my video agency. So, [4668] let me go download as a CSV. Going to [4670] add some leads. CSV. Just drag and drop [4673] this puppy. Same energy, right? So, what [4675] we are going to upload is the [4677] icebreaker. The rest of the stuff is a [4680] no. And we have a lot of columns here. [4682] This should be good. We We've got the [4684] first name, I think, which is what [4685] matters. We may have some crossover [4687] there. While that's uploading, I'll do [4689] the last one. So, website agency. I'm [4691] going to download this [4693] CSV. I'm going to go to leads and then [4696] add leads [4698] CSV. Drag and drop. Same energy here. [4701] Just want to upgrade or import the [4703] icebreaker. Go all the way down to the [4705] bottom and then add all of these [4706] contacts. Okay. [4708] All right. So now that we've done this, [4710] what we have to do is we have to double [4711] or triple check that the campaign is [4713] good to go basically. So the way that I [4715] do it is with preview. So just making [4717] sure that all of the data here is filled [4719] in. There's no thank there's nothing [4721] under thanks. That's a problem. So why [4724] is there nothing under [4726] thanks? Sometimes there is no sending [4729] account name [4730] variable. So I go to variables here. I'm [4733] not seeing anything. Instantly sending [4735] account name. Let me just see if we [4737] could [4738] add some variables here. I always change [4742] the name a bit. Okay, here we go. [4744] Sending account first name. This should [4746] be good. I'm going to go back here. Go [4748] sending account first name. Oh, we have [4750] one extra variable over here. One sec. [4753] Okay, that looks good. That looks good. [4755] Awesome. So, I'm going to just copy this [4757] over because I would have screwed up [4758] otherwise. I'm going to save and then [4761] delete any additional ones I have. I got [4764] to do it all over, unfortunately. It [4765] kind of sucks, but it is what it is. [4766] Let's just make sure that everything's [4767] good. Okay. And then I'll do the same [4769] thing [4770] here. Also do the same thing down here. [4774] That and then I should Oh, uh, do I do [4776] that? Oh, actually, you know what? Looks [4777] like I already had it on the the [4778] follow-up. Okay. So, what am I going to [4780] do now? I'm literally going to preview [4781] this for all of them. That looks good. [4783] I'm going to go here. Preview. That [4786] looks good. I'm going to go over here. [4787] Preview. That looks good. Going to go [4789] back here. Preview. Uh, thanks again. I [4792] don't know why we didn't get the sending [4793] account first name. Okay. Yeah, that [4795] looks good. Save this. Preview. Cool. [4798] Looks good. This one here is [4800] preview. Cool. That looks good. Let's [4802] now go over here. Preview. This is very [4805] important. Got a preview. For whatever [4808] reason, we didn't have the sending [4809] account first name. So, I'm going to [4810] save, then preview. Okay, we got it. [4812] Going to preview this. Okay, we got it. [4814] This actually, I didn't really fully [4816] preview this. Let me not cheat. Okay, [4818] cool. All right. Now that we verified [4820] literally everything here, we can [4821] actually get up and running with this [4822] campaign. After this, I'm going to take [4823] a little break. Usually, it takes a day [4825] or so to start receiving replies. Also [4827] worth noting that it's technically uh [4828] Easter right now, so I'm probably not [4830] going to get a lot of people responding [4831] to this in the near term. Oh, sorry. [4832] There's one more thing I have to verify [4833] first. Schedule. So, I always like doing [4835] Monday to Saturday. I like doing 7:00 [4838] a.m. to 6:00 p.m. ET. So, what I'm going [4840] to do here is go 7 6. Okay. I'm going to [4843] do Monday, Friday all the way to [4845] Saturday. Then I'll go 7 7 and then I'm [4849] just going to copy this and then paste [4850] it in two tabs. Okay. Okay. So now I [4852] have everything here. 7 to six should be [4855] good. I have double and quadruple and [4857] six tupal checked. Now I'm going to [4859] resume this campaign. I'm going to go [4860] back here. Now I have three campaigns [4863] that are up and running. Okay. So I'm [4865] going to go sign off for the day and [4866] then I'll check back in a couple and [4868] we'll see how the responses to this [4870] email campaign have gone. This is [4871] exactly what I would do. Starting a [4873] whole sequence from scratch. So we see [4875] here we've now checked that last create [4877] an irresistible offer. So we just have [4879] two things remaining. Okay, so I woke up [4882] at the crack of dawn this morning [4883] because I was very excited to see all of [4884] these email replies roll in. Uh, I got a [4886] couple of notifications over the course [4887] of the night. I decided I wasn't going [4888] to respond to anything just because I [4890] wanted to be able to review them all [4891] with you. But yeah, great news. In the [4893] last, I think 13 or 14 hours, we [4895] received a total of 11 replies. Seven of [4898] them were positive. So, this is one [4899] here. And you see even the maybe not the [4902] most positive of replies are still okay, [4905] right? So, Elizabeth, thank you for [4906] reaching out. I will pass, but [4907] appreciate you reaching out. Thank you. [4908] This fell says, "Natalie, thanks for [4910] reaching out. We currently subscribe to [4911] a platform that does what you're [4912] describing. It's called Y Lopo. I wish [4913] you all the best in this venture. [4915] Thanks." This person says, "No, thank [4916] you. I don't buy leads of any kind, and [4917] if I did, I wouldn't go after buyers." [4919] What's interesting is immediately after [4920] that, we just had a swarm of yeses. So, [4923] right after that, hey Samantha, thanks [4925] for reaching out. I'm open to work on [4926] Subnet if you could provide us leads for [4927] sure. Yes, I'd be interested. Let's [4928] meet. Let me know what time works for [4930] you. So, this person actually explicitly [4931] is like, "Hey, let's get going. Let's [4933] actually sit down and let's actually [4934] jump on a call." Obviously, something in [4936] my pitch, which in this case looks like [4937] it was the videographer pitch, uh was [4939] very um compelling to them. This person [4941] says, "Let's talk more." We also now [4943] have their phone number. We have all of [4944] their personal information. We give them [4945] a ring immediately if we wanted to. Um [4947] this person says, "Yes, I'd be [4948] interested. Send me more info." We're [4950] going to get a lot of like, "Send me [4951] more info uh replies to this sort of [4953] campaign just because the way that I put [4954] it together, right? I said, "Would this [4956] be a value of you? You know, let me know [4958] your thoughts and then I could put it in [4960] front of you." This more of like a value [4961] campaign. And when you have a value [4962] campaign, we're a bit lighter on like [4964] the let's book a sales call immediately. [4965] Obviously, we are asking, but not [4967] everybody will take us up on it. We got [4968] an I'm not interested from this person. [4970] We got a please send more details from [4972] this person. We got a thanks for [4974] reaching out. I'd love to test things [4975] out. I'm looking to expand my [4976] acquisition channels to the company as [4977] well. Mostly for your info. I'd like to [4979] get a bit more background on the process [4980] you have. So, I know we could work [4981] something out. Let me know if you can [4982] send a quick loom, but that's too much. [4984] Would love to just get a bit more info. [4986] This person here says, "Uh, hey, [4988] Elizabeth or Nick." So, I think the [4989] reason for that is because I said that I [4991] scaled 1 second copy. Yes. Saw the [4993] redirect to Nick's drive's personal [4995] brand. Is this a project under his [4997] umbrella? I'd love to see what it can [4998] do. Can you send me over a preview or a [4999] sample? I'm not going to say this is the [5000] best campaign ever. If we look at the [5002] stats, okay, we can already pull some [5004] numbers from it. The website agency [5005] campaign responded. We got five replies [5008] from it and every single one of those [5009] replies were positive. Okay. The [5011] videography campaign we got two replies [5013] from so far and 66% of the replies so [5015] far are positive. But we can already [5017] start making some determinations about [5018] like um where we go next and it's really [5020] only been a day which is pretty crazy. [5021] The real estate campaign has had three [5023] replies. Okay, so fewer replies than the [5025] website campaign by far and then we've [5026] had zero opportunities. So, we haven't [5030] really sent enough emails to be able to [5031] fully say whether or not this approach [5032] is going to work right now. But, I've [5034] run enough of these to know that when [5036] there's a a divide that's this big [5038] between a successful campaign, which [5039] basically has a 2% positive reply rate [5041] over here, then a campaign that has a 0% [5043] positive reply rate over here with, you [5045] know, 510 emails sent collectively [5047] across the two of them. You know, I have [5049] a feeling this real estate campaign [5050] probably just ain't it, dog. So, you [5052] know, a couple of minor optimizations we [5054] could do already if we wanted to [5055] significantly increase the number of [5056] positive replies we get. Like keep in [5058] mind that I I sent all this stuff on [5059] Easter Monday, right? So not most people [5061] aren't working on Easter Monday. I [5062] imagine the results would probably would [5063] have been a little bit better if I'd [5064] sent them during a weekday or work day [5066] or something. But a couple things that [5068] we could have done to make this even [5069] better. Uh a couple things we can do. If [5071] we cut this off, okay, then in an [5074] equivalent time period, so in I don't [5075] know 13 hours or however long it's been [5077] since I started this, then we would be [5079] able to take those 255 and we'd be able [5080] to disperse them across these two. So we [5082] would have been able to get another 125 [5084] here, another 125 here. And given the [5086] reply rates, we probably would have [5088] received another three positive replies [5090] here. Maybe like another one or two [5091] positive replies here. So [5092] mathematically, like we could already be [5094] in the neighborhood of generating 10 [5095] positive replies a day. As you see, a [5097] couple of those are legitimately like, [5098] "Hey, let's get on the phone right now. [5099] Hey, let's meet." If you can get them on [5101] a call, realistic rate is something like [5103] 60 to 75% positive reply to a call, [5105] assuming that you have a pitch like [5106] mine. If you have a much more direct [5108] pitch, um, if you're like, "Let's talk. [5110] Let me put something in front of you. [5111] I'm going to charge you money for this. [5112] Here's my crazy superdetailed offer." [5114] and you just give them all the [5115] information up front. Obviously, you'll [5116] have a higher conversion rate on the [5118] back end to a meeting, but you'll have a [5119] lower kind of positive reply rate [5120] initially. So, we kind of play with [5122] those numbers. You know, there are a lot [5123] of other things that we could do. You [5124] know, if I go back to this Uni box here, [5126] we can blend together the booking a [5128] meeting side of things with just direct [5130] calls. This is something I'm seeing a [5131] lot of people do. So, you know how um [5133] one of these people back here had their [5134] phone numbers, right? And their phone [5136] number was like fully listed out. We [5137] actually have a lot of their phone [5138] numbers as well. Yeah, this person here [5140] just listed out their whole phone [5141] number. Um, oops. I don't actually want [5143] to open FaceTime. No, thank you. That'd [5145] be fun. Hey, what's going on, man? Yeah, [5148] just recording a video right now for [5149] several tens of thousands of people. How [5151] you doing? Uh, that might actually be [5153] pretty enjoyable that I'm thinking [5154] about. But, uh, this person just has [5155] their phone number, right? So, what you [5157] can do is instead of just cold calling a [5158] massive audience of people right off the [5160] top, like a lot of people think that [5161] they have to do. And I understand why [5163] you want to cold call. Cold calling's [5164] it's it's fun. It's nerve-wracking. It's [5166] enjoyable. It's like an adventure, [5168] right? But ultimately, in 2025, it's not [5170] very effective. Okay, so instead of just [5172] cold calling totally cold audiences, [5173] what you could do is you can run a [5174] pre-qualify campaign like this, blast it [5177] out to, you know, as many people as [5178] humanly possible, get a 2% positive [5180] reply rate, send 10,000 emails, get 200 [5182] people saying, "Yeah, you know, I might [5183] I might actually want to do this." Then [5185] just call all of them. You know, the [5187] next time that you run a call campaign, [5188] every single one of those people will be [5189] warm and you'll be able to say, you'll [5192] not have to say, "Hey, you know, I've [5193] never talked to you before." It's like, [5194] "Hey, how's it going? You know, we just [5195] chatted over email. You just got back to [5196] me a few moments ago about um, you know, [5198] wanting to put a demo together. Just [5199] wanted to touch base. I think you guys [5200] are really cool and yeah, I just want to [5201] put myself out there. Like you can [5202] actually do those sorts of campaigns and [5204] you can do them really well. You know, [5205] when you've done enough lead genen, then [5206] you start to see patterns with this [5207] stuff and a big pattern in cold calling [5209] just for the people that are watching [5210] this video for your benefit is just most [5212] of the time when you call somebody, [5214] you're like instantly disqualified [5215] unless you have some previous [5216] connection. Quick and easy way to cut [5217] through all that noise. Some other [5219] things that I'd experiment with moving [5220] forward on these campaigns, uh, if I go [5222] back to this website one here, I would [5224] now experiment with cutting the campaign [5226] length pretty dramatically. So you could [5227] do this in the same campaign or you [5229] could do this by duplicating the [5230] campaign and then like comparing the [5231] stats one for one. Personally, I just [5232] like doing all the stuff in the same [5233] campaign cuz with the analytics tab, [5235] what we can do is we could actually see [5236] specifically which thing most people [5238] responded to. And it looks like so far [5239] basically everybody's responded to [5241] variant A. They haven't responded to [5242] variant B. So here you could actually [5243] just like add 10 different steps. [5245] Although keep in mind it'll split the [5246] volume across all of them. You could add [5248] 10 different steps and then you could [5249] see, you know, which which step is the [5251] best. And maybe one of them is just like [5254] a quarter of the length. Maybe one of [5255] them is just like a quick little [5256] message. And maybe you could experiment [5258] with things like asset based outreach as [5259] well, which is a very big uh trend right [5261] now that usually generates you [5263] significantly higher positive reply [5264] rates with the drawback being, you know, [5266] you have to like generate an asset. So [5267] you can send fewer emails a day usually [5269] because you have less data by which you [5270] can generate an asset and it usually [5272] also costs you like a scent or something [5273] per lead that you send out because you [5275] have to, you know, run the token cost to [5277] generate the PDF that's customized or [5278] something like that, right? So yeah, a [5280] lot of stuff that you could do here. [5281] Hopefully you guys are seeing where I'm [5283] coming from. In terms of next steps [5284] responding to these particular leads, [5286] what I would recommend everybody here do [5287] is when they get to this point with [5289] their own email campaigns or whatever [5290] sort of outreach, have some templates [5292] that do 8020. So have some templates [5294] that like get you 80% of the way there [5296] that answer basic responses like for [5298] instance, let's see this one here, okay? [5300] Where the person says, "Let's talk [5302] more." Have a template that says, you [5303] know, "Hey, name, thanks so much for [5306] getting back to me. really enjoyed [5308] reading through whatever website they [5310] have or digital property they have and [5312] sure like let's get something on the [5313] books right now. Do you have a calendar [5315] that you could send over? Would you like [5316] me to do it? If not, I have three times [5318] available XYZ. Just send me over the [5320] closest one and I can give you a ring [5321] directly at this number or we could set [5323] up like a Google Meet. The point I'm [5325] making is try and minimize the amount of [5326] back and forth. If you want to make a [5327] campaign like this work really really [5329] well, what you do is you actually just [5330] like add the times directly in the [5332] outgoing email and you say like, "Hey, I [5333] can meet 7 a.m. on whatever date, 9:00 [5336] a.m. on whatever date or 11:00 a.m. on [5338] whatever date." And then usually, you [5339] know, you'll get a lower positive reply [5340] rate, but you're going to have people [5341] give you the exact times that they want [5343] you to call them. And then you can [5344] actually just like do it without any [5345] back and forth. Um, but yeah, so what I [5348] would do is I'd make these templates, [5349] right? Once you have a couple of [5350] templates set up, so I don't know, like [5352] a positive reply template, maybe you [5353] have a template that's uh like, you [5355] know, please send me over more info. Oh, [5356] you have a template that explains [5357] something really briefly. Hook up the [5359] Unibox to your phone. Instantly has like [5361] a Uni box mobile app and so you can [5363] actually see the responses come in live [5364] during the day. Do whatever you need to [5366] do on your phone to prioritize those [5367] notifications and then have the template [5369] set up so that the second that an email [5371] comes in, you have like an internal [5372] rule. If it's between 7:00 a.m. to like [5375] 9:00 p.m. or something, your internal [5376] rule is I will respond to this email [5378] within 5 minutes. If you guys get leads [5380] like this, you need to treat them like [5381] gold. Okay? So, don't do what I did and [5383] wait, you know, so you could batch them [5384] all and have something nice and [5385] impressive to show on a YouTube video. [5386] The second you get a lead, that's when [5388] you you sit down and you message them [5389] back cuz leads are basically the closest [5391] thing you have to actual money at this [5393] point. And so, you need to treat them [5394] with a respect and reverence they [5396] deserve. Also, keeping in mind that it's [5397] cold outreach. You never really [5399] contacted a person. If you're not [5400] constantly on top of them, there's no [5402] reason for them really to get back to [5403] you. They have a bunch of other people [5404] in their email inbox trying to do the [5405] same thing. I'll be hopefully much worse [5407] than you are. Okay, great. Hopefully, [5409] I've shown you guys how you could whip [5410] up an AI service completely from scratch [5412] and get it to the selling stage. We're [5414] now at the point where we're validating [5415] the idea. We already have people that [5417] are interested in the loose thoughts [5418] that I put in front of them. What I'm [5420] going to do in subsequent videos is I'm [5422] actually going to work through building [5423] these services. So, building services [5425] for the campaigns that people respond [5426] positively to and showing you guys how [5428] to put together a specific templated or [5430] productized automation that you could [5432] then sell to audiences like this. This [5434] is the way you do business today. You [5435] don't build and then hope that people [5437] will come. What you do is you have some [5438] minimum viable product idea. Okay, you [5440] don't even have to put the product [5441] together. What you do is you start [5443] selling all the possible products you [5444] could put together. People respond [5446] positively to a few of them and then [5447] once you validated them, then you [5448] actually built the thing. So, this is [5450] going to be a series that shows you guys [5451] how to do all of that. And I'm really [5452] looking forward to putting it together. [5454] Thanks so much for making it to this [5455] point in the video. If you guys like [5456] this sort of stuff, you'll love Maker [5457] School. It's my 0 to1 daily [5459] accountability program where I basically [5460] show you how to do exactly what I just [5461] showed you in this video, but in way [5463] more detail. And instead of you just [5464] watching me do it, you actually get to [5466] do it with resources and templates and [5468] assets. Everything in the program is set [5470] up to make your life as simple as [5471] humanly possible. Whereas, if you guys [5473] already have a business that's thriving [5474] and you guys want to take it to the next [5475] level, perhaps by incorporating some of [5476] this outreach or maybe some other sort [5479] of standardized or templated system, [5480] definitely check out make [5481] moneywithmake.com. This is my premier [5484] and exclusive automation community [5485] currently capped at 500 where [5487] essentially we take something that is [5488] working then we sprinkle a little bit of [5490] automated systems productization [5492] templating and standardization to take [5493] you to the next level 25,000 bucks a [5495] month and beyond. Thank you again. [5496] Please like, subscribe, do all that fun [5497] YouTube stuff to bump me up to the top [5498] of the algo and I'll catch youall in the [5500] next video. Just

Video: https://www.youtube.com/watch?v=dZt4Ye5wHHs
Title: These 8 AI Trends Will Change Business FOREVER (Get In Early)
[0] The way that we do business today is [1] changing pretty fundamentally thanks to [2] AI. And I don't think a lot of people [4] have fully caught up to that yet. So in [6] this video, I want to cover eight major [7] trends that are impacting things like [9] market dynamics, things like the value [11] of product over distribution, as well as [13] a few others. The idea being if you [14] learn these eight AI trends, you'll be [16] positioned a lot better to build a [18] successful business over the course of [19] the next 5 or 10 years. Okay, so what's [21] the major first trend I want to talk [22] about? Well, it's basically the fact [24] that distribution is now more important [25] than product. Distribution for people [27] that don't know is basically the number [28] of people you could sell to. Okay. [30] Product is obviously the thing that you [31] sell. So in the past the thing that you [34] sold was obviously the most important [35] thing. You would spend hours of arduous [37] labor maybe building some physical [38] product, some hardware product or some [40] software product and then only after you [42] built the thing would you try and like [43] find people to buy it. But nowadays it's [45] actually the exact opposite. What you do [46] is you first find an audience of people [48] that might want to buy your product and [49] then you spend the time and energy [51] creating your product. So if I could [52] just make a long story short and I'll [53] cover why all this stuff is happening. [55] If this is the value of let's say [58] product over here and then this is [60] distribution and then this is time over [62] the course of the last I want to say 50 [64] 100 years the value of your product has [66] plummeted. AI now makes it very easy to [69] get up and running and started with [70] basically any product regardless of how [72] complicated it is. The value of [74] distribution has since spiked and I make [76] an argument that we are basically right [78] over here right now. Okay, this is us. [80] So, we're far beyond the point where [82] product is more important than [83] distribution. We're very much into [84] distribution territory. And what this [86] means in practice is if you're [87] developing a product or a service or [90] course or a community or or whatever it [92] is that you are attempting to sell, [93] instead of focusing on building the [94] thing, what you should first do is focus [96] on acquiring a list of people who might [98] actually want to buy it. Okay? So, if [100] you're going to spend 100 hours building [101] a product, then you spend at least 100 [103] to 150 hours marketing that product. [105] Artificial intelligence has made this [106] really easy. You know, nowadays you [108] could basically pump in, hey, make me a [109] Netflix clone and one of these apps, so [111] Firebase or Bolt or Lovable, they [113] actually do a pretty good job. These [114] apps most of us now know and are [116] familiar with. These have really only [117] been around for like the better part of [118] the last 6 or 12 months. These have [119] actually only been here for a very short [121] period of time. If you zoom out and you [122] look at the trend, pretty soon these [124] apps will be able to create more or less [125] anything of any sufficient level of [126] complexity. They'll be able to create [128] themselves pretty soon, right? Create me [129] a lovable or a bolt.dev clone and then [131] it's just like a recursive loop. So, [133] we're really moving towards this like [134] the chat GPT interface. It's like this [138] unib thing right over here and it's [140] like, hey, what do you want to do? [141] You'll be able to make more or less [142] anything. Think about where that leads [144] us to. That leads us to more or less [146] everything being a commodity and there [147] being very little mo in the actual [148] product. So instead, attention and [150] distribution channels the primary [151] competitive advantage. And if you have [153] good distribution, it'll beat the best [154] product every time. Okay. I had AI [156] generate this image, which is a good [157] example of product over distribution. [158] This image might have taken who knows [160] like a good artist like an hour or [161] something like that to draw just a few [163] years ago. Nowadays, you could have a [164] very similar quality quote unquote [165] product in just a few seconds. But let's [167] say, you know, this is business A, and [168] business A spends all their time on this [170] beautiful, amazing product over here. [172] Then they spend zero time marketing. [173] Business B creates a pretty crappy [175] product to start with. I don't know, [176] just doesn't look as cool. But then they [178] focus most of their time and effort on [179] marketing it. Okay? Well, business B is [181] going to win versus business A every [183] time. And the reason why is because [184] they're going to make some quick and [186] easy money at the beginning [187] front-loading their product. Even though [188] their product isn't as good quality as [190] yours, and maybe you charge more money [191] for it or whatever, they're going to [192] make easy money. Once they have that [193] money, okay, well then what they can do [195] is they could just take that money and [196] invest it back in the product. So even [198] if the objective quality of their [199] product was way worse than product A [202] over here, very quickly they get to [203] produce multiples, they get to reinvest [205] back in the quality of their product and [207] then they end up having both better [208] product and better distribution. So [210] distribution is really the key. That's [211] where we need to focus on now and then [213] moving forward. And if you're not [214] already focusing on distribution, highly [216] recommend that you guys do variety of [217] ways to do so. Obviously, I typically [219] champion like cold outbound methods for [221] products before you actually build the [222] product or build a service or whatnot. [223] You actually validate it. So, if you're [225] starting an AI automation agency, for [226] instance, you create a bunch of example [228] offers. You pitch 10,000 people with [230] three of these, and then you just [232] determine of the 3,000 people that I [233] messaged with product A, another 3,000 [235] with B, and another 3,000 with C, which [237] one had the best results. Then you just [238] let the leads guide you. Let the market [240] demand itself push you in the direction [241] of how you should develop your product. [243] So, that's number one. Number two is, [244] you know, I'm talking about moat. Well, [246] if you think about it, basically [247] everything on planet Earth right now is [249] set up to consume as much of our [250] attention as humanly possible. So, we [252] have obviously social media platforms, [253] but then we also have the added [255] interconnectivity of just like life in [256] general. Everybody's carrying around [258] essentially a freaking mega distraction [260] machine in their pockets all day. We [261] usually have mega distraction machines [263] literally glued to our ears all day. We [265] have so many opportunities for [267] distraction that it's insane. Not even [268] counting for the the technology that [270] we're using. And the proportion of time [271] that people just spend alone, not under [273] the influence of another brain [275] essentially. I mean, most people spend [276] like five minutes a day alone. And you [278] know, if we do, our hearts start [280] pounding, we start getting really [281] anxious. You know, the lack of [282] stimulation does really weird things to [284] most people. So my argument is that [285] focus and discipline are the ultimate [287] moat in today's generation and beyond. [289] And the reason why is the value of [291] knowledge itself is also going down [293] because we have tools that are capable [295] of teaching us more or less anything as [297] quickly as we want to. And we also have [299] more or less all of the knowledge that [300] we could ever possibly want at our [301] fingertips at any given point. So if you [303] think about this, this is almost like [304] distribution versus product just sort of [306] zoomed out a little bit. The value of [307] knowledge itself has gone down. But you [309] know what hasn't gone down? Our ability [311] to learn that knowledge. In fact, I'd [313] say that skill now is much more valuable [315] than actually knowing the stuff. So [317] there are a bunch of different ways you [318] can frame this. In um psychology, they [319] talk a lot about crystallized [321] intelligence versus fluid intelligence. [322] Crystallized intelligence is sort of [324] like, you know, the thing that you uh [327] all of the knowledge in the various [328] niches is supposed to be a crystal. It's [330] not a very good crystal. All of the [331] knowledge of the various niches and all [333] of the facts that you've learned over [334] the course of your lifetime. And you [335] contrast that with fluid intelligence, [337] which is basically just your ability to [339] learn. It's almost like your fluid IQ, [340] how quickly you can pick up concepts. [342] Okay? And nowadays, this fluid [343] intelligence, I'm saying, is much more [345] important than the crystallized [346] intelligence. It matters way less what [348] you know. It matters how quickly you can [349] learn. And the only way that you learn [351] stuff quickly is with focus and [352] discipline. Meaning that these are now [354] the ultimate mode. Your ability to pick [356] things up in a short period of time is [358] the ultimate mode. So, you know, as the [360] AI tools and these capabilities are [361] going to continue to proliferate, we're [362] going to have more opportunities for [363] distraction than ever. The total [365] fraction of the day that we will have [366] available to actually sit down and focus [368] on something, it's just going to [369] continue decreasing until we're down to [370] seconds. So, success requires sticking [372] with one approach long enough to perfect [374] it, believe it or not. Whether you're [375] learning something or executing on [376] something, if you can just get in the [378] habit of setting aside a couple of hours [380] a day, even just an hour a day of [381] focused work, your relative competitive [383] advantage to everybody else just [385] skyrockets and it's insane. Okay, so [386] instead of switching paths and being [388] distracted by shiny objects and [390] constantly chasing the next big thing, [391] your ability to just sit down and attack [393] a specific topic, believe it or not, is [395] actually the most important thing [397] nowadays. And also, you know, nowadays [398] we're in like a culture where we just [400] say yes to everything. The ability to [402] say no to new opportunities is, I think, [403] another really big and understated [405] skill. If you can get in the habit of [406] actually being confident and capable, [408] saying no to the myriad things that come [410] your way. Hey, use this shiny new tool. [412] Hey, let's go over here. Hey, let's talk [414] about this. Hey, let's go to this [415] conference, whatever. Your ability to [417] make a ton of money relative to [419] everybody else in your niche just [420] skyrockets. I see this myself starting [422] to be invited to various events and [423] whatnot. But I just look at the value of [425] that over time. And basically what I'm [427] seeing is that like the value of [428] knowledge has gone down and then the [430] value of focus, your ability to learn [432] new things has since gone up. Okay, so [434] I'm going to be doing a lot of these [435] graph sort of style drawings over the [437] course of the next little bit, but [438] hopefully you guys could see that [439] product has gone down, distribution has [441] gone up, knowledge is going down, focus [443] is going up, and there are a bunch more [445] of these trends that I think are [446] converging on a pretty interesting [448] phenomenon. Okay, here's another big [449] trend that I'm seeing, and it's that [451] outcome ownership. your ability to own [453] an outcome trumps the ability to own [455] technical skills. Again, because the [457] value of knowledge and skills are going [458] down. What business owners care more [460] about is not actually your knowledge of, [462] let's say, how to program something or [464] your knowledge on how to create a script [466] or create an app or, you know, implement [467] some artificial intelligence stuff in [468] the person's business. What they care [470] about is your ability to own the [472] downstream outcome of that, the money, [474] the number of users, the growth. So, if [476] we contrast, you know, person A with [477] person B over here, person A is focused [480] all on the spreadsheets and the [481] technicals. Okay? Person B is just [483] focused on the money. Well, it's person [485] B that's going to win when they pitch a [486] business because all businesses are [487] going to care about moving forward is [489] not the ability to technically implement [490] something because obviously the value of [492] of knowledge and stuff like that is [493] going down as we discussed. And what [494] they care about is the ability to [496] actually drive some sort of revenue [497] outcome. So, people care about results. [498] They don't care about the fancy [499] technology. And as technology gets [500] fancier and fancier and fancier, the [502] value of results is just going to go up [503] as a result. If you can position [504] yourself as the owner of a business [506] outcome and not like a technology [507] provider because this is being [508] commoditized, you increase your [510] comparative value a lot. Anytime that [512] I'm talking with businesses nowadays, I [513] focus on return on investment language [515] rather than some sort of technical spec. [517] I focus on how much money their [518] investment in me is going to make them. [520] And I focus on basically making it a [522] black box. You know, if I'm offering a [523] service like an AI automation project or [525] something like that, I don't actually [526] talk about the project itself. I [527] basically just say, "Hey, you know, we [529] can implement XYZ in your business. We [530] can make you all of this money." People [532] care a lot less about what the XYZ part [534] is and they're comfortable just treating [535] it as this is my little black cube over [537] here. They're comfortable treating it as [539] like, hey, I put in [540] $1 because anything else would just be [542] overwhelming for the business person. [544] There's just so much technology [545] everywhere that, you know, it just [546] doesn't make sense. These are supposed [547] to be clouds and I'm not doing a very [549] good job of it. The fourth big shift is [551] that niche definition, your ability to [552] pick and choose a niche becomes a [555] competitive advantage in today's [556] generation. The point I'm making here is [558] essentially that since distribution is [560] much more important than product, [561] everybody will quickly flood [563] distribution channels. And so it's not [565] sufficient for you just to be a website [567] developer anymore. It's not sufficient [568] for you to be a social media marketing [570] agency anymore. It's not sufficient for [572] you to be an AI automation agency [573] anymore. These markets are growing [575] incredibly sophisticated and AI can [576] replicate most things relatively [578] quickly. So if you don't niche way the [580] hell down, your distribution will have [582] basically no effect either. What I mean [584] by this is instead of being a social [585] media marketing agency, be like a [587] Facebook PPC agency for dog walkers or [590] something. Okay? Find the confluence of [591] three or four different approaches or [593] niches or takes and then focus on that [595] in your distribution. The reason why is [597] because customers will one pay premium [598] for solutions tailored to the specific [600] niche because the perceived value of the [602] product or the service that you are [603] creating is a lot higher. Um, you'll [605] also, uh, essentially hyper specializing [609] will let you target significantly deeper [612] and the likelihood is you'll have a much [614] higher conversion rate than if you just [616] leave it up to some generalist AI stuff. [617] And also, most people just know enough [619] these days about basic services and [621] basic products that they can just [623] replicate it themselves because they [625] have access to basically like a freaking [627] galaxy sized brain at the click of a [628] button. So if you don't have some sort [630] of comparative advantage relative to the [632] 1 million other people in the AI [634] automation agency niche and two relative [636] to like the actual AI tools themselves, [638] your business will have no competitive [639] advantage. And so this is a distribution [640] tactic, but basically define your [642] niches, okay? Have a couple of niches. [644] Don't do everything for everybody [645] because as Horosi and a couple of other [647] people always repeat, then you'll do [648] nothing for nobody. And by the way, a [650] quick little hack here. You don't [651] actually just need to like put all of [652] your eggs in one basket. This is your [654] basket. Okay? Wonderfully drawn basket I [657] might add. Don't put all of your eggs in [659] there. I mean, this is Easter, so we're [660] talking eggs, right? Instead, build a [662] couple of baskets. Test out each of [664] those baskets. After you've identified [666] the highest performing basket, only then [668] do you actually put your eggs in there. [670] Nowadays, because you can replicate most [672] approaches pretty easily with AI, you [674] can choose, you know, X niches for way [676] less than X times the work. What I mean [679] by this is, let's say you have all of [680] your eggs in one basket as sort of like [682] your first option. Okay, that would take [684] 1x the work for 1x the niche. Well, [687] nowadays what you can actually do is you [689] could you could do three times the [690] niches. You could pick three niches or [692] something and then it only take you like [694] 1.5x the work because you can learn a [697] bunch of stuff about a specific niche. [699] Then then you could have well first of [700] all artificial intelligence could just [701] very quickly and easily find analoges [703] and things like that in other niches, [704] but you can do a lot of work for one [706] niche and then you find that a lot of [707] businesses suffer from pretty similar [708] problems and you can just like copy and [710] paste the approaches you did for [711] business A to business B. I guess the [712] point I'm making is you can get away [713] with like 50% more work for 300% more [715] results. This is something that I see a [717] lot of people do in maker school and [718] it's something that I pitch pretty [719] heavily. And then what you do is you [720] just have the results of the business [721] drive you. So if niche uh two ends up [724] delivering superior results versus niche [726] one and three. Well then you actually [727] have some data backing you and then you [729] kind of go all in on niche two if that [730] makes sense. Fifth major point is this [732] notion of the idea guy. Okay. And how [735] idea guys are actually going to win in [737] the future. So back in the day the whole [739] adage was ideas are worthless without [742] the ability to execute on them. Right? [744] But if you think about it, the bar for [746] everything has plummeted. So it's way [749] easier to do everything now compared to [752] just a few years ago. And so, you know, [754] the ability to execute stops being a [757] major competitive advantage. And [758] instead, it's just your ability to to [760] move quickly and then come up with an [763] idea and then basically be the first [764] person to a market. So yeah, speed to [767] market as I mentioned with distribution, [768] it's way more important nowadays than [770] the actual ability to execute. I [772] mentioned earlier um AI art, right? [774] Well, AI art is a really good example of [776] this. In order to generate this picture, [778] now you don't need to be like a good [779] comic style creator. What you need to do [781] is you need to be able to come up with [783] an idea of hey, I want a guy propelled [785] by a rocket that says idea over a [787] football field with a sign that says [788] innovate faster with a bunch of people [790] running after him, right? That ability [792] to come up with that idea ends up being [793] more important. And your ability to do [795] that quickly ends up being more [796] important because there are these gaps [797] in the market that are going to open up [798] and then be filled very fast. So unless [800] you could sweep up the lion share of the [801] distribution, you know, you'll sort of [802] be left behind. So as opposed to [804] business being about execution before, [806] it's really just about your ability to [807] come up with an idea as opposed to uh [810] you know winning and business being [812] about knowledge, right? It's about your [813] ability to learn a field really quickly. [816] Um you know, as opposed to being about [818] product, it's your ability to get it in [820] front of as many people as humanly [821] possible. And this is just another trend [823] that is similar to the other ones that [824] I've mentioned that's just all about [825] getting up and running as quickly as [826] humanly possible. And then once you're [828] up and running, then you can like [829] reinvest stuff, right? But it's just [831] about getting up and running. The whole [833] like iterate, the whole like MVP [834] approach is more or less what I'm [836] getting at. So you can do so with a ton [838] of these apps, right? Like Firebase, [839] Bolt, Lovable, Make.com, Naden, right? [842] Uh various social media approaches that [844] you could validate quickly and pretty [845] effectively. Uh your ability to just [847] come up with ideas and then take them to [848] market first is what will ultimately set [850] you apart because, you know, kind of on [852] a related note, this idea of feedback [855] over planning. The people that spend all [857] day planning and coming up with super [858] long, I don't know, flowcharts of [861] various things that they could do and [862] how they're going to execute on XYZ, [864] that stuff's less important than just [865] coming up with an idea, launching it, [866] and then getting a bunch of feedback. [868] So, this is basically like how you do [870] business in 2025 and beyond. First, [871] championed by Amazon. Well, not first, [873] but majorly championed by Amazon in the [876] last couple of decades. Feedback is the [877] main mechanism by which you should be [879] hitting market, not necessarily [881] planning. Okay. Another really big point [883] I want to touch on is this notion of [885] human touch at critical points. So [887] obviously what is going to happen over [888] the course of the next like 5 10 15 [890] years? Well, we're already seeing AI [891] make serious inroads into voice agents. [893] We see it making serious inroads into [895] handling and processing customer [897] information, serious inroads into things [899] like music and song and dance and [901] whatnot. So because of this, okay, the [904] comparative value of your skill and your [906] ability to do all of this stuff goes way [909] down because it's, you know, it's all [910] synthetic. It's all artificial, right? [912] People want to talk to people. And so [914] even if an AI model is capable of [916] replicating a person, when everybody [918] else realizes that that's an AI model [919] and not a person, the comparative value [921] of this goes way down. And so the [922] businesses that are going to crush it in [924] the future are ones that are going to [925] weave in human touch into these mostly [927] automated processes at very critical [929] points. They're going to weave in a [931] human sales agent at like the moment [933] just before you buy. They're going to [934] have some sort of like physical [936] in-person event that like you cannot [938] replicate thanks to artificial [939] intelligence. They're ultimately going [941] to have key customer decision points, [942] key inflection points, key [944] transformation points or activation [945] points, whatever concept you want to use [946] for them. Be human as opposed to just [948] artificial intelligence. These ideas of [950] hybrid models, I think, are really going [952] to like champion the successful [953] businesses of the future. And they're [954] also going to allow you to charge much [955] higher ticket because you have that [956] human touch. I guess you can kind of [958] think of it as, you know, arteasonal [961] sort of work. Like if you think about [962] it, we have the means to make really [964] high quality plates and bowls nowadays, [967] but people still buy artisal plates and [969] arteasonal bowls that cost them 10 times [972] or 20 times the amount simply for the [974] sole reason that they know that human [975] hands went into the shaping of this [977] thing. Okay. So if you extrapolate that [979] idea into the future where AI is now no [982] longer just robots are not just creating [984] bowls and automating manufacturing [985] processes but are actually like [986] controlling most of the knowledge and [988] the services economy as well. Um you'll [991] see a similar effect. You'll see people [993] consciously choosing to want to work [995] with human beings even if it's slower or [997] even if there's more of a cost. And so [999] companies that can find ways to weave in [1001] human touch at critical points without [1003] necessarily compromising the quality of [1004] the service that much um are ones that [1006] are going to win. And this is going to [1008] significantly buy you longevity as well [1011] because again once everything is fully [1014] automated and AI then more or less [1016] everything becomes a commodity. If you [1017] could have some parts of that be human [1019] or some parts of that be anchored in the [1020] real world essentially you know you'll [1022] have a lot more runway with your [1023] business compared to most other ones [1024] that are automatable. So the key is [1026] build systems that augment people not [1028] replace them. And this is going to be [1029] doubly true for the service industry. I [1031] think that like a lot of, you know, [1032] digital products and whatnot are going [1034] to be more or less fully automatable, [1036] but I think services that involve some [1039] sort of human touch that are augmented [1041] are the ones that are really going to be [1042] making a lot of money over the course of [1043] the next few years. So yeah, you know, [1045] here's a little flowchart with the [1046] customer journey. If everything is [1047] automated and if the customer knows [1048] everything is automated and you save a [1049] bunch of money or whatnot, that's a [1051] pretty low value interaction. But if [1053] there's a bit of perceived human touch, [1055] there's trust and loyalty, you can get [1056] by with premium pricing and then you can [1058] crush it. Okay, another big thing I want [1059] to talk about is this idea of hitting [1061] 70% as opposed to 100%. So, in the past, [1063] you needed a ton of certainty in order [1065] to do anything. The capital cost of [1067] starting a business is pretty high. So, [1068] you needed to be pretty certain that [1069] that business was going to succeed [1070] before you spent all of that time, [1072] money, and energy in buying the heavy [1074] machinery or investing in the software [1076] developer to create your product or that [1078] sort of stuff, right? Hence why you [1079] typically needed to do a bunch of market [1080] research, you needed to do a bunch of [1081] planning, you need to do like a bunch of [1083] stuff super nuanced and deep dive that [1085] solves exactly a specific customer [1086] segment and you needed validation for [1088] that. Well, nowadays obviously with the [1089] barrier entry being so you don't [1090] actually need that. So it's simple 70% [1092] solutions that be complex 100% ones [1094] because you get up and running with the [1096] bootstrap 70% solution and then you very [1098] quickly just reinvest that into your [1100] solution over and over and over again [1101] until it ends up being better than that [1102] complex one that you had earlier. Okay, [1103] this is very related to my previous [1105] point about idea guys. But people that [1107] can get 70% of the way there are are [1108] beating people that get 100% of the way [1110] there all over the world right now and [1111] that's only going to continue to to [1112] happen. So basically focus on a couple [1114] of points, speed and usability. So as [1116] long as you can get to market really [1117] quickly and then somebody can just like [1118] use it really fast and it's not like a [1121] totally trash kind of customer [1122] experience, your ability to succeed just [1124] skyrockets. Your probability of success [1126] skyrockets. The opportunity cost of [1128] waiting is going way the hell up because [1130] now they're way more market entrance. So [1132] before, you know, if you just spent an [1134] additional month fine-tuning your [1135] product, you might have actually been [1136] able to get away with that. Nowadays, if [1137] you spent an additional month [1138] fine-tuning your product or service, [1140] between you now and then you a month [1141] later, there's going to be a million [1142] more entrance into the market. It's [1143] going to be very difficult for you to [1144] make any progress. Um, and then, yeah, [1146] simple solutions create faster adoption, [1148] less user resistance. This is related to [1149] that earlier point I was making about [1151] blackbox products and blackbox services [1154] where all you're really doing is just [1155] saying, hey, you know, a B2B environment [1157] anyway, you give me X dollars and I'll [1159] make you $5. that's the only real thing [1161] that matters and that you care about. [1162] And then what's really interesting is [1163] that good products or okay products that [1165] actually ship always outperform perfect [1167] products that don't. I think simple [1168] products are easier to explain, sell and [1170] support. So I focus on those and then [1171] you know you get iterative improvement [1173] with that market feedback. So basically [1175] you launch you know your MVP and you [1177] know MVP is a term that I think we're [1179] all familiar with um now but like now [1181] we're talking really really really [1182] really barebones MVP. Okay. You then get [1185] a bunch of feedback and then you use [1186] that to improve and then you relaunch [1189] the MVP or you make some iteration or [1190] some change to it and then you basically [1192] just do this over and over and over and [1193] over again. That's what ultimately [1194] results in this exponential graph that I [1196] think we all want in our businesses. If [1198] you try and just oneshot everything from [1200] start to finish, the likelihood you'll [1201] actually be able to do this with a very [1203] complex system or whatever just goes way [1204] down. So focus on like these iterative [1206] progressive improvements, I guess, as [1207] opposed to the big ones. Okay. And the [1209] last point I'm going to make is that [1210] long form content is going to win in the [1211] next few years. Now, it's funny because [1212] I AI generated this image and it said AI [1214] genated content, human created content [1216] instead of um generated and created. And [1218] I actually did this on well, I didn't do [1220] this on purpose, but when it was [1221] generated, I like allowed this to happen [1223] because I found it pretty funny. The [1224] idea is basically there's going to be a [1226] massive explosion in short form content [1228] over the course of the next little bit. [1230] So, if you're talking distribution [1231] channels, the distribution channels that [1233] win are extraordinarily long form and [1236] they're also things with a human touch. [1240] Okay? because the ability of models to [1242] create long- form content and the [1244] ability of models to sustain a certain [1245] human presence or character over time is [1247] going to take a lot longer to solve [1249] that. But, you know, you can imagine a a [1251] bajillion Instagram reels being created [1253] by artificial intelligence over just the [1255] course of the next year. And so, in a [1256] market that is going to be filled with [1257] like synthetic stuff, human created [1259] content will quickly be outpaced and [1261] outshadowed. And the only way to like [1263] kind of prevent that or or I guess push [1264] against that or give yourself as long as [1265] possible to actually do well on one of [1267] these distribution channels is to make [1269] everything really long form. This is [1270] what I've been doing over the course of [1271] the last year or so, maybe year and a [1272] half now. The main thing I've been [1273] talking about, obviously, I'm just [1274] yapping into a screen, but like consider [1277] the ability of artificial intelligence [1278] to replicate all of this. It's probably [1280] not going to happen for at least the [1281] next few years, right? I mean, I am like [1283] whiteboarding stuff. I'm interacting [1284] with three or four different formats [1286] here. Um, moving the screen around [1287] slightly. I guess the point that I'm [1288] making is it's a lot more authentic of [1290] an experience and authenticity over the [1291] course of the next years is going to be [1292] at a premium. The best way to buy that [1294] is with long form. So, yeah, we're going [1296] to have a flood. Okay, if right now, [1298] let's say out of 100 posts, like 90 [1301] posts are human and then 10 posts are [1304] like fully AI or synthetic, in the [1306] future it's going to be like 0.001 post [1310] and then [1312] 99.999 synthetic. Okay, so synthetic is [1315] just going to be insane. It's not even [1316] going to be close. The human content [1318] will just plummet. And so the only real [1320] way to, I guess, stand out will be long [1322] form. It'll be like, hm, you know, I've [1324] seen the quadrillionth AI reel today. [1326] It's like I want to talk to a person. I [1327] want to see what actual people are doing [1329] with this technology. I want to see what [1330] actual people are like. Obviously, this [1332] is related to that idea I was mentioning [1334] earlier about like, you know, why do [1336] people still buy artisal bowls on Etsy [1338] and whatnot? It's because they're like [1339] human created and people prescribe some [1341] sort of value to the humanity of a [1342] process. But yeah, I guess a major point [1344] that I'm making is that preAI creators, [1346] creators like me and creators like [1347] people over the course of last years are [1349] going to have an inherent advantage over [1350] post AAI creators just cuz we'll have [1351] all of this content and it'll be like [1353] super long form and authentic. And then [1354] depth and expertise will be key [1356] differentiators for personal brands. But [1357] I think more important than both depth [1358] and expertise honestly is probably just [1360] like the character. People will be drawn [1362] to the character and you can only really [1363] get that with long form. So yeah, [1365] authenticity is at a premium. I think [1367] before, you know, especially over the [1368] last few years, the sort of like short [1370] form content blew up. It's like a [1371] million cuts and stuff like that. And [1373] you know, people did that because they [1375] cared a lot more about just capturing as [1376] much attention as possible. And like [1378] creating super flashy, sexy content is [1380] like, you know, it like activates your [1382] lyic system basically. and it's fun and [1384] it's enjoyable and people like watching [1386] that and there was this big flood of [1387] people that were into that. But I think [1388] now just given how much more [1390] reproducible it is. The thing that [1391] people really care about more so than [1393] just optimizing every second of their [1394] time is just the authenticity and their [1395] ability to connect with people. It's [1396] like oh that's a real human being that's [1398] not some robot or whatnot. So yeah, more [1400] or less those are the eight trends in a [1402] nutshell. I know I covered a variety of [1403] topics here. I wanted to start really [1404] broad with that distribution of her [1406] product and then I wanted to kind of go [1407] across a variety of niches and a variety [1409] of topics and concepts. My goal is not [1411] to give you guys like a zero to one road [1412] map with this video. I just wanted to [1414] alert you as to a bunch of trends that I [1415] think people are currently taking [1416] advantage of and making a bunch of money [1417] using. So hopefully you guys can arm [1419] yourself for that next wave of business [1420] as we enter the AI era. If you guys like [1422] this sort of stuff, I do a lot of [1424] strategic and tactical work in Maker [1425] School. It's my 0ero to1 community to [1427] get you your very first automation [1428] agency client in 90 days fully [1431] guaranteed or I refund you the cost of [1432] the program. Otherwise, please check out [1434] make money with make. Like, comment, [1436] subscribe, do all that fun YouTube stuff [1437] and I'll catch you on the next video. [1439] Thanks so much.

Video: https://www.youtube.com/watch?v=NaM0ACqmmuE
Title: How To Scale Your AI Agency So Fast in 2025 It Feels ILLEGAL
[0] Here's how to scale your AI agency so [2] fast in 2025 that it feels illegal. What [4] I'm going to do here is run you through [5] a simple four-step process that I and [7] many other people have used to make [8] millions in this industry. It's going to [10] start with zero to one, taking you from [12] nothing to something. Then it's going to [14] go one to 100, turning you from [16] something to many. Then we're going to [18] focus on optimization. And then finally, [20] at the end, we're going to talk about [21] scaling past the constraints of the [23] business model. Some reasons why you [24] might want to listen to me. I scaled my [26] own AI automation agency from 0 to [28] $72,000 per month. I've also scaled a [30] content marketing agency from 0 to [32] $92,000 per month. And after I did both [35] of these, I took my knowledge and I used [37] it to create the coaching and [39] information product business that I'm [40] now operating talking to you about this [42] stuff on this video um to make over [44] $200,000 a month in profit. So, I know a [46] thing or two about starting from scratch [48] and then scaling it up to a reasonable [49] sum. In this video, I'm just going to [50] show you more or less everything that I [52] know about it. Okay. So, very first step [54] that I want to talk about is in order [56] for us to proceed, we need to understand [57] this simple concept, which is that what [59] got you here won't get you there. Now, [61] this is something that I just came [62] across in my community the other day. [63] Somebody said, "Hey, I don't want to [65] think small. I don't want to think about [66] $10,000 per month. I want to think about [67] $100,000, a million dollar per month." [69] So, that's what I want to keep my eye [71] on. And that's the the skills and the [73] level that I want to operate at. And I [75] understand the idea here. And I think a [76] lot of gurus on the internet and stuff [77] talk with this sort of language here. [79] And maybe they're well-intentioned. They [80] want you to think bigger. But if we're [81] just being pragmatic, the skills and the [83] tools and the strategies that you employ [85] to get to maybe your first $10,000 a [88] month, they're actually very very [90] different than the steps that you're [91] going to take if you wanted to scale to [93] a million dollar a month or something. [95] Okay? So, if you guys are thinking [97] really really big, then you're going to [99] kind of lose the forest for the trees [100] and you're not necessarily going to be [102] taking the straightest line path to an [103] intermediate goal like 10,000 bucks a [105] month. So my whole like prevailing [107] philosophy, you know, from when I [108] started business better part of about a [110] decade ago has always been do the thing [111] that works for the level that I'm at and [112] then squeeze as much juice as I can out [114] of that and then use that to like fuel [115] the next step. So maybe I start with 10k [118] a month and then I do 100k a month. Then [119] after I do 100k a month, only then do I [121] do the strategies that take me to a [122] million. Okay? So I'm going to be [123] talking in loose terms about this and [125] and a bunch of other ones, but the very [126] first step and stage that I want to talk [128] about is this from zero to one stage [129] where a lot of you guys are probably at [130] watching this video. So 0 to one, what [132] does that mean? That means your first [132] 10,000 bucks realistically. I think you [134] can define this in a variety of ways, [135] but if you guys haven't made your first [136] 10,000 bucks on the internet or with [138] this specific business model, here is [139] more or less everything that I would do. [141] Very first thing, and by the way, this [142] isn't special. Like, anybody can make [144] $10,000 with this business model. You'll [145] find that I just repeat the same things [146] over and over and over again for people [147] at this stage. So, if you guys are [149] already at this stage, you guys want to [150] see more detailed stuff, just skip a [151] little ahead for the video. But anyway, [153] the very first thing that you'll do if [154] you want to go from 0 to one, I [156] recommend is picking a couple of niches, [157] okay? And then pre-committing to them [159] for at least 30 days, ideally longer, [161] right? And I now recommend 60 or 90 days [162] to really flesh out a niche and really [164] make sure that you've committed and [166] you're intentional with the problems [167] that you're trying to solve. Now, this [168] isn't actually that hard. If you don't [169] even know where to start, if you've [170] never done anything like that, I have [172] this cool niche discovery exercise that [174] you guys could find inside of Maker [175] School. It's my community. It's right [176] over here. And basically what it is, we [179] see there's a bunch of people on it [180] right now. But what it is is it's a [182] simple and easy way to just pick a niche [184] that may or may not work. I don't know. [186] I give it like 70% probability of any of [188] these niches working. The reason why I [189] put this together is I just wanted to [190] give people like an example, a list of [192] 50 niches or so as well as the tools [194] that they needed to come up with more. [195] And what it is is it just starts with a [197] niche on the lefth hand side here. So [198] website developers, Instagram [199] influencers, PPC agencies, SEO [201] specialists. Then there's a service [202] line. This is the thing that you are [203] going to provide for them. Sales [205] systems, marketing systems, hiring [206] systems, product development systems. [207] Then it just iterates over them. And [209] then you end up with like a bunch of [210] different what are called positioning [211] statements or niches down over here. [212] Okay. So very first thing that you [214] should do realistically is you should [215] look at your experience. You should look [216] at the knowledge that you have. See if [218] you have any sort of crucial advantage [220] with knowledge in a specific industry. [221] If you understand the problems they face [222] and that sort of stuff, then you should [224] add that to some sort of niche discovery [225] exercise. Then just pick a couple. And [227] the reason we're picking a couple as [228] opposed to one, is because when you're a [229] beginner and you put all of your eggs, [231] it's supposed to be an egg. Happy [232] Easter, everybody. In one basket, it's [234] supposed to be a basket. Happy Easter. [236] Wow, that actually kind of looks like a [237] basket. Hell yeah. My drawing skills are [238] improving. If you put all of your eggs [240] in one basket as a beginner and you [241] don't really know what works and you [243] also don't understand how to identify [244] pain points and solve problems, odds are [246] that basket is not going to be the best, [248] right? So, I recommend choosing multiple [250] niches. The reason why is because you'll [251] just build out systems for one and then [253] you're just going to like copy and paste [255] them into others. So, instead of it [256] being 3x the work for 3x the results, [258] you're actually going to get basically [259] 3x the results or maybe like 1.5x the [262] work. Okay? So, you put in maybe 50% [264] more work, you'll get 300% uh the [266] results. So after you've identified and [267] picked a niche using this discovery [269] exercise or something else, what I [270] recommend is you enumerate a couple of [272] revenue generating activities. So you [274] find things lead genen activities that [276] just deliver you a ton of revenue or the [278] straightest line path to revenue. [280] Usually it's some simple lead genen [281] thing which I'll talk about in a second. [282] Then you literally just do nothing but [283] those. You you legitimately you focus on [285] nothing but these lead generation [286] activities. I see a lot of people in [288] maker school and make moneywithmake.com [290] coming from different backgrounds. And [291] the people that make a ton of money with [293] the stuff, the people that, you know, we [295] just had somebody close $7,200 something [297] dollars in 9 days, the people that like [299] make those big accomplishments that are [301] bigger than most beginners could ever [302] dream to make, literally just do the [303] exact same boring thing every day for [306] several weeks or months at a time [307] before, you know, they cash in. So, what [309] are some revenue generating activities? [311] Well, there are a bunch. The simplest [312] one is obviously Upwork, cuz I pitch it [313] all the time. Just a freelance platform [314] where you can like pitch on jobs. If you [316] optimize your approach on Upwork and if [318] you're smart about how you do things, [319] you can very easily land clients upon [321] your first day of applying. Another big [323] lead genen mechanism nowadays is cold [324] email. Cold email is working really well [326] right now. It also synergizes with a [327] automation because if you just send 100 [329] cold emails, you could use AI to [331] customize that 100 cold emails without [332] actually you having to like physically [334] manually do it. So you get again kind of [336] think back to my example here. You get [338] more results for less work initially. [340] But there are a variety of other ones. [341] Communities. You could jump into a bunch [342] of school communities with those niches [343] that we talked about earlier, then make [345] posts that add value, connect with [347] people one-on-one, DM them and that sort [348] of stuff. You could do LinkedIn. A lot [350] of people are crushing it on LinkedIn [352] right now where they basically cold DM [354] people. They go through their pages, [355] they identify connections, and then they [357] do live roasts or whatever. You could do [359] X, you could do Instagram, right? [362] Variety of different ways to do things. [363] I've even seen a lot of people get [364] clients the last couple of months on [365] Reddit as well. They literally just DM [367] people that are saying, "Hey, you know, [369] I'm struggling with this problem." And [370] then they say, "Hey, I know how to fix [371] this using an automation. Can I come in [372] and solve it for you?" Okay, so the [374] point I'm making is what you do is you [375] just pick three or four of these. So [377] maybe Upwork, maybe cold email, maybe [380] LinkedIn, and then you just do them [382] every single day for a very long time. [383] Nothing magical here. All you do is you [385] just pick some sort of minimum. Then you [388] track religiously. And I'm saying use [389] something like this. I have a tracker [391] over here. And this is legitimately the [393] exact same structure of the tracker that [395] I used when I was getting up and running [396] with AI automation. I legitimately just [398] tabulated the lead generation [400] approaches. So in this case, I'm saying [401] Upwork cold email communities. And every [403] day I would just log how long I spent [405] doing the thing. And I'd aim for it to [407] be something like an hour and a half to [409] maybe 2 hours in total. I have a simple [410] column on the left hand side here. [411] Really not rocket science. I think all [413] of us could probably put together [414] something like this. And just every day [415] I do that thing first, then I log the [417] time. I do that thing second, I log the [418] time. I do that thing third, I log the [420] time. Okay? So the reason why I'm [422] pitching this is so simple is because it [424] really is. It's not complicated. It's [425] simple. Just because it's simple doesn't [427] mean that it's easy. It's simple and [428] it's hard. But if you can just [429] consistently do something like this for [431] a long enough period of time, then [432] you're good. And then usually what [433] happens is your very first few gigs, [435] they'll be um pretty cheap because [437] you'll get them on some gig platform [438] like Upwork or something. Or you'll get [440] your first cold email lead, but you'll [441] have no idea what the heck you're doing [442] with them. You won't really be able to [443] sell them or justify a good price. So, [444] you'll get them for a small sum, maybe a [446] few hundred or something like that. And [448] this is where you kind of like learn on [449] the job. You know, you kind of try what [451] works, see what fails, learn a little [452] bit of client management, and so on and [453] so forth. After you're done your first [454] gig though, my recommendation is just [456] pitch 30% more than what you pitched on [457] the last one and just do that over and [459] over and over again until you receive [460] friction. So, what I mean is, let's say [462] you start at a $500 gig, like a lot of [464] you guys probably have. Well, for your [465] next gig, charge 650. After that, charge [468] $850. Okay? After that, charge uh [472] $1,100, and just so on and so on and so [474] forth. Eventually, what you're going to [475] do is you're going to run into like the [477] ceiling. Okay? If this is like your [480] success rate and this is like the number [481] of pitches you make, aka the number of [483] sales calls you have, what you're going [484] to find is like your success rate will [485] go down and eventually it's going to get [487] so low that it's, you know, not really [488] worth screwing around with. But this is [489] actually worth the trade-off, right? [491] Because if you think about it, you'll [492] make the same amount of money, you'll [493] just do less work because you'll have [494] the same number of pitches, you have the [495] same number of projects, and it's just a [497] good and easy way to figure out all the [498] pricing stuff. Most people don't know [500] how the hell to price. I'll get into [501] that next, but um yeah, if you don't [503] know how to price, literally just throw [504] something at the wall. Next client you [505] get, charge 30% more. Okay, the whole [507] goal here when you're at 0 to1 is just [509] to focus on lead genen and then let the [511] needs of your leads, that sounds like it [513] rhymes, guide your learning and [514] self-education. What I mean by this is a [516] lot of people try and know everything. [517] They try and like figure out literally [518] every last platform for AI automation. [521] They figure out how to prompt every [522] different model. They figure out how to [524] like connect to all these different APIs [526] and then when they actually get out [527] there in the market, they find that [528] nobody actually gives a crap. Nobody [529] actually cares that you can connect with [530] some deprecated API or that you can do [532] the Google specific thing or the [534] Facebook graph API. You know, instead of [536] starting with the education and then [538] trying to cram that into the need of a [540] few particular leads, just start with [542] the need of the leads and then use that [544] to guide your education. And because [545] this stuff is straightforward, what you [547] can usually do is you can get an [548] interested lead, okay? You could sell [550] them and in the process of your [552] nurturing and selling before you even [553] get the contract signed, you can learn [555] enough in order to deliver a reasonable [557] uh value project to that lead. So maybe [559] the sales cycle takes you like a week or [560] something like that. Well, when you get [561] an interested reply to one of your [562] emails or cold Upwork proposals or [564] something like that, that's when you [565] say, "Okay, I should probably find out [567] how that freaking platform works." And [568] that's actually when you direct your [569] time. So, a lot of people will call this [571] hacky. I used to think that this is [572] hacky. But if you think about it, it [573] just makes sense. You're not starting [574] with some opinion. You're not starting [576] with an assumption of what people want. [578] What you do is you find exactly what [579] people want and then you learn exactly [581] that. Okay? After you're done and you [582] have a couple clients under your belt, [583] just get in the habit of sending daily [585] updates to them. This is one of the [586] simplest and easiest ways to both retain [588] clients and then frontload your client [589] management skills. Okay? And rest [591] assured, this is not all that I've [592] mentioned on the 0ero to one game. I [594] talk about 0ero to1 all the time. So if [596] you guys want more specific tactical [598] implementations like how to set up a [600] cold email system, how to make [601] applications on Upwork, how to do more [603] or less everything else that I've talked [604] about here. Send cold DMs and so on and [605] so forth, just look through my channel. [606] There are dedicated videos showing you [608] how to do literally every one of these [609] steps that I've talked about here. Okay? [611] But for brevity sake and because I want [612] everybody in the same page, that is more [614] or less how you make your first $10,000 [615] in a automation agencies and PS more or [618] less any other service-based business [619] model. Assuming that we've done that, [620] let's now move on to the next step, [622] which is phase two. Okay. The next step [623] is basically taking this little middling [625] thing, which worked. It got us from like [627] zero and then one. Okay? And then it's [630] duplicating this. It's now going [632] horizontal. So, let me actually draw a [635] better diagram. 0 to1 is more of a [636] vertical shift. You guys have ever read [637] Peter the 0 to1, you'll know what I mean [639] here. Okay? This is a vertical shift. [641] From here on out, what we're going to do [642] is we're going to do horizontal shifts. [644] Okay? So now horizontal, it's way easier [648] than vertical because horizontal is [650] mostly just find the thing that got you [651] from 0 to one and then just duplicate [653] this over and over and over and over and [655] over again. And the real value here is [657] that when you're good enough, you could [658] legitimately spam a 100 million of these [661] and it's not very difficult. We're use [663] automation here. So we use scale. So [664] we're just going to use the same [665] approach that got us from 0 to one and [666] we're just going to find a way to [667] systematize it and then spam it. The [668] term that I give that is strategic [670] leverage. So you just made $10,000. [672] Well, here's a quick and easy way to [673] turn that to $100,000. Okay, the very [674] first thing that I recommend is you guys [676] just probably hustled for that first 10 [678] grand or those first few clients. You [680] probably were sending out those Upwork [681] apps. You're probably sending out those [682] cold emails, probably doing those DMs [685] and videos and etc. And for the most [687] part, you're actually doing this in a [688] very unoptimized fashion. Okay, we're [690] going to talk more about optimization in [691] the next phase, but the simplest way to [693] get up and running and streamline this [694] and just scale, do the thing that got [696] you here, but just do more and more and [697] more of it, is to do what I call a [699] lifestyle audit. We do a bunch of these [700] in maker school, but essentially what a [702] lifestyle audit is is it's where you [704] design your environment in such a way to [706] minimize friction in your daily revenue [709] generating activities. It is to design [712] the work that you are doing. Okay? [714] Design the structure and the approach [716] that you're taking to let's say your [717] cold emails or your job applications or [719] or whatever and then consciously and [721] intentionally try and like process [722] optimize every step. Then make your [724] environment rewarding. Make it enjoyable [725] to do the thing that you're doing. build [727] yourself some sort of accountability and [728] then just massively increase the volume [730] of the thing that you're doing. So, I'll [731] give you a couple of really simple [732] examples and you guys are probably going [733] to think I'm lame for this, but [734] legitimately just optimizing like the [736] ergonomic setup of like your desk or [737] whatever. You spend a,000 of the $10,000 [739] that you just generated and use it to [740] like optimize the ergonomic setup of the [742] work. I mean like getting a better [743] computer. Maybe a lot of people that I [745] see in my communities, they'll do their [746] videos with like a really crappy [747] computer and their videos will stutter [749] and stuff like that. I mean just making [750] it nice and easy for yourself to do the [752] thing that you have clearly validated [753] and demonstrated that you can do for [754] money. I mean getting like a nicer [756] computer. I mean getting like a nice [757] microphone or something like that. I [758] mean spending $1,000 on some cold email [762] copywriting course to like tweak the [763] thing that you've been doing that has [764] worked and make it two or three times [766] better. I basically just mean designing [767] the environment that you're in and [769] designing not just the physical [770] environment, also like the knowledge [771] environment in such a way that you could [773] just do more of the stuff that you [774] proven moves the needle. Okay, so that's [776] the very first thing. The lifestyle [777] audit is like a structured way of going [779] about that. But I think you guys could [780] probably get the 8020 just listening to [781] me talk about it. The next thing I [783] recommend is shifting to value based [784] pricing. So, um, up until now, you've [786] probably done most your pricing just by [788] throwing things at the wall and then [789] just increasing the prices slowly and [790] maybe asking a few friends or some [792] community members for advice. And, you [793] know, you're kind of getting there, but [794] now is when we shift from this sort of [796] haphazard, arbitrary approach to like a [798] very structured one. And I have a very [799] good video on how to do this over here. [801] So, just Google the sevenigure agency [802] pricing strategy that actually works if [804] you guys want more information on that. [805] But, I'm just going to summarize it [806] right now. And that's that basically um [808] in value based pricing now that you know [811] more about a business and how it all [812] operates what you do is a three-step [815] thing where you identify the value of [818] this problem or solving this problem I [819] should say. So if a customer is running [821] into an issue where like their sales [823] team can't reasonably attend to leads [825] and they think that that's costing them [827] $5,000 per month. The value of that [829] problem is at least $5,000 per month. [831] Okay. Then what you do is you charge a [835] fraction of that price. So if you think [838] you could save them $5,000 a month, what [841] you do is you actually charge them a [842] fraction of the $5,000 a month. You [844] wouldn't charge them $5,000 a month to [846] replace a $5,000 a month problem, right? [847] That wouldn't make any sense. That would [848] be parody. You want the business to feel [850] like they're getting something out of [852] working with you. But what you do is you [853] charge some fraction of it to represent [855] the uncertainty in your service [856] delivery. um I don't know like the [858] amount of time it's going to take the [859] additional work that they're going to [860] have to sol uh uh spend in order to you [862] know build the system with you and so on [864] and so forth but basically we charge a [866] fraction of that value um and then [868] here's the percentages that I usually [869] charge if you are solving a revenue [871] problem so you're increasing their top [872] line I charge about 30% of that and then [875] if I char if uh you're solving an [877] expense problem or you are improving [879] their bottom line then I charge about [881] 50%. So, in this hypothetical example [883] where there's some sales system that's [885] reducing their ability to close $5,000 [887] or something like that, I'd probably [888] charge them about $1,500 bucks a month [889] cuz that's a revenue problem. Let's [890] hypothetically say instead it's like [892] some software product that they're using [894] that currently costs them $5,000 a [895] month. And then I come in and I say, [896] "Hey, you could actually replace this [897] all and it would cost you basically [898] nothing. Do you want me to show you how [899] to do it?" They say, "Yeah, I charge [900] them 50% of that, which would be 2500." [902] And the reason why is a little bit [903] nuanced, but basically topline, right, [906] is further away from the the the thing [908] that people care about. like profit is [909] down here, revenue is over here, right? [911] And there's just a bunch of question [913] marks on everything from from here. Like [916] um profit is the thing that matters in a [918] business, not revenue. Revenue is [919] vanity. Profit is the sanity, right? So [921] the money that people make off the top [922] line is a little less uncertain how [925] valuable that is, but the money that [926] makes it to the bottom line is a lot [927] more certain. So because there's less of [929] a distance between the change that [930] you're making and the value you're [931] driving, you can charge more of a [932] percentage for the expense. Hopefully [933] that makes sense. You don't need to [934] understand that in order to make money [936] with it, though. Okay, so then what do I [937] do? Well, after you've made your first [939] 20 or $30,000, what you do now is you [940] run an 8020 on the small set of clients [942] that generate most of your revenue, and [943] you just double down on those. What I [945] mean by this is you at the end of all [946] this are going to have a list, okay? [948] It's going to be like your clients, and [949] you're going to have like, I don't know, [950] one client's going to pay you 3K a [953] month. Another client's going to be [954] paying you 5K a month, and another [956] client's going to be paying you 1K a [958] month. The 3K client's going to take you [961] 20 hours to fulfill. Okay? The 5K [963] client's going to take you 30 hours to [965] fulfill. And then the 1k client's going [966] to take you 10 hours to fulfill. Well, [968] what we do is we actually just run a [969] little bit of math on all three of [970] these. So, what's 3,000 divided by 20? [973] My math ain't so good. 150 bucks an [974] hour. What's 5k divided by 30? My math [976] definitely ain't so good. What's that? [978] Like 166 bucks an hour, I think. And [980] then what's 1k divided by 10? 100 bucks [982] an hour. The math just worked out this [983] way. It's not that the lower cost one is [985] the least valuable and this is the [986] second most valuable. This is the most [987] valuable. But, um, I guess what I'm [988] trying to say is just work it out in [989] terms of the rate and then you're like, [990] okay, well the the 1k client clearly [992] isn't working for me, so I should double [994] down on this stuff. How do you double [995] down on these two? Well, you can offer [997] more value to the business owner or the [999] person that you're working with, [1000] literally solving more problems for them [1001] and then pitching more value on your [1003] end, right? Hey, you know, I see an [1004] opportunity for you to make another $5 [1005] or $10,000 a month. I'd like to offer [1007] you an XYZ system to do that. You know, [1009] if it doesn't work, uh, you don't have [1010] to pay, but I just wanted to put this in [1011] front of you and see if, you know, there [1012] might be value. If you are good at your [1014] service, if you're a good salesperson, [1015] if they like you, then obviously they're [1016] going to say yes, they're going to tri [1017] it out, and then when it ends up [1018] inevitably working, you can take a part [1020] of that upside. Or it just means you [1021] identify the principles of those clients [1023] that made money and then you just try [1025] and look for clients like that and then [1027] next time you charge a little bit more. [1028] Instead of charging 5K for the 30 hours, [1030] maybe you charge 6K. Give that a try. [1031] Bump it up to 200. Okay, so this is now [1034] basically you see what works. You run [1035] the 8020 and you determine which one of [1037] your clients generate most of your [1038] revenue and then just double down on [1039] that approach. Next big thing is to [1041] build intro offers and recurring [1042] services and then pipe the intro offers [1044] into your recurring services. So the way [1046] that AI agencies work, and I talk a lot [1047] about this in this video here with the [1049] um never beating the robot allegations [1051] with this stuff, am I? No, I am not. [1053] Basically, the way that high throughput [1054] agencies work is they focus mostly on [1056] retention. Okay? So retention just means [1059] client comes in, I guess, and they give [1061] you some money. Then they come into like [1063] your pipeline, okay? And then you do [1064] some sort of value ad to that. You solve [1066] their problem. You consult with them. [1068] You do whatever. And then the client [1069] comes out. And ideally, you make some [1071] multiple on the money that they had [1073] initially. And then you have now like [1074] like this is this is really where the [1075] value that you add to a business is, [1076] right? So the best businesses, they [1078] don't just try and cram as many new [1080] clients in as possible, right? Because [1082] every time you try and get a new client [1083] in there, it actually costs you a little [1084] bit of money. You're usually paying for [1086] it. You're paying for those Upwork apps. [1087] You're paying for the cold email [1088] software. You're paying for the [1089] salesperson's time. The good businesses, [1090] what they do is they actually focus on [1092] retention a lot more. So they will grab [1094] this client. Then they'll say, "Hey, I [1095] know we just helped you make a lot of [1096] money. We can help you make even more [1098] money." So all you do is you just sign [1099] up for this additional package. Okay? [1101] And now you basically gotten all the [1102] benefit of a second client. It's just [1104] you didn't have to spend money for it. [1105] So this is called retention, right? Um [1106] hopefully that makes sense for most of [1108] you. And if it doesn't, I have videos on [1109] how to optimize retention. The issue is [1111] it's very difficult to get a retaining [1113] client, somebody on a retainer, on a [1115] recurring sort of service for you if you [1117] haven't done work with them before. Cuz [1118] when somebody signs up to a recurring [1119] service, they're kind of like, "Hey, I'd [1120] like to work with you 5,000 bucks a [1122] month for a year." It's like, "Holy [1123] crap, a whole year? I've talked to you [1126] for like 2 hours. How am I supposed to [1128] know that you're a good person to keep a [1129] relationship up with for a full year? [1130] You want to do a full year's worth of [1132] work for me, but I have no idea what the [1133] quality of your work is right now. So, [1134] it's hard for like like it's really [1135] difficult for a client to say yes to [1136] that, right? So, what you do, okay, the [1138] evolution of the agency business model [1140] is basically this. You split up your [1141] services into two parts. You have what's [1143] called an intro offer. This is coined, I [1145] believe, by my friend and colleague Matt [1147] Larson, who talks a lot about this [1149] stuff. Definitely check out his channel, [1150] but the concept is the same and has been [1152] restated in many terms. You do an intro [1154] offer, then you do some sort of [1155] recurring service and you develop two of [1157] these. Okay? So, intro offer and [1158] recurring service. Then what you do is [1160] you get new clients in to the intro [1162] offer. And then you try and sell to [1164] every one of those intro offer clients [1165] the recurring service. So now what [1166] you've done is by the time they make it [1168] to your recurring service pitch, you [1169] validated the quality of your service [1170] and you said, "Hey, we just gave you all [1172] these wins. We just made you all this [1173] money. The ROI is clear. Why don't we [1174] get you on a 12-month package for $5,000 [1176] a month or or something like that?" I [1177] usually don't lock them in myself. A lot [1178] of people do and they make a lot more [1180] than me because of it. So what this does [1181] is the intro offer, this is usually [1183] small, it's easy, it's a quick win, [1186] right? So you usually have very high [1188] conversion rates on this. Very, very [1190] high conversion rates. And then once [1192] you've converted a large portion of the [1194] people that come in, I don't know, like [1195] 20, 30, 40% of the people on your [1196] initial sales call, then when you pitch [1197] them recurring service, the conversion [1199] rates on the recurring service are going [1200] to be a lot higher. And obviously, you [1202] can pitch the recurring service to [1203] people at the start line, too. Don't dis [1205] don't like not do that. don't think that [1207] it's not allowed or something, but this [1208] is just like a good way to get the 8020, [1210] get the vast majority of the people that [1211] would have otherwise wanted to pay you [1213] to not only pay you, but then consider [1214] you for a recurring service. So, what do [1216] you do at this point? If you want to [1217] make, you know, 100 grand, a million [1218] dollars, whatnot, um, you build intro [1220] offers and recurring services. You look [1222] at the 80% or 20% of the clients that [1224] pay you 80% of the money, you say, hm, [1226] what are they doing? What was the [1227] service that I provided them? And then [1228] you build a bunch of intro offers around [1229] that. Or if you're doing recurring [1231] monthly services, you build a bunch of [1232] um, services around that. Okay? Once you [1234] have that, then you have a list that you [1236] could use to pitch back to to people. [1238] Um, so, uh, now you have probably a list [1241] of between 5 to 10 clients, right? And [1244] you have the five to 10 clients. Some of [1245] them are going to be onetime projects, [1246] some of them are going to be recurring [1247] projects. What you do now is you pitch [1249] the recurring services to all of the [1250] currently acquired clients. Okay? So, [1252] you could try and get all of them on a [1253] monthly recurring package. And [1254] realistically, of the five or 10, you'll [1256] probably get a few, maybe even more if [1257] you're good. Maybe get three or four. [1259] And if you get three or four on, let's [1260] say a $5,000 a month package, which a [1262] lot of people do. Well, now you're now [1263] you're printing money, right? Now you're [1264] making like 20k, 30k a month, which is [1267] far beyond what a lot of people think [1268] that they can get to. And then finally, [1270] um, after all this stuff, I'd recommend [1272] you start dialing into like sales [1273] specifically because odds are up until [1274] now, you've probably been approaching [1275] sales in a pretty undirected manner. At [1277] least the way that I teach things, the [1278] way that I try and show people things is [1280] like just dive in there. Don't worry too [1281] much about it. Just have a conversation [1283] with them, ask them questions, press [1284] their pain points, and try and solve [1285] their problems. Don't make this into a [1286] science. All you're doing is talking one [1288] person to another. But reality is after [1289] you get to the point where you're [1290] making, you know, some sort of five [1292] figure amount, sales starts being the [1293] bottleneck. And like your ability to [1295] pitch higher and bigger projects, your [1296] ability to convince people on a call, [1299] basically the percentage conversion rate [1300] when people come into some sort of sales [1302] meeting with you starts being the [1303] limiting factor. So this is where I'd [1304] start reviewing all my sales calls [1305] regularly. I'd start optimizing for my [1307] pitch, for my authority. I'd start [1308] really just making this into the science [1309] that sales actually is. Okay. All right. [1311] So at this point, I know I've drawn a [1313] lot on the page here, but we probably [1314] made somewhere between $100,000 to a [1316] million. The next step is we need to [1318] scale through systems not people. So you [1321] know how earlier I said that the first [1322] one was zero to one then we go from one [1324] to many and then after one to many we do [1327] optimization. This optimization step is [1329] what will allow us to take all the tools [1330] that we develop in the one to many stage [1332] and then leaprog ahead and make a ton [1333] more. Okay. So we're in AI and [1335] automation. So I think we're probably [1336] about as qualified as anybody to know [1338] that automations reduce the cost of [1340] labor and they can improve the output of [1342] a very small team. Like they can [1344] multiply the leverage of a very small [1345] team without needing to hire more [1346] people. That's kind of how automation [1347] works, right? So, I think we're probably [1349] the best equipped to be honest to be [1350] able to deal with this. And when a lot [1352] of people think, hm, I should hire, I [1354] always think, hm, are there ways that I [1356] could build systems to do more of the [1358] work so that I could grow my revenue [1359] without having to increase headcount. [1361] So, my earnest recommendation here, [1362] which a lot of people disagree with, and [1364] that's fine, is if you're going to scale [1365] from here on out, do it with systems [1367] first, not people. Only focus on people [1368] at the very, very end if there's just no [1370] other way that you could see yourself [1372] growing cuz people have a ton of [1373] drawbacks. People are extraordinarily [1376] slow usually to teach. Um it's like an [1379] investment. So you'll invest a bunch of [1380] money in them and then some personal [1381] thing will pop up or there'll be some [1383] problem or they'll get poached by [1384] somebody else disappear. There's a lot [1386] of regulation when you hire people. Now [1387] obviously you can mitigate this with [1389] some strategies like hiring contractors [1390] versus employees. But there's a lot of [1392] regulations you have to deal with and [1393] then you know the outputs tend to be [1394] less consistent. There's also an [1396] additional cost that not a lot of people [1397] talk about and that's the management [1399] cost. Not just management cost but [1400] management time. Okay. So if you just [1402] take into all these things into account [1403] all these cons, it's usually much easier [1405] to just build a system. Even if it does [1406] 90% of a person's job, not 100% of a [1408] person's job, you need that last mile to [1410] be solved by a real human being. Well, [1411] now you've just multiplied that person's [1412] leverage by 10x, right? So start here. [1414] Worry about people after. That's what I [1416] always say. Okay. So how do you actually [1417] do this in practice? Well, the very [1418] first thing I recommend is now that [1420] you've done a ton of work, you have one [1422] basically. You now have a business. [1424] You've delivered tons of projects, 10, [1426] 20, 30, 50, 100, whatever. you now have [1428] basically a giant list of projects that [1431] you've delivered, systems that you've [1433] built and so on and so on and so forth. [1434] What you do, okay, is you go through all [1437] of those [1438] systems and then you template them out. [1441] You legitimately grab the deliverables. [1444] You go through all the emails. You go [1445] through all the systems that you [1446] developed. to go through your CRM, [1447] whatever system you did, and you [1448] legitimately just grab all of them and [1450] then you you download the templates in [1451] your no code tool or you download the [1453] scripts if you're doing like software [1454] development agency style stuff or you [1456] just turn all of the stuff into a file, [1458] okay? Or a series of files. Then you [1460] convert all these into instead of [1461] services like they were before, now they [1463] are products, okay? Now you standardize [1465] them. The next thing you do is you [1467] create strict templates for client [1468] inputs. The idea here is it's going to [1470] eliminate scope creep and it's going to [1472] have clients give you exactly what you [1474] need in order to fulfill the previous [1475] step which are those templates. Okay? [1477] Because usually like let's say you have [1478] a blueprint or something for some cold [1479] email system or maybe let's keep it [1481] really simple some autoresponder right [1482] if you think about it in any noode [1483] platform you're going to need to hook up [1484] the connection the credential you're [1486] going to have to do like the [1486] configuration API keys. So what you do [1488] is you develop the standardized template [1490] and then you say okay for that template [1492] client needs to give me Google access [1494] and then I need a list of categories [1496] right and now it's it's as simple as [1497] when you get a new client for this [1499] specific intro offer you just ask the [1500] client hey I'm going to need access to [1502] your Google account or you can just make [1503] me a new one and I'm going to need like [1504] three categories that you want me to bin [1506] your emails into. That's it. And now you [1507] get everything you need up front. Now [1509] you've significantly streamlined the [1510] client relationship. Now you can [1511] standardize your pricing and you can [1512] productize and you can scale the hell [1514] out of that. Okay. At this stage, it's [1515] also worth optimizing for the value of [1518] your projects because the second that [1519] you start getting into that, like this [1520] is technically very similar to that as [1522] well, but the second that you start [1523] getting into really drilling down into [1525] what it is that customers actually care [1526] about, you can sprinkle a little bit of [1528] work on some sections of the project and [1530] then deliver outsized results. And as a [1532] result, you could price a lot more. And [1534] you know, one of the quickest hacks to [1535] make more money with the same headcount [1536] is literally just pricing more, right? [1538] So, this allows you to do that. I have a [1540] video on a quick and easy way to do that [1541] here where I basically just turn some [1543] automations that are built in make.com [1545] into full-fledged SAS apps that just [1547] look really cool. This is an example of [1548] increasing the amount of value up front [1550] from the client perspective, hiding a [1552] lot of the complexity and just making it [1553] easy for them to say yes to a big [1554] package. But some other things that you [1555] might want to consider doing are a lot [1556] of system are email based or notice [1558] based. So it's like a Slack notification [1560] when somebody comes into the flow or [1562] it's an email that's sent out to the [1564] prospect when somebody fills out a lead [1565] form or whatever, right? Well, these are [1566] the things that are visible. The client [1568] doesn't see all the logic that went into [1569] building the flow that produced the [1571] email. The only thing that they actually [1572] saw was the email itself. So [1573] legitimately going through all of the [1575] outputs and deliverables of all the [1576] systems that you built for all of your [1578] recurring and then future clients and [1579] then just touching up the emails, [1581] touching up the way that the Google docs [1582] you generate look, touching up the [1584] Google slides, okay, just sprinkling in [1586] a little bit of design basically at this [1588] point can actually enable you to charge [1589] significantly more money because things [1590] just look better from the client [1591] perspective. Okay, after that you create [1593] solutions that clients can pay for [1595] without understanding the technical [1596] details. So now that you have templates [1598] for the input, you have templates for [1599] all this stuff. The these three work in [1601] synergy, you now just have very simple [1603] solutions where it's like, hey, we can [1604] generate you 20 booked appointments per [1606] month every month. All you need to do is [1608] just sign up to this one platform or all [1611] you need to do is just give us a CRM [1613] that we can dump the leads into. Well, [1614] the point I'm making is you vastly [1616] simplify the interface for the client. [1618] And then once it's simpler, you'll find [1620] that by nature, you're just going to [1621] start working with bigger and bigger [1622] businesses because the people at the top [1625] end of those bigger businesses typically [1626] don't care too much for all the [1628] technical stuff. And so you can sell to [1629] bigger and bigger people. And then you [1631] can focus on solving problems as opposed [1632] to like particular technical issues, if [1634] that makes sense, which is where a lot [1635] of your initial clients come from to be [1637] real. Then yeah, you get to start [1638] focusing on higher levered sales [1639] activities as well. And this is what I [1640] personally recommend. So right around [1642] the time that I was uh making about a [1643] million dollars with Aon automation, I [1645] started focusing on higher leverage [1646] sales activities like content and then [1648] scaling up my cold email and then [1649] because I was no longer doing let's say [1651] you know you kind of have two options [1653] with lead genen right I was talking [1655] about that zero to one path and how it's [1656] different from you know like one to many [1658] well like a simple 0ero to one path is [1660] sending loom video to somebody right but [1662] that takes a fixed amount of time if you [1664] think about it like if this is time and [1666] this is number of people contacted then [1668] basically what I'm doing is I'm trading [1670] one unit of my time every time I send a [1672] Loom video for one person contacted. So, [1674] this is cool and all and you can do it, [1676] but notice how this scales linearly. It [1678] only scales like a line, right? At this [1680] point, when you're at the point where [1681] you made about a million, I recommend [1682] that you focus on higher levered sales [1683] activities like scaling the hell out of [1685] your cold email or scaling content. The [1687] reason why is because what you'll do is [1689] you'll spend a little bit of time [1690] initially building all this stuff up, [1691] but then you'll find that the output [1693] will scale like crazy and you don't [1695] actually have to spend too much time in [1696] order to contact a ton of people. So, I [1698] wouldn't do this until you've already [1699] made some money. So definitely don't [1701] focus on content at the start line. Make [1703] some money first, but what you'll find [1705] is after you've made a fair amount of [1707] money, this is the straightest line path [1708] to continuing to scale. As I've [1709] mentioned, what got you here won't get [1711] you there. So just focus on content and [1713] cold email and these more scalable lead [1715] genen activities in the right place. But [1716] if you think about it, like this video [1717] right now is probably being watched by a [1719] few hundred or thousand people [1720] simultaneously, right? It took me a [1721] fixed amount of time to record. Probably [1723] going to end up being about 354 minutes [1724] when all said and done. And then that's [1726] it. I basically spend 35 to 40 minutes. [1728] Well, I don't spend any time after that. [1729] it basically just goes vertical to be [1731] honest. So this is an example of a very [1732] scalable lead genen technique and you [1734] know it has some cons to it of course [1736] most people can't actually make it work [1737] and you have to invest a lot of time and [1739] energy into that initial growth period [1741] but after you get to a certain point [1742] this is sort of how you go from that [1744] million dollars to beyond $10 million [1746] $100 million and so on. Speaking of [1748] scaling beyond this is kind of like [1749] where I'm at right now. There are a few [1751] ways that I think that anybody could do [1752] what I'm about to tell you. I don't [1754] really feel qualified to talk beyond [1755] this point to be honest but I don't [1757] really want to talk about stuff that I [1758] don't understand really deeply. So [1759] obviously everything from step one all [1761] the way up to here I get. But this is [1762] sort of where I'm at right now and some [1764] of the problems that I'm solving here. [1765] I'll peel back the hood so you guys [1767] could see more or less what I'm [1768] thinking. So my humble opinion is at the [1770] start line what you need are you need [1773] actions. But the further along the [1775] business you go actions stop being as [1777] important as habits. And then habits [1779] stop being as important as beliefs. [1781] Okay. So at the start line the most [1783] important thing you need to convince [1784] yourself of is that you're capable of [1785] doing an action. At the middle, the most [1787] important thing you need to convince [1788] yourself of is that you're capable of [1789] maintaining a habit. But at the end, the [1791] most important thing that you need to [1792] solve in order to continue growing is [1794] you need to overcome the fundamental [1795] beliefs that have stopped you from being [1796] able to push past. And so, one of the [1799] big issues that I always see people that [1801] scale past a few hundred,000, okay, [1803] maybe $50,000, $100,000, $150,000 a [1806] month, myself included, is we have a [1807] number of these limiting beliefs. These [1809] are fundamental beliefs that are handed [1811] down by our childhood essentially by our [1813] families, by our early development [1815] experiences, by our friends. And these [1817] are simple beliefs like, you know, I [1819] can't make a ton of money without [1820] working super hard. I can't have an [1823] amazing family and an amazing career. I [1825] have to sacrifice one of these, right? [1826] Or I'm unmotivated or I'm a lazy or I'm [1829] a piece of crap or you know these more [1831] deeper limiters that you know are hard [1834] to sort of confront but when you do you [1836] tend to push through large plateaus. So [1837] big thing that I'm doing right now is [1838] I'm consciously identifying a lot of [1839] these limiting beliefs. And I'm finding [1841] tremendous growth in identifying my [1843] limiting beliefs. I think that this is [1844] probably what's enabled me to get from [1847] 170 about 170k last month, 160 something [1850] to, you know, over 230k this month and [1853] counting. So this, you know, this is one [1855] step here that has essentially made me [1857] about $60,000 per month in legitimately [1860] like 23 days or whenever the hell this [1862] video is going to be published. So if [1863] you think about it, like that's a major [1864] ROI on my time. I spent a few days doing [1867] this. I surrounded myself with a few [1868] people. I talked with a few people. I [1870] tried to understand, hey, the people [1871] that don't have these limiting beliefs, [1872] why? After you're done with that, you [1874] should begin allocating a substantial [1875] portion of your revenue to research and [1877] development. These are things with a [1878] less of a clear payoff. You know, early [1880] on I was talking all about how you [1881] should focus on those things that don't [1882] scale like maybe those Upwork apps or or [1884] whatnot. Things that you trade one unit [1886] of time for one result and then later on [1888] you focus on more scalable things, [1890] right? Well, eventually these scalable [1891] things reach saturation or cap as well. [1893] What you need to do past that if you [1894] want to continue being able to, you [1896] know, grow exponentially is you need to [1898] look for things that don't necessarily [1899] have a clear onetoone payoff. And you [1901] basically need to be willing to spend a [1902] little bit of your money to explore new [1904] opportunities. So what I'm doing right [1906] now, for instance, is I'm exploring a [1907] number of different social media [1908] platforms. I'm investing in maybe [1910] untraditional content generation efforts [1912] like creator rewards, for instance. [1914] I'm experimenting with different [1915] products. I'm experimenting with just [1916] different approaches to pricing my [1918] communities and whatnot. The point I'm [1919] making is I'm actively investing a [1920] portion of this money into ways that I [1922] can grow further, but I don't have a [1924] defined payoff. It's not like I know [1925] that this money, this $1 is going to [1927] make me 10. At this point, it's like, [1928] all right, well, I'm kind of running [1929] into the upper limits of what I can do [1930] here with myself and with the current [1932] business model. I wonder what other [1933] models there might be that might be able [1934] to make me some more money. After that [1935] point, because you're making so much [1937] topline, right? If you're at this point, [1938] you're probably making at least six [1939] figures a month. The way to improve the [1942] amount of profit you're making at the [1943] end of the month is just look for [1943] opportunities to improve your margins [1945] however slightly. Since even if you [1946] think about it, let's say you have a [1948] $200,000 a month business. If you [1950] improve your margins by even 5% 5% of [1953] $200,000 a month is it's $10,000 a [1955] month. The reason why I'm saying this is [1957] because $10,000 a month that was your [1958] whole goal initially. That was literally [1960] like everything that you strive for at [1961] the start line of your journey most [1962] likely. Most people like the five figure [1964] mark. So the point I'm making is if you [1966] can find a way to improve your margins [1967] just by 5% that'll net you an additional [1969] $10,000 a month in your bottom line. [1971] Well, that is that might be two [1972] full-time staff members if you want to [1973] hire. That might be you getting a house [1975] in the next like year as opposed to in [1977] the next like three or four years. This [1978] is a lot of money for you to make with [1980] some minor tweaks to your bottom line. [1981] That might literally just mean [1982] unsubscribing from a couple of software [1984] platforms. Might legitimately mean, you [1986] know, spending 2 hours sitting down and [1988] then making an automation for one of [1989] your staff members so that you do [1990] something that is revenue critical just [1992] a little bit faster. The opportunities [1993] to improve margins are basically [1994] endless. But basically the point I'm [1996] making is the higher that the top line [1997] is, the more that minor incremental [1999] improvements in the margins impact the [2001] bottom line, which is just logical. [2002] Okay, after this point, right, after you [2003] make a few a couple hundred thousand [2005] bucks a month, you do really start [2006] running into the upper limits in terms [2007] of what is possible, you really start [2009] pushing, you know, if you're a [2010] soloreneur like I was up until quite [2012] recently, you really start pushing the [2013] boundaries and you start hitting a [2015] ceiling. So, if you want to go further [2016] than that, obviously the recommendation [2018] is you need to hire people in order to [2020] take on the things that you just cannot [2021] feasibly do or design systems for. And [2023] that window is going down, right? The [2025] things that AI and automation can't do [2027] is definitely shrinking with time. Um, [2028] so maybe in 2 or 3 years this calculus [2031] will be a little bit different, but for [2032] me it's right around here. The benefit [2034] of pushing this so far back though is [2036] now you have enough money to actually [2038] hire good people. Like if you tried to [2040] do all this stuff at $10,000 a month and [2042] maybe I don't know because your margins [2044] you make $8,000 a month. Bottom line, [2046] how much of this $8,000 a month you [2047] realistically going to spend hiring [2049] somebody? Very, very little of that. [2052] Why? Because, you know, I mean, if you [2054] try and hire somebody that's like 4,000 [2057] bucks a month, you're literally cutting [2058] your entire business in half. So, you're [2060] probably going to try cheaping out. [2061] You're probably going to hire cheaper [2062] people. People that are less qualified, [2063] people that are less experienced. Well, [2065] what's the problem with that? When you [2066] hire people that are less experienced, [2067] okay, these people, unless you're very [2069] good at management, legitimately tend to [2070] cost you more money than they make you. [2072] So, basically, if you're not at a point [2073] where you can confidently spend a [2075] generous amount on a staff member, [2077] compensate good people for good quality [2078] work, I don't recommend hiring at all. [2080] Now, at this point, you are. So instead [2082] of making, you know, uh 10,000, maybe [2084] you're making 100,000. Now you can [2085] actually justify a hire for maybe $5 to [2087] $8,000 a month or something. And these [2088] people just tend to be more qualified, [2089] more skilled, and so on and so forth. So [2091] now is when you hire because you can [2092] hire good people. And then finally, the [2095] very last thing that I would say, and [2097] this is sort of like a mindset thing, [2099] very similar to the the beginning of [2100] consciously identifying your limiting [2101] beliefs. Figure out what you're doing [2103] all this for. Right? At this point, [2104] you've made more money than probably [2106] like well I mean in my case like you [2108] know 99 point whatever percent of every [2111] person in probably your country if [2113] you're at the point where you're now [2113] running a profitable business. So it [2115] kind of begs the question right like [2116] you're doing all this stuff but what are [2117] you doing it for? Now I recommend not [2119] solving this problem first. You know a [2121] lot of people out there are going to say [2122] well dude shouldn't you have already [2123] known what you're doing all this stuff [2124] before you get to this point? I don't [2126] actually think so because I don't think [2127] you could realistically plan for all the [2129] eventualities in your life or really [2131] come up with like the deeper [2132] foundational meaning of your life before [2134] you've actually interfaced with the real [2135] world enough. You sort of need that iron [2137] to sharpen your own iron to the point [2139] where you understand what it is that [2140] you're doing and why you might want to [2141] do it. Not to mention once you have [2143] money you have the means to actually do [2144] most of the things you want to do. But [2146] at this point you know a major limiter [2147] that I see not just in myself but in a [2148] lot of other people is like so what [2150] exactly are you trying to do? You can [2151] make a ton of money and buy a bunch of [2153] yachts and whatnot, but like is that [2154] really the driving core purpose? The [2156] reason why you need to solve this is [2157] because the biggest problem at this [2158] level is you. It's your mindset. It is [2161] your ability to persist and continue [2162] doing this stuff every day for a very [2164] long period of time. If you could just [2165] show up with all the rest of the systems [2167] in place that we've talked about over [2168] the course of the last 40 minutes or so, [2170] if you could just show up every day for [2171] the next 5 years, you will inevitably [2173] scale this much further than anything [2174] that I'm showing you down here. Instead [2176] of you making $250 or $300,000 a month, [2178] if you just show up every day for 5 [2180] years, you might be making $50 million a [2183] year or something like that, okay? Or [2185] equivalent of five or $6 million a month [2187] by that time. So the question is just [2189] like how do I keep going? How do I [2191] continue? It's solving questions like [2194] how high could you go? It's solving [2196] questions like why? It's solving [2198] questions like how do I spend my money? [2200] Right? And in essence, um, now that you [2203] have the means, you can actually [2204] confront these problems and actually [2206] deal with the real problems as opposed [2208] to like try and figure out your mission [2209] and your values and all this stuff [2211] before you even had the chance to make [2212] any money. Cuz most of the people that [2214] spend all day trying to figure out like [2215] their mission and their values, I [2216] applaud them and I think it's good that [2217] they're attempting to um, go deep and [2219] figure out basically perform freaking [2221] soul surgery on themselves, but the vast [2223] majority of them will never make any [2224] amount of money that would enable them [2226] to actualize those goals anyway. So, in [2228] my opinion, just like you identify the [2230] needs of your self-education and [2232] progress through the leads that you're [2233] generating, I would frontload the action [2236] and then the habits um and worry about [2238] all that stuff before you get to [2239] beliefs. Hopefully, this gives you guys [2241] some insight into my four-step process, [2243] the same four-step process that many [2244] other people that have joined my [2246] communities and have been outside of my [2247] communities followed in order to get to [2249] where they are today. I just wanted to [2251] give you guys some behind the scenes on [2252] that last section. So, if anybody is at [2254] that point in their own business [2255] journey, would love a comment from [2256] there. You guys could reach out, send me [2258] it over an email, always down to [2259] increase the size of my professional [2261] network. If you want more hands-on daily [2262] accountability to help you get from zero [2264] to one and knock that first phase right [2265] out of the park, definitely join Maker [2267] School. It's my daily accountability [2268] program where I legitimately give you a [2270] step-by-step dayby-day series of tasks [2273] to do in order to get from zero to one, [2275] get that first customer knocked off. If [2277] you guys want to scale and are maybe in [2279] phase two or phase three, then check out [2280] Make Money with Make. I'd consider this [2282] my premier exclusive automation [2284] community that helps you guys get to and [2286] then exceed $25,000 a month and beyond [2288] using a lot of the same tips and [2290] techniques that I talked about here. [2291] Otherwise, if you guys could do me a big [2292] solid like, subscribe, do all the fun [2294] YouTube stuff to bum me up at the top of [2295] the AGO and I'll catch you on the next [2296] video. Thank you very much. This.

Video: https://www.youtube.com/watch?v=jBF48jNWPJE
Title: 5 "BORING" AI Automations To Sell For $1.5K+ Each in 2025
[0] Here are five boring AI automations that [2] you could sell today for 1,500 bucks a [4] pop or more. These are not flashy chat [6] bots. They're not AI agents. What they [8] are are unsexy but very simple [10] straightline automations that can add [12] value to virtually any business. I sold [14] systems just like this when I scaled my [15] automation agency to $72,000 per month. [17] They're going to be in a blend of [18] make.com and n and I'll show you exactly [20] how to build them over the course of the [22] next few minutes. And by the end of the [23] video, you'll have added five more great [25] systems to your arsenal. Let's get [26] started. The first system is a search [29] intent scraping system. What the system [31] does is it finds lists of high quality [34] companies that are hiring for a specific [36] position. Then it scrapes those [38] companies, gets CEOs, decision makers, [40] and founders at those businesses, and [42] then adds them to a cold email sequence [44] using a bunch of automation. I'll run [46] you through how all of this stuff works, [47] but first, for context, let's say you're [49] a company that wants to hire somebody. [51] Where do you go? Well, you basically [52] have two major options, at least in the [54] United States. The first is a website [56] called Indeed and the second is [57] LinkedIn. So what companies do when [59] they're hiring for a role like an SDR [61] sales development representative is [62] they'll create a post on LinkedIn [64] looking for people to fill. Floor coding [66] warehouse just did this. Fulcrum just [69] did this. Blanco Technology Group just [71] did this. Right now what we can do is we [73] could take this page aka this URL and we [76] can actually pump it into a scraper [78] created on a service called Appify. If [81] we do this, what we can do is we can [83] actually go through the previous page [85] automatically and scrape the company [86] name, the company website, the [88] description of the job, everything that [90] they're looking for, their compensation, [92] and we could add it to a big [93] spreadsheet. Okay. Once we have it in a [96] big spreadsheet, we can fire it off to [97] one of many email verification services. [99] The system uses one called any [101] mailfinder. And then on the back end of [103] the system, we can do some additional [104] things like research the decision maker, [106] give us some more context about them [107] autonomously before finally adding them [109] to a cold email service. This video is [111] going to be using instantly, but you can [113] also swap with whatever you want. Um, [114] smart lead is a big one. There are a few [116] other ones as well. So, in terms of how [118] the system works under the hood, as you [120] can see, the very first thing we do is [121] we run an actor. Now, I'm putting in a [123] hard-coded URL here, but I'm sure you [124] guys can imagine you guys could swap out [126] this URL however you like. That URL is [128] equivalent to the URL of the LinkedIn [129] job, the post that we just showed you a [131] minute ago. Okay. From there, we will [133] get the data set items of that post, aka [137] this run just occurred. It deposited a [139] bunch of data into this data set on [140] Appify. And what we're doing is we're [142] just extracting it here. The end result [143] is we have a giant list of companies. [146] Okay, Air Garage. We have a company [148] LinkedIn URLs, company logos, location, [150] salary info, and so on and so forth, [152] just repeated for all of the jobs that [154] we've scraped. So in this case, I think [155] we scraped 30 or 33 or something. From [158] there, I have a bunch of filters set. [159] These filters just check to see does the [162] website exist because we need the [163] website to proceed. Is the website [165] linkedin.com? Sometimes LinkedIn posts [167] ad posts that go to careers.linked, so [169] this just filters them out. Are the [170] number of employees at the business less [172] than 150? This might be useful if you're [174] looking to work with small businesses [175] like I am. Assuming that they are okay, [177] what we do is we jump into a database. [179] Now, I'm using Google Sheets as my [180] database. You guys can use whatever you [182] want. What this Google Sheets database [183] basically does is it just checks to see, [185] have we added the same company name to [187] the database before? If so, don't [189] proceed. What we want to do is we only [191] want to pitch companies once. We don't [192] want to continuously pitch people over [194] and over and over again every time the [195] scraper runs. And this is a very simple [196] design pattern that allows us to do [197] that. So, assuming that the job we're [199] scraping doesn't already exist in this [201] big database with the company name and [203] the title and the tracking ID and so on [204] and so forth, then what we do is we [206] actually add them to the database right [207] over here. Okay? So, mapping all of the [209] fields from that app search. And as you [211] can see at the end of it, we get a ton [213] of data. Finally, I'm using an open AI [215] or an artificial intelligence module, [217] GPT4 mini in this case, but you guys [218] could swap this out with whatever model [220] you guys want to basically filter out [222] jobs that don't contain or include [226] things that I'm looking for. So, I left [227] this very vague here, but essentially, [229] you can use this filter to determine [231] whether or not a job is relevant to us. [233] Now, think about the logic here. We're [234] only filtering jobs that aren't already [236] in our database. So we're significantly [238] reducing the token count that we're [240] feeding into the artificial intelligence [241] and we're ensuring that we're only [242] filtering jobs that are new. Now once we [244] filter the job, what we finally do is we [246] search for a decision maker using a [248] service that I really like called any [249] mailfinder. You guys could swap this out [251] with any API call to any similar [252] enrichment service. What we're doing is [254] we're looking specifically for CEOs that [256] operate at the domain. And then I'm also [258] passing some additional information, row [260] number, company name, and campaign [261] status. Then I'm also adding what's [263] called a web hook URL. This just allows [264] us to set up a web hook somewhere else [266] and then watch and wait to see all the [268] results roll in. You don't need to do [269] this, but I do it because I like making [270] sure these systems are pretty airtight. [272] Okay. Now, once we're done with that, [273] what we do is we go over to this second [275] scenario here that's waiting with a web [277] hook. If I run this, we'll catch all the [279] data currently in the queue. And this [280] sends a node right off to Perplexity, [283] which is an artificial intelligence [284] service that allows us to browse the [286] web. Very similar to GPT web search, but [288] this is sort of the first iteration of [289] it. And assuming that we get some [291] information on who the prospect is. So, [293] what I'm doing is I'm actually just [294] feeding in a bunch of messages about who [296] the person is and seeing if we can look [297] them up. What we receive as a result is [300] we get a bunch of data on who that [302] person is. In this case, Molina, where [304] she's based out of, how long she's been [306] working, and so on and so forth. And we [307] do is we actually feed this information [309] into an AI module that generates a [311] customized icebreaker that allows us to [313] reach out to her. Instead of just [314] saying, "Hey, Melina, how's it going? [316] I'd really like to sell you something." [317] What we do is we use AI to take that web [319] search data and then build us an [321] extraordinarily customized icebreaker. [323] So the end result of this is hey Molina [325] admire how Propel Champions diversity [326] and digital talent because diversity is [328] important to her. Also love your thought [330] leadership on the future of tech because [331] I think she published some podcast or [333] something. From there we add that to the [334] database. We actually update the row [336] that we had earlier with a bunch more [337] information aka full name all of their [340] data basically over here. And then [342] underneath what we do is we add an [343] icebreaker and then a link. We do an [346] HTTP request instantly, which in our [347] case is just going to a test campaign. [349] This test campaign is already set up and [351] basically is just queued up to send the [353] icebreaker as well as a couple of other [355] points of information. So the end result [357] is we now have an email sequence that is [359] crafted, ready to go and automatically [361] already sending emails completely [362] autonomously. All we need to do is just [365] add a LinkedIn search URL to the end of [367] the system. This is going to say [368] something like, "Hey Molina, admire how [369] you do X, Y, and Z. I really love to get [371] in touch with you because I saw that you [373] were hiring for a certain position. I [374] think that I have a solution that might [376] be able to solve your problem for [377] significantly less money and make it [378] really, really easy for you to take care [380] of this. Here's what the solution would [381] look like. The second system is an AI [383] podcast repurposing engine. Now, the way [385] that this works, and I built this out on [387] my channel just a couple weeks ago, so [388] if you guys are already familiar with [390] this, this is why. You enter the URL of [392] a podcast. Once you enter the URL of a [394] podcast, it will then transcribe the [397] entire podcast, extract anything of [400] relevance, and then use that to develop [402] highquality social media posts that you [404] guys could publish on Instagram, [406] LinkedIn, or Facebook. So, let's give [408] this a go. I'm going to go over here and [410] go Nick Sarrive Jack Roberts YouTube [413] podcast because we had a podcast [415] published on his channel just a little [417] while ago. I'm going to copy this URL [419] and then I'm going to paste this into my [420] system. Okay, what this is going to do [422] is if we go back here, we're now getting [424] the transcript via an Aify actor. Ampify [427] being the same scraping service that I [429] was using before. And you'll notice that [430] it comes up quite often because I'm a [432] big fan of Apify. I think it makes my [434] life a lot easier. As you can see, the [435] one we're using is called YouTube [437] Transcript Ninja. So, it's actually now [438] extracting the transcript for that video [441] specifically. Because this is a little [442] bit longer of a video, I think this one [444] was 40 minutes. You might have to wait a [445] minute or two. After this is done, [447] you'll see we've now finished with the [449] scrape. You now have a bunch of data [451] over here which if I make JSON, one of [453] the items is a long transcript from [455] start to finish where Jack and I talk [457] about, you know, AI and automation and [458] so on and so forth. From there, I feed [460] this transcript into artificial [461] intelligence open AI with a prompt like [463] you take as input a long meandering [465] transcript and you identify the 10 most [466] interesting engaging points. Then you [468] generate a bunch of JSON containing [470] these points in the following structure. [472] Okay, I give it some rules. I give it a [474] quick little data dump and then it goes [476] and it actually generates me a list of [477] 10 engaging points. Once it's completed, [479] we have a list of these 10 points on the [481] right hand side. So there's a transcript [483] of the paragraph of interest. There's [485] some context and then there's some [487] feedback that I have the model actually [488] give me on how we could make it better. [490] There's a deep explanation of that [491] section. Then there's a short image [493] description because I want to generate [494] some images on this later on. From [496] there, we use a split out node. This [498] just turns our data from one item into [501] 10 items, which allows us to loop over [502] them and iterate them. Then from here, [504] what we do is we pass them through three [506] separate nodes. The first is an [508] Instagram post generator. The second is [509] the LinkedIn post generator. And the [511] third is a Facebook post generator. So [513] I'll only open the Instagram one for [514] brevity, but essentially we take as [516] input a section of a transcript right [518] over here. We tell AI, hey, I want you [520] to write it like an Instagram post. Then [522] it goes out and does it. After that, we [524] generate an Instagram image. Okay. Now, [526] the way we're doing this is with Dolly. [528] This is by no means the best AI image [530] generator on the market. In fact, I [531] think as of right now, it's probably [533] kind of somewhere near the worst. But [534] the end result is we get some cute [536] looking image like this. In our case, I [537] think we were talking about the [538] labyrinth or something. And I've chosen [539] to use a watercolor bunnies as my style [542] and my theme for maybe my blog or [543] something. So that's what that looks [544] like. And then we take all of that [546] information. Then we add it to a Google [548] sheet called my little Instagram sheet [550] right over here. And this is now just [551] basically an entry into a database that [553] a later workflow can use to [555] automatically publish on my behalf. [557] We'll do the same thing for both [558] LinkedIn and for Facebook. And the way [560] that I've separated this is I have [561] multiple tabs here, one for LinkedIn, [563] one for Facebook. And these posts are [565] sort of custom curated to that specific [567] platform. You know how sometimes [568] LinkedIn posts are longer than Instagram [570] posts which tend to be short. That's [571] sort of the idea. Now after that what we [573] have is we have a schedule trigger node [576] in the second half of this workflow. [578] What this does is every day let's check [580] it at 7 a.m. This goes through the [583] previous sheet that I'm showing you over [584] here. And it actually looks to see hey [586] which row does not have a posted on [589] value? Probably this one here. So we [591] haven't actually posted this yet. It [592] then goes and it publishes this to the [594] specific platform of interest. So if [596] it's Instagram, it'll use the Instagram [598] graph API or the Metagraph API to post [600] on Instagram. If it's LinkedIn, it'll do [602] an HTTP request and then publish [603] directly to LinkedIn. Then it's [605] Facebook, it'll publish to Facebook. I [606] don't want to have to go through and [607] then delete them all from my Instagram, [609] LinkedIn, and Facebook. So I'm not [610] actually going to run this one, but in [611] that way, what we get is we get a fully [613] contained system that allows us to [615] generate a list of, let's say, 10 blog [616] posts and then just drip them out one at [618] a time. The next system I built in [620] make.com. And this is one of the [621] simplest and most straightforward [623] systems you could sell to basically any [624] business on planet Earth that operates [626] using invoices. I've shown this a few [628] times just because I think it really is [629] important for people to realize the [631] systems that make money do not have to [633] be these big, complex, scarylooking [635] agents that you guys see all over [637] YouTube right now. In reality, usually [639] it's the very simple systems like this [641] that you guys can actually generate [642] substantial ROIs on cuz they look a lot [644] less complicated because you're [645] typically able to explain them and [646] interpret them for the business owner. [647] And because in this case this does [649] something very useful. Let me explain. [651] So over here I have a Google sheet. This [652] Google sheet is filled with just a big [654] list of invoices that I've sent with [656] different days. Okay. So this was an [658] invoice we sent to TechCore Solutions. [660] This is another one we sent to Global [661] Dynamics Corp. This is one we sent to [663] Quantum Analytics. Another one we sent [664] to Blue Sky. Hopefully you guys could [666] tell, but all of these are examples. I [667] just had AI generate me a bunch. The [669] value here though is you can actually [671] have this hook up directly to basically [673] any payment processor out there. Stripe, [675] QuickBooks, Zero, whatever the heck you [677] guys are using, you guys can actually [678] just use that as the data source instead [680] of the Google sheet. Okay. Now, as we [681] see, there's a date sent column over [683] here on the lefth hand side. What this [684] automatic invoice collection system does [686] is it basically allows us to follow up [688] on invoices that haven't been paid yet. [691] And I can't overstate just how much [693] money is usually tied up in unpaid [696] invoices for the average B2B agency or [698] manufacturing company or or so on and so [700] forth. So, this is a really big deal. It [702] allows us to make a lot of money for the [704] company very quickly. Okay, so the way [705] that this works is we start by searching [707] through the rows in that database. This [709] is what you'd replace with, let's say, [711] something like Stripe or Zero or [713] whatnot. And specifically, we're [714] checking to see if the status field is [715] equal to overdue. So basically, back in [717] the Google sheet, there's this little [718] status field. And if the status field is [720] equal to overdue, then we return it. [722] Okay? So there's overdue, overdue, [724] overdue. For the purpose of this demo, [725] why don't I just say that they're all [726] overdue. So what happens is we'll return [728] these. Okay? And now because they're all [730] overdue, we're going to get a big list [731] of results. See 20 here. Then what we do [733] is we grab the date. Okay, we basically [736] see how many days has it been since [738] we've sent that invoice. So if it's been [740] 7 days, what we do is we go up this top [743] route and then we create this email. If [745] it's been 14 days, we go down this [747] second route and we create another [748] email. If it's been 21 days, we create [750] another one. If it's been 28, 35, 42. [753] And the value here is all of these email [755] modules are basically just writing a [757] follow-up in slightly different words. [760] So all you have to do as a business is [762] one time write your sequence of [764] follow-up emails, have some source that [767] runs every day like I showed you a [768] minute ago and then you just send people [770] follow-up emails every day assuming or [772] rather every week or so, whatever sort [774] of cadence you want um with this system. [776] So if what I do here is let me just [778] limit this to I don't know the first [779] five so I don't send a ton of emails. If [781] I run this, this will pull up all of the [784] sheets. They'll then grab all of the [786] dates. Now, what it's going to do is [787] it's going to look for ones that are [789] seven, I guess, 14, 21, and 28. I'm [793] realizing now that I don't think we [794] actually have any that are those exact [795] dates. So, let me just grab all of them [797] and see if there's one. All right, so it [799] looks like we now have a couple here. It [801] looks like it identified one invoice [802] that has not been followed up with in 21 [804] days. Then, it identified another one [806] that has been outstanding for 28 days. [808] Okay, so I don't know exactly which ones [810] these would be. I just quickly updated [811] the date field here so I could do this [813] demo. But the end result is we send an [815] email to this person, Rachel, saying, [816] "Apologies. I know I followed up about [818] this a few times now, but just wondering [819] about that invoice I sent. Let me know [821] if there's anything you need on it, [822] please." So, you can imagine, you know, [823] after 28 days of still waiting for [825] somebody to pay your invoice. [827] Communication like this is fair and [828] reasonable. If it's been 21 days, maybe [830] William checking in on my invoice from a [831] couple weeks ago. All good. This is a [834] very simple and easy Lego block that you [836] could slot into any business to more or [837] less immediately add value. This next [839] system is a cyclic content generator [841] that returns as output a Google doc with [844] an extraordinarily wellressearched and [846] in-depth article. This was one of the [848] very first systems that I've ever [849] published on YouTube. I built that back [851] in make.com I think about a year and a [853] half ago when I was just getting up and [854] running on this platform and it had [855] great results and a lot of people have [857] used this since. But there's still a ton [858] of value with the system. So, let me run [860] you through what it looks like. In order [861] to run this, what we do is we click this [862] test workflow button. This little form [864] will pop up and it'll ask us for two [865] things, a keyword and an email. The [867] keyword is what you want to create a [868] blog post about. So in my case, maybe [870] I'm running a blog that does travel [872] stuff and I want to optimize for the [873] keyword Scotland cabins. Okay? And I'm [875] just going to send myself this email as [877] a result. You click submit and [879] immediately after you click submit, the [880] very first thing that happens is we run [883] an open AI search that goes out on the [886] internet. I'm communicating with this [887] via API that goes out on the internet [889] and then it actually finds blog posts [891] that other people have written about [893] this keyword. Then it builds outlines [896] using their content. Okay, this is [898] really cool. It's like a parasite sort [900] of style system. So 10 of Scotland's [902] best designed luxury cabins, one in [904] Edinburg and so on and so on and so [905] forth. Okay, it actually goes and it [907] finds a bunch of them. After that, what [909] we do is we find specific citations from [911] those blog posts. Then we ask for [914] high-ranking articles about Scotland [916] cabins and the outlines in markdown [918] format. So we're doing we're basically [919] building this structured outline. After [922] that, we extract and we format these [924] outlines, okay, using another OpenAI [926] call. From there, what we do is we [928] actually progressively generate better [929] and better outlines. So now I'm feeding [930] this into another OpenAI module which [932] generates a high quality comprehensive [934] outline for a topic given a crappier [936] outline over here. And then what we do [938] is we separate that into sections. So [940] now instead of it just being one big [942] outline, what we actually have is we [943] have an item containing an array. Inside [945] of that array is the intro, the next [947] step, the next step, the next step. And [949] this is really the key and the reason [950] why this is a cyclic generator. We split [952] these out into separate items and we [954] actually have AI write us a section for [956] every item. So we're actually passing in [958] a single heading into AI and having it [961] write an additional or rather a new [963] section. Um so we're piecing together a [965] whole article just uh you know heading [967] by heading by heading. Now obviously [969] because we're writing this in this case [970] 10 times this section takes [971] substantially longer than most other [973] sections. But while this is running let [974] me explain the rest to you. Here is a [976] limit node. This limit node is simply a [978] little preventative bug fixing measure [980] that I put in because sometimes I had so [982] many headings in the system that it was [983] difficult for me to keep track of it. [984] What we do after is we aggregate all of [986] these sections together and then we [988] actually summarize the below article [989] section in three sentences returning the [991] output in JSON. Now the reason why we're [993] doing this is kind of nifty and what I [995] want to do is I want to take this [996] summary and I actually want to use it to [998] generate an image for that section. Once [999] I have the image to that section, what [1001] I'm doing is I'm actually going to feed [1002] in the previous section plus the image [1005] to construct a new blog section with [1008] both an image and the text itself. So, [1010] we're being kind of nifty here and we're [1011] I don't know if you want to call this [1012] hacky or if you want to call this [1013] ingenious. I prefer ingenious, but [1015] basically what we're doing is we're [1016] constructing the article section by [1017] section. We're generating an image for [1019] every section. The current lowest [1020] hanging fruit here, which sometimes [1022] occurs, is the OpenAI image module will [1024] time out or rate limit if you don't [1025] currently have a high enough tier. So, [1027] if you guys are a tier one and you find [1028] that this happens from time to time, [1029] just spend a little bit of money and [1030] upgrade to tier two. I think you need [1032] like $30 or $50 on the card. If you use [1034] AI as much as um I do, this shouldn't [1036] necessarily be a big deal. You'll use [1037] that $50 reasonably quickly. So, after [1039] that, we feed in all of the objects into [1041] the OpenAI generate an image module. [1043] After the images are done generating, we [1045] get their outputs here. We'll actually [1046] merge the outputs of the previous node [1048] and that image node, and then we'll get [1050] a picture alongside a section. So, let [1052] me actually show you what that might [1054] look like. Looks something like this. In [1056] my case, I'm just using pen handdrawn [1058] illustrations, which, you know, end up [1059] being okay. I wouldn't say they're the [1060] best in the world, but they're also not [1061] the worst. Then we do some data [1063] processing nodes. We aggregate those 10 [1064] items to one item. Then we convert them [1067] all into HTML before creating an HTML [1069] text file. And then this section right [1071] over here, this is just something you [1072] have to do if you want to get like a [1073] Google doc um to uh be generated nicely [1076] with good formatting. If I go over here [1078] to where it says share link and email, [1079] what you end up with is you end up with [1080] an email notification basically inviting [1082] you to share the link. So, if I go over [1084] here to my Gmail, we'll see over here [1086] that an item has been shared right over [1088] here. The ultimate guide to luxury and [1089] unique cabins in [1090] Scotland. So, I'm just going to open [1092] this with a Google doc cuz that's HTML [1095] back there. Once we open it with a [1096] Google Doc, you'll get something that [1097] looks like this. Now, the images aren't [1099] entirely perfectly sized or whatnot. If [1101] you wanted to go that extra step, you [1103] would have to make an HTTP call to the [1105] Google Docs API. This is reasonably [1107] simple to do. I just, you know, I didn't [1108] want to spend God knows how long [1110] fiddling over the various API [1112] configuration parameters. Also, I [1113] personally like I'm not a big fan of [1116] just publishing stuff like this [1117] immediately. I do like to have a human [1119] in the loop when I publish blog content [1120] because I personally find I think [1122] anybody here that's done any sort of [1123] publishing will find if you just [1125] sprinkle a few minutes of somebody's [1126] time going over an article fixing even [1129] minor mistakes. You improve the end [1132] output like the quality of that article [1135] multiple orders of magnitude versus if [1136] it's just entirely automated. So, this [1138] is somebody that's run a $92,000 a month [1140] content writing company that used AI to [1142] do this sort of stuff. I still stand by [1144] it, but you know, having slight little [1145] formatting issues or whatnot when people [1147] read the article is not the end of the [1148] world. But, your end result is something [1149] like Scotland has been has long been a [1151] favorite destination for travelers [1152] seeking self-catering holidays, offering [1154] visitors the flexibility and comfort of [1155] a home away from home experience set [1157] against stunning natural landscapes. In [1159] recent years, cabins and self-catering [1160] rentals have notably increased in [1162] popularity with approximately 31% of [1163] visitors choosing cabins as their [1165] preferred accommodation. That's pretty [1166] cool and interesting. Thank you very [1168] much, AI. As you guys can tell, you guys [1170] could actually generate some pretty high [1171] quality content with this, assuming that [1172] you guys get the the image prompt down. [1174] And there are a variety of other image [1175] generators that you guys could use for [1176] this. There's nothing wrong with [1178] publishing this directly to, let's say, [1179] WordPress if you guys wanted to, or some [1181] other blog service, web flow or whatnot. [1183] All you would have to do is just replace [1184] that last set of modules with instead [1186] of, in my case, generating a Google doc, [1188] just publish directly to WordPress with [1190] whatever logic is required in order to [1191] do that. Okay. And then the last system [1193] here is a simple email categorization [1194] system I built in make.com and I've [1196] showed this a couple of times. This is [1197] one of the simplest systems to get your [1198] foot in the door at, you know, a small [1200] to mid-size business because it handles [1202] an issue that most founders have been in [1204] personally. And that's where you just [1205] get a ton of emails. Your email ends up [1206] being the bottleneck of your company and [1208] your whole business. And so what this [1210] system does is this basically just [1211] watches for a new email that comes in, [1213] forwards it over to a web hook, and then [1215] it categorizes it using artificial [1217] intelligence. And I'll show you this in [1218] real time in a moment. This AI is [1220] responsible for giving it one of four [1221] labels. Sponsorship requests, people [1223] selling me stuff, invoices, and [1224] receipts, and worthwhile. This is just [1225] for my own business. Obviously, you [1226] would categorize this however you want [1228] for the client that you're working with. [1229] Then I give it some additional [1230] instructions. And then all it does is it [1232] moves the email to the right category, [1233] marks it as red. Yeah, that's uh more or [1235] less it. So, let me show you what this [1236] actually looks like. If I run this once, [1238] we're now currently waiting for that web [1239] hook to come in, right? I'm just going [1241] to open my second email here. My first [1243] is going to email my second. Say, "Hi, [1246] I'd like to sell you something. Hello, [1249] this is me selling you something. Please [1251] reply, please." [1254] not too far off from uh some of the [1256] messages I actually get. Okay, so I just [1258] sent myself an email. Uh that email is [1260] coming. Gmail just takes a second [1262] because it has to like hold on to it for [1264] 5 seconds to give you the ability to [1265] undo it. Okay, we then returned the [1267] email here with a bunch of text [1269] underneath. Then finally, we categorize [1272] that email. What you'll see is the end [1273] result is the category is people selling [1275] me stuff. So the email categorization [1277] system did a good job. It is not [1278] worthwhile. So then what we do? We just [1280] move them into that label. Now you have [1281] to move using this module's parlance but [1284] in Gmail it's called add a label. So now [1285] if I go back here let me give this a [1286] quick little refresh. Go down to people [1288] selling me stuff. You'll see that this [1289] has now been marked as people selling me [1291] stuff. And then as you can see like it's [1293] it's it's gray which shows that I've now [1295] looked at it or whatever. Same thing [1296] here. We no longer see in the main inbox [1298] and my life is a lot easier as a result [1299] of simple systems like this. So are all [1301] of the business owners I've sold them [1302] to. The cool thing with this system is [1304] you can actually just show the client [1305] how to update the filter and then you [1307] can have them play around with the [1308] filter. It's actually pretty simple. You [1309] record a simple loom. you say, "Hey, you [1310] just jump right over here into this." Or [1312] what you could do is you could pull it [1313] from, let's say, a Google sheet or a [1315] Google doc or something and have them [1316] edit it there. Variety of different [1317] means with which you can, but this also [1319] just gives them a level of control over [1320] the end result in the system and makes [1322] them feel like they're more of a part of [1323] it. Awesome. You guys could sell any of [1324] these systems for $1,500 a pop or more. [1327] I've seen people sell a couple of these [1328] systems for more than 10K, and I myself [1330] have sold my content generator system [1332] for at least that amount on a couple of [1333] occasions. There's a lot of value in [1335] simple linear left to right flows like [1337] this, as I'm sure you guys could tell. [1339] Not everything has to be fancy chat bots [1340] or AI agents. You guys can print money [1342] so long as you solve a customer problem [1344] and not just like pitch them any [1346] solution. So my hope is now you guys [1348] have five more ways to solve customer [1350] problems here. And I walked you through [1352] it from start to finish. So you guys [1353] should know everything that you need to [1354] about all the systems. You guys will [1355] find templates and blueprints to [1357] literally every one of these systems [1358] inside of Maker School. It's my zero to1 [1360] automation community with daily [1362] accountability to walk you through [1363] everything you need to know in order to [1365] get your very first customer in this [1366] niche. I will literally give you a [1368] dayby-day road map. So, however long you [1370] stay in my program, you will have a list [1372] of tasks to do on day one, a list of [1373] tasks to do on day two, and so on and so [1375] on and so forth. We have over 2,000 [1377] people in the community as of the time [1378] of this recording, and I increase the [1379] price every 100 members. So, if you've [1381] been on the fence, let this be the sign [1383] and let this be the permission you need [1385] in order to take that next step and dive [1386] into the lovely world of AI and [1388] automation. Aside from that, really [1389] appreciate everybody watching my videos [1391] till the end. If you're still here, [1392] you're a real one. Like, comment, [1393] subscribe. Do whatever you can to help [1395] me bump up to the top of the AGO. I'll [1396] catch you on the next video. Thanks so [1398] much.

Video: https://www.youtube.com/watch?v=4mWr6lMzFe4
Title: $100k AI Expert Answers Your Most Common Questions
[0] Today I'm going to be answering the most [1] commonly asked questions about how to [2] start an AI automation agency in 2025 [5] and scale it to $10,000 a month and [6] beyond. These questions are going to [8] cover a variety of topics from the [9] systems themselves, the no code [11] platforms, how to set up accounts, then [12] how to actually start marketing with a [14] little bit of money in your pocket. I'm [15] going to do them Blackboard style and [17] essentially what I've done is gone [18] through my YouTube source the most [20] popular questions that I found and just [21] added them to this this tool so that I [23] can draw on it and kind of explain my [25] concepts visually. So the very first [26] one's from study motivation 6838. They [29] say, "How do I do outreach and get [30] faster results if I'm willing to spend [32] $100 or more on it? Should I do Loom [35] videos or should I do assetbased [36] approaches or should I send via [38] automation?" So, what they're asking, [39] just to make a long story short, is how [41] would you start an AI agency today with [43] a hundred bucks? And I like the hundred [45] bucks answer. I just answered this on my [47] daily updates channel, which is [48] basically like a daily vlog channel. And [50] I thought that this would be a great [51] option for our first question cuz 100 [52] bucks obviously it means different [53] things to different people. But I think [55] it's a good litmus test for how [56] committed you are to get up and running [57] with a business. Right? If you backtrack [59] 5 10 or 20 years, businesses cost a lot [61] more than 100 bucks to get up and [63] running. So if you got 100 bucks and [64] you're willing to invest in an AI [65] agency, I think that that's a that's a [66] reasonable amount. That's something that [67] can push you very far. So how would I [69] actually go about doing this? Well, I [71] would actually focus less on the AI [74] agency part and more on the lead genen [77] first. Okay. So, what I'm going to talk [78] about is exactly the tools that I would [80] use today for lead generation to get up [82] and running as coste effectively as [84] possible. And hopefully, we're going to [86] we're going to leave some money in your [87] pocket. So, the very first thing we need [89] to do is we need to set up some sort of [90] cold email system. Cold email obviously [93] being the ability to send a large volume [95] of outbound emails to strangers, incite [97] their interest, nurture them, and then [99] turn them into paying clients. This is [100] repeatable, reliable, and there's very [102] low cost per meetings right now relative [103] to most other lead generation [105] approaches. exactly how I would get up [106] and running with this. I'd use this tool [108] called cheapinboxes.com. I'm not [110] affiliated with these guys, but they [111] have by far the least cost mailboxes [114] currently on the market. They're three [116] bucks a month per mailbox. Every mailbox [118] gets you between 20 or 30 outbound [120] emails a day as the time of this [121] recording, and they're all based on [122] Google Workspace, which is awesome. If [124] you guys scale up, you guys can actually [126] get them for cheaper. So, 100 inboxes [128] times this would be $250 for the ability [130] to send about uh 3,000 emails a day. And [133] then um you know if you go past a th000 [135] inboxes you're at $2 per month. So it's [137] 2,000 for the ability to send 30,000 [139] emails a day. Needless to say, even with [141] a few percentage points of reply rate, [143] you guys could run several businesses [144] worth with just the starter plan. From [147] there, I'd hook up all these mailboxes [148] to a tool called Instantly, which is the [150] current best practice cold email sender, [152] and you'll basically have [153] state-of-the-art best performing cold [155] email infrastructure for less than maybe [157] $50. From there, I would use a lead [159] aggregator service called Apollo. Now, [161] Apollo is just a way that you can put in [163] some parameters like the company [164] vertical, like the title, like the [167] location, like the industry, and stuff [169] like that, and then get a big list of [171] people that you might want to be able to [172] that you might want to pitch and sell [173] your services to. And then Apollo leads [176] cost a fair amount of money. So, what [177] people are doing these days is they're [178] actually scraping those Apollo leads [179] using a service like Appify, which is [181] sort of just like a data extractor, [182] which allow you to pump in a URL with [184] all of those people and then extract a [186] bunch of email addresses, which is [187] pretty cool. So, I've already done the [189] math here in terms of how much it costs. [191] If you guys get instantly, you guys are [192] paying 37 bucks. If you get two sending [194] domains, you're paying 20 bucks. That's [196] 57. If you get mailboxes via cheap [198] inbox, it's 15 bucks. So, I think 62 or [201] something like that now. And then [202] finally, if you scrape a bunch of leads [203] from Apollo via Apify using the service [205] that I talked about earlier, you're [207] going to be able to send about 1,500 [208] emails in your first month. It's going [209] to cost you three bucks. And the total [211] is going to be somewhere around 75 [212] bucks. Okay? I'm leaving a little bit of [214] a buffer here because obviously uh the [216] way that AI automation agencies work is [218] you need to be able to automate stuff. [219] So you're going to have to get a couple [220] of additional tools. You're going to [221] have to get like a make.com subscription [223] or self-host using naden, whatever tools [225] you want, obviously. Okay, so that's our [228] cold email right off the bat. And that's [229] the very first and most effective thing [230] that I'd set up. And why do I start with [232] lead genen? Because if you don't have [233] leads in a business, you don't have the [235] ability to sell to people, you don't [237] have a business. You just have something [238] fun that you do for yourself on the [239] weekends. Ultimately, we're about making [241] money with the stuff. So, if we're going [242] to have a business, let's start where it [244] matters with the leads. The next thing I [246] do is I get up and running some sort of [248] video DM approach. What are video DMs? [252] Well, basically these are like modern [254] cold calls. You know how back in the day [256] you would if you wanted to reach [257] somebody at some business, pick up the [259] phone, dial their number, and then give [260] them some canned pitch. I'm sure we've [262] all seen Wolf of Wall Street or [263] something like that. Um, basically [265] today's version of that is video DMs, [268] usually using a platform called Loom. [270] Now the benefit to videos are they are [271] asynchronous. Okay, big benefit here is [274] that they're asynchronous. What async [276] means is that when you send the video, [278] the other person on the other end of the [280] line does not have to be around to watch [281] that video. They could go, you know, [284] maybe they're swimming or something or [285] they're spending time with their kids. [287] When they come back to their email inbox [288] and they see your video, then they could [290] watch it. The value of this over [291] something like cold calling is hard for [293] me to state. Back when I was cold [294] calling with my very first digital [296] marketing agency, Pacific Creative [297] Group. Uh boy, I think this is five or [299] six years ago now, maybe even longer, I [301] would do between 50 to 80 either door [303] knocks or cold calls every single day. [304] And we kept that up for about a year. [306] Now, these were awesome and they [307] obviously landed us some results. I [309] mean, if I didn't, I wouldn't have been [310] able to scale that business to about [311] $100,000 a year. Um, not massive, but [314] also nothing trivial as well, as I'm [315] sure you guys can imagine if you're just [317] getting started with the stuff. But what [318] I noticed is of the 50 and 80 of these [320] cold calls that I did a day, more than [322] half of the people that I would reach [323] out to simply weren't available. If I [326] made 50 calls, 25 of those calls [328] literally would either not pick up or [330] they would just be busy. So asynchronous [332] video DM solves that. You get all the [334] benefit of customizing your outreach. So [336] having a real human being on the other [338] end of the screen, you get to avoid any [340] sort of asynchronous problem. And [342] anecdotally, I also find that I get a [344] lot more respect when I do this because [345] I'm not really intruding on somebody's [347] time. Okay. And it's a lot more scalable [349] because I don't have to set aside a [351] certain amount of my time in order to to [353] to do it. I don't have to set aside like [354] a three-hour cold call block. It's [356] actually more like, hey, you know, I [357] have 5 minutes free before my next [358] meeting. Why don't I send out a video DM [360] really quick? Okay, so the best way to [362] do video DMs, and by the way, this is [364] what like everybody in every major [365] marketing program or like agency [368] accelerator or whatever is preaching [369] right now. You basically just send like [370] 50 of these puppies a day and eventually [372] you make a ton of money. But what I [373] recommend for this is this free platform [374] called Loom. Loom is essentially if I [376] click on this button, my Chrome [378] extension here, see how there's a little [379] window that just popped up in the bottom [380] lefthand corner of my screen. This is [382] just using my different camera, but this [384] just allows you to do a bunch of stuff. [385] You get to basically screen record just [386] like I'm doing right now. And then after [388] you're done with the screen recording, [389] you just have a link. The benefit of the [390] link is you could send that via any [392] social media platform. You could send [393] that via Facebook DM, you could send [395] that via Instagram DM, you could send [396] that via XDM, you could send that via [398] LinkedIn, right? And the value here is [400] you are now capable of basically putting [403] yourself, your personality, and you in [405] front of another person and then [407] pitching them on how you can solve a [408] problem that they're suffering from. And [410] if you keep your outreach at under 5 [411] minutes, you can do it completely free. [413] Cost you nothing. Okay, first of all, we [415] had cold emails. Second of all, we had [416] video DM approach. And the last one I [418] would probably do with the remaining [419] maybe 20 bucks or so you have is Upwork. [421] you guys are unfamiliar, Upwork is a [423] really fun jobs platform that I've been [425] pitching non-stop over the course of the [426] last couple years because it's made me [427] about $500,000 just on the platform [429] alone, but significantly more if you [431] take into account a lot of the [432] serendipity and business relationships [433] and whatnot that I've have. And [435] essentially what Upwork is is just a [436] place where people post jobs for [439] services that they are looking to have [440] done for them. Okay? Okay. And if you [442] want to start an AI and automation [443] agency, that's one of the easiest, [445] simplest, and best ways to go about [446] doing it. Because as a total beginner, [448] you usually don't know too much about [449] sales to be completely honest. And so, a [451] lot of the things that would normally [453] trip up a beginner salesperson, like [455] understanding what a problem is, [456] understanding how to pitch a solution, [458] understanding how to like really press a [460] painoint and stuff like that, Upwork [461] sort of takes care of for you because [463] all you're really ever dealing with is [464] just a list of jobs posted by people [466] that have money in their hands that are [468] willing to pay. So, there is a [469] trade-off. Obviously, this costs a [471] little bit of money, but Upwork is one [472] of the simplest and easiest ways to get [473] up and running that I've found. And uh [475] usually it's going to cost you, I don't [477] know, like a few bucks every time you [478] make a request for a job app. So, [480] because of a 20 or maybe $25 buffer [482] here, you might actually be able to send [484] out eight or 10 apps. Here's some [485] example math. This is example math that [487] I posted on my daily updates channel um [489] just the other day. So, if you want to [490] go more into detail on that, just check [492] out uh my daily updates channel. That's [494] um NickSarif Daily over here where I [496] basically do Q&A every single day. You [498] know, if you guys spend $100, if you're [500] committed, and if you guys are [501] consistent with how you do the outreach, [502] you do them every single day for a long [504] enough period of time, okay? You might [506] get something like 1500 outbound emails [508] with a 3% reply rate leading to 45 [511] replies. 20% of those being positive, [513] positive enough to land a meeting, [514] leading nine leads, 10% closing rate, [517] which might be one client or so. And [519] then, let's say you close a deal for [521] $3,000. You've invested a h 100red bucks [523] and a bunch of your time to be clear, [524] for maybe 2 or 3,000 bucks in Rev. Okay, [527] it's not actually that scary. I know [529] that this is just math that I'm putting [530] on the screen, but if you guys want to [531] check this sort of thing out for [532] yourself, definitely check out Maker [533] School, which is my community, where we [535] basically get like five people making a [537] wins post like, "Holy crap, I just made [539] my first $2,000 client today." And that [541] happens every day. So, focus on speed [542] over tools. Um, get revenue flowing [544] before worrying about perfecting stuff [545] and reinvest all of your profits into [547] better tools and systems. This is [548] exactly what I would do if I were in [549] your shoes. Next question. Milan Joe [552] Chickic, I hopefully I'm not butchering [553] him, says, "What kind of automations do [555] you recommend for beginners to sell? [556] Thanks for making educational, actually [558] useful videos." Thank you. And that [559] question in a nutshell is basically, [560] "What beginner automations are the [562] easiest ones? Like, what should we [563] actually get up and running with?" Now, [565] I've listed a bunch over here, but I'm [566] actually going to just run you through a [568] few tabs that I have open with simple no [569] code tools like Make.com and NAN, and [571] run you through what I would consider [572] some of the easiest and simplest [574] automations to get up and running [575] selling today. The first is a simple [577] email categorization system. This was [579] built in make.com. As you guys could [581] see, that's what the purple on the lefth [582] hand side looks like. If you guys are [583] using NAND, we got a couple Nad ones in [585] a second. Just hold your horses. [586] Essentially, what this email [587] categorization system does hopefully, I [589] mean, it's in the name. It helps [591] categorize emails as they come in. A lot [592] of people really like this, believe it [594] or not. And believe it or not, this is a [596] very big point of value, especially for [598] founders that are just swimming and [600] drowning in uh in too many emails. The [602] way it works is we catch new emails [604] using this web hook module. We then um [606] get to the email using a Gmail call and [609] then we have an AI module. This little [611] logo here is for OpenAI actually [613] categorize the email into one of a [614] variety of categories. So uh the [616] categories that I'm using for this [618] system for instance are sponsorship [619] requests. In my case, I get a lot of [621] people asking me, hey Nick, would you [622] like to be sponsored for whatever I [624] don't do sponsorship requests? Kind of [626] cart blanch on my channel. So I just say [627] no and then I pump them in here. Uh [629] people selling me stuff, invoices and [631] receipts. And then finally, a category [632] called worthwhile where I actually get, [634] you know, emails from people that I that [635] I respond to. Terms of what this [637] actually looks like, you can see inside [638] of my Gmail, I have a people selling me [640] stuff category, invoices and receipts, [642] sponsorship requests. Basically, every [644] time a new email comes in, we just [645] categorize them into the right label and [647] then, you know, a founder or in my case, [649] me or maybe the business owner that [650] you're selling this to just doesn't have [651] to worry about stuff unless they're in [652] the labels that they're actually [653] interested in. Okay, simple, quick, and [656] easy system. This thing takes less than [657] 5 minutes to set up realistically if you [659] know what you're doing. It's just [660] linear. but there's one route and it's [662] mostly as you guys see here just email [664] modules um combined with one open AI [666] call. Another really quick and easy [667] system to set up is that same thing in [669] NADN. NAD is built a little bit [671] differently than make.com. But if you [672] guys want to see what that same system [673] looks like here, it's just replaced with [675] a Gmail trigger and then instead of um [677] that one open AI node, we're using [679] what's called a text classifier. And [680] then I just have a bunch of different [681] categories. Your transactional emails, [683] invoices, and receipts, cold outreach, [685] sponsorship, blah blah blah. Basically, [686] what'll happen is we'll put the email [688] body inside of this text classifier. and [690] then it'll just say, "Hey, this email [691] seems to me like an invoice." If that [693] occurs, it goes down this invoices and [695] receipts pathway, then finally just gets [696] marked as red and kind of labeled. [698] Another simple make.com scenario that [700] you could sell to basically anybody with [701] virtually no experience whatsoever is an [704] automatic invoice collection system. [705] Now, uh most businesses these days still [707] operate off of manual invoices. So, [709] let's say you're working with like an [710] accountant or let's say you're working [711] with some sort of B2B manufacturing [713] company or something. Usually the way it [714] works is, you know, you're going B2B. [716] they will perform a service for somebody [718] else and then they will send them an [719] invoice. Okay? And the only way that [721] their company grows, the only way that [722] they make money is if the person on the [723] other end of the line actually pays that [725] invoice. But a big issue in any sort of [727] agency or any sort of like uh higher [730] ticket service is usually it takes [731] people a long time to pay that invoice. [733] And believe it or not, a lot of people [734] forget to pay invoices. So founders and [737] business owners and salespeople have to [738] commit a large portion of their day to [740] literally just following up mindlessly [741] about an invoice that was done. Well, [743] this is a simple system that I whipped [745] up in maybe 20 minutes or so on my [746] channel either last year or a few months [748] back. I forget exactly where this one is [750] that literally just goes through a list [752] of invoices and then it checks to see [753] what day it currently is. And then if [755] it's been, I don't know, 7 days since [757] that invoice was sent, then it just [758] creates a draft and follows up. If it's [760] been 14 days, then it just creates a [762] draft with different language. If it's [763] been 21 days, it creates a draft with [765] different language. It's been 28, 35, [767] 42. Obviously, it just changes the [769] language so it doesn't seem like you're [771] sending the exact same templated email. [773] Okay, pretty simple and straightforward. [774] Here's a quick example of just a Google [776] sheet with a bunch of invoices. You [777] could take the same data source from [778] anything, QuickBooks, you could do [780] Stripe, you could do, I don't know, Wave [781] Apps, you could do more or less any [783] invoicing platform that allows you to [785] list the invoices, which is most of [786] them. Okay? And then you just have logic [788] that checks to see what day it is and [789] how many days it's been since before [791] sending over an email that looks [792] something like this. Hey, Nick. Hope [793] you're doing well. Just wanted to check [794] in on the invoice I sent over last week. [796] Let me know if you have any questions. [797] Does this seem like it's a major game [798] changer? No. But a lot of the time, the [800] highest ROI systems in life are those [802] that don't seem like major game [804] changers. They just help somebody take [805] care of something that was draining, I [807] don't know, 10 or 15% of their energy on [809] a weekly basis. So, business owners [811] really love this stuff, which is great. [812] And this actually drives a revenue [813] increase, which I also like. Another [815] system that you guys could sell, this [816] one's built in NAN, is an AI podcast [818] repurposing engine. Basically, what this [820] allows you to do is it just allows you [821] to pump in any podcast or any long form [823] piece of content into a simple form in [826] NAND. After you pump it into this naden [828] form, essentially the system is going to [830] go and convert this YouTube URL into [832] just a bunch of social media posts for [834] you. Okay, the social media posts are [836] pretty simple. They include images, they [838] include text, and so on and so forth. [840] And then the person can either post them [842] manually to their profiles or they could [844] automate the process with some sort of [845] automated post system. I've shown how to [847] do this just about a week or two ago. [848] So, if you like this sort of thing, just [850] check out my videos and type in AI [851] podcast repurposing engine Nick. You'll [853] find it. The last one is a video I just [855] did the other day on a super simple but [856] very high ROI system that's picking up a [858] lot of steam recently. That's called [859] assetbased cold outreach where basically [861] you will scrape customer data using the [863] two platforms I talked about earlier, [864] Apollo and Ampify. Then you'll scrape [866] their website. You'll extract a bunch of [868] data from their profiles and from their [870] website. Then you'll pass them through [871] AI to generate a newsletter. This [873] newsletter is then basically built as a [875] custom asset where you show your value. [877] You say, "Hey, I just built you this [878] really cool newsletter. If you like this [880] sort of thing, I have systems that allow [882] you to generate these on demand, [883] hundreds, if not thousands per day. And [885] I know that giving value upfront is how [887] you get ahead in this industry. So, here [888] is the newsletter. Take it and do [890] whatever you want with it. I'm not going [891] to charge you a scent. Okay? So, [893] hopefully you guys see there are a [894] variety more systems over here. But any [897] of these systems that improve your [899] revenue, okay, or impact your margins [902] positively are typically the simplest [903] and the easiest for beginners to sell. [905] Obviously, bonus points if the system [906] itself is linear and maybe five or six [908] modules. We saw a couple of them above, [910] but generally the simplest and easiest [912] ones to sell are the ones where you can [913] justify the return on investment. You [915] tell a business, "Hey, if you pay me [917] $1,000 this system, okay, I'm I'm [919] estimating it'll make you $5,000 in [921] return." Obviously, it's hard to be uh [923] blunt like that, if you don't have good [925] experience, if you aren't very confident [927] in the systems, you haven't sold them [928] before. But when you get to that point, [930] you'll find that pitching a product as a [932] return on investment is the best way of [934] going about scaling any sort of [935] business. All right, another big [936] question I'm receiving is, should I [937] niche down or go broad with building my [939] agency? This was asked by Francisco Bu [941] Martinez. He said, "Is LeftClick [943] oriented toward a specific niche?" He's [944] talking about my own agency, [945] Leftclick.AI. We have a small AI agency [948] and we're still in the custom projects [949] phase. We're trying to pick a niche, but [950] nothing seems to fit. He then goes on to [953] ask me about how I'm doing my niche and [954] so on and so forth. But to make a long [956] story short, Francisco is basically [958] saying, "Hey, do we niche down or do we [960] go broad when building?" This is a [961] really interesting question. There's [962] actually a fair amount of nuance. So, [963] the usual piece of advice here is you [965] should niche down whenever possible and [967] extraordinarily deep. And I understand [969] when people say stuff like that. Uh, I [970] get why. It becomes a lot easier to sell [972] to a target audience if you're niched [973] really, really deep down in it. That [976] said, there's some nuance. The nuance is [978] if you're a total beginner and you're [979] just getting started, not just with AI [980] and automation agencies, but with [982] business in general, odds are you don't [984] actually know how to pick a very good [985] niche. So, my recommendation for you is [987] don't just pick one niche, pick multiple [989] niches. Okay? What I mean by this is you [992] could pick three niches instead of one. [996] Let's say you do SAS companies, software [999] as a service. Let's also say you do [1002] agencies, so I don't know, B2B agencies [1004] or something. And let's also say that [1006] you work with um I don't know, MSPs or [1009] something like that. Okay, managed [1010] service providers. These are all [1011] acronyms. I know they're kind of [1012] annoying, but you tend to pick them up [1013] when you do enough of the stuff. Okay, [1015] so what you're thinking right off the [1016] top is well Nick, if I go into three [1018] niches, that's three times the work. How [1019] am I going to, you know, get all the [1020] benefits of just being super focused [1022] into one? Well, I recommend that you do [1024] three niches and you do it for 90 days [1025] and you just test and figure out which [1026] one works the best. Because as a [1028] beginner, if you put all your eggs in [1029] one basket and if you make a calibration [1030] error at the very beginning, which [1031] you're much more likely to do, you'll [1033] basically you won't have wasted 90 days, [1034] but the likelihood of you receiving some [1036] sort of positive feedback in your first [1037] 90 days is a lot lower. And in addition, [1040] three niches is not 3x the work. Okay, a [1043] lot of people think three niches is 3x [1044] the work, but it's not. Realistically, [1047] as an AN automation agency, a lot of the [1049] services you're going to sell to a SAS [1050] company are going to be able to be sold [1052] to agencies. And a lot of the services [1053] that you're going to sell to agencies, [1054] you could sell to managed service [1056] providers and vice versa. So, there's a [1057] lot of overlap. In reality, three niches [1060] is maybe 1.5 times the work. Okay? Now, [1064] what is this? This means we get to pick [1066] three times the niches. We have three [1067] times the likelihood of success for just [1069] 50% more work. So, it's like 300% [1071] results for 150% the work. This is what [1074] we call leverage. And leverage is the [1076] name of the game in AI automation and [1078] just business in general. When you find [1079] free wins like this, you should take [1080] them. So to answer Francisco's question, [1082] my recommendation is that you niche [1084] down, but you niche for a pre-committed [1086] period of, let's say, 90 days, and you [1088] test three different niches [1090] simultaneously at the end of this [1092] approach. Okay, after your 90-day [1094] period, then pick the highest performer. [1096] Now, we do a slightly accelerated [1097] version of this in Maker School just [1099] because we send significantly more [1100] emails and because I'm assuming that [1102] people are significantly more motivated [1103] to do it than maybe some casual YouTube [1105] viewers that haven't put money down. I'm [1106] keeping this at 90 days for you. In [1108] Maker School, it's just 35 or 40 days or [1110] something like that before you do that [1111] process. If you guys like that [1112] accelerated approach, then definitely [1114] check out the program. All right, what [1115] other sorts of questions do we have? [1117] This lovely one from Gabrielle EQ9PR, [1119] what a lovely name. Says, "Hey Nick, [1121] I've been watching your content for a [1122] month now and I'm thinking of starting, [1123] but I'm wondering for a cold email [1124] system that uses instantly and other [1126] platforms you have to pay for in order [1127] to get benefits out of them. Should I [1129] cover the price by charging a small [1132] monthly maintenance fee or should I let [1135] the client pay?" I'm not sure the last [1137] part would please the client. So, in a [1140] nutshell, Gabrielle's asking, should [1141] clients pay for platforms like Instantly [1143] or should I pay for platforms like [1145] Instantly? hot swap instantly for [1147] anything. Panda do make.com nadn right [1150] whatever service essentially that you [1152] need in order to build out the person's [1153] solution should you be paying for it or [1156] should the client be paying for it so [1157] this is a nuance question and a lot of [1158] people just want to say you do this or [1160] you do this but let me give you some [1161] explanations here okay here is what [1163] happens if you pay okay if you pay your [1166] offer is really easy you basically say I [1170] do everything if you pay me $2,000 a [1174] month I will set up all your accounts [1175] for you I will manage those accounts I [1177] will build all the software in the [1178] accounts. And from your perspective, [1180] it's super simple. All you do is you pay [1182] my $2,000 a month invoice and everything [1184] is hunky dory. Okay. So, what does that [1186] mean? It's very low friction. It's very [1188] easy for the client to say yes. Okay. [1190] Easy to start, I should say. There are [1192] fewer hiccups cuz you don't got to deal [1193] with, I don't know, like 2FA or [1195] whatever. Well, I mean, you still do [1196] have to deal with 2FA, but there's like [1198] less hiccups and stuff like that. And [1200] from the client perspective, everything [1201] is bundled and it's simple and it's [1202] easy. Okay. Now, there's some cons to [1203] that, which I'll get into. Now, let's [1205] contrast the pros with if they pay. Now, [1207] if they pay, it's higher friction [1208] because now they have to spend a little [1210] bit more time and energy. They got to uh [1212] I don't know, instead of there being [1213] just one invoice that they pay every [1214] month, now they have to think about [1215] adding their card to two or three [1217] services, they actually have to sign up [1218] for them. But you have lower liability. [1220] What that means is you are not taking [1222] the risk of having all of these software [1223] platforms that you're constantly paying [1225] for every month. It also means there's [1227] no handoff. I hate to break it to you, [1228] but you're not going to be working with [1229] all of your clients forever. Sometimes [1231] things are going to change. Your needs [1232] are going to change. Client needs are [1234] going to change. essentially they're not [1235] going to want to maintain either a [1236] monthly relationship with you or [1238] something like that. What that means is [1239] you're going to need to hand off the [1241] tools and the software platforms if [1243] you're the one that's paying for them, [1244] right? So, if you guys have them take on [1246] all of the payments and all of the [1247] account setups and stuff like that [1248] initially, you just never have to worry [1250] about that. Also, if they pay, I like to [1252] think it's a little bit more ethical. [1253] Now, some people would disagree with me [1254] on this, but I want you just to think [1256] about it from the customer perspective. [1258] Let's say you build an awesome system [1260] and the system delivers a really big ROI [1262] and 3 months down the line you stop [1264] putting in the good work. Okay, but [1266] because you've built systems for that [1267] client for 3 months, they've slowly [1269] added more and more things to it. Now, [1272] if the client says, "Well, you know [1273] what? Nick really isn't putting in his [1275] fair share of the deal. I don't really [1276] think he's, you know, delivering me the [1277] value that he said he would, but at this [1279] point, half of my freaking business runs [1281] off of his Make.com account or NAN [1283] account." What sort of perspective do [1284] you think that client is going to have? [1285] Do you think it's going to be a positive [1286] perspective? Do you think it's going to [1287] be a negative perspective? What sort of [1288] vibe is that relationship going to be [1290] like? I say this because I firmly [1292] believe against the use of, I guess, [1294] dark patterns in keeping a client on [1296] board. The last thing I want is for a [1298] client to feel like they need to keep [1300] paying me or else I'm just going to take [1302] away all their services, which to be [1303] honest is the unspoken implication here. [1305] I think that this sort of thing works. [1306] And I get a lot of questions to this [1308] nature. Well, Nick, shouldn't I pay for [1310] everything so that if the client wants [1311] to leave, I can kind of dangle that over [1313] their heads? But I've just never found [1314] this to be very conducive to like a [1316] long-term business relationship. I also [1318] don't really think that's beneficial [1319] from a reputational perspective. I much [1321] prefer to have like a rising seafloor [1322] where it's like I need to continuously [1324] provide a ton of value to that client [1326] and if I can't justify the value, if I [1327] can't deliver multiples on it, then [1329] they'll let me go because there's no [1330] additional incentive there. And you [1332] might think that that's not being [1333] strategic, but I like to think that's [1334] actually being very strategic because it [1336] forces me to continuously provide better [1337] and better and more and more value. [1340] Okay. So now now that you know both [1341] sides and you know you know some of the [1343] pros and some of the cons, what do I do? [1345] I I let the client pay for everything. I [1348] in fact actually set up a simple kickoff [1350] call with the client that's usually half [1352] an hour to maybe 45 minutes where when [1355] they sign up and they pay and money [1356] changes hands. I tell them, hey, I'm [1358] going to need you to sign up to three [1360] platforms over the course of the next 15 [1361] or 20 minutes or so. Then we're going to [1363] cover timelines. Then we're going to [1364] chat expectations and I'm going to be [1366] here on video call, so I'll be able to [1367] walk you through the sign up. By the end [1368] of it, you're going to know everything [1369] that you need to know in order to manage [1370] this. You're also going to have all the [1372] billing details and stuff like that set [1373] up. You're going to have total control [1374] over the platforms. And if you have any [1376] questions, you want to hot swap me with [1378] somebody else or you want to get your [1379] team members in here, whatever, you'll [1381] know how to do all that. Does that sound [1382] good? Okay, great. Let's get started. I [1384] get to basically kick off the [1385] relationship in my opinion on a pretty [1386] good foot. And then I also have no [1388] liability. There's no handoff needs. [1390] It's ethical. And despite that higher [1392] friction, I actually kind of treat this [1393] like an opportunity. Okay? And that [1395] opportunity is just to, you know, [1396] empower the client and make them feel [1397] like I have their best interest at [1398] heart, which ultimately I do. So that is [1400] how I personally do things. This is a [1402] very hot button issue. I see a lot of [1404] people asking this question all the [1405] time. There are some nuances here, but [1407] yeah, you get to create cleaner business [1409] relationship boundaries, give them [1410] ownership, and then also eliminate [1411] handoff headaches. So check this out. [1413] There's one more thing. You also get [1414] affiliate revenue. H yes. So in addition [1417] to all of these other four benefits, you [1418] can also just have the client sign up to [1420] an affiliate link that you provided. you [1422] frame yourself as a partner, which you [1423] are for a lot of these services. So, if [1425] you're an instantly partner, a Make.com [1426] partner or something, you actually get [1428] to leverage that, use that in order to [1429] usually give them some benefit, like a [1431] free month of Make.com or something like [1432] that or some discount for the service. [1434] So, you actually get to align incentives [1436] while you actually make more money. And [1437] in practice, when I was at the peak of [1439] my agency, this is somewhere between 3 [1440] to 5% free margin. Think about it. On a [1442] $72,000 a month agency, that's crazy. 3 [1445] to 5% margin could be the thing that [1447] separates you from an agency that fails [1449] and then an agency that succeeds. Now, [1451] if you did want to take that other [1452] approach and by all means, go for it. [1454] Just add a markup to that because you're [1456] doing additional work for the client, [1457] you might as well make a little bit of [1458] money. Anyway, that's my take on it. [1460] That's personally what I do and that's [1461] what I would recommend. All right, next [1462] question is from Thought Vision. Nick, [1464] do you see any way to do this for [1465] someone with zero code experience? Are [1467] there any true no code offerings that [1468] could achieve this? Now, thoughtfision [1470] here, lovely candid flag by the way, um [1473] is basically saying if you have zero [1475] code experience, zero technical [1476] experience, if you are, I don't know, [1478] technically challenge, you just have a [1479] lot of trouble getting into this stuff, [1480] can we still do it? And if so, what is [1482] the best learning path for someone with [1484] zero programming experience? So, what [1487] I'm going to do is I'm just going to run [1488] you through exactly what I would do if I [1489] were in your shoes right now and [1490] starting with zero technical experience. [1491] Now, to be clear, I have technical [1492] experience now. I spent the better part [1494] of the last five years or so uh five and [1496] a half years learning how to program and [1498] learning how to code uh learning how no [1499] code platforms work drag and dropping [1501] modules with make.com learning nadn [1503] learning AI and prompting and so on and [1505] so forth so I am sitting from kind of a [1507] privileged position here on my ivory [1509] tower or my golden throne but I want you [1511] to know that it is entirely doable and [1512] this is exactly what I would do if I [1514] were in your shoes I would start with [1516] make.com that's that purple platform [1518] that we were looking at earlier see how [1520] colorful it is and how friendly it is [1522] well it's colorful and friendly because [1523] it's easy and it's supposed to be [1525] introductory. It's supposed to ease [1526] people with no technical experience into [1528] building actual no code flows. Okay. [1531] Now, my recommendation for how to get up [1533] and running with that is watch my [1534] freemake.com playlist at nixmake.com. [1537] Now, I don't actually think nixmake.com [1539] works yet. Just double check. No, it [1541] does not. We are attempting to get that [1542] up and running. So, if it's not up by [1544] the time that you guys check this out, [1545] just type nicks arrive.com playlist. It [1548] is that easy. You will be directed to [1549] make for people who want to make real [1550] money. From there, you will have about [1552] 59 hours or something like that of [1554] make.com footage where I run you through [1557] everything from first principles aka [1559] what the dashboard looks like, what [1560] automations are, how to fire a web hook, [1562] what are the basics, what are every [1564] function, and I do it all with my cringy [1566] purple text thumbnails to accompany. [1568] Okay, so that is what I would do. That's [1570] how I get up and running ASAP. While [1571] watching, I'd focus on learning these [1573] key concepts. First is APIs, next is web [1576] hooks, the third is prompt engineering, [1577] and the last is test-driven development. [1579] I'd consider these probably the most [1580] important parts of automation as a [1582] service. And then if I just had a couple [1583] tips for it, it would be don't get stuck [1584] in theoretical learning. So build actual [1586] client-f facing automations. What I mean [1588] by this is don't just watch me do stuff. [1590] Actually like build alongside me. Like [1592] open up your make.com builder when I [1593] open up my make.com builder and then [1595] like instead of just watching me drag [1596] and drop the modules, actually drag and [1598] drop your own. Pause the video every 2 [1600] minutes or something like that just to [1601] try and recreate what I did. If you do [1602] this, you'll learn a lot faster than if [1604] you simply watch and passively consume [1605] the material. Active engagement is [1607] pretty necessary to learning. I know [1608] it's a little bit more work, but it's [1609] really not that much more work. You were [1611] going to spend 60 hours watching this [1612] stuff anyway. You might as well get two [1614] or three times the benefit from it, [1615] right? A couple of other resources you [1616] can check out like 80% of a automation [1618] in 30 minutes. Well, 29 minutes and then [1620] yeah, just try and apply what you learn [1621] immediately, even if it's imperfect. [1622] Your skills will compound quickly if [1623] you're solving real problems. The [1625] distance between you right now, okay, [1627] and then somebody that builds systems on [1630] a regular basis, aka an automator, I [1633] don't even know if that's a real word, [1634] but that's what we're rolling with. [1636] Might just be two weeks or so. Okay, [1638] even if you have zero coding experience, [1640] and I know some of this stuff will seem [1641] intimidating, it might only take you [1643] about two weeks of self-learning to [1644] actually get to the point where you [1645] could build business systems, maybe even [1646] less for some of you guys that have some [1647] technical experience. Okay, when I say [1649] some, I just mean like, you know, [1650] knowing how to use Excel or, I don't [1652] know, formulas and Google Sheets, that [1653] sort of stuff. So, the bar is actually [1655] pretty low. It's just about the agency [1657] and the ability to consistently execute. [1659] That's really like the barrier to entry [1660] in this industry. All right. Okay. Next [1662] great question comes from the lovely uh [1663] Tris 10J. He says, "Another question I [1666] have is, how do you even crush tasks so [1667] fast? What's your strategy? I'm [1668] struggling in this finish duty/task [1669] fast. Took me 3 days to complete my [1671] website using Livable. I know for a fact [1672] that's too long. Sort of embarrassed. [1674] First of all, man, you don't got to be [1675] embarrassed at all because you're still [1676] making progress. You're still moving [1678] forward. And the vast majority of the [1679] people that you are comparing that you [1680] should be comparing yourself with, [1681] realistically, they're not moving [1683] forward at all. Like, you're comparing [1684] yourself against probably like the [1686] nicest, most manicured people that you [1687] see on YouTube and Instagram and all [1689] these social media platforms. Of course, [1690] they're going to move fast, right? [1691] because the cream bubbles to the the top [1693] or whatever. Their strategies are what [1695] allowed them to uh for the most part, [1696] you know, succeed. But, you know, if [1698] you're at the start line of your [1699] business, you don't have all those [1700] strategies yet. You need to learn these [1702] strategies. So, it's totally natural [1703] that, you know, you can't do things as [1704] quickly as you're seeing other people do [1706] them or whatnot. If you just zoom out a [1708] little bit and realize that the vast [1710] majority, like 90% of the world is [1712] basically doing nothing, by nature, just [1715] by default, you're already in the 10% [1717] that does something. So, um, don't let [1720] that kind of get in your head. All [1721] right. Now, in terms of practical tips, [1723] basically the way that the market works [1725] today is that speed beats perfection [1727] more or less every time. What I'm seeing [1729] a lot of people do is probably because I [1732] don't know, just the way that media [1733] makes businesses out to be, they spend [1735] all this time planning. Okay? They spend [1737] all this time lining up the perfect [1739] sniper rifle shot. My Canadian is [1741] showing it. I don't even know how to do [1741] a sniper rifle, but uh they they spend [1743] all their time trying to like get the [1745] aim right and the pitch and the winds [1747] and and all the stuff so that their one [1748] shot is perfect, right? What inevitably [1751] happens though is the world moves so [1753] dang quickly that all that time they [1755] spent planning to take a shot over here [1757] becomes out of date because by the time [1759] they take that shot the target has [1761] already moved. Instead, what you want to [1762] do is you want to focus on feedback. So [1765] it's a very interesting concept that I [1766] saw earlier and saw this somewhere on [1768] Twitter and that's that feedback wins [1771] out over planning every time. Now what [1774] this means is instead of spending all [1775] your time planning and thinking, spend [1777] your time doing and then get results. [1780] Okay? Once you have some sort of result, [1782] make some change. Then go do it again. [1785] Then you'll get more feedback. And then [1786] once you have a positive feedback loop, [1788] you'll be able to make changes and keep [1789] up with the market and ultimately grow a [1791] lot faster than if you were just a plan. [1793] All right? Like if you think about it, [1795] let's say I'm on some big land. I don't [1797] know. This is I'm trying to think in [1799] American terms because it's probably [1800] what most people would understand, [1801] right? So I don't know, New York. I [1803] think that's on the I think that's on [1804] the eastern seabboard. Hopefully [1805] hopefully it is. Then over here is [1807] Portugal. Okay. Now, let's [1808] hypothetically say this over here is the [1810] Atlantic. You're taking a ship. Okay. [1812] And the port that you are attempting to [1814] get to is over here. And you're starting [1816] over here. Now, you're you're on you're [1819] on your boat. Okay. This is a really [1821] long distance. I can hardly even fathom [1823] in my head, my little puny human brain, [1824] how big of a distance it is between the [1826] east coast of the West and then the west [1828] coast of Europe. But it's massive. If [1831] you're a boat and you spend all your [1833] time kind of right over here at the very [1834] beginning trying to work out the perfect [1836] angle to go in order to get all the way [1840] over [1841] here. How likely do you think it is that [1844] you'll actually make it? Not very [1845] likely. There are a lot of things you [1847] have to contend with. There's the wind, [1849] there's the water, there are the rapids [1851] and the the waves. There are changes [1854] that are occurring all the time [1856] essentially is what I'm trying to get [1857] to. And if you try and plan everything [1859] out in advance, the likelihood that you [1860] will be able to predict all of these [1862] dynamic systems before you actually take [1864] any sort of movement is very low. So [1866] what'll actually happen and what I see a [1867] lot of people do is they spend months or [1869] years thinking what direction am I going [1871] to go in? And then they they finally [1873] figure something out, okay? And when [1875] they figure it out, they're actually [1876] pretty close. But what you see is, okay, [1879] over a long enough distance, being [1881] pretty close still isn't enough. Even if [1884] you're, you know, 80% of the way there, [1885] given a long enough time, your [1887] miscalibration will eventually fire you [1888] off, uh, I don't know, 500 km away from [1891] from where you're trying to aim. Now, a [1893] much better alternative to this, okay, [1894] instead of spending all this time [1895] planning is feedback. What do I mean by [1897] this? Well, why don't you just go here [1899] for now? Once you're here, why don't you [1902] reassess and say, okay, hm, how far are [1904] we from the end goal? Hm, what's the [1905] weather conditions like? Hm, why don't [1907] you change your direction a little bit? [1908] Then maybe you go up here. Then you do [1910] the same thing over here. Then you do [1912] the same thing over here. And then when [1913] you're really close to the point, you're [1914] like, "All right, I'm actually pretty [1915] close. I'm just going to go in this [1916] direction here." This analogy that I'm [1918] trying to make is basically how I think [1919] about markets these days. And if you are [1922] the sort of person that tries to get [1923] everything perfect right off the bat, [1924] Tristanj and anybody else that might be [1926] watching this, um, the likelihood of you [1928] actually making it to your goals is very [1929] low. But if you're the sort of person [1930] that can just get going, focus on just [1933] the 80/20, focus on just moving forward [1935] and then calibrating and using feedback [1938] in order to adjust your direction. I can [1940] hardly explain to what degree that sets [1942] you apart from everyone else that's [1944] focused on planning. Okay? So get [1946] feedback from people. I mean, you know, [1947] our version of the rapids and the waves [1949] and the winds are users, their [1951] customers, their prospects. And drive it [1953] by actual people, not your own internal [1955] ideas and planning. the more time you [1957] spend making something perfect, the more [1958] money and opportunity you're leaving on [1960] the table because, you know, as the ship [1961] proceeds, you're actually making, you [1963] know, if this is our if this is our [1964] business, you're legitimately making a [1966] little bit of money here, right? You're [1967] like, you're actually making some sort [1969] of cash flow. I mean, that I know it's [1971] it's crazy for me to think about, but [1972] legitimately on the journey from here to [1974] here, you're legitimately making a ton [1976] of money. And I think my mouse is broken [1978] because I can't seem to draw. Yes, [1980] you're actually making money here, [1981] right? Why not make money first and then [1983] worry about what direction to go [1984] afterwards? I guess is to make a long [1986] story short. So, focus on a culture of [1988] iteration. It'll never fail you. All [1990] right, next question from the lovely [1992] Read Jammore, who actually just ended up [1993] joining Make Money with Make. Um, which [1994] I'm I'm really stoked on. Great having [1996] you, Read. He says, "Hey, Nick. I always [1998] get the feeling that I don't know enough [1999] despite the fact that I almost solely [2000] watch and spend time on YouTube [2002] educational videos of different creators [2004] and entrepreneurs, but it looks like to [2005] me that it's never enough. I always find [2007] new things, funnels, tools, concepts, [2009] frameworks, strategies, and so on that I [2010] feel overwhelmed and what I'm doing [2011] isn't enough despite the effort I feel [2013] I'm putting in to learn." Now, Riad [2015] actually wrote more on this comment, but [2016] it's pretty long, so I just compressed [2018] it down into what I want to think is [2019] like the the the core part of it. And to [2021] make a long story short, I believe what [2023] Riad was asking was, "What is your [2024] advice for beginners doing some sort of [2026] outreach with zero tech experience?" [2028] Sorry, what I meant to say here was zero [2029] experience in general. Let's do [2031] practical experience. So, you know, how [2033] do you actually get up and running with [2034] like outreach is like your first move, [2036] right? So, u my recommendations for this [2038] basically, um, day one, use Upwork and [2041] cold email. Don't wait till you're [2042] ready. Like I was just explaining [2043] Tristan's, create Loom videos for [2045] personalized outreach. As I mentioned, [2047] they're free if they're under 5 minutes. [2048] Stick to free and cheap tools in the [2050] beginning. You don't actually need fancy [2051] tech to land clients. You don't even [2053] need my community to land clients. You [2054] don't, you know, obviously I'm I'm [2055] incentivized to pitch you on the [2057] services that I'm providing because I do [2058] earnestly believe that they help you [2060] achieve your results faster. But notice [2062] that I said they help you achieve your [2064] results faster. I didn't say they help [2065] you achieve your results. Okay? you can [2067] still achieve all of these results for [2068] free uh watching all of my content and [2070] then maybe a few other choice people's [2072] content. The key is just actually do [2075] something with that. Don't just spend [2076] all day thinking about it. And then when [2078] you are positioning yourself because you [2079] have no practical experience, the best [2081] way to do it is position yourself as a [2082] problem solver, just a general problem [2084] solver, not a technology expert. Okay? [2086] We want to position ourselves as [2088] experts. But in reality, if you have [2089] zero practical experience, positioning [2091] yourself as an expert is I mean, one, [2092] it's a little bit dishonest because [2093] you're not actually an expert in [2094] whatever domain field it is that you are [2097] attempting to present yourself as an [2098] expert in, but two, people actually need [2100] problem solvers. They don't actually [2101] need like technological experts in [2103] specific thing. The reality is markets [2105] and technology and everything just moves [2107] so quickly that as I mentioned, the [2109] skill of being able to recalibrate what [2111] direction you're going. If we just go [2112] back to my little example here, aka [2115] solve problems because this is you [2117] solving a problem is actually more [2119] important than you being such an expert [2120] that you can just get it in one shot [2122] right off the get- go every time. So [2124] nowadays, and I actually pitch myself as [2125] a problem solver more than I pitch [2126] myself as a, you know, a specific sort [2128] of technology expert. I obviously am a [2130] technology expert, but that's the icing [2132] on the cake. What I really am as a [2133] problem solver, and that's what people [2134] like me for. All right. Then finally, [2135] Muhammad Cassim says, "Nick, question. [2137] And if I can handle, let's say, five [2138] clients at a time, and I currently have [2140] five active clients right now, should I [2141] stop my outreach until there are four, [2143] or should I keep going at the extra [2144] people into a wait list? What Muhammad's [2146] basically referring to is, "Hey man, [2147] when do I stop outreach? I'm doing a lot [2149] of outreach. I'm sending cold emails [2150] every day. I'm sending Upwork [2152] applications. I'm sending custom videos. [2153] I'm just like hustling. I'm I'm busting [2155] my ass in order to get these clients, [2157] but obviously after a certain point, I'm [2158] going to get clients. So, when do I [2160] stop?" I have a very interesting point [2162] that I'm going to make for you guys and [2164] that's that lead genen solves [2167] everything. Okay, so my earnest [2170] recommendation never [2172] stop. What do I mean by solve [2174] everything? Well, obviously the [2175] lowhanging fruit is if you have no [2177] leads, lead genen solves that, right? [2181] What if you have too many leads? This is [2183] a controversial opinion, but if you have [2184] too many leads, if you just do more lead [2186] genen, it'll solve your problem if [2187] having too many leads. If you are [2189] overwhelmed with projects, your project [2192] management isn't keeping up. Believe it [2193] or not, lead genen is the issue. Uh lead [2195] genen is the solution to that issue. [2197] Leads legitimately solve everything in [2199] your business. Let me run you through my [2200] logic. Okay, obviously if you have no [2202] leads, Legion solves that, right? But [2205] how about let's say if you're feeling [2206] really overwhelmed like a Muhammad is [2207] here, he's saying, you know, I have five [2208] active clients. I'm starting to get [2209] really busy. I don't really know what to [2211] do. Well, the reason why you have five [2213] active clients right now is because you [2215] had to take them on. you had to accept [2218] because when you don't have a lot of [2220] clients and you don't have a lot of [2221] leads, you are in by default a position [2222] of scarcity. I'm sure you guys have [2224] heard this term before. What that means [2226] is let's say you have five leads. One of [2228] them is willing to spend $10. Another is [2230] willing to spend $50. Another is willing [2232] to spend $20. And then this last one [2235] here is willing to spend, I don't know, [2236] $40. Let's say your capacity is three. [2239] So you can only select three clients at [2241] a time. If your capacity was three, [2243] which client would you pick? Which ones? [2245] Well, obviously you pick the $40, the [2247] $50, and the 21, assuming that the work [2249] that they're asking for is is similar or [2250] the same, right? So, Muhammad's in that [2254] position except he has five clients. And [2257] the thing is, he only has I I I [2261] presume, you know, this many options, [2263] right? So, if he has this many options, [2265] what's he going to do with the new ones? [2266] He's going to take the $15 one, then [2267] he's going to take the $25 one. He's [2268] going to leave this 101, right? He's [2271] saying, "I'm really bottlenecked. I'm [2272] capped. You know, I I can't go any [2274] further than Well, let me present a a [2276] different hypothetical. What if [2277] Muhammad's cap was five clients? Okay, [2280] then what if he had the exact same [2282] number? Let me just copy and paste this [2284] down [2285] here. But then he also had some clients [2289] paying him $100, some clients paying him [2290] $150, some clients paying him $2,000 or [2293] willing to pay $2,000, then one client [2295] willing to pay $3,000. [2297] Okay, this stuff all adds up to, I don't [2300] know, like 150 bucks or something in [2302] total. But if he just reached out to [2305] more leads and if he got more leads in [2307] his pool, he would eventually be able to [2309] select the ones that pay a [2310] disproportionate amount of money. Which [2312] means if he wanted to make 10 or 15 [2314] times the 150 bucks, he could actually [2316] do so instead of working with five [2317] clients, just working with one client. [2318] You guys kind of see what I'm saying [2319] here? I'm saying that the reason why [2321] you're in a position where you feel [2323] overwhelmed is because you have to by [2325] nature accept every opportunity that [2327] you're given, even if every opportunity [2329] does not pay you a lot of money. But if [2331] you're in a position of privilege where [2333] you have access to 50 leads, you can [2336] actually pick and choose the best ones. [2337] You could pick and choose the ones that [2339] pay you the most money for the least [2340] work. So sure, you may be overwhelmed [2342] right now, but the second you wrap these [2344] projects up and start some new ones, [2346] you'll find that the work just gets [2347] incrementally easier over time. And the [2350] hard reality is that I don't think a lot [2352] of people at the start line understand [2353] is that there are a lot of golden [2355] goosees out there if you know where to [2356] look. There are a lot of people out [2358] there that are willing to spend $10,000 [2360] for a service that you might have been [2362] fulfilling for somebody else for $500. [2364] There's a 20x multiple there between the [2366] two. You work 20 times less for the same [2368] amount of money if you get the $10,000 [2370] client versus the $500 client. A lot of [2372] that depends on your ability to sell, [2374] which is sort of like confirmation bias. [2376] It's a self-fulfilling prophecy. But if [2379] you're in position of scarcity, you're [2380] going to be left holding the short [2381] straw. Awesome. Hopefully you guys [2383] appreciated that video. I had a ton of [2384] fun putting it together. If you guys [2386] like these sorts of question and answer [2388] videos, just let me know down below. I [2390] have full belief that this will not [2392] perform as well as other videos, but I [2393] think the actual value of the knowledge [2395] that you're receiving is probably on [2396] par, if not higher with others. So, if [2398] there's enough demand for it, I'm happy [2400] to pump a couple more out. If you guys [2402] like seeing my questions and answers, [2404] feel free to jump into Maker School and [2405] get 10x more of it. This is basically [2407] all I do all day inside of the [2409] community. I custom respond to text [2411] posts. I record Loom videos, roasting [2413] your assets, and I do a lot more. or [2414] I've shown up every day for something [2416] like 200 days in a row now. I think [2417] that's one of the reasons why we're at [2418] the top of the school games [2419] leaderboards. If you guys already have a [2421] business, you guys want to take it the [2422] next level with some of the more scaling [2424] tips that I've talked about here, check [2425] out Make Money with Make. We just [2427] crossed 435 members with a new cap at [2429] 500 and we are significantly increasing [2431] the prices every 20 members that we get [2433] in. Thank you very much. Like, [2435] subscribe, do all the fun YouTube stuff, [2436] and you guys are still with me at the [2437] end. You're real ones. Looking forward [2439] to seeing you

Video: https://www.youtube.com/watch?v=yYVfcfa7n5A
Title: I Built An AI Asset-Based Lead Gen System (Free Template)
[0] Today I'm going to be building an [1] assetbased AI lead generation system. [3] Essentially, we're going to be scraping [5] customer data and then generating a [7] custom lead magnet or asset for them [9] using artificial intelligence and some [11] pretty smart prompting before finally [12] adding them to an email campaign and [14] running this on autopilot. The same [16] approach is being used by myself and [17] many other people in the AI and [19] automation industry to generate reply [21] rates of over 5, 10, or even 15%. I'm [23] going to run you through everything you [24] need to know in this video. This is what [26] the system looks like. We're starting by [28] scraping an audience on Appify using the [31] Appify run an actor node. What this is [33] doing is this is going out on Appify and [36] then scraping a web service called [37] Apollo, which gives us a big list of [40] essentially email addresses, first [42] names, last names, websites, and [44] everything that we need to run a [45] successful campaign. From there, we're [47] getting all that data using the get data [48] set items node. We're then scraping the [51] customer or prospect I should say [53] website using an HTTP request which [55] delivers us a bunch of HTML. We are then [57] parsing that to text. The reason why we [59] parse it to text is it just allows us to [61] feed data into our first open AI node. [64] This open AI node is responsible for [66] essentially returning a bunch of [68] personalized context about both the [70] website, who the person is through the [72] various fields Apollo returns, and then [74] it gives us some unique angles that we [75] could use to write a custom asset for [77] them. Now, the custom asset I'm doing in [79] this video is a newsletter. So, we [80] actually go through and we generate a [82] highquality piece of content, [84] essentially a newsletter using a format [87] that I've used before for my own [88] newsletter that had the founder of [90] HubSpot follow me a few years ago. And [92] then we're taking that newsletter, [93] converting it into HTML. Once it's HTML, [96] we then use it to create a Google doc. [98] This Google doc is a high-quality asset [100] that includes some customized messaging [102] up here saying, "Hey, we just put this [104] together for you. I really want to work [105] with you. So, here's a bunch of value up [107] front. Then, we have the actual [108] newsletter down below. Now, this [110] newsletter um doesn't look beautifully [112] formatted, but if I were to add a little [114] bit of space before and after and then [116] change up the maybe the font or [118] something like that, I'm sure you guys [119] could see how this could be a very high [120] quality and and uh beautiful piece of [123] content to receive completely out of the [124] blue. And then finally, what we do is we [126] do an HTTP call to instantly, which is a [128] cold email service, which will allows us [130] to add them to a sequence that allows us [133] to send this stuff out on mass. Now, we [136] can realistically go through a,000 leads [138] a day, creating a,000 custom assets, um, [141] significantly improving the probability [142] that somebody gets back to us. And then [144] at the end of it all, what we get is we [146] get something that looks like this. For [149] person, I wrote you a newsletter. Hey, [151] person, I'm a big fan of your work. was [152] on your company name's website earlier. [155] I know that giving value up front is how [156] you form connections. So, I thought I'd [157] start with that. If you have any [158] interest, you could find it here. This [160] is how high quality people are doing [162] cold outreach today. Because the bar has [164] gone up so much, you got to deliver [165] value. You got to do it up front. And [167] usually, you got to do it without some [168] sort of super crazy hard ask. Although, [170] you can experiment with asks and [171] whatnot. I have over 2,400 people [173] collectively across my two communities [175] that are experimenting with approaches [176] like this. So, I literally get to see [177] them firsthand. this video is for you [179] and for them to take as a nugget to [181] build out your own high-quality [183] assetbased generation system. And I'm [185] going to dive into building it right [186] now. Okay. So, why assetbased AI lead [189] genen systems? Well, the first is the [191] bar for cold email is going way the hell [193] up right now. So, a lot of people are [194] getting into cold email understandably [195] cuz I and a bunch of other people are [197] talking about it. And because of this, [199] you basically need to offer more and [200] more and more value if you want your [202] emails to make it through the noise. The [204] other big thing that makes this possible [205] now is AI is just now getting to the [207] point where it's good enough to produce [209] actually valuable assets. Okay, up until [211] quite recently, this was not the case. [213] If you had AI try and generate a Google [215] doc or something like that and it was [216] longer than maybe a paragraph or so, the [218] quality of this thing was usually very [219] poor unless you were prompt engineering [221] pro. So now we're getting to the point [223] where AI is actually good enough and [224] capable enough to generate assets. I'm [226] going to show you what that looks like. [227] And ultimately what we're going after is [229] we're going after those higher reply [230] rates. So um yeah, that's that's the [232] whole idea here. How exactly are we [234] going to do this? Well, if you think [235] about it logically, and I haven't built [236] the system yet, I'm going to be doing [237] all this stuff live in front of you [239] because I want to show you guys what a [240] real build process looks like from start [242] to finish. What you're going to do is [243] we're going to start by sourcing some [245] lead data. Then, we're going to scrape [247] the website and the socials of the [249] person that you know leads whose lead [251] data we're scraping. Then, we're going [252] to use that to create a custom asset [254] using AI. And we could do any sort of [256] custom asset. YouTube titles, we could [257] write a whole newsletter for them. We [258] could write an app for them. I might do [260] the newsletter thing um just because I [261] think that's a little longer than [262] YouTube titles and then it's also less [264] work than an app. So good length for [266] this video. Then finally, we're going to [267] add it to a cold email campaign. In my [269] case, it's going to be instantly. And [270] I'll actually go and I'm going to write [271] this for you as well. Then we're going [273] to launch this and then we're going to [274] check back in on this in I don't know 2 [276] weeks or so and I'm going to make [276] another video about it. So I'm pretty [278] excited for this. Obviously more content [280] for me. Um and I think this is also [281] going to be a really cool system to walk [283] you guys through. So let me actually go [285] ahead and set something like this up. [286] Very first thing I'm going to do is I'm [287] going to open up a new.com scenario. And [289] I'm going to call this [290] assetbased cold outreach system. And [293] we're going to be able to do most of [294] what we need to do just in this one [295] scenario. Okay. So, as I said, the very [298] first thing we need to do is we need to [299] source the lead data. Currently, the [301] best way to source a large volume of [302] lead data is using a platform called [305] Apollo and then scraping Apollo with [309] Ampify. So, I'm going to run you through [310] what all of that looks like right now. [312] Okay. So, first and foremost, I'm going [314] to go to Apollo.io. [317] I'm going to log in. I'm now in the [320] account. Looks like we got dark mode [321] enabled, which is awesome. And then [323] going to go over to people. Cool thing [325] about people is we can actually [327] construct our own lead list using [329] various filters for Apollo. So, you can [330] see I've actually already created a list [332] for creative agencies. That's uh more or [334] less my my target audience. It's who I [335] usually go after, hence why I created [337] this. Let me zoom out a bit, make this a [338] little bit more visible. On the left [340] hand side here, we have a bunch of job [341] titles. Founder, partner, co-founder. [343] Um, then underneath we have location, [345] person locations, United States. Then [347] underneath here we have employees, one [348] to 100. I'm actually just going to [349] remove this filter and see if we get [351] more records. Looks like we got [352] marginally more records. Not too many. [355] And then u maybe why don't I just uh [356] open up uh locations so that we get [358] location people from everywhere. [359] Basically here we see 2,149. Okay, cool. [362] So basically this is the most general [364] audience ever and I'm doing this as [365] proof of concept, but I'm just going to [366] scrape this audience and then I'm going [368] to pump them into an email campaign and [369] then generate custom assets using some [371] scraping. Okay. All right. So, once you [374] have the Apollo search that you want, [375] what you do is you copy this URL and you [377] pump it into this platform, Appify. And [379] what we're using specifically is we're [381] using an Apollo app scraper called [386] code_crafter/apollo-io-scraper. It [387] allows you to scrape up to 50,000 leads [389] per search URL. What I'm going to do [391] here is I'm going to click try for free. [394] Then over here, I'm actually just going [395] to pump in this search URL. [397] In terms of total number of records [399] required, I'm just going to type 500 [400] here because I want this to run as a [402] test first. I want to make sure that [403] this is all good to go. And now this is [405] going to go through the process of [407] scraping these leads for me. Okay. And [408] we just wrapped up. As you see, we got [410] 500 results in that data set. Now, I am [412] doing this manually just because I want [414] us to see what the data looks like [416] manually before I go into the rigomeroll [418] of putting all the work in and building [420] out automated systems. I'm just going to [421] export this really [423] quickly. Um, we could omit a bunch of [425] these fields. I think I'm just going to [426] leave them all. Let's download it. I'm [428] going to sheets new. Just a quick and [430] easy way to open up a Google sheet and [432] then import the [434] um lead list that I just got using this [436] little feature here. File, import, [438] upload. And then I just append to the [439] current sheet. That way I don't have to [440] make a new one. Once this is all done, [443] we can actually see all the data in [445] front of us. So, as you see, we got a [446] ton of data. We got the city name, we [448] got the country name, we got the email [449] address of a fair number of these. We [451] got the catch all verification status. [453] Some of these will be verified right off [455] the bat, which is nice. Then we have a [456] bunch of employment um related stuff, [458] right? So we have employment history 1, [460] employment history 2, and so on and so [462] forth. Now, API is kind of annoying [464] about this unfortunately, but we can go [465] all the way back all the way back all [467] the way back to the right. Um you'll see [469] that the vast majority of these people [470] are co-founders and founders. So what [472] that means for us is okay, there's um [475] there's like a website uh for the [477] organization, right? Well, odds are if [479] they're founders and we have a website [481] URL tab here, they're the people that [483] created the website. So, we can actually [485] do is we can go on the website, then we [488] can go on, I don't know, their social [489] media profiles, their LinkedIn profiles. [491] We can scrape a ton of stuff from their [493] website, scrape a ton of stuff from [494] their profiles, and actually just like [495] add that all to like some big, I don't [497] know, context variable, and then feed [500] that context variable to AI and say, [501] "Hey, based off of this context [503] variable, and then based off of um this [506] structure, I want you to write a high [507] quality newsletter, a high quality [508] email, or a high quality asset." That's [510] basically what we're going to do. Okay? [512] Okay. Okay, so let's actually take this [513] now and use this information to create [514] an asset. Now, um I did test to make [517] sure that this worked using the Ampify [518] scraper. What I'm going to do now is [519] just jump right into make.com and verify [521] that we can build out a scraping system [523] using that. So, very first thing I'm [524] going to do is go to Ampify. What I want [526] is I want the run an actor. Okay, this [529] won't run the actor that we just [531] triggered manually, but it'll do so [532] using an automated uh mechanism. I'm [534] just selecting the right email here. The [536] actor I'm going to look for is going to [538] be the Apollo Scraper. Scrape up to 50K [541] leads. I'm going to click run [542] synchronously here. This just means it's [544] going to execute directly in this [545] scenario. There's some nuance there, but [547] um if you're testing something that's [548] pretty quick, you can generally get away [550] with it. Then what we want to do is [551] under input, go to JSON and just copy [554] everything that we have here. Okay. And [556] make sure that you're um using the right [558] one. Actually, I think I might have [559] reset that. So, one sec. Let me go back [560] to input. Okay. So, copy the input from [562] the specific actor run. Go back to here [565] and then just paste it in. For now, I'm [567] just going to hardcode that same URL [569] that I provided earlier. Um, but as I'm [570] sure you can imagine, you could make [571] this dynamic if you wanted to, just by [573] having a Google sheet as input or [574] something. Everything else here is going [576] to be normal, the same. And then the way [578] that the appy module works in make is [580] you need to get the data set items after [582] you're done running it. So running it is [584] one thing. Getting the data is another [585] thing. That's what we're going to do [586] next. Head over to Appify and click get [588] data set items. Perfect. And what we do [591] is we feed in the default data set ID [593] as let's see this one right over here. [596] Okay. So that's default data set ID. [598] Now, the issue with this is if we wanted [600] to test this right now, I would actually [602] have to rerun the whole thing. So, if I [604] were to, you know, click run once, it [605] would actually go through and spend the [606] next couple of minutes running it just [608] like I did a moment ago manually. I [609] don't really want to do that. I actually [610] already know what the default data set [612] ID is because it's actually I'm hidden [613] over here. I can actually just copy [615] this. I can go here, unlink this, move [618] this over here, and then I can actually [619] paste this in and hardcode it. The value [621] in hard coding it is now if I click and [624] then click run this module only, you'll [625] see we actually have access to all that [627] data that we had before. I just don't [628] have to like wait five minutes to run it [629] every time. So this is what I call um uh [632] it's like iterative testing. Okay, [634] module by module testing and you can [636] hardcode modules as long as you're using [638] um one module as the data source for the [640] entire flow, which I'm going to be using [642] this one as the data source for the [643] entire flow. This is okay. And then it [644] allows you to like cut the testing loop [646] down quite a lot. Okay, so once we have [649] this stuff, what do we need to do? Uh [650] well, if you think about it, what we [651] want to do is we want to look to see if [652] they have a website because we're going [653] to use the website for scraping. So, I'm [655] going to go and put in [657] [Music] [659] a I think I'm just going to do an HTTP [661] request module from now on. Uh, I'll do [663] make a request and the URL is going to [665] be the website. Okay, so I'm just going [667] to feed in the website URL right here. [669] The method is going to be get body type [671] is going to be raw. Content type is [673] going to be JSON application JSON. We're [674] going to parse that response. And if you [676] think about it, we need to add a filter [677] in between the get data sets and make a [679] request module cuz not all of these are [681] going to have a website. So, I'm [682] actually going to check to see, hey, [684] does this website exist? If it does, [687] then proceed. But I'm also going to [690] check to see if they have an email [691] because if they don't have an email, [692] well, then I can't really do anything [693] either, right? So, basically, we want to [695] check, hey, does the website exist and [697] does the email exist? If so, we can [700] proceed. All right. Now, I'm actually [701] going to run this as a real test, and [703] I'm just going to see what I get. So, [704] let's do limit three. I'm going to send [706] three HTTP requests that the first three [708] results that are being returned here. [710] Okay. Anytime a module returns multiple [712] bundles like this one, um, all [713] subsequent modules will just run one at [715] a time. So that's what's going to happen [716] here. Click run [718] once. Looks like all three of those had [720] websites and emails. And then we perform [722] three HTTP requests to scrape the site. [725] We got one [727] here. Looks like we got another [731] here. And then it looks like we got one [733] final one down over here. Okay. But do [736] you notice how all of this is like HTML? [738] It's very dense. It's very difficult. [740] and annoying for us to get through. It's [741] not like uh what I showed you guys a [743] second ago and actually went on that [744] person's website. Well, a very quick and [746] easy way we can transform this into text [747] is using the HTML to text module from [750] the text parser. Okay, what we do is we [752] feed in the HTML from the previous [754] module. And then by doing so, we're [756] actually just going to output a bunch of [757] plain text. The value here is when it's [759] a bunch of plain text, it's really easy [760] for us to pump this into AI, right? So, [763] let's do it. I'm going to run these [764] three tests one more time. Going to [766] ignore any warnings. Let this go. And [769] now what I'm going to do is I'm going to [770] see how many of these actually got the [772] right [773] text. Okay, check this out. You can see [775] we actually got a bunch of information [777] about that MIA website, right? All of [778] the data here is basically accessible to [780] us as plain text. Wonderful. If we go [783] down here to the second one, see, same [785] thing with website number two. [787] Beautiful. And then how about number [789] three? Go down here. We get access to [792] most or all of the text here as well, [794] which is nice. So, what do I want to do [797] next? Well, this is where um AI comes [799] into play. We've now demonstrated that [801] we can get a bunch of data about the [802] person using the appy module. Now, we've [804] also demonstrated we can get a bunch of [805] data about the websites using the HTTP [807] request module. Well, now what we want [809] to do is we want to feed all that into [810] AI and have AI do something really cool [812] for us. So, I've actually gone ahead and [814] I've created a couple of prompts that I [815] was considering using at some point for [816] a system like this. And I'm just going [818] to copy those prompts over and show you [819] guys what I mean. But let me run you [820] through logically on how all of this is [822] going to work. Okay, first things first [824] is we are going to have to have one open [826] AI module to extract all the [829] information. And then we're going to [830] have another open AI module generate a [832] newsletter with this information. Then [834] we're going to have that newsletter um [836] be added to a Google doc. And then after [838] that Google doc is generated, we're [839] actually going to append it to an email [840] somehow. Okay. So, first things first is [843] I'm going to go over here and uh what's [844] the model I want to use? We have a lot [845] of models available to us, right? 03, 03 [848] mini. Very cool. Um the one I want is [850] 4.1, I think. [853] Yeah, GPT4.1 just because that's the [854] smartest one as of the time of this [857] recording. Then what I'm going to do is [859] I'm going to add a message. I'll go down [861] to system. I'll say you are a helpful, [863] intelligent newsletter. Let me just move [865] this over so you guys could see. [867] Newsletter writing assistant. Okay, [869] that's what we're going to that's what [870] we're going with right now. [872] Then under message number two, I'll say, [874] "Your task is to take as [877] input information about a website and a [880] person and then return a fully a [886] customized [888] polished [891] newsletter that I will use [894] as a lead magnet to sell them on stuff. [899] You'll receive your data in JSON using [902] the following format. And uh we're just [905] going to have three fields. Okay. Oh, [908] sorry. Actually, I'm kind of jumping [909] ahead here cuz I'm not generating the [910] newsletter. I'm not extracting the data. [912] Okay. Anyway, whatever. I'm just going [913] to do this and then I'll make one [914] before. Um what we're going to do is [916] we're going to generate three fields. [919] Okay. Um the first field is going to be [924] website context. The second field, okay, [928] is going to be person context. And then [930] the third field is going to be unique [933] angles. [936] Okay, your task, your newsletter [942] example to write your [944] newsletter, you'll be using the [947] following [949] example. What I'm going to do now is I [952] wrote a ton of newsletters way back in [953] the day. So, I'm actually just going to [954] go to one of my newsletters and copy the [955] formatting over and paste it in. And [957] because the context window is so huge [959] and because GBT41 is so smart, it's [961] going to essentially mirror my tone of [962] voice. It's going to mirror my language. [964] It's going to mirror everything that I [965] need. And then it's going to almost like [968] um replacing variables in an email. It's [970] going to go in and intelligently replace [972] the content so that it matches the the [973] customer information. Okay. [978] What I'm going to do is [980] um this is mine right right over here. [983] Okay. Our knowledge economy is swiftly [984] coming to an end. This is one of the [985] many newsletters I used to write. Funny [987] story, the founder of HubSpot followed [989] this newsletter several years ago uh [991] when I started writing about artificial [992] intelligence the way I thought all the [993] stuff was going to go. And I called it [994] the cusp. It's pretty neat. So, I'm [996] going to copy this now, this entire [998] thing, [1000] okay, all the way down to the bottom. [1002] I'm just going to paste this in. Okay. [1005] So, now check it out. I have this whole [1007] newsletter all ready to go, right? [1009] Pretty neat. This is the title. What I'm [1012] going to do is I'm going to do some [1013] minor formatting changes because I don't [1015] really like this. [1017] Okay, I'm just going to do some minor [1019] changes here. Okay, now that that's good [1021] to go, what I'm going to do is I'm going [1023] to tell it return the entire newsletter [1026] in markdown ATX format using this JSON. [1031] And I'm just going to have it say title [1033] of the newsletter. This is going to be [1034] beneficial because it's going to allow [1035] us to name our our Google doc in a [1037] moment. Then I'll say [1039] subheading and then um I'm also going to [1042] say use letter body. Okay. Then under [1046] here, what I'm going to do is I'm [1047] actually going to give it an example of [1049] the data I want it to use. So let's go [1051] over here. Website context person [1052] contacts unique angles. And we're [1054] actually going to source this from the [1055] previous one. Okay, previous module [1057] which I'll open up in a second. [1060] Under show advanced settings, I'll go to [1061] response format JSON object. Parse the [1064] JSON response. Awesome. Looks very cool. [1067] So, we're going to call this one here [1069] generate [1070] newsletter. This is going to be a high [1072] quality newsletter as you guys will see. [1074] Then we're going to have an intermediary [1077] step here that I'm going to call extract [1080] interesting or extract data from [1083] profiles. Okay. What this intermediary [1085] step is going to do is it's going to be [1087] responsible for generating all of that [1088] stuff that the AI model in the [1090] subsequent module is going to use to to [1092] create the newsletter. So, we're going [1093] to say you're a helpful intelligent data [1096] extraction assistant. Your tasks take as [1099] input a bunch of [1100] unstructured information about a [1102] person's [1104] website and their LinkedIn profiles and [1108] then convert this into the following [1110] JSON object. [1116] Cool. Then what I'm going to say [1120] is you'll receive all of the data you [1124] need in an unstructured string. Your [1127] task is to parse that out and turn that [1130] into the above object. Rules. I'll say [1134] one [1135] um go deep into detail for website [1138] context. [1141] Write at least I don't know two [1143] paragraphs. Two for person context use [1147] all of the data [1149] available for and three for unique [1153] angles. Use the website data and the [1157] information about the provided person to [1160] create [1162] three interesting [1164] points that we could write about in a [1166] later [1168] article. Okay. And then four, um, return [1172] any new lines as back [1174] slashn. Okay, should be good. Now, what [1177] I'm going to do is I'm just going to [1178] dump in all the data. Okay, so I'll say [1180] website scrape. [1182] Boink. Then I'll say personal [1185] information. Then I'm just going to go [1187] through top to bottom. Just list all the [1189] stuff. Boing, boing, boing. We are just [1192] literally boing boing. That's funny. [1195] God, that was a Twitter meme that is [1196] totally canceling me, isn't it? Um, [1199] organization [1201] ID. Can I go parse? Can we do that? Is [1203] that a [1205] thing? Parse. No. Can we go JSON? No, [1209] can't do that. Go organization ID. That [1211] actually doesn't matter now that I'm [1212] thinking about the IDs don't matter. So, [1213] we can remove those. For their [1215] employment history, [1216] um, we'll go state, United States. Then, [1221] this is most likely to be their current [1225] company. Okay. Um, we'll go [1229] seniority. Then over here we'll go [1231] marketing and [1233] advertising. And then employees will go [1236] to. Okay. Notice I'm just dumping all [1237] this as unstructured information. It [1238] doesn't really matter. AI is smart [1239] enough now that it can deal with this. [1241] Okay. All right. Now, what I'm going to [1243] do is I'm going to have it generate a [1244] JSON object containing all the [1245] information that I want. How cool is [1246] that? Okay. And then I'm going to have [1248] it generate a newsletter. And you guys [1249] are going to see what this newsletter [1250] looks like. So, let me see. What was the [1252] most interesting tidbit here? I don't [1254] really think the first one was super [1255] interesting. So, [1257] I don't know why don't we do one just [1259] have this generate a poll newsletter in [1261] markdown format then here after this we [1264] will go markdown to HTML okay feed in [1267] the um I guess I got to wait actually [1269] let's just generate it let's just test [1271] it first let's not get ahead of [1272] ourselves let's now run this is now [1274] going to go and extract the data from [1276] all of the profiles this massive dump [1278] that I just provided it right huge dump [1280] okay it's now extracted that data let's [1282] take a look at it go to [1284] result the website context tons [1286] information about the website. How cool [1288] is [1289] that? Then person context and the unique [1292] angles. Very neat. Then over here we [1295] have the whole newsletter that is going [1297] to be generated using GPT4.1. Awesome. [1299] Now that we have that, we can actually [1300] go ahead and dump this into a Google [1301] doc. So let's go markdown to HTML. First [1303] of all, let's feed in um the newsletter [1306] body, which I think should be written in [1308] markdown. I just need to double check. [1310] One [1312] sec. Um yeah, looks like it's written in [1315] Markdown. Very cool. Very cool. Uh, so [1317] we'll feed in all of the the stuff here [1319] and then this should be good. And then [1322] after this, we'll go Google [1324] Doc. Okay, I'm going to create a [1327] document. I'll go niclook.a. The name is [1331] going to be four and I'm going to put [1333] the person's name in here. This is [1334] actually really important. [1338] The reason why is because this um little [1340] snippet appears in the email under the [1343] asset section on Google or on Gmail and [1345] on Outlook. So you actually see the [1347] asset that they are linking and most [1349] people use Gmail nowadays. So Gmail [1350] actually like add a little icon for it. [1352] Okay. So now it's for whatever custom [1354] newsletter. Here's the content that [1355] we're going to be sticking in. Let's [1356] feed all that in for now. New document [1359] location. I'm just going to feed in a [1360] backslash. We're just going to dump it. [1361] All [1362] right. All right. Very cool. Very cool. [1365] Once we have the Google doc, excuse me, [1368] let me think. Is there anything else [1369] that we need to do? [1372] H I guess that's about it. We could just [1375] send the email. Yeah. So, let's just run [1378] it and gun it. See how it [1381] works. Now, as I'm sure you can imagine, [1383] we could add additional routes here. For [1385] instance, you know, if there is no [1386] website, well, maybe we do something [1388] else. Maybe we perform a Perplexity or a [1390] Google web search or an OpenAI web [1392] search looking for a person's website, [1393] right? We could do some additional [1395] enriching steps here so that we don't [1396] just say no to all that data that's [1398] coming in. Anyway, I'm curious what this [1400] is going to look like and whe there'll [1401] be any bugs. Okay, let's take a look and [1404] see what is it that we get. Web view [1406] link. Paste this [1408] in. Okay, here is our super customized [1411] email. Um, a super customized Google [1414] doc, which looks pretty good. Welcome to [1416] the outbound edge, where the art and [1417] science of outdoor marketing meets the [1418] spirit of real adventure. This week, we [1420] dive behind the scenes at Mia Creative. [1421] A team proven that for modern outdoor [1422] brands, a true connection is built far [1424] beyond the boardroom. In this issue, [1426] community-driven marketing that action [1427] moves a needle, leading a national [1428] monument, one close to a client at a [1429] time. Designing experience and [1430] packaging, the reverberate bond, the [1432] trail head. Let's set out. This looks [1433] pretty good, but I think it'll look way [1434] better if we um made a couple of [1436] formatting changes. Like, imagine [1437] getting the Google doc before versus [1439] this Google doc, right? This just looks [1440] so much sexier. Imagine changing the [1441] font. Maybe we could make some color [1443] changes or something like that. I always [1445] like bricklage. That looks really nice [1446] to me. So, I think we'd probably improve [1448] the perceived value of this. Um, but [1449] anyway, for Zach, custom newsletter. [1450] Let's see if the name is good. Yes, we [1453] also have all the data over here. Very [1455] neat. Very neat. Underneath, we could [1457] actually do something like this. We [1459] could [1461] say just put this together for [1464] you. Want to see if there might [1469] be want to see if there might uh Yeah, [1471] just put this together for you is [1472] probably sufficient. Let me know your [1475] thoughts. [1476] and if I can help in some way. I know [1480] giving value upfront is how you get [1482] ahead in this industry. So hopefully [1485] this helps. I'm a big fan of the emojis. [1489] So I'm just going to drop one of those [1490] in here. Change the fonts. Cool. That [1492] looks good to me. Yeah, two lines just [1494] feels better. Then I'm going to add um [1496] space here. And then voila. Now we have [1498] our newsletter. So let me just add this [1500] in as plain text up at the top. I think [1501] that'll just make my um Google doc seem [1503] better. [1504] So, right before this, I'll go P. I'll [1506] paste this [1507] in. I'll go back here and I'll go back [1510] slashp. I feel like I could probably go [1513] NBSP. I forget how you do the uh maybe [1516] BR. I think you do a BR tag. That's [1519] probably how you add a a space or [1520] something. Anyway, we'll see how that [1521] goes. But now that we have this, we can [1523] actually, you know, pump it into a cold [1524] email sequence. So, first things first, [1526] why don't we actually just test this out [1527] with Gmail? I'll go to my Gmail just so [1528] we can see how it looks and I'll click [1529] send an email. Then once we verify that [1531] this works, we'll go over to [1534] um you know like a like instantly and [1536] then give it a try there. So I'm going [1538] to send this to nichlgmail.com. Just one [1540] of my emails. Why don't I go for [1545] uh for [1546] Zach I made I wrote you a newsletter. [1551] Okay. Not saying that's the best and the [1553] brightest. Uh and [1555] then I'll say hey Zach. Let's do this. [1558] Hey Zack. [1561] [Music] [1564] love what you do or big fan of your [1571] work was on and then I'm going to say [1573] the company name's [1575] website. Well, I'm just going to hardode [1577] this for now. Big fan of your work was [1579] on Mia's site earlier and thought I'd [1583] write you an end toend custom [1586] newsletter. [1591] and then I'm just going to say around [1592] 400 [1597] words with a twist, let's [1601] say. I know giving value upfront is how [1605] you form connections. So, I [1608] thought let's start with that. If you [1610] have any [1612] interest, you can find it here. I'm [1614] going to link the Google doc. So, let's [1616] now go to the Google doc. We'll go web [1618] view [1619] link. Let me know if you want more. Got [1623] a couple of [1626] other. Let me just zoom out a bit cuz [1628] we're running into the bottom here. Let [1631] me know if you want [1633] more. Maybe I'll just say if you want [1636] more, just say the word. Got a few other [1640] interesting pieces of content for [1643] you. Thanks, Nick. Cool. [1646] should be pretty good. Uh, I'm hard [1648] coding some of these things because I [1649] don't want to have to go through the [1649] rigomeroll of doing them. The cool thing [1651] about Google is if you add a web view [1653] link, this should just automatically add [1654] a link to the thing like an asset. So, [1656] we don't actually have to add the [1657] attachment. Um, if not, you could also [1658] just add a PDF with the with the email. [1661] So, now that I have this, why don't I [1662] just test this? [1664] Um, let me actually just run this once [1666] cuz [1667] I I just want to check to see if there's [1670] going to be an issue with my connection. [1671] Doesn't look like there is. So, let's [1673] actually run this. Now, we're going to [1675] run like basically a piece for Zach and [1677] we're going to send it to my own email [1678] so I can see what it actually looks [1679] like. How cool is that? Okay, we just [1681] sent it. So, why don't I go over to my [1683] own email address now and see? Uh, just [1685] piece it just did two because I ran it [1687] twice, right? So, for Zach, a rich [1688] newsletter. Uh, okay. This looks pretty [1690] good. The issue is it's all um just on [1692] one line. So, we just have to fix this. [1693] I think the reason why it's on one line [1694] is I probably picked HTML as the sending [1696] type, [1697] right? Yes, I did. Oh, sorry. I used the [1699] wrong Jesus, I used the wrong module [1701] here. I actually much prefer the send in [1703] email module because it has plain text [1705] built in. So let's just take all this [1707] now, copy it, and then paste this over [1709] here. Okay, very good. Very good. Going [1712] to send this from my July 19th one. [1717] Cool. Let's do that one more time. Okay, [1721] so we got what looks like a pretty cool [1723] email here. Um, as you see, it has the [1725] attachment built in, which is nice. Uh, [1727] as I mentioned, the formatting I think [1728] could be a little bit better if we like [1730] space this out more. That's that's the [1732] one downside to this approach. Uh you [1733] can very easily not very very easily but [1736] you can reasonably easily space this out [1738] with an API call to the um Google Docs [1740] API. You would basically have to go over [1742] here where it says Google Docs go down [1744] to um make an API call and then you [1747] would have to go through their API and [1750] determine the specific parameters that [1752] change the font for you and then that [1755] add spacing and stuff like that. Um [1757] which is doable. I just think that it's [1758] a little unnecessarily technical for [1760] this video. Uh, but feel free to to to [1762] give that a go. I think it'll [1763] significantly improve the perceived [1764] value of the asset. Now that we've [1766] verified that this works for email, [1767] there's really just one more thing we [1768] need to do, and that is logically add it [1770] to an instantly campaign. So, what I'm [1772] going to do is I'll call this assetbased [1774] outreach. Okay. Then I'm going to go [1778] under sequences, and I'm basically just [1779] going to rewrite what I wrote back [1780] there. Okay. So, let's just copy this [1785] in, paste this over here, and we're just [1788] going to add variables here. Okay. So, I [1790] don't have the the variables yet because [1791] I haven't uploaded a lead. But, for [1793] instance, we we'll probably put the [1794] company. We'll put the person's name [1796] here. Then over here, um, we'll put like [1799] the company name. Then we'll do [1801] newsletter here. Over here will be like [1803] the the link, [1806] right? And then that should be basically [1808] it. We're not even making an ask on [1810] here. We don't even have like a CTA. The [1811] CTA is just like, "Hey, do you like [1812] this? If so, let me know and I'll I'll [1814] make more for you." Subject line uh is [1816] probably just going to be for blank. I [1818] wrote you a newsletter. Seems pretty [1820] reasonable to me. And then, yeah, we'll [1821] just preview it really quickly. Make [1823] sure that there's no major hiccups here. [1825] Looks good to me. So, now what we need [1827] to do is we actually just need to um go [1828] to the instantly API and then queue up a [1830] send. And actually, sorry, one one more [1832] thing. I need to add a single lead to [1833] this campaign to make sure I can map the [1834] variables. After we're done with that, [1836] we're going to um just ceue up a call to [1838] the instantly API, then actually just [1839] add people to this campaign live. So, [1841] let's go over to leads first. Um you [1843] know, I had that Google sheet earlier, [1845] right? Let's just go back to that Google [1846] sheet. Okay. right over here. I'll just [1848] call this leads example. And um I mean, [1850] how many leads do I really want here? [1852] This is this is a ton of fields, right? [1854] So, realistically, I'm not going to want [1856] like 90% of these fields. Um, okay. So, [1860] now I've just created my own spreadsheet [1861] with three fields. We'll call this [1862] example leads. Uh, I don't really need a [1864] lot, so I'm just going to go [1867] here. Then, we're just going to go all [1869] the way down to the bottom. Remove [1872] everything except for these. Maybe [1874] remove this, too. Then over here, I'm [1877] going to download this as a CSV and I'm [1878] going to import this in instantly. Oh, [1880] sorry, one more thing. One more thing. [1882] Uh, we need a Google doc [1886] link. Let's just do the same one for all [1888] these. Okay, now we're going to download [1890] this CSV. I'm going to go and instantly [1893] import these leads. And I'm only doing [1894] this so that I have access to that uh [1896] that field picker. Okay, we're going to [1899] call that company name here is just [1901] going to be called link custom variable. [1903] We're not going to do any verification [1904] or anything like that. But we're just [1905] going to go for it. Now that we have [1907] this, we should be able to map the first [1908] name. Looks good. Should have company [1911] name, site earlier, and then we should [1913] be able to map the link, right? Very [1915] cool. Very cool. So now we have [1916] everything that we need. Awesome. [1918] Awesome. Um, this is just one. And I'll [1920] say four. Can we add a variable in here [1924] called first name? I wrote you a [1926] newsletter. I'll say just wrote you a [1928] newsletter. I think that looks nice. And [1931] then now we just need to hook this up [1932] via API. So how do we do the API call? [1934] Well, we just go to the instantly API [1936] and there's a couple of new kind of [1937] knickknacks here that we need to do. So, [1939] they just updated their V2 API. That [1941] means I'm going to have to get myself [1942] some scopes and show you guys how all [1944] that works. Basically, what we need to [1945] do is we need to go to [1947] campaign. I think we need to add sorry [1949] probably lead [1952] list. No, just lead. We just go to lead [1955] and then we go like add lead. That seems [1958] pretty straightforward. [1960] So we need [1962] um a campaign for the [1965] lead, email address, we need some [1968] variables like website, last name, and [1970] then whatever other things we need. Uh [1972] whatever other things we want basically. [1974] So it seems pretty straightforward. Um [1975] cool. I see the API request doc docs [1978] right over here. Uh done this before, [1980] but I don't have a template that I could [1981] easily whip it out. So I'm going to go [1983] to HTTP. We'll go make a request. And [1986] what do we need? First thing we need is [1987] we need the URL. paste that in there. [1990] Second thing is it says post, right? So [1991] I'll use [1993] post. Third thing is we need the [1995] authorization bearer token. So I'll go [1997] to headers and I'll go authorization. [1998] I'll go bearer and I need my API key. So [2002] I'm going to go over to I think here and [2005] then settings. Thank you for the API [2008] endpoints. We'll go integrations and I'm [2009] going to go API keys and I'm just going [2011] to create a new one and I'll call it [2012] YouTube. Scopes just going to be all. So [2015] I'm going to delete this right after I [2016] make it. copy this key and I'm going to [2018] go back here and then paste this in. [2021] Then I need content type application [2022] JSON. Well, that's easy to do. You just [2024] go body type raw and then content type [2026] application JSON. Then D is where the [2029] data is in. So this is kind of this [2030] section right over here. So this is [2033] where I'm going to add the data I want. [2035] Okay. So what sort of data do I need? [2037] Looks like we have a a field called [2039] campaign. Okay. So I'm going to go over [2042] here and I'll go campaign. [2044] Now, what is the campaign I want to add [2046] to? Well, it's actually the campaign [2048] that I just created a moment ago. Now, [2050] you get the idea of the campaign by [2051] going to the URL up here. Okay. Copy and [2054] go paste. That looks pretty good to me. [2057] All right. What else we got? Um, email. [2060] So, we need the email address of the [2062] lead. What is the email going to be? [2063] Well, should be pretty straightforward, [2065] right? The email address is just going [2066] to be the same email address that we had [2068] before. Right over [2070] here. Done. What else we got? [2074] Personalization. I don't have any [2075] website. Um I have a value called link. [2078] So when I go over here, link will be my [2081] Google webview link. [2082] Nice. We'll go back over here. Uh we [2085] need first underscore [2087] name. Well, we can find that just by [2091] clicking all the way down again and [2093] going first name. Right. Okay. So, email [2097] link, first name. What else did we have? [2098] Company name. I think it was just [2099] company name. I'm pretty sure it's [2101] company name spelled like that. Yes, it [2102] is. Wonderful. I love it when a plan [2105] comes together. We go down to company [2106] name and then [2107] [Music] [2108] go actually kind of forget. What was the [2111] company name here? Organization name. [2113] There we go. Cool. So, this should be [2115] good. I'm not entirely sure if it is to [2117] be honest. So, why don't we just try [2119] this out with like a a junk lead. I'm [2121] going to rightclick this. First of all, [2123] I'll say add to instantly lead list. [2126] Okay. Rightclick this. Let's just make [2128] our own nga left click. Nick leftclick. [2133] I'll go http google.com. Let's see if it [2136] works. Okay, looks like we have an [2138] issue. Why do we have an issue? Um, I [2140] don't know. Let's find out. It says that [2143] I'm seeing a problem with the post [2145] request. The JSON looks pretty good to [2147] me. No major issues from what I could [2148] see. It's saying we expected some sort [2151] of thing after property. So, looks good [2154] to me, but maybe I was I'm lying and [2156] there's a problem. Let's go to JSON [2157] formatter and just paste this [2159] in. Ah, I see. Looks like I added an [2162] additional I did. I added an additional [2165] um uh comma over or apostrophe here. [2168] Whatever quote sign. Let's do that [2170] again. We'll go Nick. Nick, we'll go [2173] left click. Thank you. And then we'll go [2175] hbgoogle.com. Click. Okay. Awesome. [2178] Looks good. We got the heads up that [2180] it's here. So now if I go to my [2183] campaign, I go to leads. Let's see. I've [2186] just added a new lead here. It's [2188] processing in the queue which is pretty [2189] nice. So that means that actually at [2192] this point we are now good to go. We [2193] have most of the data. It doesn't look [2194] like I added the link for some reason. I [2196] don't know why I might have left that [2197] empty by accident. But uh we basically [2199] now have we the thing added to the [2201] queue. So what this means is when I run [2203] this, okay, when I save and then I click [2206] resume campaign, this will actually go [2209] and send the emails to all the leads [2211] under this lead sequence. Okay, pretty [2214] neat stuff if I do say so myself. Oh, [2216] and the reason why this link isn't [2217] coming in is because we're not using the [2218] custom variable object. So, I should [2220] have used the custom variable object. [2221] Basically, what we need to do is we need [2222] to go custom variable. Um, and [2226] then we need an [2229] object that is like this. And I'll say [2234] link. And we just need to wrap that like [2237] so. That should be good. Now, we should [2240] have a link variable. So, when we run [2242] that one more time. Okay. I just kept on [2244] running into bugs with um instantly's [2246] website parameter. So, I just sent over [2248] a ton of custom variables to see if [2250] maybe there was some issue in just what [2252] it was. So, site webs. Yeah. Okay. So, [2254] both of these look good. Web site looks [2256] to be the one that I'm going to use. So, [2258] I'm just going to head over to [2259] instantly. I'll go to leads. Refresh [2261] this. And um we're not seeing the the [2263] the fields here because there's just so [2265] many fields. But um the one that I [2268] want is let's go over here. Um not link. [2274] What was it called? Custom variables and [2276] then web site. I think I think that's [2280] what it was [2282] called. Web site. [2285] Okay. Web site. Cool. Save this. Now [2291] let's preview this. [2294] Um, looks like we got everything we [2297] need. Nice. Yeah, it looks [2300] awesome. And, uh, yeah, we should be [2303] good to go. We're starting by scraping [2304] an audience on Appify using the Appify [2308] run an actor node. What this is doing is [2310] this is going out on Appify and then [2312] scraping a web service called Apollo, [2314] which gives us a big list of essentially [2317] email addresses, first names, last [2319] names, websites, and everything that we [2321] need to run a successful campaign. From [2322] there, we're getting all that data using [2324] the get data set items node. We're then [2326] scraping the customer or prospect, I [2329] should say, website using an HTTP [2330] request, which delivers us a bunch of [2332] HTML. We are then parsing that to text. [2335] The reason why we parse it to text is it [2336] just allows us to feed data into our [2339] first open AI node. This open AI node is [2342] responsible for essentially returning a [2344] bunch of personalized context about both [2346] the website, who the person is through [2348] the various fields Apollo returns, and [2350] then it gives us some unique angles that [2351] we could use to write a custom asset for [2353] them. Now, the custom asset I'm doing in [2355] this video is a newsletter. So, we [2357] actually go through and we generate a [2358] highquality piece of content, [2361] essentially a newsletter using a format [2363] that I've used before for my own [2364] newsletter that had the founder of [2366] HubSpot follow me a few years ago, and [2368] then we're taking that newsletter, [2370] converting it into HTML. Once it's HTML, [2373] we then use it to create a Google doc. [2375] All right, hopefully you guys [2376] appreciated seeing how to build a system [2377] like that live. You guys can build the [2379] system in any noode platform you guys [2381] want. Whether it's make.com or naden or [2383] lindy or any of the the the major [2386] current platforms today allow you to do [2388] stuff like this. You just need to [2389] sprinkle on a little bit of prompt [2390] engineering. I'm sure you guys could [2392] see. So yeah, hopefully you guys found [2393] that valuable. If you like these sorts [2395] of videos, definitely drop a comment [2396] down below with some ideas for future [2397] ones. If you haven't already checked out [2399] Maker School, which is my 0ero to1 [2400] automation community, we're just under [2402] 2,000 members right now, coming up on [2404] that probably in the next 24 hours, and [2405] I increase the price every hundred. So, [2407] if you want to use assetbased lead [2409] generation strategies like the system [2410] I'm showing you here to land new clients [2412] or if you want to sell a system like [2413] this to people and you have no idea [2414] where to start, that is your uh [2416] beginning. If you guys already have a [2418] successful business, you want to scale [2419] it up even more, check out [2420] makemoneywithmake.com, my premier [2421] automation community, which also [2422] includes maker school access builtin. [2425] Thank you very much for watching and I'm [2426] looking forward to seeing you in the [2427] next video. Tears.

Video: https://www.youtube.com/watch?v=IJBp8MAAMGQ
Title: Ranking Every Lead Gen Method for AI Automation (in 2025)
[0] I'm about to rank every client [1] acquisition method currently available [3] for AI and automation agencies. These [5] are the same acquisition methods that I [6] use to scale my agency to 72K a month [8] and they're the ones that are currently [10] being used by thousands of people across [11] my communities maker school and make [13] money with make. Here is a tier list. [15] This is how I'm going to be ranking it. [16] I have a bunch of different options down [18] below. So, I'm just going to drag them [20] onto the applicable place when it comes [21] time to do so. And I'm also going to run [23] you through not only what the [25] opportunity is, but some of the [26] drawbacks, some of the pros, and then [28] even how to actually get up and running [29] with this today because I want this to [30] be an actionable video. Okay? All right, [33] let's get into it. The very first and [35] probably most important client [36] acquisition method that I'm sticking at [38] the very front of the video because I [39] want everybody here to hear it is cold [41] email. So, I would rate cold email right [44] off the bat as S tier. Now, cold email [46] is fantastic. Why? Well, there are a [48] couple of benefits. The first is that [50] you have very consistent and predictable [51] return on investment compared to content [53] methods, which I'm going to talk about [54] in a moment. A lot of people dive right [56] into content without actually building [57] any sort of outbound lead flow, which I [59] think in AI and automation is a big [61] mistake. You also get direct access to [63] decision makers at scale. These are [64] people that honestly the vast majority [66] of us would never be able to talk to if [67] it not were having a straight line [69] directly into their hearts and their [71] minds, aka email inbox. It's sort of [73] like the one thing that's shared between [75] everybody on planet Earth. Whether your [76] salary is $5 a day or $5 million a day. [79] Simple numbers game with clear metrics. [80] When you get good enough at this stuff, [82] you literally will have some sort of [84] inbound amount of money. It'll flow [86] through your cold email system and then [88] you will have some sort of multiple on [91] that money that you spent. So, you know, [93] we got $1 sign here, $3 signs. When you [96] scale up cold email enough and you know [97] what you're doing and you're good [98] enough, you will literally put a dollar [99] in and you'll make like $5 or $20 back. [101] and you will be able to do that reliably [103] and consistently. You have very low cost [105] per meetings compared to paid ads. [107] Currently, I say we have a 3x to 4x [109] multiple on some of the other methods [110] I'm going to talk about here. And then [111] ultimately, you get to implement this [112] very rapidly and get quick results. [114] Okay. Now, in terms of some tips, let me [116] give you some casual conversational copy [118] will outperform formal approaches. What [120] I mean by this is if you use acronyms, [121] if you use slang, if you actually [123] intentionally lowercase specific parts [125] of your email, people are more likely to [126] respond to that because they treat you [128] as a real human and not a, you know, [130] robot or or templated sequence or [132] whatever. So, even if you're using [133] robots or templated sequences, you can [135] actually imply that it was human written [137] by you, if you're smart about it, and [138] then lead to significantly higher [140] response rates and reply rates. The [141] second major tip is if you respond [143] quickly, it will dramatically affect [145] your conversion rates. If you respond [146] within 60 seconds, which I know is kind [149] of crazy and a lot of people are like, [150] "Respond to an email in 60 seconds? What [151] the hell's wrong with you?" You will [152] have something like, we think we've all [154] heard this metric at this point, a 396% [157] improvement in downstream conversion [159] rate. So, this means literally you could [161] 4x the amount of money you're making [162] today with a cold email campaign if you [164] just get back to people within a minute [165] or something of that nature. The exact [167] statistics vary depending on the client [168] acquisition method, but just across the [170] board, you respond to people fast, [171] you're going to get results fast. So, [173] set some sort of notification. Set some [175] sort of pass through Slack thing or have [178] your phone make a ching noise every time [180] you get a cold email. Whatever it takes [181] for you to get back to it and respond [182] ASAP. Last but not least, strong [184] guarantees significantly improve [186] response rates. I highly recommend [187] having a guarantee in your cold email. [189] It's the number one way of standing out. [190] If you don't have guarantees in your [191] cold emails, I want to say that you [193] can't really compete in this space. [194] That's sort of like the thing that [195] everything else hinges on. So you guys [197] are going to have access to this sixcala [198] draw, but we have a bunch of gotachas on [200] the lefth hand side and a bunch of [202] positives that sort of outweigh those [203] gotchas. I'll let you guys look at all [205] of this in your own time. Let's now get [206] started with the mechanism. So how do [208] you actually go about and do this? Right [210] now the best way to get a cold email [212] campaign up and running and this works [213] as the time of this recording by the [214] way, but lead genen methods change, [216] audience building methods change. So [217] this may not work exactly [218] pound-for-pound, you know, by the time [220] you're watching it, maybe in a couple of [221] months or so, but essentially you start [223] with two services. One's called Apollo [224] and the other's called Appify. Apollo is [226] a database of leads. Apy is a scraper [230] that lets you scrape those leads for a [232] lot less money. And then you use these [234] two tools to basically scrape a list of [236] leads, maybe like a thousand leads in a [238] specific niche with filters. You'll say, [241] you know, I want you to be within 1 to [243] 10 people company size. I want you to be [246] located in San Francisco. I want you to [247] have a keyword of automation somewhere [249] in your business name. I want to focus [251] mostly on people that are they have the [253] term owner or founder or partner or CTO [255] or CEO or CIO or CEO somewhere in their [258] you know like bio or something on social [259] media. Um you can actually build that [261] list. You get a thousand of those people [263] right off the bat. Then you can actually [264] send a bunch of emails to them using [266] infrastructure. What infrastructure? I [268] focus on a platform called instantly. [270] You can also do another platform that [272] has been picking up over the course of [273] the last few months although I [274] personally think it's at least a little [275] bit better called smart lead. I'm [276] actually affiliated with both in so far [278] that I have like affiliate codes. So, if [279] you guys do end up signing up for any of [281] those, I have a description in my bio. [282] Just note that you are also going to be [284] giving money to me. And I don't know how [285] many of you guys hate me, so be wary of [287] that. Um, once you launch the campaign [289] on instantly with your fantastic [290] copyrightiting, you then just monitor [291] replies. It's sort of like a like a [293] three-step sequence here. If there's a [296] positive reply, you respond within 5 [298] minutes, aim to book a discovery call, [299] and close the deal. If you get no reply, [301] they automatically pump into a follow-up [303] sequence, and you basically just repeat [304] this over and over and over again. Then, [305] if you get a negative reply, you just [307] categorize the objection. This is really [308] important. Not a lot of people do this [309] and I haven't talked about it too much, [311] but you have to categorize why the [312] person said no to you. Did they say no [314] to you because they want you to [315] unsubscribe? Well, that's actually a [316] different category than them just [317] saying, "Hey, I'm really sorry, but it's [319] not the right time right now." Why? [320] Because people that ask to unsubscribe [322] from your email are actually different [323] from people that say they're not [324] interested right now. You could actually [325] reactivate the people that say they're [327] not interested right now if you're smart [328] about it. And you could recoup some of [329] those costs. So, you have to categorize [331] the objection. Then from there, you will [332] know what your problem was. And then you [334] can kind of start and go all the way [335] back up here and cycllically and [337] consistently improve your flow. So [339] that's cold email. The next up is [341] LinkedIn DMs. So I would rate LinkedIn [344] DMs as of the time of this recording. [346] Let's go back to our lovely ranking [348] chart here as a tier. Okay, LinkedIn DMs [351] are great. They're not incredible. [352] They're not as scalable as cold email, [354] but they're still pretty damn good. You [356] have to basically do cold email with [357] LinkedIn under the constraints of a [359] platform. And that has pros and that has [361] cons. What's a big pro? Well, the pro is [363] you get to use your network and the [365] subsidiary like content around your [367] profile as supporting material for your [369] pitch. Think about it. When you send an [370] email, what do people actually see? They [372] see your first name. They see your last [373] name. They see your profile pick. And [375] then basically everything else is just [376] like you trying to convince them that [377] you have access, you know, that you're [378] that you're this big super cool person [380] that can deliver on the promises. With [382] LinkedIn, instead of just telling people [383] stuff, you could actually show them [385] stuff. So, it's pretty powerful in that [386] way. You also obviously get direct [388] access to business decision makers in a [390] context that they are on for business [392] purposes. You could do a connection [393] first strategy which outperforms cold [395] message requests. You can drop voice [397] messages which is really cool. There's a [398] couple of tools out there that'll [399] actually allow you to like pre-record [400] voice messages and nowadays even use AI [402] to swap out a person's name. Hey Bren, [404] hey Peter, hey Sean, and then deliver [406] something that sounds customized. And [407] then you can do a bunch of other things [408] essentially to maximize the probability [410] of your LinkedIn message or connection [412] request being seen. But the main [414] downside here is this. It's the 20 to 30 [416] daily connection requests. The way that [417] it works is as of the time of this [419] recording, you basically have to stay [420] somewhere between 100 to 150 per week. [422] Sometimes I think it's 100, other times [424] I think it's 150. What that means is, [425] you know, let's think about it like five [427] business days times uh 20 messages is [429] 100, right? So you're basically [431] constrained to this. Contrast that with [433] cold email where you could send a ton [434] more outreach and sure maybe a little [436] bit lower quality, but you can send like [437] 500 times the outreach if you have the [439] infrastructure for it with basically no [440] downside. If you wanted to do that [442] LinkedIn, you'd have to start getting [443] into, you know, kind of some black hat [444] methods like buying accounts and stuff [446] like that, which while doable, I don't [448] really recommend just for scalability [449] reasons. Okay, so we got a bunch of cons [451] on the lefth hand side, mostly related [453] to the daily number of connections, and [454] we got a pros on the right hand side [455] that are mostly related to just the [457] positives. You get to use your LinkedIn [458] posts as like supporting infrastructure [460] for the point you're making. And [461] basically, you get to show people how [462] valuable you are. How do you actually [464] get up and running with LinkedIn [465] outreach? It's pretty easy. Step one, [467] you know, build yourself a list. Same [469] energy as before, Apollo, right? You can [470] use a to a a tool called LinkedIn sales [472] nav which allows you to put together [473] things based off parameters like I was [475] talking about before. Okay. You can also [476] engage with content. You can do this in [478] manual or automated means. Engaging with [479] content means liking posts leaving [481] comments down below posting funny memes [483] related to the person's post or [484] something. And then from there what you [485] basically do is on LinkedIn you will [487] send a connection request in that [489] connection request. Okay. There will be [491] a little spot where you could write your [492] own message. And then that message here [495] could include I don't think you can do [496] this on the first connection request. I [497] was thinking it would do this through [498] voice, I believe, unless LinkedIn [500] changed something. That message can [501] include a bunch of text and then after [502] they accept, you might drop like a VM or [504] something. Lots of cool tools currently [505] available to help you do this. You could [506] do this through Phantom Buster, and [508] that's one. You could do outreach [509] through Expandandy. That's another one. [511] You do outreach through a variety of [513] these sort of like automation tools. I [514] think there are three or four other [515] ones, but I'll leave it at there because [516] I don't want to overwhelm you guys. Once [517] the connection's accepted, then [519] obviously you could proceed down the [520] rung, right? Send a value first message. [523] Share some relevant thing to them that [524] increases value. Ask a thoughtful [526] question. Share a case study and suggest [527] a discovery call. Then if they're [529] interested, you can book a meeting. Go [530] sell them. If not, though, think about [531] it. If not, you still gained a LinkedIn [535] network person. You still gain somebody [537] in your network. That's great. This is [539] the easiest way to do follow-ups with [541] people. Way better than cold email [542] because now you're not just saying, [543] "Hey, you still here?" Now you're [545] actually just showing them how valuable [546] you are. Because if you build a cool [547] LinkedIn network, now every time that [549] you post, it's like a follow-up. It [550] pings them. reminds them who you are. [552] And then you can also get tons of likes [553] on your post, engagement on your post, [554] stuff like that to basically say, "Hey, [556] look how cool I am and how many of these [558] other people find me serious. Why don't [559] you send me a DM or follow up that way?" [561] I think that's just way better. It's [562] just, you know, a general follow-up [564] mechanism than cold email. So, it's [565] great. Um, the one downside is obviously [567] the the volume. All right, let's do [568] number three. Cold email and Loom. So, [571] hopefully you guys know, I've talked a [572] lot about this, especially recently. The [574] cold email and Loom approach is actually [576] fundamentally different to the cold [578] email approach because what you're doing [580] is instead of just sending somebody a [581] cold email with like an icebreaker and [583] then pumping them into a templated [584] sequence. What you're doing with a cold [586] email on a loom is you're actually like [588] going on somebody's LinkedIn profile or [591] Instagram profile or or website or [593] funnel and you're recording a video of [594] you breaking that down and then offering [597] some piece of value to fix it or make it [598] better. You're literally going on my [600] Instagram and you're recording a video [602] being like, "Yo, Nick, I love your [603] stuff. I've been following you for a [604] while. I wanted to make you $5,000. It's [606] going to take you less than 30 seconds. [607] Let me show you uh a quick hack that I [610] would do in your shoes. You could take [612] it. You don't have to work with me. You [613] could farm it up to somebody if need be. [614] Um um that that you could literally make [616] a couple of tweaks here and then [617] significantly improve your bottom line. [619] Then you point out some minor fauxaw or [621] or problem that they're making or [623] something like that and then give it to [624] them and then try and reach out to them [625] over cold email. And you can also [627] combine this with other social media [628] based outreach methods. But essentially [629] what you're doing is you are offering a [630] ton of value up front. then you're [632] associating it with yourself, with your [633] character. Um, and this gives some of [635] the warmest responses. Obviously, the [637] main issue here, right, is the [638] scalability of it. So, yeah, we're [640] combining cold email with personalized [642] screen recordings. It's a great balance [643] between personalization and scale if [644] you're smart about it. Um, the the way [647] you kind of hack this together is you [648] have some sort of thumbnail in the email [650] that you send over, okay? Because the [651] email will actually show the first few [653] frames of the recording with the [655] prospect's assets. where you know the [657] the prospects Instagram page and you [659] zooming in on something to to make a [661] change to it or something or maybe some [662] big spreadsheet that you developed with [664] a bunch of data um that you're just [665] giving them or maybe a big list of [667] YouTube titles or something that you're [668] going through in the video. You can [670] actually do this for free. What's crazy [672] is Loom offers, as of the time of this [673] recording, 5 minutes for [675] free, which means if you keep your [678] pitches to under 5 minutes, you could [679] literally get this up and running, get [681] your Gmail inbox and just start sending. [683] It's not a big deal as long as you have [685] access to leads somehow. And as you've [687] seen, those leads can be pretty cheap. [688] The Apollo app scraper I talked about [690] earlier, I think there's like a $120 or [692] $150 per thousand leads as of right now. [694] You could literally get all this stuff [695] up and running for $0 in the outreach [697] side, maybe like three or four bucks in [699] the lead sourcing side. It's easy. Now, [701] if you combine this with a multi- [702] channelannel approach, so if instead of [704] just sending an email, you also get a [705] LinkedIn profile or some other thing, [707] Instagram, DMX, uh whatnot, um you'll [710] significantly improve the likelihood of [711] somebody seeing that video. And if you [713] think about it logically, you just spend [714] a bunch of time recording that video and [716] trying to fix a problem for somebody and [718] doing research. So this is how you [719] recoup the sunk cost of you investing [721] into that asset that you just made. If [724] you want to do 15 outreaches, that might [725] take you maybe maybe an hour or so. I'm [727] sort of spitballing here, but usually [729] you'll get good enough that you'll be [730] able to record your video in 2 or 3 [731] minutes, and then it'll take you a [732] couple other minutes to like set the [734] person's asset up and and get all that [735] stuff out. But uh yeah, this the way [737] that I see this nowadays, honestly, is [739] this is like the modern cold call. It's [742] actually better than cold calls because [743] people see it as being more respectful [745] of their time. And then it's also async. [746] So the person doesn't need to be [748] available on the other end of the line [749] right now in order to read your thing. [751] And that's increasingly important in a [752] globalized society where you're talking [754] to somebody in a 16-hour time [756] differential. Okay. Much higher response [757] rates than standard cold email. So how [759] do you actually do it? Well, you got to [760] scrape the targeted leads like I talked [762] about, visit some sort of asset, [764] prospect's website, LinkedIn, social [765] media, record your video, personalize [768] the first few lines of your outreach. [769] You can do this using AI as well like I [771] talked about before. and then send via [772] email and LinkedIn. If you don't get a [774] response, pump them into a follow-up [775] sequence because you want to maximize [777] the probability they're going to see [778] this because you invested all that time. [779] But if they do get a response, follow up [781] immediately within a minute. Book a [782] disco call and close the deal. And the [784] deals here, guys, because they're warm, [787] they can be a lot more money than any [789] other deal. When you offer a tremendous [791] amount of value right off the bat like [792] this for free, people that are making [794] money like you and want to have you on [796] the team. How do I know? Because this is [797] exactly how I hire. If I if I want to [799] work with somebody, basically everybody [800] on my team at some point sent me some [803] customized asset, customized piece of [805] value before I even started a formal [807] working relationship. And most of the [808] time they do it for free because that [810] blows my freaking socks off. And it's [812] not just me that's like this. It's [813] basically everybody else that's at like [814] a high level, at least in my space right [816] now, which I'm categorizing as info. All [818] right, let's move on to the next one, [820] which is ads. Ads can be really, really [822] good if you know what you're doing. The [824] issue is not a lot of people know what [826] they're doing. So, I'm going to grab [827] ads. And I am personally going to rate [829] them as C-tier, much lower than most [831] other people are probably going to [832] think. Well, I've tried running ads a [833] number of times for my own ad automation [835] agency. I've also heard and seen dozens [837] of stories now of people trying them in [839] my maker school and make money with make [840] communities to no avail. For whatever [842] reason, we have just been all [843] collectively unable to make ads work in [845] any sort of scale. There are a couple [846] reasons for that. The biggest one is [848] probably the testing budget. Okay, in [850] order to make ads work, you have to [851] spend a lot of money. You have to spend [853] money so that the algorithms, a meta or [855] Google's PPC or whatever ad platform [857] you're using, can basically get enough [858] data to optimize the people that they're [860] showing it to, the times that they're [862] showing it to, and then the ways that [863] they're showing it to. The issue is in [864] order to get to the point where you know [865] it, you typically have to spend a few [866] thousand. Now, AI and automation [868] agencies, one of the main benefits is [871] how low the barrier to entry is. You [872] don't actually need a ton of money to [874] start the business model. So, what do [875] you naturally have as a byproduct of [876] that? a ton of beginners, a ton of [878] people without much disposable income. A [880] ton of people between, you know, zero [881] and $1,000 of capital they can invest. [884] You don't really have the time, energy, [885] and money to spend on ads to validate [888] and get them to a point where you can [889] actually produce a return on investment. [891] That capital expenditure just it doesn't [892] really exist for a niche. Okay. If you [894] do end up going this way, here are some [896] tips that I've taken from a few people [897] in my communities that have made this [898] work at at least like a one to twox [901] rorowass, which is not not good at all. [903] Our rorowass stands for return on ad [904] spend. So if you if you have a 2x, you [907] spend $50 and you make $100. Well, that [910] means that your your advertising budget [911] was 50%, which means this is, you know, [914] 50% margin right off the bat, which is [915] not very good, but whatever. Um, Google [917] search outperforms Meta for B2B [919] automation services. Having a multi-step [921] funnel outperforms direct to call [922] approaches. Industry specific campaigns [924] are going to deliver much, much better [925] results because everybody is of the mind [927] that their industry is special and super [928] magical. Hint, they aren't. Um, if you [930] want to start at the low end, I'd say [932] you need between $500 to $1,500. [934] Although I've also seen this run people [936] ragged like they get to like 5k 10k [938] spends before they see any sort of like [940] Google ads or or meta result which is [942] really unfortunate. And then a big thing [944] that really works well or the thing that [947] is going to make this work as well as it [948] could be is having some sort of case [950] study. Okay, you need to have case [951] studies where you've shown a person very [953] similar to the customer actually make [954] money using these systems or using these [956] flows. Creative refresh every 2 to 3 [958] weeks to prevent ad fatigue. I think you [959] can go longer than that personally but [961] yeah. Okay, so here are some pros and [962] some cons. How you do this? Focus on [964] industry specific campaigns. Okay, you [966] basically whip up a landing page. Then [967] you create a lead magnet of some kind. [969] The lead magnet is going to live on the [970] landing page. You're going to host it [971] there. And then in exchange for the [973] person downloading the lead magnet, [974] you're going to ask for their email [975] address or some sort of opt-in with [977] their phone number and whatnot. Then you [979] have some nurture sequences where after [980] the person comes in, gives you their [982] email addresses, you kind of cycle them, [984] right? And just uh build up value, give [985] them more free stuff, get them to the [986] point where they're ready to call, and [987] usually have some sort of pitch in that [989] nurture sequence. And then yeah, you [991] launch the testing. If it's not [992] profitable, which it won't be, you're [993] going to adjust the targeting creative, [995] and you're just going to do this loop [996] over and over and over again. If it is, [997] you'll just scale the budget, [998] reimplement retargeting, do some [1000] continuous creative testing, and then [1002] optimize a conversion path before [1003] expanding to new audiences later on. And [1005] what is profitable? I don't know. You [1006] you need like a few a few multiples in [1009] the row for sure. Depends on the rest of [1010] your business, but as you can see, I'm [1012] not a big fan of ads. I don't really [1013] find that they work super well, so [1015] they're not usually my recommendation. [1016] Just wanted to be upfront with that. All [1017] right, let's move on to communities. [1019] Facebook, school, Discord, Slack. How [1022] exactly would I rate them? Well, [1023] communities are a free outreach method [1025] for the most part that as of the time of [1027] this recording, I would rate as a tier. [1030] Okay? So, they're nowhere near as good. [1033] By the way, don't treat this as like, [1035] you know, this is like uh uh 0 1 2 3 4. [1039] Okay? Treat this like 0 5 10 uh 100 and [1045] then a thousand just in terms of [1046] strength. This is basically I think this [1047] is a logarithmic scale. Okay, so um S [1051] tier is an order of magnitude better I [1053] think than A tier, which is an order of [1054] magnitude better than B tier, C tier, [1055] and so on and so forth. So communities, [1058] for people that aren't aware, we [1059] currently live in kind of an [1060] unprecedented era where this business [1062] model has come up called communities, [1064] which I'm making a lot of money in. I [1065] think I'm the fourth or fifth person by [1067] revenue on school platform right now, [1068] which is pretty big considering I knew [1070] nothing about communities a little while [1071] ago. But uh they're basically a [1072] combination of a bunch of things. Okay, [1074] you know how before you would have let's [1076] say online courses and then you would [1078] also have groups slashforums like Reddit [1081] then you would also have coaching then [1082] you would also have like other services [1084] like templates and stuff. Well, you know [1085] what's really cool is communities are [1087] basically a modern solution to all of [1090] these that combine them all. They give [1092] people templates, online courses, groups [1095] and forums for them to connect with [1096] people, coaching and nowadays people [1098] even doing meetups, okay? and they kind [1100] of combine them all into one product [1102] like u my community make [1104] moneywithmake.com or maker school which [1106] are currently hosted on the school [1108] platform which is one of many community [1109] platforms that's why I put the school [1110] logo there okay so what do communities [1113] give you really right off the bat they [1114] give you direct access to pre-qualified [1116] audiences that are interested in your [1117] solutions why cuz if you're selling to [1118] videography people videographers wedding [1121] photographers whatever and you join a [1122] videography or a wedding photography [1124] community everybody in there is going to [1126] be exactly the sort of person that you [1128] want to talk to they're going to the [1130] people that are interested in growing or [1132] expanding their business. Obviously, [1133] very beneficial from a B2B perspective [1135] if we're selling A and automation [1136] solutions. And they're willing to go out [1138] and and get a digital footprint to do it [1140] and then share their problems and and [1142] and brainstorm solutions with other [1144] people in their niche. They're literally [1145] about as qualified an audience as you [1147] can get to be honest. [1149] Okay. So the key though is and what a [1152] lot of people get wrong with communities [1153] is in order to make them work you need [1154] to build a reputation and usually the [1156] way you do so is one [1159] consistency you need to show up often [1161] just be a presence then two you need [1164] some sort of free value creation okay [1166] you need to be giving people stuff [1168] answering questions doing Q&As's [1170] recording videos helping and so on and [1171] so forth now because a lot of the time [1173] these are gated you get much higher [1175] conversion rates than public platforms [1176] and because you have access to people [1178] directly in in your niche a lot of them [1179] with a lot of money and you get those [1180] high conversion rates and and a [1182] reputation and authority, these [1183] relationships can be super strong if you [1185] play your cards right. My recommendation [1186] is usually the people that see the most [1189] success with the stuff will go above and [1190] beyond. They will make posts maybe on a [1192] weekly basis inside a specific set of [1194] communities offering value to solve [1196] problems. And then everybody that likes, [1198] reacts, or ask questions to that post [1200] will then get a DM from that person [1201] being like, "Hey, just saw that you [1202] asked a question about the post. Just [1204] wanted to give you some more data, some [1205] more information in DMs cuz I didn't [1206] want to clog up the feed. Here's a bunch [1207] of more value. uh let me know if you [1209] have any questions. Okay, this approach [1211] works really really well. Another thing [1213] is in communities you don't just get [1215] people that are willing to buy your [1216] services but you also obviously get a [1217] big network of people. Okay, um that may [1219] or may not want to work with you right [1220] now. The best way to go about scaling [1222] community based outreach is once you've [1223] assembled this big network, what you do [1224] is you just send a message to the 50 [1226] people that are frequently liking and [1228] commenting on your posts. Then you ask [1230] for referrals. You don't actually ask [1231] them directly. You just say something [1232] like, "Hey, how's it going?" So, you [1234] know, as you probably kind of figured [1235] out while I've been talking with you, I [1236] do AI automation work specifically for [1238] the wedding videography niche. As I [1240] alluded to in my last post, um I was [1241] just wondering if you knew anybody that [1243] might be able to benefit from my [1244] service. The reason why this is valuable [1246] is because instead of you saying, "Hey, [1248] can we work together?" Which potentially [1249] burns the network later on. You're [1251] saying, "Hey, do you know anybody that [1252] might be interested in my service?" And [1253] if they are interested in your service, [1254] well, they're going to want to work with [1255] you. And then if they aren't, they're [1257] going to look through their network and [1258] try and recommend somebody else to work [1259] with you. And then if they really, [1260] really aren't, then you're just going to [1261] get a no, I'm really sorry. Sorry, I [1263] don't have anybody in my network. But [1264] you're still going to have them in your [1265] network. You know what I mean? You're [1266] going to get to benefit from their [1267] social proof. You're going to get to [1268] benefit from them liking your post, [1270] bumping them up to the top of the [1271] community algo. It's just non-stop wins. [1274] Now, I tried to find averages throughout [1276] my communities to figure out exactly, [1278] you know, what the ratio is between [1279] posts and then clients, but I'll be [1281] honest, it really depends. The biggest [1283] variable here is the quality of the [1285] community. So, Maker School, for [1287] instance, I've come to realize is a very [1288] unique community in terms of the amount [1290] of engagement. Um, so obviously, you [1292] know, I'm a little bit biased here. Uh, [1294] the more engaged the community is, the [1295] more real people talking about real [1297] problems, obviously, the more you're [1298] going to be able to connect with people. [1299] And what I found is there are a lot of [1301] communities, specifically on Facebook [1302] and older platforms that are not really [1305] communities at all. They're just like [1306] sales pitches for a dude's specific [1307] product that he set up a Facebook group [1309] for, you know, 5 years ago, and he just [1310] never responds to anything. So, those [1312] are dead. You want to stay away from [1313] those. If you find a valuable community, [1316] something like Maker School that you can [1317] join and either pay a small monthly fee [1319] for, $10, $15, $20, or get in totally [1321] for free on the ground floor, if you [1323] make 20 quality posts, downstream, you [1326] might generate one to three clients if [1327] you follow everything else that I'm [1328] talking about here. How long does it [1330] take to make 20 quality posts? I don't [1331] know. Might take you a week. What does [1333] this mean? You could theoretically have [1334] a funnel that generates you maybe a [1336] client a week or so using communities if [1338] you take it seriously and if you're [1339] willing to put the effort in. Now, one [1340] to three clients may not seem like much, [1342] but just keep in mind that the quality [1343] tends to be really high, especially if [1345] it's a gatekept, closed, and paid [1347] community, which costs you money, but [1348] then you get to benefit on the upside. [1350] Okay, so I think these can be pretty [1352] awesome. Um, the way that you do them is [1354] you basically get a bunch of niches, [1356] whatever niche you want to join, and [1358] then do some research to list out all of [1359] the relevant communities in those [1361] niches. Go top to bottom in the [1363] community and just read what are people [1364] asking, what are the problems people are [1365] having in my community, what are, you [1367] know, the main points. You could [1368] literally like use the search bar and [1370] just type in a question mark. You'll [1371] find a list of all the titles where [1373] people have put in question marks [1374] looking for the answer to problems. You [1376] can also use other tools like I think [1377] gummy search is one. And then there are [1379] a couple of other ones that I just [1380] source information from Reddit and then [1381] other communities to find problems that [1383] customers are suffering from. Once you [1385] know the problems, let's say like the [1386] top three problems and a lot of them are [1388] related to lead genen if I'm honest [1389] across most of the niches I've seen. You [1391] create a bunch of valuedriven posts. [1392] Then you engage with other members [1394] posts. Okay? You got to warm up your [1395] account and stuff. And then the more [1396] engagement you receive, then you follow [1398] up with the DMs, offer additional help. [1400] If they're interested, you move to a [1401] call and then close them. Okay? If [1403] they're not, you still get to benefit [1404] because you get to ask for referrals [1405] like I talked about, maintain the [1406] relationship, and then you get to create [1409] more posts that then get to benefit from [1411] their engagement. So either way, you're [1412] going to be skyrocketed at the top of [1413] this thing. It's a very positive [1414] flywheel. If not, then adjust your [1416] content strategy and then start again. [1418] Some of you guys will probably be kicked [1419] out of groups that you try this stuff in [1421] because your your messaging is not very [1422] good, your positioning is not very good. [1423] You don't really know how to float the [1424] radar and not look like you're pitching [1426] or selling services. But that's okay. [1428] This is just like any other lead genen [1429] method. The only thing is it usually [1430] doesn't cost a ton of money up front. [1432] What it is costing you is it's costing [1434] you your time. So obviously a lot of [1435] beginners have more time than they have [1436] money, which is why I thought I would [1437] bring this up. Let's move on to the next [1439] one, which is short form content. short [1442] form content is Tik Tok, it's Instagram, [1444] it's YouTube shorts, it's the variety of [1446] these platforms out there where you can [1447] post reels and clips that are maybe, I [1450] don't know, 0 to 30 seconds and then you [1452] can have them rank really high on these [1454] algos. So, where would I put short form [1456] content on this tier list? I would rank [1458] this as C. And I know a lot of people [1461] are probably wondering, Nick, why the [1462] hell would you rank this as C, man? Can [1465] I change the color of this because I [1466] want this to be visible. There we go. [1467] Why would you rank this as C? Well, as [1469] you will find, I rank the vast majority [1472] of inbound methods very low for AI [1474] automation agencies. Why? Because it [1476] takes a longass time to make something [1479] work. And that's a longass time that [1481] you're not getting demonstrable return [1482] on investment as somebody that probably [1484] doesn't have much of a runway in this [1485] business anyway. So, instead of making [1487] content and blasting it out with a [1489] megaphone like services like Instagram [1491] and stuff like that allow you to do, if [1492] this is your megaphone, oo, I'm actually [1494] getting pretty good at this. That [1495] actually kind of looks like a megaphone. [1497] Don't do that. Okay. What you want, oh [1499] man, uh, my Canadian is showing. I don't [1501] even know how to draw a gun. What you [1503] want is you want a Call of Duty sniper [1509] rifle. Okay. Oh my god. Is that Is that [1512] what that looks like? That just kind of [1514] looks like uh a man's private parts. [1516] Anyway, what you want is you want a [1518] sniper [1519] rifle that shoots the the the specific [1523] target audience that you want instead of [1525] a megaphone which just blasts things out [1528] to a ton of people which may or may not [1531] actually include your target audience. [1533] Okay? Because this this is all about [1536] scale and it can work really well for [1538] scale. As you guys are probably seeing [1539] right now with my own channel, a bunch [1540] of other short form creators channels. [1542] This stuff works really well for scale [1543] but it takes a long time to get up and [1545] running. this, okay, just works really [1549] well at the cost of scale, which is why [1552] I always recommend outbound first before [1553] you do anything else. So, um, there are [1555] some benefits. Obviously, there's a [1557] lower barrier to entry than YouTube, [1558] which I'll touch on earlier. And there's [1559] also the potential for some rapid [1560] exposure through recent algorithmic [1562] updates like, um, Tik Tok and a couple [1563] other short form platforms are now [1565] reserving a set number of positions in [1567] the feed for people that have low [1569] follower counts. So, you know, they [1571] basically just want to level the playing [1572] field a little bit and then give newer [1573] creators the opportunity to rise the [1574] top. But the reality is it requires a [1576] really high volume of content and every [1578] one of these videos usually requires [1579] some sort of editing or some sort of [1580] overengineering. Um you also struggle [1582] with the lead quality. You get a lot of [1583] tower kickers on short form content man [1585] because these people have the attention [1586] spans of freaking goldfish. Okay. Now [1588] you do get more engagement with personal [1590] branding but it's nowhere near as much [1591] as you know another acquisition method. [1593] Um algorithms lean towards entertainment [1595] content as opposed to actual value [1596] content which is a real shame and it's [1598] difficult to predict to rely on for [1599] consistent client acquisition. I see a [1601] lot of people that have YouTube channels [1602] with maybe a thousand subs or something [1603] like that and their lead acquisition [1605] goes, you know, kind of like this. You [1606] know, if they were able to take off, [1608] like sure, eventually they go like this, [1609] right? But most of them aren't. If you [1611] contrast this with something like a cold [1613] email, for instance, it's usually much [1614] steadier and they're smaller variations. [1617] Okay? And I think you can scale it up as [1619] well. It's just the slope of that line [1621] is a little bit lower than a lot of the [1622] other ones. All right. So, what is a [1624] mechanism to do this? Um, you know, I'm [1626] just going to keep it simple. You create [1627] a lot of short form content. Talk about [1629] whatever the hell you want. Post [1630] consistently one to two times a day for [1632] a very long time. You know, when I did [1633] my long form YouTube, which I'll talk [1635] about in a second, I posted every day [1636] for 30 days without stopping. And every [1638] one of my videos was half an hour. To be [1639] honest, it's kind of like what I've been [1640] doing recently. And you know what's [1641] happening right now? It's in my growth. [1643] I'm skyrocketing. So, if you want to [1644] make this work, you have to set aside a [1646] lot of time in order to do this right. [1647] And the time is the cost of the future [1650] scalability. That's what you have to [1651] treat it like. Now, if you don't gain [1652] traction, you have to adjust the content [1654] strategy here. This loop, this might [1656] take like 3 months. You might literally [1658] have [1659] made0 for 90 days or more using this. If [1662] you contrast that with something simple [1664] and repeatable like cold looms or uh [1666] LinkedIn outreach or email outreach, I [1669] think you'll see that this is a lot less [1671] surefire of a path. If you do build a [1673] following, direct the traffic to a lead [1674] magnet, nurture leads via email and DM, [1676] convert to discovery calls, and close [1678] clients. For those of you guys that [1679] don't know, I currently run an Instagram [1681] channel where I'm doing exactly this. [1682] We're just about to hit 100,000 [1684] followers, which is pretty sick. And we [1686] were able to grow primarily by the [1688] virality of a couple of reels. A new [1690] free AI video generator here at 200k. [1692] This one hit 730K. Uh, a couple of these [1694] hit a mill, I think. So, um, the only [1696] reason why, you know, we're able to do [1698] so is because some of these just have [1699] like disproportionately higher [1700] performing growth than other ones. But, [1702] you know, as I'm sure you can imagine, [1703] this might work well for me, somebody [1705] that has a lot of money that I could [1706] rely on and kind of fall back on if the [1708] strategy didn't work. I'm just doing [1709] research and development expense right [1711] now. But if you're new and you really [1712] only have a couple months worth of [1713] runway, probably not the best idea to be [1715] focusing on a method like this, which is [1717] scalable and it might work, but it's [1718] kind of like starting an Uber, right? [1720] Who the hell knows? If you make it, [1721] you'll make a billion quadrillion [1723] dollars, but in all likelihood, you're [1724] probably not going to make it. All [1725] right, let's contrast that with long [1726] form content right now. So, if short [1729] form content was a C, long form content, [1731] like YouTube, is a B. Long form content [1734] is what you guys are watching right now. [1735] Now, notice how it's still not an A or [1737] an S. And the reason why is because it [1739] requires a very high time investment. [1741] You have very low initial ROI. So all of [1743] the same things that I just told you [1744] about for short form apply to long form. [1747] It's just usually it takes even more [1749] time investment in order to grow. The [1751] trade-off is okay. It's more effective [1754] after building expertise and you get a [1756] little bit more sticky clients if that [1758] makes sense because people just tend to [1760] like listening to you a little bit more [1761] if they're the sort of people that are [1762] subscribing to your channel. Contrast [1764] that with like short form where a lot of [1765] the audience that you get are going to [1766] be like new people that don't really [1767] know you too well that just saw you [1768] because of algorithmic boosts. Yeah. [1769] Success always follows a hockey stick [1771] curve. What's a hockey stick curve? [1772] Well, us Canadians say basically this. [1774] Okay. It's kind of what a hockey stick [1776] looks like. Notice how my hockey stick [1777] drawing is a lot better than my sniper [1779] rifle drawing is what it is. Played a [1781] lot of NHL, not COD, clearly. Uh so, you [1784] know, you're you're basically going to [1785] be making zero dollars for the vast [1787] majority of your time. And then some [1788] inflection point will hit and you'll [1790] start getting a little bit of traction. [1791] And this might be like 3 or 6 months or [1793] something. Then you'll start doing some [1794] sort of growth. But again, that's a very [1796] long time period before you make a [1797] dollar, right? Focus on the faster and [1798] easier stuff. Anyway, um the big thing [1801] I'll mention is that just without social [1802] proof or proven results, standing out is [1803] really difficult. If you wonder why I [1805] start all of my videos with social [1806] proof, like, hey, I scale my agency 72K [1808] a month. Hey, I had thousands of people [1809] in my community. Hey, I made 170 grand [1811] last month. It's because if you don't [1812] have social proof or proven results [1814] doing the exact same sorts of things [1815] that you're telling people, you will [1817] just fade into obscurity. The reason why [1819] is cuz you see that megaphone example [1820] that I gave you earlier? Well, you're [1822] not the only one with a megaphone. [1824] There's actually a million other people [1826] out here with megaphones. Okay? And in [1830] any sort of content, you are trying to [1834] stand out, but it's very difficult to do [1835] so unless you have some sort of proven [1837] experience doing the stuff that other [1838] people care about. All right? In terms [1839] of mechanism, how do you do this? Well, [1841] create YouTube content like I did. Build [1843] a small audience to start. Once you have [1845] that small audience, validate and ask [1847] them questions. So, if it works, you [1850] gain traction. Obviously, sorry, if it [1852] doesn't work, you're going to continue [1852] creating content, asking them questions, [1854] uh, you know, and trying to figure out [1855] an angle that does. If it does work, [1857] you'll grow your subbase. You'll ask [1858] them tons more questions, which will [1860] help you create more YouTube content up [1861] here. Convert a bunch of viewers to [1863] leads with a sales process and a funnel [1865] that converts them into clients, which [1866] allow you to scale your content ops. All [1867] right, so not rocket science. I'm sure [1869] you guys could tell kind of what I was [1870] going for here with YouTube, but yeah, [1872] basically when you start, always go [1873] outbound over inbound. All right, that [1876] takes me to Upwork. How do I feel about [1878] Upwork? Anybody want to pause the video [1880] and maybe take a guess? If you guys have [1881] watched my previous videos, you guys [1882] should probably know. Where am I going [1884] to put this thing? [1886] H up here. We make that S tier. Why S [1890] tier, man, this stuff works like crazy. [1892] Okay, Upwork is an incredible platform. [1896] Whereas other platforms require you or [1898] um other approaches require you to one [1900] define the problem that the customer is [1902] suffering from. Okay. Present a solution [1904] for the customer and then three justify [1907] or convince them that you are the best [1909] fit for that solution amongst the [1911] millions of other people. Upwork [1912] actually solves the first two for you. [1914] You're never talking to anybody that [1916] doesn't already have a problem you know [1917] how to solve. You're also never pitching [1919] something that is not a solution that [1920] you already understand and the customer [1921] already understands. The only thing you [1923] actually have to do is you just have to [1925] convince them is, hey, why am I the [1927] person to pick amongst the 500 other [1929] people that are applying for the job. [1931] And I know what you're thinking. You're [1933] thinking, well, Nick, that sounds really [1934] difficult. Well, you're going to have to [1937] deal with that problem anyway if you're [1938] to do all that other stuff. It's just [1939] now you don't have to deal with those [1941] two. And if you're a beginner, you don't [1943] know how to deal with those two. But [1945] dealing with this one's actually a lot [1946] easier. Okay. So, what do I mean by all [1948] this? Well, you now have direct access [1950] to clients that are actively looking to [1952] hire for automation services today. They [1954] literally put up a post and they said, [1956] "Urrent, I'm hiring somebody to build [1958] out an AI and automation solution. Okay, [1960] I will pay $500." This is somebody with [1963] a problem and with a desired solution, [1965] with a ton of pain that wants this [1967] problem solved today. You are literally [1969] never going to find more volleyball, you [1971] know, more of like a volleyball spike [1973] just ready to be hit and ready to be [1975] scored than this. The cost is you have [1977] to pay a little bit of money, okay? But [1979] the benefit is you have these two [1981] problems solved for you. Now, you're [1982] going to have less competition than you [1983] might think just because there's a lot [1984] of stigma around the platform. Sure, [1986] it's low hanging fruit, but it also [1987] costs a little bit of money, which sort [1988] of is like a barrier to a lot of people [1990] and there's a stigma around Upwork where [1992] people think, well, you can't really [1993] build a real business on Upwork. It's [1995] those same people that I have now made [1997] hundreds of thousands of dollars more [1998] than because if I listen to them when I [1999] started my content agency several years [2001] ago, if I started my AN automation [2003] agency several years ago, basically any [2005] business thing that I do, I'll always [2007] try Upwork first to validate and see if [2008] it's good. I I wouldn't have made [2010] anywhere near as much money. Okay, the [2011] trick is you need to do customized video [2013] proposals just like the Loom video [2015] approach that I talked about and you'll [2016] yield five to 10 times higher response [2017] rates. If you put time and effort into [2019] solving a customer problem on video, [2021] they're so much more likely to get back [2022] to you just because there is tons of [2023] trash on Upwork. And that's how you [2025] stand out, by the way. You record some [2026] sort of customized asset and you just [2028] give a ton of value. If you're a [2029] professional, you'll make it work. 100 [2031] monthly applications can yield three or [2032] more new clients. And the numbers can be [2033] a lot better than this, mind you. Um, [2035] way way better than this, but I'm [2036] assuming that these clients are like [2037] chunky clients, you know, like maybe [2039] $1,000 to $2,500, not um, you know, like [2043] $500 clients and stuff. The way that [2044] Upwork works is you guys are going to [2045] get like a ton of like a hundred to [2047] $1,000 contracts. And a lot of people [2049] think, well, I don't want to just do a [2050] $100 contract. I want to do a $10,000 [2052] contract. That's why I'm doing AN [2053] automation. What they don't realize is [2055] the second that you've worked with [2056] somebody on one project and showed your [2057] expertise, well, now you have a client [2060] that you can reactivate and upsell later [2062] on. Much easier than a totally cold [2064] prospect. So, I've had so many gigs go [2066] from $100 to maybe $500, then scale all [2070] the way up to over $15 or $20,000 over [2072] the course of the next year as I repitch [2074] them, resold them, then ultimately got [2076] them under retainers. The way to crush [2077] it on Upwork is to optimize your [2079] profile. Just treat it like SEO. Okay, [2081] you are a website somewhere and you are [2083] ranking for the search term AI and [2085] automation. Use keywords, make yourself [2087] stand out, make the first few parts of [2089] your profile really valuable. It's like [2090] a website. It's like make your above the [2092] fold really clean and really nice. And [2094] then more importantly, get back to [2095] people quickly and you're going to do [2096] really well. Early applications to new [2097] jobs substantially increases chances [2099] because the way that Upwork works is [2100] basically if somebody's posted a job and [2102] then it's more than an hour since they [2103] posted, they probably received like 10 [2105] other applications. And if somebody's on [2106] Upwork looking to hire for a job anyway, [2108] odds are they're looking for a [2109] short-term solution or they're looking [2110] for a solution to a short-term problem. [2112] So, they're probably at their desk as [2113] the applications roll in. If you want to [2114] maximize the probability that you're [2116] going to make it, just constantly be [2117] browsing, I don't know, one, two, or [2118] three times a day. set a couple of [2120] calendar notice or reminders or whatever [2121] and then apply to the jobs that are [2122] posted within the last hour or two um [2125] preferentially. In terms of how to do [2127] it, um first step is well you need to [2128] make an Upwork profile and just optimize [2130] one. Sorry, I forgot that um up here. Um [2132] but after you make it, okay, is just [2133] search for relevant job postings. You [2134] know what I do? I literally just pump [2136] the search term automation into Upwork. [2138] I know it sounds silly, but like you [2140] just type [2141] Upwork. Then you go over here, you type [2145] automation. Okay? And then I literally [2147] have access to a bunch of automation [2149] jobs sorted by newest. From here, I can [2151] filter. Maybe I uh I want intermediate [2154] and expert jobs. Maybe I want I don't [2156] know. I'm not going to filter out the [2157] cost because a lot of people will put [2159] budget placeholders at 100 bucks. Maybe [2161] I want all of them except for ones that [2163] have 20 to 50 proposals. And maybe I [2165] just want, I don't know, maybe people in [2166] like the the Americas or something like [2168] that, higher paying or whatnot. Then I [2171] just go top to bottom and I will [2172] literally just apply to every single one [2173] of these jobs. even if they're, you [2175] know, up to a few, I don't know, like [2176] four or five hours ago, realistically, [2178] with some sort of custom proposal or [2179] custom asset. Okay, I'll submit the [2182] application. If the client does not [2184] respond, I just move on. And the way [2185] that Upwork works is if they do respond, [2187] you now have a message window. And with [2189] a message window, you can now follow up [2191] with them, which is awesome. So, if they [2193] respond once, well, and they don't [2194] respond next, you just follow up with [2196] them. It's a cycle over and over and [2197] over again. Just add them to a stack. Do [2199] uh one follow-up every two days for a [2201] month, you know, for every every person [2202] that doesn't get back to you. Easy to [2204] do. You could schedule 10 minutes in the [2205] morning the second you get on your upper [2206] profile. Just follow up with all your [2207] clients first and then make [2208] applications. Anyway, after they [2210] respond, you schedule a disco call. You [2211] submit a detailed proposal usually [2213] through the platform. Then you get [2214] hired, deliver work, and then request a [2216] review and referrals and more work. And [2218] then just cycle. It's just this all day, [2221] non-stop. Check my upper profile. I made [2222] almost $500,000 on the platform. I think [2224] $494,000 or something like that now. So, [2226] that's pretty badass. All right, let's [2227] move on to another lead generation [2229] method or client acquisition method that [2231] not a lot of people talk about and that [2232] is partnerships. What do I mean by [2234] partnerships? I mean basically you [2236] create relationships with complimentary [2238] service providers, people that are in [2239] other niches that need AI and automation [2242] services regularly or they have some [2243] sort of adjacent requirement where the [2245] client is more likely to ask, hey, I [2247] know you do websites or I know you do [2248] marketing. Um, do you know anything [2249] about this AI automation stuff? And then [2251] you position yourself as a person that [2253] can fulfill that work for them. So they [2254] say, "Well, I'm not capable of doing [2256] that myself right now, but I do know [2258] somebody. He's part of my team and he's [2259] really, really good that I can connect [2261] you with." Does that make sense? Okay, [2262] great. And then usually that company [2264] will get a slight referral or affiliate [2266] percentage for that. Now, I'd rate [2268] partnerships, we go top to bottom here [2270] across all the other lead generation [2271] mechanisms as a B. Um, because this is a [2275] lot less straight line of a path than [2277] these three up here. So, cold [2279] email/Loom and then Upwork and then much [2282] less straight line path than I think [2283] communities and LinkedIn DMs, but it's [2285] still something that I recommend that we [2286] all set up given enough time. Okay, the [2288] issue with this is this is how most [2290] other people get leads if I'm honest. [2291] Most other people do not have a defined [2293] lead generation mechanism where they [2294] like can, you know, go out and then send [2296] a thousand emails and then get three [2297] clients or something. So, they sort of [2298] have to rely on referrals. They have to [2300] build their networks and partnerships [2301] and stuff. And generally, this also just [2303] puts you in a much more vulnerable [2305] position if you do want to scale because [2306] you have to be very nice to these [2307] providers. You kind of have to, you know [2309] what I mean? It's just it's just a [2311] little bit much. Um I I much prefer the [2313] abundance approach, but um yeah, I would [2315] be remiss if I did not at least mention [2316] this. So, you create lead exchange [2318] relationships with complimentary service [2319] providers. Okay. A good list of [2321] partners, web design, marketing, SEO, [2323] consulting firms. A couple of other ones [2325] might be like B2B agency. I mean, really [2326] any sort of B2B agency, right? Right? I [2329] mean, so that kind of falls under web [2330] design, marketing, SEO, but um you know, [2331] like like PPC, any sort of PPC, B2B [2334] agency, any sort of SEO, any sort of [2335] CRO, some e-commerce companies can be [2337] good for this. Basically, they have to [2338] work B2B. That's kind of like the [2340] requirement, right? But um what you do [2342] is you set up either a formal revenue [2344] share arrangement where it's like they [2346] um white label your work, as in they [2349] say, "Oh, yes, I can do this. Um you [2352] know, we have a team member of ours [2353] that's really good at it." And then they [2354] pretend like it's their company that's [2356] fulfilling the work. or they just do a [2359] pure affiliate or referral partnership [2361] like I was telling you about before [2362] where it's like clear that this is a [2363] different company. Oh yes, I know [2365] somebody that could do the work and then [2366] they send it out. Both of these are [2367] fine, but um you know I I much prefer [2369] doing the referral because it's like a [2371] oneanddone deal and I don't have any, I [2374] guess, obligations to represent the [2376] client's company in this specific way. I [2378] can represent my company however the [2379] hell I want. Um usually make a little [2381] bit less money that way, but it is what [2382] it is. You get pre-established trust, [2384] shorten sales cycles as a result. My [2387] recommendation is after you're done [2388] doing the S and A tier lead generation [2391] methods, set up some sort of partnership [2392] by reaching out to 10 or 15 potential [2394] partners, look in your network first. [2396] After you're done looking in your [2397] network, look in like the community [2398] network that you've established. Better [2400] if you even work with B2B agencies, to [2402] be honest. Then afterwards, maybe you [2403] could do some cold calling or cold [2404] outreach or just get a list of all the [2406] top web design firms or SEO firms that [2408] you want to work with and then send them [2409] cold emails. You need to regularly check [2411] in and give and receive clear [2412] documentation to get good results. But [2414] yeah, you can generate 30 to 40% of your [2416] revenue. If you're like a big agency and [2417] you have established partnerships that [2419] you've been able to build over the [2419] course of the last year, you can make a [2420] fair amount of money. Don't say no to [2422] partnerships. And in fact, some [2423] companies actually run their entire [2424] business through partnerships. They make [2425] way more than that. It's not, you know, [2426] 30 to 40%. It's like 100% of their [2428] money. And that's okay. I just wanted to [2430] point out to you that I much prefer like [2431] the scalable consistent approach even if [2433] it's not necessarily the the biggest um [2435] right off the bat because I just prefer [2437] not having my income tied to somebody [2438] else. also prefer to like just tying it [2439] to myself. Anyway, how do you actually [2440] do it? You identify a big list of [2442] complimentary service providers. You [2443] build some relationship with them before [2444] pitching. You provide value first and [2445] then you propose a formal partnership. [2447] You say something like, "Hey, I know [2448] that I get a lot of people asking me for [2450] web design consults and stuff like that. [2452] Would love to send them your way. I know [2453] that you also get a lot of people ask [2455] for AI automation or systems. Do you [2456] want to formalize a relationship? You [2458] can send me a percentage and we can make [2459] something like this happen. We can both [2461] mutually benefit because we both trust [2462] and like each other's services." Answer [2464] to that is yes. You make a simple [2465] partnership agreement, develop whatever [2467] client materials that we need, email [2469] templates, email assets, whatever. Hey, [2470] just looping in Nick, who's our guy at [2472] insert company. Um, and then have some [2474] sort of regular strategy meeting. I [2475] mean, you can just do this once a month [2476] or whatever, but you know, a lot of [2478] people will miss this and when they [2479] don't have any sort of regular contact [2480] with the referral or affiliate [2481] partnership, usually those fall off the [2483] map. So, what I personally recommend is [2485] just do this, you know, once every one [2487] to two months or hell, maybe even do [2489] this once every quarter, basically like [2490] quarterly partnership meetings. Still, [2492] um, I think one to two months is [2493] probably better. Anyway, do some sort of [2494] regular strategy meeting with these [2496] people so they don't like fade into [2497] obscurity. And then uh yeah, you know, [2499] even if somebody doesn't accept the [2500] partnership, just try a different [2501] approach later. I'm sure they eventually [2502] will so long as you're continuously [2504] giving value. Okay. All right. We got a [2505] couple left, just two. The first is [2507] Dream 100 Outreach. And the last one is [2510] X and LinkedIn content. So, what is [2512] Dream 100 Outreach? Dream 100 Outreach, [2514] to make a long story short, is basically [2515] where you guys will find creators and [2518] people that you really like and have [2520] wanted to work with for a long time, [2521] people you really respect. So maybe in [2522] your case it' be somebody like me or I [2524] don't know somebody like Dan Martell or [2526] Alex Herozi and you make like a big list [2527] of like the top 100 people that you want [2529] to reach out to and that you want to you [2530] want to contact and whether or not you [2531] want to work with them or do business [2532] with them. Maybe you just want to have [2534] some candid email back and forth with [2535] them or something. The idea is you make [2536] a list of 100 people and then you [2538] actually just like aggressively try and [2540] have some sort of contact with them. [2541] Okay? And this takes way more time than [2543] cold email outreach. This is essentially [2545] cold email but it's like hyperspecified [2547] cold email. takes way more time than [2548] cold email, but you typically get to [2550] build much better relationships and [2551] results uh because of that. Okay, so [2554] where would I rate uh Dream 100 [2555] Outreach? I would rate Dream 100 [2557] Outreach as B. I treat Dream 100 [2560] Outreach as similar to partnerships, but [2562] because you're usually working with much [2564] bigger people that are a lot more [2565] established and they might not [2565] necessarily need your services, you're [2567] probably not going to deliver like [2568] direct revenue from this. Okay, it's [2570] great to have and you can build like a [2572] really good network that will make you [2573] millions of dollars in the long run, but [2575] I don't actually recommend starting with [2576] Dream 100 Outreach like some other [2578] people do cuz a lot of people have been [2579] talking about this recently. So, I'm [2580] going to touch on I don't actually [2581] recommend Dream 100 Outreach as like [2582] your first go. Um, I'd much prefer [2584] talking to people kind of like, you [2586] know, if this is a big hierarchy top to [2588] bottom and this is me, I'd much prefer [2590] talking to people that are over here as [2592] opposed to over here if that makes sense [2595] because I'm sort of fighting an uphill [2597] battle here and they're just a lot less [2598] likely to get back to you. And I think [2599] feedback loops are really important. [2600] Okay, so yeah, um this combines social [2604] engagement with personalized email. Um [2605] one thing that I've seen work really, [2606] really well that actually just happened [2607] to me a little while ago was basically [2609] somebody that wanted to work with me on [2611] LinkedIn um actually did a super deep [2613] dive breakdown of my entire client [2616] acquisition funnel. Then he posted it on [2618] his own LinkedIn as a piece of content [2620] and a roast. It was incredible. Then he [2622] sent it to me over email and I thought [2624] that it was just a banger piece of [2625] content. He got like 50 people liking it [2627] and then that made me think more highly [2629] of him because I'm like, "Okay, now he [2630] has an established network." Um, and [2632] then he also just uh had a bunch of [2634] people being like, "Dude, you got to [2634] reach out to Nick. Dude, Nick's really [2636] cool. Hey, I've actually heard of Nick. [2637] No way. I might be able to connect you [2638] and and stuff like that." So, um, I [2640] think that's a much better way of doing [2642] the Dream 100 outreach than a lot of [2643] other people are doing. And, you know, I [2644] think that's probably a good way that [2645] you could combine both social media and [2647] like built-in social proof with [2649] personalized outreach. I got to get back [2650] to that guy. Actually, I'm thinking [2651] about it. I don't think I responded to [2652] him yet. Um, custom video audits [2653] dramatically increase response rates. [2654] Like I was talking about a moment ago, [2656] we got much higher time investment, but [2657] substantially better conversion. Works [2658] really well for high ticket automation [2660] services. So very, very high ticket [2662] stuff. You know, Alex Rosie was looking [2663] for an automations just a couple of [2664] months ago. If you pitched him with that [2666] at the right time, I imagine you [2667] probably could have made something [2667] happen. I did not, alas, but what are we [2669] going to do? The issue is it requires [2670] genuine value creation. You can't just [2672] template solutions and you definitely [2673] can't spam these people. If any of these [2675] people get a whiff that you are spamming [2676] them, they are not going to want to work [2677] with you. Aka that you are pumping them [2679] into a sequence. They're never going to [2680] want to talk to you again. That's just [2681] how it is. I don't know why we deal with [2683] templated and AI automation solutions [2685] with the the work that we do quite a [2687] bit. So, it's sad for me to say it, but [2689] that's the truth. You have to make all [2690] of your outreach manual and [2692] extraordinarily genuine, or at least you [2693] have to be so good at building these [2694] things out that somebody like me who's [2696] worked with the stuff still wouldn't be [2697] able to notice. Okay. Then, yeah, just [2699] like the uh Loom video outreach, [2700] multiple touch points across different [2702] channels massively increases the [2703] effectiveness. How do you do it? You [2705] basically just make a Google sheet list [2706] called your dream 100. And you start [2707] with just their names. And then what you [2709] do is you just have a bunch of other [2710] columns like their Facebook, their [2711] Instagram, their X, their LinkedIn. You [2714] just go, you know, a column for [2716] everything. Ideally, then you have one [2717] for email. Then you set aside some time [2719] and then you find all of these profiles. [2721] Then you research the prospect deeply. [2723] You might have like a 5minute thing [2724] every morning where you just like read [2725] through, add as many of them in social [2727] media as you can, add them to your feed, [2728] and then just interact with all their [2730] posts and just comment. And maybe, who [2731] knows, maybe there's a chance that [2732] they'll actually start recognizing your [2734] face. Like I recognize the face of [2736] people that comment and engage with my [2737] content quite a bit. If I see them come [2739] up three or four or five times, I'm [2740] like, "Oh, hey, there's Peter. Oh, hey [2741] there's Sally. Oh, hey, there's there's [2743] John." If I then get an email from [2744] Peter, Sally, or John, obviously, I'm a [2746] lot more likely to get back to them, [2747] right? This stops. I'm sure this is [2748] going to stop working for me at some [2749] point when it hits like a million or 10 [2750] million or whatever, but it works for [2752] now. And then after that, you build a [2753] value bank. Create custom audits and [2755] recommendations that are hyper tuned to [2756] that particular person. Then send the [2757] personalized outreach. If they respond, [2759] book a disco call, present the full [2761] solution, and close the deal. Or just [2762] ask to be in their network. And if they [2764] don't, multi- channelannel follow-up, [2765] continue your engagement, and then just [2767] start the loop over and over and over [2768] again. All right. Okay. Let us now talk [2770] about the last bit of outreach, which if [2774] I could find it was all the way over [2775] here, top righthand corner, which was X [2777] and LinkedIn content. Okay. So, this is [2780] actually creating content on these [2781] platforms um that are not vid that's not [2783] video content. Okay. Where would I rate [2786] this? As of the time of this recording, [2787] I would rate this as a C. Why? Well, as [2791] I'm sure you can imagine, many of the [2792] same issues with short form content, but [2793] they're sort of um expounded upon [2795] because video short form and long form [2797] is actually better than this. The reason [2798] why it's expanding upon this is because [2800] X and LinkedIn content, for the most [2801] part, you can do videos and stuff. Don't [2802] let me um convince you otherwise. For [2804] the most part, when people think X and [2805] LinkedIn content, they think text [2806] content. Um text content is quickly [2808] becoming very saturated because large [2809] language models now afford anyone the [2811] ability to create thousands of [2812] reasonably high quality text posts on [2814] any subject they could ever possibly [2815] want in like 5 seconds. You still can't [2817] really do that with video. So there's [2818] more of an opportunity for you to stand [2819] out in video. Remember those megaphones [2821] I showed you earlier? Yeah, just imagine [2822] a 100 times that many megaphones. [2824] Anyway, you get direct access to [2825] business decision makers, which is cool. [2826] And I've talked to a lot of millionaires [2828] on X before I was a millionaire. And [2829] that was nice, right? You can actually [2831] just bridge the gap kind of like an [2832] email inbox. It's like an email inbox [2833] for the world. And we also have higher [2835] intent audience than entertainment [2836] platforms like IG, YouTube, and stuff [2838] that are typically more infotainment. [2840] Definitely Tik Tok. Engagement with [2841] others content allows you to drive a lot [2843] of your results. And then you can also [2844] build in public with real case studies. [2846] I'm not saying that you can't win with [2847] this stuff. I'm just giving you my own [2848] tier list on what I would do if I were [2850] at the start line of my automation [2851] agency. Would I focus on this? No, I [2852] would not. I'd rate that as Ctier. [2854] Consistent posting obviously wins. You [2855] get to relationship build, although it [2857] does take a fair amount of time. And [2858] then if you are very specific about how [2860] you position, if you position yourself [2861] as the AI automation guy for X, Y, and Z [2863] or B2B growth systems girl for ABC, you [2866] know, if that's your niche, you're going [2867] to do a lot better than if you're just [2868] like the AI automation person. So, the [2870] cool thing is that's an approach a lot [2872] of people take on X and LinkedIn. become [2874] the blank dude, the blank chick. They [2878] just niche down super hard, become the [2880] thing synonymous with the thing they're [2881] talking about, and that really helps the [2883] growth. So, there are a lot of people [2883] that are doing the same formulas, but I [2885] think I'll leave it at that, and you [2886] guys can check that out in your own [2887] time. Basically, how you do it, you [2888] create value content, engage with your [2890] target audience, build relationships [2891] through comments, become a thought [2893] leader in your field if possible, and [2894] then finally receive some sort of [2896] inbound inquiries. Also, you can follow [2897] up with DMs, right? Ideally, you want to [2898] combine the two. Hey, I saw that you [2899] like my post on XYZ. What's going on, [2901] man? Love your content. move [2902] conversations to DM, schedule a disco, [2904] and convert to client. You notice that [2905] literally every one of these involves [2906] scheduling a disco call. There's a [2908] reason for that. It's because that's how [2909] you do things in an automation. That's [2911] how the business model works. You [2912] schedule disco calls. So, if you guys [2913] aren't already scheduling disco calls, [2914] if you're trying to build some other new [2916] method or something like that to to [2918] close clients, I'd highly recommend you [2919] at least just revisit the disco call [2921] stuff. And I mean, if it's working, keep [2922] doing the thing that's working, right? [2923] And a lot of people are obviously doing [2924] the the disco call structure. Awesome. [2926] Hopefully, you guys appreciated that [2927] video. had a lot of fun ranking every [2929] client acquisition method for AI and [2931] automation agencies. If you guys want to [2933] learn more about these specific AI [2934] automation agency acquisition methods, [2936] definitely check out Maker School, which [2938] is my 0ero to1 community. We're just [2940] coming up on 2,000 members as of the [2941] time of this recording. We've grown [2943] bigger, better, and faster than I ever [2945] could have imagined. Now we're actually, [2946] I think, somewhere in the top five on [2947] the school games leaderboards, which is [2949] blowing my mind. Um, but I increased the [2950] price every 100 members just to [2952] represent the added value. So if you [2953] guys are on the fence and you wanted to [2954] join, I think it's over 100 bucks a [2956] month. Now, keeping in mind we started [2958] at uh low 40s. Um, aside from that, if [2960] you already have an established [2961] business, you want to make it grow more, [2962] definitely check out Make Money with [2963] Make, where I take a working business [2965] and then I help you scale it up. AI [2967] automation agencies obviously fall under [2969] that umbrella, but we also help a lot of [2971] other business models as well. As long [2972] as you found some sort of product market [2974] fit, delivering or developing services, [2976] you are free to come in and join. I just [2978] increased the cap to 500. Um, Concomit [2980] with a big price increase as well, just [2981] for my own sanity. Otherwise, please [2984] like, subscribe, do all that fun YouTube [2985] stuff. I'll catch you guys in the next [2986] video. Really appreciate all your [2987] comments and anybody that's made it to [2988] the end, you're a real one.

Video: https://www.youtube.com/watch?v=52yOx4nAGM8
Title: I Sold AI Automations for 749 Days: What I Wish I Knew Day 1
[0] I've sold a automations for 749 days and [2] now I make over 170 grand a month. Here [4] is literally everything that I wish that [6] I knew on day one when I got started. [8] I've made basically every mistake under [9] the sun and my hope is by doing so you [11] guys aren't going to have to. So I'm [13] going to deliver this blackboard style [14] in the way that I normally do. Let's [16] start with the biggest which is the [18] reality of AI and automation. And [20] automation sounds really fancy. It [22] sounds really new. It sounds very [23] special. Has the word AI and automation [25] in it. How cool. But the reality is AI [27] automation is just a business. The exact [28] same rules apply to an automation that [30] apply to literally any other business [32] out there. Whether it's a plumber, [33] whether it's your aunt's flower shop [34] down the street, whether it's NASA, you [36] know, whatever it is, the same rules are [38] going to apply. You're going to have [39] some sort of lead genen at the top end. [41] Okay? Then you're going to have some [43] sort of sales to convert those leads. [44] Then you're going to have some sort of [45] fulfillment to fulfill the promises that [47] you made during the sale. Then finally, [49] hopefully, you'll have some sort of [51] mechanism to retain people. And once [52] they retain people, you'll either cycle [54] them to um sales or you'll go right back [56] to fulfillment, eliminating that step [57] completely. So, this isn't just AI and [59] automation. This is any business model. [61] The only thing that's really unique [62] about AI and automation is this part [64] right over here. This fulfillment step [65] is usually, you know, the building of [67] systems that solve particular business [69] problems. Okay? I've said this in a [70] number of my videos, but I think it's [72] really important because there's so many [73] people getting into the space nowadays. [74] This is just a business like any other [76] business. It's just a specific sort of [78] thing that we're selling. So everything [80] that you've been able to learn about [82] other businesses applies here as well. [84] The only thing that it doesn't apply to [86] is this section. Okay? So anything [88] you've ever learned about lead genen, [89] you you can leverage it in a automation. [91] Anything you've ever learned about [92] sales, you can leverage it. Anything you [94] want ever learned about retention, you [95] can leverage it. The only real thing [96] that's a little bit different here is [98] just the way that you build systems [99] relative to the fulfillment of some [100] other service. Let's say marketing or or [102] websites or something. Okay, that's the [104] biggest thing. So, just to get that out [105] of the way, now that that's good, we can [106] actually talk um real things that, you [108] know, I I wish that I I actually knew on [110] on day one. And the first is that [112] business value is a lot more important [113] than like the the technical value of the [115] solution. Most clients don't actually [116] care about the systems I deliver. It's [120] really interesting because I I brand [122] myself uh as like a systems person, but [124] the reality is most clients don't [126] actually care about systems, right? they [128] couldn't be damned whether you're [129] building a cool AI automated system to [131] do it or you're sending it to some [133] offshore agency to have it done for you. [134] The only thing they really care about [135] are the results. Okay? They care about [138] the results. Uh they care about the cost [140] in order to deliver those results. [142] Basically, if you look at these two, [143] they they care about the return on [145] investment. So whether you do it through [147] some fancy AI and automated system or [149] you do it yourself working 45hour days [151] somehow or you you know have some some [154] blend of both human and automated means [156] in order to fulfill something. Customers [158] don't actually care about the system [159] that you built. Um your make.com or n [161] automation is awesome but like nobody [163] actually really gives a [ __ ] if I'm [164] being real. What they care about is they [166] care about the return on investment. If [167] they spend $1,000 with you, how much [168] money are they going to make? Right? If [169] they invest $10,000 on the system, are [171] they going to make over $80,000 or [172] whatever their their ROI threshold is? [174] So, I'm saying this because I've had so [176] many situations in my life where I have [178] frontloaded the technical aspect of it [179] and I've just talked a tech all day. [181] Cool system, cool model, here's what the [183] flow is going to look like. Here's what [184] all this stuff does. They don't actually [186] care about that, right? When you're [187] selling a service to a business B2B, [190] you're selling to another business and [191] businesses really talk just in terms of [192] of dollars and return. Next, focus on [194] fundamentals, not fancy tech. I can't [196] tell you how many months of my life I [197] spent chasing down various rabbit holes [199] to learn new technologies. Can't tell [201] you how many months of my life I spent [202] learning a specific tool stack cuz I [204] thought the specific tool stack was [205] going to be amazing. The reality is any [208] noode or any automation or hell even any [210] like programming platform cursor or VS [213] code or whatever the these all do the [214] same thing. Okay, these allow you to [217] build systems in the cloud for the most [219] part that accomplish some sort of [221] customer problem. So all you need to do [223] is just learn one of them. They're all [225] the same at the end of the day. Sure, [226] some will allow you to do things easier. [227] Some will allow you to do things for a [228] little bit less money. Some allow you to [230] do things faster. That's totally [231] understandable, right? Naden versus Make [233] versus Zapier, Lindy, all those other [235] platforms. They all have their pros and [236] cons. But all you really need to do in [239] order to check off that little box of [241] the um business side of things that we [244] talked about here, this fulfillment [245] stuff, all you need to do to check this [246] is you just need to learn one. So, if [248] you really want to make money with this [249] stuff, do not bounce around every new [251] fancy drop, okay? Just focus on [253] mastering one platform or one solution. [255] Get really good at it. Spend three whole [257] months in it. Pre-commit 90 full days. I [259] promise you uh you won't regret it. When [260] you get really good at that one thing, [262] you use that for all the subsequent [263] builds. You'll be faster, more [265] efficient, um the client will be [266] happier, and you'll be able to focus [267] again on the things that actually [268] matter, which is your ability to drive [270] business value, not technicals. In a [271] similar vein, clients care about [272] results. They don't care about how you [273] got there. So, this is really [274] interesting to me because I used to get [276] in the habit of trying to like justify [277] all the work that I was doing to [278] clients. And this is a really big [279] problem when I was starting out. You [281] know, like I would feel like a client [282] wasn't really paying me enough money. I [284] thought, you know, well, I did way more [285] work than $500 worth of a project. I [287] want to get paid more for it. The [288] reality is uh it doesn't matter how much [290] work I put in to get something done. [291] What matters is what we agreed on [293] initially and then the value that I [294] drive. If I'm not driving value because [296] I took a very circuitous pathway to get [297] to the system I built for a client and [299] it doesn't matter. Client doesn't care. [301] Clients again they care about dollars [302] for the most part. They care about the [305] deliverables. There's a difference [306] between applied systems and academic [308] systems. So a lot of people get into AI [309] automation thinking that they're going [310] to learn a lot about artificial [311] intelligence. They're going to get to [312] play around with like models. They're [314] going to get to play around with [315] training. The unfortunate reality is um [317] what we are we're basically applying [319] systems that other people have built. [320] We're not building the AI. We're not [322] building the super the super cool chat [323] GBT consumer model. We're taking these [326] technologies that other people have [327] basically you know spent their entire [329] lives theorizing and writing on you know [331] uh chalkboards about and doing all this [333] complicated math over and then we are [335] asking ourselves how can we apply this [337] technology into a business and actually [338] have that produce a demonstrable ROI for [340] the business. You know if you really [341] want to make a ton of money with the [342] services model I'm showing you guys and [343] a bunch of other people on YouTube are [344] showing you guys. It's not actually [345] about like developing some cool [347] proprietary new system. That has nothing [348] to do with it. It's just how can we take [349] systems that already exist or how can we [351] take tools that already exist and [352] incorporate them into systems that solve [354] a particular customer problem. Finally, [355] you just sell solutions. You don't sell [356] tech. So, you solution obviously begs [359] the question, in order for there to be [360] solution, there has to be a problem. So, [361] if you get good at selling solutions, [363] not technology, you know, just a wider [365] answer to somebody's prayers, you will [367] virtually always guarantee yourself an [369] income source. You don't have to worry [370] about any of that. I'm going to show you [371] guys two paths that I see some new AI [372] automation agencies go down. Okay. Um, [374] basically the first path focuses on tech [376] and the second path focuses on business. [378] So if you focus on tech like I see a lot [380] of people that enter my communities and [382] my programs and leave comments on my [383] YouTube videos do unfortunately um you [385] know you're going to be delivering [386] extraordinarily complex solutions. These [388] complex solutions are going to take a [390] lot more time for you to deliver and [391] then people are going to subjectively [393] see them as a lot less valuable. So it's [395] going to be more time. It's going to be [396] less pay. You're going to spend your [398] time working on these academic systems [399] or trying to like build something really [401] cool that doesn't really matter anyway. [402] You're going to spend a bunch of time [403] trying to make it technically perfect, [404] which the clients don't care about. And [406] you're going to grow really slowly and [407] you're going to scale in a very limited [408] capacity. Instead, if you take a [410] business focus, like I recommend you do, [411] not the tech focus, you're going to [413] focus on simple solutions that work. [414] You're going to focus on literally [415] taking automations from my channel, [417] maybe a couple of other people's [418] channels that talk about using this [419] stuff specifically for business [420] purposes, where you're going to, you [421] know, browse through templates and and [423] look for ways to solve problems using [425] the templates, not look for templates, [426] and then try and figure out the problems [428] afterwards. You're going to find simple [429] solutions that work that aren't freaking [430] rocket science. Okay? Then you're going [432] to apply them to real businesses. You're [433] going to focus on client results. What's [435] the deliverable they get? What's the [436] ROI? Then ultimately, you're going to [437] grow a lot faster and scale your [438] business like this as opposed to [440] something like this. So be blue. Blue is [442] where we're at. Blue is what I want you [444] guys to be. That's sort of number one. [445] Number two is a big mindset shift that I [447] had about halfway through running my [448] automation business because listen, I'm [450] not like a mindset or like a belief [452] guru. Really, I focus just on how do we [453] strategically and tactically implement [455] systems like this into businesses and [456] then how do we make money selling those [457] things, right? But I think there is [459] something to be said about mindsets and [460] how they help you do that. So I had a [463] big mindset shift. Basically, I've come [464] to realize that your beliefs determine [465] your ceiling. Okay? I used to think that [467] was your inherent capability that [468] determine your ceiling. And I thought [470] there are some people out there that are [471] just better. They're faster. They're [473] more efficient. They're more [474] intelligent. They have more business [475] experience. They have more connections. [476] They have more of all this stuff. Okay. [478] What I've unfortunately had to realize [480] um and that I wish I had internalized [481] earlier is that stuff. It's just like if [483] you're lining up in a marathon and you [486] know somebody fires the gun so everybody [487] starts. All of those things that I [488] talked about are advantages that will [490] buy that person an additional 0.5 [492] seconds off the start line. That's it. [494] That doesn't mean anything. Okay? 5 [496] seconds in a marathon means absolutely [498] nothing. Sure, it'll help them get going [500] from their perspective. They're going to [501] be ahead of you for a real long time. I [503] guess you know half a whole second or [504] whatever. But the people that actually [506] make it, the ceiling of how fast you go [508] or how far you can run is entirely based [510] off your beliefs. If you believe that [512] making a $10,000 a month revenue or [514] income or whatever is very difficult or [516] it's impossible or or whatever, it is [518] going to be very difficult or near damn [520] right impossible to do so. If you [522] believe that dragging and drop modules [524] across a screen and working from your [525] laptop in, I don't know, Bali or [527] Indonesia or Thailand or Australia, [528] where wherever the heck you are, [529] Australians probably don't want to work [530] in Australia, but you guys get my point. [532] Then it's going to be very difficult to [534] make money dragging and dropping modules [535] across the screen and working from your [536] laptop. But if you treat it as no big [540] deal, if you see that there are [541] thousands if not millions of other [542] people out there that are doing the [544] exact same thing, and if you can find a [544] way to convince yourself that it's not a [546] big deal really to be making a ton of [548] money or to be reaching a lot of people [549] or to be implementing cool technologies [551] and cool businesses, then the likelihood [553] that you actually achieve that thing is [554] so much higher. Okay, I see this at [556] basically every top performer in their [558] field, whether it's a politician or it's [560] an athlete or it's a business person. [562] The work that they do, they see as just [563] really objectively not a big deal. Ever [565] since I adopted this, I started being [566] like, well, what am I really doing at [567] the end of the day? I'm doing some lead [568] genen activities. I'm doing some sales [570] calls. I'm not like hitting the [571] pipeline, you know what I mean? I'm not [573] like hustling my ass off in order to do [574] this. I'm like working essentially like [576] a desk job that I built for myself here. [578] The second that I started doing that, my [579] income shot through the roof cuz my [582] belief was, hey, this is no big deal. [584] And so, if you really just want that [585] sort of unflapable, unfasable [587] confidence, rewire your brain to think [589] that what you're doing is just not [590] really a big deal. Cuz objectively, it [592] isn't. We're not exactly hunting tigers [594] in the savannah anymore, right? We're [595] sitting down. We're trying to take tools [597] that other people that are [599] extraordinarily intelligent and driven [600] and motivated have have have built and [602] sweat and and bled over, okay? And then [604] and then take those and implement them [605] into businesses and actually just [607] produce an ROI. What we're doing is [608] really not that incredible or amazing or [610] whatever. Um, and and the amazing thing [612] is if you think about it from that [613] perspective, you can still build the [615] best lifestyle on planet Earth for [617] yourself despite the fact that it's [618] nothing super special, which which is, [620] you know, what I think is actually [621] special. Okay. Next big thing is to [624] focus on revenue generating activities, [626] not busy work. I spent the big bulk of [628] my first few months as an AI automation [629] agency focusing on busy work. I focused [631] on stuff like, hey, I got to get the [633] perfect website. Hey, I need to print [636] out business cards. [638] Hey, I need to uh post on Facebook. Hey, [642] I need to show activity on Instagram and [644] LinkedIn. Hey, I need to go to um I [647] don't know, networking events or [649] something. Okay. And I guess what I'm [650] trying to say is I was um I was spending [652] time on literally everything except for [655] work. Um you know, I was trying to make [657] my stuff look pretty. I was trying to [659] make myself look legitimate and [660] professional. Um but actually, the more [662] that you the more time that you spend [663] trying to look legitimate and [664] professional, the less likely you're [665] actually to be legitimate and [666] professional. Actually, the guys that [667] end up being legitimate and [668] professional, they always start not [669] looking legitimate and professional at [671] all because they just get going and then [672] they start they have like a cardboard [673] box for an office and they they start [675] talking to homeless people on the street [676] to try and sell them services. Do you [677] know what I mean? Like like that's the [678] way that you make it. Okay, if you have [680] that sort of mindset, if you focus on [682] revenue generating activities, a read [683] talking to customers here instead of [685] busy work, it is inevitable that given [686] enough time, you will make it. Uh on [688] that note, most revenue does not come [689] from glamorous activities. I used to [690] think that, you know, the best and [691] coolest companies on the planet earth [693] had the most amazing and intricate sales [695] funnels. My salesunnel here is the [697] simplest legitimately. It was cold email [699] upwork. I did a little bit of community [700] posting. I did some like cold DMs. Okay, [702] that's it. You just do the most boring, [704] unsexy, unglamorous activities just [706] repeatedly for a long enough period of [708] time and then you make it. So, if I just [709] focused on that literally from day one [711] instead of day 100 like I eventually [713] realized, I would have been so much [714] further ahead. It would be crazy. On [715] that note, you know, we talked about [716] doing things a really long time. [717] Successful automation entrepreneurs [719] aren't special. They're consistent. So, [721] just repeat after me. Humans are [722] persistence hunters. This is really the [724] one thing that makes us stand out. Okay, [726] when we have a goal, it is not our [728] ability to sprint at the goal that makes [730] us really good at achieving the goal. [731] It's just the ability to dog after it [733] for long enough. Even if you're walking [736] or jogging or going really slowly or or [738] from your perspective, things are barely [739] changing. If you just continue doing it [740] for long enough, you continue doing [741] those boring, unglamorous, unsexy lead [743] generation activities for 2 years, [745] you'll eventually make it. Yeah. On that [747] note, what I've come to realize is that [748] in order to really crush it, I've needed [749] to treat business like a game with [751] specific levers to pull. Now, I make a [752] ton of analogies. I used to play a lot [754] of Runescape as a kid or like Maple [756] Story. I used to play like obviously a [759] lot of competitive shooters like Call of [760] Duty and stuff like that. Like I think a [761] large portion of my audience, which is [762] primarily male and between 20 and and [764] age 40 probably understands these video [767] games have ways to be exploited. They [769] are exploitable. You if you're playing [771] Super Smash Brothers with your friend or [772] whatever or some arcade fighter, you [774] know, Street Fighter or Tekken or [775] whatever, if you press a certain [777] combination of buttons in rapid [778] succession, it's kind of like an [780] exploit. It's like a hack, you know, [781] like the enemy can't react because [783] they're just too busy getting hit with [784] the fastest little tiny punch all day. I [786] forget the character. Uh who is it? Like [788] I don't know, falcon punch guy. Uh the [790] point I'm trying to make is there's like [791] a certain combination of moves that just [792] make you extraordinarily likely to beat [795] your enemy and everybody on planet Earth [796] just says, "Well, that's cheating." [798] Well, that's exactly what you need to do [799] in business if you want to get ahead. [800] You need to do those sets of moves that [803] everybody else is like, "A thanks, [804] you're cheating, man. What are you going [805] to do? You're going to make an Upwork [806] profile? That's a that's not a business. [808] What are you talking about?" You need to [809] take the lowest hanging fruit and you [811] just need to attack it consistently and [812] systematically. You just need to spam [814] the A button or the X button or whatever [816] controller you're playing on or you know [819] my other analogy is a casino. If you [820] wander into a casino and you see a slot [823] machine and every time you pull this [825] little lever, it just goes 777 and [827] you're like, "Oh my god, I'm rich. I [828] won." But then, you know, instead of you [831] giving a getting a million dollars, what [832] you do is you make $1. Okay, it's not [835] exactly glamorous. Okay, you made a [837] dollar. But what if this this machine's [839] rigged and every time you pull you make [840] a dollar? Wouldn't you despite how much [842] money I mean, you know, if you're a [843] quadrillionaire, probably not. But for [844] for most reasonable people, wouldn't you [846] just sit there and just pull that lever [847] all day? Like even if it just makes you [849] a dollar and I mean, you know, your [850] arm's getting kind of tired. I mean, [851] it's pretty consistent, right? Like it's [853] boring and it's like I could do here I [854] could do this for 17 hours and, you [857] know, I'd just be looking at the same [858] screen all day going 777. But you know [860] how much money you'd make by the end of [861] that day assuming you pull that lever [863] every 10 seconds or whatever? You'd be [864] insane. So this is basically the way [866] that business works. cuz you will find a [867] slot machine with like a broken lever [869] that just rings 777, makes you win every [871] time and and it pays a slight little bit [873] more money than all of the other slot [875] machines. That's what you do. So, just [877] treat it like a game. Treat it like [878] Super Smash Bros. or Call of Duty. Go [880] spawn camping, you know? Treat it like [882] Runescape, right? Like fish for the [884] lobsters in the specific optimized way [885] and you will win. Personally, I think [887] that a big issue that a lot of people [888] have with businesses is that they focus [890] too much on like the intentionality and [892] their mission and the values at the [893] start line before they've even like [894] played the game for a little bit. And [896] like when you're they're they're trying [897] to like design the perfect life before [898] they even know what it is that they can [900] do and what they can't do, right? Within [901] the constraints of the game. So I was [903] kind of like that. I started to really [904] take off the second that I just zoomed [906] out and was like, "Wait a second. Why [907] don't I play the game a little bit and [908] then I'll kind of feel out what I want [909] my perfect life to look like after doing [911] that for a bit." Um, so go figure. Okay, [913] so real success usually looks really [915] boring from the outside. Now I kind of [916] touched on that with the consistency [917] aspect and like the 777, but it does [919] look pretty boring from the outside. And [920] then small consistent actions are way [922] more powerful than spread dy heroic [924] efforts. So, I meant to write sporadic. [926] So, is what it is. Can't win them all. [928] If this is your starting point, you guys [930] are right over here and you guys kind of [931] want to run through and determine what [932] are some of these revenue generating [933] activities. I guess what I'm trying to [934] say is when I build these out, I [935] basically say what are two possible [937] universes or futures. If you focus on [938] non-revenue activities or you focus on [940] revenue activities, if you focus on [941] non-revenue activities, you're going to [942] spend years working on the perfect [944] landing page. You're going to spend [945] months telling all your friends about [947] what an amazing business opportunity [948] this is and about all your ideas for [949] this angle and how we're going to [951] implement X, Y, and Z and do this [952] amazing market. Okay? Nothing's ever [953] going to come out of it. you're going to [954] be busy as hell 247. You're not going to [956] get any results because you're just [957] afraid to like bend over and pick up the [959] dime you see on the street because you [961] think it's not worth your time. Or you [962] feel afraid to sign up to the freelance [964] platform that everybody looks down upon. [966] Or you feel afraid to to pull the lever, [968] you know, a bunch even though [969] everybody's like, "Well, that only gives [970] you a dollar, right?" These are all [972] self-reinforcing limiting beliefs. If [974] you think something is hard, it's more [976] likely to be hard and it'll force you to [977] stagnate. And if you contrast that with [979] revenue based activities like talking to [980] potential clients. So you know I [982] mentioned a bunch here but like cold [983] email is really big right now which I'll [984] touch on a little bit more later. [986] Obviously Upwork is one of my faves but [988] you know there are a bunch of other [988] ones. Fiverr top and so on and so forth. [991] This is a really cool one in Europe that [994] is starting to pick up some traction. I [995] think it's called Malt Malt. Yeah. [997] Malt.com. So if you just get on these [999] things that a lot of people don't [1000] consider real businesses. Just talk to [1002] enough customers. You kind of figure it [1003] all out later. Same thing with community [1005] posting. Then you'll get a bunch of real [1006] feedback and opportunities. And then [1007] you'll be able to kind of start that [1009] cycle, that feedback loop that [1010] eventually just makes you better and [1011] better and better. And then even if you [1013] had limiting beliefs by doing this over [1015] and over and over again, you basically [1016] get to collect what are called like [1017] reference experience. You get a big list [1020] of wins basically. And then the way that [1022] your mind works is every time you're [1023] contemplating making a decision, it just [1025] looks at the total number of wins versus [1027] failures when you've tried to do that [1030] thing and you know how intensely you [1032] felt those. Then if you have more wins [1034] than you have failures, it'll be like, [1035] "All right, well, it's really not that [1036] big of a deal." So you'll actually be [1037] able to convince yourself of something [1038] just through pure action even if you [1039] didn't believe in it begins uh at the [1041] beginning. Anyway, that's how you get [1042] your mindset shift started. You then [1044] consistently start executing our revenue [1045] based activities. You compound results [1047] and then yeah, that's how you [1048] essentially establish new belief [1049] systems. So there's only so much like [1052] soul surgery you could do just talking [1054] to yourself in your room alone or [1056] writing your your teenth journal entry [1057] talk, you know, about all the things [1058] that you want out of life. A lot of the [1060] time you really just want to like make [1061] something happen. You just have to start [1063] and you have to not know exactly where [1064] you're going, but you just have to [1065] believe and trust that you are the sort [1067] of person that can take feedback and [1069] then iterate and improve your strategy, [1071] your angle of attack. And I think that [1072] really at the core is what confidence [1074] is. It's the ability to say, "Hey, I [1076] don't actually know what the right [1077] answer is right now, but I'm confident [1078] that if I just do this for long enough, [1080] I'll eventually figure it out." Couple [1081] unnecessary evils that I wish that I [1083] knew a little bit about before, and the [1085] biggest one for me, at least for AI [1086] automation agencies, was custom [1087] projects. So, I know previously we were [1089] talking about mindset and before that we [1091] were talking about general business. [1092] Well, now we're really diving into like [1093] what is specifics about an AI and [1095] automation agency that I wish I [1097] knew. We got we got some funny memes in [1099] here. What is a custom project? [1101] Basically, a custom project is one where [1102] there is a custom scope. So, if you guys [1104] have ever worked on any sort of [1105] freelance platforms before, you'll know [1107] that a lot of the time it's like, "Hey, [1108] I'm looking for a freelance that can [1109] help me do X, Y, and Z." And X, Y, and Z [1110] is like this thing that they want done, [1111] right? This is in contrast to templated [1113] projects where you've actually built out [1115] the thing before, okay? and then [1117] somebody says, "Hey, I want a sales [1118] system." And you're like, "Oh, okay. [1119] Well, here is a sales system, right?" [1121] Obviously, templated projects are a lot [1122] easier to scale because you don't have [1123] to do any work. But custom projects are [1125] a lot easier to sell because you can do [1126] specifically what it is the customer is [1128] asking for. Okay. So, yeah. Um, custom [1130] projects are custom scope. They're [1132] usually kind of like long kind of like [1134] arduous affairs. They require a lot more [1136] client management because, you know, you [1138] have to go back and forth with a client. [1139] There's usually some sort of like [1140] revision period or something like that [1142] involved. And basically like this is [1144] what it is to be like a you know if you [1145] think about it like a service business [1146] you are servicing a client and usually a [1149] lot of the time when you do custom [1150] project it's a different route every [1151] time you start here and this is a goal. [1153] The first time that you do it you might [1155] go like this. The second time that you [1156] take this path you might go like this. [1158] The third time you try and deliver some [1160] project maybe you I don't know takes you [1162] a lot longer than you thought it would [1163] and then eventually you get to it. Um so [1166] because of this now that we're all on [1167] the same page a lot of people think that [1168] custom products suck and that you should [1169] never do custom products. So a big [1170] recommendation in a automation generally [1172] if you go on a lot of other people's um [1174] channels and stuff like that they say [1175] you should never ever do custom [1176] projects. Custom projects are unscalable [1177] and never make it with custom project. [1179] Uh but I always disagree custom projects [1181] are like training wheels. When you get [1183] started with something you have to make [1185] it as easy as humanly possible for [1186] somebody to say yes to you because you [1187] have no experience, no credibility, no [1189] real skill. You're probably not the best [1191] automator. Um you basically just have to [1194] make it as easy as possible for somebody [1195] to say yes to you. So you can at least [1196] get that flywheel that we started [1198] talking about in the last section [1199] started, right? And custom projects are [1201] the simplest and most straightforward [1202] way to do that. So despite the fact that [1204] it's not scalable and it's kind of like [1206] eating a Twinkie diet for the rest of [1208] your life, you know, it's like if you're [1209] in a bind, um, custom projects are the [1211] best way to get started. Then you can [1212] worry about scaling and doing like the [1214] hyperoptimized business model after you [1216] hit that inflection point and actually [1218] like see a little bit of growth. Okay, [1219] so yeah, the danger is that they're time [1221] inensive. They have very unpredictable [1222] scopes. A lot of people think that they [1224] create revenue plateaus and burnout and [1226] they definitely do if you just do your [1226] custom projects all day. You won't be [1228] able to scale past maybe like 15 or 20k [1230] a month. Hell, some people 5k, right? It [1232] really depends on your own productivity [1233] and the sorts of products to take on, [1235] but they become really accessible to [1237] beginners. So, you should just take them [1238] really quickly. And then their real [1239] value is they just help you pay your [1240] knowledge debt down quickly. I'll talk [1241] about debt a little bit later, but [1243] basically when everybody's at the start [1244] line of a business, they they and start [1246] line of anything, they just have all [1247] these debts that they don't, you know, [1249] really realize exist. They have like [1251] skill debt, knowledge debt, they have [1252] client management debt, they have like, [1254] I don't know, limiting belief debt, they [1255] have confidence debt. They have a bunch [1256] of debt. And the easiest and quickest [1258] way to pay down that debt is just to get [1260] started even if you don't really know [1261] what you're doing. So, what I recommend [1262] you do with custom projects is I [1264] actually recommend that your first step [1265] is like, I got to go custom. Okay, I got [1267] to go custom and I just got to like [1268] build stuff out for people because it's [1270] going to maximize the surface area. It's [1272] going to maximize the amount of [1274] experience you get in the shortest [1275] possible time. Is it going to maximize [1277] the money that you make in the shortest [1278] possible time? No, but it's going to [1279] maximize the experience which when you [1280] zoom out will eventually maximize the [1282] amount of money you make. So use custom [1284] products to learn and then you basically [1285] like kind of graduate to productized [1287] services or templated services like I [1289] was talking about earlier. Usually the [1290] best timeline looks like 0 to 3 months [1292] kind of focused mostly on custom [1294] projects. Then after you spend some time [1295] productizing, then after that you [1297] actually like scale. This little section [1299] here with the custom projects, this is a [1300] graph of your revenue over time. You [1302] know, like at the beginning you're [1303] probably not going to be making a lot of [1304] money. you're going to like shoot up [1305] every time you get a project and you'll [1306] make like zero the next time and then [1308] maybe the next project's a little bit [1309] bigger, but it's not very scalable and [1311] predictable. Eventually, you'll get over [1313] to the point at which you're actually [1315] productizing and you have enough money [1317] and then it's usually like a lot more [1318] linear from there. So, yeah, that's my [1320] recommendation for you guys. Just start [1321] with custom projects. Try and do them [1323] within the first 3 months or so. If you [1325] find yourself doing custom projects [1326] after 3 months or maybe between 5 to 10k [1328] in revenue, the likelihood is you're [1330] probably going to plateau. But uh yeah, [1331] looking back, I I definitely would have [1332] done more custom projects if I could. I [1334] tried to, you know, productize or [1336] template a little bit too early before I [1338] really knew enough about the problem I [1339] was trying to solve to do so. And that [1341] yielded a plateau for me right around [1344] $15ish,000 for 3 or 4 months that we did [1346] not effectively break through until I [1349] did a bunch more custom projects. I [1350] remember me and my business partner, I [1351] should say, landed one that was just [1353] about $10,000. And it was in working [1355] through that custom project that I [1356] learned enough about how A and [1357] automation works in general and the [1359] problems that my audience was suffering [1360] from that I could actually take that [1362] next step, start templating and then [1363] start spiking my rev. We got two paths [1365] here, right? If you go custom products [1367] forever, you are going to have [1368] short-term revenue spikes with long [1370] fulfillment periods. You're you're [1371] plateauing and then you're going to burn [1373] out and probably stagnate and go back to [1374] square one. Um, but if you do it for, [1376] you know, zero to three months, then [1377] right after you're done, you can start [1378] productizing really quickly, create [1380] templates and systems using all that [1381] knowledge that you just built, and then [1383] grow consistently with a scalable [1384] business. All right. Next, I want to [1385] talk about some unsexy lead genen that [1387] actually works. So, if I had just taken [1389] into account the various unsexy ways to [1391] make money when I was at the start line [1393] of my business, I'd probably be a lot [1394] further ahead than I am right now. But [1395] again, I was kind of focused on the sexy [1397] ones, right? Like, I spent a lot of time [1398] dabbling in paperclick ads because I [1400] thought paperclick ads were just really [1401] sexy. I thought that like, okay, if I [1402] want to be a successful business, I need [1403] to run ads because that's what all other [1405] successful businesses do. But I didn't [1406] actually stop and ask myself why. Like, [1408] I just kind of tried to pattern match [1409] what they were doing. And pattern [1411] matching is okay, but you know, it's a [1412] very big business usually that's running [1413] ads or they they've worked through some [1415] funnel or they spent a lot of money. And [1417] it's usually different from like a [1418] beginner who doesn't have any money. [1419] They don't have any experience. They [1420] don't know what their their offer is. [1421] They don't know product market fit. So, [1422] yeah, as I mentioned before, best lead [1424] genen, always unsexy. Go for the unsexy [1426] ones. If I had two lead genen approaches [1428] here, okay, one was sexy and one was [1431] unsexy and that was all that I knew [1433] about them. Literally, there was nothing [1434] like one just looked really cool and it [1436] was all futuristic and automated, [1437] whatever, and the other was like boring [1439] and lame and it's like you could have [1440] been doing that for the last 50 years. I [1442] would actually choose the unsexy one [1443] every time because odds are that would [1445] be the higher ROI producing one versus [1447] the sexy one. Everybody wants to do the [1448] sexy stuff, right? And so because [1450] everybody floods over to the sexy side, [1451] the unsexy side usually ends up being [1453] the the hidden gem and then eventually [1454] the unsexy side becomes sexy and then we [1457] you know find a new unsexy lead genen [1459] approach. But yeah, so you know when you [1461] have people avoiding a platform for [1462] instance like Upwork or Fiverr or Toptal [1465] or Malt or whatnot because of some [1467] preconceived notions about [1468] profitability, you know, obviously [1470] there's there's less competition and [1471] there's a lot more opportunity. Okay, [1472] I'll run you through some Upwork success [1474] strategies. I've recorded a bunch of [1475] videos on exactly how to get up and [1477] running with Upwork. So, I'd recommend [1478] if you really want to learn a little bit [1479] more about how Upwork works, definitely [1481] check those videos out and get that deep [1483] dive. But just as like a, you know, from [1485] a bird's eye view, a lot of other [1486] people, for instance, are really [1488] hesitant to make like custom videos. So, [1490] I just did custom videos on Upwork. I [1491] recorded a custom video solving a [1493] person's problem. And I did that every [1494] day, and I did like 10 of those every [1495] day for a very long time. Eventually, [1497] I'd sent, you know, a couple thousand of [1499] these. And because the custom videos had [1501] such a high return on investment, when [1503] somebody actually watched my video, they [1504] were so much more likely to convert. I [1506] was able to take a platform that most [1507] people think you can't make more than [1508] like $500 on per project and I was able [1511] to routinely get clients that were over [1513] $15,000 in CLV. That's pretty wild, [1516] right? Like that's a 30x on people's [1518] beliefs versus what I actually did. [1520] variety of other success strategies. By [1521] optimizing my profile and by figuring [1523] out what the actual problem is that I [1524] was solving and by doing some some [1526] pointed copyrightiting and by making [1527] minor tweaks to my profile photos and so [1529] on and so forth, I was able to just [1531] crush it and take kind of like an engine [1532] that a lot of people might have just [1534] walked by at some junk heep and be like, [1536] "Hey, you know what? There's actually a [1537] lot of value in that engine. I can [1538] actually tune that puppy up and slap it [1540] in a car and maybe it's not the newest [1542] and most amazing engine, but I can make [1543] that thing go way faster with a proper [1545] tuneup." I'm not a car guy if you guys [1547] could tell. Uh anyway, yeah, there are a [1549] lot of psychological barriers that stop [1551] people from using these methods. So, as [1552] long as you're just the sort of person [1553] that cares more about the return on [1554] investment than anything else, then [1556] you'll be just fine. Another big thing [1558] that I'll talk about in a second is cold [1560] email. So, variety cold email approaches [1561] that generate 2 to 5% reply rates. You [1563] really don't need more than a two to 5% [1565] reply rate to crush it, right? You send [1567] like 500 emails a day. Hypothetically, [1569] even if you received a 5% reply rate on [1571] the 500 emails a day, that's 25 replies. [1573] If even five of those are positive, you [1574] can convert like one of those um to a [1576] meeting a day. So you have like one [1577] meeting a day basically. Do you know how [1579] many companies out there have one [1580] meeting a day? Like no companies have [1583] one meeting a day. It's crazy how few [1585] businesses have the ability to have one [1586] meeting a month. Okay. Vast majority of [1589] services businesses out there only get [1592] their business through referrals. Which [1594] means they get one in a blue moon and [1597] they will hound that one customer to the [1599] ends of the earth and try and do the [1601] best and most amazing job ever. So the [1603] please sir, may I have a referral um [1605] thing actually happens for them. But [1606] that's so unstable, right? I mean, month [1608] by month, they're they're all over the [1609] place. If you could build a consistent [1610] lead generation strategy that gets you [1611] one meeting a day, okay? And you can [1613] actually do that with a 5%, you know, [1616] hell, even with like a 2% repier, you [1617] can probably get a meeting a day if you [1618] send enough emails. With just doing the [1620] same thing all day, you do that for like [1622] two or three hundred bucks a month [1623] realistically with carrying costs. Like [1624] you're in like the top.1% of businesses [1626] already. Just do that for a year, you'll [1627] be you'll be making $50 $100,000 a month [1629] assuming you play your cards right. [1630] Yeah. There's another big model called [1632] communities, which I wish that I had [1633] known a lot more about earlier. I mean [1635] now obviously I run communities so I can [1636] actually firsthand see the value and the [1638] power that they had but communities were [1639] just getting started right around the [1641] time when I was getting started with my [1642] automation agency. Like I joined a [1644] couple of communities. A really cool one [1645] that I was in was called Demand Curve. [1647] And because I was in this community I [1648] basically, you know, there were people [1650] that previously would have been so [1651] inaccessible to me to to to even be able [1654] to talk to. they were like up there [1656] shrouded and in light, you know, it's [1658] like they had freaking halos on and I [1659] was like down here and you know there's [1661] like 20 layers of people in between us [1663] just in terms of skill and capability [1664] and execution potential and stuff. Um [1666] but in a community um they kind of [1667] flatten all of that, right? Like you're [1669] just a member just like basically [1670] everybody else. So even if there's [1671] people out there that are like [1672] extraordinarily rich and powerful, if [1674] they're in the same community as you, [1675] you could literally just shoot them over [1676] a message and like connect with somebody [1677] that you might have otherwise never been [1678] able to. So anyway, the reason I bring [1680] that up is because I wish that I had [1681] known about communities way earlier. I [1682] think it would have made a lot more [1683] money. highly recommend that you guys do [1685] not sleep on communities because they [1686] are blowing up right now and it's a [1688] great opportunity to get into a bunch of [1689] communities for either very low amount [1691] of money or for free and then use the [1694] relationships that you create in those [1695] communities now even if it's just 10 [1697] minutes of checking your posts on your [1699] top three communities a day and [1701] responding to them building like a [1702] digital reputation a digital presence [1704] and then in a few months using that to [1706] just like build a sales empire and then [1707] yeah focus on the ROI not how cool the [1709] method seems so okay there's some sexy [1711] um lead genen approaches and then [1712] there's some unsexy ones so Let's look [1713] at the sexy ones. Some really sexy ones [1715] are content. Okay, so like YouTube, [1717] that's super sexy right now. Everybody's [1718] talking about YouTube. Everybody's like, [1719] "Man, Nick, uh, should I make a YouTube [1721] channel? Nick, please, should I, you [1723] know, make a YouTube like you because [1724] your YouTube's so great and you're [1725] making a ton of money off it and stuff." [1727] Um, the reality of the situation is if [1729] you try and start a YouTube channel [1732] right now, you have no experience, no [1734] skills, no nothing. You're just doing [1735] the ads thing all over again. You're [1737] just copying a successful creator like [1739] myself, but you don't really know what [1740] goes into it. you're just trying to like [1742] copy the I don't know like the the the [1744] the form of it, not necessarily the [1746] function of it. So content's really sexy [1748] and very few people actually make money [1749] with content. I want to say like 99.9% [1750] of people will like spend all their [1752] lives trying to produce content. They [1753] never make a dollar from it. Don't don't [1755] focus on content. Look sexy. It's nice. [1756] You get tons of followers. Everything's [1758] cool. Um you don't really see the the [1760] reality that goes into it. Don't focus [1762] on things that are really high effort. [1763] Don't focus on things like ads for [1764] instance. Okay. Um and don't focus, you [1766] know, stay away from things that have [1768] long times to ROI. Instead, focus on the [1770] unsexy, boring stuff, like direct [1771] outreach. That's by far the least sexy [1774] and most boring thing here. But it [1776] works. You just send people DMs and you [1778] just send people cold emails day in and [1780] day out for a very, very long period of [1782] time. Here are three. Upwork. You get [1784] direct access to buyers that are [1786] actually looking for people to solve [1787] specific problems for them. They've [1788] already done all the work sourcing the [1790] people. They're on their hands and knees [1792] salivating, waiting for you to give them [1793] a treat. They spend some poulry sum, [1795] maybe a couple bucks, in order to make [1796] the connection request or reply. But [1798] these are real customers. How many [1799] connects do you actually have to spend [1800] in order to like talk to somebody that [1802] you otherwise would have never been able [1803] to talk to? Really just a few dollars. [1805] Treat it that way and I think you'll see [1806] there's a very large return on your [1807] investment. Same thing with um you know [1809] cold email platforms like instantly. And [1811] then communities like school, right? [1813] None of these are very sexy. I'm not [1814] going to lie. A lot of people look down [1816] on them. A lot of people are going to [1817] think, "Oh, you do cold email? No way. [1818] You're a spammer." It's like, "Well, [1820] that's what you think." When I was in [1821] college and um you know, I was trying to [1823] throw it was an event management company [1825] in college. I was doing a bunch of [1826] promoting for one of my parties and we [1828] were trying to like fill the joint up. [1829] This bar that we were throwing our party [1830] at had like never seen more than like 50 [1833] people in it at one time. So we we were [1834] committed and proven to trying to get [1836] more than 50 people in. One of the most [1837] viral and simplest marketing strategies [1839] for us. You know what it was? We would [1840] print out a bunch of posters. Then we [1841] just go into the bathrooms above the [1843] urinals for the guys or at the backs of [1846] the bathroom stall doors for the girls. [1848] And we would just have people either [1850] myself, you know, for the guys or we pay [1851] a girl to do it or just, you know, a [1852] girl was part of our friend group, she'd [1853] go do it. um and just and just paste [1855] them in the bathrooms. So when people [1857] were taking a piss, they just looked at [1858] our freaking posters all day. That is [1860] probably the least sexy marketing method [1862] ever. But we had like 400 people at that [1864] event and that was like the primary way [1866] that we did it aside from some Facebook [1868] marketing as well. That lineup was out [1869] the freaking, you know, almost down the [1870] mountain. I went to university in a [1871] freaking mountain. Like crazy stuff. The [1874] least sexy marketing opportunity ever. [1876] It's funny. Every time I tell that [1877] story, people are like, "Really? People [1878] actually go?" Because And I'm like, [1879] "Yeah, cuz nobody else was doing it, [1880] man. You have I don't know how many [1882] people go to my university, but a lot of [1884] people probably 50,000 people saw that [1886] while idally taking a piss and being [1888] like, "All right, well, yeah, I'm going [1889] to be up there anyway. I might as well [1890] drop by, you know? I mean, I go to the [1892] bar every now and then. Why don't I just [1893] go at that specific time?" The these [1895] these unsexy marketing methods just [1897] crush. Okay. And when it comes to AI [1899] automation agencies, Upwork is one, [1900] instantly is one, school's another one, [1902] and these are the ones that I'd [1903] recommend that you do. Okay? Here are a [1904] couple other things that I wish I knew [1905] more about early on, and that's the idea [1907] of daily systems. So, I'll give you a [1909] quick story. I remember one time we were [1910] scraping some leads or something and we [1912] had to run some campaign and we had to [1913] send it and we had to do it very very [1914] quickly. There's some opportunity out [1916] there, some piece of news that like [1917] recently hit and we want to capitalize [1918] on it and I was chatting with somebody I [1920] was working with at the time and we [1921] needed to like scrape 500 emails. I [1923] remember telling him like, "Hey, like, [1925] okay, if you do 250, I do 250. We could [1927] probably do this in the next couple [1928] hours, right?" And he's like, "Well, [1929] dude, I'm not going to like scrape [1930] emails." Like, come on, man. That's like [1932] a that's like an assistance job. Let's [1933] just get let's just get one of our [1935] assistants to do it while uh you know, [1936] we focus on more important things. But [1938] this is the rate limiting step. This is [1940] the most important step. In order for us [1941] to send emails, we need to have the [1942] emails, right? So I was like, "No, dude. [1944] Like we should do this ourselves. This [1946] is really boring and I know it's [1947] annoying, but we got to do this [1948] ourselves." And you know, the guy was [1949] working with us was just like, "Ah, I [1950] don't really want to do it." Anyway, I [1952] tell you this because what I've come to [1953] realize is that throughout my entire [1955] business career, I have always been the [1957] bottleneck. So if I can get better at [1959] doing something, then the entire rest of [1961] my business usually increases at least a [1964] proportionate amount. If I am the [1966] bottleneck, okay, then I get 50% faster [1969] at scraping leads or something like that [1970] or I get 50% uh more more accountable or [1973] 50% more committed, my business will [1975] grow at least by 50%. So it's like a [1977] direct one-to-one relationship between [1979] myself and then the company and [1981] companies that I run. So I don't know if [1984] this is just me. I personally think a [1985] lot of entrepreneurs like this. The best [1987] way that I have come to massively [1990] increase my potential and my capability [1993] is by building daily systems that stick [1995] and just doing a lot of very small [1997] boring things like I don't know scraping [1999] leads for instance or whatever every day [2003] for a very long period of time. If you [2005] can just get into the habit of building [2007] super simple systems, I don't mean [2009] automations, I mean like your own [2010] systems. I wake up, I go to my coffee [2012] machine, I make coffee while the coffee [2014] is steeping, I dripping, right? While [2016] the coffee is dripping, I open up my [2017] laptop and I respond to three emails and [2019] then I go back, get my coffee cup, pound [2021] it back, respond to another three. [2022] Legitimately, if you could just build a [2023] simple system like that, that might make [2025] you 10% more effective, your revenue [2028] might go from $100,000 to $110,000 in 3 [2030] months. I know it sounds really simple, [2032] and I know it sounds really dumb, but we [2034] are the bottlenecks in our companies. [2035] So, if we can just become a little bit [2036] faster and a little bit better, the [2038] potential is is insane. So, systems beat [2040] motivation, and they beat willpower [2042] every time essentially. And the systems [2044] don't have to be complicated. they can [2045] be boring and unsexy like I was talking [2047] about earlier. Another one of my systems [2048] is my daily community management right [2050] now. So I went from not knowing anything [2051] about communities um a year ago to being [2054] I think I'm top three or top four by [2056] revenue on school right now. School [2057] being the largest community platform on [2059] planet earth. So I went from like being [2060] nobody and not knowing anything to like [2062] being one of the top ones. Do you know [2062] what the simple system that enabled me [2064] to do that was? When I wake up my laptop [2066] is usually on my nightstand. I will roll [2068] over all crusty head and I'll grab my [2070] laptop and as I wake up I will go [2072] through and just respond to all of the [2074] community posts and leave a comment on [2075] everybody. Uh because I save, you know, [2077] 15 or 20 minutes like slowly waking up [2080] when I do this. Um and because it's the [2081] very first thing that I do, I knock it [2083] out before I do anything else. That [2084] simple system has enabled me to build a [2086] suite of information products that now [2088] generate me over $100,000 a month. [2090] Sounds simple, but again, it's boring. [2092] It's unsexy and it works. So anyway, [2094] focus on revenue generating activities. [2095] When I say revenue generating [2096] activities, I mean talking to customers. [2097] I mean setting aside 15 minutes every [2099] morning to go through and do three [2100] Upwork applications. I mean setting [2102] aside 30 minutes every morning to [2104] respond to a bunch of community posts or [2106] DM five people on your school community [2108] that you find interesting or send cold [2110] DMs with a video breaking down 10 [2112] people's Instagram profiles and just do [2114] that every day for like a year. [2115] Structure your environment to make [2116] important work inevitable. I was talking [2118] about rolling over and getting my [2119] laptop. I think that's a really good [2120] example. But some other examples are, [2122] you know, make your workplace a little [2123] bit more effective or a little bit more [2124] efficient to work in. If you are working [2126] on a really crappy computer right now [2127] and it like negatively impacts your [2128] ability to do some sort of custom Loom [2130] video or whatever, like invest a little [2131] bit of your money into like a nice [2132] computer so you have like an easier [2134] experience. If you find yourself hating [2136] your work because your back hurts after [2138] a while, like invest in like a nice [2139] chair. Structure environment to [2141] basically make important work not only [2142] inevitable, but I think more importantly [2143] enjoyable as well. And then yeah, you [2145] know, I've gotten more accomplished in [2146] one or two hours of consistent daily [2147] action every day. I don't know how many [2149] hours realistically I'm spending on all [2150] of this combined now. I think it's like [2151] three or four. So maybe not just one or [2153] two. I've gotten more done in that time [2155] period and I'll usually like, you know, [2157] I finish with my most important daily [2159] actions by 9 or 10 a.m. than most people [2161] will do all the way up till, you know, 5 [2162] 6 7 8:00 p.m. And that's just because I [2164] frontload the most important stuff and I [2165] do it. In order to do this, obviously [2166] you need to identify your lever. So in [2168] my case right now, because I'm um [2170] shifting primarily to information [2172] products, for instance, like coaching [2173] and YouTube and stuff like that, my [2174] lever, the most important thing for me [2176] to press is content. And so what have I [2177] been doing every single day? I've been [2178] publishing a video. And I've done this [2179] now for the last couple weeks. And my [2180] engagement's through the roof. I'm [2181] making more money now than I ever had [2182] before. You know, another one might be [2184] communities for me. Okay. When the vast [2187] majority of my revenue was uh from my [2189] agency offerings, okay, every morning, [2191] what did what did I do? I [2193] did cold [2195] email 30 minutes. I would go through my [2198] cold email stack. I would make one tiny [2200] change, one improvement to every cold [2201] email campaign that I have. I'd do some [2203] copyrightiting. I'd analyze the replies. [2204] I'd think about better ways to do it. [2206] I'd build systems that enable me to do [2207] it better. I would do Upwork, okay? And [2212] I would do um between I mean some days I [2214] did 20, but at least 10 applications a [2216] day for a very long period of time. I [2217] would do this just immediately the [2218] second I woke up. Why? These are my [2219] levers, right? I'd send emails. I'd send [2221] cold outreach to people that I found [2222] important. I would have certain numbers [2224] I need to hit and I would just do them. [2225] The shape of that is going to change, [2227] you know, depending on the sort of [2228] business model that you're doing. At the [2229] end of the day, the system of just doing [2231] the most important thing immediately [2232] does not. I'm big on streaks. I uh [2234] believe strongly in streaks. The power [2236] of streaks for me is immense. I don't [2237] want to lose a day not doing my outreach [2239] because I, you know, see it in my [2240] calendar. I've gotten 29 days the 30 [2243] days of the month. I really don't want [2244] to lose that last one. So, I call this [2246] whole idea momentum. And you only build [2248] momentum through consecutive days of [2249] action. Um, so for me, you know, I focus [2252] on momentum. I focus on streaks. If I [2254] just build up enough momentum over a [2255] long enough period of time, I basically [2257] inevitably become unstoppable. And I [2259] didn't know that when I started, which [2260] is really unfortunate. And I think I [2261] could have been a lot better had I [2262] learned that earlier. I have a couple of [2263] example stories that I could throw at [2264] you guys, but I think I'll I think I'll [2266] leave it there. I know the video is [2267] getting a little bit long and then yeah, [2269] um I touched on this, but design your [2270] lifestyle to minimize friction for [2271] important work. Okay, so if you guys [2274] want to like do this really efficiently, [2275] here's my recommendation. When you [2277] start, okay, you want to build an A [2279] automation business. The very first [2280] thing you do is you identify your [2281] revenue generating levers. You list them [2282] out. You itemize. You're like, "Okay, my [2284] revenue generating lever right, you [2285] know, right now is this and then this [2287] and then, you know, after that it's [2290] this." [2292] Okay. And then it's like, all right, so [2293] how do I structure my environment in [2294] such a way that I could do these three [2296] things every day for a full year? That's [2298] my litmus test, right? So it's like, [2300] okay, maybe I restructure where my [2302] computer is. Hm, maybe I wake up at a [2304] different time so I can record my stuff [2305] or send my my outreach or do stuff like [2307] uninterrupted or hm maybe I block my [2309] phone or I I put my phone in my car [2311] before I start my work or something. [2312] Design your environment to minimize the [2313] friction. Set some minimums for these. [2315] So maybe this is 10, maybe this is, I [2318] don't know, 30 minutes. It's tough to [2319] quantify this because obviously it [2320] depends on the systems you have. Then [2322] maybe this is another 15 minutes. Okay, [2324] set your timers. Build your daily [2326] minimum viable action. Then just build [2328] some accountability structure. It's [2329] like, okay, like by the end of the day [2331] at 11:59 p.m. I need to have these three [2333] things done. If not, I'll text three [2334] people and tell them I'm a I'm a loser [2336] and buy them all coffee or something, [2337] right? If you just do that every day for [2339] 30 days, you will crush. And it doesn't [2341] have to be for 30 days, but I do like [2342] the finality of a month. I think a month [2344] is very powerful. So yeah, you know, if [2347] you guys can just follow that, I think [2348] regardless of what business model you're [2350] using, whether it's a automation or [2351] whether it's something else, you guys [2352] are inevitably going to crush. Another [2353] big thing I want to talk about is client [2354] psychology, what actually matters. So [2356] we've touched on this initially. We got [2358] to focus on results here, not [2359] implementation. So I don't actually talk [2360] about software and systems unless [2362] somebody asks me. I will say, hey, I can [2365] totally do what you're asking for. For [2366] context, last month, I built a really [2368] similar system for somebody else and [2369] that enabled them to achieve an [2370] additional $25,000 a month in monthly [2372] recurring revenue. We did this through [2374] this cool mechanism, but I'm not telling [2376] them about the software. I'm not telling [2378] them about any of this stuff until [2379] somebody asks me. The vast majority of [2381] the time when I say stuff like this, [2382] people are just like, "That sounds [2383] awesome." Okay, great. Just do that. [2384] Just do whatever you just told me, and [2385] that's that's awesome. Like, unless [2387] somebody specifically says, "Hey, so [2389] what is the system that you're going to [2390] be using in order to build this? What [2391] tools are you going to be using? What no [2393] code tools are you going to be using? [2394] What programming wires, scripts, [2395] servers, all this stuff? How are you [2396] going to do it?" I don't I don't even [2397] tell them anymore. When I started, I [2400] told them everything. But what I've come [2401] to realize is clients actually prefer [2403] the simplicity of like a blackbox [2404] system. What is a blackbox system? It's [2407] something that they can put money into [2409] and then get a lot more money out of. [2412] And a client doesn't actually care about [2413] this. They don't care. All they care [2416] about is that this works. So if they can [2418] see that they put in this and then they [2420] get that, they'll be very happy and they [2421] don't ever need to peer inside of this [2422] opaque black box. The behind the scenes [2423] journey is invisible to the client and [2425] should be. A couple other little tips I [2426] want to give you guys right off the top [2427] of my head. Prioritize the first demo [2428] experience above all. So like I don't [2430] mean demo as demo. Like don't don't [2431] brand or pitch it as a demo, but like [2432] the first time you demo a thing, uh the [2434] first time you show them a service, the [2435] first time you show them the money that [2437] you've been able to generate for [2438] somebody else. Like actually think [2439] really deeply about how you want to [2440] construct that experience cuz first [2441] impressions matter a lot. Like I think [2443] just pound for pound they're probably [2444] like four to five times as valuable as [2445] like subsequent second, third, and [2447] impressions. So um you should spend you [2449] know four to five times the time to to [2451] really nail that first one I would say. [2452] So yeah, speak their language business. [2454] um don't speak yours technical and then [2456] if you have to spend a ton of effort and [2458] time on something do it on the stuff [2460] that's visible for the client. Okay? [2461] Don't do it on the stuff that like they [2462] can't really see. So what I mean by this [2464] is like hm you know well should we spend [2466] 800 hours trying to make this system [2468] work for all sorts of data under the sun [2470] for hexadesimal inputs and binary inputs [2473] and like fourth number system inputs and [2476] fifth and sixth and seventh and [2477] whatever. Uh no nobody cares about like [2480] you mastering every single edge case. [2481] So, don't worry about all that stuff the [2482] client's never actually going to enter [2484] in as an input to your form or your [2485] flow. Instead, it's like, what should [2487] you actually be spending an extreme [2488] amount of effort on? This is going to [2489] sound dumb, but it's like if your system [2491] generates an email or something, make [2492] the email really pretty. You know, if [2494] your system generates a Google doc, make [2496] the font nice on the Google doc. Make [2499] the colors cool. Look a little bit into [2501] design and aesthetics. The stuff that [2502] the customer actually sees is oftentimes [2504] much more important than all the work [2505] that went into producing it. Believe it [2506] or not, we are entering an era where [2508] it's like form over function in many in [2511] many cases. So, design and presentation [2513] matter a lot more than uh than you [2515] think. So, you know, your actual work [2517] might actually be, you know, you have a [2519] bunch of technical challenges, tons of [2521] implementation details, you have to pick [2523] the software, you have to do tons of bug [2524] fixes, you have to make all these [2525] architecture decisions. The reality is [2527] client doesn't care about any of this [2528] stuff. It's irrelevant to whether or not [2530] they're going to want to pay you or or [2531] get you on for a follow-up project. You [2533] know what the client actually sees? They [2534] see that initial um showcase where you [2536] run them through the system. They see [2538] the uh quality of the interface like [2540] what do the emails look like? They see [2542] whether or not it solves their problem. [2543] Wow, man. This sol this is exactly what [2545] I want. This I was totally struggling [2546] with this for a while. And also, most [2548] importantly, was it on time? You know, [2550] he told me Tuesday, it's Thursday. [2552] People are going to think less of you [2553] for that. You know, deliver stuff on [2554] time. It doesn't have to be difficult. [2557] Um, but if you focus on client [2559] satisfaction and things that impact [2561] client satisfaction instead of stuff [2562] that makes you happy, okay, you're going [2564] to get some follow-up work, and that's [2566] where the that's where the money is. We [2568] make money on follow-up work and and [2569] retaining our customers. Next up, I want [2571] to talk a little bit about leverage. So, [2573] leverage is the idea that you can [2575] produce a greater output from a smaller [2577] input. The idea about leverage is kind [2579] of where the name comes from is the idea [2581] of a lever. Okay? And a lever, just to [2583] make a long story short, is kind of like [2584] if you have a big rock over here, this [2586] is a boulder and it's 10 lb. The [2589] distance between this point where the [2590] boulder is and then this um thing called [2592] a fulcrum, you know, this is just like [2593] X. I know we're doing math right now, [2595] but bear with me. In order to lift this [2597] up, what you need to do is you need to [2598] apply the same amount of weight that [2600] that thing is just on the other side at [2602] the same distance from the fulcrum. [2603] Okay, so you have kind of a couple [2604] options to lift this thing up. [2605] Basically, you could you could provide [2606] 10 pounds of force here. But what if you [2609] go further along the line? Okay, if [2611] you're at 2x, believe it or not, [2613] actually, just mathematically, in order [2615] to lift this 10-lb boulder, you only [2616] need to put 5 lbs of force in here. The [2618] place at which you choose to apply force [2619] is very important is basically the [2620] metaphor. I don't know if it was [2621] Archimedes or or one of the the old [2623] Greek guys, but he said, "Give me a [2624] lever long enough and I will move the [2626] world." The idea being that like, you [2627] know, if we if we can just stretch this [2629] puppy out really really long and [2630] eventually we can go, I don't know, like [2632] a like a 100x, you could literally have [2634] a gust of wind applied to this thing and [2637] that gust of wind would be enough to [2639] lift this 10 pound rock. I should have [2641] made this a,000 pounds or something, but [2642] hopefully you guys can see my point. So, [2643] now that we're done with the physics [2644] stuff, uh, what is leverage? It's just [2647] more output from less input. And the way [2649] you do it is you do it by applying force [2651] in a very particular place. This is at [2653] the definition of why automation is [2654] great. Actually, the whole the whole [2656] industry is all about leverage. You can [2658] make systems that apply pressure at a [2659] specific point. Well, then you can [2661] massively improve the profitability of a [2662] system itself. So, anyway, the first [2664] thing I do nowadays, I calculate the ROI [2666] before I do any sort of automation. How [2667] much money is the customer currently [2668] making on their time? Okay? Okay. And [2670] then I lay things out as like a pipeline [2671] left to right. And then once I see this [2673] pipeline left to right, I'm like, "Okay, [2674] what are they currently doing? Hm, I [2675] wonder what points there are that I [2676] could apply a little bit of pressure by [2677] building an automated system that would [2680] massively increase leverage. So [2682] templates are your biggest leverage [2683] point when you're building a system for [2684] a customer because it kind of lets you [2685] start at 80% complete. Uh, you know, [2687] instead of you having to spend a month [2688] building a solution and like working [2690] through all the weeds or whatever, you [2691] can actually get something that works [2692] pretty good in like 5 minutes and then [2694] you just make a couple of fine tweaks to [2696] the blueprint or template and then you [2697] upload it to the no code tool. These are [2699] personal leverage systems. This is about [2701] you, right? But you know, if you find a [2703] way to use templates, what you could do [2705] is you could massively improve or [2707] increase their results by putting a tiny [2709] bit of force up at like the specific [2711] points that that matter. In a templates [2713] case, that might be you could tell a [2715] client, hey, I'm going to deliver this [2716] for you in 72 hours. I don't actually [2718] recommend delivering projects much [2719] faster than that because the longer you [2721] take a project to fulfill a project, [2723] usually it's correlated with the client [2724] thinking that you had to do more work in [2726] order to do so and they're willing to [2726] compensate a little bit more for it. [2728] But, you know, you could have that be [2729] one of like your your benefits and you [2730] could use templates in order to like [2731] significantly out compete everybody else [2733] that's pitching them at like 3 or 4 [2734] weeks. Get that initial business and [2736] then, you know, have your company scale [2737] from there. You can spend less time on [2738] it. You could do a lot of things, but [2740] that's just one simple example of [2741] leverage. I personally don't believe in [2742] automating high value client touch [2744] points. I don't automate anything in my [2745] community, for instance, because there's [2746] a lot of perceived value in just you [2748] talking to me. Why would I automate [2749] that? I mean, why would I give anybody [2750] the impression that I am not personally [2752] the one talking to you? What are highv [2753] value client touch points in the agency [2755] space? Um, it's like your initial call, [2757] your initial contact. I see so many [2759] people out there, they're like, "hm, [2760] what if I create an AI voice caller and [2762] have my AI voice caller close the [2764] client?" It's like, clients don't care [2765] about that. Clients definitely don't [2766] want that. Do not have the first point [2768] of contact with you, which is a very [2770] high leverage point of contact be an [2772] automated system that kind of screws up [2774] half the time, right? So, it's about [2776] just choosing, picking and choosing [2777] where you apply that force. I mentioned [2778] this previously, but design matters just [2780] as much as function. Some tasks are [2781] actually worth doing manually forever. [2783] So, I check my bank balance every [2784] morning. Takes me five minutes. I copy [2786] over some transactions between accounts [2788] and stuff like that. And I have like a [2789] record of all the money that I've spent [2790] the last 24 hours. I do that manually. [2792] It's actually worth me doing it manually [2793] because it takes me 5 minutes and then I [2795] know exactly how much money went into my [2796] account yesterday, exactly how much [2797] money is going out, which is very, very [2799] powerful to have as a business owner. [2800] Anyway, the point I'm basically making [2802] is lay out the system from start to [2804] finish. Okay, just on paper. This is a [2807] client system. You know, this is um this [2810] is sort of the first thing that happens. [2811] This is the second thing that happens, [2812] the third thing that happens, the fourth [2814] thing that happens, and this fifth thing [2815] that happens. Once you have it on paper, [2816] then you get just lay it out in front of [2818] you. Then you can choose what points you [2820] should build systems for. Hm, I can [2821] really automate four. And if I automate [2823] four, the whole throughput of the [2824] pipeline is going to go up. The customer [2826] will be able to make a lot more money. [2827] Or maybe I'll do one and four, but I'm [2829] not going to touch two, three, and five [2830] cuz they're they're okay right now. So [2831] once you've systematized first, you've [2833] identified the points of high leverage, [2834] then you can go ahead and build systems [2836] that scale up. Here's like a quick [2837] little flowchart or decision tree [2838] basically of how exactly to go about [2840] employing this process. So is it a high [2842] leverage activity? If yes, is it client [2844] facing? If yes, is personal touch [2847] critical? If yes, you should do [2848] manually. Okay, you should do manually, [2851] 100% manually. There should be no robots [2853] involved in the process. You should [2854] create templates and SOPs. Then you [2855] should revisit this periodically just in [2857] case and then grow your business that [2859] way. If it is not a high leverage [2860] activity, then very easily consider [2862] automating or delegating that. build [2863] systems that enable you to, you know, [2865] achieve 80% of it with like 20% of the [2867] work. If it's worth it for you to build [2869] an automation, like actually spend the [2871] time going through the process of [2872] putting together an automation, which [2874] may realistically take a few hours, then [2876] you know it's worth it. Build the [2877] automation, monitor the effectiveness, [2878] and then optimize. But if it's not worth [2880] it, then a lot of the time there are a [2881] lot of systems that are in my business [2882] nowadays, they're like, I should not [2884] have tried automating initially. So, I [2886] just keep them manually because, you [2887] know, there's some very simple things to [2889] do as a person that if you do them [2892] yourself will massively improve [2893] leverage. One thing that I've started, [2895] well, I'm not doing them as much [2896] anymore. One thing that I started doing [2897] after about I think like eight or nine [2899] months my agency was I started recording [2901] customized videos walking people through [2903] a proposal. So, I had like completely [2905] automated my proposal process, which is [2906] great and I think the proposal generally [2907] is fantastic. So, highly recommend it. [2909] This doesn't change um my recommendation [2911] to use it. But um I found that like when [2914] I recorded a custom two-minute video and [2915] then I attached it to the proposal and [2917] in that video I literally just walked [2918] through my proposal top down saying, [2919] "Hey Peter, how's it going? Just wanted [2921] to record a quick video for you walking [2922] through my proposal." My conversion rate [2923] went up something like 15%. So my [2925] conversion rate already was like 15%. So [2927] I basically doubled my conversion rate [2928] for two extra minutes of work. Super [2930] simple, super easy. Why? It was the [2932] warmth. It's the perceived value of like [2933] having a consultant walk you through the [2935] thing. It's like, hm, this is really [2937] complicated, but if I watch that video, [2938] then I'll I'll know everything that I [2939] need to know in 2 minutes. And that, oh [2941] man, that Nick guy is so nice. I like [2942] working with him. I want to work with [2943] professionals like that, you know. Is it [2945] fully automated anymore? No, it's not. [2947] But I was able to double my conversion [2948] rate with just a little bit of manual [2949] work. I applied at the right place. [2951] Hopefully you guys appreciated all of [2952] the points that I made in this video. [2954] These are all points that I wish I could [2956] write on a letter and bury in a time [2958] machine and have go back 30 or 40 years. [2960] Unfortunately, I can't. So the second [2962] best thing I can do is just help as many [2963] of you guys avoid making the same [2964] mistakes that I did by getting your [2966] belief systems right from day one, [2968] getting the systems right from from day [2969] one, and just understanding the [2971] fundamental concepts of leverage for [2972] instance and like the idea of doing some [2974] things manually even though we're an AN [2975] automation agency. Really just not [2977] different from any other business if I'm [2979] real. So most of the same tactics and [2981] tips that I'm helping you guys apply to [2982] your current AN automation company will [2984] apply for all future businesses. If you [2986] internalize these early, you'll be a lot [2987] better off than if you try and sort them [2988] out later. And yeah, I I I really enjoy [2990] having the opportunity to do this. So, [2992] if you guys like these sorts of videos, [2993] definitely drop down a comment um asking [2995] for a video on some other subject. If [2997] it's a good recommendation or suggestion [2999] or question and I haven't actually [3000] answered it in a video elsewhere, then I [3003] will absolutely consider doing it. And I [3005] get most of my content ideas and Rex [3007] from you guys at this point. Not too I [3008] run Maker School, which is the simplest [3010] and fastest path to building an AI and [3012] automation agency today. Uh, we just [3014] crossed 1,900 members as of the time of [3017] this recording, and I make the price go [3018] up every 100 members just to reflect the [3020] increased value of the network and the [3022] increased value of the assets. If you [3023] guys are on the fence about starting an [3025] AI and automation agency, you have [3027] thought about doing one for quite a [3029] while, and you just made it to the end [3030] of this video and found yourself nodding [3031] along, uh, you will really like Maker [3033] School. It'll jump start your ability to [3035] to go from zero to one and get that [3036] first customer. So, I'd highly encourage [3038] you guys to check it out. you guys [3039] already have a successful and thriving [3040] business, check out make [3041] moneywithmake.com, which is my premier [3043] automation community, which instead of [3045] taking you from zero to one, takes [3046] something that works, takes some one, [3048] and then helps you scale it to 100. So, [3050] this is how you scale your business to [3052] $25,000 a month, $50,000 a month, [3054] $100,000 a month, and beyond. These are [3056] all the things that we we talk about in [3057] the program. All right, I think I'll [3058] leave you there and cap the ad off. [3060] Really appreciate having all of you guys [3062] with me. Thank you very much. Like, [3064] subscribe, do all that fun stuff. I'll [3065] catch you on the next video. Thanks so [3067] much. Bye.

Video: https://www.youtube.com/watch?v=TxMAUMUn-is
Title: Why I Don't Sell AI to Local Businesses (Despite What Gurus Claim)
[0] I've seen a lot of people talking about [1] how local businesses are a gold mine for [3] AI and automation services. I really [5] don't think that they are. I scaled my [6] own AI automation agency to 72K a month. [8] In this video, I just want to break down [10] a few of the reasons why I do not [11] recommend going after local businesses [13] and I want to give you guys some [14] alternatives instead. So, I titled this [17] why I don't sell AI to local businesses [19] despite what gurus claim. It's funny cuz [21] a bunch of dudes are just calling me a [22] guru earlier and uh I do resent that [25] claim, but you know, when you get big [27] enough, people start calling you [28] whatever the hell they want. I guess [29] this makes sense if you're doing NADN, [31] if you're doing make.com, if you're [32] selling agents, if you're selling [34] traditional AI automations, built-in [35] OpenAI, whatever you are selling, this [37] is going to apply for you. Okay, [38] basically local businesses are generally [39] not a good client profile to go for [41] because of three major issues. The first [43] is some lead genen problems, then value [44] perception problems, then finally some [46] financial constraints. So, I'm just [48] going to go over all of these with you [49] guys and then give you some alternatives [50] that I think might be a little bit [51] better. biggest issue with local [52] businesses is just the limited [54] geographic pool that you're operating [55] under and the difficulty and relative [58] inaccessibility of scraping large [59] amounts of local businesses to pitch [61] them services. So what I mean is you [62] have a limited geographic pool, right? [64] How many HVAC businesses are there in [66] Chattanooga? If your niche is HVAC [67] businesses in Chattanooga, you can only [69] really, you know, shoot your shot like [71] 200 times. If your niche is, you know, [73] B2B creative agencies in the United [75] States, for instance, you could shoot [76] your shot hundreds of thousands of [77] times. Uh, in which option do you think [79] would teach you more? Which one do you [80] think you get better at doing the thing? [81] Obviously the ladder, right? As a result [83] of the fact that you have to scrape [84] local. Usually you have to use like [85] Google Maps base scrapers or you have to [87] like scrape some sort of big directory, [89] yellow pages or whatnot. So the cost of [91] doing this is usually a lot higher than [92] something like Apollo or LinkedIn. Now [94] that's not to say just cuz the cost is [95] high you shouldn't do this. But if you [97] combine it in conjunction with all the [98] other points I'm going to make, I think [99] you'll see why. There are some [100] exceptions where it costs a lot to get [102] an audience list, but then you make way [104] more money on the audience list cuz [105] nobody else is doing it. It's kind of [106] like a barrier to entry, but this isn't [107] really one of those because local [109] businesses get pitched all the freaking [110] time. It's also difficult to scale the [111] outreach and all this just leads to poor [113] ROI in your own marketing spend. So, [115] I'll walk through a lot of this in more [116] detail in a second and give you guys [117] those alternatives. But yeah, that's [118] that's the high level view and I just [120] want to give people the 8020 within 5 [121] minutes the video. The second issue is [122] value perception problems. Local [124] business owners, as crappy as it is for [126] me to say, typically have pretty low [127] technical literacy. I mean, like if you [129] think about it, the internet is where [130] most of the money today is made, right? [131] So if a business is doing it like brick [134] and mortar, either they're super [135] passionate about what they're doing and [136] they're technically literate, which is [137] very unlikely, or they're just like they [139] kind of lack the ability to get on the [141] internet and make a thriving and [142] successful internet business and take [143] advantage of like the multiples of [145] leverage and stuff. So they're kind of [146] operating from that lower technical [147] literacy standpoint. Now, there are lots [149] of opportunities in local businesses, [150] don't get me wrong. One big move I'm [152] seeing right now are a lot of private [153] equity companies rolling up like 50 or [156] 500 dental clinics or 50 or 500 other [159] local Botox clinics or something like [160] that. and then implementing some of our [162] AI and automations in those. But usually [164] you're not working with a local [164] business. You're working with the [165] private equity firm. You're you're [166] working with a company doing the roll [167] up. You know what I mean? Anyway, uh [169] they have pretty low technical literacy, [170] which means it's difficult for them to [171] really understand everything that you're [172] talking about honestly just from a [174] bird's eye view. You have to do a lot of [176] explaining and you usually have to [177] justify, you know, the problem that [178] they're facing that they don't even [179] realize. The solution that you have for [181] them, you have to explain that, too. [182] Then you have to say why you're the [184] right fit for it. Isn't that just a ton [185] of work? Well, why do you have to do [186] that every time? Right? There are so [188] many better options out there. A lot of [189] your sales calls just end up being [190] education as opposed to selling. And [192] I've sold to I mean over a hundred local [194] businesses probably at this point. I [195] used to do doorto-d dooror selling [197] marketing services and like the [198] introductory marketing automation [200] services way back before AI and [202] automation as an industry was even a [203] thing back in in 2018 and 2019. Most of [205] my business was education and now I [207] steer clear of that. And basically the [209] further away I've gotten from local [210] businesses, the more money that I've [211] made if I'm honest. Um a lot of them are [213] also kind of skeptical of digital [214] solutions. A lot of them don't even know [215] what chatbt is or don't know how to do [217] it. So, you just get very long sales [219] cycles with the stuff. Okay. And then [221] the third quick bullet point to get you [223] most of the value of this video quickly [224] is a lot of them have financial [225] constraints. I realized the other day um [228] that with the money that I'm making, I [229] could rent out several floors of an [230] office tower in my city, Calgary. [232] Calgary has some of the cheapest rent in [234] Canada to be honest for commercial space [235] right now. So, it's not exactly a [237] massive accomplishment, but it just kind [239] of hit me, you know, that I, as an [241] internet business, am so disconnected [242] from ever having to worry about any of [244] that stuff. It it just blows my mind. [246] you know, I don't have to pay for rent. [247] Maybe I'll pay $300 or $400 for some [249] local co-working space just so I can get [251] my tea and, you know, drink their really [253] watered down beer on Fridays and have [255] fun with the gang. Uh, but I'm not I'm [257] not doing that as a core requirement of [258] my business, right? You know, if you're [260] running a local services business, your [261] office is a core requirement of your [263] business. Your warehouse core [264] requirement of your business. All this [265] stuff is a core requirement. And so if [267] you have to spend an additional 10% of [269] your margin before you've even done [271] anything else with the money, before [272] you've delivered even a scent of value [274] to anybody, then right off the bat, [276] you're operating at disadvantage, right? [278] So they typically have tight profit [279] margins. Kind of kind of sucks. They [281] also typically have high physical [282] overhead. And then they have like no [284] dedicated tech budget. I mean, their [286] their budget that I would spend on a [288] bunch of software platforms, they have [289] to spend on keeping the lights on, man. [290] Heating in the winter. It's crazy to [292] think about, honestly. So yeah, a lot of [294] them are pretty price sensitive. It's [295] not to say that companies with low [297] profit margins are bad because if you [299] can change let's say a company with 5% [301] profit margins to 10% what you've done [302] is you've added objectively 5% margin [305] but subjectively to then you have [306] doubled their bottom line right so it's [308] not that that's inherently bad but just [310] to give you guys some context the [311] physical the overhead and then the tech [312] budget are a big issue. Okay, cool. So, [314] let me just run you through in a little [316] bit more detail and then maybe I'll give [317] you guys some more examples and I'll [318] give you guys some some alternative [319] things you can do and I'm also just [320] going to throw a bunch of funny memes at [321] you because I was told that that's how [323] that's how you maximize engagement on [324] these videos. So, it's a lead genen [326] nightmare. Okay, local businesses are [328] geographically constrained like I was [329] talking about earlier. So, the pool of [331] potential clients shrinks dramatically [333] when you target local businesses versus [334] digital businesses. I gave you guys an [336] example of HVAC in HVAC in Chattanooga, [339] but I mean like you know millions of [340] examples, right? Dentists in Vancouver. [342] I actually think dentists are like the [343] best AI and automation niche out of all [345] the possible local businesses you could [347] work with to be honest. But like even [348] like dentists in Vancouver, how many are [350] you going to get, right? So a lot of the [352] time when you're doing like a really [354] high throughput um high volume outreach, [357] like you need a lot of leads to test [358] stuff. Like if you don't have leads to [360] test stuff on, you know, the likelihood [361] that your offer is ever going to be [362] really good is is kind of low. So you [364] kind of do need to like burn a few of [366] these leads. And if you only have like [367] 200, 300 contacts per city or whatever, [369] like you really going to make it that [370] big? I don't think so. Also, then it [372] costs a lot more to do that testing and [373] burning and so on and so forth. If you [374] do digital businesses, there's like a [376] million in one ways to scrape leads. [377] Like, it's not even close, right? You [379] would just search for whatever you want [381] on Google and then you would have a [382] Google SER with, you know, 8 billion [384] agency, you know, like B2B creative [386] agency in Delaware. Even if you do a [388] digital business using a location or [390] something, you will get like a billion [391] businesses. And then you could just have [393] some sort of scraper go through all [394] those businesses, list all those [395] websites, have a scraper go through all [397] those websites, get the email addresses [398] on those websites or use something like [400] any mailfinder or whatever. If you do [402] the brick-andmortar sort of businesses, [403] odds are a lot of them don't even have [405] websites, they operate entirely off of [406] Facebook pages. And I mean like this is [408] just more pre-selection bias. Like if [410] they don't even have the money to have a [411] website or they don't even know what a [413] website is worth to their business, then [414] do you really want to be working with [415] them? they don't have pre-existing [417] systems that print money then your value [420] as an AI automation person is quite low [422] relatively speaking because your value [424] is mostly you take something that works [426] okay then you just skyrocket it you take [429] a pre-existing system and then you [430] skyrocket it you don't like build new [432] systems I mean you can but it's usually [434] a lot more difficult to do that this is [436] the 0ero to one problem which if you [438] could solve you just wrote it [439] disproportionately but the much easier [440] problem to solve is the one to 100 [442] problem how do you 100x something that's [443] working and that's what we do uh really [444] easily yeah a lot of the Lead databases [446] are outdated or incomplete. Time spent [448] on personalization for local businesses [449] doesn't scale. Outreach experiments that [451] would take days with digital businesses [452] take months with local ones easily. [454] There are some kind of creative ways of [455] doing local outreach. I've heard of [456] people there are a couple services out [458] there like swag box services or business [460] holder placard services or whatever [462] where you can for a very low fee [464] actually just like have a bunch of stuff [465] laser printed that seems customized to [467] the person and then you can actually [468] ship them over to their address and it [470] might cost you $2 or $3 a lead. So if [471] you have a really small number of people [473] working in a city, you can't actually [474] use that. But keep in mind that like [476] these are very high cost outreach [477] methods, right? So most people that are [479] watching these videos tend to be more on [481] the beginner side of things. And if you [482] guys are at the beginner side of things, [483] odds are you don't have a lot of [484] disposable income. So yeah, maybe not [487] until you're like super super high up [488] there and have the the money to piss [490] into the wind. Yeah. So here's just a [491] visual representation because I want to [492] offer both visual and text [493] representations. Here's like an example [495] issue where, you know, if you wanted to [496] do local HVAC companies, you want to do [498] NYC, 200 potential clients. Well, we [500] have more than 200 here. I think I was [502] probably kind of ahead of myself. Let's [504] say that there's like, I don't know, [506] 1500 potential clients. We send 1500 [509] emails. Then from this, maybe we get [511] like 10 responses or something. We get [512] three sales calls. We get one client. [514] After we're done with that one client, [515] we got to go to a new city. And NYC is [517] one of the big cities. right now. Um, [520] you know, I'm not trying to say that out [521] of the 1500 CL leads, you're only going [523] to get eight responses. It just, this [525] all depends on your math, but I'm not [526] talking about the math right now. I'm [528] talking about your actual approach. I'm [529] just talking about, you know, a few [531] example scenarios, hypotheticals to [533] illustrate how unlikely it is that [534] you're going to really crush it with [535] this. Okay. Another big issue again is [537] that value perception. So, um, this is [539] one of the funnier [540] memes. You can't really understand the [542] value of AI automation for your client. [544] You have to teach them, right? So [546] because they lack the technical [547] understanding of this stuff, a lot of [548] your sales call is going to be spent [549] educating them. And I mean, educating is [551] great and that is a big chunk of like a [553] consultant's job for sure, but you don't [554] want to be educating that much. Okay, [556] local businesses usually don't use these [558] tools. And so what's interesting is the [560] the perceived value of one of these [561] tools can be um higher or lower. It's [563] weird. Like there's like two audiences. [564] The first audience is like, "Wow, you [566] can do this. That's crazy. That'll [567] completely change my business." The [569] other person's like, "Yeah, but why [570] would I need that?" Obviously, the first [571] person is easier to work with because [573] they see a ton of value with it. But can [574] they even do a lot with that is kind of [576] the issue. And then when you actually [577] want to roll out a system, like I'll [579] give you guys an example for one of my [580] um uh one of my like dental dental [582] clients a while back. They had seminars [585] that they did and then they sign people [587] up at the seminars and they were doing [589] this like really manual approach where [591] the person at the end of the seminar [592] would actually give all of the people [594] pieces of paper with like sign up cards. [596] If they wanted to sign up for some [597] program, they could do it. So everybody [599] had to like wait there at the end of the [600] presentation and fill this in. So I was [601] like, "Hey, why don't we do like a [602] digital approach?" So me and my business [604] partner at the time whipped up like an [605] iPad based system with like a type form [607] and you would log in and then you'd fill [608] out the type form and you know submit [609] the information and it worked great. It [611] was it was awesome. But do you know how [612] long it took to test that thing? We had [613] to wait until the next seminar. Then [615] once the seminar happened, we had to [616] actually like see the respondents of the [618] seminar happened live. And then the next [620] time the seminar happened, we make a [622] couple of changes and see how that went. [624] The next time another seminar would [625] happen, it was like every 2 3 weeks, [626] right? And the volume of data we were [628] getting was basically nothing. And to be [630] honest, we weren't even working in that [631] person's cities. it was difficult for us [633] to actually see what was going on with [634] the iPads and make recommendations as to [636] where to place them along the seminar [637] route and stuff. So, I mean like imagine [640] if it was just a digital form, right? [641] How much easier would it be? Um, in [643] hindsight, there are many better ways we [644] could do it. We could have just um [646] gotten the uh data of uh like all the we [648] could just gotten all the cell phone [649] numbers, the SMS numbers and just SMS [651] everybody a link to a form and then [652] everybody at the exact same time would [654] have all gotten SMS messages. They all [656] would have whipped out their phone on [656] the seminar and it would have been clear [658] like, "Hey, we just sent you guys an SMS [659] with a link to this form. If you guys [660] are interested in this, just fill it on [661] your phone right now. But whatever. I [663] mean, you know, we all make mistakes, [665] including me working with local business [666] owners. So, yeah, you just have to [668] constantly dumb down technical [669] explanations. No real point. The [671] contrast is with digital business owners [672] who a lot of them already use Zapier, [674] CRM, and no code tools. They immediately [675] grasp the value proposition. And like [677] most people on digital now, they use [679] like chatbt. They understand how AI [680] works. They're like inherently [681] interested in it. So, you don't have to [683] do any of that stuff if you're selling a [684] digital business. So, here's like two [686] examples of just how sales calls go. [688] Let's say you're selling somebody that [689] does HVAC. You might spend the first 15 [691] minutes explaining what the CRM is, then [692] explaining some automation concepts, [694] then 15 minutes justifying why it's [696] better than paper, 10 minutes on an [697] actual solution, and then once you're [699] done with all this, you haven't actually [700] built up the value. You've just like [702] basically educated them. So what [703] happens? Well, the owner obviously only [704] cares about the price. They don't want [706] to pitch you, and then you got to [707] follow-up calls, more education. It just [708] takes a lot longer to get to the point [709] where somebody's actually interested in [711] your service. Well, guess what? All that [712] education is just done for you with like [714] digital people. Not always, but a lot of [715] the time. So now you just discuss, okay, [717] what's your current tool stack? Okay, [719] what's your workflow like? Okay, how [720] much money are you making? Okay, great. [721] Here's what an implementation will look [722] like. Okay, great. Here's what some ROI [724] metrics that we think might look like. [725] Okay, great. We can make that decision [726] right now. Shorter sales cycle just [728] means more money. Like imagine if you [730] have a pipeline. I'm going to draw a [731] pipeline again, guys. I'm so sorry. I [733] know that all the time this looks like [734] private parts, but whatever. I'm doing [736] it. That's [739] uh I'm going to take a drawing class at [741] some point. Um anyway, this is your this [744] is your business. Okay, say you have uh [748] I don't know, one Okay, let's say you [749] one lead a [751] week. So, one lead a week goes to your [754] pipeline makes you $5,000. [757] Okay, at the end of it, they're happy. [759] If you could just you could do a couple [761] things to improve the amount of money [762] that you make, right? You could change [764] the amount of money you charge per lead [765] from $5,000 to $10,000. So, if you do [768] this, you will have changed $5,000 to [770] $10,000, right? That's great. But [772] another thing you could do is you could [773] actually just change the length of your [775] sales cycle. Instead of one lead a week, [777] okay, maybe it's two leads a week. Well, [780] now you've just done the exact same [782] thing. Instead of you making $5,000 per [784] week, you're now making $10,000 per [786] week, but you've done it without [787] changing the price. All you've changed [789] is you've changed the sales velocity. [791] You've changed the throughput. So, um, [793] variety of different ways to increase [794] the total amount of money a company is [796] making. But one of them is literally [797] just like speed up how long it takes for [798] people to make decisions and buy in. And [800] then finally, there's the financial [801] reality here. Where is that money? I [803] don't know. Guy can't see it anywhere [805] here. You know, they just have tighter [806] margins. They have less money to spend [807] on growth. They have additional expenses [809] that they need to pay for, right? So, [810] customer acquisition cost, lifetime [812] value ratio is poor. This is um this is [813] really the big part of this, so I'll [814] just list it. A lot of the time, your [816] lifetime value is going to be [817] substantially lower with an in-person [819] business. And then the customer [820] acquisition cost won't really [821] appreciably change. So, it just doesn't [823] really make too much sense. I would say [824] you have to spend money on rent. You [826] have to spend money on a bunch of [827] expenses and line items that you just [828] don't with other businesses. Yeah. [829] Honestly, like I have a funny story to [831] tell you guys. When I was living with my [832] best friend Jonno, we were super into [834] business and we were making like [835] absolutely no money. I was making like [838] 4,000 bucks a month or something. These [839] are Canadian dollars, by the way, which [841] is like a fraction of what an American [842] dollar is even back then. It's like 1.2 [844] or 1.3. So Jono was selling his [846] speakers, which were very expensive cuz [848] we used to do some DJing together and [849] like they were like the top-of-the-line [851] speakers, really, really nice. So for [852] several thousand and there was some dude [854] that wanted to buy it. So, the dude came [855] up through Craigslist and then went up [857] the elevator, knocked on the door, came [858] in, looked at the speakers, right? But [860] while I was listening to Jonno and this [863] guy talk, I realized that this guy was [866] running a business that was making over [867] $2 million a year. Now, put yourself in [868] my shoes, okay? I I had no real business [870] experience. I had a business that was [872] barely covering my personal expenses. I [874] was broke as essentially. And I [876] hear this guy's making $2 million a [877] year. I'm like, "Oh my god, I got to [880] meet this guy right now. This is a big [882] high roller. what the hell is he doing [883] buying, you know, speakers off of [884] Craigslist, right? So anyway, I butt in. [888] I'm like, go, Jonah, let's let's case [890] this guy, right? Let's figure out how [892] he's running his business. And he starts [893] telling us that he runs a local it's [895] like a local cleaning or a window [896] washing business, I think. And we start [898] asking him more questions, you know, we [899] kind of like we guy guy guy guy guy guy [901] guy guy guy guy guy guy guy guy guy guy [901] guy guy guy guy guy guy likes us by the [902] end of the uh you know 10 or 15 minutes [904] and we start talking business you know [906] oh I run this uh this this videography [907] company. Oh, I'm doing like marketing [909] services. Oh we're doing weddings. We're [910] doing all this stuff and then eventually [912] gets to the point where I'm like, "So, [913] dude, like of the, you know, the $2 [914] million top line, that's crazy. Like, [916] what are you guys keeping?" And the guy [918] confidently looks at me. Confidently. [921] And he's like, "Oh, we're between 6 to [924] 10%." And I'm like, [927] "What? 6 to 10%. Are you freaking [930] kidding me? So, of the $2 million you [932] guys are making, 120 grand a year [934] profit, and he splitting us with a [935] partner." And it hit me in that moment [937] that my small little dingy business, [940] which is doing marketing services and [941] videos that made $4,000 a month, I was [945] making almost as much money as that guy [947] that was making uh $170,000 a month just [951] because I was digital and because I was [954] doing everything from my laptop and I [955] didn't have to worry about any of this [956] stuff. All right. Are you going to find [958] 6 to 10% margin local businesses [960] everywhere? No, you won't. I think [962] that's honestly on the the lower end of [964] the sort of business that he was running [965] and I think he probably could have made [966] a lot better and you know what I'm [967] telling you guys now. But yeah, you got [969] a lot of issues. Your AI services end up [972] being a much higher proportion of the [974] person's budget and so they're a lot [975] less likely to want to work with you [977] relative to something like a digital [978] business, right? Which if you just work [980] your way down this little cost waterfall [982] can be a very small portion of the [984] budget. All right, so hopefully I just [986] convinced you. I don't know if I did, [988] but hopefully I did. And if I didn't, [989] feel free to drop a comment down below. [991] I'm happy to debate you guys or maybe [992] talk shop a little bit more. There are [994] of course some exceptions to every rule. [996] Don't take this as me forcing you guys [997] to work with digital businesses, but you [999] know, for most beginners, it's just a [1001] lot easier to get up and running with a [1002] digital one than it is an in-person one. [1004] To me, the inerson ones have just never [1005] really been worth it. So, yeah, if you [1007] guys have any more questions on that, [1008] feel free to drop them down below. If [1009] you guys like this sort of stuff and [1010] want to learn how to grow your own AI [1011] automation business from nothing to [1014] something, definitely check out Maker [1015] School. We have almost 1,800 members as [1017] of the time of this recording that are [1019] literally building an AI an automation [1020] business from scratch. Many of them make [1022] 10, 15, or $20,000 in their first 60 [1025] days in the program. That could [1026] absolutely be you. I show up every day. [1028] I'm super accountable. I keep you guys [1030] accountable as well. And essentially, [1032] it's a day-by-day program that takes you [1034] from 0 to one. All right. Really [1035] appreciate all of your time. More than [1037] happy to record a video on anything that [1039] you guys want me to. Just drop a comment [1041] down below and if it's a good idea and I [1042] haven't done it yet, I will absolutely [1043] consider it. Like, subscribe, do all [1045] that fun YouTube stuff. I'll catch [1046] youall in the next video.

Video: https://www.youtube.com/watch?v=rQcXmY6rSVY
Title: How To Build a Profitable AI Business in 2025 (For Beginners)
[0] Hey, today I'm going to show you how to [1] build a profitable AI and automation [2] business in 2025. Even if you're a [5] complete beginner and have no prior [6] skills, no business knowledge, you have [8] no idea what you're doing. If you guys [9] have been sitting on the sidelines for a [11] while waiting for a sign to get into [12] this business model, treat this as your [14] sign. I'm going to walk you guys through [15] everything you need to know from start [16] to finish. And this business model works [19] if you are using naden or make.com or I [23] don't know, OpenAI or Claude or AI [25] agents or not. whatever tools that you [27] guys are using to do the AI and [28] automation, that part is not relevant. [31] What is relevant is the business [32] pipeline that I'm about to run you guys [34] through. Very first thing right off the [35] bat, this was not around when I started [36] my AN automation agency, but it is for [39] you. And uh what I'm calling this is [40] clientless money. There are a lot of [42] very lowhanging fruit where if you just [45] take advantage of some of these at the [46] very beginning of your AN automation [47] business, you will essentially instantly [48] be making [50] 10ish% more margins than all other [52] competing AI and automation businesses. [54] And what I'm going to do in the next few [56] minutes is I'm just going to guide you [57] through what these strategies, tools, [59] and techniques are. They work as of the [60] time of this recording. If you're [61] watching this in like five years or [62] something, likelihood is these tools [64] will have changed the way that they do [65] their business. But yeah, let me just [67] give you guys all the secret sauce. And [68] if you watch this within a few months of [70] this video going live, this will [71] probably work for you. Okay, so just [73] before I show you guys the pipeline, [75] basically the way that this is going to [76] work is we are going to sign up to a [77] bunch of affiliate platforms. Now, a big [80] chunk of this business model is you [81] basically getting clients to sign up to [83] software platforms on your behalf. A lot [85] of these software platforms can cost [86] money. $100 a month, $200 a month, some [88] even cost $300 a month or beyond. Now, [91] if you're driving a very large return on [92] investment for a client, the money that [94] they're spending on the platform doesn't [95] really matter too much to them. You're [96] usually delivering multiples on it. But [98] if they're spending that money to the [99] platform and then there are affiliate [101] platforms or affiliate uh techniques [103] that allow you to take advantage and [104] kind of recoup some of that, why don't [105] we do it? we should probably do it [107] anyway and then we can make a percentage [108] of the money that the client is spending [110] on the platform and just divert a few [112] percentage points to us. In practice, [114] these percentage points can be uh quite [116] uh quite hefty. I want to say a lot of [118] the platforms I'm going to show you in [119] this video are going to have 30 to 40% [121] affiliate payouts. So um essentially [123] what we're going to do is we're going to [124] sign up for affiliate platforms for all [126] major tools. So make.com's obviously a [129] big one, nadn's obviously a big one, [130] instantly is obviously a big one and so [132] on and so forth. And this is going to [133] create a passive revenue about 5 to 10% [135] on all the tools that your clients ends [136] up using. Um, there is a step-by-step [138] process to get quickly approved for all [140] these programs. I'm going to walk you [141] through what some of those look like. [143] And then I'm also going to cover some [144] other ways that you can save a ton of [146] money right off the bat using what are [147] called coupon aggregators. So, first [150] things first, you want to make some [151] client list money. We're going to start [152] with the affiliate program. So, I listed [155] three here, make, naden, and instantly. [157] Let me just walk you through all of [158] them. There are 20% commission payouts [160] if you sign up to make. You just go to [162] make.com/yen-affiliate for that. There [164] are 30% affiliate program referrals on [168] naden and that lasts for a full 12 [170] months. Just go to [173] wwwv2.naden.io/affiliates. There are 40% [176] recurring commissions for instantly. [177] Just head over to [178] instantly./affiliate. This is a quick uh [180] little pick of my own dashboard for [182] instantly affiliates. I'm making [184] anywhere between 4 and $5,000 a month US [186] off of this. Now, obviously I'm now uh [188] in the creator space and the coach [190] space. So, the numbers of people that I [191] get signing up to these platforms is a [192] lot higher. But even when I was running [194] my AI automation agency, I was making a [196] good additional 1% margin literally just [198] from this one tool. Uh, so you guys have [200] 10 tools. I'm sure you guys could see [202] how you'd make a bunch more. Let's just [203] blitz fire through a bunch of other [205] ones. Any MailFinder, this is um an [206] email finder service. 30% commission on [209] every referral right over here for 12 [210] months. Appify. This is easily one of [213] the best scrapers out there. And hey [214] Jay, what's going on big guy? Hope [215] you're doing well. Um 30% recurring [217] commission up to 2.5K per customer. [220] Smart Lead, which is sort of Instantly's [221] main competitor right now. 35% recurring [223] monthly commissions for life. And then [225] there are a variety of other ones. Okay. [227] Now, I have an exhaustive list of every [229] affiliate program, which you guys can [231] find in my school community. Uh if you [233] guys just head over to Maker School, and [234] then you go over to classroom right over [236] here, month two, and then we click on [240] setup five software affiliate links. [242] Down at the bottom, I have this giant [243] list of basically all of the affiliates [245] that I found that work for this business [247] model. So, if you guys want to jump into [248] Maker School and get that for yourself, [250] feel free. Aside from that though, there [252] are a couple of other ways you can make [253] a ton of money with this. The first is [255] coupon aggregators. There are two main [257] ones that I like to talk about. The [258] first is called Secret. Other one's [260] called AppSumo. I think most people have [261] heard of this. I don't think a lot of [262] people have heard of this, but maybe [263] that's cuz it's technically a secret. [265] The way that Secret works is essentially [266] they negotiate a bunch of deals with [268] popular software platforms. Considering [270] the whole job of an automation uh [271] service provider is to be like, you [273] know, somebody that glues together a [274] bunch of different software platforms. I [276] think you guys can see the leverage [277] here. So, you know, you could claim up [279] to $6,000 for notion. You could get 6 [282] months free on the plus plan. Wave [284] $20,000 in payment processing for [285] Stripe, which saves up to 500 if you do [287] the math. Uh you get a bunch of free [289] perplexity credits. Uh obviously, there [291] are no code platforms like make where [293] you get, you know, 20 240,000 operations [296] for free. Google Workspace for our [297] emails, web flow, right? I'll let you [300] guys be the judge of this. Um I'm [302] affiliated with join secret. I should [303] let you guys know. So, if you guys [304] choose to use the referral link in the [306] description, just know that I'm going to [306] be making a little bit of money off of [308] that, but essentially, you pay one bulk [310] sum to this platform, I think it's like [312] $150 or something like that. Uh, [314] apologies that I don't have the price [315] off the top of my head, and you um just [318] get access to this giant like coupon [320] library. And then before you even start [322] your business, you're kind of in the [323] black, if that makes sense. You've [324] already made a tiny bit of money off of [326] all of the rest of these software [327] subscriptions. Some of these have signup [329] processes, so you don't actually just [330] receive the coupon immediately. Just [331] make sure to note that. But you can [333] usually sign up multiple times or repeat [335] your signups with just different email [336] addresses or something if you need to. [338] So, a lot of people in maker school and [340] make money with make have taken [342] advantage of the make.com one. So, [344] they've gotten 240,000 operations. [346] That's what the 12 months free um [347] equates to. They've also done a lot of [349] like Air Table stuff and there's Apollo [350] stuff as well. Uh so, I'll I'll leave [352] you guys to that. Aside from that, [354] AppSumo is another big deal aggregator. [356] And basically the way that these guys [358] work is they will give you lifetime um [360] access to a platform. Instead of a [364] monthly recurring SAS cost, you just pay [365] like upfront $69 for a certain um you [368] know, lead aggregator or whatever. And [370] then in this way, you just get to [372] arbitrage. You get to like pay now and [374] then save for the rest of your AI and [376] automation career. I personally don't [377] use AppSumo a ton, but you know, you can [380] also get a bunch of deals and stuff like [381] that here. not affiliated with Absumo [383] whatsoever. I just wanted to point that [384] out because I see a lot of people using [385] it. The way that I set up my AN [387] automation business actually was I [388] created an American company using a [390] service called Stripe Atlas which [392] normally costs um $500. Now I then [395] redeemed a join secret credit for [398] $250. So if you think about it, I also [400] had to spend an additional I think it [402] was $125 at the time. So I spent $125, [406] then I spent $500 to set up my business [407] and then I saved $250. We do the math on [410] that. That's 625 divided by 250. Uh why [413] can't I do that in my head? It's 375. [415] There we go. Okay. After I did the $375, [418] I redeemed $200 worth of uh sorry, $500 [422] worth of Stripe um credits. So, I [424] basically made $500 in all the money [426] that I made later. After that, I also [428] redeemed I think it was something like [430] uh $5,000 in various software credit [433] plat for platforms that I would have had [434] to sign up. And then on top of that, I [436] even uh signed up to a partner bank for [438] Stripe Atlas, which I it's called [440] Mercury. And then they ended up giving [441] me an additional $500 after I deposited [444] 10,000. So, okay, I don't I really don't [446] think I'm going to be able to do the [447] math now. This is 375 minus 6,000. So, [451] you can kind of think of me as being in [452] the black by [454] 5,000. Uh oh, [457] boy. 625, I think. Yeah. So, I was in [461] the black 500 [463] $5,625 before I even got started with my [465] business. How cool is that? So, yeah, [467] just wanted to show you guys that this [468] is like what I would do um if I could [470] start again. I didn't get to take [471] advantage of all of these and I really, [472] in hindsight, wish I had set up all my [474] affiliates earlier, but this is the very [475] first thing I would do if I wanted to [476] get up and running with one of these [477] businesses. You guys can get links to a [479] lot of the stuff in the description, so [480] feel free to check that out. But okay, [482] I'm assuming that you've actually gone [483] through all of this rigomearroll and [484] you've actually signed up and you've got [485] yourself this optimized thing which you [487] know is saving money for people that are [488] complete beginners as I've mentioned and [490] now you guys are ready to actually go [491] out and like do something with the [492] automation knowledge. We have the big [493] trampoline. We're basically just waiting [495] for that that double bounce. So uh how [497] do you actually do it? Well, what I do [499] is I build a minimum viable business. [501] You know how everybody talks about MVPs? [503] It's like minimum viable product. Well, [505] I call this my minimum viable business [508] MV. So this is the MVB Chad right over [511] here. Okay? And this is everybody else [513] that does all this market research and [515] all this analysis and they spend 5 years [518] getting a business plan together before [519] they actually go out and acquire their [520] first customer. In this video, I'm going [522] to run you through literally my entire [523] minimum viable business strategy for Aon [525] automation. I'll even walk through the [527] specific steps that you guys need in [529] order to get out there and scale up your [531] business. This is working today. This is [532] what people are doing today. This is [533] what I teach today. This is what I talk [535] about all day. So let's get through it [537] together. The very first thing I do if [540] I'm setting up a minimum viable [541] business, in our case, AI and [542] automation, is I will define a niche. [545] Okay? If you do everything for [547] everybody, you technically do nothing [549] for nobody. I believe that was Alex [551] Ramos's famous quote a couple years ago, [553] and it's true. If you are just a general [555] services provider, you will never really [556] get very far. People want to work with [557] companies that understand specific and [560] highly nuanced needs. And if you brand [562] yourself as an Amiration agency that [564] does everything, then the likelihood is [566] you will not be perceived as such. So, [568] you can make a ton of progress right off [569] the bat simply by defining a niche. But [571] you have to make sure you define a [572] niche, right? A lot of people, they'll [575] pick a niche that kind of sucks, okay? [578] Like a really, really crappy niche, and [580] then they'll waste, you know, 90 days or [581] so of their life. I don't know why [583] that's blue. They'll waste 90 days or so [584] of their life just kind of muddling [586] around in mediocrity because their niche [587] itself is bad. I'll run you through some [589] rules for a good niche, but first, the [590] way that I actually go about defining my [592] niche is I actually have a niche [593] discovery exercise. um essentially where [596] I just walk through a ton of different [598] example niches, example service lines, [601] and then I I concatenate them together [602] to make example positioning statements. [604] So, what I've done is I've literally [605] just had uh what is this like a list of [607] 42 or 41 different niches or something? [609] I guess 37 in total. And these are all [612] niches that work. They're not the best [613] niches in the whole wide world. Um but [614] if you combine them with various service [616] lines, so let's say you sell sales [618] systems to website developers, well then [620] your positioning statement, your your [621] actual niche is very narrow. You know, [623] there are a lot of AI and automation [624] agencies, but there are very few people [625] selling sales systems specifically to [627] website developers. Okay? There are very [629] few people selling finance systems for [630] IT consultants or product development [633] systems for mobile app developers or CRO [635] systems for cyber security people. Okay? [637] If you pick three niches instead of just [640] one, you also get the ability to try and [642] test multiple of these simultaneously [644] with basically no additional sunk cost [646] because when you start one of these [648] niches, you build all the infrastructure [649] to do it. Um, all you need to do to do [650] it to other niches is you usually just [652] need to duplicate the process a little [653] bit. Okay, so anyway, um, I define my [656] niche. And really, instead of just one [658] niche here, I should have said define [659] three niches. That will make things a [661] lot simpler. So after this, you're going [663] to have three niches, okay? You're going [664] to have niche A, you're going to have [665] niche B, you're going to have niche C. [667] Everything that you're going to do in [668] the program, it's just going to set up [670] one of these niches, okay? But you don't [671] need to do three times the work in order [673] to set it up for B and C. [676] In reality, what it is is it's kind of [678] like 1.5 times the work because you've [680] already done all the hard work setting [681] up the email systems, setting up your [683] profiles, and doing all the outreach and [685] stuff for niche A. In order to replicate [686] that across B and C, you just need to [688] like do a tiny bit more. So, 50% more [690] work for three times the result is [692] definitely free money. I'm I'm always [694] going to take free money when it's [695] offered to me. And this is a really good [696] example of doing so. So, what I would do [698] in your shoes is I would go through this [699] niche discovery exercise top to bottom. [702] add in a bunch of other niches that you [704] think may work based off of principles [706] that I've talked about in previous [707] videos. They tend to be digital first. [708] They tend to have high ticket projects [710] and they tend to be low regulation. So, [712] if you guys find niches or industries [714] that satisfy those uh those constraints, [716] then fantastic. Pick three of them and [718] then all you do is you commit to them [720] for at least a 3-month period and [722] promise yourself you're not going to [723] change this niche before you've explored [724] it fully. Okay? So, that is literally [726] step one. This is what I teach people [727] all the time. This is exactly what I [728] would do if I were at the start line of [730] my business again. Pick three niches. [732] Check. We are now done with that. The [733] second thing I do is I determine a [735] business name. Now, a lot of people make [737] this out to be way more difficult than [738] it really is. I actually set a fiveminut [741] timer and I pick as many business names [744] as I can in a 5minute period. I'll use [746] simple tools like namelics for instance [749] where I will basically put in a couple [751] of terms and then I will have this [753] service combine them in eight [755] quadrillion different ways. It's a free [757] service at least as of the time of this [758] recording. I've used this for years. I [760] just get a bunch of business names. [762] Agile, Fusion, Stream, Pipelines, [764] Headway, Code, Reduction, Influence, [766] Assus, Drive, Transform Hub, Flowship. [769] Some of these sound incredible, right? [770] What I would do is I would pick 10 that [772] I like. Okay, just 10. You don't need to [774] do any more than that. And then pump [775] these into some sort of domain name [776] finder, something like Pork Bun or [779] NameCheep or something along those [780] lines. I'll show you what that looks [781] like in a second. From there, you can [783] verify whether or not the.com is [784] available, and then you can proceed with [785] the next step. But yeah, I literally set [787] a 5minute timer, find a business name. [789] Whatever your business name is does not [791] really matter. There's like a [793] 0.00001% of business names will matter. [795] And then 99% of business names won't [797] matter. Then like 1% of business names [799] will just be terrible and you never want [800] your business to be named that. But odds [802] are you're going to be in the 99%. Don't [803] sweat it too much. It's not that [804] important of a decision. Okay. All [806] right. After this, you need to find five [809] pieces of social proof or five case [812] studies. Now, if you don't know what I [813] mean by this, I mean you need pieces of [816] your history, of your corporate [818] experience, of your past that [820] demonstrate that you have done something [821] valuable for somebody at some point in [823] your life. If you don't have this, it's [825] going to be very difficult to get up and [826] running with all the cold email um the [828] Upwork and then the community posting [829] and just the general setting up of all [831] the profiles I'm going to talk about [832] after this. So, my recommendation for [834] you is literally itemize your entire [836] corporate history. A lot of you guys [838] have worked with various jobs. Some of [840] you guys have worked with very big [841] companies. A lot of you guys have [842] freelance experience. Go through every [844] single one of those. Like I'm talking [845] month by month. Open up your email, [847] okay? And just search what did I send [849] back in January 2022. How about February [852] 2022? What was I talking about? Who was [854] I talking to? And essentially just [855] itemize a giant list of all of the [857] biggest hell yeah look at me that you [859] can find. Okay, I did this for myself [862] just earlier and I came up with a list [864] of five. I decided I wasn't going to use [865] my YouTube well, you know, aside from [867] tangentially the 70,000. I'm not going [869] to use like any monetary things relating [870] to myself. Um, this is what mine looks [872] like. I scaled my own content marketing [873] agency to 92k using AI. I've worked with [876] global names like HP and then I put in [878] brackets the market cap which are 36 [879] billion and Fujitsu 38 billion. I run a [882] a YouTube channel on make.com with [883] 70,000 subscribers. That's obviously [885] very big. I've written for insert really [887] big company names over here which are [889] obviously big. Then I've been featured [890] in some high-profile publications like [891] Popular Mechanics and Apple News. Now [893] you're probably looking at this and [895] you're like, "Well, Nick, I'm a [896] beginner. I thought that was the whole [896] point. I don't really have great [898] experience like this. And that's fine. [899] Odds are you guys are going to have some [901] sort of experience. It's not going to be [902] as what's not going to get me banned on [904] YouTube. Ah, screw it. You're not going [905] to have really big dick experience if [907] you're just right off the bat. And [908] that's totally okay. Don't worry too [910] much about that. Just find some [911] experience. Find some value that you've [913] driven for some company. You guys were a [915] salesperson at a business and throughout [918] the year that you were there, you sold [920] $25,000 worth of products. Whether or [923] not that's good compared to all the [924] other sales people in the industry, that [925] doesn't matter. you've actually [926] demonstrated $25,000 worth of revenue [929] value and you should be citing it and [931] saying it wherever possible. So, I [933] generated $25,000 in revenue for a B2B [936] manufacturing company. That's fantastic [938] case. That's a fantastic piece of [940] experience. If you've gone through your [942] whole corporate list and you have [943] nothing, okay, you've just squeezed [945] yourself dry. And to be honest, if you [947] think you have, you probably haven't [949] actually gone through your whole [950] corporate experience. So, pause the [951] video again, go through top to bottom. I [953] guarantee you'll have at least one thing [954] that's somewhat valuable, unless you're [956] like 12 years old and you're just [957] starting on the internet. Now, if you've [958] gone through your entire thing, you [959] don't have anything, then what you can [961] do is you can actually go through my [963] videos, all of my Make.com videos. I [966] have a Make.com playlist called Make for [968] People That Want to Make Real Money. I [970] also have an NAN playlist called NAN for [972] everyone. Go through both of these and [974] then get all of the system blueprints [976] that you can check out my Gumroad. [978] Download them all. Okay? Make a couple [980] of minor changes to them, minor [981] adjustments. Maybe you swap a module [983] here or there. You change one thing from [985] GPT to a claude. Instead of generating [988] Instagram posts, you generate LinkedIn [989] post, something like that. Okay? [991] Convince yourself that you have now [992] materially improved or added on this [994] system and made it yours. Okay? Convince [997] yourself of that. And now when you write [998] your case studies, now you could say [1000] stuff like, I built an AI podcast [1003] repurposing engine that produces 10 [1005] pieces of content uh in, I don't know, [1007] 30 seconds. Okay? Then in brackets, you [1009] could say estimated savings per piece. [1011] you do a little bit of quick math and [1012] you say, I don't know, 200 bucks or [1014] something like that. Even this is enough [1017] to let you go on with that next step. It [1018] doesn't have to be perfect. But the [1020] point I'm making is basically everybody [1022] here that is at this point in the video, [1023] you guys have something, okay? Whether [1026] you have a really big dick uh [1028] accomplishment like you've worked with [1029] Microsoft and you're a for ex Google or [1031] exfang software engineer or something or [1034] something kind of midterm like me. I [1035] scaled my own content marketing agency [1037] to $92,000 a month with AI. Or you have [1039] something a little bit smaller. I [1040] generated some revenue for a company [1042] back when I worked with them a few years [1043] ago. Or if you have nothing at all, you [1045] have at least some sort of example of [1047] automation work that you've done like I [1049] built a system that does X. I created a [1051] system that streamlines Y. Okay. Once [1053] you're at this point and you have this, [1055] just open up a Google doc and put this [1056] somewhere. You are now ready to proceed [1058] with the main outreach step, which is [1060] you need to buy a main domain and then [1061] you need to buy however many sending [1063] domains that you want. So for me to [1065] disambiguate here a main domain is [1068] something like let's say my business was [1070] called circle. Okay and maybe it is who [1072] knows man maybe circles that is way too [1075] bright. Cirly is really taking over the [1077] world. I would do something and you know [1079] the the term circley is not available. I [1081] would get something like [1083] circleyworkflows.com. Okay. I would [1084] spend I don't know I think this is like [1086] $11 or something like that. Right. Let's [1088] check circly workflows. I would spend [1090] $11 a year on this. Okay. This is going [1092] to be your main domain. After you get [1095] your main domain, what you want is you [1097] also want a bunch of secondaries or [1099] sending domains. Okay, there are variety [1102] of ways to do this. It's very difficult [1103] for me to create a video that is [1105] comprehensive and exhaustive and [1106] actually covers all the different ways [1107] to get up and running with mailboxes cuz [1109] there's there's probably like 20 or 30 [1110] as of the time of this recording. I'm [1111] just going to mention a couple. Okay, [1114] one thing that you can do is you could [1115] prepend, which means add text to the [1117] left of the uh domain, or post pend, [1120] which means um add text to the right of [1121] it. Uh you could prepend and postpend [1124] words like [1126] sendworkflows.com. Okay. Get [1130] circleyworkflows.com. Circleyworkflows [1133] kit. Circleyworkflows today. go circley [1138] workflows list uh anywhere between two [1141] to maybe five of these if you guys are [1143] complete beginners and then buy those [1144] domains too. What this will allow you to [1147] do is it'll allow you to have a main [1148] domain which is where your brand will [1150] live where you know your your company [1152] will be basically which you'll use when [1154] you build your website later, your [1155] little online business card. Then it'll [1157] also allow you to have a bunch of [1158] subsidiaries or or sending domains that [1160] you could send email from without [1162] negatively impacting the domain health [1164] or deliverability of your main domain. [1166] And this is really important and not a [1168] lot of people talk about this, but if [1169] you just start sending email straight [1170] from your main domain, uh, we're going [1172] to be sending a lot of email over the [1173] course of the rest of this video or at [1174] least talking about it, you're going to [1175] trash all of that and then the [1176] likelihood that you're actually going to [1177] be able to land in somebody's mailbox is [1179] very low. And also, who wants to send a [1180] bunch of proposals only for them to land [1181] in spam later, right? Definitely not me. [1184] So that's the um distinction there. Now, [1186] this isn't the only way to do things. [1187] There are a bunch of these third-party [1189] platforms now like [1192] zapmail.ai, [1194] inboxology.com, cheap inboxes, uh, [1197] premium inboxes. There there there's so [1198] many of these. Okay. What these do is [1200] they'll actually go through the [1201] rigomearroll and the process of setting [1203] up all of the cold email infrastructure [1205] for you, usually at a slightly lower [1207] cost than if you do a lot of the stuff [1210] yourself. But keep in mind that when you [1211] do this, you are trusting an additional [1213] third party to, you know, deal with your [1215] email inboxes and stuff like that. And [1216] you also sort of lose out on learning [1218] what the process of doing all this stuff [1219] is on your own. Inside of Maker School, [1221] I personally recommend people still set [1223] them up at least once so that they know [1224] how to do the setup. And you also just [1226] learn a little bit about like, you know, [1227] DNS. You learn a little bit about how to [1228] like verify domains and whatnot. It just [1231] adds to your tool stack. Um, because [1232] there are a lot of things that rely on [1234] these other things and knowing a little [1236] bit of that is usually good. But check [1238] out those platforms. cost compare if you [1240] guys are um on a budget and find one [1242] that works for you. Okay. After you are [1244] done with that step, what we do is we [1246] create or publish a website. And I have [1248] three tools here. When I first initially [1251] came up with my programs, I was only [1252] using Web Flow to make my websites. But [1254] now you can use Lovable, you could use [1255] Card, you could use Bolt.dev. There are [1257] variety of other platforms that allow [1259] you to do this stuff. To be honest, a [1260] lot easier than my initial pick. And [1262] this is just how technology works, [1264] right? Things get easier over time. So [1266] what's an example of a website? Well, [1268] just head over to mine. It's [1268] leftclick.ai. Feel free to scroll [1270] through it and see how I position myself [1271] and branded myself. But some key rules [1273] of thumb. I do a lot of roasts of these [1275] sorts of websites in maker school and [1276] make moneywithmake.com. General rules of [1278] thumb are you want less text, not more. [1281] Okay? You want the text that you do have [1282] to mean something. You want to minimize [1284] images on the page that don't actually [1286] add to the value of what you are talking [1287] about. You want all of the buttons on [1289] your website to go to the same place. [1290] So, you don't want to have a contact us [1292] form and a calendar and an email and a [1296] phone number and a snail mail address on [1298] your website. That doesn't really help [1300] people that are interested in contacting [1302] you contact you through their preferred [1303] route. That just kind of confuses [1304] people. They don't really know what to [1305] do. Okay. You generally want some sort [1307] of social proof right off the bat. So, [1309] in my case, remember how I said I was uh [1311] featured in a couple of big [1312] publications? So, I just stick these [1314] right over here. After that, you want [1316] some sort of case study or some sort of [1318] like, you know, slap it on the table and [1320] just show people what you're made of. [1321] So, in my case, I've generated millions [1322] for B2B companies like yours with [1324] automation and AI. And then, you know, [1326] most of you guys at the beginning, the [1327] start line will not have case studies, [1328] but you're going to want to have some [1329] case studies in there eventually. After [1331] that, you're going to want to have some [1332] quote unquote reviews or testimonials or [1334] something. Uh, and then finally, at the [1336] end and bottom of your business, then [1338] you can start talking services. The [1340] number one problem that I see people [1341] make is they start with the services. [1343] But to be honest, nobody cares about the [1345] services you provide. If it says on the [1347] header of your website, or at least [1348] implies that you do AI and automation, [1350] most people at this point, they kind of [1352] understand what automation is. They [1353] understand what automation does, right? [1355] They understand that it's typically [1356] involving a no code tool. And you also [1358] have to ask yourself, okay, how did they [1359] get to my website in the first place? [1361] Most of them are finding it on Google. [1362] Most of them are on the website because [1364] they saw an email that you sent saying, [1365] "Hey, I'm here to sell you AI and [1366] automation services or they got got sent [1368] to it through Upwork or maybe something [1370] like that, right?" So, it's kind of like [1372] know your audience, right? The most [1373] important thing that people are going to [1374] be asking themselves right off the bat [1375] is who is this person? Why does it [1377] matter? Um, and then, you know, how can [1380] I get in touch? The services and [1381] whatnot. You always stick at the end. [1383] And then usually, and this is something [1384] that I do, but usually I will have [1385] pricing on the website. I don't actually [1387] recommend having pricing on your website [1389] if you're a total beginner just because [1390] you don't really know how to price. You [1392] also don't really know how to like [1392] demonstrate your value and it's kind of [1394] risky to have a button that somebody can [1396] just click and then pay you money for, [1397] right? I personally wouldn't recommend [1399] it. I recommend just having some sort of [1400] funnel that goes to a call or whatnot. [1402] So that's it. I always just do onepage [1404] websites for this sort of stuff because [1405] the way that I see websites nowadays is [1407] these are uh business cards, right? [1409] These are literally business cards. [1411] There is nothing really of value on your [1413] website except that it is just a a quick [1416] showcase of who you are. It implies that [1418] you have enough money and enough [1419] resources to put something cool [1420] together. I guess it's a way to showcase [1422] your personality, but for our industry, [1424] to be blunt, unless you're running some [1426] crazy inbound funnel, which most people [1428] aren't, that's all it is. It's not like [1429] something that's actively making you [1430] money. It's just like a check mark. This [1432] person has this requirement of being a [1434] business owner. When I used to go door [1436] to door way back in the day, and I was [1437] going 50 to 80 doors per day with my [1439] business partner, we were knocking, [1440] pitching people, and getting rejected [1442] left, right, and center. One of the most [1444] common questions I got from people was, [1446] "Do you have a business card?" "Hey, [1447] where's your business card?" "Hey, that [1448] sounds awesome. I'd love to see your [1450] business card." Did they actually give a [1452]  about my business card? Basically, [1453] none of them did. The only thing is the [1455] only thing they wanted to see was that I [1457] had spent the requisite amount of time [1459] and the requisite amount of money to [1460] actually go and purchase some business [1462] cards. And that was seen as like a way [1464] to prove my legitimacy. Okay. If I [1466] didn't have a business card, people [1467] would just like, really, you don't have [1468] a business card and you're coming door [1470] to door to sell some services? That's [1471] pretty crazy, man. You know, you're just [1473] seen a lot less legitimately. Websites [1475] are basically the same thing. If you [1476] have a website, you just kind of tick [1478] that box and then the prospect can move [1479] on with their consideration of your [1481] offer. All right, next up, we need to [1483] set up the platforms that we signed up [1485] for affiliates for. So, now that we have [1486] all the infrastructure to do cold email, [1488] which is by far the lowest cost per [1489] acquisition mechanism of acquiring [1491] clients these days, you set up instantly [1493] smart lead, you do some scraping and [1494] then you start sending. So, I have [1497] created several tutorials that show [1499] people how to do this. If you go through [1500] my YouTube videos, I show you how to get [1502] up and running instantly and and and you [1504] know, scrape various data sources. So, [1506] I'm not going to rehash all that. That [1507] would probably take me three or four [1508] hours. But to make a long story short, [1511] this is instantly that cold email [1512] platform that I showed you the affiliate [1514] for. What you do is you take these [1516] mailboxes, okay? Um you take the [1519] domains, you set up a bunch of mailboxes [1521] on Google Workspace and whatnot, you [1522] connect them to instantly. If you use [1524] one of those platforms that I was [1525] showing you guys earlier, it'll actually [1527] usually just automatically do it for you [1529] and and then do all of the math and the [1530] rigomearroll um in order to get you up [1532] and running. Let's say Zab Mail or [1534] Inboxology. Um after that, you need to [1536] scrape a bunch of leads. The current [1537] number one source that everybody's using [1539] to get this stuff is Apollo, which in [1541] and of itself is just a scraper that [1543] scraped LinkedIn a few years ago. The [1544] reason everybody goes to Apollo is just [1546] because it's way cheaper than LinkedIn. [1548] And you can also get like structured [1549] data like email addresses and phone [1551] numbers and stuff like that. But Apollo [1553] itself is too expensive these days for [1554] most people. So a bunch of solutions [1556] have come up on the internet that allow [1558] you to scrape Apollo, which again just [1559] scraped LinkedIn. And uh that's what I [1561] would recommend for this purpose. There [1563] a couple of Ampify Apollo scrapers. Uh [1566] this one over here, scrape up to 50K [1568] leads is pretty good. It's the one that [1569] we've been recommending throughout the [1570] program. It's a$120 per thousand leads. [1572] So if you get 800 email addresses, 700 [1575] email addresses out of those thousand [1576] leads, how much you're really spending [1577] per email address? It's like4 cents or.3 [1580] cents or something like that. the math [1581] works out pretty good in your favor. So, [1583] I'll uh leave that for another one of my [1586] videos. Next up, I would create an [1587] Upwork profile. A lot of people sleep on [1589] freelance platforms like Upwork, but [1591] this is the straightest line path to [1592] getting customer number one. The value [1594] with a freelance platform like Upwork, [1595] if you're unfamiliar, is essentially [1597] through all other sales methods. You [1599] need to know what the customer problem [1601] is. Then, you need to know what the [1603] solution that they're looking for is. [1604] And then, you also need to somehow prove [1606] that you are the best person for the [1607] job. Now, if you're a beginner and you [1609] don't even know where to start, right? [1610] you've only just added a niche to your [1612] niche discovery checklist and you've [1613] only just started creating all of this [1615] stuff. You've only just started learning [1616] what businesses struggle with and the [1617] various problems they're in. The odds [1619] that you're going to be able to solve [1619] those first two problems, the problem, [1621] the solution, very low. Very, very low. [1623] So, what Upwork does is it basically for [1625] a small fee just gives you a bunch of [1627] leads that are looking to have their [1628] problem solved with specific solutions. [1630] Then the only thing that you need to do [1632] is you just need to prove why you're the [1634] best fit for the job. So it basically if [1636] you think about it mathematically it [1637] takes this job of yours as a salesperson [1640] which previously was problem solution [1644] and then why you and then just [1647] eliminates 2/3 of the problem. So this [1649] is the only problem to solve. This the [1650] only thing you need to answer and that [1653] is a much easier job than going through [1655] everything top to bottom learning the [1657] pain points and problems of the niche [1658] and then coming up with a variety of [1660] ways to pitch your solution. Okay. So, I [1663] would highly recommend everybody here [1664] get on Upwork. I know a lot of people [1666] sleep on it and a lot of people have [1667] various opinions about Upwork. Um, it's [1669] funny because, you know, a couple years [1670] ago when I started talking about this [1672] publicly, the public opinion on this was [1674] just like, "No way. Upwork's so crap. I [1676] can't believe you guys are doing this. [1677] That's not a real business. You can't [1679] start a real business." Uh, uh, you [1681] know, selling to leads on Upwork. Over [1683] that time period, I can almost [1684] confidently say I make more money than [1686] 99.999% of them. And it's all thanks to [1689] this. So, as long as you can get up and [1691] running quickly, you can worry about the [1693] legitimacy of your business model, uh, [1695] uh, you know, how scalable it is and all [1697] the rest of that stuff later. The first [1699] thing you need to do is just get a [1701] couple customers under your belt. Don't [1702] let you know, opinions or some random [1705] crappy comments you've seen on the [1706] internet or somebody's judgmental [1708] attitude towards a platform stop you [1710] from doing so. Okay. All right. So, I [1713] have a bunch of um, other steps here, [1716] but we're rounding it out. Um, next up, [1719] find communities related to your niches [1721] and join. So, another big thing that not [1723] a lot of people talk about is that there [1724] are variety of ways to source customers [1727] that don't actually involve cold email [1728] and that don't actually involve Upwork [1729] or any sort of paid platform. As of the [1732] time of this recording, a really cool [1733] way to do so is on school. Okay, school [1736] is a community platform. It's where I [1738] host my own community, maker school and [1741] makemoneywithmake.com. Now, they have [1742] this cool discovery page. What you do is [1745] you pump in the niche that you just, you [1746] know, one of the three niches that you [1747] just found. So, let's say [1750] videographer, okay? You pump this in and [1752] then you just join a bunch of free [1755] communities. The value of this is what [1757] you're doing when you join a bunch of [1758] videography niches, assuming that's one [1760] of your um videography communities, [1762] assuming that's one of your niches, is [1763] you are essentially going directly to a [1766] place where your target audience just [1768]  about their problems all day. So [1770] you get to see exactly what the problems [1772] that people are suffering from that are [1773] in your niche are right now which helps [1775] you solve that issue that I was talking [1776] about earlier that Upwork also solves. [1779] And then two, you also basically have a [1780] captive audience of people that suffer [1782] from problems that you can pitch to. Now [1784] the key in doing this intelligently is [1786] you have to not make your pitch seem [1789] like a pitch. Okay? You need to come [1790] into these communities and there are [1792] many there are hundreds of these [1793] communities just for you know cinema and [1795] videography alone. But you need to come [1797] in these communities. You need to not [1799] create a TV ad. Okay? What you need to [1800] do is you need to build some authority. [1802] You need to build some reputation in the [1804] community by helping people and [1805] answering their questions, not asking [1807] for anything in return. You need to [1808] establish yourself as just somebody in [1810] the community by replying to posts, [1811] engaging with people, sending DMs. You [1813] do this for 15, 20 minutes a day for [1815] several weeks. And then finally, you [1817] start helping people solve concrete [1818] problems, then doing things like DM them [1821] afterwards, asking, "Hey, how's it [1822] going? Can I help you out anymore with [1823] this?" Oh, hey guys. Uh, I just came up [1826] with this really cool solution which [1827] solves this problem that I found [1828] somebody posting about last week. [1830] Actually, you just drag and drop a few [1831] modules in make.com. Here's a quick [1833] tutorial. If anybody uh wants the [1834] blueprint, just send me over a DM. I'll [1836] give it to you guys for free. Um, and [1838] you know, if anybody has any follow-up [1839] questions, just let me know. When you [1841] start getting in the habit of doing this [1842] and you're consistent enough that you [1843] can build uh, you know, some sort of [1844] reputation and then some sort of [1846] memorability, um, communities can end up [1848] being a really profitable lead [1850] generation channel as well. It's just [1852] it's not as direct. It's not a straight [1853] line of path as Upwork and cold email. [1855] So that's kind of step number god, where [1857] are we at now? Eight or nine? Yeah, I [1860] think that's step number eight. Step [1862] number nine is okay. So if you think [1863] about what we've done now is we've set [1865] up the minimum viable most of the [1868] minimum viable business. We've set up [1871] our marketing and lead genen [1874] channels. Well, what happens when we [1876] actually get somebody that's interested [1878] in our service? Obviously, we have to [1879] pitch them, right? So what we do next is [1881] we have to set up our sales stuff. Okay, [1883] so this is this is kind of like where [1885] we're at right here actually. So that's [1887] where something like a proposal template [1889] comes into play. The way that this [1890] business model works is basically you [1892] will uh talk to somebody, you will [1894] market, you will generate a lead. When [1896] you get a sufficient amount of interest, [1897] you will get them on a call of some [1899] kind, which is usually called a [1900] discovery call. Sometimes you may have a [1902] second call later on called a closing [1904] call where you actually do like the [1905] closing and the pitching of the service. [1907] Most of the time, in my case, I just do [1908] one. And then at the end of the call, [1910] you know, the person's on board, they [1911] really like what you have to say. You [1912] say something along the lines of, "Hey, [1913] I'll send you over a proposal with all [1915] this information and a little signature [1916] spot at the bottom, which you can pay on [1918] immediately upon signing. Does that [1919] sound good? Okay, great." And then you [1921] go and you actually do it. This is how [1922] it works. This is how like money changes [1924] hands. In order to do that, we obviously [1925] need a proposal template of some kind, [1927] right? So, I have a variety of proposal [1929] templates in um Maker School over here. [1931] Maker School obviously being that [1933] automation community. If we jump on over [1935] to um classroom and then we go to month [1937] one, then scroll down to day number five [1940] and module number three, there are a [1942] bunch of uh well, first of all, I I give [1945] like a step-by-step walkthrough of how [1946] to set up a proposal template in a [1948] platform called PandaOC. I guide you [1950] guys through more or less everything. [1951] Essentially, I'll just give you guys a [1953] quick look through. We start with a [1955] title page. Then you usually have a [1956] problem. You have a solution statement [1959] of some kind. You then have some sort of [1961] scope of work. Then you round it out [1963] with a timeline. Then finally, you have [1965] some sort of pricing where you usually [1967] have a pitch, usually like a signature [1969] line or something like that. Okay, so [1971] you need to set up some sort of proposal [1974] template. I usually do this in Panda [1975] just because I've used Panda for a while [1976] and I'm very comfortable with it, but [1978] there are a variety of other great [1979] platforms out there that you guys could [1980] use too. Better proposals is one. I'm [1982] not a fan of DocYign, but Hello Sign is [1984] is pretty neat as well. And basically, [1986] you just need something that you can add [1987] a bunch of variables into when you have [1988] somebody that's interested, then send it [1990] within the hour. Okay, then almost last [1992] but not least, we need to set up Stripe, [1994] PayPal, or some other processor, right? [1996] So, now that we're done with the sales, [1997] it's like, okay, how do we actually like [1998] make money with this? Well, that's where [2000] we're at right now. So, we need to [2002] actually set up Stripe, PayPal, or some [2004] other mechanism by which we can receive [2005] funds when somebody does actually want [2007] to pay us. And my recommendation is [2009] Stripe. And I know Stripe isn't [2010] available everywhere. Not everybody can [2011] use Stripe. The trade-off with Stripe is [2013] it's something like I think 3% um [2015] processing fee, which you know, if you [2017] think about it, I mean, in my case, I [2018] made what, [2019] $170,000 last month. Uh the vast [2022] majority of that was processed through [2023] Stripe or a service using Stripe. So, I [2025] paid I [2027] think is my math that bad? I think it [2030] really is that bad. Hold on. I paid I [2032] think $5,100 um last month to Stripe. [2035] That that seems about right to me. So, [2036] you might be thinking, man, that's a ton [2038] of money. But if you think about the [2039] amount of time and energy that Stripe [2040] saves people like me and people soon to [2042] be like you on actually doing the [2044] service, it's crazy. Well, there's some [2045] additional fees you have to pay for all [2046] this stuff. But they do things like [2048] automated tax compliance. They do things [2050] like um automated invoice follow-ups. [2052] They're also just like the cleanest and [2053] the simplest and the best user [2054] experience. And they're very integrable. [2056] So, I recommend them. I love them. I'm [2058] very happy to spend a couple percentage [2060] points in my business if it means I can [2061] make 500% later on because I'm faster. [2064] But you can also use, you know, PayPal. [2065] Okay, PayPal is very popular. A lot of [2067] people use PayPal. Um, I know that a lot [2069] of places in Asia use Payaneer. Okay. I [2072] really don't like Payaneer because every [2074] time somebody sends me an invoice with [2075] Payaneer, I have to go and like validate [2077] all this stuff and I've made all these [2079] accounts. It just still doesn't believe [2081] it doesn't believe who I am for some [2082] weird reason. But use Payaneer. You can [2084] do that as well. Um, if you're operating [2086] through Upwork, Upwork actually includes [2087] built-in payment processing, which is [2089] one of the reasons why I like it so [2090] much. So, you know, you don't actually [2091] have to like do this if you get an [2092] Upwork client, although I would [2093] recommend you have it set up in advance. [2094] And I'm sure you guys could tell there [2096] are like 500 other payment processors. [2097] Just Google payment processor and then [2099] insert like the name of your country or [2101] local. Okay. All right. Once you're done [2103] with that, we have literally everything [2105] we need to get going. The one thing that [2108] I'd recommend from here on out is you [2110] set some sort of daily minimum. So daily [2112] number of emails sent, daily number of [2114] Upwork apps sent, daily number of [2115] community posts made. Now, I created a [2117] little template just to show you guys [2118] what that looks like. Um, you could [2120] literally have a Google Sheets activity [2122] tracker with four columns. One for date, [2124] the other for cold email, one for Upwork [2126] applications, one for community posts. [2128] Then if you have other lead generation [2130] mechanisms, well then you could just add [2131] them over here on the right and track [2133] them once a day. It really doesn't have [2135] to be any more complicated than that. I [2137] use Google Sheets tracker systems like [2138] that all the time and I make $170,000 a [2141] month as of the time of this recording. [2142] You do not have to make it any more [2144] complex. The one thing that you do have [2145] to do is you just have to be consistent. [2147] If you're going to do this thing, go [2148] back to the Google sheet at the end of [2149] the day and just fill it in. What you'll [2151] do is the next day you'll come on and [2153] you'll say, "Wow, yesterday I hit seven. [2154] Today I'm going to try and hit eight." [2156] And it functions as an in-built [2157] accountability mechanism. Another really [2159] cool thing that you can do with Google [2161] Sheets, so you actually just share these [2162] with three or four of your friends. If [2164] you guys have people that are in your [2165] group that are starting similar sorts of [2167] businesses, well, now you can all have [2168] activity trackers that are [2169] accountability mechanisms and you can [2170] just have everybody go through [2171] everybody's at the end of the day and [2173] just give everybody a thumbs up or [2174] something like that if they did it. or [2175] just rag on your buddy if they fail to [2177] hit their 10 Upwork apps for the day. [2179] Okay, very simple, straightforward. Feel [2180] free to build it out like this if you [2182] want or build a better structure. But I [2184] guess my point is keep it simple, you [2185] know, whatever you're going to do. And [2186] last but not least, you now have [2187] everything basically set up for you to [2190] actually go and acquire customers. Okay, [2192] all these are sort of unscalable if you [2194] think about it, right? I mean, like the [2196] number of Upwork applications you send a [2197] day scales with your time directly. [2199] Number of community posts you make per [2200] day does scale with your time directly. [2202] a lot of the cold emails and looms and [2204] custom DMs that you're going to send if [2205] you do any sort of outreach, these [2206] things will scale with your time [2207] directly, but they're also the most [2209] important part of the business and [2210] they're the things that you should be [2211] spending all your time on. So, if you do [2212] this enough, and when I say enough, I [2215] mean, we have a ton of people in Maker [2217] School that make uh thousands of dollars [2219] in their first couple of months. I mean, [2221] this uh guy Cooper was at day 28 when he [2223] closed what looks to be over a $30,000 [2226] deal plus some equity. Um Barb, I think [2228] closed it in a few weeks. We have a [2230] variety of wins which you guys could [2231] check out here. If you do this sort of [2232] consistent daily outreach and daily [2235] compounding, you will eventually get on [2237] a sales call with a customer. And when [2239] you get on a sales call with a customer, [2241] all you need to do is some variation of [2243] what I'm calling the simplest sales call [2244] SOP currently out there. So, you will [2247] build some rapport. You'll So, you'll [2249] make some little joke. I always do one [2250] about how I am in Calgary, so I wrote a [2252] polar bear to work today cuz I'm [2254] Canadian. And they usually chuckle. You [2256] ask them why they're on the call with [2257] you. So, you literally just say, "Hey, [2259] listen. You get tons of cold emails a [2260] day. I can almost guarantee you that. [2262] So, what made mine stand out?" Okay. [2264] This will tell you literally exactly how [2266] to sell them, what they liked about you, [2268] what you can expand on. Then you ask [2270] them what their problems are. So, what [2273] would you say is the main problem right [2274] now? Why you haven't solved it yet? So, [2276] what stopped you from solving it yet? [2278] How much is it currently costing you? [2280] So, let's do a little bit of math here. [2282] This is preventing you from getting one [2284] customer a week, you're saying? Okay. [2285] And how much money is that customer [2287] usually ordering if this problem didn't [2289] exist? $5,000 worth of product. Okay. [2292] So, is it fair to say this is about [2293] $20,000 a month liability right now? All [2295] right. Awesome. And then finally, how [2297] quickly do you want it solved? Well, I [2299] think I have everything that I need. I [2300] guess my last question is just how [2301] quickly do you want this solved? You [2303] know, is this a a let's do it today [2304] thing? Let's do it next month sort of [2306] thing. Fill me in. From here on out, you [2308] cover your experience in brief. So, you [2310] just give them a quick 30-se secondond [2312] summary of who you are and why it [2314] matters. Then you screen share and you [2316] show them an example of a solution that [2318] fixes their problem which you can either [2320] build live in front of them or if you [2322] have some, you know, templates or [2324] something that fit the specific problem. [2325] Uh maybe templates that you've gotten [2327] from my YouTube channel or my Gumroad or [2329] my communities, then you can do so then. [2330] And you just ask them, does this seem [2332] like something that would solve your [2333] problem? If their answer is yes, [2335] fantastic. You can either pitch them [2337] directly, okay, this will be [2339] $2,895. I could send over an invoice [2341] right now. Or you could send a proposal [2343] with costs, etc. within 60 minutes. [2346] Great. That sounds awesome. Let me whip [2347] together a proposal for you and I'll [2349] send it to you within the hour. It'll [2350] contain everything you need, plus a [2352] little signature field and even a place [2353] for you to pay an invoice um should you [2355] get to that point. Sound good? Great. [2358] Simplest sales call SOP. Anybody can do [2360] this. Um I'm going to include this in [2362] the description so you guys could take [2363] it and run with it. Obviously, I go into [2365] a lot more detail in my programs about [2367] what the ideal sales call looks like, [2369] but I think that's a highle enough view [2370] that that should let everybody here get [2372] started and make some meaningful [2373] progress. All right. Finally, the last [2376] and I want to say most important part is [2378] we need to iterate. So, you yes you if [2383] you do this, you will definitely get [2385] your first customer. I mean, it's just a [2387] matter of time. Everything that I've [2388] talked about here is not it's not [2390] complex. It's very very simple. It's [2392] difficult to do consistently and if [2394] you're the sort of person that can build [2395] habits and the consistency and [2396] accountability to do this for a very [2398] long period of time, you will inevitably [2399] be one of the big players on the [2400] internet today. Uh but it's not, you [2404] know, it's not easy. So if you could do [2407] it all day, um doing it all day is not [2409] enough. What you need to do is you need [2410] to iterate. So you need to make it [2411] better. What I mean by this is um you [2413] need to go through the following steps. [2415] And this is just my recommendation. This [2417] is me just doing a bird's- eye view look [2418] at how most of the people in my program [2420] can succeed. and I just, you know, tried [2422] to tailor all my recommendations to [2423] them. But essentially what happens is [2425] you will acquire your first client, you [2427] do a great job, then all you do is [2430] increase prices and service quality by [2431] 30%. And then you repeat. Okay? Then [2434] along the way, you perform what's called [2435] a retrospective, which I'm going to get [2437] into in a moment. And then you do this [2440] to acquire client number two, then [2442] client number three, then client number [2445] four, and so on and so on and so forth. [2447] every route around the wheel. You [2449] basically just charge a little bit more [2450] and then you get better at doing the [2452] service itself, which is why you're [2453] charging a little bit more. Okay, so [2455] this is the circle of life and this is [2457] the circle of an AI automation agency [2460] and this is what I would recommend [2462] everybody get in the habit of doing. One [2464] of the main uh problems that I see in my [2466] communities is, you know, Nick, I'm [2468] charging $500 to $1,000 per project and [2470] I've been doing this for the better part [2471] of last month. How do I get out of it? [2472] Well, literally just you just you just [2473] increase your prices. You just increase [2475] them by 30 40%. You throw them at the [2477] wallet. You see what sticks, okay? [2478] Eventually, you get good enough that you [2480] can pitch much much higher costs. [2481] Eventually, you understand the the [2483] client problems and needs and stuff like [2484] that to the point where that's not a big [2486] deal for you. Okay? But what is this [2488] step right over here? What is this [2489] retrospective? Let me cover it. [2491] Basically, there are three retros that I [2493] like to get people to do if you want to [2495] get in the chain of continuous [2496] improvement and then have your agency or [2498] your service or whatever you're really [2499] doing blow up. I focus these on the lead [2501] generation because this tends to be the [2503] biggest problem area for most people. [2504] And then I focus in the actual client [2506] fulfillment as well a little bit. So [2507] there are three retrospectives that I [2509] recommend you guys get in the habit of [2510] doing every time you get a client. Okay. [2512] First is every time that you send out a [2513] bunch of cold emails and that somehow [2515] lands in some sort of business [2516] opportunity. What you do is you [2517] determine the stats. So you count up all [2519] the emails you sent, count up all the [2521] emails that have been opened, you count [2522] up all the replies to those emails, you [2523] count up all the positive replies, then [2525] you count up the calls that resulted. [2526] And then you ultimately count up the [2527] deals. So, you are going to have a [2529] spreadsheet that actually looks like, [2530] you know, sent, opened, replied, [2533] positive replies, calls, then finally [2536] deals. Okay? And you'll do this every [2538] time you do a retrospective. And usually [2540] it'll do something, I don't know, you [2542] might send, let's say, I'm just going to [2543] be very easy here. A,000 and then 800 [2546] people will open. Open tracking isn't [2547] really big these days. It's kind of [2548] buggy, but I'm putting this in here just [2550] for um I guess posterity sake. Maybe [2552] you'll have, you know, 50 people reply. [2554] That's a reply rate of 50%. Sorry, at [2556] 5%. Then maybe of these you'll have 25 [2558] of these be positive replies. From these [2560] 25 positive replies, maybe you'll get 15 [2562] calls. Then maybe out of these you'll [2564] get three deals. Okay? So you have a [2565] spreadsheet that looks just like this. [2567] Then what you do now that you have all [2568] those numbers is you will go through all [2570] of your copy. You'll open up your [2572] instantly campaigns, your smart lead [2573] campaigns, everything that you need. You [2574] actually split test the short copy [2576] versus long copy. You'll split test [2578] little parts of copy. Like you'll you'll [2580] throw in the word I instead of we. [2582] You'll um experiment with being very [2584] blunt but also being more laid-back. [2586] You'll experiment with including assets [2587] in your uh flow. You'll experiment with [2590] including ice breakers in your flow [2592] versus maybe templating it out. You'll [2593] experiment with copying templates off [2595] the internet, templates you've seen with [2596] me and weaving that into your flows. [2598] You'll experiment with taking a template [2599] and then making it very different and [2601] then you know seeing whether or not that [2602] works better. So I guess what I'm trying [2604] to say is you'll just do a bunch of [2605] split testing the actual campaign [2606] parameters itself. [2608] Okay? Then you'll go through your [2610] communications. You'll split test [2611] different sequences. So when I say [2613] sequences, I mean, you know, when [2614] somebody responds to you positively, [2616] what do you normally say? How do you [2617] handle that? How quickly do you respond [2619] to that? Do you respond quick enough? Is [2620] it an hour later? Is it 2 hours later? [2622] Is it 24 hours later? Ideally, you [2623] should be responding to positive [2625] inquiries within like a minute or two. [2627] You should be beling notifications to [2629] your phone like cut through any silence [2631] blockers and literally just like respond [2632] right now. It's an urgent critical [2634] opportunity. You should have templates [2635] ready to go that do most of it for you [2636] that allow you to make little changes. [2638] Okay. And finally, one thing that I [2640] didn't mention uh actually right over [2641] here, which I'll just add to [2643] them is um you also test your audiences. [2647] Okay, finally, once you're done with [2649] that, you say, "Okay, great. I have a [2651] list of learnings now. I'm going to make [2652] those changes." And then you just keep [2653] on going. And you don't, you know, allow [2656] yourself to get so beat up that your [2657] campaign didn't perform very well or [2659] that, you know, you're not doing as good [2660] as you could. All you do is you just [2662] proceed through this loop over and over [2663] and over again every time you get a new [2665] client or, I don't know, every two weeks [2666] or so, however often you really feel is [2668] necessary. I just caution people against [2670] doing this too quickly. Um, you know, [2671] don't do this daily, for instance. It [2672] does not make you better. There's like a [2674] sweet spot and that sweet spot tends to [2675] be every week or two, assuming you're [2676] doing the steps that I lay out in my [2678] programs. Um, you're probably going to [2679] be getting a client every week or two, [2680] which is why I just say do it every time [2681] you get a client. Okay? Same thing with [2683] Upwork. You determine your stats. So, [2685] you'll have a spreadsheet. It'll say [2686] sent. Then, it'll say number of [2688] proposals viewed. It'll say number of [2690] replies or responses. It'll say the [2693] number of calls you've done. And then, [2694] it'll ultimately say the number of [2695] deals. So maybe you send 100 proposals, [2698] excuse me, maybe 40 of these proposals [2700] actually get viewed. Maybe 20 people [2702] actually reply to you. Maybe you have 10 [2704] calls and then maybe you close with [2706] three deals. Okay. From here, you'll go [2709] through the profiles. You'll test [2710] pictures. You'll test above the folds. [2712] You'll test videos. You'll test proposal [2714] CVs. You'll test literally everything [2716] that you can on the profile. You'll test [2718] changing all this stuff up. You'll test [2720] changing that up. You'll test changing [2721] the background color. doing the online [2723] for messages bubble, changing the title, [2725] changing the specialized profiles here, [2727] showing your earnings versus hiding your [2729] earnings. Okay, you'll do uh your [2731] portfolio. You will I can't believe I [2734] still have that on it. I've made just [2735] about $500,000 upper. You change your [2737] video. You'll change your uh portfolio [2740] blog posts and the writing and the the [2742] summary of your work history and the [2743] hours per week that you're available and [2745] all that stuff. Okay, you'll go through [2747] this and you'll basically just try a [2748] bunch of stuff and see what works. [2751] Feedback is always better than [2754] planning because feedback involves you [2756] interfacing with the real market and [2758] that's what we're going for. Then again [2760] go through your comm split test [2761] different sequences and just see what [2762] sort of communication methods are [2764] ultimately responsible and you getting [2765] and the client what you can do better [2767] and then finally ran it out with [2768] fulfillment retrospectives. So you have [2770] a couple of stats here that not a lot of [2772] people are aware of. Um but the big ones [2774] that I find important are sorry I said [2777] number of calls. I believe what I meant [2778] to say [2779] was number of [2782] projects. Uh so uh you know you'll have [2785] a spreadsheet that looks something like [2786] this. Projects, you'll have cycle time. [2788] Cycle time is how long it took for your [2791] project to enter your queue, your your [2793] your desk basically and then leave and [2795] then be done. Okay? You will get number [2798] of revisions. You will get the cost of [2800] the project, you know, cost of goods [2802] sold. And you'll just have this little [2803] spreadsheet. Maybe you got three [2804] projects this month. Maybe on average [2806] your cycle time was 3.5 weeks. That's [2808] pretty long, not going to lie. Maybe on [2810] average clients wanted four revisions. [2812] Well, that's a lot of revisions. Maybe [2814] on average your internal cost per [2815] project was, I don't know, [2817] $500 or um let's say your average [2820] project was $3,000, you know, maybe [2822] about 16%. These are all pretty high, [2824] right? These then give you everything [2826] you need to make them better the next [2830] generation essentially. Okay? Then go [2832] through all of your client comms. Go [2834] through every message sent, every call [2836] you've done, every email, etc. Then [2838] identify ways to improve. Some very low [2840] hanging fruit that I frequently see, [2842] people aren't contacting their clients [2843] enough. People will usually get a deal [2845] and then they'll just disappear for a [2846] week. Clients really like it when you [2848] give them updates every couple of days. [2849] One of the simplest and straightest ways [2851] that I basically doubled my bottom line [2853] was literally just setting a daily [2855] period where a client could reach me [2856] anytime that they wanted, then using [2858] that daily period to give them updates. [2859] It was took it took me like 5 minutes [2861] per day, not even. and I made vastly [2863] more money and a vastly lower return as [2865] a result of doing it. Okay, schedule [2867] something in your calendar, daily client [2869] update, just go through top to bottom, [2871] you know, what have I done for this [2872] person? What have I done for that [2872] person? What have I done that person? [2873] What have I done for that person? When [2875] you um also schedule an update when you [2876] actually have things to share with the [2878] client, it shows that you haven't [2879] forgotten about them, which is a big [2880] thing that they care about. Is this [2881] person just riding me for free and not [2883] actually doing any work? So, do tons of [2885] updates, give them deliverables, give [2886] them visuals, and then I don't know, [2887] maybe experiment with uh ways of getting [2889] everything up front. for AI automation. [2891] Usually that's stuff like 2FA, stuff [2893] like codes, stuff like credentials, [2896] stuff like API access and stuff like [2898] that. A lot of people um actually leave [2899] this till the end and they got to call [2900] the client 5 million times over the [2902] course of the next 3 weeks to drip out [2903] access. Okay, great. So that is how to [2905] build a profitable AI business in 2025. [2908] And I tried to keep everything here as [2909] palatable and as simple for complete [2911] beginners to get up and running with. If [2912] you guys liked what you heard in this [2914] video, definitely check out Maker School [2915] because it's basically everything that I [2917] just ran through plus more just with a [2918] dayby-day accountability and then [2920] recommended minimums where I basically [2922] record videos for you every day, [2923] coaching you through the process of all [2925] these steps, showing you how to do them, [2926] and so on and so forth. You know, if you [2927] guys have made it to this point in the [2928] video, you probably like what you hear. [2930] You like the sort of content that I [2931] make. You guys are invested in seeing me [2933] grow or succeed in some way. Please [2934] leave a comment down below letting me [2936] know what you liked about the video. If [2937] you guys have any ideas for future [2938] videos, you want me to create content on [2939] something. I source most of my ideas [2941] just from you guys at this point, [2942] especially the motivated ones that make [2943] it to the end. So, that'd be really [2945] helpful. And then, yeah, just like the [2946] video, subscribe to the channel, do all [2948] that fun stuff and help me make it to [2949] the top of the AGO. Thanks so much, and [2951] I'm looking forward to hearing all about [2952] your wins. Juice.

Video: https://www.youtube.com/watch?v=vx8xCRSqE_E
Title: The Best Online Business For Beginners To Start In 2025
[0] here's the best online Business for [1] Beginners to start in 2025 you don't [3] need any special skills you can start [5] this with zero prior business experience [7] you can do it all from your laptop and [8] requires almost no Capital to get up and [10] running plus it takes advantage of one [11] of the biggest Trends in our economy [13] today and I've personally made over a [14] million dollars with it by the end of [16] this video you'll know what this [18] business model is why it's in such high [20] demand right now how to get started in [21] just a few minutes and I'll give you a [23] bunch of free templates that I consider [25] the highest quality resources currently [27] available on this subject so you can cut [28] your learning curve by 70 Maybe 80% so [31] what is it well in a nutshell you [32] basically Implement simple AI models [34] like chaty PT in small to midsize [36] businesses using drag and drop no code [38] editors this may sound complex and maybe [40] even scary to some of you but the [42] distance between a total beginner and [44] someone who could realistically add [45] value to a business in this way as maybe [47] less than a week or so so this is a very [49] unique moment right now and here are the [50] reasons why first large language models [52] have completely changed the game a few [54] years ago if you guys wanted to build [55] some custom automations for a business [57] something that might be as simple as [58] triggering an email when a form got [60] filled out you needed some serious [61] technical chops you needed to know [63] multiple programming languages you [64] needed to understand apis and generally [66] you needed to have several years of [67] experience but today with AI models you [70] can build very powerful automations with [72] little to no code just by dragging and [73] dropping modules across the screen these [75] tools have gotten so good so quickly [77] that the barrier to entry has [78] essentially completely disappeared [80] second the demand is absolutely insane [82] every single business from local service [84] providers to Fortune 500 companies is [86] currently figuring out how to try and [87] use AI to automate processes like this [90] they know that they need it but they [91] don't really know how to implement it [92] and the reason why that matters for us [93] is the really big consulting firms think [96] your uh deits think your massive [99] companies they're focusing entirely on [100] Enterprise clients with multi-million [102] dollar budgets and meanwhile that leaves [104] millions of small to midsize businesses [106] desperate for somebody to help them [107] Implement Solutions but really nobody's [109] stepping up to do it right now the gap [111] between supply and demand is what makes [114] such a great opportunity for beginners [115] in 2025 and that's exactly what we have [117] available to us now I'm not saying that [118] this window is going to stay open [119] forever I mean technolog is mature [121] markets saturate that's just how [122] business works and that's totally fine [124] every approach to business or sales or [126] marketing will eventually become [127] suboptimal I talk about this all the [128] time my own programs but right now the [130] timing could not be better and I [132] anticipate with this upcoming AI agent [134] boom right around the corner demand for [135] services like ours are going to spike [137] for the next few months and presumably [139] people that join now are going to be [140] able to make more money than ever before [142] I'm not just throwing around buzzwords [143] here let me break down exactly why this [145] opportunity is different from basically [146] every other next big thing you guys hear [149] about the versus timing when chachy PT [151] came out in 2022 everybody jumped [153] straight to thinking oh my God AI is [154] going to replace everything but if we [156] look back what actually happened well [158] naturally businesses tried implementing [160] AI in their processes but a lot of them [162] found that it just wasn't good enough to [163] actually meaningfully change their [165] processes in their systems and a lot of [166] business owners understandably walked [168] away with kind of a bad shitty taste in [170] their mouths honestly the only real [172] thing that a lot of these business [173] owners use AI for and have used AI for [177] over the course of the last couple years [178] is just copying and pasting out outfits [180] from chat gbt and obviously while that's [182] beneficial to the business's [183] productivity in bottom line only bu a [185] little bit anyway since then models have [187] gotten substantially better and small to [189] midsize business owners are now just [190] starting to get back on the market and [192] look for ways to implement these amazing [194] new models that they see all over their [195] Facebook and Instagram feeds into their [197] business the problem is a lot of the [199] solutions that they're seeing are super [200] complicated they're incredibly [202] intimidating and they're very scary and [204] basically to make a long story short [206] they're not really made for people like [208] them they're made for Enterprise they're [209] made for these big consulting firms like [210] I was mentioning earlier so this is [212] where the opportunity lies this is how I [214] and many other people have made a ton of [216] money we will intentionally sell simple [218] systems made using straightforward no [221] code tools that the customer can [223] understand and actually maintain [224] themselves if they need to usually it's [226] like 10 modules Max in addition you'll [228] add a little bit of documentation you'll [229] run the customer through it in terms of [231] like a a kid could understand and voila [233] you now make several thousand dollars [234] for your time if you do this right the [236] customer will actually pay you more [238] because of the simplicity in the [240] solution uh they'll pay you more for the [241] convenience basically of knowing what [243] the hell's going on and then their [245] ability to actually jump in versus you [247] building out some super complicated [248] technical solution is actually very [249] valuable as well I see the same thing [251] every single day in my agency business [253] owners come to me all the time after [254] they see some super complicated fancy [256] chatbot or Mega AI agent with a million [259] billion nodes and all they really need [261] is you know somebody like me to come in [263] and drag and drop flow together in 5 [265] minutes that delivers $10,000 a month in [267] value so here's what a lot of people [269] don't understand the real opportunity [271] here is not in building super complex AI [273] agents or these crazy automation systems [275] it's not actually being super good at [277] this stuff I mean if you think about it [278] logically people that are really good at [280] developing are basically programmers and [282] we're kind of seeing what's happening to [283] the industry right now right it's [284] tanking the real opportunity is [287] basically in being this person who can [288] take very simple tools that are [290] available right now typically these no [291] code glue like tools like make.com NN [294] and some other basic AI Integrations [296] then use them to solve simple but very [298] real business problems and then just [300] copy and paste it and the best part is [302] while everyone else is chasing the next [304] shiny AI tool or trying to build the [306] most complex solution possible by taking [308] this approach you focus on what actually [309] matters which is delivering results the [311] clients can see and measure I'll give [313] you guys a real example one of our [314] community members built a simple lead [316] generation automation for a recruitment [317] company the tools themselves cost 97 [320] bucks a month he set it up in about two [322] hours and he charged the client over [324] $10,000 it solved a very specific but [326] simple problem which was automating [328] their lead generation the client used it [330] to make over $50,000 a month in [331] commissions it is worth it for that [333] small business to keep paying that [335] member because it delivers a significant [337] return on investment even if all it took [339] for them to put it together was a few [341] modules and a couple of hours a time [342] right they're making $40,000 additional [344] dollars per month because of it and [345] that's exactly what I mean by practical [347] AI Solutions no buzzwords no complex [349] infrastructure just Simple Solutions [351] that make businesses more money which is [353] ultimately all we care about so what [354] exactly makes AI automation the best [356] business model for beginners let me [357] break it down in a way that actually [358] matters first the margins are ridiculous [361] most people starting online businesses [362] are basically fighting for scraps they [364] are drop shippers that are battling it [366] out for 10% margins or they are content [368] creators that are begging for views not [370] like me they're affiliate marketers [372] competing in saturated markets right [374] there are all these different business [375] models that I don't know at the end of [376] the day they might make a million [378] dollars and then they'll have like $50 [379] to $100,000 left over but with AI [381] automation agencies your economics are [383] insane the tools to build most [385] automations that I'm talking about here [387] cost like 50 bucks a 100 bucks total but [389] at the end of it you can charge $1,500 [392] to maybe $10,000 per solution just [394] because you're delivering massive Roi to [396] clients by solving these super simple [398] but Mega low hanging fruit and I'm not [400] talking about theoretical value here I'm [401] meaning like actual measurable and [403] tangible results or deliverables that [405] that business can see in a few days I'm [406] talking about leads I'm talking about [408] sales process optimization I'm talking [410] about proposals I'm basically talking [412] about things that drive an Roy second [414] and this is super crucial the technical [416] barrier right now is at an all-time low [418] you don't actually need a computer [419] science degree you don't need 5 years of [421] coding experience with tools like [422] make.com and Ed end you guys can create [424] powerful automations through Visual [425] interfaces extraordinarily simply um I [428] have watched many complete beginners [429] learn these tools literally over a [431] weekend and then start building Client [433] Solutions the next week third you're [435] completely location independent I know [437] dozens of members from our community [438] that are running their companies from [439] like Thailand building automations for [441] clients in the US or Europe or maybe [443] they're in Argentina serving clients in [445] North America your only limit really at [446] the end of the day is your internet [447] connection fourth and this is the real [449] key the scalability to this business [451] model is built right in once you guys [453] build an automation for one client you [454] basically can just template it you can [456] you can export the blueprint or download [458] the file and then sell that same flow to [460] different businesses with minimal [462] customization I had one member build an [464] email responder automation for dentist [465] and then sell basically the exact same [467] system to 12 other dentists in different [469] cities meaning same work 12 times the [471] revenue lastly the results are immediate [474] and extraordinarily measurable it's not [475] like SEO or content marketing where [477] clients might have to wait months to see [478] results you know most automations at [480] least the ones that I talk about [481] building deliver instant gratifications [483] meaning client can literally see their [485] processes automated in front of them in [487] real time they see their time being [489] saved from day one and think about it [491] what would you rather sell a social [492] media management package where you're [493] constantly creating content and [495] justifying to clients why the ROI [497] matters before they can see it I mean [498] that's what I was doing for a very long [499] time I'm not a fan or maybe a Drop [501] Shipping Store where you're competing [503] with a million other businesses that are [504] selling the exact same products from [506] China or would you rather build [507] something like an automation system that [509] SA aves your client 20 hours a week and [511] generates a measurable Roi literally [513] from day one obviously the last one the [515] reason this model wins is simple it's [517] very high demand and as of now it's [519] still low supply has extraordinarily [521] minimal startup costs and very high [523] margins basically to make a long story [525] short Perfect combo for beginners [527] perfect combo for people that don't have [528] a lot of money or resources getting into [530] a new business so quick disclaimer [531] before I show you exactly how to get [532] started let me be totally straight with [534] you about something this agency or [536] freelancing or AI agency model whatever [538] you want to call it it's simple but just [541] because something's simple doesn't [542] necessarily mean that it's easy a lot of [543] people are going to see a $5,000 [545] automation package and then think that [546] they can just copy and paste templates [547] and start cashing checks that's not how [549] it works what actually sets a successful [551] automation company or freelancer agency [553] apart is your ability to understand how [555] businesses operate you basically need to [557] be able to look at a business understand [559] from a bird's eye view what they're [560] probably doing and figure out what [562] automation can make the biggest impact [564] so yeah you can use proven templates I [565] mean I give away a ton of them on my [566] channel but you need to understand why [568] they work and how to adapt them [569] aside from maker school I got over 150 [571] videos teaching exactly how to build all [573] of these automations step by step [574] everything from cold email systems to [576] lead generation flows to client [578] onboarding everything is on my Channel [579] for free the real difference between [581] people who succeed and people who don't [583] is not really the access to information [586] it's the willingness to actually learn [587] the fundamentals and take action and no [589] fancy course or Community or template [591] can give you that so let me show you [592] exactly what you need in order to get [593] started with an AI automation agency [595] first the tools you guys need maybe $50 [597] to $100 a month in order to get started [599] get yourself a make.com subscription $10 [601] a month for their core plan then sign up [603] to open AI to use AI tools on average [605] this might cost you another 10 bucks a [606] month for usage then sign up to appify [608] this gives you access to scrapers they [610] let you do things like get Instagram [611] profiles LinkedIn data Etc you might be [614] able to get that for 30 to 40 bucks a [615] month and then finally get yourself a [617] subscription to a cold email platform [619] like instantly or smart lead it's going [620] to cost you about 30 or 35 bucks a month [623] that's it show me another business model [624] where you guys could start with [625] literally $100 in tools and then build [626] potentially a sixf fig company you'll be [628] very hardpressed to find them in terms [630] of the skills you'll have to spend a [631] couple of hours watching some tutorials [633] but we're not talking about getting a [634] computer science degree here the [635] platforms are super visual that just [636] means you are connecting simple Lego [638] blocks and creating flows you are not [640] writing complex code here is what a [642] realistic timeline looks like for [644] somebody that's getting started in week [646] one maybe you'll learn the basic tools [647] by building some personal automations so [650] start with my make.com playlist I have [651] almost 60 hours of completely free [653] make.com training it'll run you through [655] everything from setting up your first [656] automation to building a complex AI [658] infrastructure that I've sold for [659] $10,000 or more after you've watched [661] maybe 10 hours of that just build two or [663] three simple automations for yourself [665] and voila you're good to go any [666] additional learning from this point will [668] certainly help but it's not required [669] from here on out you just start pitching [670] customers the simplest way to land a [672] client is to look at businesses you [674] already have connections with then find [676] one specific problem they have that Wast [678] their time and then you actually build [679] them a simple proof of concept without [680] even asking them then just put it in [682] front of them that's the simplest way [684] but not everybody has the experience or [685] the network so the second simplest way [687] because I want to be respectful of [688] people that starting from Total scratch [690] here is get an upwork profile fill out [693] all of the profile Fields watch my [695] upwork video for step-by-step guide and [697] basically how to set up your profile [698] choose an hourly rate optimize for SEO [701] Etc and then just take all that and [702] apply to three to five jobs per day with [704] a customized loom video this is an exact [707] working strategy as of 2020 whatever the [710] hell this video is filmed you can do [712] this today members of my community [714] literally close tens of thousands of [716] dollars worth of deals every 24 hours [718] and I think the fastest win today has [720] literally been within an hour of sending [722] your first upwork application so very [724] doable you just need a little bit of [726] gumption you need the willingness to put [727] yourself out there once you're done [728] document exactly the results you [730] delivered for that client and then just [731] Target similar businesses with the same [733] problems and then after you're done with [734] that just build systems and templates [736] you just copy and paste the thing that [738] you built for that guy and then you use [739] it to sell to the next guy in that way [742] it's a very bootstrap sorted business [744] one of our community members Ethan [745] doubled his income to $122,000 in less [747] than a month following that exact [749] process so the biggest obstacle here is [750] not technical skills it's not finding [752] clients it's taking action and putting [754] yourself out there most people who try [756] this are going to overthink it they're [757] going to over plan it and ultimately [759] self-sabotage before they even get their [760] first client um the biggest failure mode [762] I see is when you spend weeks preparing [764] and never actually talk to a potential [766] client so don't be one of those people [768] start with a super simple automation get [770] one result and then just build it from [771] there focus on bootstrapping your [773] business from the ground up okay so what [774] does this actually look like in practice [776] what are you actually going to be doing [777] uh it's one thing to talk about it's [778] another thing you actually show you so [779] that's what I'm going to do next what I [781] have in front of me is a simple no code [782] Builder called make.com you guys can see [784] it right over here I'm going to show you [785] how to automate a very simple but very [787] common business use case which is [788] responding to inbound emails and I'll [790] show you how I put together a flow in [792] literally five minutes I use this [793] example all the time anybody that [794] watches my channel will have seen it [796] before but simple automations like this [797] can literally improve the revenue of the [799] company that is using it by 100% or more [802] assuming that the business is primarily [803] inbound okay so this is make.com let's [806] pretend we have a form on my website [808] right over here when you click the [809] select talk button you move over here [811] and it asks for your name asks for your [813] email address and then at the end of it [816] it asks for what you're looking for hey [818] I'm looking for an automated system to [821] respond to emails for me okay that seems [824] pretty simple now in my case I'm just [826] using type form which is why I have that [828] base uh response over here but in your [830] case maybe you're using a different form [832] solution I don't know might be built [833] right into the WordPress website that [835] you guys are building or maybe it might [836] be part of the webflow site that you [837] guys have up and running all I need to [839] do is Click create a new scenario then I [842] need to go to type [844] form and in my case I'm going to be [846] using the list responses module to grab [849] that then I need to do my type form [854] connection that's going to open up an [856] account window for me that will ask to [858] read through my type form information [860] and then get everything it needs in [861] order to [863] connect I'm now connected to Nyx type [865] form the form that I'm going to be [867] taking if you look at the title here [869] it's called my new [871] form and then down below all I'm going [874] to do is set the limit to one and click [877] save now if I click this run once in the [879] bottom right hand corner what it's going [882] to do is it's going to go and extract [884] the form inputs from my type form so [886] what we could see here under mappable [888] answers so we actually have that exact [891] form that I just filled out on my [892] website but now we have it accessible to [894] us in this no code tool you are a [896] business maybe a marketing company that [898] gets a lot of form Ines on your website [899] what we've done is we've basically taken [901] it from your website and we've stuck it [902] inside of our no code Builder here okay [906] next up is I'm going to implement AI [908] into my process to take some of that [910] information and then use it to respond [912] to that email what I want to do is I [915] basically want to immediately respond to [917] this person so they think that [918] somebody's on the website looking [920] watching and basically open and [922] available for a conversation so I'm [924] going to go over to this open AI node [926] then I'm going to go all the way down [927] here to where it says create a [930] completion what this is now going to do [932] is this is going to connect to open AI [934] in my case I've already made the [935] connection if you guys want to make the [936] connection just head over to add what [938] you need to do is you need to grab an [940] API key now that may sound scary because [942] it's a three-letter acronym but it's [944] very easy to do just click that link go [946] over to your open AI account which you [949] could set up in less than two minutes [951] then create a new secret key and then [954] copy that key over I'm not going to do [957] that for the purposes of this discussion [959] we're just going to assume that you have [961] then I'm just going to select a very [963] simple model let's do GPT [965] 40 then what I'm going to [967] say is I'm going to tell this AI model [971] that I wanted to do something with the [972] message that we just got through email [974] so under messages I'm going to go user [977] and I'll say your task is to respond to [980] emails on behalf of left click an AI [984] automation [986] agency after that I'm going to say your [989] email is [992] here I'm then going to map a variable [995] the variable that I'm looking for is [997] what are you looking for this is the [999] variable that contains the request that [1001] the person had a moment [1003] ago I'm going to say the name of the [1006] person that reached out is I'm going to [1009] feed their name in [1011] there the body of the let's say request [1015] is here then I'm going to say response [1019] using this [1020] template hi [1023] name thanks for reaching out sure happy [1029] to help you with paraphrased version of [1033] what they [1036] want I'm out of the office right now [1040] could I give you a ring in 15 if so just [1045] drop me your phone number [1049] or I'll be in touch via email whatever [1054] works thanks Peter [1058] okay next up what I'm going to do is I'm [1061] going to take my email node then I'm [1064] going to use the send an email function [1067] connect that over here on the right hand [1069] side and what I have to do is I have to [1071] connect this to my specific account now [1074] the simplest and easiest way to do so is [1075] you just click add and under connection [1077] type I'm using Google so I'm just going [1078] to go Google restricted save then it's [1081] going to ask me to log into my Google [1082] account so I'm going to go over here to [1084] the Google account that I want to send [1088] from and then voila I'm now connected to [1091] my account how cool is [1092] that next up what I'm going to do is I'm [1095] going to send [1096] to the specific person that just sent me [1099] the request which in my case is just the [1100] same email that I'm going to be sending [1103] from after that I'm going to go down to [1106] subject and I'll say regarding your [1108] request [1109] constant type will go plain text these [1111] are all just settings that you could [1113] use and then ultimately what I'm going [1115] to do here is in content I will just [1118] feed in the result from the model that [1120] seems pretty straightforward [1122] right okay great I'm going to [1125] now so I just have to check this one [1128] folder go inbox I'm going to now click [1130] save what I'm going to do now is I'm [1132] going to run this and let's see what [1134] happens we retrieved the data correctly [1137] we've mapped this out into ai ai has [1140] responded with this message hey Nick [1143] thanks for reaching out sure happy to [1144] help you with sending up an automated [1145] system to respond to emails M of the [1146] office right now going to give you a [1147] ring in 15 if so just drop me your phone [1148] number and I'll be in touch with your [1149] email whatever works thanks Peter we've [1152] now even gone as far as to literally [1154] send that email and if I go back to my [1158] email [1159] address you can see that it's right over [1162] here so we've actually just read through [1165] and then had AI process that email and [1167] we did it all in literally just a few [1169] minutes these are the sorts of [1170] automations that businesses tend to [1172] really like the reason why is because [1174] one of the lowest hanging fruit in a [1175] real business that takes inbound leads [1177] it's just not responding to the customer [1179] fast enough to verify that you are [1180] actually interested in helping them or [1182] working with them if you can respond to [1184] a customer within about a minute or so [1185] of them sending a request to you you [1187] will literally improve your conversion [1188] rates for a local business somewhere [1190] between 300 to 400% that's 3 to four [1193] times the money on New Leads okay so let [1195] me wrap this up by being completely [1196] straight with you is AI automation the [1198] ABS abute best online Business for [1200] Beginners to start in 2025 uh yeah it's [1202] not even close the economics are [1204] incredible the barrier to entry is the [1205] lowest it's ever been and the demand is [1207] massive and growing but here's the thing [1209] none of this is ultimately going to [1210] matter at all if you don't take any [1212] action I've been in this space long [1214] enough to know that out of everybody [1215] that is here watching this video maybe [1217] two or 3% will actually do something [1218] with this information the other 97% will [1220] think oh that sounds cool maybe save it [1223] to their watch later playlist or [1224] something and then go back to scrolling [1226] don't be in that 97% the people who are [1228] crushing it in this space right now [1230] aren't smarter than you they don't have [1231] some special advantage over you they [1233] just decided to start even when they [1234] weren't 100% ready or 100% confident I'm [1237] not here to hard sell you anything I got [1239] 150 videos in this Channel showing [1240] exactly how to build these automations [1242] step by step everything from cold email [1244] systems to lead generation flows to [1245] client onboarding it's all there for [1247] free so anybody can get up and running [1249] with this stuff without sending a scent [1250] and if you're shorten on cash I [1251] encourage you to but if you want to Fast [1253] Track your progress and join a community [1255] of people actually building automation [1256] agencies right now I've made it [1258] ridiculous L simple to do so by joining [1260] my community maker school I believe so [1262] strongly in maker school that I [1263] guarantee my members their first paid [1265] client by day 90 or you don't pay [1267] assuming that you do the work the cost [1268] is currently less than what most people [1270] in the United States spend on junk food [1271] every month so you could just replace [1273] that with daily accountability I don't [1274] know do whatever the hell you want you [1276] get access to daily q&as where I [1278] personally answer your questions a [1279] monthly call with me where you guys can [1280] ask me whatever the heck you want my [1282] entire automation template library and a [1284] community of over a thousand people that [1285] are actually doing everything that I [1287] just showed you as we speak anyway [1289] whether you guys join or not please take [1290] action on what you learned today within [1292] the next 24 hours sign up to make.com or [1294] another not code tool like NN go through [1296] at least one of my automation training [1298] videos and then just build a simple [1299] automation just one because that's how [1301] it starts that's how everyone that is [1302] currently making money in this business [1304] model got going it's not Out Of Reach [1305] for any of you you just have to be [1307] willing to take that first step even if [1308] it's scary and hard thanks for watching [1311] peace out

Video: https://www.youtube.com/watch?v=DNfp1XKC15k
Title: Sell THIS AI Content System for $1K (FREE TEMPLATE)
[0] Today, I'm going to build an AI podcast [1] repurposing engine live in front of you [3] that takes as input a YouTube link to a [6] podcast and then outputs 10 or more [8] high-quality social media posts, all [9] beautifully formatted and ready to go. [10] Uh, the reason I'm doing this video is [12] because I wanted to show you guys what a [13] live build process looks like from start [14] to finish. So, I'm actually going to [16] narrate my thoughts out loud. I'm [18] actually going to walk you guys through [19] what my process looks like at every step [20] of the way and really just give you guys [22] an in-depth look into the actual [25] building of a system, not just the [26] finished product. Without further ado, [28] let's get into it. [31] So the way that this works is we start [33] with a form submission where I put in [35] the URL of a podcast. I then get the [37] transcript via a thirdparty service [39] which costs 1 cent per transcript [41] something like a hundred podcasts per [44] dollar. Then we will use Open AAI to get [46] a bunch of data, spin different [49] transcript sections and do different [51] things which I'll run through in a [52] moment. We'll then split that out, loop [54] over each item, and then here we will [55] generate Instagram posts, LinkedIn [57] posts, Facebook posts before finally [59] generating the the conccomment images as [61] well. We'll then do some data [62] processing. Then we'll add it to a [64] database. Then finally, we'll just do [66] some merge and then update a form. And [69] what happens on the back end is once [70] we've done all this posting, what we're [72] doing is we're essentially updating a [73] database. Looks something like this. [75] Okay, very simple and easy to manage. [77] four column database called date added [79] postbody post image posted on with the [81] platforms that we want to post to down [82] below and our system is essentially once [85] a day I just set this to run every [87] morning at 7 checking through this [89] database to see what new additions we've [91] made so in this way our system is [93] entirely dynamic and um it never [96] overwhelms the service that we're [97] posting on we can generate 10 or 20 or [99] 50 new posts across all these platforms [101] and then we can just drip them out [102] according to some schedule that we've [104] predefined after we've checked the [105] Instagram posts I then upload upload to [107] Instagram using their graph API, which [109] I'll run you guys through before [110] updating the Google Sheets database. And [112] we do the exact same thing with the [114] LinkedIn posts. It's just we need to do [115] an HTTP request for that. And then the [117] Facebook posts as well. In terms of what [119] this looks like live, let me actually [120] test this puppy out. Let's test this [122] workflow. See a new form that's just [124] opened. I'm just going to feed in a [126] podcast right over here to this insert a [127] podcast get content endpoint. [130] Second, when that's done, as we see in [132] the background, we are now getting the [133] transcript via a thirdparty web service, [135] one of my favorite web services, Apify, [137] which I'll cover over the course of the [138] video, this transcript is going to come [141] to us very nice and perfectly manicured. [144] And then after that, we feed that to [145] this OpenAI module. This open module's [147] job is basically outputting a very big [151] um JSON that contains an index with the [155] number, the paragraph transcript, some [157] context and feedback, and then a deep [159] explanation of what the section that I'm [161] talking about is along with an image [162] description that we can use to generate [164] some JPEGs, and I have some rules down [166] here. Because we're feeding in a [168] relatively long transcript to a model [169] that has a context of 128,000 tokens, [171] takes a fair amount of time to do this [173] run. It's usually about 30 seconds or [175] so. Uh but after that we're we're going [176] to split it out and continue. And then [178] as you can see we are now generating the [179] posts and then adding them. So we just [181] did Instagram, now we're doing LinkedIn. [184] And finally we'll do Facebook as well. [186] If we go back to our [188] database, you can see that we're [190] actually adding these as we [191] speak. And so this is populating that [193] sort of middle ground database which I [195] like. Now on the back end, now that [197] we've added these, what we can do is we [199] can test this workflow pretty easily. So [201] we're going to upload to Instagram [203] first. [204] We're going to post on Instagram and [207] we're also going to update the Google [208] Sheets database to tell us that it's [210] posted. We're going to do the same thing [212] with [213] LinkedIn. Then LinkedIn, we need an HTTP [215] request to do and we're going to add [217] that there as well. And we can actually [219] see these live. We'll just wait for this [220] to finish posting. But if I refresh my [222] LinkedIn company page, you can see the [224] post has actually been made. Actually, [226] I've done two cuz I just did one other [227] test. But I chose like a pretty friendly [229] kind of style here. I figured that I [231] would I don't know. some company that [233] did watercolor styles. Obviously, my [235] actual brand, Left Click, is not like [237] that at all. But, uh, yeah, I just [238] wanted to give you guys some freedom [239] here. You guys can generate these images [240] however you want. Alex Ramos is doing a [242] lot of this stuff recently, which I find [243] interesting. He's, um, applying a [245] specific style to a specific type of [246] content. And then, yeah, we've now [247] posted them across all, you know, [249] Instagram, Facebook, and LinkedIn, which [251] is pretty cool. And then if we go back [253] to our database back over here, you'll [256] see that we now have the posted on [257] fields as done. Um, which means that we [259] have essentially just ran through our [261] database. and you know, post it and drip [263] these out over time as opposed to all at [266] once. Okay, so I've yet to actually [268] build the system at this point in the [270] video, but first thing I always like to [271] cover before I actually do the system is [273] why am I doing the system? Is the system [275] important? Does this solve a problem? [277] Ideally, you would start with the [278] problem and then you build a system that [280] solves that problem, not the other way [281] around. I think a lot of people are kind [283] of putting the cart before the horse and [284] they're building the the system before [285] actually having a need for it. So, I [287] know for sure that the system is [289] worthwhile and solves problems because I [290] talk with people all the time that have [292] these exact customer problems and you [294] can sell this system or you could build [295] the system yourself to solve those [297] problems in your own business. What are [298] some issues? Well, AI podcast [300] repurposing engine solves the content [302] need. So, it allows us to generate a [304] large amount of content from just one [305] long form episode. Allows us to reach a [307] much larger audience with the same [309] marginal amount of effort. Zero [311] additional recording time, which is [312] cool. We get to maximize the content [314] investment. And then if you wanted to [316] sell this, it's why we put this in a [317] different color here. Um, you know, you [319] could do so for a $1,000 to maybe $2,000 [321] service, I would say, just because it's [323] very simple. It runs in the background. [324] I'll show you guys a simple input method [326] to like make all this stuff work and and [327] look hunky dory. And yeah, very [329] straightforward, not at all difficult. [330] So that gets us to the more important [332] question, which is how. And the how is [333] what we are going to be dealing with in [334] this video. What I'm thinking of doing, [336] and I, you know, I got like two or three [337] nodes in for I was like, you know, I [338] should probably record a video on this, [339] is we're going to start with some [340] YouTube podcast URL input. Okay. So, [343] what I'm thinking is we're going to have [344] some form or something, probably a form, [346] where I can fill in the URL of the [348] podcast that I want to generate content [350] for. And this is the simplest way I can [352] think of doing this. Sure, you could do [353] this automatically. You could track [355] podcast posts on a YouTube channel, [356] whatever. But I'm just going to do a [357] form. So, we'll we'll trigger it [358] manually. Then, from there, we're going [360] to grab the transcript somehow. So, [362] there variety of different ways you can [363] grab transcripts in actuality of videos. [365] Um, the simplest is Ampify, but you [367] could also do something like OpenAI's [369] Whisper. I mean, to be honest, there's [370] like 500 of these, so I'm not going to [372] go super in-depth there. But, um, what [373] I'm going to do is I'm going to I'm [374] going to grab the transcript of the [375] YouTube video, and then I'm going to [376] feed it into a big content router. And [379] this is where the rest of my system is [380] sort of going to come into play from. [382] So, what I'm thinking is we're going to [383] start we're basically going to need like [385] some sort of GPT call, some AI call. [387] Let's just call it like a large language [388] model call. Probably use GPT4 or maybe [391] 4.5. And then this is going to generate [393] me some specific like Instagram content. [396] Okay. I'm going to do the same thing [398] with, you know, another GPT4 call. And [401] then I'm going to generate probably like [402] some Facebook content. As of the time of [405] this recording, the Twitter API, or the [407] X API, I should say, is uh like 200 [409] bucks a month or something like that. [410] So, I'm not going to pay for that um for [412] this video, and I don't think a lot of [413] people will either. So, we're just going [415] to skip Twitter or X for now. But then [417] we're going to do like some LinkedIn [419] content. And also, what I think would be [421] really cool is if we um if I give you [423] guys everything you need to actually [424] like clip. So, there's a couple of [426] platforms out there. One's called Opus [427] Clip, and there are a few other ones [429] where basically you can feed in a longer [431] video. Then you can actually generate [433] clips from that video um using AI [435] timestamping and stuff. Now, [437] unfortunately, these guys don't have an [438] open API, so you can't actually just [439] like have your API call and then use [442] that to generate, but um I'm going to [443] give you everything you guys need in [444] order to do so. And I'll actually walk [445] through the API most likely. So, what [447] I'm thinking is we're going to use AGPT [449] and then maybe we'll like generate [450] timestamps. And for now, we're just [452] going to like have all those timestamps [454] be generated with all the rest of the [455] content you need, maybe like some [457] hashtags and everything. And then, you [460] know, you can either feed this into some [461] sort of flow for an editor or whatever, [462] and then have it generate a bunch of [464] stuff. Okay? So, there's nothing really [466] magic here. I mean, I'm just recombining [468] components of different things that I've [469] built before in the past, but I just [470] wanted to run you guys through what my [471] thought process is at this point in the [472] process. This is what I think it's going [474] to look like. Okay? And everything [476] sounds nice before you actually get into [477] the building, but uh yeah, let's start [480] there. Okay, so I'm just going to use [482] this as our road map. And then for now, [483] we're actually just going to jump back [484] over here to NAND. I have a little NAD [487] workflow set up called AI podcast [489] repurposing engine. And so really, if [491] you think about it, like what is the [492] first step? Well, what a lot of people [493] like to do is they like to start at the [494] beginning and then work their way [495] forward, but I actually kind of like to [497] start at the end and then work my way [498] backward. Now, the end is relative in [500] this case, but I just I actually want to [501] go scrape the thing with Ampify first. [502] Like I I want to scrape the YouTube [504] video and I want to verify or guarantee [505] that I can actually generate the [506] transcript. That's kind of the first [507] thing that comes to mind. like maybe [508] it's intuition or just because I've [510] dealt with a lot of these projects but [511] that usually is the rate limiting step. [512] It's like, hey, can we get the data that [515] we are planning on doing all this fun [517] stuff with? Because if you can't get the [518] data, you can't really do anything else, [519] right? So, let's first of all verify we [521] can actually get the data. So, in order [523] to do so, I'm on this platform called [524] Appify. Basically, this is just like a [526] big marketplace for scrapers that other [527] people purpose-built that allow you to [529] do things like get YouTube transcripts. [530] And they build out all the logic for [532] you. You don't have to do any of the [533] math yourself. Um, what I'm going to do [534] is I'll just type YouTube transcript. [536] And then there are variety of uh [537] scrapers that come up here that say that [538] they could do our job what we're looking [540] for. But I'm just going to go to pricing [541] models, go pay per result just cuz you [543] could rent scrapers, you could pay for [545] usage, but in my case, I like to pay for [547] the end result. I care most about the [548] deliverable. So how much money am I [549] going to spend per transcript? And [551] usually what I do at this point is I [552] just open up two or three of these and [553] then I just very quickly compare them. [555] So that's what we're doing now. Let's [557] see. Um this one allows us to extract [560] one or thousands of YouTube transcripts [561] fast. Save time and effort. Okay. JSON [564] XML HTML. The reviews are pretty low, [566] but this is $750 per thousand. That [568] seems okay. Let's check out this one. [570] Same idea. $10 per thousand. All right. [572] This one $7 per thousand. All right. [574] Well, I mean, to be honest, seems like [576] kind of a wash. They're all about the [577] same. I mean, they all have one or two [579] reviews. So, let's just scroll down a [581] bit and see if I can get some [582] information on what I get. Looks like [585] they will return me a big list of all of [588] the captions. So, that's cool. Um, is [591] there one that just gives me the whole [593] thing in one big block? Like that would [594] be [595] nice. This would be pretty nice. Yeah. [597] Yeah. So, include timestamps. No. And [599] then I just get a giant list. Let's do [601] that. Yeah. Yeah. Clean transcript. [603] Okay. I like this one more now. And then [605] do I just get one big transcript here? [607] No. I get the time stamps and stuff. [608] Listen, I think the time stamps are [609] valuable, but I think that the first run [611] I'm not going to use that. I'm just [612] going to use the without the time [613] stamps. So, let's give these guys a go. [615] $10 per thousand results. I don't know [616] if this is going to work, so I'm [617] actually just going to try it out on a [618] YouTube video. Why don't I do it on one [620] of mine? Let's just go to Nick Sarif. [622] Yeah, let's do the prompt engineering [624] video. And that's 53 minutes. This one's [627] 40. I mean, like the longer the video is [629] probably the longer the transcripts are [630] going to take, but whatever. For testing [632] purposes, this is probably fine. So, I'm [633] going to paste in my own here. No [635] timestamps. So, I'm just going to get [637] like the whole thing in one big block [638] hopefully. And then I'm just going to [639] click save and start. And so, Appify uh [642] the way that it works is it'll spin up a [643] server actually in the background. So, [644] this is now like a server somewhere on [646] the internet that has been spun up that [647] is now running this scraping script that [649] this other person put together. And I'm [651] basically going to be charged uh what I [653] think is 1 cent if my math is is [654] correct. Um per video that I get the [656] transcript for. So, obviously very [658] economical for testing purposes. And [660] then uh you just pay either a monthly [662] amount or something else and then um [663] they bill you. So, in my case, I use a [665] lot which is why it's at 100 bucks so [666] far. But yeah, let's see if this one [669] works. And and of course, sometimes it [670] doesn't work. I mean, these are scrapers [672] other people build, right? I mean, this [673] looks pretty good. All right. Now, yeah, [675] this looks pretty good to me. So, now [676] that I have this, let's just export this [678] result. Let me just see what this looks [680] like with all fields in a Google sheet [682] first. Again, my whole goal is I just [684] want to verify, hey, you know, can I get [685] the data that I'm looking for? If I can [687] get the data I'm looking for, everything [688] else is really easy. So, now I'm going [690] upload and I'm just going to drag and [691] drop this. And I'm doing it manually [693] first and then we'll worry about the [694] automating part later. We're probably [695] going to have to call some APIs, right? [697] Okay. So, it looks like it returns the [698] URL, returns the video title. Okay, [700] that's cool. And then boom, we have the [702] whole transcript. How many words is [704] this? Really? Now I'm starting to think, [705] okay, this is a lot of words. 8,000 [707] words. Okay, so let me think about this. [709] Usually people speak at about like 200 [711] words a minute, approximately, 150, 200 [713] words a minute. So if I were to feed in [716] an hourong podcast, which is pretty [718] standard. My content's kind of like [720] that. I'd probably have like 10,000 or [722] so words. That's a lot of words. Is AI [725] going to actually be able to deal with [726] this? So, I'm starting to think, all [727] right, there are probably some edge [729] cases here where I might feed in like a [731] 2-hour long podcast and there's going to [732] be too many words, too many tokens for [734] the context window. So, I'm kind of [735] keeping that in mind. But anyway, I'll [737] kind of shelf that for now and we'll [738] cross that bridge if and when we get to [740] it. Um, obviously I've shown that this [741] works. So, what do we actually do now? [742] Well, um, the way that Appify works is [744] you can actually just get a web hook [746] call like when the actor is completed, [748] you will get a notification. There's [750] also an API. Um, and I don't think that [753] Nad has a built-in appy node yet, right? [755] Okay. So, I'm just going to go to the [756] Appify API. I'll go Appy API. And then, [760] you know, API stands for application [761] programming interface. Obviously, um if [763] you guys are unfamiliar with how to use [764] APIs and stuff like that, I got a bunch [765] of videos where I walk you guys through [766] what that looks like. But essentially, [768] what I'm looking for, so I think I'm [770] looking for run task synchronously and [773] get data set items. I think I'm not 100% [775] sure. This looks good to me. I mean, [777] there's so many dang um endpoints on the [779] lefth hand side, that's honestly pretty [782] difficult for me to say for sure what's [783] what. I see a couple that look similar. [785] Actor tasks. Run task synchronously and [788] then there's run actor [791] synchronously. Huh. Not really sure what [793] the difference is here. Return output or [796] get data set items. I feel like it's [798] probably going to be get data set items. [800] Right. All right. Anyway, I I think I [801] think I'm going to do this now. Um that [802] I have the API call here. What's really [804] cool is in NAN, you can just copy all of [806] this, right? So, I see there's this [807] little copy button. I'm just going to [808] click that. I'll go back here and then [811] I'll go um HTTP request. I'm going [813] import curl feed this in. Okay. And [816] it'll actually map the whole API request [817] for me. So it's already done all the [819] work. All I need to do is I need to swap [821] in my authorization token. And then I [824] think I need to do one more thing. I [825] need to feed in an input right over [827] here. Okay. So first things first, I'm [829] going to get my authorization token. [830] Now, how do I do that? Well, Ampify [832] probably has an API key thing somewhere, [834] right? So I'll go settings, I guess. [837] Yep. API and integrations right over [839] here. Let's create a new token. Let's [840] just call this YouTube temporary cuz uh [842] I'm just going to delete it [843] afterwards. Do I want to limit the [845] permissions? No, I don't think so. I'm [847] just going to click create and see what [848] happens. Uh okay, YouTube temporary [850] right over here. Let's copy this. Let's [852] um let's delete a couple of these cuz [854] odds are I probably totally forgotten to [856] delete them on previous videos. So, I [858] have so many. Anyway, uh I'll paste the [860] the token right over here. That looks [862] good. And then if you think about it, [864] like what do I need? Looks like I need [866] an actor ID here. [869] So, where is that going to be? That's [872] probably, you know, most of the time [873] actors will put the ID up here. Yeah, I [877] think so. So, that's probably the ID. [879] That's usually the ID for most of these [880] services. So, I'm just going to grab [882] this, paste this in, and then I need to [884] feed in the actual website that I'm [885] going to use, right? So, I don't know [887] how that looks, but usually on Appify, [889] they'll show you if you go to JSON, [890] they'll show you what the uh data looks [891] like. Okay, so check this out. Include [893] timestamps, no start URLs website. So, [895] what I'm actually going to do is just [896] copy this. Then I'll go back to my N8 [898] endflow. Sorry, and I'm jumping around a [900] lot. And then under body content type, [902] I'll go using JSON. And then I'll just [904] paste this in. Okay. Okay. So, this is [906] fixed right now, right? I'm just feeding [907] in one URL. But, um, I'm okay with that. [909] I just want to test and see if this [910] works. Let's see if there's any issue [911] with my syntax or something. Let's see. [913] And if there are any bugs, I keep all of [915] them in the video so you guys could see [916] what my thought process is. Uh, it's [917] taking quite a while to do, which I [918] think is positive. If I go back to [921] Appify, we go to runs. Okay, looks like [923] it's starting the crawler. So, I've [925] actually initiated the crawler using my [926] API call. Looks like it is now done. [929] Okay. If I go back here, oh, nice. Looks [930] like I got the data. Awesome. So, I have [932] the transcript done. All right. So, I [933] mean, that was really easy, right? Super [935] super easy. Very straightforward. Why [936] don't I rename this and then I'll just [938] call it get transcript via ampify. There [941] you go. And now I can go back here and [944] if you think about it, I could actually [945] kind of like just check this first box. [947] Okay. So, or check both of these box. [949] Uh, actually, I'm not done that. I'm [951] just done this. Let's make this really [953] thick. There you go. So that step is [955] done. So the YouTube podcast URL input [957] step now. So if you think about it now, [959] what I need to do, I need to verify that [960] I could actually get input in, right? So [962] in N8, as you guys know, there there a [964] bunch of different triggers I could do. [965] This one's just a test workflow trigger. [966] What I'm going to do is I'll go back [967] here and then what I want is I want um [969] just a form. So NAN form and I'll go on [972] a new form event. So what I'll say is [974] insert a podcast get content. [980] Hey, this is a AI podcast repurposing [984] engine. If you insert a YouTube link to [987] a [988] podcast, we'll generate a bunch of [991] formatted content for you and post to [994] relevant social media platforms. Okay, [997] what here I will say is YouTube, maybe [1000] podcast. Uh, let's just go YouTube URL, [1002] right? Field type will be what do we [1004] got? I guess we'll just do [1007] text. And then I'll say it's required. [1010] And then I think that should be good. [1012] Yeah. Let's now test [1014] this. Let's uh where was that URL a [1017] moment ago? Oh, here we [1019] go. Let's copy this link. I got it right [1022] over here. So, I'm going to paste this [1025] in now. Insert a podcast. Get content. [1027] Very cool. I'm going to submit it. Okay, [1029] cool. So, I can get the content, which [1031] is nice. So, now I'm just going to feed [1032] this in as my variable. Uh, I should [1034] probably keep the when clicking test [1036] workflow actually because that'll just [1038] allow me to test the flow really easily. [1039] But anyway, um, as you can see, I got [1040] the form submission. So, what do I have [1041] to do now? Well, now I'm just going to [1042] make this dynamic. I'll go expression. [1044] Then I'll open up this big thing in an [1045] editor. And then right over here where [1047] it says start URLs, I'm actually just [1049] going to feed in one start URL. It's [1051] going to be this YouTube URL. So, this [1053] is the result. This is what it's going [1054] to look like. That looks good to me. [1055] Cool. Automation is mapped. We are good [1057] to go, baby. Everything should be fine. [1059] Awesome. And I think what I'll do here [1060] is I'll probably pin the output as well [1062] just so I can always run this on the [1064] exact same um video. Okay, cool. All [1067] right, so now what we have done is we [1069] have submitted our form and we've also [1072] gotten the transcript. Now the next [1075] question is how are we going to generate [1077] content for Instagram, Facebook, [1081] LinkedIn, then also maybe some [1083] timestamps or some hashtags or something [1084] like we just need some way to generate [1086] uh video ideas. Maybe we could even use [1088] hen. That might be pretty cool, [1090] actually. That' be pretty interesting. [1092] Maybe I'll maybe I'll screw around with [1093] that. If you guys have seen the demo [1095] already, you guys are like, "Well, [1096] obviously he's going to use hunen, [1097] right?" But I I'm not at that point yet. [1098] Um, okay. Uh, Instagram content here. [1102] Let's think about this. So, I I need to [1104] now create um I need to have some sort [1106] of way to spin up three or four [1108] different model calls. Then, for each [1110] route, I need to produce something. So, [1111] I need to produce some Instagram [1112] content, some Facebook content, some [1113] LinkedIn content, some timestamps, [1114] hashtags, whatever. So, I guess what [1117] I'll do here is uh do they have a router [1119] here? No, they don't really have a [1121] router. So, I think I have to use a [1122] merge node. Yeah, I think I'm going to [1124] have to do this. I don't know for sure, [1125] but whatever. Let's do um OpenAI. So, go [1129] to OpenAI and then I'm going to message [1131] a model right over here. Then I have all [1134] my credentials already connected, so [1135] I'll just use the YouTube February 4th [1137] one. But, um you know, if you don't know [1138] how to do this, it's pretty easy. You [1139] just go like to your OpenAI dashboard [1142] and then you grab the API key and then [1145] you don't need the organization ID [1147] anymore which is nice and then just do [1148] the connection. So once I have this, [1150] let's think resource text message model. [1153] Okay, I'm I'm just going to select a [1154] model right now and I'm going to make it [1155] like let me check model context [1158] windows. Um open a do we have a list? I [1162] just want the one with the biggest [1163] context window right now to be [1165] honest. Okay, we got we got a couple. [1168] Let's just check. Let's just check all [1170] of [1173] them. Let's just compare all [1177] these context. Okay, there you go. So, I [1180] can see it says context window. So, [1181] 128,000 128,000 [1183] 200,000 128,000 128,000. All right. [1186] Well, I mean, if you think about it, [1187] they're all 128,000. How many tokens is [1190] uh 10,000 [1191] words? 7,000. So, we should actually be [1194] good. I maybe I was a little bit ahead [1195] of myself here. We should be good. I'm [1196] going to use the GPT40 for now and then [1198] I'll figure the rest out later. So, um, [1201] yeah, let's go to that. So, I'm going to [1203] use GPT40. This is the one. Let's go [1205] back to my Nit end flow and let's just [1206] go [1207] 40. Zoom in a bit for all [1210] y'all. What I think makes the most sense [1213] at this point is we should probably have [1216] one model generate a bunch of things to [1219] talk about first based off the [1220] transcript. Then we feed those things to [1222] talk about to other models and then [1225] they'll take those items and then [1226] they'll use them to generate stuff. I [1228] think that makes the most sense. So you [1229] are a helpful intelligent um let's say [1231] content writing assistant that works [1233] with transcripts. What I always do is I [1235] start with a system prompt. Okay, system [1238] is just how the model identifies. And I [1240] find that when you make the model [1241] identify really good at something, it's [1242] very, you know, you're helpful and [1244] intelligent and you work with [1246] transcripts, it's just more likely to do [1247] a slightly better job working with those [1249] things. Next up, I add a user prompt. [1251] So, here's where I actually define the [1252] task. So, you take as input a long [1254] meandering transcript and you identify [1257] the most [1259] interesting, let's say, um, the 10 most [1262] interesting, engaging points. You then [1266] generate a JSON containing those [1269] interesting, engaging points in this [1271] structure. Let's do this. So, now we're [1274] going to go JavaScript object notation. [1276] And what I want to do is I want to give [1279] it um a good structure. So the first [1282] thing I'm going to do is I will say [1284] sections. Let's do that. Now I'm going [1286] to generate an array. Okay, we're going [1288] to start with this array over here. And [1291] I know this isn't like actually proper [1292] proper formatting, but that's okay. Now [1295] what I want is I want another [1298] object inside of [1300] that. Uh sorry, I was wrong. where [1304] basically I generate this. We're gonna [1306] have number and then I'm just going to [1309] put [1311] one. Then over here I'm going to [1316] say [1318] paragraph [1323] transcript. Paragraph [1327] of the relevant part of the transcript [1331] goes here. Okay, this is actually [1333] getting really annoying. I thought I [1335] could like make this look nice, but I [1337] can't. So, I'm just going to go to JSON [1338] formatter. It's a lot easier. Just [1340] format it. It'll automatically take care [1341] of this for you. Okay. Uh, cool, cool, [1343] cool. Let's just copy this and we can [1345] paste this back as the intro. So, number [1347] one, paragraph, transcript, paragraph, [1348] the relevant part of the transcript [1349] goes. So, basically, I wanted to clip a [1350] part of the transcript. Then I also [1352] wanted to like generate some something [1353] else. Description of [1357] section, a description of why this point [1360] is interesting. [1362] and some direct and some ways to make it [1366] even better. And then in addition, I [1368] also I love um having AI do this sort of [1370] like meta stuff where you give it a [1372] piece of content and then it actually [1373] takes the piece of content and does [1374] something with it like it provides [1375] critique. It comes up with some new way [1377] to do it better or something. And then I [1378] also want one other thing. I want like [1380] deep explanation and I'll [1383] say a one paragraph write up based on [1388] the transcript section that expands upon [1391] its [1393] points, clarifies any [1398] ambiguities, generally fills in the [1401] blanks. Okay, let's just run with that. [1404] I think this is going to work pretty [1405] well. So, this is going to be the JSON [1407] structure that it's going to generate, [1408] right? something like this. Is this an [1410] optimal or ideal prompt? No, not really. [1413] It's pretty lengthy to be honest, but [1414] that's [1416] okay. Generate 10 [1420] points. The transcript, [1423] okay, is below. I'm going to add another [1426] message. And here's going to be the [1427] user. And what I'm going to do here is [1429] I'm actually just going to feed in the [1430] transcript. So, we can't get it out. So, [1432] we actually have to run it one more [1433] time. So, let me just test this. While [1434] this is testing, uh, basically what I'm [1436] going to do is I'm going to put the [1437] actual transcript right over here. Then [1440] I'm gonna have the assistant return the [1441] message afterwards. Let's go. Output [1443] content is JSON. Let me see if there's [1444] anything else I need. Temperature I [1446] always like to set a little bit lower. I [1447] just find it gets kind of too [1450] interesting. And then let's actually add [1452] some Let's put some rules down [1455] here. Write in a [1458] Spartan Conic tone of voice. [1462] Copy the transcript sections exactly as [1465] they are. [1469] Look for unorthodox or interesting ways [1474] to [1484] make. Let's change this to context and [1487] feedback um to make the content better [1489] in the context and [1492] feedback object. Cool. Now, what I'm [1496] going to do is I'm just going to feed in [1497] the transcript right over here. [1501] Let's actually feed in the video title, [1502] too. That'll provide even more context. [1505] Cool. And then uh let's just run this [1507] and see what happens. This is a very [1508] long transcript, right? It's a long ass [1510] transcript. So, we want to make sure [1512] that the content that it generates is is [1513] good. So, because of this, you know, if [1516] you think about it from my perspective, [1517] I'm at the point where I'm trying to do [1518] this. I need to make sure that I [1520] understand what the video is about if [1522] I'm using it as a test and that I can [1524] meaningfully evaluate the output to see [1526] that it's good and not just like total [1528] makebelieve stuff. Now, this is very [1530] long. Because it's very long, it's [1531] obviously going to take a while to do. [1532] It's also going to cost a fair number of [1534] um input tokens. So, let's actually [1536] figure out how much this would cost [1538] realistically. Inputs $2.50 per what is [1542] this per million? Per million tokens. [1544] All right. Well, that's really not that [1545] big of a deal. I just fed in like uh [1547] 12,000 tokens or something. So one [1550] 12,000 is 1/100 uh 10,000 is 1/100th of [1553] 1 million. So 1/100th of this is 2.5 [1556] cents I believe. So it cost me 2.5 cents [1558] to do. That's not that's not a big deal [1559] at [1564] all. Okay, we got the [1569] output. Very [1572] interesting. Very cool. Very cool. I [1575] want it way longer. I don't like how [1577] long the um the the section is right [1579] now. I think that we could do a lot [1581] better if it was [1588] longer. Yeah. I mean, these are just [1590] this is just like five [1595] words. Okay. Well, it's very interesting [1598] because I've uh I'm the one that created [1599] this content, so I understand what I was [1601] talking about. And uh it actually [1603] basically went through top to bottom and [1604] just extracted the various points I was [1605] making. It's like okay point one this [1607] point two that point three that. Make [1609] sure your paragraph [1611] transcript string is [1614] long longer than just one [1616] sentence. Try and capture at least one [1619] whole [1620] paragraph of the transcript. Okay. So [1623] I'm just going to test this again. And [1624] while it's running, which is going to [1626] take a little bit of time, I'm going to [1628] um go next. And now that I have this, I [1630] think what we can do is we can just have [1632] another three or four depending on the [1634] content. And then I'll just I'll paste a [1638] bunch in. So this might be like [1640] Facebook. This might be Instagram. This [1642] might be LinkedIn. This might be another [1644] one. Then I'll combine them all with a [1646] merge node just into like one big [1647] object. Or hold on a second. Actually, [1650] what I think I'll do, we should probably [1651] add these to a Google sheet or something [1653] instead of just post them, right? Like [1655] it'd be silly to post all these [1656] immediately. So, we should probably just [1657] add them to Google sheet. What are you [1659] going to do? Post 10 pieces of content [1661] immediately on all [1662] platforms. You you'd need some some [1665] serious nuts to do that. So, it's [1667] probably not the best move. Um, okay. [1669] Well, let me cross our bridge when I get [1671] to it. I guess for now, what I'm going [1672] to do is I'm just going to generate a [1673] bunch of content. So, yeah, you can [1674] actually have multiple routes like this [1675] pretty easily that just stretch and then [1677] as long as you have a merge node at the [1679] end that combines the outputs, they'll [1680] it'll just run them all. So, I guess we [1682] could do this. We could post post post [1685] or we could just add all these to a [1686] Google sheet or something afterwards. [1689] Anyway, this looks good. Yeah, this is a [1691] lot [1694] longer. Cool. Nick introduced the first [1696] major hack. Okay, Chad GBT to write a [1699] story about peanuts. Cool, cool, cool. [1700] Um, all right. So, where we at right [1701] now? We just generated the transcript. [1703] Now, we've just generated something [1705] which we can use to route the content [1707] later. So, that's good. So, now we just [1710] need to go through our routes. So, I'm [1711] just going to do an Instagram content [1712] route first, then a Facebook content [1713] route, then a LinkedIn content route, [1714] and then finally, um, yeah, we'll figure [1716] that out afterwards. So, why don't I go [1718] over here and I'll click [1720] rename, Instagram post generator. Now, [1723] the first thing I'm going to want to do [1724] is I'm just going to figure out what the [1726] guidelines are for this. So, what are [1728] Instagram post length restrictions or [1732] something? Looks like we can write 2200 [1735] characters. We caption, we truncate the [1738] caption at 125. We have 30 hashtags. [1741] That seems pretty reasonable. So, [1742] basically what I need to do is I just [1744] need to shorten it and then say write [1745] under 2200 characters. How many words is [1748] that? 300 words. So, I'll just have it [1750] generate me like a short snippet, like a [1752] like a paragraph, basically two [1753] paragraphs or something. That sounds [1755] good. I'm back over here. So, Instagram [1757] post generator. Uh, what I'll do is I'm [1759] going to write a new prompt. Your [1761] helpful intelligent content writing [1762] assistant that generates Instagram [1765] posts. You take as input [1769] information about a point. I just [1771] realized I'm going to have to change the [1772] structure here because we can't just [1773] feed in all this, right? A section of a [1776] transcript along with some [1778] observations about that section and some [1782] points of [1784] feedback and use it to [1787] generate clean, beautifully formatted [1790] Instagram posts. In this [1795] format, we will do Instagram post. We [1799] will then do uh we're only going to do [1801] one [1803] post. A clean beautifully format [1805] Instagram post in this format. We'll do [1807] Instagram post. And then since it's just [1810] one, I think we can actually just go [1812] Instagram post. [1814] Copy. Then we'll go copy goes here. Then [1818] what I'll do is I will take this and [1820] maybe we we'll generate an image with [1821] this as well and then feed that back. So [1822] right in the spartan look on voice copy [1824] any transcript sections. Uh no let's not [1827] do [1829] that. Instagram [1831] posts truncate after a [1835] paragraph. Write an engaging first [1838] paragraph and then context around the [1841] rest of the point underneath that [1843] paragraph. [1846] At the end of the post, add [1850] hashtags. Let's say five relevant [1853] hashtags. And then, yeah, that should be [1856] pretty good. Just leave that [1859] there. Then I'll [1863] say right over here. Oh, yeah. So, I [1866] can't actually map this until I figure [1868] out the structure, right? So, basically [1870] what we're going to have to do, um, if [1872] you think about it, is we just need to [1873] we need to loop over all these. So, a [1874] variety of different ways you could do [1876] the looping. You could [1878] um uh we're going to have to aggregate [1881] this, I [1883] think, because it outputs one item as [1886] you see up here, and we needed to output [1889] like a more than one item if we wanted [1890] to do the loop automatically. Also, just [1893] in um historically uh if we hit all [1896] these up immediately and we just try and [1898] do 10 API calls uh simultaneously, it [1901] usually just breaks the NAN flow because [1903] we hit rate limits and stuff. Nad [1905] doesn't have very good like built-in [1906] rate limits. So, I'll probably do the [1907] loop over items split in batches. If [1909] you've never used this before, the way [1910] this works is you feed in the item and [1913] then what it'll do is it'll loop over [1915] all of that data over and over and over [1917] and over again until you reach the last [1919] item and then it'll go down the done [1920] route. [1922] So yeah, um I think what I'm going to do [1926] is this replace me thing is about to be [1931] replaced. So I just want to make sure I [1933] can actually feed multiple routes into [1935] this. Can I? Does that work? Yeah. Okay, [1939] I should be able to do this. Cool. This [1940] is going to be a very complicated [1941] looking um system. Sure. It's going to [1943] sell well uh on YouTube anyway. So I'm [1947] going to loop over now. And what I need [1948] to do in the loop over items uh node is [1951] I need to feed in just this array. So [1954] how do I feed in just the array? Uh well [1957] as input to this loop over items node, [1959] I'm going to use the the split out. Yes, [1961] we need this. So the fields that we're [1963] going to split out are going to be this [1965] sections array. We feed in the sections [1968] array. If we test this now, we should [1969] get 10 items. 1 2 3 4. Perfect. Now that [1973] we have these 10 items, we can actually [1974] feed that output into the loop over [1976] items. So, we're going to split out [1978] these 10 items and then we're going to [1979] go one at a time, basically calling all [1981] of these APIs. Okay, now that we've kind [1984] of figured all that stuff out, awesome. [1985] We can actually get going with the [1986] Instagram post generator. Let's click on [1988] this again and then, well, we need to [1990] execute the previous nodes if we want to [1992] get all the data. So, we have those 10 [1994] items. Now, what am I going to do? Well, [1996] I'm just going to feed in the specific [1997] items. So, I will say transcript going [2000] to feed this [2001] in. Um, oh, we need to index the item [2004] now. Uh, the reason why we have to index [2006] the item is this just doesn't know which [2007] item we're specifically referring to. [2010] What we're gonna have to do is we're [2011] going to have [2013] to it's going to grab this [2017] first. It's not able to get the [2020] specific one, is [2023] it? I don't know. I guess we'll find [2025] out. Way that naden does their items is [2030] um always sort of interesting. I did [2032] execute the previous node, so I'm not [2034] getting this preview, which is annoying. [2036] Let me go back over [2041] here. Yeah. [2043] Okay. Yeah. So, you can uh it's just [2046] when you use the split in batches, [2049] sometimes there's a problem with um the [2051] way that it's rendered. Anyway, uh cool. [2054] So, we're just feeding in these [2055] variables directly, one at a time, [2056] right? Because we only receive one item [2058] as an output. Cool, cool, cool. So, uh, [2061] awesome. Well, let's just give this a [2062] try and let's see what happens. All [2063] right. I don't want to feed in all 10 [2064] items. So, what I'm going to do is I [2066] will just test this out on one item. So, [2069] I think if I just click test tab, we're [2070] only going to run this once, not 10 [2072] times, which is [2073] nice. Okay. Unlock the full potential of [2075] GBD models. My top three prompt [2077] engineering hacks from my journey since [2078] 2019. With GBD2 to leveraging these [2080] tools in every business, I've gathered [2081] insights that will transform your [2082] approach. Reddit, Alv, chat, GBD from [2083] your tool to autonomous team player. [2084] Let's dive in. No, I do not like this. I [2086] think this is written pretty poorly. So, [2092] No [2093] points. No leading [2095] questions. [2099] Emojis. Write like [2102] a business professor talking bluntly to [2106] his students. Let's try this one more [2109] time. [2115] except [2116] simpler. Favor words with fewer [2121] syllables. Cool. Let's try that one more [2128] time. Okay. I mean, this looks [2130] substantially better already, which is [2131] nice. Cool. Um, now we've generated an [2133] Instagram post. We can do uh a couple [2135] things with this. If you think about it, [2137] we can also like generate an image with [2139] this. So, I don't believe we're at the [2141] point where the image generator that is [2143] being used is the new GPT4 image [2145] generator. I think we're still using [2147] Dolly. What I'm going to do though is [2149] I'll see if I could feed in the previous [2152] description, an image that represents [2155] the [2156] concept. Let's see if we generate an [2158] image. What's going to [2161] happen? See how trash this [2163] is. There are a variety of other things [2165] that we could do as well. Or we could [2168] like generate some branded stuff. Cute [2170] little kawaii anime like cartoon [2172] characters or something. That'd be [2174] sweet. Um, unfortunately I can't just [2177] use the I can't use the um OpenAI API [2180] like the awesome one. Yeah, I'm not I'm [2182] not a fan of this stuff. It's kind of [2184] trashy. Um, an [2188] image handdrawn cartoon [2191] style should have one character in the [2195] middle. [2197] That's all. Let's just try that. My [2200] prompt engineering has gotten [2203] substantially simpler over the course of [2205] the last few months. Let's put it that [2207] way. Uh unfortunately getting spoiled [2210] talking to these extraordinarily smart [2211] models. So when you talk to a dumber [2213] one, uh takes a little bit of time to [2215] get up and [2218] running. Okay, let's view this puppy. [2220] What are we looking at [2221] here? Hips Hispanic speakers. [2227] Um [2229] h handdrawn cartoon [2234] style. Let's just say handdrawn [2238] um [2240] cartoon. And let's go over here and have [2243] this just generate one additional [2251] object. Short image description. [2259] a one-s sentence [2262] description of an [2266] image that illustrates the concept. The [2269] description must have one simple [2272] character like a [2274] bunny or an [2278] animal and B be catered [2281] to kids audience to a younger [2285] audience. Let's do that. Looks good to [2287] me. So now I'm just going to have to [2290] test this and I'm actually have to [2291] produce the outputs here because I'm [2294] then going to need to split them out and [2296] then loop them over the items and then [2297] do my my post generation which is nice. [2299] Give that a try. And this done route [2303] I'll probably end up putting underneath [2305] to be honest cuz this is going to be [2307] pretty chunky. Uh maybe I should just do [2309] all this here. Yeah, you know what? I'll [2312] probably do it all over here actually. [2314] We'll have an Instagram post [2315] generator, OpenAI image, or maybe we [2319] should just generate the open AI image [2320] before the Instagram post generator now [2321] that I'm thinking about it because then [2322] we can just use the Instagram post and [2324] all the other stuff that we need to [2327] do. H anyway, let's see how that goes. [2331] Just testing these one by one [2333] here. And then let's now test this. Oh, [2338] sorry. I used the wrong one here. What [2339] we want is we want um loop over items [2341] and we [2343] want Oh yeah, sorry. I I need one more [2345] piece of instruction. No [2350] text. Description should should never [2353] talk about text. [2356] Okay. All right. Uh so what are we going [2358] to do here? We are going to handdrawn [2361] cartoon [2362] style. Then we're going to feed this [2365] in. Maybe we'll [2368] go colorful [2373] watercolor. Colorful soft watercolor [2377] of a bunny stacking colorful blocks. [2380] This isn't going to be ideal because [2381] it's going to say a bunny um with text [2384] in it. That's not really what we want [2386] the image to [2387] do. Let's turn on respond with image [2390] URLs. By the [2391] way, can we go [2394] style hyper real and dramatic? No, we [2396] want [2398] natural. I just made some changes. So, [2401] um, that looks pretty cute. Yeah, I [2403] think we could probably do [2404] that. And then what do we want for [2407] quality? Standard or HD? Uh, no, we're [2410] probably good with standard. And then we [2412] want resolution. Got a couple of [2413] different options here. Let's go [2414] Instagram post [2416] resolution. 1080 x 1080. So 1024 x 1024 [2420] is reasonable. Like it's not going to be [2422] as pretty, but I think it's going to be [2423] pretty good. And yeah, this one has text [2424] in it, but like imagine we're just going [2426] to get rid of most of that text in [2427] future ones. So it should actually be [2428] pretty fine. Maybe you have some branded [2431] channel that does something like this or [2433] I don't know. Uh like if you think about [2434] it, there's like three or four major [2435] styles that you could have AI generate, [2437] right? You could do like some sort of [2438] handdrawn stuff if you want to be [2439] serious. You could do if you just check [2441] out like Alex [2442] Hormos's Let's check this out here. Hold [2445] on. Hold on. [2449] Yeah, stuff like this. Right now, he's [2451] using GPT40 image to do that. But as as [2454] I'm sure you can imagine, if you just [2455] have some style like this, and it's like [2457] a standardized style, then you can [2458] generate like an almost infinite amount [2460] of content with a podcast clip. There's [2462] another one in Simpson [2463] style. Think he's publishing a [2465] ridiculous amount of content. I mean, [2467] this is like a week ago and he is like [2468] 50, right? So, that that would probably [2470] be my thoughts. That's probably how I'd [2472] do it. Since we're using Dolly, it's not [2473] going to be as clean, but I imagine [2476] we're probably going to have access to [2477] that API pretty soon. Okay, so Instagram [2479] post generator. And then here we will [2481] call this generate image. Now, this will [2484] also return an image link. So if I [2486] generate this new one now, we should [2487] have an image URL, right? The image URL [2490] we can just feed directly into the [2491] Instagram post node. We're feeding in [2493] some additional parameters here, so it's [2495] going to change how long it takes to [2497] generate. Looks like it did some [2499] revisions. Oh, that's cute. I like this. [2501] Yeah. Nice. Okay, we have everything. We [2504] can actually go to I think what we need [2505] is the Facebook graph API. Could be [2510] where we make a post. Yeah, most likely. [2513] So, okay, I'm probably going to have to [2514] muck around with this for a bit before I [2516] can figure out [2519] exactly. And I think in order to do [2521] this, the credential that we set up, we [2523] have to get an access token, which we [2525] generate from something else. So, it's [2527] going to take me a minute to figure that [2528] out. And I'm just going to I'm just [2530] going to allow that to be the last thing [2532] that I do. From here though, as you can [2534] see, we have a pipeline that we can use [2535] to generate everything else. So now I [2536] just duplicate these. Right. So [2539] Instagram post generator. Very cool. [2541] Let's go over here and then let's go [2543] LinkedIn post generator. Then down over [2546] here, let's go uh what else did we have? [2548] Facebook post generator. Right now we [2551] just have to like very lightly change [2552] the parameters [2554] um the prompt basically. [2557] So instead of Instagram post, we'll say [2559] Facebook [2562] postcopy. Facebook [2564] post then no [2567] hashtags Facebook post. Let's say [2569] Facebook postcopy [2580] guidelines. Okay, this is what looks [2582] like a landscape photo. So, we're going [2584] to have to generate a slightly different [2585] image size for that. Okay. And then I [2588] don't really think there's any text [2589] restrictions. You probably go pretty [2590] long. Um, this one is not wired up right [2593] now, which is why we're getting that. [2594] So, let's go [2595] here. Oh, sorry. Was this the LinkedIn? [2597] Was I just editing that on the LinkedIn [2599] one? Probably. Oh, yeah. My bad. Uh, [2602] well, let's go LinkedIn post. [2605] Copy. LinkedIn [2609] post. And then this one here is [2612] LinkedIn. Anything. Anything else here [2613] say Instagram? I don't think anything [2615] else here says Instagram, so we're [2616] probably [2617] good. LinkedIn post. Uh, okay. Well, [2620] what's the LinkedIn post guidelines? So, [2621] LinkedIn post, first of all, let's cut [2624] the dimensions. So, it's widescreen as [2626] well. Let's see when it [2629] truncates. All right. So, honestly, this [2631] is very similar to Instagram [2632] realistically. I'm just not going to [2633] make any adjustments to this. This is [2635] going to be a good nugget that anybody [2637] could use to build out like more nuanced [2638] or higher quality systems, I would say, [2640] by mucking around with the prompt, [2641] making it a little bit better. And then [2643] here, we're going to generate a LinkedIn [2645] image. Um, just because this doesn't [2647] allow you to change the [2650] uh have multiple of the same titles. I'm [2653] just going to like add some acronyms [2654] here like Facebook image and stuff just [2656] so that we can have different um titles [2657] on them. This LinkedIn image is not [2659] going to be at 1024. Uh, we're going to [2662] have to make it like wider screen, [2663] right? So, sorry, I've already forgotten [2665] this one. LinkedIn post [2668] resolution. This [2671] is Well, actually, we can we can do [2673] both. We can do 1080 x 1080 pixels. So, [2675] actually, I'm just going to do 1080. So, [2676] yeah, I'm just going to do square. I [2677] think Facebook was the one that was [2678] wider screen, [2680] right? Yeah. So, I'm going to go 1024 x [2683] 1024. That looks fine to me. It was the [2685] Facebook one that I think was different. [2688] It was [2690] 1792. So, this is about as wide as we [2692] can get. It's not the best, but I think [2694] we'll just deal with it for now. Okay, [2697] I'm going to do that here. Okay, cool. [2699] So, now we're basically going to be [2700] generating three and then we need to [2703] change this. Go LinkedIn, do this, [2706] create a post. Very cool. We got to add [2708] credentials and stuff. I'll deal with [2709] all that stuff afterwards. Um, I think [2711] that's I think that's basically good, [2713] honestly. And so, if you think about it, [2715] what we're going to do is one, two, [2717] three. [2719] we're going to have to do after this, [2720] we're going to have to merge all the [2721] outputs of the stuff [2722] together. By merging the outputs of all [2724] the stuff together, um we're going to [2727] get stuff that we could put in like a [2728] Google sheet for instance. Actually, [2730] maybe maybe instead of us um doing the [2733] posting directly in here, we should add [2734] them to a queue. Hey, because if you [2736] think about it, like yeah, what are we [2737] going to do? Post all 10 posts [2738] immediately? No, we should we should [2739] just add them to the queue. So maybe we [2741] should do the posting and stuff like [2742] that in a different scenario or a module [2744] or workflow, I should say. Maybe for now [2746] what we [2747] do so we just merge all [2751] these merge all these outputs. We'll do [2754] three [2755] inputs. Thank you kindly. And this is [2758] number three. And now that we're merging [2761] these, basically what I'm thinking is we [2763] make a database of posts for all these [2764] different platforms and then every day [2766] or whatever just go through and post. [2768] That way they'll be relevant to the [2770] previous podcast. And that logic is [2772] pretty simple to put in place and [2773] probably makes the system a lot more [2774] valuable because if you just have a [2776] fragile system where you put a form [2777] thing in and then it just forces you to [2778] post 10 times, I think that'd be kind of [2780] dumb. No, no other way to like verify [2781] that the posts will always be different. [2783] Yeah, I think this is what people want. [2784] Okay. Anyway, there's a variety of [2785] different ways you could do things here. [2786] We could just we could just append. Oh, [2788] is it going to have to execute all the [2789] previous ones? Right. It will cuz we [2790] haven't generated the images yet. So, [2792] let's generate image three. That one's [2794] going to take longer cuz it's bigger if [2796] you think about it. The other ones [2797] were,24 x,024. This one was like 17 [2799] something. So, I think that's like [2801] mathematically it's not like a 1.7 [2803] times, it's like a three times or [2805] something. Um, just because there's so [2806] many more like total pixels in the [2808] image. Okay, that's the LinkedIn post [2810] generator. Let's see what an example of [2812] this appending looks like. We should [2814] just get an object with like all of the [2816] LinkedIn, Instagram, Facebook, [2819] right? Okay. So, the output is we got [2822] three items. Yeah. I don't like the [2824] three items being all here because if [2827] you think about it, what am I going to [2828] do with these three items? I got one [2829] item here, one item here, one item here. [2830] Well, I don't want three items. I just [2832] want one item as an output. And then I [2833] want the one item to be like Facebook [2834] post, Instagram post, whatever. And then [2836] I can map them a lot easier, right? So, [2838] I'm pretty sure we're going to have to [2838] do the combine. I think I just want to [2840] combine all of [2842] them. Oh, can I only do [2845] two? I don't know what this last item is [2849] here. Yeah, it doesn't look like I can [2851] actually do three, unfortunately. Yeah, [2854] sorry. We could just use a set. That'll [2856] be way easier. Let's go set here. [2858] We're going to take in the previous [2860] image. Okay, I'm just going to do it all [2862] in JSON. So, I'll say image [2867] URL. Image URL is going to be right over [2869] here. Then right over here in the [2872] middle, um, we'll have the post body. It [2876] looks like I'm still outputting an [2877] object called Instagram postcopy. O [2879] trash. That's not very good. Should [2882] probably go back here and then adjust [2884] that, eh? [2888] Yeah. Oh, you know what? I just left it [2890] as Instagram [2893] everywhere. My bad. You guys probably [2896] all saw that and were like, "Man, Nick [2897] is such a [2899] moron." Um, it's true. I am. But the [2904] best part of it all is you can make [2906] mistakes. Just a little happy accident. [2908] Then you can go back here and you can [2910] fix it. I think I need to change the [2911] LinkedIn um object as well, right? Okay. [2914] No, I did. All right. Anyway, that's my [2916] happy accent. Cool. So, now that we are [2918] editing the fields, what are we gonna [2919] do? We're going to have this actually be [2922] Instagram post [2924] copy. So, I'm going to feed that in. If [2927] you guys aren't sure why I'm doing this, [2929] um, basically, I need a way that I could [2931] reference this later [2933] on. Just going to call Facebook [2935] postcopy. It's not going to do anything [2936] right now, but that's okay. And then [2938] here we'll say [2941] um [2943] platform. And here we'll go like [2945] Facebook. Okay. So I'm basically [2948] remapping stuff here so that I have the [2951] copy the image URL, the post body, and [2953] then the platform. So now I'm just going [2955] to copy this. Well, I guess I can't copy [2958] just yet. I have to copy the whole uh [2959] node. Then right over here, I'm just [2962] going to delete this. And then I'll [2963] connect this to my edit [2965] fields. Then now what I'll have [2968] is I just deactivated that, but um it's [2971] okay. We're going to go platform [2974] LinkedIn. This should say LinkedIn post [2977] generator, right? LinkedIn [2982] postcopy. Doesn't look like I can get [2984] that path back to the note cuz it's [2985] under Oh, right. There you go. Okay. So, [2989] we'll have the image URL, the post body, [2990] the platform here. That's good. Let's uh [2993] reactivate that. Then up top, let's copy [2996] this. Paste this over [2999] here. Feed this in. [3001] And then if you think about it now, what [3003] are we going to get? We're going to get [3006] um the ability [3009] to [3012] automatically determine in subsequent [3015] nodes why [3018] uh sorry which platform the data is [3020] coming from. So I'm just going to call [3023] this set [3026] Facebook and here I'll call this set [3031] LinkedIn JSON. And here I'll call this [3033] set IG JSON. Okay. So now what's going [3036] to happen if we append these together? [3039] Oh, I think I need to do one thing. Um, [3041] invalid JSON. Odd. H. Well, let's do a [3045] little bit of [3046] debugging. Okay. Uh, we're getting [3048] invalid JSON because the new lines. [3050] Yeah. So, basically what we're going to [3051] have to do is we're going to have to [3052] remove new lines. So, we could just [3055] replace all instances [3059] Can we just do new [3061] line like a reg x with a new line or [3063] whatever? Or we could just have it not [3065] generate any new lines in the initial [3067] data. Yeah, that probably makes more [3068] sense, [3070] right? Like one, it'll be easier, but [3073] two, uh it'll make sure that our source [3074] data is as clean as possible. So, why [3077] don't I go over here and then under [3079] rules, we'll [3081] say generate your new lines as back [3084] slashn characters instead of full line [3087] breaks. [3089] There should be no actual line breaks, [3092] only n [3095] characters. Cool. This will work 90 [3098] whatever% of the [3099] time. It's not going to be perfect. [3101] Sometimes the model will probably [3102] misinterpret it. Maybe one out of a 100 [3104] or something like that or maybe one out [3106] of a thousand realistically. These [3107] models are getting pretty smart. So [3111] still. Okay. So now if I go over here [3114] and I'm I'm just going to retest this [3116] step because I want it to output the [3118] thing with the no new line. Let's just [3120] see what it looks like. Cool. We do have [3122] the new Awesome. Awesome. All right. We [3124] should be good just to test this now. So [3126] it's going to run three simultaneously [3127] and then it's going to run these. I [3129] guess not simultaneously iteratively, [3131] which is nice. So we're going to [3132] minimize the likelihood of us calling [3134] one of the APIs and then screwing it all [3136] up. Then from there we should be able to [3138] do our node. Uh looks like we were not [3140] able to service the request. Why would [3143] that be? [3144] H could it be an API [3147] call? Maybe it got rate limited. [3149] Probably got rate [3151] limited. Images take way more of your [3154] rate limit than um anything else. So [3156] generally good just to the second that [3158] you have a working thing, pin the [3160] response so you just never have to do [3162] this again. Also, if you think about it, [3163] how much more time is it taking when I [3165] do it? It's taking a lot more [3167] time. So looks like it had an error [3169] while processing my request. Hm. Not [3172] entirely sure where that error is coming [3173] from. It probably is a rate [3176] limit. Let's go open AI doll E3 rate [3179] limits. See how many of these puppies I [3181] can generate. Do I have coins or [3186] tokens? I go doll [3189] E. Go images [3196] maybe. Let's go per model. Let's just [3201] see dolly three [3207] here. No, I should be good across the [3209] board. That's way more images than I [3212] need. I can do 10,000 images a minute, [3213] right? That's a lot. So, I don't know. [3216] Maybe I'm misformatting the data. Maybe [3219] I can't feed new lines in or something [3220] like that. Let's see. What is this? A [3222] bunny stacking colorful blocks labeled [3224] markdown, CSV, XML, and JSON. No, that [3226] looks good to me. Hm. [3230] too big. Could be too [3232] big or it could also just be a service [3236] outage. That's how I um typically do my [3241] debugging. Yeah, looks like there are [3243] some issues recently with Sora. I don't [3245] know if those issues extend back to me. [3248] Okay. Okay, let's just try another [3250] module or another node then and let's [3252] see if it's the dolly or if it's just um [3254] my current approach with the Facebook [3256] node cuz the Facebook node is the only [3257] one that's had the issue that I've seen [3259] so far. So, I'm starting to think, hm, [3260] is it the Facebook node or is it just um [3264] Dolly in general? Fact that I haven't [3266] got an error yet, it's a pretty good [3268] sign that it's just the Facebook node. [3271] If it is the Facebook node, just got to [3273] ask ourselves why. Okay, no, it's not. [3274] It's actually just all of these dollies. [3276] Um interesting. So I'm not really sure [3278] what's going on with the image there. We [3280] saw that it was working a moment ago. [3282] Unfortunately, when you are working with [3283] the microservices economy, there are [3285] going to be situations like this with [3287] pretty inexplicable errors. Let me [3288] think. How do we proceed with this build [3290] regardless of the fact that there's some [3291] issue with Dolly? Well, I think what [3294] we'd probably want to do, hold on, let [3298] me change my API key just before I [3301] proceed. Really [3303] just throw it away. What we probably [3306] want to do is we probably want to go [3307] through the execution history and then [3308] we can just pin the outputs and that'll [3309] allow us to continue regardless of the [3311] fact that one of the APIs that we're [3313] using might not be working. That's [3314] typically what I do. So, we just changed [3317] my credential. Haven't got an issue yet. [3320] Spoke too soon. So, what I'm going to do [3322] is I will go to my execution history. [3325] Let's see the last good [3331] execution. Looks like the last good [3333] execution was not here. Let's do this [3336] one. What is the output of this? Looks [3338] like we have JSON that looks like that. [3340] So, I'm actually just going to copy [3341] this. [3343] Okay. I just want everything. Can I just [3345] copy [3347] everything? Yeah, that looks good. Now [3350] that I have this, um, why am I doing it? [3351] Because I can actually go here. Uh, [3355] uh, can I just Oh jeez. I don't actually [3357] believe I can pin the output of a broken [3360] node. Okay, so realistically, what I [3362] have to do is delete this. Go back here. [3365] Pin this like this. There you go. Then [3367] go over here. Pin this like that. And go [3371] over here. Pin this like that. Okay. I'm [3374] now believe I could set everything else [3379] except for that pin output. So I've just [3382] deleted the entire thing. So I have to [3384] go through the whole generation again [3385] unfortunately. But just part and parcel. [3388] And now um that we will have dealt with [3391] that. We could actually merge the [3392] outputs and [3394] continue. I think when debugging it's [3396] important just to like keep a level head [3398] and note that um you know most of the [3401] time it's your fault you've done [3402] something wrong but there are some [3404] situations that are just pretty [3405] inexplicable and I wouldn't allow that [3406] to slow down the rest of your build. [3408] Like I'm kind of in my head I'm thinking [3410] there's a probability that this is some [3412] inexplicable issue that I have no [3414] control over. I could, if you think [3416] about it, just stop developing and then [3418] be like, "Well, I'm done with the [3419] system. This sucks. I'm not going to [3420] work on it." And get really frustrated. [3422] But, uh, I'd rather continue [3424] developing a different part of the [3426] system and then I can always circle back [3429] to that at the end. I think that's an [3430] important principle of just systems in [3432] general. If something isn't working, [3434] take a breather and then focus on a [3436] different section for a little bit. Then [3437] you can always double back to that [3438] initial section that was causing you [3440] problems after you've sorted out the [3441] rest of [3442] it. Okay. Okay, so transcript is [3444] currently being pulled. I'm going to go [3446] back to YouTube transcript ninja. Looks [3450] like that will have just wrapped up. [3451] Cool. Looks like it did. We're now [3452] feeding it into OpenAI. The [3456] transcript currently being [3458] generated. Maybe it's just an OpenAI [3460] problem though. The entirety of OpenAI [3462] is down. That would be pretty rough. We [3464] may have been [3465] hacked. Got some spyware competitor [3468] that's come in and just destroyed the [3470] servers. No, they didn't destroy the [3472] servers. Okay. Uh, all right. What in [3476] item zero contains valid JSON? [3480] Exactly. I'm not seeing [3482] anything. Looking pretty good to me, my [3484] man. So, looks like we have some issue [3487] here where we do not have valid JSON [3490] JavaScript object notation. Just opening [3492] this up here. And this [3495] looks right. It's a new line thing [3497] again. Uh, why are we getting new lines [3499] here? [3502] It's not giving me any new answer. Oh, [3503] what's [3505] this? We have a [3508] quote. No, we don't have a [3512] quote. [3514] Odd. All right. Uh, well, I guess I am [3516] going to have to replace all Can we just [3520] replace all special cars? No, that [3523] doesn't count. [3524] Um, could replace all [3532] Uh I don't know if I could just [3537] do a [3539] backslash. Could I? Let's see. So [3543] uppercase any occurrences of blue or [3545] car. So what do we have to [3548] do? I think we had to use the G flag, [3551] right? [3558] back [3563] slashn could I just go [3566] space? Is that going to work? I don't [3568] actually know this going to work. [3569] Probably not. Oh, yeah, it did work. All [3571] right. So, I just replaced back [3574] slashn with a [3577] space. So, basically instead of these [3579] new lines, um, we just have a space. All [3581] right. Well, that's fine. I guess I'm [3582] just going to have to do this for [3583] everything. [3584] Oh, [3587] well, glad that you just throw some [3589] stuff at the wall and have it stick, [3590] huh? Me, too. Okay, so let's do that. [3593] Let's do that. Let's do that. So, this [3596] test is [3597] done. Let's just see this [3599] test. Oh, and I realize I should [3601] probably not be doing this line by line [3603] by line. I should probably be doing this [3604] all um at once. Okay, looks like we got [3608] the same issue here. So, what's going on [3610] now? [3612] The fact that we just can't get good [3614] JSON is worrying to [3616] me. Okay, it's simple. We just didn't [3618] have a comma [3621] here. Cool. We got that. And then what [3624] about over here? Do we not have a comma? [3625] No, we have a comma. Awesome. So, I'm [3626] just going to test the merge node now. [3627] Should be good. I mean, we we we're [3628] pinning the outputs of these three, [3630] right? So, it's just going to skip over [3631] this and then set the JSON. I'm going to [3634] run this. Skip over this. Set the JSON. [3635] Cool. All right. So, what does this [3637] actually look like in practice? We have [3638] three. We have image URL, postbody, [3641] platform, Instagram. Then we have [3643] another one that says platform LinkedIn, [3644] another one that says platform Facebook. [3645] So now you're probably wondering why the [3646] hell why the hell are you doing all [3648] this? Well, now hopefully it makes [3649] sense. Um, because we have these three [3651] items and they all have different types, [3652] we can actually match the column based [3653] off the type, and then we can add it to [3655] a Google sheet. So I'm going to go [3657] sheets. I'll go add row to or append row [3660] to [3661] sheet. Um, air table is actually better [3663] to use um for stuff like this just cuz [3667] uh otherwise um rate limits and stuff [3670] can be pretty rough. Let's just go new [3672] sheet over here. What I'm going to do is [3674] I'll call this uh my AI podcast [3678] repurposing [3680] engine content calendar. Maybe we'll [3683] just call this our content. Ah, let's [3684] just do that. Okay. And then what am I [3687] going to do? Uh well, if you think about [3691] it, we can actually map this, [3694] right, with an expression. Yes, we can. [3698] Perfect. So, so now what I'm going to do [3700] is um inside of my Google sheet, right, [3702] which we've now done this, done that, [3704] done that. We haven't done that last [3705] part yet, but I've done this, done this, [3707] done this. We're now just combining all [3710] these. Um if you think about it, what I [3713] need now is I just want like content. [3715] So, what I'm going to want is um I'm [3717] going to need some sort of [3720] like date added. Then I'm going to need [3724] post body. And then I will go post [3726] image. This isn't going to be perfect [3729] because sometimes you're going to have [3730] to download the image first, but we can [3731] deal with the downloading um on some [3733] platforms later. And then I'm going to [3735] go Facebook. I'm going to add another [3737] sheet which is going to be called [3739] Instagram. [3743] And then finally, we'll have one called [3745] LinkedIn. Okay, we'll paste all these [3747] three in. All right, so now uh if you [3750] think about it, the document, sorry, the [3751] document that I'm going to do is fine. [3754] Uh the document is just going to be this [3756] document. So I can actually just grab [3758] the ID of the document, which is [3759] positioned up here. And then I can just [3761] pop that in. The sheet though, the sheet [3762] is what's going to change depending on [3764] the platform. [3765] Okay, so the sheet, if it's [3768] Facebook, we'll feed in Facebook. If [3770] it's Instagram, we'll feed in Instagram. [3771] If uh it's LinkedIn, we'll feed in [3774] LinkedIn and then it'll automatically [3776] find the specific one to do. Now, there [3779] are three columns. There's date added, [3780] post body, post image. Post image, post [3783] body is right over there. Post image is [3784] the image URL. Okay. And then the date [3787] added uh is just going to be date. So, [3790] we should just be able to go Can we go [3791] dollar sign now? Yeah. I don't really [3794] like the way that that's formatted, [3795] though. So, can we format this [3796] differently? Uh let me [3799] see. Hm. [3806] Let's see here. [3811] Um, how should we format [3814] this? Can we do day day month year year? [3818] Or should we go year year year month day [3820] day? We do that. Oh. Oh, the formatting [3824] is a lot easier than I thought already. [3825] April 9th, though. Can we just go [3830] DD, I [3832] guess. Oh, yeah, we'll just go DD. That [3835] looks good. Cool. Um, yeah, that should [3838] be okay. So, let's test this [3841] now. Oh, boy. That's a fat ass [3844] transcript. Wrong one. My bad. Uh, what [3846] did we have there? We had Instagram. [3848] Okay, cool. So, we just had three [3850] Instagram posts. [3852] And should we have three Instagram [3854] posts? I don't think we should have [3855] three Instagram [3856] posts. All right. All right. So, I feel [3858] like some some error occurred there, [3860] right? [3862] Cuz we should have three items each with [3864] their different platforms. But what [3866] ended up happening? Looks like we fed [3869] all of these just to [3871] Instagram. So, this is Instagram right [3874] now, but it should be dynamic, right? It [3876] should change depending on what we are [3878] putting [3879] in. Um. Huh. Well, that's annoying. All [3882] right. So, slight issue with recording [3883] there. Um what ended up happening was [3885] for whatever reason when I was pumping [3887] the data through that dynamic remapping [3890] flow with the merge uh just it just [3892] didn't work. I think it has to do with [3893] the underlying way that the naid end [3895] node functions. So anyway completely [3898] unrelated issue but my recording just [3899] stopped so I had to restart this. [3901] Basically what I ended up doing was I [3902] just hardcoded the logic in the sheets. [3904] So if I go to the first sheet for [3905] Instagram so you can see here it is hard [3907] coding the sheet of Instagram. Okay. If [3910] I go to the second one here for [3911] LinkedIn, it's hard coding the sheet for [3913] LinkedIn. And for the third, if I do [3915] Facebook, then it's hard coding the [3917] sheet for Facebook. Is this his most [3918] elegant solution? No, not really. I'm [3920] kind of annoyed that I have to do this [3921] to be honest, but is what it is. And I [3923] don't really care too much about the [3924] elegance of a solution. I care more [3925] about just like whether or not it works. [3927] So, testing this now. Going to my sheet, [3929] which is over here. If I go to the [3930] Facebook post, um, as you see that one [3932] populated, then Instagram and LinkedIn [3934] because this is happening sequentially, [3936] not all at once. You know, we got to [3937] wait a little bit. LinkedIn there. Then [3938] finally, Instagram over here. And uh [3941] yeah. Yeah, this is more or less how I [3942] how I went through and I solved the [3944] flow. And then at the end here, let me [3946] just recreate this for you guys. Now [3948] that I'm done it, I I want some sort of [3949] user input. I want some sort of, you [3952] know, experience where the person that [3954] submitted the form knows that the form [3955] is good to go, right? So in NAN, you can [3957] actually add this over here as a form [3962] ending. So you can actually generate a [3964] form ending. You could say, [3965] "Congratulations, your content has been [3967] produced." Then I'll say, "Check your [3971] content calendar for the specific [3973] posts." Then maybe I'll even link the [3975] content calendar [3978] here. You know, you can imagine a client [3980] experience that'd be a lot simpler and [3981] easier for them to see. Okay, cool. So, [3984] yeah, that's the flow in a nutshell. Um, [3985] the thing is this is just the first part [3987] of the flow. He's like, "Are you [3989] serious, Nick? You're an hour and is the [3990] first part of your flow?" Uh, yeah, but [3992] the second part of the flow is really [3993] simple. we just actually do the posting. [3995] So now that we have like our asset, [3997] which is basically just a list of posts, [3999] we have to do is we just need some sort [4000] of logic that checks all of these once [4001] per day. Then it basically sees, hey, [4003] has this thing been posted yet? So I've [4005] added a posted on column to double check [4006] for that. Then if it hasn't been posted [4008] yet, it'll just go and it'll add a [4009] posted on column. It'll say, hey, uh, [4011] this was added on the 9th, posted on the [4012] 10th. If you think about it, if we have [4014] a bunch of these and you know we have [4017] some columns that say nth ninth, but [4020] then this one's empty, um what we're [4022] going to do is we're just going to [4023] filter to only look for the ones with [4024] empty and then those are the ones that [4026] we're going to fill in the next day and [4027] actually go through and post. So in this [4028] way, we're going to have like a dynamic [4029] um a dynamic tracker basically. Uh that [4032] doesn't make much sense to you right [4033] now. Don't sweat it too much. Let's [4034] actually go ahead and uh let's just [4035] build out the second half of this. Okay. [4037] So, I'm going to click u back to my home [4040] and then I'm going to add AI content [4042] repurposing engine 2. Just change the [4045] title to two. Now, what do I need to be [4049] the um start of this? Well, if you think [4052] about it, I'm probably just going to do [4053] a test for now. Well, actually, I should [4055] do a schedule trigger. Let's just run [4057] this once every day. Okay. Do I want to [4059] post this at midnight? Probably not. [4060] Let's do 7 a.m. or something. And minute [4062] zero. So, we get a bunch of data in [4065] here. Okay. which is nice. And then that [4067] supposedly is going to initiate our [4068] flow. What do we do next? Uh let me just [4070] pin this. What do we do next? Well, now [4072] we got to uh look through the Google [4074] sheet. So we got to filter and we got to [4075] post a [4076] bunch. And so the way I'm going to do [4078] that is I'm going to get rows in [4083] sheet. Okay. So I'm going to connect my [4085] credential. What is the document I'm [4087] going to be using? Uh well, AI podcast [4090] repurposing calendar. Now we have three. [4092] We have Instagram, LinkedIn, and [4093] Facebook. Okay. So I'm just going to go [4095] the first first. The filter I'm looking [4097] for, if you think about it, is I want to [4098] see if this column posted on is empty. [4101] If this is empty, then I want to return [4104] the value. Okay, so let's just test this [4106] really quickly. Doing a call, we've [4108] returned one because posted on is empty. [4110] But what if I said x is posted on x? If [4112] I click test, I'll say, oh no, no output [4115] data is returned because there's no um [4116] content with posted on equal to x. So I [4119] just verified that my filter worked [4120] right there, right? Easy peasy lemon [4121] squeezy. [4123] Okay. Now, another thing we have to [4124] think about is, well, we've just done [4125] that once with um the Instagram stuff, [4127] but we're going to have to do this again [4129] with the Facebook and LinkedIn as well. [4131] So, I'll say check Instagram posts. This [4135] one will be check LinkedIn [4139] posts. This last one here will be [4142] check Facebook posts. [4148] And here, this one has to be [4151] LinkedIn. Here, this one has to be [4155] Facebook. The column logic should be the [4157] same for each. Let me just make sure. [4158] Post it on. Good. This one should be [4160] posted on. Yeah, good. Okay. So, now [4164] that we have this, we have everything [4166] that we need in order to go and and do [4167] the posting. So, if you think about it, [4169] what we're going to have to do now is [4170] we're going to implement posting logic. [4171] Post on Instagram, post on LinkedIn, [4173] post on Facebook. Simplest way is [4174] obviously 1x per day, but you can change [4176] this to be whatever you want. That's [4177] what I get for not using my pen. And [4179] then um after the post, what are we [4181] going to do? We're just going to mark it [4183] as done inside of our Instagram post and [4186] then LinkedIn post and then Facebook [4188] post, Google Sheets. And then at the [4190] end, I'm probably just going to merge [4191] them together again. And then that's it. [4194] So the question is, how do we actually [4195] go about posting on these platforms? And [4197] that's a great question. Let's uh let's [4198] go through and let's figure this out. [4200] Okay, so I just did a bunch of [4201] authentication. Now, this authentication [4202] in N8N is non-trivial. It is honestly [4205] pretty involved to get through. Let me [4207] walk you guys through what I did. I just [4208] don't obviously have the ability to [4210] share all my access tokens and stuff [4212] like that, but I'll still run you guys [4213] through what I did and walk you guys [4214] through the workflow. So, essentially, I [4216] mentioned earlier we have that schedule [4218] trigger, right? And we're checking the [4219] Instagram, LinkedIn, and Facebook posts. [4221] And then we sort of have three routes [4222] here. The first is Instagram. And so, [4225] the way that the Instagram route works [4227] is what we need to do first is connect [4229] to a graph account. The graph account is [4231] just the way that Facebook deals with [4232] all their API calls. I'll talk about [4235] that specifically, but first, if you [4236] guys wanted to set this up alongside me, [4238] if you guys didn't have the template, [4238] which you guys can obviously get in [4239] Maker School, you would have to go [4241] through the following. The host URL [4242] would just be default. HTTP request [4244] method would be post. Graph API version [4246] would be 17. The node would depend on [4248] your Facebook or your Instagram account [4251] ID. I'll cover that in a moment. The [4254] edge would be media. I set ignore SSL [4257] issues to false. Then underneath this, [4259] we'd have two options. There'd be a [4260] caption option with the body of the [4262] post. there would be an image URL option [4264] which I actually just hardcoded here um [4266] as like a uh I don't know a silly image [4269] because I just cuz I wanted to test it [4271] out a couple of times in my account to [4272] make sure that it worked first. But I [4273] can actually go through it and I can fix [4275] it um afterwards. Okay, great. So yeah, [4277] that's all of the stuff that you need. [4279] The node the way you get that is you go [4280] to [4281] business.fas.com. Obviously I'm posting [4283] this on a business account and you go [4285] down to settings and then what you have [4287] to do is go to Instagram accounts. Right [4289] next to Instagram accounts you have the [4291] ID of the Instagram. Okay, so that's [4293] that's where you would go. That's the [4294] very first place that you would go to [4295] get the ID of the node and yeah, just [4297] make sure the edge is media and so on [4298] and so forth. To actually connect this [4300] to a graphic account to actually create [4302] a credentials, as I mentioned, quite an [4303] involved process. What you have to do if [4305] I go to the documentation here, so you [4307] have to first make a meta app with the [4309] products that you need to access. And my [4311] recommendation is just do all products. [4313] Okay, so I'm just going to open up a [4315] bunch of tabs here as nad guides make. [4317] What I ended up doing was I made one [4319] called [4321] nick_rive_na_post machine, but I'm just [4322] going to create a new one [4323] here just to show you guys where it's [4326] at. This is where your I don't know um [4329] app name is going to be. Then your use [4332] cases. What I always uh what I do is I [4335] just do um [4337] other. And then it'll ask which business [4339] specifically you want to work with. I [4341] have no idea why it's in Spanish, but [4343] it's in Spanish. [4345] and then your app name and then the app [4348] contact email and then your business [4349] portfolio. You would just select the [4351] business portfolio that has access to [4353] all the other stuff. Now, I mean, I'm [4355] pretty good at all this stuff and the [4357] way that Meta and Facebook does all of [4359] their different business portfolios and [4361] ad accounts and ad managers and stuff, [4362] that's still like really really crazy um [4366] to me. And you know, I'm somebody that [4367] works with technology like this on a [4369] daily basis. So, don't feel out of the [4372] loop or don't feel incapable if you guys [4375] don't know what that means. Um, it took [4377] me a very long time to figure this out. [4379] An embarrassingly long time, I should [4381] say. Uh, I'm authenticated through SMS, [4384] so I just had to get myself a text [4386] message. Can I just confirm this? After [4389] you're done with this, you will have an [4390] an app. It's going to take a second. Um, [4393] and they're going to verify the hell out [4394] of you. Okay, great. So once you're done [4396] with that, um you need to So I'm going [4398] to set up both Facebook and Instagram at [4400] the same time. But then you need to set [4401] up um obviously the the Instagram. So [4403] click set up here. Oh, sorry. Before we [4405] do all this actually, we need to do two [4407] things. Go over to app settings basic. [4409] Then what you need to do is you need to [4410] enter a privacy policy. So I just [4412] entered this as my privacy policy. Okay, [4414] so that's number one. Next, go to [4417] tools, then go to graph API explorer. [4420] Then what you need to do, okay, is you [4422] need to generate you need to go to the [4423] specific app that you just did. So, in [4425] my case, NAN access. Then under [4427] permissions, you have to add, go to [4429] other. Um, I mean, I just added all of [4432] the permissions. I think you would be [4434] smarter than me and maybe just add the [4435] ones that are specific to Instagram. But [4437] the way that I typically do these things [4439] is, um, I just scroll through and then I [4442] find anything related to Facebook or [4444] Instagram. Then I click okay. So, as you [4446] see here, this very helpful bright red [4448] bubble is assisting [4451] me. Um, I don't do any of that. No, I [4454] don't do any of that. Okay. So, now once [4456] I have all these and you click this um [4458] generate access token button, you're [4460] going to have to sign in to your [4463] account. Again, you can opt into the [4465] current applications. So, I'm just going [4467] to do all of them. Going to do all of [4469] them. I'm going to do all of them. I'm [4471] going to do all of [4473] them. Then, the application that you [4476] just created is going to uh request [4478] centrally access to your account. Once [4481] you have that, you will have your your [4482] access token up here. Then you're also [4484] going to have a bunch of Instagram [4485] permissions. So access token is what you [4486] want to copy. Okay? And that's what you [4488] go and paste in here. That access [4491] token is that big fat beautiful access [4495] token. Um, and I just realized this [4497] probably isn't going to work now because [4498] I'm I have a bunch of different settings [4500] with my other access token. So I'm [4501] actually going to go back and I'm going [4502] to I'm going to put in my previous [4504] access token. Uh, where am I here? Let's [4507] go back to this one. [4511] I'm going just copy that. Go back here [4513] and then paste that in. Let's save that. [4515] Okay. Anyway, once you have the access [4517] token for the specific thing you want. [4520] So, in my case, oops, I'm doing it [4522] again. That says NAN access. Go back to [4528] developers.fas.com/apps and then go back [4530] here to the main app. For whatever [4533] reason, it duplicates your apps if you [4534] add a portfolio like I did. Then uh down [4537] where it says Instagram, you can go to [4538] settings and then where it says API [4541] setup with Instagram login. This is when [4544] you would add your Instagram [4549] account. We've now just given it access [4552] to everything. I'm still getting [4553] insufficient developer role. H why is [4555] that? Not entirely sure. It might be [4557] because of [4563] this. Yeah. So, you need to make it [4565] live. Then you click [4567] allow. The app will now have access to [4569] your Instagram. Beautiful. And once [4572] that's done, you just take that GraphQL [4574] or Graph um API token, access token, I [4577] should say. Feed it in here, connect it, [4579] then you're good to go. [4581] Okay. So, after that, what you do is you [4583] feed in the post body and then you feed [4584] in the image URL as I mentioned earlier. [4586] Now, um I'm actually going to fix this [4588] right now. So, I'm just going to test [4590] this. Pull some Instagram [4592] posts. Okay. Now, as you can see, we [4595] have the image URL, which I will feed in [4598] right over here. Let me just make sure I [4601] can actually see this. Uh, no, we can't. [4604] Right. Right. The reason why is because [4606] um OpenI will automatically time these [4608] out after a while. So, I can't actually [4609] see that image, which is unfortunate. [4611] What we need to do is we need to [4612] download it and upload it um again. [4614] Okay. So, I'm just running the new image [4616] generator just so that I have access to [4619] all of the um new images. Otherwise, [4622] OpenAI will time out the images if you [4624] haven't opened them or accessed them in [4626] a while. Looking pretty good to me. And [4628] it looks like now this is working as [4630] opposed to before where I wasn't. So, [4631] that's just a good example. Focus on [4633] solving the problems that you can solve [4635] at the time of the development. Um, you [4638] know, I just went and took my attention [4640] elsewhere and then whatever problem that [4641] the API had is now resolved. Okay, so [4643] now we're adding stuff to the sheet. [4646] There's the Instagram one, LinkedIn one, [4647] and the Facebook one. Let's just access [4649] the image here. [4651] Look at that. That's really [4653] interesting. Fascinating. Here's the [4656] post image. Thank you, rabbit. Here is [4659] the other post image. W That rabbit is [4662] having a go. I really like that. That's [4663] cute as hell. Little little tongue is [4665] out. Okay, great. Um, so now we've added [4668] that to the sheet. So now if we go over [4669] here to the other uh scenario, what do I [4671] want to do? I just wanted to test this. [4672] So I'm just going to test the Instagram [4674] post. Pull in the new Instagram post [4675] here. Looks like we got that one post [4677] image. Beautiful. Let's now upload that [4679] one to the Instagram. [4680] [Music] [4682] So, we just feed in post image here to [4684] image URL. There we go. [4686] Oops. So, do not [4689] delete do not delete the image URL. [4692] That's not what you want to do. All [4693] right. Should be good. I'm going to test [4695] this step. It's now executing the node, [4697] meaning it's uploading. And what [4698] happens? It returns an ID. What does the [4701] ID do? The ID is actually what allows [4703] you to take something that you uploaded [4705] and then post it afterwards. Okay. Now [4707] on the post IG node, what you need to do [4709] is you need to reference the specific [4710] page that you're using, okay? Which is [4713] 1784144. That's uh the data that we got [4717] previously. And then yeah, the rest of [4719] these settings, I'll just leave you guys [4720] here to uh to take them. But the main [4721] one in consideration is creation ID [4724] where you paste in this ID here. So I'm [4726] going to post this. We're going to get [4728] good output, which is nice. Uh guess I [4732] need to like go to that, right? [4735] Yeah, let's view this on Instagram now. [4737] So, I just posted my little bunny rabbit [4739] live. Be the first to like this. I'm [4742] just going to delete it because that's [4743] on my actual uh account. But hopefully [4745] you guys can see what that flow looks [4747] like from start to finish. Pretty easy. [4749] Lemon squeezy. Uh then we're going to [4751] check the LinkedIn posts. HTTP request [4753] and then publish to LinkedIn. Now, [4754] you're probably wondering, why do you [4755] have to do that? Well, the reason why [4756] you need to do this in the LinkedIn row [4758] is because uh LinkedIn actually needs [4759] the the image file itself. Uh so let me [4762] test the im the LinkedIn route now. So [4764] I'm click [4765] test. It's not enough to get the URL [4768] like we had before. Okay. What we need [4769] to do is we actually need to get the [4770] image file. Now just because I don't [4772] want to go through a bunch of annoying [4774] stuff. Um what I'm doing is I'm just [4775] getting the image file from post image [4777] right over here. No authentication. I [4779] click test step. Now it's actually going [4780] to go and it's going to redownload the [4782] image. So I know it's a fair amount of [4784] bandwidth going back and forth, but now [4785] the image is in nad. Then the LinkedIn [4788] module works pretty easily. All you need [4789] to do to create a connection is you just [4791] click on this button and then uh if you [4794] wanted to create a new one, let me [4795] create a new one. Just go to standard [4797] and then click connect my account. It'll [4799] actually just log into your LinkedIn for [4800] you. Okay, so you just accept that [4802] LinkedIn and then you're good to go. So [4804] I'm just going to close this and go back [4805] to my first account which I think was [4806] this one hopefully. And then the [4808] resource is post operations create post [4810] is organization the organization URN. [4813] This is interesting, but basically if [4814] you go to your LinkedIn account and then [4817] you go to the pages that you have [4818] control over right over here. Give that [4820] a [4820] click. The URL is going to be the ID of [4823] the page. Basic. You see that up there? [4826] That's what you're going to want to [4827] paste down here. The text in my case is [4829] just the post body, the image category [4831] here, and the im input binary field will [4833] just automatically pull from the [4834] previous one. So I now map this to my [4836] LinkedIn. If I drag this over here, [4838] you'll see I now get a URL lii share. [4841] So, if I then refresh this, I will have [4843] my little bunny [4844] rabbit having been posted with my [4847] content, which is cool. All righty. All [4849] righty. And then, uh, what's that last [4851] one here? The last one is the Facebook [4853] route. So, let's test this [4854] out. So, I'm just going to pull all the [4857] data. I have the post image as per [4859] usual. If I want to publish this to [4860] Facebook, same flow that I had before. [4863] Okay, we connect the Facebook graph [4864] account, but here are the details. [4866] instead of the node ID. So first of all, [4868] HTTP request is a method. Graph API [4870] version is 17. The node is me instead of [4872] the node. Um and then edge is photos. [4875] This is false. Message post body then [4879] post image. Okay. When I post this, [4882] what's going to happen is it'll go on my [4884] Facebook account. It'll go and it'll [4887] create the post ID. So uh where the heck [4890] is that Facebook [4891] account? I don't really want that to be [4894] posting. Let's view this on [4897] Facebook. See that new little bunny post [4900] I made. And then uh oh, how do I [4902] actually get rid of that? That is the [4903] question. Think of all my fans. They're [4906] going to see the bunny. They're going to [4907] be like, "Nick, what the hell's this [4908] bunny all about?" All right, we just [4909] click on this and then should be able to [4912] delete it. I think it's Yeah, there you [4914] go. Cool. So, I've just proven that this [4917] works essentially. Um, feel free to [4919] trust me. Uh, what's better than [4922] trusting me is actually going out there [4923] and doing it. Now that we publish in all [4925] three, what do we want to do? Well, if [4926] you think about it, we now want to [4927] update that last uh that last record [4929] that we just gotten. And then we want to [4931] just write post it on. Then we want to [4933] have that date. Since we're doing this [4935] once per day, what I'm going to do is [4936] the operation is going to be update a [4938] row. This one [4941] here, the one we are going to [4944] update column that we're going to match [4946] on is going to [4948] be let's do post image. I'm going to do [4954] So, I'll go back to check Facebook post [4956] and I'm just going to match the post [4957] image to the same post image that we [4960] had. The only difference I'm going to do [4962] here, everything else will be the same. [4965] Okay. Only thing that I'm going to [4967] actually meaningfully change is posted [4969] on. So, I'll just I'm just going to map [4970] the rest of these fields in. And what [4971] I'm going to do is I'm only going to [4972] update a postit on so that it doesn't [4974] show up in the next search. How do I do [4975] that? Um, I'm just going to go back to [4976] the formula where I got the exact [4977] formula for postit on. There you go. [4980] Change that to an expression. All right. [4982] And then instead of check Facebook post, [4984] this is update uh update Google Sheets [4988] DB. Okay. Oh, I should probably do that [4991] one more thing here. I should call it [4993] Facebook. Facebook. There we go. All [4995] right. So, that's the Facebook one. [4998] We'll go over here now. Connect this to [5000] the LinkedIn [5001] one. We got to change this to [5005] LI. And all of this data is going to be [5007] different as well. Um, I'll change that [5009] in a sec. Just [5013] I really like being able to quickly and [5015] easily map this stuff out by copying and [5017] pasting it. So, just now going to move [5019] this to [5020] Instagram. Then I just want to rename [5023] this to Instagram. Cool. And I basically [5026] just have to go, you know, unfortunately [5028] I have to go through this um this [5029] rigomeroll [5032] again. So, let's test this. Let's pull [5034] that out over here. Yeah, I can't, you [5037] know, actually need to execute the [5038] previous node. It's kind of annoying. [5040] Whatever. [5041] Let's give it a [5043] try. Looks like all my LinkedIn fans are [5045] going to have to [5046] wait. All right. Uh post image was right [5049] over [5050] here. Date added was right over [5053] here. One more [5055] time. Then post body was right over [5059] here. Looks good. And then posted on [5061] format looks good. That's fine. And then [5065] uh let's test this now. [5070] should update. Good for this one. [5074] Um, just test everything first. This is [5077] going to error out, but it's okay. I'm [5079] going to get the Facebook [5082] post. Then we can now update the post [5089] image. One thing I don't like about [5091] N&N's interface is that [5093] uh the expression field covers the [5097] subsequent field that you're working on, [5098] which is [5100] unfortunate. Anyway, give that a [5103] go. Cool. And then this one here, I've [5106] already verified that works, I believe. [5108] Cool. And then now, if you think about [5110] it, if we go back to our Google sheet, [5112] we now have a fully kind of like self [5114] annealing system. Um, the system just [5117] checks to see when the posted on date [5118] was last and then it'll just go through [5120] once a morning and check to see which [5122] one to post next. So, you can generate [5124] 10 new AI podcast posts and then you can [5127] go through and just um check these off [5129] one by one automatically, which is [5130] pretty neat. All right, hopefully you [5132] guys appreciated that video. Had a lot [5133] of fun putting it together. This is a [5135] super simple and straightforward system [5137] to sell. I mean, there were a couple of [5139] gotchas as you guys saw, but nothing [5140] that was out of the ordinary. As long as [5142] you guys remain calm while doing those [5143] bug fixes and uh kind of approach [5145] everything from a first principal's [5147] perspective, it's never really too bad. [5148] If you guys have any questions about [5149] this, feel free to drop them down below. [5151] If you guys have any suggestions for [5152] other systems you want me to do, then do [5153] that as well. Please check out Maker [5155] School. We just hit 1,700 members. This [5157] is my 0ero to1 road map to get you [5159] started with building and then selling [5161] systems just like I showed you in this [5162] video to real live customers. Price goes [5164] up for every 100 members and we're [5166] currently the biggest and largest by [5167] revenue automation community out there. [5169] I mean, if you guys already have an [5170] established business, you guys want to [5171] scale it up even further, then [5172] definitely swing by Make Money with [5174] Make. This is my premier automation [5175] community where I show you guys how to [5176] take something that's working and then [5177] scale it. Thank you very much for all of [5180] the support. Really appreciate everybody [5181] that makes it this far in the video. [5183] Have a lovely the rest of the day and [5184] I'll catch you guys

Video: https://www.youtube.com/watch?v=g_Q15Ibn3Iw
Title: 5 Industries Desperately Paying for AI Automation (2025)
[0] Here are five industries desperately [2] paying for AI automation today. Let's [4] start it off with number one, the [5] coaching and consulting business. First [7] off the bat, coaching and consulting is [10] awesome for AI and automation agencies [12] primarily because of the very high [13] engagement cost. Okay, what that means [15] is if you can land, let's say, one [17] client for an average coaching or [18] consulting business, you can make them [21] $10,000. And let's say you charge, I [24] don't know, $5,000. Well, with just one [27] client, you're already producing a 2x [29] ROI. What if you get a coaching and [31] consulting business, three clients? [32] Well, now you're making $30,000. On that [34] $5,000 cost, you're basically producing [36] a 6x multiple. So, AI automation [39] agencies that are specifically involved [41] in growth tend to find this niche very, [43] very good and very profitable to work [45] with for that result. Another thing is [47] they rely on personalized communication [48] a lot. Usually, you have some head guy [51] or chick that is like the personality. [53] Okay, I say Sam uh Sam Ovens here, not [56] Sam Alman for a specific reason. [58] Obviously, he is that person in his [60] business. And to some extent, no matter [62] how many sub coaches you will get on [64] your team, okay? If this is the amount [67] of revenue you're making, this is the [69] amount of time you're making, they [70] generally scale one to one, right? One [73] unit of time, maybe one hour of that [75] coach might be worth, I don't know, [77] $2,000 or something. So, if you want to [80] make $20,000, how many hours do you have [81] to spend? Well, 10 hours, right? 10 * [84] 2,000 is 20,000. So, what this means is [87] if you can build automated systems that [89] increase the angle or the slope of this [92] line even just a tiny bit through some [94] sort of system that just makes that [96] person's time 5% more efficient. And [98] this is the angle, okay? Over a long [100] enough period of time, you can earn them [102] a ton of money. And that's where your [105] services come really in handy. And they [107] tend to be willing to pay you high [108] prices to justify that. Another big [109] issue is there's a very high customer [111] acquisition cost. This makes sense, [113] right? If the engagement cost is very [115] high if when you get them a new [116] customer, the customer tends to pay like [117] 10K. It's not uncommon at all that the [119] business will spend, I don't know, like [121] $1,000 to acquire that customer. And [123] actually, just a little bit of an aside [125] here, not related to automation [126] agencies, if you can find a business [128] model in which the customer acquisition [129] cost and then the average order value or [131] the engagement cost is really out of [133] whack, aka you get a ton of average [135] order value for very little customer [137] acquisition cost. That's a great niche [138] because you can just pour tons of money [140] in and then make large multiples on [141] this, right? Usually there's some [143] gotchas or some catches. But this is a [144] big one for AI and automation here [146] because you usually can improve margins. [149] If you can improve margins by a few [150] percentage points, think about taking [152] something from 20% to 21% and then think [154] about taking something from 10% to 11%. [157] If you can bring somebody's margins from [159] 20 to 21, you're improving by about 5%. [162] Their business is making 5% more money. [164] If you can go from 10 to 11%, you're [166] actually improving their entire company [167] by about 10%. Mathematically, this [169] relationship holds true even more so for [172] very very low margin businesses. Let's [173] say you start at 3%, you go to 5%. I [175] mean, if you think about it logically, [176] my math ain't so good. 5 over three, [178] what's that? You're improving that [180] person's business by like 30% or [182] something like that. Again, math ain't [184] good. Don't hold me on it. But you can [185] have a very outsized impact with very [187] little actual work. A lot of coaches and [189] consultants have recurring revenue [190] models. So my communities maker school [192] and make money withm make.com for [194] instance they may not cost very much [195] upfront but if you extrapolate them over [198] the course of a year or two you can make [199] a ton of money obviously per person so [201] long as you continue delivering value. [203] And there are a couple of other issues [205] here like admin tasks which are shared [207] between a bunch of the niches I'm going [208] to show you. Um you know a lot of these [210] uh coaches and consultants are like [212] information people. So they track their [214] progress and metrics. That makes it [215] pretty easy for you to jump in there. [216] And then it's pretty reputation based. [217] So, if you can deliver a higher or [219] better quality customer experience, you [220] typically go very far. Um, here are a [222] bunch of automations and systems that [224] I've talked about on my channel that you [225] guys could sell. I've talked about [227] client onboarding flows, which just [228] automate the hell out of these things. [230] That's great to sell. Content delivery [232] system, some sort of like content [233] multiplier is great. So, some sort of [235] repurposing or whatnot. Some sort of [236] payment collection, automated invoice [238] follow-up is great because typically [240] that's the way that these uh services do [242] business. Some sort of community [243] management automations or systems. And [245] again, when I say systems, this doesn't [247] have to necessarily be a like cloud [249] system. This can actually just be a [250] series of SOPs or some sort of process [252] documentation. Some sort of follow-ups. [254] Um, lead nurturing can be really big for [256] these guys. You know, even like rag FAQ [258] chat bots. You can make like an AI [260] version of a coach. This is uh pretty [262] interesting nowadays where you feed all [264] of the YouTube videos, all of the [265] content in their communities, all of the [267] documents that they've written into this [269] ragbot and then basically just have it [270] be like the artificial intelligence [272] version of Nick or of Sam Ovens because [274] you charge a little bit on that. So, [276] lots of really cool systems here. You [278] guys are going to get this doc just [279] embedded in the description. Feel free [280] to check that out. But for the sake of [282] time, let's move on to industry number [284] two, which is recruitment, staffing, and [287] offshore talent agencies. All right. All [289] right, so I think we all know who this [290] beautiful bastard is. Recruitment is [292] essentially, for those of you that don't [293] know, the process of pitching a company [296] on your ability to hire the best talent [298] for that company. Okay, so if you are [300] working with a recruitment business, the [302] reason why this is such a fantastic [304] niche to be in is because if you think [306] about it, these recruitment businesses [308] deal with hundreds if not thousands of [310] candidates every single week. They're [312] constantly in communication with them. [314] And usually the communication tends to [316] be pretty similar and they have a lot of [317] stages they need to move people through. [319] Okay. So, anytime you have high volume [322] of repetitive tasks, anytime you have [324] like lots of manual communication, you [326] basically have an automation gold mine. [328] And that's where um you know, one of the [330] reasons why recruitment, staffing, and [331] offshore talent agencies are just blown [332] the hell up right now as a niche for AI [334] automation agencies. Tons of people in [336] maker school make money with make are [337] printing money working with these niches [339] specifically because if you can again I [341] don't know automate 10% of um a thousand [345] tasks you can obviously demonstrate a [347] lot of value to the company. Another [349] thing is these recruitment companies cuz [350] they deal with really high volume [351] repetitive tasks. If you can just find a [353] way to like log things which I'll talk [354] about in a second and if you can like [356] make that logging consistent you can [357] typically deliver a lot of value for [359] them too. So every time a new uh [361] candidate replies or something like [362] that, you can log that to some sheet [364] showing the average candidate conversion [366] rate or average candidate reply rate. [368] Stuff like this is really really good [369] and it's quite a low hanging fruit. A [371] lot of the time you also have like kind [372] of a digital first industry. So [374] techsavvy a lot of the time recruiters [376] just already understand things like cold [378] email platforms which is nice. And then [380] again notice how we have 5 to 20k [382] placements here. So, uh, one of my [384] clients that I used to work with was an [385] awesome executive recruiting firm. And [387] the way that they place C and high B [389] suite level staff members was they were [391] doing, I think it was like 20% or [392] something like that of first years. What [395] that means is if they're placing a [396] $200,000 role, right? They make 20% of [400] the first year salary. So, the company [403] pays them 40,000. How cool is that? [405] Okay, imagine making $40,000 in a single [408] customer. You land one of these clients. [409] If you're a growth AI automation agency [411] like I am, uh you know, an agency that [413] specializes specifically in driving lead [415] flow, improving uh you know, [417] conversions, um I don't know, like [418] improving sales and and breaking [421] constraints and and bottlenecks uh on [423] that end. Obviously, if you could just [424] get them one more per month, you could [426] justify maybe up to like a $10,000 a [428] month service, which is great. And [430] that's only one. I mean, if you can get [431] them multiple, [433] gez. And then, yeah, they usually have [435] uh very datarich databases, right? And [438] then some of these models are recurring, [439] which obviously just multiplies whatever [441] you're doing by whatever the average [442] turn is. So, lots of really cool systems [444] you could sell them that I've talked [445] about on my channel and in my [447] communities as well. Candidate [448] pipelines, um, candidate sourcing [449] systems. These are basically just cold [451] email systems. Okay. Um, you could also [453] do obviously employer sourcing [455] systems. That's really cool. So, that's [457] just outreach. Automating some of the [459] client comms or some of the candidate [460] comms as well is pretty big. So instead [462] of you having to, I don't know, like [464] have a team of 20 recruitment agents [466] whose sole jobs it is to message [468] candidates back and do all that [470] laborious communication, you can [471] actually automate the vast majority of [472] it and then you could just have them [474] show up on calls and stuff just with [475] some intelligent stage changes, some [477] email watchers and and whatnot. You can [478] do things like automated reference [479] checks. This is kind of neat. There's [481] some APIs that you can call that'll [482] automatically do some things as well as [485] including like, you know, record checks [486] and and so on and so forth. Um, and then [488] you could also do obviously personalized [489] cold outreach to uh to employers and [491] stuff. Okay, as well as candidate [493] reactivation systems, placement tracking [494] dashboards. Man, have I talked about a [496] lot of systems on my channel. Let's move [498] on to niche number three, the digital [500] marketing and creative agency. Now, I've [502] talked about this a lot. Okay, uh [504] digital marketing and creative agencies [506] are fantastic for people like us. The [508] main reason why is because one, you have [510] high engagement costs again of three I [513] mean 3 to 50k at a certain point. I'm [515] pulling numbers out of my ass. You can [516] charge $150,000 for an agency project if [519] you're pitching to the right people. [520] Most uh smaller B2B agencies that do, I [522] don't know, PPC or creative or ads or or [526] I don't know, SEO or whatever, they may [527] charge like 2 or 3,000 bucks a month, [529] right? But um anyway, this is a super [532] digital industry and the more digital an [534] industry is, the easier it is for you to [536] acquire these leads in the first place. [537] So, if you think about like your [539] likelihood of winning is just a big [540] equation and on the very beginning of [542] this equation, which for you guys would [543] be over here, okay, the very first [545] factor, um, if that's just really high [547] and really easy to do, if you just [548] scrape all digital agencies in the [550] United States in legitimately like 5 [552] minutes with Apollo or Ampify or [554] LinkedIn, uh, then obviously everything [556] else downstream is going to be a lot [557] easier to do, right? Also, these guys [559] typically check their email inboxes [560] quite a bit. I say this as an agency [563] owner who used to run a digital [564] marketing business. Um, so, uh, you [567] typically have a pretty direct line to [568] communication, a direct line to making [570] something happen. And yeah, I'm I'm a [572] big fan of this, uh, of this niche [573] personally, and this is probably one of [574] the most common ones that I'll build [575] systems for. They also typically have [578] pretty crappy margins. They also [580] typically have low billable time and [582] heavy admin. Now, average agency margins [584] might be like 30% to 40%. Right? [587] Contrast that with my business, for [588] instance, which might be like 80% to [590] 90%. Now again, if we just do that math [592] comparison, if I were to add 5% margins [595] to this business, well, maybe I just [598] took them from 30 to 35%. Which is a [601] 16th growth of the business. If I were [602] to add 5% to this business, well, maybe [604] I just took them from 80 to 85%, which [607] that's like a 1/16th or something like [609] that. That's 16. That's 116th. It's [612] going to be a lot harder to justify any [613] business that is not a low margin [615] business. Okay. Another big issue is [617] typically this is a very low barrier to [620] entry industry to begin with. So the [621] people that come in, they don't really [623] know how to do things like client [624] communication. And so there are a lot of [625] very simple systems you can implement to [627] substantially improve the quality of [628] their communication, the quality of [630] things like their their timelines, the [632] quality of things like their time [633] tracking. And yeah, you know, it's kind [635] of a low bar. The reason why is because [636] you just don't really need anything to [637] start an agency. That's actually one of [638] the benefits of AI automation agencies [640] if you think about it. You know, back in [642] the day, you used to have to spend [643] several hundred or maybe thousands of [645] dollars to get a business up and [646] running. You had a bunch of capital [647] expenses. You need to get an office. You [649] needed to procure a bunch of equipment [650] and heavy materials and stuff like that. [652] Nowadays, with an AI automation agency, [654] the cost is literally you watch a few of [656] my YouTube videos and then you spend a [657] few hundred and voila, you now have like [659] a fully thriving business that's [660] registered with the government. That's [662] pretty badass, right? But, you know, [664] that also means because it's easier, you [665] get a lot less talented entrance into [667] the market that need help with simpler [669] systems that you can deliver outsized [670] values with. So, yeah, I'd say that [673] these are the vast majority of the main [675] reasons here. Here's some automations [676] you could sell them. I want to say with [678] this niche, you could sell any of the [679] former automations of this one, too. And [681] you could sell any of these to basically [682] any of the other businesses. Agencies [684] are like the core fundamental business [685] model here. Recruitment agencies, [687] offshore talent agencies. There's still [688] types of agencies. So, anyway, a PM [691] automation is really big. What does that [692] mean? That means you do something like a [694] monday.com or a ClickUp or maybe I don't [698] know an ASA build, maybe like some sort [700] of Slack project management build. And [702] what you do is you you help them break [704] down tasks which typically involve [706] multiple people on a team and give them [708] one centralized place to coordinate all [710] this stuff, which just makes their lives [712] a lot easier. Client intake systems, [714] again, just because the low bar, [715] building a simple client intake system [717] where they just get an email or [718] something like that when they sign up [719] adds a ton of value. um some sort of [722] resource allocation dashboard. Now, this [723] is typically done automatically if [725] you're using a service like Harvest or [727] um I don't know some of these like more [728] advanced time trackers, but inside of [730] some CRM like ClickUp, for instance, and [732] I believe ASA as well, uh and probably [734] monday.com, probably not Slack, though. [735] Uh you can actually just automate like [737] the creation of a dashboard that shows [739] where people's times are spent at [740] various parts of their week, which can [742] be pretty important. Same thing with the [743] time tracking. A big thing is invoice [745] and payment automation obviously because [747] you know the bar is very low and so if [750] you can employ some sort of system to [751] collect on invoices that are [753] outstanding. Uh typically the the [755] company can make a ton more money. I [756] mean I can't tell you the number of [757] times the the main issue with a a new [759] agency that I come in to consult with is [760] literally they just have like $50,000 in [763] outstanding revenue that they haven't [764] collected on. And I'm like all right so [765] is are they just not paying you? Did you [767] just do a terrible job? And it's like, [769] no, we just keep on forgetting to send [770] the invoices and then it's 3 months [771] later and then the person just doesn't [773] really want to pay us, right? They kind [774] of forget about it or something. This [776] is, believe it or not, a very real [777] issue. Um, anytime I come into a new [780] agency and I do any sort of consulting, [781] like one of the first things I check is [782] like, okay, do you have some sort of [784] system that consolidates and then [785] consistently follows up on invoices? No. [787] All right. Well, I mean, that's a big [788] problem. Let's start there. Obviously, [789] since agencies typically deal with [791] proposals, um, and proposals are [793] typically these beautiful branded [795] things, if you can just automate the [796] hell out of this process, maybe with [797] like a form that somebody fills out that [799] templates out a proposal, sends an [801] email, and then, I don't know, follows [803] up or something like that a week later, [805] you can add a ton of value to the sales [806] process there. Yeah, you can do other [808] stuff like client feedback collection, [810] organization of assets, doing some sort [812] of human in the loop Q&A, and then [813] obviously AI for for the production of [815] assets as well. It's pretty big [816] nowadays. Really big niche, big fan of [818] it. Let's go to B2B tech and hight touch [820] SAS companies for number four. These [822] hightouch SAS companies are pretty [823] great. When I say hight touch, just to [825] distinguish, there's um there's kind of [827] two different types of SAS companies. [828] There's low touch SAS. Low touch SAS is [830] basically like a simple photo editing [832] app or something that costs five bucks a [833] month. The idea is that company is low [836] because they don't require human beings [838] to manage you. They just build a [840] beautiful onboarding experience. They [842] have some FAQs. They have some guides in [844] their software platform and then it's [845] just hands-off. You pay a small monthly [847] amount. Obviously, you get onboarded [849] through these automated methods and [850] everything is good. Now, contrast that [852] to a hightouch software as a service [854] company. Hightouch software as a service [856] companies are typically a lot bigger. [858] They work with like older and more [860] established niches and they cost way [862] more money. And in order to work with [864] one of these, you usually need to sign [865] up for some sort of demo. You need to [867] have their sales team walk you through [869] things. You need to contact them. Okay? [871] You guys want examples of this? Check [873] out any of my previous niche videos. [874] I'll literally show you guys like [876] example websites where I walk you [878] through uh their sales flows and and you [880] know how they sign people up and how [881] that distinguishes between high and low [883] touch. But the issue with a low touch [885] obviously hopefully you guys could see [887] what the problem is right off the bat. I [889] mean you know if you're going $9 per [890] month and even if somebody stays with [892] you for a [893] year $9 per month times a year is 108 I [897] think 108 bucks right that's your [898] lifetime value of the customer. Contrast [900] that with a high touch SAS. High touch [902] SAS might be $500 a month and it might [905] stay for a full year. Now, if they stay [907] for a full year, that's $6,000, okay, on [910] the low end. And a lot of these are way [911] higher. This is usually just like the [913] introductory price plan. You might be [915] paying like $1,800 a month. And the [917] average person might stand for 24 [919] months. And uh I don't know, that's like [921] over $20,000. I think it's like 24K or [923] something close to it. So, as you guys [925] can see, the multiples tend to add up. [926] So, high customer lifetime value. [928] Cha-ching. Done. They also typically [930] have complex multi-touch sales cycles. [932] So like I said, they have like demos and [933] stuff. Hight touch SAS companies sales [935] processes tend to reflect agency sales [937] process quite a bit with their proposals [939] and their quotes and their estimates. So [940] that makes this a very good niche to [942] come into because you can build all the [944] same systems you build for, you know, [946] some sort of agency that produces way [948] more of a multiple on their time, but [949] you can do so for this business with no [951] additional cost or resource on your end. [954] you produce way more money for them, [955] which is um obviously always a win. [957] Typically, at least in my experience [958] anyway, and I've said this a couple [960] times, and you know, I haven't had [961] anybody just super disagree with me yet, [964] so I'm going to keep on saying it. Um, [965] stack of disconnected tools, most of the [967] hightouch SAS companies that I've worked [968] with, uh, they tend to be companies that [970] like raised a fair amount of money over [972] the last couple years. And so, when you [974] when you when you spend a bunch of money [976] that isn't yours, you tend to be a lot [977] less effective and efficient in the way [979] that you allocate that. When companies [981] grow really quickly, they end up with [982] this big stack of disconnected tools [984] that typically cost a lot of money. And [986] a lot of these high-tech SAS companies, [987] if I'm honest, use other hightouch SAS [989] companies as like parts of their [991] fulfillment arm or like, you know, for [992] to to manage their business or whatever. [994] Um, and typically like these are just a [996] lot of money. So, I actually have [997] produced a sizable amount of value [999] literally just coming into a hightouch [1000] SAS business, auditing their whole tech [1003] stack from start to finish, and then I [1004] don't know, giving them two or $3,000 a [1006] month back because I find much lower [1008] cost or lower paying alternatives. Think [1010] about that. May not seem like a lot, but [1011] if I could save a company $2,000 a [1013] month, if I can do that in the first [1014] month, I just save them $24,000 a year [1017] within the first month. How many months [1018] does that buy me essentially to come in [1020] and then produce a demonstrable ROI [1022] before I have to worry about I don't [1023] know my position or my status as their [1025] agency partner. Quite a lot. Okay. And [1027] that's every month. This opportunity [1029] cost that you're saving them forever. [1030] They typically track things a lot. So [1032] datadriven decision-m I mean these [1034] people work with software, right? So a [1035] lot of KPIs in software also makes them [1037] pretty automation friendly, I would say. [1039] And typically you can also get some help [1040] and resources from the dev guys, some [1042] web hook or something like that because [1044] the person that is typically buying this [1046] service tends to be very nuanced. It's [1048] like usually some financial services [1050] technology company or some health [1052] companies or whatever, right? Some some [1053] super nuanced problem that's at the [1056] intersection of 17 different problems [1058] right over here. That's usually their [1060] SAS audience. That's who they deal with. [1062] There's typically like some very nuanced [1064] pain points that they deal with. And if [1065] you can build even simple systems that [1067] improve their ability to tackle or deal [1069] with those pain points even a bit, you [1070] can demonstrate a ton of value. And [1072] typically because this is a SAS company, [1074] you know, SAS companies tend to have [1076] really good margins, right? So a high [1078] touch SAS company less so because you [1079] have sales teams and stuff, but if you [1080] have over 70% margins, that's actually a [1082] positive, not a negative, like I was [1084] talking about before, because that [1085] typically means they just have a lot of [1086] disposable income. That plus the fact [1088] that a lot of these companies raise and [1090] have fundraising rounds, you know, a [1092] year or two ago earliest, then that [1093] means that you you typically have a lot [1094] of money to play around with. They're a [1096] little bit less, I want to say, [1097] scrupulous when it comes to hiring you. [1098] Obviously, I'm just giving all this to [1100] you through the lens of my own [1101] experience. These are all companies that [1102] I've obviously worked with, but that's [1103] yeah, those are my those are my beliefs [1105] on that matter. Lots of cool systems you [1107] can sell these guys. Lead qualification [1108] systems. This is essentially just like a [1110] CRM. CRM comes in, depending on the cost [1112] of the person or their answers to [1114] whatever your sales questionnaire was or [1116] your contact us questionnaire, you route [1118] them to specific people. You could do [1119] some sort of demo booking automation. [1121] You could personalize the hell out of [1122] your outreach. What's really cool about [1124] hightouch SAS companies is you can [1125] typically do outbound. Now, you can't [1128] really do outbound very well for like [1130] low touch SAS companies. I mean, I've [1131] done it before, but I don't know. I just [1133] find people are a lot less likely to [1135] care. Usually, the primary sales [1136] mechanism with these low touch SAS [1138] companies is like ads. It's either ads [1140] or it's organic or it's some sort of [1141] personal branding. But with hight touch, [1143] you can actually get away with running [1144] like cold email campaigns at scale, I [1146] guess, just because it's such a more [1147] like human sort of business model where, [1149] you know, it's expected there's going to [1150] be somebody demoing you and somebody [1151] selling you that these sales people's [1153] times just slot right into this [1154] pre-existing process. But yeah, I've [1156] sold a lot of personalized sales [1157] outreach as well, which I'd recommend. [1159] And then, I mean, there are a bunch of [1160] other systems here. I think I'll just [1162] leave it at that because I want to make [1163] sure this video can be under 30 minutes. [1165] But yeah, a lot of lot of value here. [1167] Oh, uh, probably the last one I'll cover [1168] is just support tickets. This is [1170] probably one of the only places where I [1171] think an NAD AI agent actually makes [1174] sense today as of the time of this [1175] recording because you could just have [1177] very simple like a support routing [1178] system where basically every time a new [1180] ticket comes in to a specific email [1182] address or something, you could just add [1184] it to your NAD agent and then you could [1186] have just that agent call like one or [1188] two predefined tools which is do things [1190] like, you know, calculate the refund [1192] percentage. If the amount of money that [1194] this person has asked for refunds for in [1196] the past is lower than the amount of [1198] money that they've paid you and your [1199] ratio is, I don't know, 2% or something, [1201] just automatically process it. Or, I [1202] don't know, some automated feedback [1203] collection mechanism with somebody [1205] decides to cancel on you. A lot of [1206] different ways you could do this, but um [1208] I actually think the customer support is [1209] probably the only situation in which [1211] these agents make sense as of the time [1212] of this recording. So, you could sell [1213] that as well. And yeah, that takes us to [1215] the final niche, which is financial [1217] services/ companies. Now, um I should [1219] make a caveat to all this stuff. The [1221] issue with these and the reason why I'm [1224] saying them last, well, if you find a if [1225] you find a company like Jordan [1226] Bellforce, then absolutely go for it. I [1228] don't think you'll have any of the [1229] issues that I'm talking about. But the [1231] one issue with this niche, [1234] okay, is depending on how big the [1237] company is and how into upholding [1240] regulations they can be, you may have to [1242] deal with some regulations. You guys [1245] know how healthcare you have to deal [1246] with like um offiscation of customer [1248] details and stuff like I don't know [1250] patient records and so on and so forth [1251] have to comply by HIPPA. Well, there are [1253] some financial companies like financial [1255] services companies that think a lot [1256] similarly to that and you know there are [1258] a lot of these regulations and whatnot [1259] that they have to uphold and if you [1261] don't take every single box and if you [1262] don't do all these systems on your own [1264] hardware and your own software and like [1266] on prem and off the cloud and so on and [1268] so forth, this can be kind of annoying [1269] but not all companies are like this. [1270] I've worked with a few that aren't. Um [1272] let me just run you through some of the [1273] logic first. So we can talk about that [1274] afterwards. The first is very high [1276] client lifetime value. The second is [1278] they have ongoing uh reporting and [1280] compliance. This compliance aspect, [1282] okay, you can actually automate large [1284] portions of compliance which is awesome. [1285] Um so tons of value in automating [1288] compliance. This is usually like the big [1289] burden in a lot of these businesses and [1291] if you can just be like hey I can [1292] automate you know 30% of all the [1294] compliance here so that it's just like [1295] human in the loop Q&A. Uh these [1297] companies will love you. A lot of hight [1298] touch client communication obviously. So [1300] tracking that communication, building [1302] systems and SOPs around that [1303] communication um is a lot of value. And [1306] then also a lot of these companies have [1307] just way too much admin. They don't have [1309] a lot of advising. The benefit is a lot [1310] of these guys typically work with like [1312] spreadsheet tools and stuff like that [1313] anyway. So if they're familiar with how [1315] to do this sort of stuff and if they're [1317] using it all um if you're using [1318] spreadsheets and databases informally [1320] already, then usually you could sprinkle [1321] in very little work. Okay. But um you [1326] could have an outsized impact on their [1328] processes uh with I don't know a couple [1330] of make.com automations or native end [1332] flows or something. A lot of these uh [1334] financial services companies that have [1336] MR obviously that gives you a ton of [1338] leverage with automation like um I think [1340] I said lifetime value here but really I [1342] mean that's just like per engagement or [1343] or whatever. I think a lot of these [1345] financial services companies can be up [1346] to 500k realistically. Um obviously [1349] really high customer acquisition cost. [1351] So because of that, you know, the the [1352] better you can make their margins, the [1353] happier they'll be. That plus the [1355] compliance burden, I think, is really [1356] the main value. And yeah, there are a [1358] couple of cool systems that uh I've [1359] built before on my channel that I'll run [1361] you guys through. Um, obviously client [1363] onboarding is really big. What's [1364] interesting with these financial [1365] services companies I find is a lot of [1367] the clients that you work with, uh, I [1369] don't know if it's just like older [1370] school or it's just a byproduct of just [1371] like the the finance mindset, but [1373] customer relationships are very very [1375] important. If you could make a customer [1376] relationship even 5% better, if you [1378] could make a person feel paid attention [1380] to even 5% more. If instead of some sort [1382] of automated calendar reminder, you [1384] could make it seem like you wrote that [1385] yourself or instead of some sort of [1387] clearly templated introductory [1388] onboarding message or email, you could [1390] make it seem like you wrote that [1391] yourself right there. Uh, typically [1393] there are large implications as to the [1394] health of that relationship over time. [1396] And because these customers tend to be [1397] so sticky and a little bit older school, [1399] at least in my experience, that sort of [1400] value goes a really really long way. So [1402] if you can make it like very hightouch [1404] and perceivably customized then these [1406] relationships can pay hundreds of [1407] thousands if not millions. Okay cool. Um [1410] then content personalization which kind [1411] of feeds into that. You do things like [1413] compliance monitoring or some sort of [1414] automated compliance automated Q&A. And [1417] then a lot of the time the thing that I [1419] find silly is these people they usually [1421] use some sort of like document or file [1423] service a lot. Like they'll use like [1425] Google Sheets or Google Docs or they'll [1426] use like Excel or they'll use One Drive [1428] or whatnot. literally just like coming [1430] in from an outsers's view, somebody that [1433] hasn't actually been inside of the [1434] company and just organizing everything [1435] for them can actually have a tremendous [1437] amount of value. You could have some [1438] sort of project manager or CRM or [1440] whatever they're using and every time a [1441] new record gets created, you could just [1443] create a Google Drive that houses all of [1445] the data and assets for that particular [1447] record and you could come in and you [1449] could be the hot shot that just like, [1450] you know, improve their margins by 5% by [1453] doing so. So, I think there's a lot of [1454] alpha in these like older school [1456] industries. But what's really cool about [1457] this business is a lot of it's just like [1459] text based. So, you could just slot in a [1461] lot of these um AI workflows in without [1462] much of an issue. Okay, great. That's [1464] that. Um hopefully you guys appreciated [1466] this video. I want you to know that [1467] you'll find all of this data, everything [1469] that I just showed you in the [1471] description down below. If you guys like [1473] hearing about how to take AI and [1475] automation, which I think a lot of [1476] people typically think is an engineering [1478] problem, and then making it more of a [1480] business problem instead, you know, [1481] where to find leads, how to approach [1483] leads, how to um build uh uh funnels and [1486] flows, and how to really just start an [1487] AI and automation business that actually [1489] works. Definitely check out Maker [1491] School. It's my 0ero to one automation [1494] business roadmap where I run you through [1495] everything you need to do to acquire [1496] your first customer in 90 days or less. [1499] And I even guarantee your money back at [1501] the end if you don't end up hitting that [1502] goal. Otherwise, if you guys already [1504] have an AI and automation business and [1505] maybe you're watching my videos to [1506] uplevel your knowledge, check out Make [1508] Money with Make. It's my automation [1510] community where I take businesses that [1511] are already working and then I help you [1513] scale up to 25K a month and beyond. Very [1515] thankful that you're still with me at [1517] the end of this video. Like, subscribe, [1519] do all that fun YouTube stuff, and I'll [1520] catch you all in tomorrow. Thanks so [1522] much.

Video: https://www.youtube.com/watch?v=lXxnQZIO8sI
Title: Turn A $2K Automation Into A $10K SaaS with Lovable (No-Code)
[0] Today, I'll show you how to sell any [1] automation for between two to five times [3] the amount using a simple opportunity [5] that has really only been around for the [6] better part of the last month or so. The [8] big idea here is we're going to take a [9] winning system, a system that maybe [11] we've already built or a blueprint or a [13] template from somebody's YouTube channel [14] like mine. And then what we're going to [16] do is feed that into Bolt or Lovable and [18] actually have it create an entire SASish [21] app for us with a one-click link that we [24] can send to our customer or maybe even [26] prospect if we're pitching them, which [28] will massively decrease the perceived [29] complexity of a system, significantly [31] reduce their monthly software costs, and [33] we're going to get to brand the product [35] to their liking, which will allow us to [36] increase value and pitch a lot more. As [38] I mentioned, this is an opportunity [39] that's really only been around for the [40] better part of the last month and a half [41] or so because these tools just were not [43] at the point where you could just [44] oneshot a prompt. But in this video, I'm [46] actually going to be walking you through [47] everything. I'm actually going to take a [48] pre-existing product that I've sold for [50] the better part of $100,000 and then I'm [52] going to show you guys how to build out [54] an entire front end in lovable in [56] something like 20 or 30 minutes by [58] connecting it to a simple no code tool. [59] So, we're going to save a ton of money. [61] We're gonna allow our customers to see a [63] lot more of the value of the systems [64] that we're creating. And ultimately, I [66] consider this like the evolution of the [68] AI and automation industry. I just [69] wanted to walk you guys through what [70] that would look like in [72] practice. So, here's a quick demo. [74] Lovable built us out a beautiful looking [77] form that we fill out that generates a [79] high-quality proposal. I'll run you [81] through what all that looks like in a [82] second, but I just want you guys to know [84] that this is what the end result of this [85] looks like. We did this in about 15 [87] minutes or so. I mean, this is high [88] quality enough that it even has like a [90] slight blur above the hero header. Now, [92] how does this compare to maybe a third [94] party platform like Type Form or like [96] Fill Out or Jot Form or something? Um, [98] as you guys can see, a form is probably [100] the simplest application of this, but [101] nonetheless, it's still it hits a lot of [103] the same beats and notes that a customer [105] is looking for. It's packaged nicely. It [107] has some good attention to detail. I [108] mean, hell, it even copyrights their the [110] company name down below. Um, and this is [112] connected to a simple scenario that I [114] put together, and you guys will watch me [116] put together. um that just takes a web [118] hook from lovable and lovable handles [119] all that logic, generates a bunch of [121] proposal stuff in the middle and then [122] generates a response at the end. What [124] happens when I click generate proposal [126] is I end up with this little modal in [127] the bottom lefthand corner and then if I [129] go back to my scenario, it's actually [131] almost done already. Um it's AI [133] generating the the bits and pieces [134] sending an email and then finally it'll [137] generate the web hook response as well. [139] After proposal is generated [140] successfully, if I go back up to the top [142] here, you'll see this dashboard is now [143] populated with a one. If I give that a [145] click, you can see that this actually [146] now provides a bunch of context about [148] the proposal. I can go to details, [149] scroll um up and down and you know just [152] see various pieces of this. And then if [154] I click view proposal, it'll actually [155] take me directly to the Panda do [157] proposal that we generated, which in [159] this case is a pretty high quality [160] asset. Um it's something again that I've [162] sold for up to about $100,000 or so, a [164] little bit less than that. If I go to my [166] email address, then go to show, these [168] are just a bunch of demos that I did [169] previously. You can see that we've now [171] sent an email to uh [173] nicholas@gmail.com with a bunch of [175] information. You know, this is the sort [176] of system that tends to work. So, that's [178] what I wanted to demo and show you [182] guys. Okay. So, I want you guys right [184] off the bat to know you can do this in [185] NAM, you can do this in make, you can do [187] this in Zapir, you can do this in [188] literally any noode tool, but this is [190] pound-for-pound, word for word an exact [192] system that I have copied into a [194] template and then sold for almost [196] $100,000 over the lifetime of my A& [198] automation business. So, I just wanted [199] to take this and then show you guys what [201] the system would look like on a on an [202] actual flow that works that I've sold. [205] What this is in a nutshell is this is a [208] um type form that I will fill out. Okay? [210] And that's what this section over here [211] does. And then AI or GPT4 in this [214] instance will generate a proposal for [216] me. It'll generate milestones and [218] timelines and then it'll populate a [219] Panda do template. If you're not with [221] me, let me actually run you through how [223] this works. Essentially, I have this [224] form over here, okay? And on a sales [226] call, I'll fill out this form. I'll put [228] my information in [229] here. And then while I'm closing the [233] customer, okay, or while I'm talking [235] with the customer about maybe something [237] that they might want, I have this [239] opportunity to send a proposal. At this [241] point, I paste in a one-s sentence [242] description of their business. So, I'm [244] just going to be doing this on my own [245] business for, you know, privacy sake and [247] whatnot. One second copy is a content [249] writing company that produces [251] highquality journalistic style pieces. [255] Then I put in a simple [257] problem. So in my case, I'll just copy [259] and paste this pre-existing one that I [260] did specifically because I knew I was [262] going to be doing demos for this in the [264] future. And then I cover the solution. [266] And then I cover some platforms or [267] services. So you know, for automation, [269] I'll use make.com. For lead sourcing, [271] I'll use Apollo, Scraped by Ampify. And [274] then for emailing, I'll do instantly.a. [277] Okay. How long will the project take? I [279] type in two weeks. How much you want to [280] charge them? $3,500. And any additional [282] costs on the platforms, let's just say [283] 200. Now, at this point, um, when I [285] click submit, this is just going to [287] trigger a system that generates an asset [289] for me. It'll actually go and it'll send [291] a proposal to a customer. And the whole [293] idea behind the system, and the reason [294] why it was so valuable, and I was able [295] to sell about $100,000 worth of it was [297] because it essentially just templates [299] out a big chunk of a process that most [300] sales people would have to do manually. [302] Makes sense, right? That's where you get [303] valuable systems. You get something that [305] produces money and you just make it [306] faster. So, what tends to happen, let me [309] actually run this for you, is we will [312] grab the data from the type form that I [314] just filled out. So, Nick's arrive one [316] second copy, that's my personal email [317] address. Please don't send me spam. Uh, [319] then we will have AI generate a bunch of [322] different proposal fields, which I'll [323] run you through in a moment after it's [324] done. Then, we'll parse out the JSON. [326] And I actually left these two in here. [327] This was just like um a handme-down from [329] an old way you had to do things in Make. [330] You don't have to do that anymore. Then, [332] we'll actually populate a Panda [334] proposal. Then we'll send an email to a [337] customer. So in terms of what this [338] actually looks like, okay, if I go to my [340] email address over here, I receive [343] something that looks something like [344] this. Hey Nick, I just sent over a [345] detailed services proposal for one [347] second copy a moment ago in Panda for [348] clarity. The platform charges section is [350] approximate. These are fees paid to the [351] vendor. yada yada yada. Essentially, I'm [353] just providing some context about what [354] this is. Then after that, I also [356] received the proposal itself, which is [358] titled dynamically and it has a bunch of [360] cool value and and stuff like that. Hey [362] Nick, just sending this over discuss. [363] I'll shot you a follow-up email. limit [364] your thoughts when you have a sec. As [366] I'm sure you can imagine, if you receive [367] two of these in quick succession from [369] somebody that um you know just tried to [371] sell you on something, you're probably [372] going to be thinking this is pretty [373] professional, right? This is an [374] all-in-one solution that contains a [376] payment link, contains a bunch of [378] customized information um that's [380] relevant to the prospect. We talk issues [383] that the customer is suffering from. Uh [385] we talk honestly a whole lot more and [387] I've recorded a ton of videos on this [388] stuff, so I'll just leave it at that. [390] that I just want you guys to know that [391] this is a system that I've sold and many [393] other people have sold as well. So now [396] that we have all that sort of [397] understood, the idea is we are going to [399] take this system, okay, and then we're [403] going to connect it to a beautiful [404] looking front end. That beautiful [406] looking front end is so simple that we [408] can actually put it together in just a [410] few minutes. And I'm going to walk you [412] through what all of this looks like [413] right now. So first things first, I'm [415] just going to save this scenario and [417] then I'm going to copy all of it. Okay? [419] Okay. And I'm going to go to a new [421] scenario. Then I'll call this uh let's [423] just call this proposal generation SAS. [426] And I'm calling it a SAS. Although I'm [428] not going to implement authentication or [429] login or whatever. Um but I want you to [431] know that that's actually pretty easy as [432] well. I've done that now a couple of [433] times with lovable. Okay. Now that we've [436] duplicated this, we're going to change [438] the input of this. So instead of a type [440] form, it will be a um web hook call. [445] And this web hook call is just what [446] Lovable is going to um send a request to [449] in order to generate all the stuff we [451] need. Okay. So, I'm going to do a custom [453] web hook. We'll call this [456] Lovable web hook. I'm just going to save [459] this. And voila. Now, we have our [461] address. Okay. So, at this point, we [463] basically have everything we need, [464] believe it or not, with a couple of [466] minor changes to actually produce our [467] full app. I'll show you guys. I'll walk [469] you guys through what it looks like in [470] mobile. It's actually crazy how simple [471] this is. And by the way, you don't just [472] do this for finished systems. You can [474] actually do this to pitch people. [475] Somebody the other day just sent me a [477] full complete SAS for a video that I [479] made and said, "Hey, Nick, I saw that [480] you made this awesome video. Here's an [482] entire SAS that I just built for that [483] video. It was a very compelling piece of [485] outreach, and I want you guys to know [486] you can use this at any level of the [487] stack." So, what I'm going to do is I'm [489] going to go over to lovable.dev. Now, [490] I'm not affiliated with them, but there [492] are variety of um plans that you can [494] jump on if you guys want to do this [495] stuff at scale. I believe the initial [498] plan allows you to do 10 messages or [499] something like that. What I am going to [501] do is I'm going to ask Lovable to create [504] a form that my customer or my client can [507] fill out in order to generate a [509] proposal. Okay. Now, because I want to [512] minimize the number of messages, I'm [513] going to do what I'm actually going to [514] do is just have this um I'm just going [516] to try and write as long of a prompt as [517] humanly possible. So, um create a high [522] quality, sleek, minimalistic, dark mode. [526] I'm just making this up at the on the [527] fly, so it doesn't really matter too [529] much what you say here. Just want to [530] make sure we hit all the story beats. [531] Create a high quality, sleek, [533] minimalistic, dark mode form that when [538] filled sends data to. Then I'm going to [541] add the web hook call [545] here and waits for a [548] result. Okay, so we're going to send [550] that form data. Then we're going to get [552] the result upon a [554] result. So I'll populate a dashboard [557] like interface [560] with [561] [Music] [563] a link to the generated [567] proposal time that it was [571] generated and let me think what else do [574] we really [575] want a copy of the email that was sent. [579] Okay, great. Let me add some more [581] context here. [584] The form is a proposal generator [588] form that salespeople will use to log [592] sales. If they tap um if they select the [597] option to do so, it'll [599] also it'll go and send the proposal to [603] the end [605] customer. Here are the fields you should [608] have in the form. Okay, so let me just [612] run through what kind of questions did [613] we have? We [615] had first name, last name, email, and [618] company. First name, last name, email, [622] company. Cool. Just going to put X [627] here. What was the outcome of the [630] call, which can be send proposal, no [634] fit, meaning [635] flaked. Let's go send proposal. [640] Then paste in a one description sentence [643] of their [645] business. What's their [648] problem? Then I'll go what's their [653] solution? And then finally I'll go what [656] are the platforms or services you'll use [657] during [659] development before asking how long will [661] the project [663] take? And then ultimately how much do [665] you want to charge them. [669] number [670] field and then finally I'm just going to [673] say zero for now. Any additional costs [675] from [678] platforms. Okay, great. Upon the result [680] populated dashboard like interface [684] with there should be room for multiple [687] of these. Okay, [691] great. And then let me think is there [693] anything else we need in [694] this? I don't think so. [697] Oh, maybe we'll add something with the [698] client logo. Okay, add the client logo [702] in the top left hand corner. So, I'm [704] going to go to on secondcopy.com. I'm [706] going to just um network request. See if [709] I can grab this icon, which I [713] can. Okay, that looks good. So, I'm just [715] going to copy this over and then sorry, [717] just uh wrong tab here. We'll go back to [721] this. Cool. Now, I'm going to press go. [725] What is Lovable going to do? Lovable is [727] essentially going to grab the simplest [730] um framework to be used to build this [733] thing out, which is probably going to be [734] next.js. And it's going to get about 80% [738] of the way there. I'd say it's not going [740] to be perfect, but it's going to be [741] pretty good. While I'm waiting for this [743] to happen, and it's already working [745] through it, it's actually populating a [747] bunch of code files with styles and [748] stuff like that. I'm just going to go [750] back to my make.com scenario. Then where [752] it says generate proposal, I'm just [754] going to see what fields I'm going to [755] need to replace here just so I'm nice [756] and ready and I can make this video [758] short. So I'm going to keep all of the [759] same stuff in this flow that I had [761] before. And I think that's the real cool [763] nugget of this. You literally get to [764] keep everything in the flow the exact [766] same except for the input. The only [768] thing you have to do so you just need to [770] add a web hook response at the end, [771] which I'll show you how to do. And then [772] maybe just change the mapping of some [773] fields. I mean this is like a it's like [775] a five maybe like a 10-minute job. Okay. [778] Okay. So all the way down here, it looks [779] like I'm going to have to get the [780] business description, problem, solution, [781] and then tools. Okay, great. So I'm just [783] going to map all those for my web hook [784] after I know what the um fields are. [787] Then over here, we're going to need to [789] probably remap some of these variables, [791] right? So title will need to be [792] remapped, obviously. Milestone, [793] milestone, those will need to be [795] remapped. Down here, the price will need [797] to be remapped. Fair enough. And then [799] price. Okay. And then in the email, [801] looks like I'm going to have to map the [802] email address. And then I'm going to [803] have to change these two. Cool. That's [804] pretty easy. Why don't I next go web [805] hook and I'll go web hook response. [808] Then let's just head back over here and [809] see how we're doing on the uh production [811] side. So, it's actually going and it's [813] filling in our index page. Um, which [816] means that we're actually pretty close [817] to being done here, which is pretty [819] sweet. Now, there may be some issues [820] with the logo cuz I think my logo [822] doesn't have a transparent background. [823] I'll have to double check, but now it's [825] actually creating the page and it's [827] going to go and it's going to show me [828] pretty soon. The really cool thing about [830] Lovable is it just hosts it all for you, [832] too. You just don't have to do anything. [833] Awesome. Cool. Look at this. So, we have [835] the logo top lefthand corner. It says 1 [837] second copy right next to it. I didn't [839] even ask for it to do so. Proposal [841] generator. Generate professional client [842] proposals in seconds. Fill out the form [844] below to create your next winning [845] proposal. This is really, really nice. [847] We can access this just by clicking on [849] this button. It'll go straight to a full [851] page version of this [852] website, right over here. Okay, we have [855] all of the same questions we had before. [858] And it looks like we have a dashboard [859] section. Okay, so I'm going to go [861] through and the lefth hand side here and [863] I'm going to see what it says. [865] Okay, what's next? Refine and customize. [867] Tweak the design, animations, and [868] layouts via prompts. Fine. Master [869] prompting, GitHub sync, debug with ease. [871] Add project knowledge. Okay, so as I [872] mentioned, this is going to make it [873] about 80% of the way there. Okay, we're [875] going to send and and receive some data. [877] Um, it's probably just going to store in [878] the window for now. So, we may have to [879] connect what's called a super basease or [881] like a little simple database in order [883] for it to like up update and add [884] information dynamically and stuff, but [886] we'll cover all that in a second. Let's [887] just make sure we can actually send data [888] to our make scenario. All right. So, [891] first things first, I'm just going to go [892] back here, unlink this, and then I'm [895] going to grab this. I'm just going to [897] run it. Okay. The reason why I'm running [899] it, obviously, is I just want to verify [900] that I can actually send the data out. [902] So, what I'm going to do now is I'm [904] going to go here and put in some [905] information. We'll go Nick Sarif Nicola. [907] I'll just fill in most of the same [909] information that I did before. What's [910] the outcome? We're going to send the [911] proposal. Um, one second. Copy. Is a [915] content marketing business. What's the [917] client's problem? Um, oh jeez, it's kind [919] of annoying that I can't actually just [920] paste it. I, uh, when I was developing [923] this, I actually created a bunch of, um, [925] fields here specifically so that I could [927] copy and paste them when testing the [929] form, just because that makes my job a [930] lot easier, right? Especially when we're [932] AI generating stuff, you just want some [933] high quality content to go off of. What [936] platforms or services will we use during [938] development? Make, Apollo, Appify, and [941] Instantly. And then we'll go two weeks. [943] Project charge will be $500 and no cool. [947] So, I'm going to click generate [948] proposal, and we'll see what happens. [950] Okay, great. So, we actually it'll say [952] fail to generate proposal down over [953] here, which you guys might not be able [955] to see because of my head, but it'll do [957] so because it just didn't receive [958] anything from my web hook, right? But [959] now, if we go back to my web hook, check [961] it out. I've already received all of the [963] data. What does that mean? We've [964] actually connected our own form. So, I [966] basically just saved my customer $500 a [969] year or more in type form costs just by [971] creating my own form in just like 15 I [974] don't know, we're not even at 15 minutes [975] yet. Okay, so now what am I going to do? [977] Well, all I need to do is just map these [979] fields. Same thing that I did before, [980] right? Not super hard. So, let's go. [983] Going to connect this to the previous [985] flow. Just delete this. We have a filter [988] here called send proposal. This is just [990] how make works. So, I'm going to go call [991] outcome has to equal send proposal. [994] Beautiful. Now, under the generate [996] proposal side of things, I'm just going [997] to map the new variables, which are [1000] probably going to be pretty simple. [1002] Let's scroll down and let's see for [1003] ourselves. Business description, right? [1005] Right, that was that oneline business [1006] description. So, we feed that in. [1008] Problem, let's go to problem. Solution, [1011] let's go to solution. Then tools, let's [1014] go to platforms. Looks like they changed [1016] the name from tools to platforms for us. [1018] So, that's fine. Now, we'll generate [1020] milestones or [1024] timelines. Scroll all the way down here [1026] again to where I'm remapping my data. [1028] The solution was [1030] this. Then rough timeline was [1035] project duration. Wonderful. Anything [1037] else? Nope. That's it. Let's go over to [1040] our actual generator here. And now we [1043] just need to fill in the client email. [1045] Okay. Client company, client first name, [1048] client last name. We're going to vibe [1051] code ourselves a $5,000 proposal [1054] generator SAS. And we're going to add [1056] the price, which is just going to be a [1058] number. And then we still have a few [1060] more. We got to do this price as well, [1062] which I believe is is also just the same [1063] number. I'm not entirely sure about [1065] this, so just give it a go. Then down [1068] over here is just the name. Hey, Nick. [1070] Just following up. The email here is [1074] going to be [1076] Nick. And then we're going to fill in [1079] the actual email copy with, "Hey Nick, I [1081] just sent over a detailed proposal [1083] for we're going to feed [1086] in the company name a moment ago in [1089] Panda. Very cool. Awesome. Awesome. Now, [1091] what do we have to do? Well, we have to [1092] send some sort of response to my [1094] service. So, I'm going to tell it what [1096] the fields are and stuff like that [1097] later. But essentially, what we're going [1099] to need is we're going to need a link to [1100] the Panda doc, right? So, let's just run [1102] this through start to finish once. Okay? [1104] So, we're going to get one more error in [1105] lovable. We'll run this through start to [1106] finish once so that we know all the [1107] fields that we're going to feed into [1108] that web hook response. And then what'll [1110] happen is when lovable calls this, okay, [1113] Lovable will call. It'll do it. And then [1115] we're actually going to return it back [1116] to Lovable, which I'm just going to use [1119] as a heart because I don't yet I don't [1121] have access to my usual tablet. Okay, so [1123] that's what that web hook response is [1125] for. For now, we're just not going to do [1126] it because I don't really want to um [1127] yeah, I'd prefer just to like 404 it out [1129] and we can see the data. All right, so [1131] let's run this again. Okay, and now [1133] let's go back to my fields here and [1136] let's put in the information [1138] again. One second copy. Don't mind if I [1141] do. We're going to paste in a one-s [1143] sentence description of a business is a [1145] content marketing company that produces [1147] highquality journalistic style content. [1150] What was the problem again? Well, let's [1152] paste it in from here. The problem was [1155] they are manually sourcing leads from [1157] Instagram. The solution is they have a [1160] lead generation system and the platforms [1162] or services were I think I just said uh [1165] make.com, Apollo, ampify and instantly. [1168] Finally, the project duration was 2 [1170] weeks and let's say $500 here with no [1173] additional costs. Okay, actually we [1175] should add some additional cost just in [1176] case. Okay, we now have the data inside [1178] of make.com. Beautiful. We are now going [1181] to be generating that proposal aka doing [1182] all the stuff that the system normally [1184] did in Typform. We're now just doing it [1186] all directly ourselves, eliminating a [1187] form platform and just a lot of [1189] complexity. Obviously, we're also [1190] branding this as our own um client and [1193] and so on and so forth. You know, I'll [1194] like change the colors up a little bit [1195] and stuff, but hopefully you guys can [1197] see. If you just provided a color [1199] palette, it would do a pretty good job. [1200] Okay, now it's actually going to go and [1202] it's going to send the proposal. And [1202] then it's even going to go and send an [1203] email. So, we can actually go and see [1205] how this looks. Looks like there was an [1207] error with the email and that was [1208] because there's an invalid email address [1210] in parameter 2. Uh-oh. I might have not [1212] filled out the email. Oh, sorry. I used [1213] the first name instead of the email. [1214] Silly me. Just feed that in there. But [1217] that's okay. We still finished and [1218] generated the proposal. So, we can [1219] actually go through and we can make sure [1220] that everything on that front is fine. [1222] Let me just copy this into an incognito [1224] tab just because um I don't want it to [1225] appear that I'm accessing it through my [1227] own account. Cool. So, it took the price [1230] 500, cut it in half. That's what my [1231] system normally does. Awesome. It [1234] correctly filled in all of the [1236] issues. It automatically did all of that [1239] work. Automatically added the timelines, [1241] automatically added the costs. Wow. Very [1243] cool. Very cool. I'm [1245] impressed. It looks like I failed to map [1248] one field here. So, I'm just going to [1249] jump in and edit that. But yeah, I mean [1251] this worked and it did everything that I [1252] wanted it to [1253] do. Um, so all I'm going to do is I [1256] fixed that that email field earlier. Now [1258] I'm just going to fix up this other [1259] charge field, which would be additional [1261] costs. Cool. Um, we should now be good. [1264] So what we have now is we basically have [1266] all of the data that we need, right? We [1267] have the email copy. We got like the [1269] document ID of the panda do. We got [1271] everything. So what do we do? Well, we [1273] just need to feed in um a proposal URL [1276] to lovable. And then we need to tell [1277] Lovable, hey, where's the proposal URL? [1279] just so you know the customer has access [1280] to it in some sort of database [1282] structure. Okay, so this over here are [1284] some panda dooc templates. If I convert [1286] this to a [1288] document, what ends up happening is the [1290] URL will change. Notice how we just went [1293] from a whatever to a whatever # [1295] documents. Now we have a an ID. Okay. [1297] Well, what's really cool is if I just go [1299] to this make scenario, then if I steal [1301] this ID from the completed um output, I [1304] paste it in here. Okay, this is actually [1306] going to take me to the generated [1307] proposal, the one that I just I just [1308] generated a moment ago, which means we [1310] can actually just add the URL really [1312] simply by going to the web hook URL and [1314] then typing in proposal URL and it will [1317] be the panadoc URL with the document ID [1321] appended to it. Okay, what else do we [1324] want? We want the email body. Okay, so [1327] um don't really think we can actually [1329] get the whole email body. Do we even [1331] want the email body? Eh, maybe not. [1332] Maybe we don't actually want the email [1333] body. I wonder if can we do this in link [1336] uh through the message ID here? Let me [1338] see. I'm not really sure. If I were to [1341] test [1342] this go Nicholas [1345] Sarifgmail.com Nick and then one second. [1347] If I were just to test this, what would [1348] the output of this module [1350] be? Looks like we get a message ID which [1353] is this long thing right over here. Hm. [1356] Interesting. Is that at all related to [1358] what is up [1359] here? No, that's not related to what is [1361] up here. Okay, so I changed my model. [1363] We're not actually going to send back [1364] the email. That's fine. We're just going [1365] to have the proposal. I think that's [1366] easier anyway. Uh, anything else we need [1367] to do? Date time sent. We go like date [1372] sent. And we can just feed in the date [1374] created, right? We're just going to give [1376] lovable access to all this. Maybe we [1377] should just feed in all of the data that [1379] we just fed in, right? Yeah, probably. [1381] Let's do that. First name. [1384] This. I'm just going to copy [1387] this. Go here and I'll say turn these [1390] key names into JSON. with empty [1394] spaces. I'm going to feed that in. I'm [1396] just going to have it go and produce me [1397] the JSON so I could just paste it in [1399] here. Kind of cheating, I know, but what [1401] are you going to [1403] do? First name, last name, email, [1405] company, call, outcome, business [1406] description, problem, [1409] solution. Very nice. Ooh, how cool is [1411] that? Now, I'm just going to have to map [1412] the variables, right? [1416] And I guess this is all on Uline. So [1418] maybe I go to JSON formatter here and [1420] then I format and beautify this. There [1422] you [1423] go. Uh so first name is going to be [1427] let's see first name last name [1432] email company call [1435] outcome business description [1439] problem solution platforms project [1443] duration charge and finally additional [1446] costs. Awesome. So this is the data that [1448] I'm going to be sending back. Okay. Now [1450] what I'm going to do is I will feed this [1452] in again and I'll say remove all of the [1454] values and then I'm going to go and I'm [1456] going to tell lovable the data will be [1459] returned. Great. The data that is sent [1462] back after the web hook call will look [1465] exactly like [1469] this. Uh oops wrong one. Let's copy [1475] this except the field will be filled. [1480] Update update the web uh update the [1484] dashboard to populate upon receipt of [1488] this [1490] data. And then I'll say if you need me [1493] to do something about the database, let [1496] me know what that is. And we can [1497] actually hook this up to a database of [1498] some kind for the customer. [1501] And now it's going to go through and [1502] it's going to again math out the next [1505] steps. But yeah, on our end, automation [1506] is good to go. We've done it. We've [1508] connected one side to the other. Um, [1511] this is essentially like a product now. [1513] And the cool thing is, as you saw [1514] earlier, you literally just like grab [1516] the URL of this and it's live. Like this [1518] is what you would send to your customer. [1519] Or alternatively, you could get a custom [1520] domain called like, you know, proposal [1524] generator.11copy.com. How cool is that [1525] from a branded [1526] perspective? All right. But what it's [1528] doing now is it's updating the dashboard [1529] component to probably handle and display [1531] the data received after the web hook [1532] call. So it's actually going to go and [1534] it's going to change the logic so that [1535] the logic um maps the same fields that I [1537] showed you guys earlier. That's all of [1539] this stuff right here, right? Pretty [1540] cool. Pretty cool. Oh, and I think it's [1543] using email content as well, [1544] unfortunately, which is not what we [1546] need, but is what it is. Okay. Uh let us [1549] now grab this app. Okay, cuz it just [1553] finished. We're going to use local [1555] storage for persistence right now. So [1556] maybe we might not even need a database. [1557] Although you know if you do sell this [1559] exact product to people note that you [1560] will need some sort of database. Um one [1563] second copy is a content marketing [1567] business. Client [1569] problem was right over here. Let's paste [1572] that in one more [1573] time. Then client solution was right [1576] over here. Let's paste that in one more [1578] time. We'll go make Apollo app. We'll go [1581] two weeks. Uh 500 and then 50. Now I'm [1584] just going to make sure this is running. [1586] It says live. I'm going to generate the [1587] proposal. And let's see if this [1589] works. It's now waiting for me to [1591] generate the proposal. So it is not [1593] saying that anything failed yet. Okay. [1595] It's actually saying the term generating [1596] right now, which is cool. That's a [1597] really good sign. Shows that, you know, [1599] the system put in some logic to wait for [1601] this web hook to uh respond. Now, some [1604] of them have timeouts. So we're going to [1605] see if maybe we need to implement some [1606] sort of, you know, infinite timeout or [1609] whatever. Just wait until the request is [1611] done. We'll see. [1612] proposal is generating and when you are [1614] using an AI module just note that um [1616] generally it's it's best practice to [1618] have some sort of flexibility on the app [1620] end just in case. So now it's going and [1623] it's sending the [1624] proposal and it's sending the web hook [1626] response. Proposal generated [1628] successfully it says very cool. Now if [1630] you go to dashboard notice that there's [1631] a little one next to it. Give it a [1632] click. Oo look at that. All good to go. [1636] This I guess is the action send [1637] proposal. This is to the lead. This is [1639] the company name. This is when it was [1640] generated. Hell, this is an email [1642] preview that it hallucinated, which is [1644] obviously not what we want. But if I [1645] click this button, I can actually view [1647] the proposal. Oh, weird how I can't [1648] actually view the proposal. H, we should [1650] probably update that view proposal [1652] button to have a link to the uh live [1654] proposal. Huh. So, that's what I'm going [1656] to do next. Excellent. Now, update the [1660] view proposal button on the [1662] generated ones to include a link [1665] directly to the proposal URL that was [1667] returned by the web hook pull. [1671] Excellent. Uh, and then let me just see [1673] is there anything else that we want [1674] changed here? Any other [1676] aspect? [1678] H, then I'll just say also change the [1682] styles, change the colors of the [1686] site so that they're a little bit green. [1690] Just a [1691] tinge. And let's do um what's British [1694] racing green? Is that what it's called? [1696] That really dark one. Oh, I love British [1697] racing green. [1701] Cool. Let's see how it works with [1706] this. So, now it's actually going [1707] through the proposal dashboard and it's [1710] basically taking the pre-existing one [1712] and then it's just making some minor [1713] updates to it. So, in order to do this, [1715] unfortunately, I have to rewrite the [1716] whole thing, which is kind of annoying [1717] from their perspective, but doesn't [1718] really do much to our perspective except [1720] for just take a little bit more time to [1721] do the generating. Now, it's just going [1723] to make this all slightly greener, I [1726] hope. We'll give it a We'll give it a [1729] look. There's that new racing green [1732] color. Got the new colors. It's actually [1734] just adding this to the styles across [1736] the whole website. So, you know, maybe [1739] you feed this in as a call to the [1742] service. And then you say, "Hey, could [1743] you um you know, make sure it adheres to [1746] the brand guidelines." Okay. And this [1748] looks really, really clean. Now, I don't [1750] like how this is the title is also [1751] British Racing Green, but we could just [1753] have it change that to white. But this [1755] looks way cleaner. Oh, and look, there's [1756] even a little bit of blur in the [1757] background up at the top. So nice. All [1760] right, let's test this out again. And [1762] let me actually just open up a whole new [1764] um link [1766] here. Very nice. Very nice. We have a [1769] dashboard link right over here. If I [1772] click this view proposal button, I think [1773] nothing's coming up specifically because [1775] I haven't actually done this. Oh, but [1776] looks like they even added an additional [1778] feature here where you can see all of [1779] the proposal details at a glance. Very [1781] cool. So, I'm going to submit another [1783] proposal right now. We're going to see [1784] if it populates this dashboard again and [1786] then adds um a two to it. We'll say send [1789] proposal 1 second copy is a content [1792] writing company that [1795] specializes in journalistic style high [1798] quality pieces. Very cool. And then uh [1802] looks like I've lost the problem. Well, [1804] I want this to be good. So, why don't I [1806] go post discovery call form, not Post [1810] Malone. Then copy over these fields once [1814] more. Uh, no, I don't need that. I can [1817] get that [1818] though. And I can get [1821] that. And then we'll do make Apollo app [1824] 2 weeks and then 500 and then 50. Cool. [1827] Let's run this now. Make sure that this [1829] is good to go. Let me just change this [1830] so that instead of being GPT4.5, it just [1833] takes a lot longer. We'll just do GPT40. [1835] Um, that way any future tests that I may [1837] have to do are just going to be [1838] substantially faster. [1842] I think it'll be smart enough that it'll [1843] still be able to do a reasonable job. [1845] Although to be fair, you know, if you [1846] are generating something that is that [1848] close to money, because that is pretty [1850] close to money, generally like you want [1852] it to be as high quality as possible. So [1853] if it cost you like 5 cents to generate [1854] a proposal, who really cares? That 5 [1856] cents is for a $1,000 project. [1858] Realistically, that'll improve the [1859] probability of you closing by 2%. It's [1861] worth it, right? Anyway, for demo [1864] purposes, finished a little bit faster. [1866] Now we're going through. We're sending [1867] the proposal, sending the email, and [1869] then the web [1870] hook. Let's just see what it looks like [1872] on our end. Proposal generated [1874] successfully. Cool. If I go back to [1875] dashboard, we have two. Look at that. [1877] Oh, very cool. Very cool. It's right [1879] over here. Now, I'm still not seeing a [1881] button with the actual proposal URL, [1886] which is uh unfortunate. I'm not really [1888] sure what's going on with that. So, [1890] we're going to have to find a way to fix [1892] this. H. Let's have it do Oh, looks like [1896] it's saying build unsuccessful. Let's [1897] have it do two more [1899] changes. Two more changes. I'll say one, [1902] change the text of the logo. Text next [1905] to the logo. One second copy so that [1909] it's pure white. And then two, the Let [1913] me see what's going on with this view [1917] button. [1922] H [1924] change the view button link so that it [1927] links directly to the generated [1930] proposal. This is kind of making me [1931] think is this getting the proposal right [1933] now? H maybe it's not getting the [1935] proposal. Maybe that's why this isn't [1936] doing uh populating the way that I want [1938] it [1939] to. Well, we are sending back all this [1942] data. So, probably [1945] is. Let me just quadruple check here. [1948] sent back this data, [1957] right? Let's go back [1960] here. Right now, it's not linking [1963] anything. Also, just remove [1966] um email [1968] content content as I'm not sending that [1971] back. Here is the updated web hook [1975] response. [1981] These are all real values, but just [1984] treat [1989] it. So you can use it to template out [1992] the view button link on the dashboard. [1997] Okay, Lovable built us out a beautiful [2000] looking form that we fill out that [2002] generates a high-quality proposal. When [2004] I click generate proposal, I end up with [2006] this little modal in the bottom lefthand [2007] corner. And then if I go back to my [2009] scenario, it's AI generating the the [2010] bits and pieces sending an email. And [2012] then finally, it'll generate the web [2014] hook response as well. After proposal is [2016] generated successfully, if I go back up [2018] to the top here, you'll see this [2019] dashboard is now populated with a one. [2021] If I give that a click, you can see that [2022] this actually now provides a bunch of [2024] context about the proposal. I can go to [2025] details, scroll um up and down, and you [2028] know, just see various pieces of this. [2030] And then if I click view proposal, it'll [2032] actually take me directly to the Panda [2034] dooc proposal that we generated, which [2035] in this case is a pretty high quality [2037] asset. Um, it's something again that [2038] I've sold for up to about $100,000 or [2041] so, a little bit less than that. [2042] Hopefully you guys appreciated the [2043] video. Had a lot of fun putting that [2044] together. As you see, this is [2046] essentially a free win. I mean, we just [2048] dragged and dropped a couple of nodes [2050] from a pre-existing flow into a new one. [2052] And then we just asked Lovable what we [2054] wanted to do in plain language. We went [2056] back and forth five or six times, and [2058] eventually we got a finished app. I [2059] think you guys could probably see what I [2060] mean when I refer to this as like a free [2062] win. It's a free and easy way to [2064] massively improve the amount of money [2065] that you are charging for a product [2066] because you're also improving the [2067] perceived value. Like obviously we could [2069] have strung the same system together [2071] with three or four different platforms, [2072] right? Could had type form on the front [2074] end for instance and maybe some other [2075] thing on the back end. But hopefully I [2077] think you guys are understanding what I [2079] mean by when you package it into this [2080] nice [2082] onesizefits-all page and you add a [2084] custom domain that it's like proposal [2085] generator.11copy.com [2088] uh customers particularly the less [2090] technologically oriented customers will [2091] usually see this as being a lot higher [2093] value and a lot higher quality and then [2094] this also just eliminates some of the [2096] headache for them like I usually have my [2097] customers pay for the software platforms [2098] customer doesn't need to pay for any [2100] software platform here it's me just [2101] doing it all through lovable and then we [2102] host it on their website through a link [2104] right super easy super quick and super [2106] simple if you guys like this sort of [2107] stuff. You guys like seeing me employ [2108] new product generation mechanisms to [2111] pre-existing AI automations, definitely [2112] check out Maker School where I talk a [2114] lot more about this and a bunch of other [2115] approaches in detail. This is the [2117] simplest and straight assigned road map [2118] to go from 0 to one and get your very [2120] first paying AI automation customer. We [2122] guarantee that you will do so within 90 [2124] days your money back. So, there's really [2126] no risk as long as you're willing to put [2127] the work in and be accountable to [2128] yourself and others. If you guys already [2130] have a pre-existing business, you guys [2131] want to scale it up further, check out [2132] makemoneywithmake.com. It's kind of like [2134] my mid-t community where I'm personally [2136] active every single day. And then I also [2138] do a weekly office hour where you can [2139] come to me with any questions, concerns, [2141] problems, or anything that you really [2142] need. All right, I know that was quite [2143] the mouthful, so I'll leave you there. [2145] Please like, subscribe, all that fun [2146] YouTube stuff. I'll catch you on the [2147] next video, and thank you very much for [2149] watching. Justice.
