e'll see that we now received the [662] um file if we scroll down here the name [664] of this file is lead list so just [666] confirming that you know we have what we [668] want if we wanted to confirm further we [670] could copy the web view link here open a [673] new tab and paste it in and then you'll [674] see we go right back to that same lead [676] list that we had before so that's great [679] but the question is um now that we have [681] you know the the file that has been [682] found essentially now that we've watched [684] it and we've received a link um what do [687] we do with this information well now we [689] basically want to for every Row in this [691] lead list of 2,500 leads without email [694] addresses we want to take every row and [696] then we want to basically enrich it we [698] want to send it over to our uh email [700] enrichment service right so what I'm [702] going to do is I'm going to jump back [703] over to make and then in Google Sheets [706] there is a module called search a [709] sheet or search rows I should say and [712] search rows like you can use this to [714] search obviously and then you can put [716] your own filters and parameters and [718] queries in the search um field you can [720] also just use this to list everything [722] like if you don't include any of that [723] information it'll just list every single [724] Row in your sheet and so this is just a [726] very quick hack to iterate over [727] everything so in order to do this I'm [730] I'm just going to test this I'm going to [731] go watch files in a folder I'm going to [732] go back to my other Google um Drive run [735] and then I'm going to scroll down to [736] find the file ID of this big Google [739] sheet and then this way I can just [741] hardcode the sheet in uh so I'm not [744] actually going to go through this whole [745] selection thing just because that takes [746] a few extra seconds and may can be a [747] little bit laggy sometimes and then I'm [748] just going to hardcode all the info so [750] the spreadsheet that I'm looking for is [752] the lead list which has an ID of what I [754] just pasted in the sheet name is just [756] going to be sheet one if you go to [758] Google Sheets um this down here is [760] technically the sheet name so I'm just [762] going to paste that in there a table [764] does contain headers headers are just [765] the very first row here like profile URL [767] full name first name all that stuff uh [770] column range I just leave it as default [771] filter I'm not going to do any and then [773] um down here is what I was mentioning [775] maximum number of returned rows we're [777] just going to set that to one to only [778] select the first row [780] um just as a sort of example and then [782] we're not going to run this again [783] entirely we're just going to run the [784] module that we're interested in which is [786] this Google sheet search row module um [788] just to double check that you know if we [790] fed it that input as the file ID that it [792] could go through and then it could [793] retrieve the information that we want [796] and it did so we have the profile URL of [799] this presumably handsome fell called [801] Jamie [801] Burke um and you know we get the summary [804] we get the title description we get all [805] the information that we're probably [806] going to need in order to do the email [807] enrichment which is pretty nice [809] you notice back here I selected maximum [811] number of return rows and I set that to [812] one um I just did that because I you [815] know didn't want to run it like 5 [816] million times but hypothetically let's [818] say I set it to [821] five oh sorry I think I ran the entire [823] scenario let's just run this so if I set [826] that to five what you'll see is um we're [828] actually going to retrieve five [829] different bundles and so basically what [832] we've done is if I go back to this [833] Google sheet we just gone through the [834] first five entries here so from 2 to six [838] and bundle one is Jamie bundle two is a [839] fellow Christopher bundle three is [841] Anthony so on and so on and so forth uh [843] the reason why that's important is [845] because every time you generate a new [846] bundle in make you basically have like a [848] built-in iterator and so any branch that [851] I create after this module will just run [854] every time a new per bundle and so you [857] can use the variables in every [858] individual bundle like the first name of [860] the person from Jamie to Anthony to [861] Christopher whatever um you can use [863] their you know their company name or [865] whatever in in the rest of your flow and [866] you can just do it without having to [867] muck around with iterators and all that [869] stuff so pretty straightforward we have [871] a a variety of bundles down here and you [874] can imagine how when we run this kind of [876] fully uh we have 2,500 bundles um I [880] should put a slap a giant warning label [882] on here this sort of flow probably not [883] super Ops friendly uh you'll probably [885] have to spend I don't know every time [887] you run it you'll probably have to spend [889] uh a few operations uh maybe like five [892] or $10 worth um but if you consider the [895] the relative upside for a company that's [896] you know emailing 2,500 new people a day [899] it obviously pans out right I mean this [901] is a high ticket sale sort of service [903] where uh you know you can make anywhere [905] from $5 to $30,000 in a closed deal and [907] with a reply rate of 20 20ish percent [909] which is what I'd imagine for this [911] campaign the numbers just start to be [912] absolutely ridiculous so you know the [914] total cost of running these Ops is [916] probably like [920] 0.01% of the infrastructure cost on the [922] on the marketing side of things [924] virtually zero um but anyway so yeah we [927] have the Google Sheets now let me just [928] jump back to this um click up here and [930] see what else I [931] wrote yeah so I just wrote watch Google [933] drive folder module and then send an [935] email verification or validation to them [936] awesome so that's our next step uh what [938] we have to do is uh depending on the [941] email validation or enrichment platform [943] that you're using I'm going to be using [945] one called any mail finder which uh is a [947] free trial I believe for three or four [949] days or something um but I'm just using [951] it because the client is using it and [952] it's also very easy to use um sort of [954] under the hood with the API but you can [956] imagine how um I'm building this system [959] very modularly so any enrichment [961] platform that you use that has an API [963] that will allow you to enrich people via [965] API you can just hot swap in here I'm [967] not married to any individual [969] platform so I mean I built a very [971] similar system before um probably like [974] 15 or 20 times now so you know that's [977] why I'm confident enough that most [978] platforms will work um but you know if [981] you don't believe me just try and try [982] and figure out your own platform you [983] know instead of um any mail finder try [985] using drop contact or something else and [987] you'll see what I mean okay so because [989] I'm going to be interacting with their [990] API and they don't have a built-in um [992] module at least I don't think so yeah [994] they don't have a built-in module here [996] uh we're going to have to interact via [997] their API so I'm using the HTTP make a [999] request module then I'm going to any [1001] mail Finder right over here which is the [1002] service that we're going to be using to [1003] find verified emails then I'm going to [1005] click on the [1007] API so I'm then going to read the [1010] documentation and the really interesting [1013] thing about a lot of apis is like [1015] they're written by very technical people [1016] and God bless technical people uh but [1018] now 99% of it is just BS and you don't [1020] really need to know anything about it so [1022] I'm going to give you a little hack next [1023] time you use an API or looking for some [1025] API documentation solution uh the only [1028] two things that you really need are one [1029] you need authentication so you need to [1031] figure out how you authenticate with the [1032] API and then two uh you need to figure [1035] out you know the specific endpoint that [1036] you're interested in which in my case I [1038] already know is just going to be [1039] whatever enriches an email right apis [1042] usually have like a bunch of endpoints [1043] and not all of them are super relevant [1045] some of them are just status checks for [1046] instance I don't really care about the [1047] status check I'm just going to asse that [1049] it's up a lot um but yeah so you know [1052] first and foremost the major thing that [1053] I'm looking for is just the [1055] authentication so I'm just going to type [1057] off and then voila you see it's like one [1059] of the first things that we talk about [1060] which is quite nice [1062] um and then it says all requests except [1065] the get status endpoint require [1067] authentication to authenticate you need [1068] to set an authorization header with the [1069] API key you can find in your settings as [1072] value I think it's a spelling mistake [1073] but I'm just going to open up the [1075] settings thing in a new [1077] tab I'll go back here and you can see [1080] that um you know I signed up for a trial [1083] I think yesterday so I have my API key [1085] here so I'm just going to copy that API [1087] key because I'm imagin I'm going to need [1088] it later and then it says for example if [1091] your API key is secretor k123 you will [1093] want to add an authorization header with [1095] value Bearer secretor key1 123 okay so [1099] this is sort of a Nuance um in API [1102] Integrations but um this is um [1104] authorizing using like an authorization [1106] Bearer scheme I believe that's what it's [1108] called anyway uh and all that means is [1109] if you go back to this scenario over [1112] here first things first we're just going [1114] to leave this URL empty and then I don't [1116] know why this is so ugly here there we [1119] go I'm just going to going to go to [1120] header and then for the name you're just [1122] always going to write authorization and [1124] the value is always going to be bear [1125] plus the API key so in my case I'm just [1127] going to hard code this API key which [1129] came directly from my service um [1131] immediately after this video I'm going [1132] to rotate it so if we have any young [1134] enterprising individuals that want to [1135] try and run me a big credit card bill uh [1137] you're out of luck but you should [1139] not be exposing your API key um you know [1142] unless you're doing like a tutorial like [1143] this and you're confident that's not a [1144] big deal so just keep that in mind but [1147] anyway so yeah that's basically how we [1149] authorize um and authenticate which is [1151] very [1152] straightforward so we got the [1154] authorization header down probably 70% [1156] of apis will use this uh format some [1158] apis will do it differently but yeah [1160] authorization bear scheme is uh is very [1163] straightforward so that's the first kind [1165] of requirement that we fulfilled which [1166] is obviously getting authenticated um I [1168] still haven't tested that which I'll [1169] show you in a second but the second [1171] thing is we obviously just need to find [1172] whatever API endpoint that we care about [1174] which in our case is getting a verified [1176] email and so in this case it's pretty [1178] simple and straightforward basically [1180] every row on this um table of contents [1182] is just another endpoint and so the one [1184] that we obviously want to search for an [1186] email we just want one [1188] email and then what I really like about [1190] this um API documentation actually and I [1193] really usually do not like API [1195] documentations uh because a lot of them [1196] are really shitty pardon my French but [1199] it'll tell you the method which in our [1201] case is post it'll then give you the [1202] whole URL and then it'll also give you [1204] an example of a of a query which is [1206] great so um this says post post is just [1209] a method that we can use to call the API [1212] and you need to use the method that they [1214] specify it's just sort of like um [1217] programming um not nomenclature but it [1220] just has to do with database uh querying [1223] and sort of the ways that the ways that [1224] older databases are set up so we're [1226] doing a post request essentially to this [1228] URL here so I'm just going to copy this [1231] URL and then I'm just going to scroll [1233] down here um a little hack like 99% of [1236] the time you're just going to want to [1237] choose body type raw content type [1239] application Json and then for the [1240] request content this is where you paste [1242] in whatever the format is of the uh [1244] basically like the JavaScript object [1246] that you're um that you're using so when [1248] I paste this in I get this domain hyo. [1252] full name Joe dilia I guess that's their [1255] example so what I'm going to do just for [1256] the purposes of this demonstration is [1258] I'm going to pipe in my own domain I'll [1260] pipe in my own name and then under parse [1262] response will click yes and what I'm [1264] going to do here is I'm just going to [1265] run this as a test for my authentication [1267] and then I'm also going to test the API [1268] endpoint so we just got a 200 status [1272] code back which is great we're going to [1274] go to [1274] data success is said to true that's nice [1277] so they have a success variable that we [1279] can very quickly and easily use to check [1280] the [1282] results it looks like there's an input [1285] um collection so that just shows us what [1288] we supp applied which is also honestly [1289] extremely useful uh this API is [1292] fantastic and then results we have an [1295] email Nick left click. that is actually [1297] my email fantastic and then Alternatives [1299] empty um so that's fantastic um we [1302] basically just put in all we did is we [1304] put in my name Nick rrive and then we [1305] put in the domain that I work at left [1307] click. a and then I got my email address [1309] right what are the odds of that [1311] incredible um with great power comes [1314] great responsibility uh you can't get [1316] everybody's email like this I will say [1317] but you can get a lot lot of people's [1319] emails like this because most people's [1321] emails follow a format like first name [1323] at domain or first name do last first [1327] letter of last name dot whatever uh at [1331] website right so they sort of like just [1334] permute um these and they just sort of [1335] like try various iterations of this [1338] until one works I think they just do [1339] some type of like um they ping the mail [1341] server to verify that that email is [1344] alive or whatnot but anyway that's great [1346] so uh what do we have to do now have you [1348] think think about it logically [1350] we well actually let me just double [1352] check do we even have the domain we may [1354] not actually have the [1356] domain yeah I think I tried doing this a [1358] while ago and because we didn't have the [1361] domain uh we couldn't do it that [1368] simply um yeah so no [1370] domain no domain I believe but that's [1373] okay I think this API endpoint will also [1375] allow us to do this through company name [1377] right [1380] yes okay great so we don't actually need [1381] the domain we can also just use the [1383] company name I imagine the company name [1384] is probably a little less [1386] likely [1388] um to get [1392] verified but uh yeah I think you know [1396] I've run tests on this before and I [1397] think the company name is like like [1399] success rate like 55 60% domain name is [1402] like 7% so you are going to lose 10 or [1404] 15% let's see yeah we couldn't find any [1407] emails to this domain that's fortunate [1409] uh wait a second domain I put in company [1412] name didn't I yeah I did weird um but [1415] that's okay you know there are tons of [1417] situations in which you will just give a [1418] company name and then it will work I [1419] mean if I send um anybody else in this [1422] list like this fell over [1426] here and then I slap his company name in [1429] there [1437] oops keep my myself a 30% chance that [1439] this [1441] works yeah okay so success for that was [1443] true I'm not going to show the email [1445] just because it's not my own but um yeah [1447] yeah so it looks like company name Works [1448] reasonably well um and when I tried this [1450] with drop contact it was about a 60% [1452] validation right so you can imagine you [1453] feed 2,500 emails in um you're

Video: https://www.youtube.com/watch?v=3Kp8AoPcTT0
Title: How to Automate Contractor Payments in Make.com
[0] what's going on everybody Nick here and [1] in this video I'm going to show you how [2] to automate staff payments using [5] make.com the automations I'm about to [7] show you are extremely simple they can [9] save you anywhere from 5 hours on the [11] lowend to maybe 20 to 25 hours per month [13] on the highend particularly for agencies [16] that have to do a lot of payment queuing [18] contractors invoice juggling that sort [20] of thing and you can also employ it in [22] your own business as well as sell it to [24] people I sell systems like this from [26] anywhere from $2,000 in the low end up [28] to maybe $5,000 in high end so a lot of [31] leeway here we'll cover the theory and [32] we'll also build out out live in [34] make.com if that sounds like some you're [36] interested in stay tuned let's get into [38] the [41] video okay so what I have here is a [43] Whimsical and this is basically just a [45] mind map showing you several of the most [47] common ways that uh people in a company [49] can be paid this isn't every single way [52] there are some commission percentage [53] based type Arrangements that I'm not [55] covering in this video just cuz I think [56] that's pretty conceptually simple once [58] you cover the rest of this uh but [59] generally speaking there are three ways [61] that people are paid and there's also a [63] slightly different approach to you know [66] invoices and stuff like that that I'm [67] going to cover as well uh but any who [69] let's dive into it under staff payments [71] here we have three project or categories [75] or types we have hourly rates then we [78] have Project based rates and then we [79] have flat or salary equivalent rates [83] hourly rates are pretty simple $25 an [85] hour you're getting paid an hourly rate [87] project base is usually used in [90] like freelancer type Arrangements where [93] you know every time somebody does like [94] an article for you or maybe a website [96] design you just pay them a flat rate of [98] th000 or $2,000 it's usually quite inter [101] agency as well so if you're ever working [102] like inter agency AK with another agency [104] to do some service that you know one of [106] your clients might need for you usually [107] paying them a project basis uh and then [110] you have flat or salary equivalent which [111] is basically just like you know every [113] two weeks you get paid $2,000 or every [115] month you get paid like $66,000 or [117] something like that so I think we're all [119] probably familiar with these three [120] different types of payments we've either [123] you know gotten paid with one of them [125] ourselves like hourly rates are very [126] common in just traditional 9o5 [128] Employments so are flat salary [130] equivalents or if you guys have ever [131] freelanced or done contract work you're [133] probably familiar with Project based but [135] let's peel back the curtain and let's [136] talk a little bit about okay you know we [138] know what these are how exactly would [140] you go about automating a system that [141] does this and [144] so um you [146] know I should probably touch on this [148] like if you're if you're an employee and [150] you're if you're playing some if you're [151] paying somebody like a typical 9 to5 [153] there are certain legal obligations that [154] go with that and you're for the most [157] part better off using like a built-in [160] payroll system or some type of like [163] government interfacing system there are [165] thousands if you're in the US probably a [167] couple of dozen if you're in Canada and [170] Western Europe and I think there are a [171] few for you know Eastern Europe and Asia [173] as well I'm not entirely familiar with [175] those though so I'm going to leave that [176] up to you to find however if you are [179] dealing with people that aren't [180] employees which most of the agency world [183] is moving towards simply because it's a [184] lot more convenient you don't have to [185] deal with things like [187] termination um you know the contractor [190] or the person that's doing the [191] freelancing typically has more like work [193] autonomy as well uh so if you're if [195] you're going forward with that model [196] then this is really where this comes in [198] this is where you can automate like all [199] their invoices this is where you can [200] automate you know all of their their [202] payments that are being queued and that [203] sort of thing so I mention that because [206] usually when you're working with [206] contractors or people on freelance or [209] anything like that um the typical [211] process is the freelancer the person on [213] contract or or whatever will create an [216] invoice for you and then have you verify [219] that the invoice is correct and then pay [222] them using that invoice and you can [224] either just generate a PDF invoice and [225] then get paid through like bank transfer [227] or something or you can you know send [229] them an invoice via stripe and then have [230] your client pay or that sort of thing [232] the issue with that though is it's very [234] non-standard if you let you know 20 [237] different people uh invoice you in 20 [239] different ways then how the heck are you [240] supposed to build any type of process [242] around that it's impossible and so a [244] much better and more effective way to [246] deal with you know the vast majority of [249] agency payments which are going to be [250] contractors they're going to be [252] Freelancers and that sort of thing is [254] standardize their invoices using your [256] own invoice template generate that [259] invoice with line items depending on [261] whether they're hourly Project based or [262] flat salary equivalant send it over to [265] them and then have them say yeah that [268] looks good maybe they sign off on it or [270] something like that and then trigger [273] that action or use that action as a [275] trigger to initiate the rest of an [278] automation flow that either goes out and [280] then cues up a payment and sends them [282] money or you know maybe generates some [285] list for your CFO to review to click a [287] button or something of that nature [289] essentially what we're doing is we're [291] taking this like very variable sort of [294] thing which is like contractor invoices [296] and then we are turning it or adding it [298] into like a streamlined end end pip line [300] um you know that we can we can integrate [303] with our own systems and so that's more [305] or less what what all of these three [307] steps or three um payment categories are [311] are centered around so for hourly rate [313] for instance you can imagine how any [315] system that would automate the payments [317] of a contractor a staff member that is [319] paid hourly would have to one tabulate [322] the number of hours that they've worked [324] in whatever time period two multiply by [327] some hourly rate and then three [329] preparing invoice with potentially even [331] line items broken down for different [333] tasks multiplied by the hourly rate to [335] equal the total and then send that over [337] to them have them sign off and say yeah [339] that looks good and then use that to [341] trigger the rest of the flow so that's [343] what the hourly rate flow looks like the [344] Project based rate pretty similar you're [346] going to instead of tabulating the [348] number of hours you're going to tabulate [349] the number of projects or maybe you have [351] a custom field in your project [352] management platform or something like [353] that which allows you to track the [355] budget for every individual line item [357] what you're going to do is you know [358] every so often what whatever their [359] payment period is you're going to run [361] this automated system it's going to [362] tabulate those projects then it's going [364] to you know figure out whatever amount [366] of money that they're owed add that up [367] as a subtotal and then again we're going [369] to prepare an invoice and have them sign [371] off the last fat flat or salary [373] equivalent it's probably the simplest [375] because all we need to do is just like [376] figure out how much money they're [377] getting paid every time period and then [379] just generate an invoice for them [381] basically every time period have them [383] sign off so these are three different [385] ways of going about the same process I'd [387] say which is essentially just [388] standardizing [390] um kind of kind of like what a payub is [392] it's just we're obviously trying to [394] skirt the definition of payub because uh [397] you know in like today's remote world [398] you have people from all different [399] countries working at the average [401] business you know this sort of [402] standardization is just necessary if you [404] want to be able to scale this up and [406] essentially instead of you having to [408] look over 10 or 15 different invoices [409] every payment period I imagine if you're [411] like a maybe low seven figure agency or [414] something um you just uh you know you [416] just click one button everything just [418] happens automatically for going to get [419] sent out and I'll show you exactly how [421] to build this so yeah that's the theory [423] that's sort of the motivation behind [425] this and it's something that I'm [426] personally using my used in my agency [429] one second copy it's uh systems that [431] I've sold to a variety of companies that [434] you know just juggle so many payments [436] every single month and I find that the [438] accuracy goes up the reliability goes up [440] generally speaking is just a much better [441] way to operate now how do you actually [443] go and build something out like this in [445] practice well uh you need a project [447] management or a customer relationship [448] management platform form I'm going to be [450] using clickup simply because I'm the [451] most familiar with it and you know I [453] think that everything that you're going [454] to do in clickup you can do easily on [456] any other project management or CRM [458] platform out there so it's just simpler [460] for me to do that and then I'm going to [462] go and I'm going to build out a flow [463] that tabulates the hours multiplies by [465] the hourly rate prepares the invoice and [467] has them sign off I'll do the same thing [468] for project base and I'll also do the [469] same thing for flat and then you know [471] depending on whatever your your bank is [473] if you guys are using like one of these [475] more modern Neo Banks you can even do an [477] API call and then queue up a queue up a [479] pay so pretty neat okay so let me jump [484] into make.com here and let's build this [487] out I think I was just building this [490] yeah yesterday but I'll delete all this [492] and we can kind of start from scratch [494] and then I'm going to need a couple of [496] these uh because this is for hourly rate [498] we're going to do another one for [502] project base and then a last one for um [506] flat so we're going to say Project based [509] and then this last one is going to [512] be flat [515] salary you can see here I said [517] contractor payroll but it's not just for [519] contractors it's just for anything that [521] any working arrangement that is not um [523] an employee is what I'd recommend you [526] can't obviously use this to pay your [527] employees you just need to make sure [528] that your paperwork is done and and that [529] sort of thing because you know in most [531] places around the world like being an [533] employee just means that you are [534] afforded certain rights and also have [537] certain responsibilities that like a [538] contractor a on employee doesn't have um [541] so just make sure that you cover it I [542] don't know where anybody that's watching [543] this video lives unfortunately so it's [545] very difficult to say anything with more [547] Precision okay so those are my three [549] scenarios I'm also going to build out a [550] couple of spaces or lists here in [553] clickup um clickup as I mentioned [555] earlier is interchangeable for basically [556] any project management or customer [558] relationship management system um they [560] all operate similarly at least on like a [562] conceptual level at this point [563] essentially click up is broken down into [565] spaces and every space is broken down [566] into a bunch of lists and lists are sort [569] of like glorified Google Sheets so you [571] can see that I've built out a list here [572] called the example payroll list and [574] there are a few tasks that have been [576] created here one called website [577] development another called strategy [579] they've both been assigned to Yours [580] Truly and then uh there are two columns [583] here that we're going to use to pull [584] data for our flow one's called time [586] tracked and then the other is called [587] internal budget so time tracked pretty [590] self-explanatory that's how much time it [591] took for me to let's say do a task I [594] guess these are technically Todo but you [595] know again interchangeable between your [597] project management systems and then [599] internal budget is going to be how much [600] money the company is paying me for that [602] task so the internal budget of this task [604] is $500 for instance that just means [606] whoever is the assign will make [608] $500 in order for the systems to work we [610] also need a staff tracker staff tracker [612] just means a place that we can reference [615] that includes like the name of the [616] person that we're paying the asse maybe [619] we'll do an email [621] column yeah that that should be [624] enough unless you misspell email oops [627] like me [689] and then going to get their time tracked [690] as a result so I'm going to go down to [694] select workspace is 1 second copy this [697] is just my [699] um example workspace that I use well [703] example space I should say called test [706] build I'm then going to enumerate [709] example payroll list and then uh you can [711] see it tells me how many tasks I have [713] and then assign the IDS I'm just going [714] to leave it as anybody well actually no [717] I shouldn't leave it as anybody [720] okay see I already made a mistake here [722] what we need to do is we we don't list [724] all tasks in that [725] space we should list we should list all [729] the tasks in my bad um the staff [734] list yeah yeah so what we're going to do [736] is basically once a month or something [737] we're going to trigger this flow [739] whenever our payment period is let's say [741] it's like on the first day of the month [742] I mean it's the first day of the month [743] right now so that's pretty convenient so [744] the first day of the month we're going [746] to trigger a flow and the flow is going [748] to go back and then add up the time [749] entries from the previous month and then [751] it's going to multiply those time [753] entries by the hourly rate it's going to [754] get a a total and then we can use that [756] total to generate some type of document [758] or invoice or whatnot so uh yeah we got [761] our staff track right here I'm not going [763] to filter by assigning IDs I'm just [765] going to list um [766] everybody I am then for the purpose of [769] this I'm just going to do the limit as [771] one but you can imagine how if you were [772] running this in practice it would be a [774] lot more than one you know you have a [775] whole team that you're doing and then [777] I'm just going to run this on the first [779] St day of the [780] month and let's just say we run it at [782] like 000000 a.m. well I guess that'd be [785] 12 a.m. [788] right so that looks good to me okay [792] great and then I'm just going to run [793] this and see what sort of data that we [794] get so remember this is our staff [796] tracker uh we just went over the list [798] that says Nick arrive with my hourly [800] rate and that sort of stuff so if I [802] scroll down here and I go to custom [803] Fields you'll see I got the hourly rate [805] I got the email address and I got the [806] monthly salary I mean like at this point [809] you're basically done the monthly salary [810] step you would just tie this to [812] something that creates a Google doc [813] which I can show you in a second maybe [815] fills it in with some invoice info um [818] but any who uh yeah we're done the first [820] step for hourly tracker now that we're [822] done with that depending on whether [823] you're using a platform with a built-in [826] time tracker like clickup or Monday or [827] maybe you're doing an off platform you [829] might have to um query the specific time [832] tracker but you know if you just go to [834] click on and type time you can see that [835] you can list all the time entries within [837] a certain date range which is obviously [838] super useful for [842] us okay I'll go to [844] workspace and now I'm going to select [846] the assign by going to map and then I'm [849] going to feed in the assign ID so if I [851] go to assignes you'll see that uh the [854] person that's been assigned is Nick [855] saraf me myself and I we're then going [859] to add their ID under the assignes field [862] excuse me and then we're going to map [864] that because this is like a dynamic [866] variable that may change we can't just [867] statically select the same person over [869] over and over and over again right we [870] have to we have to find a way to modify [871] that um depending on what the previous [873] variable is so that's what this this map [875] toggle [876] does now for now I'm just going to set [879] this limit really high maybe it'll be [881] 200 and then I'm just going to run it to [882] test what sort of output we get then let [885] me just run this whole flow got the [887] assign e ID now we're getting the time [888] entries and let's just take a look at [890] what this is so we see that multiple [893] bundles are returned so more than one uh [895] basically every time a time entry [898] happens then we list them it's going to [900] be generating a bundle and the reason [902] why that's relevant for us is because [903] every time that there's a new bundle [904] generated uh that just triggers a whole [906] new scenario flow from that point [908] onwards so we're going to need to [909] probably aggregate it in some way and we [911] can talk about how to do that [913] afterwards we then have a duration field [916] which looks like it's in milliseconds [918] which is great for us because that's [919] probably the simplest way that we can go [920] about um uh tracking time because all we [924] need to do is divide this by a th then [926] 60 then 60 then yeah and then I think we [930] have hours and then we can just multiply [931] that by some hourly rate so what's 60 * [935] 60 * 24 is that 8,000 yeah [938] 86,400 then I think we need to do one [940] more of these so I'm just going to then [944] set multiple variables well actually I [946] think I just going to set one variable [947] here but we'll use to set multiple [949] variables module we'll say [952] ours uh and then what I'm going to do is [955] I'm going to [956] divide this duration oh actually we have [959] a duration in Min what am I doing that's [962] really convenient so we don't need to [963] divide it by [964] 86400 we just need to divide it by [969] 60 and then uh we should be able to get [972] hourly rate as well I'm just going to [973] store this here it'll probably be a lot [976] simpler for me and then yeah we should [979] have hours we should have hourly [981] rate and then I mean I could go through [983] and then I could like get the amount [985] right now but I'm just going to test [987] this out first um the reason why there's [989] a little red dot here is because I have [991] an operator at the beginning of an [993] expression so I need to feed in the [995] number of minutes there we [997] go going to save that probably going to [999] get a warning no I [1002] won't okay let's see what sort of values [1005] we got so the first I worked 3.33 3335 [1009] and I got my AR rate of 25 and then the [1011] second I got uh I worked a quarter of an [1014] hour and I got an hourly rate of 25 let [1016] me just go back in and make sure that [1018] this works Yep looks good to [1020] me um now what I can do that just [1023] because I verify that this works I can [1025] actually just get like a subtotal I can [1029] take these two [1031] values and then I [1035] can uh multiply them [1039] together and this will be my subtotal [1041] I'm now going to run this it's going to [1044] list all the tasks again and then now I [1047] have $83 [1049] 33 for that first time entry second time [1052] entry I got $625 awesome so now we [1055] basically have everything we need to [1057] actually go out and then you know [1058] generate an invoice or whatever for our [1060] uh for our contractors to sign so there [1063] are multiple different approaches you [1064] could use for this I personally just use [1065] pandadoc and then I like create an [1067] invoice template and then I just um [1069] automatically generate a a list using a [1071] text aggregator um I think we could [1074] probably do that this [1076] time but you know you can also just use [1078] Google [1080] docs maybe I'll just use Google Docs for [1082] the purposes list that might be a little [1083] bit [1084] easier [1086] um we'll go [1089] date I'll [1091] say name I'll say email [1096] address then I'll say um let's just say [1100] like left [1101] click we'll say [1103] to and we'll say [1105] [Music] [1107] from I'm just going to say example [1110] address so I don't start getting mail to [1112] my [1112] house you guys have been awesome but [1115] every now and then there's somebody that [1116] like send something relatively [1118] creepy [1120] um yeah U you know I'm just going to [1122] leave that at that and then we'll say [1124] like work [1125] performed and then I'm going to just [1128] tabulate over it I'm not going to make [1129] it special but I'll just say um [1132] aggregated line [1134] items and then I'll say [1137] subtotal [1142] and then we'll put it underneath here as [1146] well and then we'll say total actually I [1150] should do proper grammar [1154] here we'll have a total [1157] underneath [1159] um I don't think we're going to yeah we [1161] don't we're not going to like do any [1163] taxes or anything like that so we're [1164] just going to say actually we're just [1166] going to do the subtotal as the total [1171] and then anything else we got to do we [1173] could tie this to a signature for now [1175] but I don't think I'm going to do that [1176] this is just going to be like our very [1178] basic invoice [1181] template wonderful so now I'm going to [1183] go back here and then I'm going to go to [1187] Google [1190] Docs maybe they just call it docs I [1193] forget [1195] yeah and then uh we should be able to [1198] create a document from a template there [1200] are a couple things we're going to have [1201] to do in between these by the way I'm [1202] just um just sort of templating this out [1204] making it really simple I don't remember [1206] what email I made this with so let me [1208] okay yeah so it looks like it's that let [1210] me see if I can jump in or if I have to [1212] update my connection request again that [1215] looks like I [1220] will awesome looks good we are now [1223] connected to that email so I should be [1224] able to select this document ID which [1226] I'm going to call very basic invoice [1228] template LEL [1232] I'm going to call this [1234] invoice [1236] for let's do where's that name that we [1239] had [1240] earlier voice for whatever that name is [1243] and then we're also going to do the date [1245] today so we'll just go [1248] now and then to make the date look [1251] pretty we'll format the date and I [1254] believe we want [1257] do month [1260] month no we want month month do so like [1264] March the 3 year year year year 2024 or [1267] something like that okay great that [1269] should be fine we can then use this [1271] formatted date uh as the date the name [1274] we will just get the same name that we [1276] had before which in my case is going to [1277] be the task name email address will be [1280] the task email which we can find under [1284] custom [1285] fields and then aggregated line items [1287] and total amount we we take care of [1289] momentarily um which looks nice but for [1292] now I'm just going to say like [1294] example other [1297] example and then we'll just say like [1299] $500 or [1301] something um I just need to see how this [1303] looks before I do anything for the new [1305] invoice um location for the purposes of [1307] demonstration I'm just going to dump it [1309] into like a basic thing [1312] um if I if I run this now what's going [1315] to happen is this will run twice one for [1317] both of these flows so so I'm just going [1319] to go to list time entries and then set [1321] this limit to one [1322] hypothetically just so that I only run [1324] this puppy once because I don't really [1325] want to generate a bunch of Google docs [1327] if I don't have [1330] to okay there's a web view link so we're [1332] going to access that web view link here [1334] and then you'll see that the work okay [1337] so this this did not look like it worked [1339] very [1340] well mm just ended up being the um [1344] number of the month so 03 so I got that [1347] wrong I think it needs to be m [1349] so I might do m o and then D it said the [1353] 31st for some reason oh right because [1355] I'm in Europe and my time zones are [1356] different so uh I'm just in a different [1359] place than the time zone that my make um [1362] account is so it's saying that it's [1363] still the 31st but really it's the first [1365] that might be a problem later but we'll [1367] debug together work performed um I then [1370] have a space so I need to see if I can [1372] get rid of that then example other [1374] example then there's some subtotal or I [1376] guess total in this case so great all [1378] most of this looks really good all I [1380] need to do is just go in and then edit [1381] um a couple of these more procedural [1384] things so let's go m o see how that [1387] works uh we had an additional line here [1391] it looks like so I'm going to remove [1394] that and then I left total amount as is [1397] okay great let's run this puppy one more [1399] time make sure that it's [1400] good the reason I'm spending a little [1402] bit more time on this now by the way is [1404] because uh when I get this right then we [1406] can do the rest of the the flow is fair [1408] fairly easily because they're all [1410] similar in [1411] nature okay great two from work perform [1414] total awesome there are a couple other [1415] things that you need legally in an [1416] invoice um just a heads up so I think [1418] you need like your address in most [1420] places around the world and you might [1421] need a couple of other fields but if [1423] you're curious about what that looks [1424] like just jump on over to like invoice [1426] template um on Google and and you know [1429] type in the name of of whatever your [1430] local is or maybe where the the place [1433] that you are going to be or the place [1434] that your company is is physically [1436] registered in um is because you know if [1439] you have to add a couple of other things [1441] like your street address or you can't [1442] use a PO Box order that might be a [1444] little bit weird uh and then that way we [1445] don't have to use Panda do and I don't [1446] have to go through like another platform [1448] most people are probably familiar with [1449] Google Docs that makes sense okay great [1452] so now we have sort of have a question [1453] logically so we're listing a bunch of [1455] time entries here I'm just going to say [1456] we're listing 200 we're paying them once [1458] a month right on the first of the month [1461] um how do we go out and how do we like [1463] aggregate how how do we add up all of [1465] these time entries essentially and there [1467] are a couple different ways you could do [1468] it so see here there's like a text [1472] aggregator there's also a numeric [1474] aggregator we're actually going to use [1476] both but we can't just stick them one [1477] after the other like this because then [1479] the flow is is not well I don't know if [1480] we can stick it next to each other [1483] actually let me see let's do set [1486] multiple variables and then what I'm [1487] going to do is I'll [1489] say [1492] um let's do hours hours [1497] at125 and then we will [1500] say 83 we should probably round this as [1503] well now that I'm looking at it uh well [1505] actually I guess we can't round people's [1507] money not to the nearest integer anyway [1510] so maybe I'll just leave it at that for [1511] now um I think we may be able to do this [1514] I don't actually [1515] no let's set multiple variables no we [1517] can't we can only access the text aggor [1519] that's unfortunate okay so here's what [1520] we're going to do um what this text [1523] regulator is going to do is just going [1524] to generate a bunch of um lines of text [1527] that say you know 3.3 335 hours at $25 [1531] an hour is you know $83 for instance and [1534] then we can just add them all up I think [1535] we also might need a new line so I'm [1537] just going to add this um for now yeah [1541] it looks like there's a a row separator [1543] so maybe we use new row I'm not entirely [1545] sure if that's going to work but we can [1546] give it a try the issue with this though [1548] is anytime you use an aggregator in [1549] make.com uh you lose access to anything [1551] inside of the aggregator specifically [1553] The Source module um so I I can no [1555] longer access the source module for [1557] instance which is sort of annoying [1559] there may be um another way that I could [1561] do this but I think instead what I'm [1563] going to do is I'm just going to make a [1568] router and then let me [1572] think think I can put a router here I [1574] think I can do this yes then I'm also [1577] going to put a router here for my number [1586] aggregator and then I'm going to make [1588] make this Source module the set multiple [1590] variables aggate function is going to be [1592] sum the value that I'm summing is [1594] subtotal and then I'm going to use set [1596] and get variables in order to um pull [1601] the data um in the other route so the [1604] name of this is going to [1607] be let's just say like subtotal [1611] amount um I think I can actually just [1613] use the word subtotal and then uh what [1616] I'm going to put in there is the aggreg [1618] result the variable lifetime needs to be [1621] one cycle which is nice what I'm also [1624] going to do is then I'm going to go down [1626] here and click get and I'm just going to [1628] say get multiple variables because it's [1629] just always better to use the multiple [1631] wherever [1632] possible believe I call this sub total [1634] right so now I'm going to get the [1636] subtotal at the bottom route and then [1639] the way that these are connected is [1640] whatever route is connected first is the [1642] first route to go so because I'm pulling [1644] the get afterwards I need to connect [1646] this first I need to connect that second [1649] this looks pretty good um I believe I'm [1650] going to have access to everything I [1652] need but we'll see make.com is always [1655] sort of give and take with this stuff [1656] you know you need to test it out a [1657] little bit sometimes the functions don't [1659] work exactly how you expect it and that [1660] sort of deal for aggregated light items [1663] I'm just going to paste the text and [1664] then the total amount I'm just going to [1666] paste the subtotal um let's format the [1669] number and then for decimal points we'll [1671] use this for decimal [1674] separator uh oh I get it I can actually [1676] form it okay great let's do two decimal [1678] points let's do period as a separator [1681] this will be the Thousand separator that [1683] looks good and then while I'm at it I [1685] should probably format [1689] the [1692] um aggregator here as [1697] well to two decimal points because if I [1700] didn't that would be kind of ugly just [1703] in [1704] context okay great uh from there we [1706] should just generate one invoice [1709] and let's see how it [1710] goes fully expecting there to be some [1713] type of [1717] error that look oh hold on do we run [1720] this [1722] twice I don't think there's any reason [1724] why we needed to run this twice I think [1726] we should have ran this [1728] once yeah not really sure why we had to [1730] run it twice so yeah okay and then it [1731] ran twice here uh we should have [1733] aggregated that so I'm really sure where [1735] there are multiple bundles coming [1737] out [1738] I mean operation one looks good number [1740] of hour oh well I guess I need to round [1742] this but anyway number of hours at [1743] whatever is equal to oh I put two dollar [1745] signs here I should only put [1748] one uh let's format this number as [1751] well and then let's say two let's do [1755] period let's do comma and then [1758] go nice um and then it might be because [1762] of this router now that I'm thinking [1763] about it I I don't actually know but [1765] we're setting a variable what twice [1769] then we are aggregating this [1774] H is it this row separator [1777] potentially no I don't think so we may [1780] just not be able to use set multiple [1781] variables as a source uh I may have had [1784] a problem with this before so I'm just [1786] not going to generate the invoice [1788] anymore and then I'm just going to run [1789] this and [1790] see logically why this is going [1793] twice we may have to use list time [1795] entries now that I'm thinking about it [1798] which is [1801] unfortunate well I guess it's not super [1803] unfortunate here we'll use list all time [1807] entries this will also be list all time [1810] entries we're now going to run this the [1812] same number of times and maybe it'll [1813] only run once [1815] okay uh looks like it added up to two [1818] which is nice and then here it didn't [1821] add a line separator because I removed [1823] the row separator so we'll run this [1825] puppy [1827] again [1828] okay we got two lines now both with the [1830] separated amounts and then here that we [1832] have the result which is all over the [1834] place so [1836] I'll um actually we'll just format the [1839] subtotal as it comes [1843] in like this that should be [1846] good now we have this subtotal which [1851] should reflect the new rounded amount [1854] and then if I scroll down here we have [1856] um task name email address aggregated [1859] line items should be good total amount [1861] which I guess I'm formatting the [1862] subtotal twice now which I don't need to [1864] do I should ideally you'd always do this [1866] at the source rather than at the um the [1870] destination okay great let's give this [1872] puppy a [1873] try I uh I'll always do this I'll always [1877] like align automatically and then I will [1879] always be like that looks terrible [1881] and then I'll always go back and then [1883] try and organize it like this I [1885] generally like to have my main flow in [1886] like the bottom rout linearly then if I [1889] ever have to use a router there another [1890] reason why I don't like routers they [1891] kind of screw with my visual flow but if [1893] I ever have to use a router then I'll [1894] usually stick it on top I learned that [1896] from um uh my my good friend and [1899] business [1902] partner okay now we have this link I can [1906] open it [1907] up awesome that looks cool so you know [1911] we add that up oh I need to put a dollar [1912] sign on the total uh but aside from that [1915] I mean you know this is basically all [1916] the information that you'd need and in [1918] an invoice looks like I need to fix the [1920] date again because I don't think that I [1922] put the yeah let's do date time [1925] formatting tokens and just figure out [1927] exactly how to do [1930] this um I guess we need mmmm so what we [1934] need to do in order to get like the word [1935] March or whatever is [1938] mmmm and then uh okay invoice for task [1941] name format date okay and then total [1943] amount needs to be a dollar sign well I [1947] think we we can probably just do this [1948] where I'm setting it right let's put the [1950] dollar sign [1952] here cool that looks good let's run this [1955] test one final time verify that this [1958] very basic invoice template [1962] works pasing it in nice that looks [1965] pretty [1965] cool let's make this a little prettier [1968] we'll make it enter 12o font and then we [1971] will add 1.5 lines very legit you know [1975] you can add your logo in the top right [1976] hand corner if you want to [1979] let me see if maybe I can drag and drop [1980] mine in there man there are a lot of [1982] left clicks good [1984] God maybe if I type in my logo here oh [1988] yeah that looks nice much better much [1990] better thank you [1993] LinkedIn um we're just going to float [1995] this wherever I want I think that's how [1998] I do it uh no I don't want to break the [2001] text in front of text there we [2004] go wonderful what a fancy [2006] invoice [2011] your invoice may be uh may be nicer than [2014] this I don't even know how to make mine [2015] go up maybe I need to put this in the [2016] header or something actually now that [2017] I'm thinking about it and I don't [2019] remember how to get a header on uh oh [2024] yeah okay I just click this button and [2025] maybe I paste it up there and I put it [2028] like right over there man that's [2031] fancy [2034] [Music] [2035] incredible okay I mean to be honest I [2037] think that kind of looks like but [2038] hey what are you going to do guys this [2039] is a five minute invoice template so [2041] great we have our you know we have our [2043] our lovely um invoice here the question [2045] is now how do we [2047] um uh how do we get like the date range [2050] so we basically we want to get uh the [2052] date range from the first day of the [2053] month to like the last day of the month [2054] essentially or like the full month Um [2056] this can be pretty weird to do in [2057] make.com unfortunately but we can take [2060] advantage of the fact that we are going [2061] to be running this scenario on the first [2063] day of the month and so basically in [2065] order to get the last day of the month [2066] we only really need to go back a little [2068] bit um this may not work while I'm like [2071] showing it here but uh you know bear [2073] with me and and we'll we'll get there [2075] together so under this list time entries [2077] module you can set an end date and then [2080] you can also set a start date and so if [2082] you think about it this scenario is [2084] going to be running every month on the [2086] first of the month at 000000 basically [2088] at 1200 a.m. so if we go back 1 minute [2091] then it will technically be the last [2092] minute of the previous month so we can [2094] set that as our end date for the period [2096] that we're adding up since we're doing [2097] it once month the reason why this is [2099] smart is because it eliminates a lot of [2101] like the BS of dealing with like the [2103] last day of various months you know some [2106] months have like 30 days other months [2108] have like 31 days other months have 28 [2111] and once every four years we're lucky [2112] with a 29th so you know dealing with all [2114] that stuff is kind of annoying it [2116] wouldn't it be way cooler if we could [2117] just pull a now and then we could say [2120] add days or sorry add minutes and then [2123] we could just go now negative [2125] 1 um presumably this is going to run [2128] 000000 Z this is going to run within a [2129] couple of milliseconds so this is going [2131] to be um this is going to go all the way [2134] up to 1159 on the last day of the [2136] previous month which is nice and then [2139] for the start date um couple different [2141] things we can do but I think we're [2142] probably just going to add months we're [2144] going to grab [2146] now and then we're going to just do [2148] minus one now it's worth noting that my [2151] time zone is set up uh 8:55 a.m. and I [2155] think that in like 5 minutes It'll [2156] technically be 00 [2158] so this probably isn't going to work [2160] exactly like how we wanted to just for [2162] my [2164] purposes uh I'm just going to add some [2166] weird user ID stuff here to run this [2169] module okay so because it's counting [2172] March 1st yeah that's really funny I'm [2175] actually really close to the exact date [2176] that I'd be running this on maybe we can [2178] get lucky and if I last another four [2179] minutes we can we can run it but [2181] basically it's saying that the end date [2182] is March 31st start date's February 29th [2185] because it's counting this as the last [2186] day of the month but you can see how how [2188] it sort of picks the last day of the [2189] month so this is going to be uh March [2191] the 1st basically and then this is going [2192] to be March 31st at 11:59 p.m. um so so [2196] all is well there this is showing that [2197] like our date picker is is working so um [2201] just because you know these things can [2202] get pretty complicated pretty quickly [2203] I'm then just going to REM rename this [2205] I'll say list staff [2208] members uh because I'm going to make [2209] this a blueprint I'll say list time [2211] entries this already says list time [2213] entries I just want to be able to see it [2214] in big [2216] text [2221] I'm going [2226] to call that generate line items and [2228] then going to call this uh oh sorry this [2231] isn't actually generate line items this [2233] is generate line [2234] items this is going to [2236] be sum total or get no let's just say [2241] sum [2241] total this is going to be generate [2244] invoice [2246] template then you can imagine how later [2248] on you could add maybe a little email [2250] module here that like emails it to them [2252] at the end of every month with the um [2254] Google doc and then maybe if you're [2256] using docy sign or something like that [2257] now you send it over with like a way for [2259] them to sign it's a very simple and very [2261] straightforward sort of payment U [2263] mechanism here but this will essentially [2264] allow you to automate all of your um [2266] hourly rate contractors assuming that [2268] you have a place to store the data under [2270] a staff tracker that may be an example [2272] payroll list but okay great so this is [2274] probably the most difficult one um and [2277] now that we're done with this you know [2278] you can tie this very easily into the [2281] Project based and then the salary and [2282] I'll show you how to do [2284] that just for completeness sake just [2287] like the last scenario we're going to [2288] list the staff members we don't actually [2289] need to list the time entries anymore [2291] what we need to do is we need to list [2292] the tasks so we're instead of listing [2294] time entries going to go to click up and [2298] then we're just going to go list all [2299] tasks and this is basically going to [2301] swap this out um so I'm just going to [2303] add this to the flow over here a little [2305] bit ahead just so I can test this first [2308] the list ID is going to be selected and [2311] so we're then going to go into [2314] workspace space is going to be test [2316] build again just because that's where [2317] I'm personally doing them and then uh [2320] we're doing the folder lless list and [2322] then believe example payroll list there [2325] we [2327] go uh assign IDs I'm going to map in the [2330] previous assign ID from the list staff [2332] members all previous tasks so we're [2335] going to go to assignes and then user ID [2337] we're not going to worry about the [2338] statuses for now just because I've set [2340] them all to Tod do but you can imagine [2341] how maybe you only want to get the [2342] completed tasks or something right and [2345] then we're just going to set this as a [2347] really high limit just so we can run [2348] this puppy I need to add in a bunch of [2351] annoying assign info because otherwise [2354] my oh what am I doing here my flow isn't [2356] going to work [2357] regardless here I'll just trigger [2361] this okay great and now we have some [2364] tasks um okay great we have the name of [2366] the task which in this case is strategy [2368] this case is website development you [2370] know what I'm realizing I'm realizing we [2371] didn't add the name of the task to this [2373] aggregator so we should be able just to [2375] say [2380] um we should actually just be able to [2382] add the task name in [2385] here um maybe I don't want to do that [2388] because we need to add another module [2390] any who you can tie this in really [2391] easily to list staff members and list [2393] tasks associated with every staff member [2394] and then have it iterate over it um for [2397] for now because we just have access this [2398] at the top level of the aggregator I'm [2400] just going to use it but yeah you can [2401] use that in the hourly rate thing as [2403] well anyway we got the time entries here [2404] we don't actually need to do any of that [2407] um fun stuff we are also going to have a [2410] numeric aggregator and a line or a text [2412] aggregator which is nice but I'm just [2414] going to delete this it's going to [2415] delete all the [2417] aggregator I'm then going to combine [2420] this in uh we don't actually need to set [2422] the hourly rate or the total because all [2424] the information is just going to be [2425] available to us really simply at the top [2427] level of the clickup custom field and [2430] then what we need to do is we need to [2431] sum the total just like we did before [2433] but the field that we're going to sum [2434] over is this custom field here uh which [2437] is called internal budget and so this is [2439] how we're going to get our uh our total [2441] so I'm going to use the clickup list [2443] task is my source so every time that [2445] this runs once it's now going to [2447] aggregate all of the bundles that it [2448] generates so one two in this case uh and [2451] then Summit and then for Generate line [2453] items uh what I'm going to do [2456] is this is technically a money field in [2459] clickup so it may already be formatted [2460] but I'm going to say um the name of the [2463] task so it'll be I don't know [2468] strategy and then a colon and then a [2470] space and then uh this internal budget [2473] and we'll see if it's a dollar sign or [2475] or if it has all the formatting that [2476] we'll need we'll use our list all tasks [2479] as the source and then we have the same [2482] pattern here between subtotal and [2485] um oh and yeah I don't know if we [2487] actually need this so I'm going to [2489] remove the dollar sign [2491] again um I think that's it yeah we just [2495] need to fill in the variables [2499] now so same very basic invoice template [2502] aggregated line items are going to be [2503] here in text total amount is going to be [2505] under here in [2507] subtotal date should be the same [2509] everything else should be the same oh I [2510] I need to go in here and then change [2512] mmmm so full month [2515] name great [2517] [Music] [2518] um now that we've generated this once [2520] why don't we go [2521] create pump this puppy [2524] through let's see how it [2527] goes got to web view link [2531] here uh work performance strategy [2533] website development so all we need to do [2534] is just add a dollar sign basically and [2536] then format the number which we did not [2538] do anymore so I'm going to add dollar [2541] sign here to format number oops wrong [2544] one I think we were aware here [2548] so I'm going to add a dollar sign to [2549] this and then I'm just going to format [2551] it so there are two [2555] um uh let me see that's the wrong flow [2559] I'm just going to generate it that there [2561] are [2563] two um bullet points [2566] here not bullet points I'm very sleepy [2570] we're going format number we're going [2573] this and then we're going to decimal [2574] points to um decimal separator period [2577] and then thousand separator comma [2580] wonderful that should be good and then [2582] this does not seem to be working I'm not [2585] exactly sure [2587] why but we'll just add that up so that [2589] in the subtotal we have a dollar sign [2591] and then strategy we have a dollar sign [2592] and then here we have a dollar [2594] sign you can imagine how you can get [2596] fancy with this you could add the date [2598] in the line item that you are generating [2600] you do a lot uh but I just want to show [2602] you guys how to do this as simply as [2603] possible [2606] first okay great now we have strategy we [2608] have website development we have a total [2610] awesome looks very good and hey looks [2612] like the date is correct now probably [2614] because it's over yeah it's over nine [2616] and we're on nine hours behind U my time [2620] zone awesome that's pretty [2622] straightforward the last flow is much [2625] much simpler all we do is we list the [2626] staff members so I'm just going to paste [2628] in from a previous flow so I don't have [2630] to spend time um generating all of that [2632] other info and then we paste in our very [2634] basic invoice template and all we're [2636] going to do now is we're going to list [2637] the staff members I'm only listing one [2639] but you can imagine how you'd list all [2640] of them and then we are going to just [2643] add in a single line item and that [2646] single line item is just going to be [2649] called you know in my case I'm going to [2651] say [2652] monthly and then I'm going to say or [2654] maybe we can do like monthly fee or [2656] something if you don't want to use the [2657] word [2658] salary we can go down to custom fields [2662] and then monthly salary and I'm just [2664] going to do my little format so the [2667] format number we'll go two decimal [2669] points and then that's good and then the [2671] total amount is just going to be the [2673] same thing we're just going to remove [2675] this monthly [2677] fee um yeah that should be it so now [2680] we're going to generate [2685] this take a look at this web view [2689] link and then voila that's it okay so [2693] the question is where do we go from here [2694] you know we've generated cool invoice [2696] templates that may or may not be lacking [2698] certain things depending on where you [2699] live make sure to get that double [2701] checked before you uh start sending them [2702] out I don't want to be responsible for [2704] any legal issue or financial issue of [2706] course I'm not a lawyer or a financial [2708] analyst but um where do we go from here [2711] really like where could you go to take [2712] this to the next level What I've Done [2714] historically is I use a Neo bank called [2717] Mercury Mercury is amazing Mercury the [2721] planet yes my bank is on Mercury um [2724] there's another one called brex which is [2725] really cool and basically these Neo [2727] banks are banks that are very similar to [2730] traditional sort of um you know brick [2732] and morar Banks it's just you can only [2733] really access them from the internet so [2735] you just do all of your servicing [2736] through the internet and that sort of [2737] thing and the really cool part about [2738] both bre and Mercury is that they have [2740] apis and so if they have an API that [2743] means obviously you can automate [2744] right so what I'll do is I will generate [2747] an invoice using a flow very similar to [2749] this and then I will do it using [2751] pandadoc which is a signature request [2753] platform and so I'll have a little place [2755] for them to put a signature and it says [2757] like you know I hereby um you know agree [2760] or acknowledge or you know this is like [2762] a an invoice that I have generated blah [2764] BL blah blah and then they sign it and [2766] this like verifies that they have [2768] obviously agreed to the terms on this [2769] and that you know they're the ones that [2771] have sort of had the final say which is [2773] important by the way for I think [2774] contractors more generally they need to [2776] have the final say in any any contract [2778] or pay stub or anything like that anyway [2780] I tie that signature to an API call that [2782] goes over to Mercury in my case and then [2785] that'll go and that'll pregenerate a a [2787] um a transaction and then that a [2791] transaction is queued up and then all we [2793] have to do once a month is just go [2794] through this list and just go check [2795] check check check check check I don't [2798] actually recommend completely automating [2799] that process and I don't actually [2800] recommend completely automating payments [2802] in general because there's a lot of [2804] money if for whatever reason there's a [2805] one in 1,000 chance and your flow adds a [2808] couple of extra decimal points you might [2810] be so be careful when you're [2812] automating payments of course I hope [2814] that goes with that's saying but yeah I [2815] usually recommend some type of human [2817] step but still that step is now 5 [2819] minutes instead of like you know 15 or [2821] 20 hours a week negotiating with various [2823] accounting firms and whatnot I should [2825] mention about bookkeeping and accounting [2827] it's obviously very easy to then just [2828] generate a PDF of this and then just add [2830] this to like some data room or some big [2831] Google Drive where you store all this [2833] stuff or maybe just send it to your [2834] accountant but yeah in a nutshell that's [2837] more or less How I build out these flows [2839] um you can sell this flow for a fair [2841] amount of money because you're solving a [2842] very important problem that like [2843] Founders know personally it's not a very [2846] like important problem for them to be [2848] spending their time on if you think [2849] about it like it's just templating and [2851] dragging and dropping amounts and [2852] copying things from Excel spreadsheets [2854] but it's important in so far that [2855] they're spending a ton of their [2856] time on it and so it's like a pressing [2857] need um but you can also just employ [2859] this in your own business to see some [2860] cost savings and benefits and ideally [2862] you would do it in both you know the [2864] work that you're doing maybe for other [2865] people if you're in Automation and then [2867] the invoicing process that you might be [2868] doing internally if you have other [2870] people working for you that sort of [2871] thing awesome I hope that makes sense if [2873] you guys got any questions about what [2875] payroll or automating payments look like [2877] for uh use case that I might not have [2879] covered maybe like commission payments [2880] or something like that feel free to drop [2881] a comment down below more than happy to [2883] help you guys with that otherwise thanks [2885] so much for watching leave a like [2887] subscribe do all that fun YouTube stuff [2889] I'll catch you on the next video thanks [2890] so much

Video: https://www.youtube.com/watch?v=klozZP1Wf8g
Title: Watch Me Build An Instagram Scraper & Generate +400K DMs/Day With AI
[0] what's going on everybody it's Nick and [1] in this video I want to run you through [2] how to scrape Instagram effectively [5] scalably and with data that lets you [7] customize DMS and Outreach using AI I'm [10] going to walk you through my personal [12] entire funnel from end to end and I'll [14] show you a couple software platforms and [16] give you guys sort of a behind the [17] scenes look at how to do this [18] realistically within a company so if [20] that sounds like something you're [21] interested in stay tuned and let's get [22] into [26] it okay so first things first I got my [28] Instagram profile open here and just so [31] that nobody yells at me I'm just going [33] to use my own profile and uh maybe just [35] some like random bot profiles that I [37] find for the purpose of the scraping but [39] uh what you see when you go on my [41] profile is you see a couple things we [43] have like a little profile description [44] here obviously we have a link to threads [46] we have you know the first name last [48] name this is where like the bio or the [50] description would go we can see some [51] linked websites and then we have a bunch [53] of images here um and essentially what I [56] want to do over the course of the next [57] few minutes is show you guys how to get [59] all of information in Json format and [63] then use it in an AI flow and what we're [66] going to be doing in particular is we're [67] going to be feeding in some image post [69] data into Ai and we're going to have it [72] customize the first line of a message [74] that we're sending out to people in my [76] experience and I do you know cold [78] Outreach basically for a living at this [79] point um you know the best cold Outreach [82] is customized but it's also incidental [85] and the way that it comes across is [87] almost just like you're talking to a [89] friend at the bar or you know you're [91] just texting somebody on your phone you [93] know it should be hey X saw your post [96] about y wanted to talk about Z if that [99] makes sense and and that's just going to [100] be the sort of uh the sort of format [102] that I'm going to follow here now I [105] should make it known that Instagram has [107] changed their API and so you can't [108] actually send DMS well I was going to [111] say legally but it's not like [112] Instagram's the government not yet you [114] can't actually send DMS uh just using [116] the Instagram API so uh we can't [119] actually do the sending of the DMS on [120] our end unfortunately or at least I'm [122] not going to be showing you how to do it [123] in this video there are a variety of [126] like web browser automation tools that [128] allow you to do that sort of thing uh [130] and if you guys are interested in you [132] know showing or running me having me run [134] you guys through how to actually go and [136] send a DM like you know having a bot [138] that like opens a browser clicks on [140] messages clicks on a DM list or whatever [143] I can do that for you just note that [144] Instagram is probably the world's most [146] sophisticated uh web service and so as a [149] result they're very very secure and [152] they're very very difficult to automate [155] you know because this is like a problem [157] that's basically basically they've been [158] solving for the last 15 years or however [160] long they've been around regardless [162] we're going to get a bunch of data and [163] then just for the purposes of automation [165] I'm just going to dump it all into a big [166] Google sheet and then we're going to [168] take that Google sheet data and then you [170] can do whatever you want with it whether [171] you want to add it to maybe your own CRM [173] with like a task for like a virtual [175] assistant or a salesperson or you know [177] maybe you want to run some additional [178] analysis on it whatever at the end of it [180] we are going to get you know the images [182] we're going to get the profile we're [183] going to get the URL and then we're also [184] going to get like something to tell them [186] and uh yeah that's going to be what [187] we're going to develop over the of [188] course the next few minutes so uh let's [190] talk tools you can obviously use a [192] variety of tools to do Instagram [194] scraping there are probably like 30 or [196] 40 of them out there now um what I'm [198] going to do here is I'm going to show [200] you my favorite which is called Phantom [203] Buster and Fuster is um basically like a [209] I don't really know exactly what you [210] want to call it they use browser [211] automation under the hood and so they [213] are going out and like clicking on links [215] for you and then like scraping a page [216] and then like you know penting and all [218] that uh but they're probably like [220] the most secure [222] or safe I want to say um because you [225] know you obviously need to log into a [227] profile in order to do the scraping and [229] so yeah basically as a result of um [232] using phantombuster you can get very [234] very safe data uh for reasonably cheap [237] and the way that they do their billing [238] is they use sort of like execution time [242] because they have these Cloud servers [243] it's like hosted somewhere else on the [245] web and instead of billing you per run [247] like make.com does they'll bill you per [249] minute used and I just get the starter [252] plan and I run probably like four or [254] five businesses out of it and it's [255] perfectly fine I basically never run out [256] of Ops so uh you're probably good with a [258] starter plan you can also just use a [260] trial for the purposes of the video if [261] you wanted to like build out something [263] relatively similar but yeah I'm going to [264] use Phantom Buster for this and there a [266] variety of other tools as well we're [268] also obviously going to be using [269] make.com so if you're unfamiliar with [271] make.com you know I have a whole [272] tutorial on how to use that platform [274] extremely powerful automation platform [277] that I made a ton of money with and uh [278] and you can too and then yeah we're just [281] going to be using Instagram so let me [283] walk you through what a flow here might [284] look like and I'm going to start off by [286] just using Phantom Buster and then I'm [288] going to get a bunch of like um [290] basically uh example data and then with [293] that example data I'll like feed it into [294] AI we'll do the prompt and then after [296] that we'll actually go and then I'll [297] show you what like uh how to import that [299] into make [301] essentially so um first things first let [303] me just see what Google sheet account I [306] have access to [308] here so we're going to be adding a row [311] to a Google sheet and then okay so this [313] going to be on my other email I have so [316] many emails open here it's [319] Bonkers okay we're going to call this uh [323] Instagram Phantom [325] Buster [328] scraping and I'm not going to fill in [330] any of the fields right now I'm just [332] going to share this with an email [333] address this is sort of the less [335] glamorous part of doing a lot of these [337] automations in order to obviously be [340] able to like access the correct sheet [341] and all that stuff you just need to make [342] sure permissions are good okay next up [344] I'm going to go into phantombuster so [346] I'm going to assume that you've already [347] signed up when you sign up you get a [348] page that looks something like this and [350] essentially what you see is you see a [352] bunch of phantoms this is just uh I [354] guess like a cool branding Quirk Phantom [356] is just a bot they're just calling it a [358] phantom instead of a bot and if you [360] click on use a new Phantom and then you [362] just type Instagram up in the top left [364] you'll see that there are a variety of [365] phantoms or a variety of bots that we [367] can use in order to get our data and the [369] data that's returned by each of these [371] Phantoms is quite different so pay close [373] attention to the sorts of things that [375] we're doing there's a follower collector [377] which will extract the followers of an [378] Instagram account and if you click more [380] you'll see what you give and then what [381] you get so you can see that we get the [383] profile URL the username the image URL [384] full name ID is private is verified and [387] so this is probably what I would use if [388] I were you know in to do cold Outreach [390] for people that are in a particular [392] Niche I would just find a follower or a [395] followe or like an authority or an [397] influencer that's sort of like [399] definitive in that Niche I don't know [401] maybe it's like Mar brownley or [402] something like that for Tech products [404] and then I would uh extract or collect [407] their followers just based off of you [410] know the the little followers button so [412] it's going to go through and find all [413] that information and then what I do is [414] I'd feed every profile into another [416] Phantom which maybe helps me get image [418] data and post data and sort of thing uh [421] because I am doing this just on my own [423] profile I'm just going to go on one so [424] you can see there's like Auto comment or [426] autof follow Auto lier you can do a lot [427] of like active things with this as well [429] and if you guys want me to do a video on [430] any of that just let me know we're happy [432] to do so I figured I'd keep it simple [434] here though [435] um we're going to do okay profile post [439] extractor that might be one so I'm just [440] going to oops I don't actually want to [442] use [443] this I'm going to go back here and just [445] click [447] more we'll do profile scraper this is [449] probably the one that we're going to [451] use we can do story Auto Watcher that's [453] pretty interesting story extractor story [456] viewers export tag post extractor so I'm [459] pretty sure the one that I want to use [460] is called the profile post extractor [463] yeah um so we're not going to use the [465] photo lier obviously let me just see [467] what we can get with the profile [469] scraper yeah so you can get the bio [471] website you get all that stuff but no [472] we're going to want to get the uh we're [474] going to want to use [475] the uh profile post extractor and so [478] I've actually already like Tak one of [481] the Phantoms here so I'm just going to [482] use the Phantom that I have um right [485] over here Instagram photo [487] extractor but yeah you know just find [488] Instagram photo extractor and then use [490] that okay great so after we're done with [492] that let me just call this YouTube [494] Instagram photo extractor once you're [496] done with that you're going to want to [497] click into the Phantom and uh you'll see [499] a page like this this just shows you [501] your run history uh you can see I ran [502] this on my profile a while ago probably [505] when I was thinking about doing this [506] video uh and it showed me you know the [508] information like the Instagram the [510] comment count the light count you get a [511] ton of information which is pretty nice [513] so next you got to click on this little [515] setup and then what it's going to do is [516] it's going to ask you for your Instagram [518] session cookie now if you're unfamiliar [520] with what a session cookie is you know [521] when you log in a service and you put in [523] your username and your password well [525] basically in order to prevent you from [526] having to resend your username and [528] password every time you want to do [529] anything on the platform like anytime [530] you want to like a post right instead of [532] having to type in your username and [533] password to authenticate um Instagram [535] will basically do some big mathematical [538] operation and then give you a very [539] secure password like a like a like a [542] secret phrase and that's what this [543] cookie is and then for the next X hours [546] maybe like the next 12 hours you can use [548] the secret cookie uh or the session [551] cookie I guess I should say in order to [552] like gain access and every time you make [554] a request to Instagram server every time [556] you basically like data changes hands uh [560] this secret passphrase is also passed [562] between you two and that's just how [564] Instagram ensures that you are the [565] person that logged in before now the [567] really cool part about Phantom Buster is [569] they automatically grab your session [570] cookie for you using a little Chrome [572] extension and so if you see I have a [574] little Chrome extension up here with [575] this cute super kawaii ghost uh and [578] that's Phantom Buster and essentially it [579] just goes on my Instagram account and [581] then grabs my session cookie for me so [583] that I can do all of the browser [584] automation that uh that we we [586] looked at a second ago so got my cute [588] little Chrome extension up there got uh [590] my Instagram session cookie all I have [592] to do is click a button that's connect [593] to Instagram and then it'll go grab my [595] session cookie and then I'm I'm good to [596] go and I should note that this is pretty [599] sensitive information like the fact that [600] I'm exposing the session cookie to you [602] right now basically everybody would say [603] Nick this is stupid you shouldn't be [604] doing this um but I know that the [605] session cookie turns over every so often [608] and so I'm not personally worried about [610] anybody using mine but if you're using [612] this in like a company or something [613] where you have maybe a personal [614] Instagram account or whatnot just make [616] sure that you hide this or you know [618] you're not really showing this to other [619] people in in the business odds are [621] they're not going to know what to do [622] with it anyway but just something to [624] keep in mind um session cookies are like [626] you know the secret code that they give [628] you as a result of putting your username [630] and password in there it's not like you [631] can recreate your username and password [633] but anybody that has this can log into [634] your Instagram account uh and do [636] with it so any who I'm going to click [638] login and then uh we'll do instagram.com [641] nxra that's just the URL of my profile [644] when we scale this up we're going to do [646] this on multiple profiles so we're not [647] actually going to be using this one [648] we're just going to feed profile by [650] profile um things in here you'll see if [652] you scroll down a bit it says you can [655] give your profile URLs in one of the [656] following formats the URL of a single [658] Instagram profile the URL of a Google [659] sheet containing a list of Instagram [661] profile URLs and the URL of a CSV file [663] containing a list of Instagram profile [664] URLs and so we can actually like scale [666] this up any way that we want we could [668] just run this once per um Instagram [670] profile that's probably a little [672] inefficient uh what we're probably going [674] to do is do a Google sheet or we're [675] going to do a CSV file um and then the [677] Google sheet you can just like generate [679] a Google sheet every time that you want [680] to do this and then use that Google [681] sheet as the URL uh so pretty pretty [684] straightforward stuff and you have some [685] other things you can Define over here [687] but since we're not using a Google sheet [688] that's not big deal you can set the [690] number of post to extract per profile [692] just to keep you know automation limits [694] as low as humanly possible I'm just [696] going to extract three and then I'm [697] going to have ai tell me something about [698] these three and then I'm going to [700] combine their I guess descriptions or [703] whatever and then use that to say [704] something and then the number of [706] profiles to process per launch is going [707] to be one there's some advanced settings [708] down here but usually you don't have to [710] worry about the advanced settings so [712] we're going to click save I'm going to [713] run it once um just as a purpose of this [715] example and then uh I'm going to say no [718] thanks here okay and then I'm going to [720] launch and now it's actually going to go [722] out and log in on my Instagram and then [725] feed in the session cookie navigate to [726] the URL and then basically just scrape [729] the Json from that whole page and then [731] feed it to me in a format that I can use [734] so that took not even like 5 Seconds now [736] that I'm looking at it um yeah it's a [739] successful authentication it says no new [740] post found just because I ran this a few [742] days ago when I was figuring out what I [744] wanted to talk about in this video but [745] the end result is you get this [747] information so you get the post you URL [749] with the column description comment [751] count like count location location ID I [754] guess you know Port Moody British [755] Columbia is a specific location ID [757] publication date you can see I haven't [758] posted anything in like five years Jesus [761] liked by viewer is sidecar I don't know [763] what that means but it means something [764] type caption profile URL username full [767] name image URL post ID query uh [770] timestamp tagged full name one and [772] tagged username one so what I'm going to [774] do here is just for the purposes of this [776] demonstration I'm going to download this [778] um file it's going to be a CSV and then [781] remember how earlier I had uh let's [785] see this Google sheet well now I'm just [788] going to [789] upload what I just downloaded here into [793] this Google sheet and it's just going to [794] like recreate [799] it okay great and now I have the data [802] and some format that I can work with [806] realistically um I mean I did three [809] images here but realistically I'm just [811] thinking about like the quantity of the [813] data that's coming in we might just want [814] to do one and just have it tell us [815] something about the last image that's [817] probably smarter um we could loop around [820] three but you know maybe token cost [821] would be a bit much so why don't I just [823] cut these other two out and then we'll [826] just use one okay and the reason I'm [828] doing this just to be clear is because I [830] want to have the data in a format um [833] that I can then like use to to call um a [836] make scenario and uh Google Sheets are [838] just the simplest and easiest and I [840] think most people here intuitively [841] understand it so I'm just using this as [842] an example we may not actually have a [845] Google sheet at the end of it okay great [847] so now let's actually um go out and then [848] do something with this [850] so excuse me let's uh I think I've [852] shared this to the correct place yes I [855] have let's go to [857] make.com and then I'm just going to use [861] Google sheet as the source and then for [863] the purpose of this I'm just going to [864] say search rows although in the future [866] maybe we're not going to use search rows [868] I don't really know [869] um it looks like there's some issue like [871] validating my account so let me see if I [874] can find this spreadsheet [876] here should just be Instagram yeah [878] Instagram Phantom Buster scraping [880] beautiful we're going to call results [883] that's our wonderfully descriptive sheet [885] name and we're going to run this puppy [888] just as a test to get the data you [890] should always be running things before [891] you build out your full flow just to [892] make sure that everything that you're [894] doing is uh is necessary and you're [896] getting all the data that you need so [898] you see I got my post URL I got the [899] description I got the Comon count [901] there's an image URL here if I copy and [903] paste this image URL this is the URL [905] signature expired that's kind of weird I [908] might not have pasted it incorrectly or [909] something like that oh you know what I [912] think I know why this [914] happened um I think this happened [917] because yeah I think I know why this [919] happened um because I haven't done this [922] in a couple of days [926] right so I imagine when it scraped it [933] it probably uh like it probably didn't [936] add the new URL Instagram will update [938] its URLs all the time and what are [939] called URL signatures just to make sure [941] that people aren't scraping data storing [943] it and then like using it uh I don't [945] know six months later or something and [947] so they're very very careful about this [949] um so when I ran this in order to [951] preserve my resources Fantom Buster has [953] sort of like a sort of like a cache and [956] it says oh we've already uh scraped this [958] image so I'm not going to scrape this [959] image again um so we may just need to [962] scrape the image one more [964] time so in order to do so I've uh yeah [967] okay so this should work this is one new [968] post extracted so if you guys remember [970] last time it said no new data to update [973] but if I go to the image URL that it [975] pulled now I bet you it'll [977] work yeah there you go that's me [979] absolutely demolishing a Subway sandwich [982] okay so I'm just going to um download [985] this new results file and then I'm going [988] to go back over here here and then [990] reimport this just so that we're all [992] clear on you know what you would do if [994] you were attempting to test this out on [995] your own so you just drag and drop that [997] here I'm just going to replace the [998] spreadsheet because this is like the old [999] data and I want the new data okay cool [1002] and now I have accessible image URL with [1005] like an accessible signature the [1006] signature I believe is just in the URL [1008] after question mark STP and then they [1010] just have like this whole like long [1012] string and that just takes like the [1013] current date and time and then make sure [1015] that you're not using it uh 6 months [1016] from now or whatever I don't know if you [1018] guys are are familiar with um kind of [1021] how that works but like there were a [1022] bunch of services out there that tried [1023] scraping uh Instagram and then like [1025] hosting like Instagram alternatives for [1027] a while and so this is just how they [1028] shut all that stuff down so now that we [1030] have the data why don't we do something [1031] cool with it let's feed it into [1034] Ai and then uh so in order to do that [1037] I'm going to go to add and then I'll [1038] just type open [1039] Ai and then I'm going to do create a [1042] completion no I'm going to do analyze [1044] images let's do that [1049] image that we're going to supply is [1050] going to be an image URL and the image [1052] URL in particular is going to [1055] be this image URL it's literally called [1057] image URL uh and then I'm going to [1061] say the following [1065] is an Instagram image shouldn't be a [1068] problem sometimes when you feed stuff [1070] like this in like with brand names uh [1072] gp4 or gbd3 or whatever is doing the [1074] image analysis will be like I'm sorry I [1076] can't scrape on Instagram I'm so so [1079] sorry uh Joe or whatever the hell that [1081] how 9000 is uh meme is um so we're just [1085] going to say the following as an [1086] Instagram image and then I'm going to [1087] say um I've included a [1091] caption below as well and then we'll [1094] just say [1095] caption and then um tell me something [1103] about use the image and the [1105] caption to write a customized one on [1109] line [1110] introduction use the following [1114] format um we can do [1118] Jason yeah you know what let's just [1121] let's just see how it [1134] goes let's just see how it goes without [1137] actually doing Json formatting and stuff [1138] like that I'm just doing this off the [1139] cuff I haven't run through this specific [1141] example so we can sort of learn together [1143] and maybe iterate and hopefully this [1145] will show you guys at least some some [1146] insight into my thought process when I'm [1147] designing these things so I'm just [1149] providing it some examples because I [1150] want to steer it in a direction where [1152] I'm just not going to hate the first [1162] output yeah that looks pretty good we'll [1165] just roll with that uh we're going to [1167] sply the image URL Max token [1169] yeah 300 that's probably Overkill we [1171] probably need like 150 and then are [1173] there any advanced settings that I need [1174] let's decrease the temperature top PE [1177] looks good so we'll give that a little [1180] run um unable to parse AR range oh right [1183] because I just re-uploaded this file so [1185] I got to go back to the sheet name go to [1187] new results [1189] file and this may uh no this should be [1192] okay okay so we're going to run this [1194] puppy again so we got the image URL here [1197] so it's currently reading the image and [1199] then it's also taking a caption and it's [1201] telling us something about [1202] it and let's see what the result was [1205] your latest snap is epic taking a big [1207] bite with those cool shades on okay [1208] that's kind of [1218] lame let's just say using no FRS ton of [1221] voice let's run this puppy [1228] going all in on that burger I see hope [1230] it tasted as good as it looks so that's [1232] a pretty good output which looks nice um [1234] now there are a couple of different [1236] ideas here you can use Json like I've [1239] used in the past and uh so you know if I [1241] use Json what I'll do is I'll say [1242] something like write in Json format and [1245] then I'll say example and then I'll have [1246] it like output Jason and then I'll parse [1248] the Json um usually I'll do that when I [1251] have it outputting multiple things so if [1253] it's outputting I don't know like a you [1257] know like an ice breaker but then a like [1259] a like a reason and then maybe like like [1261] a heading and then a subheading or [1263] something I'll just do it in Jason [1264] because it's really easy to um to index [1266] afterwards in this case all I'm really [1268] doing is I'm just generating a oneline [1269] Icebreaker so I don't really know if I [1271] need anything else um but yeah just to [1273] just to sort of walk you guys through [1274] what my what my thought process is there [1276] looks like there are quotes that it [1277] generates um the quotes seem [1279] syntactically important that probably [1281] just you know I've provided quotes and [1283] the examples here just to show and kind [1285] of disambiguate it from the previous [1286] text so I'll just leave the quotes for [1288] now and then I'm just going to trim the [1289] quotes um as necessary or maybe like [1292] just remove the quotes uh and [1295] then yeah I think that's all that I need [1297] to do and then what I'm going to do is [1299] I'm going to go back into this Google [1302] sheet and [1304] then um there's sort of a couple [1307] different ways that you can do this you [1308] could hypothetically create a new Google [1310] sheet called like Instagram Phantom [1312] Buster uh you know DM list or something [1314] like that but I think that you know it's [1316] possible that anybody that I get to do [1318] this t ask like a virtual assistant or [1319] whatever can use this information in [1321] order to improve the quality of the [1322] message if they need to or something [1324] like that so what I'm going to do is I'm [1325] just going to add a new column and I'm [1327] going to add it all the way at the end [1328] of this and it's just going to be called [1329] like DM Icebreaker and then I'm going to [1333] copy a template that I've set up here to [1336] sell my service and then I'm just going [1338] to like make it very easy copy and [1339] pastable um I think if I could go back [1342] in time I might do this on air table but [1344] I know that not everybody here has [1345] access to air table so maybe this is a [1346] better call Air table is just a lot [1348] easier to build these formulas and stuff [1349] like that um in it uh and then you know [1352] it's also a lot more I think [1354] straightforward for virtual assistance [1355] and stuff but that's okay so for here [1357] for this column I'm just going to write [1359] um DM maybe we'll go DM we can't camel [1363] case DM I'll just say [1364] DM uh and then I'm going to go back to [1366] the integration in particular and then [1368] we're not going to add a row I think we [1369] need to update a row or some like [1371] that let me [1372] see yeah it's probably update a row so [1374] first thing we got to do is we need to [1377] run this [1381] again um because we have a new structure [1384] here with a new um a new column I'm [1387] going to connect [1388] this and then I need to re use a [1391] different account I think I just have so [1394] many of these and I haven't really gone [1395] through and uh and swapped them and then [1397] what am I doing here I'm looking for [1400] Instagram no this might be shared with [1403] me so we'll [1406] do Instagram okay [1409] great and then the sheet name is going [1411] to be whatever the new results file is [1413] and the row number in our case uh we're [1417] just going to take the row number in [1418] from the previous Google sheet and then [1420] what we're updating here is the DM and [1422] it's going to be high and then we're [1424] going to grab the previous first [1428] name um the way that I'm going to do the [1430] the first name is I'm just going I mean [1432] I'm going to do a really hacky here I'm [1433] just going to say full name then I'll [1436] split this based off the presence [1439] of uh space I think and then I'm going [1443] to uh get this the first result of that [1448] and then I'm going [1449] [Music] [1450] to I guess DMS are usually in one line [1453] so I don't actually need to do a new [1455] line uh in order to keep the tokens or [1458] uh the DM as short as possible because I [1460] think there's like a DM character limit [1462] Instagram let me see what this is th [1464] characters that's actually pretty long [1465] we're probably not going to need this um [1467] I'm going to feed [1470] in this uh we should just replace all of [1475] the quotes with empty [1479] string that should work so this will be [1482] our oneline DM uh let me just check if [1484] my on line DM is going to include like [1486] punctuation so we got an exclamation [1488] point there we got like a period here [1490] and I got exclamation point so it's [1491] probably going to include [1495] punctuation um [1498] I thought you might be [1500] interested in [1504] X we [1508] do y and offer Z let me know if this [1512] might be worth a chat okay [1516] cool so now I'm going to run this puppy [1523] again going to test this out make sure [1526] that I updated that row [1531] um I guess since it's all on one line we [1533] don't really need to capitalize that [1534] first [1536] letter but anyway yeah that that seems [1539] pretty good um and then what we can do [1540] is we can populate this Instagram Fanta [1543] Buster scraping sheet with just like a [1545] massive list of uh of you know people [1548] and posts and and that sort of thing and [1550] we have a profile URL column here and a [1552] username so we should be able to you [1554] know in the future use this information [1557] to like index [1559] um any other database that we set up [1560] with Instagram information so like if [1562] it's a list of profiles we can use this [1563] as like a primary key and then use that [1565] to sift through if it's if it's anything [1566] else we can make it pretty simple and [1569] now like your sop for a a VA or [1571] something like that you know you might [1572] have I don't know another column here [1574] that's like status and then you know you [1576] might just be able to like do a check [1577] mark or something like that um but [1580] basically they just go through this one [1581] by one copy it and then paste it into [1584] Instagram DMS um send it and then you [1587] know check it is done and then just move [1589] on to the next one and that sort of deal [1591] and in this way you know instead of [1593] paying so really there are a couple [1595] benefits to doing this sort of approach [1596] if you guys are interested in you know [1597] how to systematize this more generally [1599] um you know like a lot of the time [1601] virtual assistants um you know live in [1603] much lower cost quality of living [1605] countries so like in the [1607] Philippines um you know where the [1608] average wage is maybe five or $6 doar an [1610] hour you can provide well actually I [1612] think it's substantially lower than5 or [1614] $6 an hour but like the five or $6 an [1616] hour is like the virtual average wage so [1618] you can provide a significantly lower um [1620] um wage on an hourly basis but you also [1623] don't really have to suffer any of the [1624] drawbacks if you think about the typical [1626] drawbacks of offshoring which are um you [1628] know usually some type of like language [1630] incompatibility or or you know a slight [1632] difference in culture or attitudes [1634] towards work and so in this way it's [1636] just a very simple straightforward [1637] streamline process where uh you get to [1640] leverage AI to do like the customization [1642] aspect and then all you have to do with [1643] the virtual assistance time is just sort [1644] of copy and paste and copy and paste um [1648] because you know we're using humans for [1649] this purpose we don't necessarily have [1651] to suffer uh anywhere near the same rate [1654] limit sorts of issues of Instagram word [1656] of the tech that we were using Bots and [1658] you know presumably if you're selling [1659] something via DM it's probably some type [1661] of high ticket offer like a lot of [1662] people do coaching via DM or or [1663] something like that so the5 or $6 an [1667] hour might net you like several hundred [1668] DMS with a conversion rate of maybe like [1670] half a percent 1% uh you can usually at [1673] least convert a sales conversation or [1675] two for like four or5 do and you know [1677] just for your guys understanding uh [1679] being able to like generate a sale [1680] opportunity or a sale or a book to [1683] meeting or whatever you want to call it [1684] for $ four or5 is like insane most [1686] businesses will spend uh you know [1687] anywhere between like 30 to 40 times [1689] that for qualified opportunities so yeah [1692] you know there's some issues with [1693] Instagram dming for sure like Instagram [1695] dming is uh I think you know you now [1698] lend in the requests pile so I'm not [1700] necessarily recommending that uh [1702] everybody drop what you're doing then [1703] use Instagram DMS or anything like that [1705] I've found a little bit of success with [1706] it uh for my own business a very tiny [1707] business and then I've also built [1709] systems like this for other businesses [1710] that have found substantially more [1711] success and particularly the coaching [1713] Niche but uh yeah just just wanted to [1715] give you guys sort of a sense of the [1718] sort of the order of magnitude value in [1720] a system like this even when that's not [1721] fully automated and even when that you [1723] know the Instagram um API sort of tried [1726] to stamp down very very potentially [1728] profitable so the question now is okay I [1730] showed you how to do this manually how [1731] do you do this on an automatic basis [1734] well there are a couple of caveats to [1736] this so I think I mentioned this to you [1737] before U because of the whole DM [1740] Instagram um API thing um we we sort of [1744] have like a little thing that we need to [1745] solve first before we can do this this [1747] session cookie lasts a certain amount of [1750] time and so what that means is in order [1753] for the system to run completely [1754] autonomously you need to update the [1756] session cookie every so often and [1758] everybody that's making videos on this [1759] stuff will not tell you this part [1761] because it looks really glamorous if you [1762] could just run a phantom Buster Loop [1763] over and over and over again right but [1765] in reality you know reality is always [1768] more complicated than Fiction right so [1771] uh in reality you need to take a couple [1773] of additional steps to make sure that [1774] this works and if you think about it [1777] let's say that the Instagram session [1778] cookie expires after two hours that [1780] means that every two hours that you want [1781] this thing to run you're going to need [1783] to make sure the session cookie is right [1784] and then if it's not right you're going [1786] to need to go and update it how do you [1788] update it well you can either manually [1790] go to this page and click connect to [1791] Instagram or you can use like a third [1794] party automation tool like a browser [1796] automation tool like what I was [1797] mentioning ear earlier um to go and then [1799] log in your website or Instagram and [1802] then retrieve the session cookie from [1803] one of the cookies and then use that to [1805] update some resource so why do I say [1808] this I say this because if I were [1809] building this out in practice what I [1811] would do is I would have a Google [1815] sheet and I would call this like [1818] authentication I would have [1821] [Music] [1822] um a list of the profiles that you are [1825] going to be using to scrape [1831] I would build it out so maybe I'm using [1833] Nix R to [1834] scrap I would then build it out so that [1837] we have a column here called session [1839] cookie and then we also have some like [1841] date last access so if I go back to my [1843] new results file I think I can just pull [1845] just going to pull a random timestamp [1847] here [1850] okay what I'm going to be doing is at [1852] the beginning of every um automatic [1855] execution of this Phantom Buster [1857] scenario which we can do through make I [1859] will look through the session cookie for [1863] the profile name that I'm using to [1864] access and then I will attempt to run it [1867] using that session cookie and then if [1869] the session cookie is valid it'll just [1871] continue down the flow and if the [1872] session cookie is invalid what it'll do [1875] is there'll be some error handle and [1877] then using that error handle I'll run [1879] another scenario that other scenario [1881] will be for my browser automation [1882] software which will then go out on to [1885] instagram.com you know spin up a web [1887] page try log in and then when it logs in [1889] it's not even going to do anything it's [1890] just going to like log in and then pull [1892] the session cookie and use it to update [1893] this it's then going to call back to the [1895] original uh Instagram scraper and then [1898] it's going to run the Phantom Buster [1900] module again with the session cookie [1902] that's sort of how all this looks from a [1904] high level um at least on the make.com [1906] set of things now if you want to do this [1909] in practice what you do is you go down a [1910] phantom Buster here and then you would [1912] have a module called launch a [1915] phantom and this is going to be like a [1917] mul scenario sort of deal so you'd have [1919] like one called launch of [1922] phantom if I go to map you'll see [1924] there's Instagram photo [1927] extractor I believe this is the one that [1929] I was using you'll see that one of the [1930] fields here is session cookie another [1932] spreadsheet URL profile URL is column [1934] name number of posts per profile number [1935] profiles per launch CSV name right this [1937] is like the the output file uh and so [1941] you know what what we would do is we'd [1942] have a Google [1944] sheet we can just copy this search rows [1947] we'd make this trigger we'd run this on [1949] some schedule so maybe I don't know [1951] every 60 minutes let's just do 120 [1953] Minutes we'd connect this and then uh if [1956] you remember I added a new page here [1960] called [1962] authentication now I only have one [1964] element here which makes it really easy [1966] but you may have several profiles that [1968] you're going to be using anyway we're [1970] going to run this puppy and then you see [1972] there's a big session cookie so what we' [1974] do is we'd feed in that session cookie I [1977] have to rec connect this and then I have [1979] to cancel this and then open it again [1982] make can be sort of finicky with this [1984] sort of with this sort of thing so just [1985] keep that in mind then I'm going to run [1988] a YouTube Instagram photo extractor go [1991] down to session cookie feed in the [1992] session cookie if we had a big [1994] spreadsheet URL of profiles then I would [1996] use that um for the purpose of this [1997] demonstration I can just use this [1999] profile URL and it should uh it should [2000] function [2001] similarly um the column name only [2003] applies if you're using spreadsheet URL [2005] and then number of posts per profile [2006] we're just going to do one number [2007] profiles prch we're going to do one CSV [2009] name I'm just not going to do anything [2010] and I'm just going to run this to show [2011] you guys how it works uh you can only [2013] get first post oh that's interesting I [2015] guess they have like an additional [2016] option via the the API that you can do [2019] there's Watcher mode filter results you [2020] can add some filters here save argument [2022] menual launch that's kind of funny uh [2025] whatever we don't need [2027] that okay so it's gone through and then [2029] it's gotten our authentication and then [2031] it's ran the Phantom but as you can see [2033] the output like it didn't provide [2034] anything in the output and so the reason [2036] why um they do this is the Phantoms take [2039] a certain amount of time to execute [2041] right so we don't actually know whether [2042] or not the Phantom is going to be done [2044] um like we we can't just wait for it to [2046] finish because it may be like five [2048] minutes it maybe like 40 minutes [2049] depending on how many profiles you want [2050] to go through so they sort of separate [2052] into a two-step design pattern they have [2054] the first scenario that sort of like [2056] launches the Phantom and then they have [2057] a bunch of other modules where you can [2059] create new scenarios that watch an [2061] output and so notice how I can't [2063] actually connect this to my flow because [2064] this is an act trigger only so basically [2067] what we have to to do in order to make [2068] this scenario work is we need to make it [2070] multi-step so number one is we need to [2072] launch Phantom [2074] Buster Instagram [2076] scraper just going to save this I'll go [2079] back to my example builds and I'm just [2081] going to create a new [2083] one um this sort of two-step design [2085] process just in case you guys are [2087] interested in developing these sorts of [2088] things um more often uh you use this [2091] basically every time you use like a [2092] scraping or a browser automation uh [2094] application just because again there's [2096] like a variable amount of time between [2098] when you'll launch something and then [2099] when you'll be able to like pull its [2100] output so extremely common [2103] um yeah so we're going to go back to [2105] example builds here we have launch [2107] Phantom Buster Instagram scraper I'm [2108] going to create a new [2110] scenario and then I'm going to [2114] say watch output of phantom Buster [2117] Instagram [2119] scraper just going to copy all the stuff [2121] in [2124] here I think there's something [2125] preventing me from clipping [2131] continue allowing this I see this is [2133] weird I don't know why this isn't [2134] allowing me to [2136] paste oh might be because I have two [2138] things that I'm copy and pasting yeah [2140] there you go just trying to copy and [2142] paste the the title as [2144] well any who then we are going to feed [2148] in this watch and output now notice what [2149] happens when you connect this you have [2151] just have the Phantom ID and that's all [2153] you have to put in all you're doing is [2154] you're just watching to see if that runs [2157] you'll also notice that this is not acid [2159] um what that means is or this is an [2160] instant and acid what that means is this [2163] actually just has to pull every certain [2164] amount of time to check whether or not [2166] you have uh your your Phantom Buster [2168] scrape has concluded so that's pretty [2170] annoying it usually leads to much higher [2172] token usage what this means in practice [2176] is I'd run this at the same interval [2178] that you're running the first scraper so [2181] you know if this is set up at 120 [2183] Minutes you know I'd set mine up at 120 [2184] Minutes too but I'd try and like do it a [2186] few minutes later so that you know if I [2188] know that the thing's going to do finish [2190] it like 120 Minutes i' i' do it here uh [2192] you can also use web hooks um but you [2195] know in order for that to happen you [2196] would need to know how long it takes if [2198] you wanted to use web hooks you would [2199] use um you'd make an HTTP request down [2203] here connect this and then on this end [2207] you would use [2211] um actually I think you use Phantom [2213] Buster get an output now that I'm [2214] thinking about it get a phantom download [2218] a result most likely or get an output [2221] yeah yeah okay I take that back we [2223] actually don't need to use watch and [2224] output we can just use get an output and [2226] what we can do is we can use uh web [2229] hook [2231] here set up our [2233] own and then we can create it so that [2236] it's um Phantom Buster Instagram scrape [2241] completed and we can actually call this [2243] web Hook from our other scenario which [2245] is pretty neat uh and then when we [2247] receive receive that um you know request [2250] then we can use that to trigger the get [2252] an output module and in what we'll do in [2256] order to feed this in is we'll feed in [2258] the well actually we don't even need the [2259] Phantom ID because we know what we want [2260] to get we want to get the Instagram [2262] photo [2263] extractor and then obviously we're not [2264] going to call this immediately we need [2266] some type of sleep or some weight or [2268] something um I wish there was a way to [2270] scale this up but uh you know you could [2272] just use like a you could just use like [2275] a sleep rule of thumb where maybe you [2277] multip the number of rows by some number [2279] of seconds or whatnot and that might be [2281] like a good proxy for how long it's [2283] going to take in our case I'm just going [2284] to use a flat uh 60c wait time and that [2289] should be good because I'm just doing an [2291] example on [2292] one so now I'm going to make a request [2294] okay what am I doing I'm calling this [2295] URL [2297] fantastic this is the web hook so I'm [2299] triggering it after 60 seconds then I'm [2301] going to catch this and then I'm going [2303] to feed it into Phantom Buster get an [2305] output then from Phantom Buster get an [2307] output [2307] we're going [2311] to um actually why don't we just run [2313] this first and see how this goes so I'm [2315] going to run this and [2317] [Music] [2320] then I'm just going to change the CSV [2322] name because I know that this is going [2324] to sort of run it uh a [2326] new okay great so I just trigger this [2329] and now we're sleeping for 60 seconds [2331] I'm going to go back to my homepage here [2333] and you'll see this is actually running [2334] now now because we're only doing a [2336] single page it should should run fairly [2340] quickly it's probably not going to take [2342] 60 seconds probably going to take 10 but [2344] you know I just want it to be really [2345] safe K rate says one post extracted and [2348] then the file is just result. CSV oh [2351] maybe I need to refresh this looks like [2353] it's C it's caching results or something [2355] like that so um that's all good any who [2358] looks like this is I don't know 15 [2360] seconds 30 seconds I don't actually know [2363] exactly what uh proportion of the you [2366] know I don't know if this is the 60 and [2367] no I don't think so I think this is [2369] probably 60 so it probably goes down to [2370] one quar okay cool so we're about [2372] halfway done uh what we're going to do [2373] next is we're going to catch that web [2375] hook and then use it to trigger the uh [2377] the Phantom Buster [2378] output I love screwing around with these [2381] much more sophisticated apis if I'm [2383] being completely honest well not apis [2384] but services like Instagram or Tik Tok [2387] or whatever because there are so many [2389] safeguards that they put in to prevent [2391] you from being able to access their [2392] information that in order to do so [2394] successfully you need to develop these [2396] very creative strategies applications [2398] and then uh when you do you know the [2400] results are very outsized because nobody [2402] else has the ability to execute at that [2404] level so very very cool anyway what [2407] ended up happening is we got an output [2409] um looks like there was sort of like a [2411] text out output where it's a container [2413] whatever yeah so it just gave us a what [2415] looks like a log which is nice um then [2418] there's a container ID where you get the [2420] output we should be able to download a [2422] results [2423] file I don't know exactly where the [2425] results file would be [2434] yeah we might just we might just do that [2436] so I'm just going to go to container ID [2439] and then I'm just going to feed it in uh [2441] manually for now just to verify what the [2443] format is of the [2446] output okay it's a buffer um so we need [2449] to convert this buffer [2453] into um text so I think we need to do [2455] like download a file or something [2459] I've since completely forgotten how to [2462] download the file so maybe we'll try [2469] HTTP so this is getting a file from a [2472] given URL uh but we need to convert this [2475] binary back [2478] into [2480] Jason maybe is there like a parse Json [2485] module we parse biner [2492] let me see [2495] here maybe one of these but I'm not [2498] entirely sure if I'm [2499] honest uh this is a binary string so I [2502] doubt [2504] it let me check to see if maybe know [2507] it's just any [2509] object yeah I had a flow here that was [2512] pretty similar um I've just forgotten [2514] how [2515] to dump this in a format that works let [2519] me just check to see if there's [2522] any I remember it was a [2531] um there's a download module of some [2533] kind [2538] so yeah this is an example of a similar [2540] system that was built in air table [2549] oh okay I guess you just parse yeah you [2551] know what I guess you could just parse [2554] it so we'll just drop parse here um for [2558] the purposes of [2562] this let me just check to see how long [2565] the output bundle [2569] is I think that's probably going to be [2572] okay not entirely sure so we're just [2574] going to run this puppy with this Json [2576] string [2580] no source is not valid [2605] Jason we're just going to feed this in [2607] to do some manual testing then I'm going [2609] to feed in the data field [2613] here just because I think I was mis [2615] formatted yeah it was mis formatted okay [2617] great so now I have the result object um [2620] looks like it parsed it but it didn't [2622] parse [2623] it didn't parse it in Json which is [2627] interesting I wonder if I [2630] do [2632] this if that would be enough let's run [2635] this puppy again and the hell out of [2637] These [2639] Warnings okay uh no that did not [2642] work we may just have to parse this [2644] twice [2645] honestly let me see what happens if I [2647] feed this same thing [2649] [Music] [2651] in um [2654] afterwards because uh make doesn't [2656] really or Phantom Buster doesn't really [2657] like [2664] strings okay we'll feed in 10 object not [2667] 10. [2669] object yeah okay now we have access to [2671] everything so it's sort of annoying that [2672] we have to purse this twice uh I [2674] remember I came up with the solution [2676] that made it so we didn't have to do [2677] this but whatever anyway so now we have [2679] uh we have a bunch of you know values [2682] here that we could use obviously for [2683] this um and we can use this to update [2686] the Google sheet I mean now that we have [2687] access to all this stuff I don't even [2688] know if we need to well yeah we should [2690] probably dump this into a Google sheet [2691] regardless so why don't we just run the [2695] open AI thing first we'll do the image [2698] URL is right [2701] here and then uh instead of updating a [2705] URL we're going to add the URL or add [2709] the thing to the sheet [2711] entirely and you know [2714] what I have to go and I have to do the [2716] annoying sheets authentication again so [2719] we'll add a new row [2723] here we will go through our shared with [2726] me I believe and then it'll be Instagram [2729] scrape [2737] yeah and then we're just going to um [2740] basically split okay actually we [2743] shouldn't call this new results file [2745] either we should call [2748] this [2751] um profiles let's do [2755] that yeah and we'll go over here and [2758] then we're going to have to refresh this [2760] because we just changed the name of the [2761] sheet and if you don't change the name [2762] of the sheet in um the Google Sheets [2765] module then the API call will be Mis [2767] formatted and then we'll just go through [2769] and then we'll enumerate over all of [2772] these do location we'll do location ID [2776] we'll do uh pubdate like by sidecar type [2780] caption profile URL username image URL [2783] post ID query timestamp and then the DM [2785] will just be the result result um and [2788] you know what no it's not just going to [2790] be the result oh I think I [2793] uh oh actually you know I could have [2795] just used this what the hell I'm silly [2802] man okay we're going to get the full [2805] name the result here is this [2808] result okay great that should be [2813] good um yeah that should be fine [2817] now we're going to do this we're going [2818] to test this Just Once on This flow just [2820] make sure this works we should add a new [2822] row to our uh sheet with basically the [2825] same information except from [2827] this seems you're enjoying your burger [2829] in your latest photo yeah so you know [2831] the um copy isn't the best in the whole [2835] wide world but I still think that it's [2836] reasonable and that's probably more than [2837] enough if I'm being honest I've seen [2839] much shittier campaigns run extremely [2842] extremely [2844] well now that we have this obviously we [2846] need a way to do multiple profiles uh [2848] and probably the way that I would do [2849] this is I would set up [2851] another sheet and then I'd say two [2854] scrape and then inside of two scrape I [2857] would do a phantom [2859] Buster [2861] run [2864] here if I go back to this dashboard [2866] there should be a way to let's just [2867] delete all this stuff annoying then [2871] we'll make a new one and we'll call it [2873] Instagram follower collector [2877] we'll use this Phantom uh I'm just going [2879] to do this as an example first so you [2880] guys can see so now we're going to [2881] actually go and get a giant list of [2883] followers for people so um mares [2886] brownley Instagram we just going to use [2888] this as an example it is unsurprisingly [2893] MKBHD for this purpose I'm going to just [2896] do 500 no actually let's just do 100 [2899] you'll see that it allows you to extract [2901] a large number of followers you can do [2902] 5,000 and 9,000 every 15 minutes so you [2906] know you do the math what's 24 time 496 [2910] time 5,000 let's say you probably do [2912] like 400k which is pretty huge and then [2914] number of profiles to process per launch [2916] you can have it rerun over and over and [2918] over and over again um yeah we're not [2921] going to do that because this is uh [2922] specific to a Google sheet and then [2924] we're good and again I'm also going to [2926] run this puppy manually let me rename [2928] this so it's simpler we'll call this [2930] bulk Instagram follower collector and [2932] then give this thing a run [2940] and yeah as I mentioned it's going to [2941] like extract a big list of followers [2943] it's going to do them pretty quick [2945] because basically what it's doing is [2946] it's going here it's clicking followers [2948] and then it's just scrolling through [2949] really really fast so pretty [2952] straightforward but anyway the result is [2954] you get this uh file here with a bunch [2956] of profile URLs which is nice and so [2959] what we can do then is we can download [2960] this as a [2962] CSV we go to our two scrape we can [2965] import this just so we understand sort [2966] of like the data [2970] format and then I'm just going to click [2972] replace I'm not going to replace [2973] spreadsheet I'm going to append a [2974] current sheet that way I don't replace [2977] the name and everything like that and [2979] you know one thing that you're probably [2980] noticing if you're still with me is uh [2983] you know when I'm doing these designs [2984] I'm sort of starting at the the end and [2986] then I'm working my way back so what was [2987] the end that we wanted well we wanted [2989] the Instagram information sorry we [2991] wanted the AI generated DM and then you [2993] know we start with that and then we sort [2995] of reverse engineer everything up the [2997] queue so from that I knew okay well in [2999] order to get that information I need a [3000] single profile okay well in order to get [3002] a bunch of profiles I need to you know [3004] have a list somewhere that I'm [3005] referencing okay in order to do that I [3006] need to store a Google sheet right uh [3009] logistically this is like first [3010] principles thinking and it's probably [3012] like the number one thing to lean on I [3014] would say um when you're building these [3016] sorts of systems out looks like you also [3018] get the profile URL of some of these [3020] people which is pretty cool uh sorry the [3021] profile image URL which is pretty cool [3023] um it's pretty blurry I don't know if [3025] this is going to be enough for AI to do [3026] anything yeah probably not I mean it's [3027] just a picture of a tree and it's like [3030] 160 pixels by 160 pixels regardless from [3033] here now we get the um the username and [3035] then we also get the profile URL and if [3037] you remember um the one thing that we [3038] need in order to query a profile is we [3040] just need the profile URL so we have the [3042] profile URL the username we have the [3044] full name not all of these have full [3046] names so we probably need to do some [3048] type of exception for if they don't have [3050] full names it also looks like not all of [3052] them are like first last like me I'm [3054] clearly a square cuz I call myself Nix [3056] or these people are carig good you know [3060] incredible India that's a hell of a name [3063] um may I have a jar of Americano please [3066] sh my [3069] love yeah so that's kind of annoying we [3072] could um set a character limit if we [3073] wanted to that's probably like a simple [3076] and easy way to to do this uh at scale [3079] so we could say you know over whatever [3081] maybe like 10 uh if the result of uh [3084] splitting and then getting the first [3086] thing is over 10 then we do not want to [3088] use that we just want to like have an [3090] empty space so it's just say high [3092] instead of high yes Shore meore 1 234 [3097] that's probably what I'd do but anyway [3101] okay great so uh yeah so This Is Us [3103] launching scraper for a single sheet I [3107] think so what we need to do now is we [3109] need to have another [3112] scenario let's call this like three [3115] let's call this uh like [3117] four we'll call these individual Phantom [3120] Buster [3123] scrapers then we're going to make a new [3127] scenario actually two probably two new [3129] scenarios now I'm thinking about it we [3131] need to make a Google sheet we might [3133] need to do one we might need to do two [3135] so uh what we need to do [3137] here is I'm going to say launch bulk [3141] Phantom Buster Instagram [3144] scraper and then um I'm going to copy [3148] some of the stuff just because uh we [3150] have some [3151] authentication sort of pre-created for [3153] us and just be careful you're not also [3155] copying the name because um essentially [3157] what happens when you copy a module [3158] under the hood is you're copying the [3159] Json of that flow then if you add a name [3162] to it the Json breaks and uh make [3164] doesn't allow you to paste it in but [3166] okay great uh what we're going to do [3168] here now is we know that we don't want [3170] to like just we don't need to reference [3172] a Google sheet actually we do need to [3173] reference a Google sheet what am I [3175] saying we need to get the authentication [3177] or the [3178] cookie so I'm going to paste this in [3181] this is going to be my [3183] trigger you know you might run this I [3186] don't know how often you want to run it [3187] depends on how many um how big you're [3189] going to have the scrap be I think I set [3191] mine to 100 just as an example so uh [3194] we're we're not going to do it very [3196] often so maybe this would be like you [3197] know run I don't know once a day or [3199] something like that maybe it runs like [3201] in the morning and then we just go [3203] through the list of results later on [3205] basically what you do is You' search [3206] you'd get the session cookie you'd then [3209] launch the Phantom here and you'd pull [3211] the session cookie from [3213] this um the profile URLs you can either [3216] store that information somewhere else or [3218] if you're like me and you're just using [3220] um [3222] Marquez I really don't know how to say [3223] that name Marquee [3225] brownley you would feed that in here [3228] um actually we need to make sure we're [3230] launching the right Phantom here I think [3232] I'm using the wrong one so let me go to [3233] the right one we're doing bulk Instagram [3236] follower collector that's [3238] right okay so session cookie would be [3240] here um we don't need a spreadsheet [3243] URL oh it doesn't actually just allow me [3246] to do [3247] one H that's interesting I don't know [3250] why it doesn't just allow me to do a [3251] single [3253] one wonder what happens if I just feed [3255] this into spreadsheet [3258] URL or maybe queries my [3263] intuition is that this would work but [3266] but we should probably try this out [3269] because my intuition has been known to [3270] be completely wrong [3274] before uh we need a session cookie too [3276] so why don't I go back to authentication [3278] and then steal the session [3280] cookie let's run this puppy let's go [3283] back here and just see if the run is [3285] okay or if we really need a Google sheet [3286] if we need a Google sheet then that's [3288] really [3291] annoying okay yeah no I was right um [3294] just because of like Phantom like the a [3297] lot of the time what'll happen with [3298] these scraping Services is they'll be [3300] developed by people without a very [3302] strong understanding of the English [3303] language and so um you know it's just a [3305] little bit more annoying for them to [3306] pick up on um like field names and stuff [3309] like that um I found that there's [3311] usually like a little bit of a little [3313] bit of of of give I I guess in like the [3316] titles of some of these fields and what [3317] happened in this specific scenario is [3320] instead of calling [3322] this um I don't know input or something [3324] like that they called it spreadsheet URL [3326] and and so you think that you need to [3327] supply a Google sheet spreadsheet uh [3330] instead you can just Supply like the URL [3331] of of Instagram uh that's cool man if I [3334] were working in French or whatever I'd [3335] probably have no idea what I was [3336] doing so completely understandable um [3339] but anyway in our case I just sort of [3341] thought back to hey you know inside of [3342] phantom Buster you don't just need a [3344] spreadsheet URL you can also just Supply [3346] a link and so kind of what's Happening [3347] under the hood I imagine is they have [3349] sort of options either like if it's a [3351] Google sheet then I want you to run the [3352] Google sheet scraper if it's uh an [3354] Instagram profile then I only want you [3356] to scrape that one Instagram profile [3357] using our Instagram profile scraper and [3359] that's sort of what happened here so [3361] yeah anyway so we can run this we can [3364] then sleep 60 and then once we've [3366] launched the Phantom we're going to have [3367] the same design pattern that we had [3368] before where we we get the results [3370] basically and then we use the results to [3372] update some sheet so I'm going to create [3375] a second scenario [3378] here um this is going to be let's [3381] see watch output [3386] watch output of bulk Phantom Buster [3388] Instagram [3389] scraper what we're going to need to do [3391] here is we're going to need to set up a [3392] web hook [3394] again this will be a custom web [3398] hook drop that puppy in and then um [3402] we're going to create a new [3403] one called bulk Instagram Phantom Buster [3410] scraper let me just be correct in my [3414] formatting and terminology here [3419] and then we need to feed this in as the [3421] URL that we're going to be calling um [3424] this is probably going to take a little [3425] ball longer so the Sleep 60 probably [3426] makes sense and basically the flow [3428] that's going to happen is uh you know [3430] every I don't know once a day at 8:37 [3432] a.m. we are now going to call our Google [3434] sheet we're going to use that to pull [3437] our session cookie we're then going to [3440] launch the bulk Phantom Buster Scraper [3442] on um mkbhd's profile I'm using this as [3446] static resource but you can imagine how [3447] in the Google sheet you might have [3449] another column or another sheet called [3450] like profiles to scrape or something in [3453] our case I'm just doing this because [3454] Marquez brownley probably has more than [3456] enough followers to keep us occupied for [3458] several lifetimes and then um you know [3462] before my microphone runs out of battery [3464] here uh you know then I'm sleeping for [3466] 60 seconds I'm then making an HTTP [3468] request to my next step in my scenario [3471] or in my in my flow and that next step [3473] is this second scenario which is now [3476] getting that web hook and then it's [3477] using it to download the [3479] result now what I want to do is I want [3483] to select the name of the [3485] container the name of the container is [3487] going to be bulk Instagram follower [3489] collector so I'm now going to download [3492] this uh looks like you [3495] can um containers created on March 30 oh [3498] I get it so every time you run it I [3500] guess there's a new container so what we [3501] need to do actually is we need to pass [3502] the name of the container in the in the [3505] call all here you could just say [3507] container undor ID equals and then click [3510] that in that'll work and then we can [3513] just grab the uh the container ID [3516] here will be container ID okay great so [3520] now we select this we download the [3521] result we'll parse the Json a couple of [3523] times so that'll be the first parse and [3526] then this will be the second [3528] parse um I don't know if it's called [3531] result object or whatever it'll be [3532] called but then all we'll do is we'll go [3534] into our Google Sheets and then we'll [3536] just add uh we we'll add rows um you can [3539] do this I mean like because of the way [3541] that this is set up we're probably going [3543] to have to do this one at a time but [3544] there are ways that you can add like a [3546] thousand rows or 100 rows to a Google [3548] sheet without consuming a 100 operations [3550] this just sort of like above the uh or [3553] sort of beyond the the purposes of this [3554] video so I'm not going to cover that [3556] right now but yeah now we have what's [3560] going to happen is we're going to have [3562] like a big list [3564] of um profiles and then this is way more [3568] work than I thought that it would be to [3569] delete all these things [3572] Jesus we're going to have a big list of [3575] profiles over sorry a big list of uh [3578] profiles under two scrape here with [3580] profile URLs and then you know once [3582] every two hours or something we're going [3584] to go through that profile list and then [3585] we're going to [3588] um scrape every profile in that list [3591] using the individual scraper which is [3593] over here and then we'll again launch [3596] another Phantom to do the individual [3598] side we're sleeping 60 here but we don't [3600] necessarily need to and then we are [3601] going to make a request to our other [3605] scenario to actually go out and then [3607] download all of those results from [3611] this what we're then going to do is I'm [3613] going to feed in this container [3617] ID to the download result module we're [3620] then going to parse it a couple times [3621] then we're going to feed it into Ai and [3623] then at the very end we're going to um [3625] add it to our our Google sheet row under [3629] a sheet called profiles where there is [3632] also a status column and then there's [3634] like a DM column that they can just copy [3637] and paste into the DM and this is sort [3639] of like you know how you automate [3641] several hundred hours of work I would [3644] imagine per month um to actually go and [3646] do the scraping and that sort of thing [3647] and then in doing so save you you know a [3649] lot of money that you can then just have [3650] a VA or somebody like that um actually [3652] be responsible for the for the sending [3655] so that's sort of idea behind this uh [3657] obviously there's still a little bit [3658] more that needs to be flushed out so let [3659] me just make sure that all this looks [3662] good so we're going to call the [3663] container ID here [3666] okay we're going to run [3671] this and then you know we're going to [3674] wait 60 seconds here so let me see how [3676] much I can [3678] do in 60 seconds um I think we're doing [3683] sheets here what we actually need to do [3685] is we need to like add add a [3688] sheet yeah so I need to add a [3693] sheet I don't think I'll be able to do [3696] this before it [3699] runs so I'm just going to set a block [3705] here well I guess it looks about halfway [3707] done uh basically what we're going to do [3709] is every time that this runs we're going [3711] to add a new sheet the sheet is going to [3713] be called two scrape that's where're [3715] going to generate that list of 100 [3717] profiles and then after we're done [3719] scraping them we're going to delete the [3720] sheet and then just regenerate it every [3721] time um that's probably the simplest way [3724] to do this at scale um sort of annoying [3726] to have to create a new sheet every time [3727] but that's okay okay great and I blocked [3730] this um so what do we do here we got the [3732] Phantom we made the request to the other [3735] web hook we got it with the container ID [3738] we then download the result now because [3739] this is multiple [3742] results [3744] um I don't know if the data or something [3748] was messed up so I'm not really sure [3749] what's going on [3751] there file name is result. [3759] Jason let's just get this container ID [3761] and then do this [3767] manually the fact that it's empty is [3769] weird because oh maybe the data on the [3772] Phantom Buster side of things is empty [3773] because I'm running the same search [3775] twice I hate when that happens yeah [3778] input already processed so that's pretty [3780] annoying [3781] um I think there's a way to disable this [3784] setting so that every time you run it [3785] it's new let me just [3789] see yeah this is Watcher mode only look [3792] for new followers so no we don't want [3799] that if you rename your results file at [3801] any point between launches the Phantom [3802] will create a new results file so I [3804] think the way to do this is we [3806] just [3808] um you know we just run this every [3810] single time or we we'd add a different [3813] name every single time just to make sure [3815] that every time it runs it's uh running [3816] off new [3817] data alternatively we could just set you [3820] know we could just say if this isn't new [3822] and if the results file is [3827] null [3829] then yeah actually that's probably what [3831] we should [3833] do we should say if length of buffer is [3836] less than whatever then uh don't proceed [3839] because this isn't like actually doing a [3840] new a new scrape it's not actually [3842] dumping any new followers in that's [3844] probably what we would do in [3846] reality however I don't really care [3848] about that uh because I I still want [3850] this like I still want to get the data [3852] of the last container so let me see if I [3855] could just do this man um manually so we [3858] can test this for [3860] now and then we can use it a full run [3862] later this is be bulk Instagram follower [3864] collector and then there should be a [3866] couple runs we ran it uh recently 45 and [3868] then we also ran at 35 so let me just [3870] check to see if this is short no this is [3872] pretty nice and long so we're going to [3874] run that puppy and then what do we get [3877] got a list of profile URLs great what do [3879] we get [3881] here we parse that and then we get a [3884] bunch of bundles great and so every one [3886] of these bundles is uh profiles and we [3891] can we could just add yeah okay so we're [3895] going to have to [3895] [Music] [3900] to [3903] um okay what we should do is we should [3906] actually add the sheet before we do any [3908] of this and then we should reference [3909] that previous sheet and then use this to [3911] add [3913] profiles so I'm going to move this over [3915] here we're not going to have a block [3917] anymore we're going to create create two [3923] scrape sheet then add add this puppy in [3929] um this is going to be the same sheet I [3933] believe over and over and over again so [3935] we should be able to just de feed the [3936] spreadsheet ID in and [3939] then oh I guess we can just select from [3941] the [3942] list oh it's probably going to be shared [3944] with [3947] me and we're probably going to need to [3953] reauthenticate okay we'll do Instagram [3955] Phantom buers we call this two scrape [3957] and we'll create a new one basically [3959] every time that this scenario runs and [3961] then uh actually we should probably do [3964] this after we do the Phantom Buster [3966] download result what am I doing this way [3969] we we should be able or maybe we even do [3970] it after this parse Jason because that [3973] way we'll know whether or not like the [3975] scenario worked and then if it didn't [3976] work it's not going to run and we can [3979] parse the second Json afterwards and [3981] then okay after this we have a bunch of [3982] bundles and so now we can just do add [3984] row [3987] and then we have to unfortunately go [3989] through the rig roll of selecting the [3991] spreadsheet ID again it's probably the [3995] man if I had five seconds for every time [3996] I tried to find a spreadsheet [3998] ID okay and then the sheet name [4002] um looks like we can only manually [4004] select the sheet name that's kind of [4007] annoying so we're just going to call [4009] this to scrape and then [4011] the spreadsheet ID that we feed in here [4014] is going to be the same as [4016] this column range I'm just going to say [4018] A to [4020] Z and then I imagine the data is just [4023] going to [4026] be profile URL uh username full name [4031] image URL ID is private is verified [4034] query [4037] timestamp okay this should be good what [4041] I'm going to do as a test is I'm going [4043] to delete this we're probably not going [4045] to have a header now that I'm thinking [4046] about it but that's okay then I'm going [4048] to run this on the same [4051] container we're going to parse the Json [4054] if this Json is a long string it'll [4056] continue otherwise it'll error out which [4058] is [4059] nice we could have another check we [4063] could say does not [4066] exist um actually that's not going to be [4070] correct uh let's just do length of [4073] whatever is greater than [4075] let's just say 100 [4083] characters that's a good hack for now [4085] then two scrape sheet we'll create the [4086] sheet called two scrape we'll parse the [4088] rest the Json and then we'll iterate [4090] through every bundle and then add it to [4092] the sheet that looks pretty good okay [4094] great let's run this puppy see what [4097] happens so it's now adding to the Google [4100] sheet if we go to two scrape you'll see [4102] that it's populating it quite nicely [4104] reasonably quickly would say uh we set [4106] it to 50 I think so we're we're only [4108] doing 50 awesome so that part of the [4110] flow looks good assuming that the [4112] container that we get is the right [4116] one then uh yeah everything should work [4120] there and then what we want to do is we [4123] want to we can't um select any of the [4126] stuff manually now we have to do it all [4128] automatic like using [4130] IDs so let me just see what the [4132] spreadsheet ID is here [4135] um the spreadsheet here it says [4136] Instagram Phantom Buster scraping so [4139] we're going to need to do this [4141] manually yeah this looks to be the same [4143] sheet which is nice the sheet name is [4146] going to be two scrape because we just [4148] created one called two scrape um awesome [4151] it's going to run and then I'm just [4152] going to [4153] run [4155] this and we see a bunch of results here [4157] which is nice now actually I don't even [4159] know if we need this anymore to be [4160] honest because uh we can just feed in [4162] the spreadsheet [4163] URL um and then the what H I wonder what [4166] the Google sheet spreadsheet URL here is [4167] going to be well it needs to be [4169] public so we can probably just feed this [4173] in [4175] right we do that and then this is going [4177] to be the spreadsheet [4179] ID we're not going to feed in profile [4181] URLs anymore uh we're going to do one [4183] post per profile one profile per launch [4185] uh actually no we don't want to do one [4187] profile per launch we want to do more [4189] then we have uh I'm just going to empty [4192] all of this sleep 60 we're probably [4193] going to do more than 60 so [4196] for testing purposes why don't [4201] we you know we got 50 here but for [4204] testing purposes why don't we just do [4206] like [4208] five you know anything that works with [4210] five should work with [4212] 50 and then [4219] um we may need headers this is really my [4222] only question we may need headers I [4224] don't know if we need headers we're [4228] screwed I think we're going to need [4230] headers because then we have to go [4231] through and then we have to like add the [4232] sheet at a line first with the headers [4235] and then we got to go and do everything [4236] which is super freaking [4239] annoying um you a Google sheet [4242] containing a list of yeah oh okay maybe [4245] we maybe we don't actually need [4248] this maybe we actually don't need um [4251] anything except for the profile URLs [4253] actually yeah we might need [4256] this okay yeah yeah I actually feel a [4259] little bit more competent confident [4260] about this now I feel more competent [4262] probably should huh okay let's do this [4266] um sleep we're not going to sleep 60 [4268] we're probably going to need to sleep [4269] substantially more than that and this is [4271] where you start getting into the [4272] question of like should I use a third [4273] party service to store my hooks right [4275] like I'm not just doing this for one [4278] profile anymore I'm doing this for like [4279] 100 or 500 or 5,000 you know the amount [4281] of time that it takes to scrape this is [4283] going to be so variable that you know I [4285] feel like it would be simple sorry it [4286] would be ludic ludicrous for me to try [4288] and do it on a simple [4291] um uh you know flat weight time okay [4294] anyway so we fed in the two scrape uh [4297] what I'm going to do is I'm just going [4298] to run this puppy and then I'm just [4300] going to see how the Phantom [4301] Buster run [4307] looks for the individual [4310] scraper this one here the photo [4311] extractor I should [4313] say so we're we're starting here and [4316] then I'm just going to run [4318] this yeah so actually we don't need to [4320] we don't need to do this at all we don't [4322] need to feed this in um even a tiny bit [4325] oh right right right yeah so what we can [4327] do is we can [4328] just click this and then just run this [4331] with the ID of the spreadsheet of [4334] interest and we can just hardcode that [4335] ID [4338] in oh yeah sorry I lied we we actually [4341] do need that because we need the session [4343] cookie don't we [4347] I lied I lied okay we'll go back here [4351] and um we're not going to do any of that [4353] we're just going to scrape [4354] authentication and then we're going to [4355] grab the the session [4359] cookie um and the syntax of this is one [4362] so I think I can just go to 11 one and [4364] that should be the same thing [4368] excellent okay um so I should say this [4371] is this may be scraping right now I [4373] don't know yeah missing cookie cuz we [4375] didn't Supply one so let's run this [4378] again with the correct cookie let's go [4380] back here um it's running which is nice [4382] I love how you get like instant feedback [4384] with this [4387] tool we're now successfully [4390] authenticating it's now going out and [4392] you know it's pulling in um photos for [4395] for each of [4396] these I would [4401] think it may be running still or [4405] it [4407] may have fed in just a my [4411] profile instead of the Google [4420] sheet let's see what happened here so we [4422] fed in spreadsheet URL we fed in number [4424] of post per profile one yeah that should [4426] be that should be [4428] working let's go back here now that we [4430] don't have my profile hardcoded in and [4433] run it again see what happens [4437] okay saying that it's running saying the [4439] input is already processed [4442] though let's try hard coding this maybe [4446] seeing how that [4458] works okay yeah so that that seems to be [4463] working okay uh no [4470] seems like [4474] it [4481] um is getting no posts from these [4486] profiles it's possible that none of [4488] these profiles have any post but I [4489] consider that [4491] unlikely oh right cuz they're [4493] private not all of them are going to be [4495] private [4497] though yeah yeah I mentioned that this [4500] works um this works primarily with uh [4504] non like you know the profiles need to [4506] be public of course um in experience [4508] probably about like 30% of profiles are [4510] public so the other 70% are not going to [4511] be uh but that's okay because you know [4513] we're working with such big numbers here [4515] that it doesn't really matter if they're [4517] public or or private or whatever you [4519] know if you're running 10,000 followers [4521] or whatever you still have 3,000 to to [4523] go with it just looks like none the ones [4525] that I supplied back there had a public [4527] profile which is sort of annoying um [4530] yeah that's freaking annoying [4532] man maybe we'll [4534] do nickf I don't know do I have another [4537] profile I think I have another profile I [4539] don't know for sure if that one is ex ah [4541] not entirely [4543] sure maybe I should just Source all of [4545] the people that have dm'd me on [4546] Instagram and just use you guys that'd [4549] be pretty fun no I don't think I'm going [4551] to do that um we'll just put these two [4553] in for testing purposes and then I'll [4555] just run this um anyway and I think one [4557] of those might be accessible maybe not [4559] both so let's run this again we're then [4563] going to go back over [4567] here um it's saying input already [4569] processed I think because this is just [4571] me my name so uh I'm going to define a [4575] different output [4576] name I'm just going to call this [4580] x we're going to run this again [4586] and I'm going to connect that to my [4587] sleep [4588] 60 so it's ran this it's now running and [4592] getting um a new input with successful [4598] authentication looks like we got a [4600] couple of files here which is [4605] nice okay and now we're waiting and what [4607] we're going to do on this end is uh this [4610] is number three right so now we're going [4612] to turn on number four and then number [4614] four is going to catch that output get [4617] the output it's going to download the [4619] result like we did before uh do paring [4621] and then it's going to dump it into the [4623] the open AI module to get that like [4626] custom [4628] DM and then yeah I believe that's it I [4631] think that's all we need to do um [4634] clearly it works with the individual [4635] URLs let me just double check see if [4637] there's anything [4639] else oh the times we should make sure [4641] the scheduling is correct yes so the [4643] bulk Instagram Phantom scraper let's [4645] just say it runs at like 8: a.m. um [4648] these [4649] [Music] [4651] Phantoms yeah I mean I've hardcoded in [4655] like the name of the profile but as I [4657] mentioned earlier you can do it [4660] elsewhere uh we're scraping very fixed [4664] number of profiles with fixed weight [4665] times which is unfortunate but obviously [4667] that'll still work we're checking kind [4669] of hackly to see if the results object [4671] is just greater than 100 characters um [4674] if it's empty then it'll just be less [4676] than 100 characters probably be like [4677] here or something so that's just another [4679] sort of hacky um solution but you know [4681] obviously it works we've been creating [4683] the two scrape sheet oh we're currently [4685] dumping in all of the information I [4687] don't think we need it we can just [4690] do um [4692] oops we can do just the profile URLs [4696] clearly because that's the only thing [4697] that [4698] matters and then um I'm going to allow [4703] you to download this BL BL [4705] print there's the authentication there [4708] the spreadsheet URL is obviously [4710] hardcoded to be my spreadsheet URL so [4712] you know if you guys are screwing around [4713] with this in the blueprint just keep [4714] that in [4716] mind um I'm adding a fake CSV name just [4720] called X here but that's okay and then [4723] I'm calling the container ID oh and then [4726] uh it looks like we had an error but [4727] I'll cover that in a second then we're [4728] catching and then we are getting the [4730] output of this and it looks like there [4732] is an output then downloading the Sal we [4735] are parsing [4737] this looks like the object that we got [4740] was no posts found so oh I think [4743] we're pulling the old [4745] container that's annoying but presumably [4748] that will not run when you have the new [4750] uh the new result and then there are [4754] three queries one says no post [4757] found actually all of them say no post [4759] found one just says post URL for some [4762] reason and then when we feed it into [4763] open a obviously it's not going to work [4764] work because you know we're not feeding [4766] in an image [4767] URL um so yeah there's [4770] that but I know the reason why this is [4773] happening the reason why this is [4774] happening is because if you think about [4775] it logically um the bulk run that we ran [4779] at the very beginning where we had the [4781] two scrape profiles only includes Nick [4783] under do Surf and then Nick saraf here [4785] which I think is like not working um I [4788] think I thought I had an additional [4789] profile but I don't think that I do and [4791] so because we've already pulled Nick [4794] notah like what five times at this point [4796] it doesn't want to continually do it [4798] unless we continually provide a new name [4799] which I'm not doing um you can obviously [4802] continually provide a new name um you [4804] could just like randomize a number and [4805] then just use the number as the name or [4807] generate like a new uyu ID or something [4809] like that that's probably a good idea [4811] now that I'm thinking about it why don't [4812] we use that as the um uh as the name [4816] yeah we'll generate a new uu ID for the [4819] CSV name and then we'll also do this [4825] here that should fix this problem [4828] because the likelihood of like a hash [4830] Collision or whatever or or a collision [4831] is so low is to be [4833] meaningless yeah okay um yeah I mean [4836] honestly that that should work now uh we [4838] should probably put in some error [4839] handling so that if the Json is empty [4842] and we run through this we're not [4844] actually [4846] um you know we we might want to add like [4848] a little bit of a sleep here as [4851] well so why don't we call this and then [4854] why don't we just add like a couple [4856] second sleep you don't have to do this [4858] but if you are on a relatively low open [4861] AI plan like I'm on like the highest [4863] plan so I can technically do I don't [4864] know five trillion queries a minute or [4866] some like that the number of tokens [4868] I can do per minute is honestly quite ex [4870] quite uh incredible but if you're on [4872] like the beginning plan or something [4873] then you'll probably run into rate [4874] limits unless you sleep a couple seconds [4876] between each of these so I'm just going [4877] to say sleep two and then uh we should [4881] have some type of error handle where if [4883] error is no post [4888] found then it just doesn't run and so it [4891] just doesn't convert that into the next [4893] um row yeah but yeah aside from that you [4897] know assuming that you're using good [4898] data and assuming that the followers [4899] that you're getting are obviously um you [4901] know on like a profile that's big enough [4903] uh you know you can use my hardcoded [4905] Approach or you can add some some [4907] additional context if you'd like but [4909] yeah that's how you build an Instagram [4911] scraper what I'll do now is I'm going to [4912] download the blueprints of each of these [4914] scenarios and then I'm just going to put [4915] them up on my make.com for people who [4917] want to make real money doc I'm also [4919] going to create a Google Drive which [4921] contains all of the blueprints that I've [4923] generated so far uh because a lovely [4925] follower of mine told me that uh as it [4927] is right now it's sort of unintuitive [4928] you sort of have to like open up a [4929] blueprint which is then a bunch of Json [4931] and you got to like download it manually [4932] which is stupid so I'll try and make it [4934] as simple as humanly possible but in [4936] short this is how you build like an [4938] automated Instagram scraping machine as [4940] I mentioned earlier there are a couple [4941] caveats you know the session cookie [4943] issue is one that you can solve and I've [4945] solved before for a bunch of people but [4947] you just need to like develop a third [4948] party browser automation to basically [4950] sign in Instagram or whatever service [4952] you want every X hours uh so if there's [4955] interest there then just let me know and [4956] I'm more than happy to record a video on [4957] it aside from that yeah I hope you guys [4959] enjoyed that was pretty interesting and [4961] hopefully I showed you guys my thought [4962] process when designing these things I [4964] didn't really expect it to be a for [4965] scenario flow but uh just as I was [4967] developing it you know starting to put [4968] the pieces together I didn't do any of [4970] the the mapping ahead of time which you [4972] know usually makes this a little bit [4973] easier just as I was doing that I was [4975] like yeah we're going to need one to [4976] launch we're going to need one to watch [4977] then we're going to have like a twep CU [4979] we'll need to multiply all that by two [4981] any who uh yeah thanks so much for [4983] watching if you guys have any specific [4985] requests just leave them down below [4985] otherwise like comment subscribe do all [4987] that fun stuff I will catch you on the [4988] next video byebye

Video: https://www.youtube.com/watch?v=G-DoI1_zmFQ
Title: EVERY Make.com Function: How Each One Works & Which You Should Use
[0] what's going on everybody it's Nick now [1] I've made around a million dollars over [2] the course last 12 months with make.com [4] I've both built automations for other [6] people and then sold them and I've also [7] used them for my own businesses to help [9] generate Revenue Drive sales and that [11] sort of deal and what I want to do over [12] the course of the next hour maybe hour [14] and a half depending a feisty we are uh [16] is go through literally every single [17] make.com function that I've picked up on [19] my time on this platform not every [21] make.com function is useful but knowing [23] every make.com function will go a long [25] way towards making you dangerous on the [26] platform and that's what I want to do I [28] want to show you practical examples of [30] every single function Works uh so strap [32] in and let's get into [36] it okay so what I have here is I have [38] our scenario Builder open I've named [41] this scenario every make.com function [42] how each one works and which one you [44] should use and in order to make this as [46] simple as humanly possible I'm just [48] going to go and select the tools set [50] variable [52] value going to unlink this drag this [54] over here and then this is just going to [56] be our playground and it's where we're [58] going to uh manipulate you know these [61] make.com functions and and so on and so [63] forth I'm also going to zoom in a little [64] bit just so everybody can see my screen [65] make.com could be a little bit tough to [67] see especially with all the sunlight out [69] there um yeah and we'll sort of walk you [71] through things end to end now if you [73] click on a field and you open it up uh [76] on the right hand side a little model is [77] going to pop up the first thing you're [78] going to see is a star and that just [80] refers to this is like the variable [81] picker that lets you see variables for [83] modules uh before you but what I'm going [85] to do in this video is I'm going to [86] cover everything except for that so I'll [87] cover the settings I'll cover the math [90] functions the text binary functions the [92] date and time functions functions for [94] working with arrays and I'll even cover [95] some custom and system variables now [97] I'll be honest um the general functions [99] and the math functions while they're [100] useful they're probably not as useful as [102] most of the other ones so uh just being [104] cognizant of the fact that most people [105] on YouTube will watch like there's like [107] a linear relationship between the length [108] of the video and how many people are [110] remaining at the end of it that's [111] obviously not going to be you but uh [112] just to be cognizant of that I will [114] start with the most commonly used [115] functions the text and binary ones the [117] ones that I personally think drive me [118] the most revenue and simplify my life [120] the most and then I'm actually going to [122] work backwards so we'll do text and [124] binary first then we'll do date and time [126] then we'll do math then we'll do General [128] and then finally we'll do custom and [129] system [130] variables so without further Ado let's [133] get into easily the most powerful of the [135] whole function Suite the text and binary [138] functions so first things first is you [140] have a bunch of different um vaguely [143] rectangular things here I'll start with [145] the [146] simplest excuse me the simplest is [149] length now length I think is pretty [151] self-explanatory essentially uh make.com [154] has a bunch of different data types one [155] of the data types is string another data [157] type is like number or int another data [160] type is array another data type is [161] object or collection length basically [164] just tells you the length of a string or [166] of an array and so if I type a very long [169] string in here which is just a [170] collection of characters well I should [173] be very careful with my words when I say [175] the word collection because that's also [176] a make.com term it's uh technically an [179] array of characters and then we run it [180] um you'll see the output is bundle one [182] playground 15 so the length of a very [185] long string is equal to 15 this is an [188] extremely useful function I use it all [189] the time um specifically because it [192] helps me perform like string operations [194] if I'm attempting to get I don't know [196] like a URL or something like that um I [198] can check to see the length of that URL [200] before proceeding or if I'm running [202] something in open Ai and I'm having you [205] know my system generate a certain let's [208] say I'm generating a proposal or [209] something something like that I'm having [210] to generate a certain string or snippet [212] of text uh you know the way that a lot [215] of apis and a lot of like proposal [217] platforms and a lot of crm's work is you [219] know depending on the length of the text [221] other elements in the page get moved [222] around and I'm all about maximizing the [224] customer experience I want things to [225] look really nicely so you know sometimes [227] I may count the length of a generation [229] and then if the length isn't between a [231] certain character limit and another [232] character limit I just do it again and I [234] sort of redo the flow um this helps me [236] get like that nice looking sort of like [238] paragraph wise layout a page uh super [241] super useful and I also use this in [242] conjunction with a bunch of other [244] functions which I'll show you right now [246] um the next function is called lower [248] lower is hopefully pretty [250] self-explanatory again basically you can [251] feed it any string and then by passing [253] it into this lower function if we run [255] this module it will convert that into [257] the lowercase version of that so we fed [260] in all uppercase hello and then we got [262] out a lowercase hello and this is pretty [265] useful when you are dealing with certain [267] apis that have naming conventions where [268] everything needs to be lowercase um you [270] can also do this to format URLs like [273] part of uh my work when I was developing [276] like automated content sites was I'd [278] have you know some URL or whatever and [281] then at the end of the URL I'd have you [282] know the name of a blog post and a lot [284] of the time to make it as simple as [285] possible I would just take the title of [286] the blog post and then I would feed it [287] into the URL uh but obviously you know [290] the title is usually Capital case right [294] or start case or whatever it's called um [296] so in order to prevent that from I guess [299] just like ruining the Aesthetics I would [301] always just pass that in the [302] lowercase and then uh you know get [304] something like this instead and I'll [306] show you how to encode URLs in a second [307] as well that's quite useful the next is [309] capitalize this is pretty [310] self-explanatory you know [312] internet actually let's say you are um [315] sending an email uh and you know [317] sometimes the data in your CRM has like [319] a lowercase proper noun so maybe it's [322] Peter lowercase if you pass it through [324] the capitalized function then you'll [325] have your uppercase P Peter uh stuff [328] like this is extremely simple and I use [330] it all the time anytime I'm dealing with [332] some type of like formal communication [334] or you know I'm attempting to like [336] maximize the quality of the perceived [338] customer experience by being very uh you [340] know correct and that sort of thing so [342] in email Communications anytime I'm [343] drawing from an API or whatever I will [345] always just run it through capitalize or [346] start case um this just helps me you [349] know get that one in a 100 chance when [351] the data isn't formatted properly or [353] somebody on the team doesn't put it in [354] right this this fixes it so always good [356] to to implement stuff like that uh start [358] case is another example of the [359] capitalize function it's just instead of [361] capitalizing the first letter of a whole [362] string it'll capitalize the first letter [364] of every word so you know let's say I [366] have a guy and his name is Peter Smith [368] right if I am feeding this into some [371] proposal or something like that I will [373] use um start case and then feed in the [375] first and the last name and this will [376] just sort of like cover my own ass so [378] that I never run into an issue where you [379] just have like some poorly formatted uh [382] you know introduction or whatnot okay [384] now we get into some functions that a [386] lot of people aren't very familiar with [387] and I'll touch on them regardless but I [389] I want you to know that these are very [390] very rarely used asky is a good example [393] so you know if I'm [396] um if I am working with people in I [400] don't know French or other languages [402] where accents are more common a lot of [404] the time unfortunately certain apis do [406] not allow you to send uh characters that [410] have accents or non-standard characters [412] characters that you wouldn't necessarily [413] find like a query keyboard and so asky [415] is just a way to fix that and [417] essentially uh if I were to feed in [419] Clementine I don't actually know how to [421] say that off but it has that Aon that [424] little up Accent on the E and then if I [426] were to feed it into this function [428] asky and then run it essentially what's [431] happening is it's just pulling out any [432] character that's not standard or not [434] part of the asky ASCII set now obviously [437] I think in most cases you don't actually [438] want to do this you just want to like [439] remove the accent and So functionally [441] speaking like in practice what you [442] normally do is you'll feed an asky with [444] a thing and then semicolon and then true [446] and then what this will do is this will [448] actually keep the letter it's just going [449] to remove the accent and then turn that [451] letter into a standard one so you know [453] you'll find this in like older apis [455] especially that are asky coded and they [457] they only you know accept asky [458] characters um and if you're dealing with [460] one that's sort of hit or miss you know [461] sometimes APS of shitty documentation or [463] that sort of BS uh you know just pass it [465] through an asky function just to be sure [467] so yeah that's sort of like data [469] cleansing if you want to call it that [472] okay now we get to one of my favorite [473] functions of all time the replace [475] function the replace function has tons [477] of utility uh it's extremely versatile [479] and can do so much with it so I'm going [481] to spend a little bit of extra time on [482] here but essentially this replace [484] function you know if you've ever used uh [486] find and replace in Google Sheets or [488] something like that you're probably [489] pretty familiar with this but it's just [490] a way that you can take a string and [492] then depending on whether that string [493] has you know some other thing uh you can [497] you know replace that with with with [498] your own string of your own choosing so [500] if I wanted to replace I don't know here [503] here's a great example A lot of the time [505] we have like domain names um and then I [508] don't know we want to isolate certain [510] parts of the domain so let's say we know [512] every single time the domain name is [513] going to be Google but then there's some [515] query and maybe there's some name at the [516] end of it like Catarina uh a really [518] quick and easy hack is just to replace [520] the Google [521] part and then you can just replace that [523] with an empty string and I mean if you [526] run this you're only going to get the Q [528] equals Katarina you can also uh let's [530] say we only wanted to like get the the [532] Katarina part we could just replace the [534] whole question mark query and then you [536] know the end of it is like we receive [538] some URL parameter and maybe that's [539] that's some URL parameter we're going to [540] use in another part of our flow so you [542] know a lot of utility there a lot of [543] things that we can do man it's a sunny [545] day today so yeah replace is very very [549] valuable in that case you can also do [552] obviously simpler things um one of the [554] primary use cases that I personally use [556] for replace is you know I use a lot of [558] proposal generation software like my [559] whole the thing that I'm most interested [561] in with make.com is always like [562] developing very simple but like very [565] high Roi like customer experiences like [568] where somebody on on my team will do 5 [570] Seconds of work and it'll deliver an [571] experience that the customer thinks took [573] them like 10 hours right I love that [574] sort of thing that's what gets me really [575] excited that's what gets me up in the [577] morning so you know one of the things [579] that I I do all the times I'm always [580] like involved in some proposal [581] generation or some asset generation or [584] you know contract generation or whatever [585] and unfortunately something that happens [587] very often with uh proposal platforms is [590] they don't allow you to send new lines [592] in text and what this means is you might [594] write something or generate something or [595] have a template and then you'll pump it [597] into an API like panado or quillow or [600] something like that and then you know on [602] the back end it'll just strip all of the [603] new lines and then it'll just give you [604] this huge like wall of text which is [607] really ugly and nobody really wants [608] right so we can actually fix that using [610] replace um let's say I feed in a text [613] and it's like hi Peter I hope you're [616] doing well I'd like to talk about XYZ [619] right and we feed this text as it is [621] into an API well a lot of the time the [623] API just going to strip all those new [625] lines what we can do in order to fix [628] this actually let me see if make.com [629] itself strips these new lines no [631] make.com keeps the new lines but anyway [633] what we can do in order to fix this is [635] we can use a the text and binary [637] function we can use a special keyword [639] here and we can replace all new lines [641] with like an actual hard-coded new line [642] character and most apis will take this [644] hardcoded new line character and then [646] use it as a way to reconstruct um spaces [649] or or new lines in the string and so [650] what I've done here is I've pasted in [652] this text then we're going in replacing [654] all the new lines and so if you think [655] about it like there is a new line [656] character sort of in between these two [659] um the comma here and then the I on the [661] next line so it's taking that it's [662] cutting it and then it's replacing it [663] with this back slash n it's doing the [664] same one over here and then the end [666] result if I run this again is now I have [668] it in a format that you know these apis [670] like where it's all just sort of in one [672] line and then the new lines are just [674] replaced with this you back slash end [675] character and then because this is just [677] like a universally agreed upon new line [678] standard on the back end their API will [680] reconstruct the new line sort of [682] structure so very very nice I use [684] replace all the time probably one of my [685] top five [687] functions so that's replace let's talk a [689] little bit about trim now if you guys [691] have seen my previous videos you'll know [692] that I very routinely will like scrape [694] websites and then I have a bunch of like [696] unformatted text um specifically if I'm [699] doing I don't know something where I [701] take a piece of uh I don't know I'm [704] attempting to isolate or scrape like a [705] URL or maybe like a person's name or [707] whatever A lot of the time I'll end up [709] with a bunch of white space to either [711] side so that might be like I don't know [713] like a bunch of spaces here then a name [716] and then a bunch of other spaces over [717] here and what you can do is if you just [719] pass this through the trim function [720] it'll just automatically remove all the [722] white space before and after and so the [724] the way to use this and the reason why [726] you might want to use this is just if [727] the formatting is inconsistent sometimes [729] there's no white space sometimes there's [731] like one white space maybe 10% of the [732] time passing a string through the trim [734] function will just sort of cover your [735] ass and make sure that you're okay so I [737] use that pretty often as well okay sweet [740] we're now on to Upper upper is basically [743] like the opposite of lower which is uh [746] you know I mean pretty appropriately [747] named I think make.com did a good job [749] here you know if we pass in something [751] that's lowercase mostly and then we pass [753] it into the upper function it will [755] convert every single character into its [758] uppercase form so that's hopefully [760] pretty straightforward uh we also have [761] substring substring is super cool I [763] don't really use it as often as I would [765] probably like especially these days [767] because I've just replaced all of my [768] usage of substring with replace but uh [770] you can do some pretty cool things with [771] substring let's say you're I don't know [773] finding a list of URLs or something and [775] you're attempting to isolate the domain [776] name because you want to feed that [777] domain name into some other service and [779] maybe generate domain name variants for [781] Like A Parasite SEO campaign you can do [783] that really easily with the substring [785] function uh let's say I'm just [786] attempting to isolate the google.com [788] part well what substring basically [790] allows you to do is you feed in a string [792] and then you can slice it based off of [794] like the number of characters uh in the [796] string you know it's easi for me to show [798] you with an example but basically if you [800] know I'm attempting to isolate this part [802] the Google Doom part and I know that all [804] the like you know every time an URL [805] comes and has this https thing it's kind [807] of ugly and maybe I don't want it uh I [809] can just uh I can just like strip that [811] out and then only get the google.com [813] part and the way that I do it is I go [815] one two 3 four five 6 seven eight I go [818] eight characters [819] deep and then I go all the way to the [821] end of the string and the way to do that [823] is you just calculate the length of you [827] know the thing that you're feeding in so [829] we're using a length function to get the [830] length of htps col backback google.com [834] that'll be the end of our substring and [836] then we are just counting the number of [837] characters at the beginning and this is [839] just allowing us to isolate the domain [841] name that we're interested in which is [842] you know google.com hypothetically so [844] you can do SUB you can use substring [846] pretty creatively to do stuff like that [848] um you can also use it to isolate like [850] uh query parameters like I was [851] mentioning earlier um and you know a lot [853] of the time you you'll be using this in [854] practice when dealing with links and [856] sort of processing things and URLs and [858] and that sort of deal so substring could [860] be very [861] valuable okay there's also uh index of [865] and you can use index of in conjunction [866] with substring to do some pretty cool [867]  but uh you know I had an example [869] earlier and actually just to make this [871] even simpler why don't I divide this [873] into two parts we'll have we'll Define [876] something called URL and this will be [879] maybe let's make this a little more [881] relevant you know your API goes here [884] you're a pig O's okay that doesn't [887] really let just go your api. comom and [890] then uh you know you have like a bunch [892] of a bunch of query [897] parameters and this is the UR all that [899] we're sort of feeding in here and then [900] in the playground what we want to do is [902] uh we want to get the index of you know [904] if we oh I need to save this [907] unfortunately and then access this again [909] okay so we want to get the index of this [912] URL and then we want to find the um [914] question mark Q equals so we want to get [917] like the or I guess what we could do is [919] we could go yeah no we could do like com [921] question mark equals whatever but [922] basically we want to get the index of [923] that question mark so we want to see how [924] many characters into that string does it [926] occur so it occurs 19 characters in and [929] then maybe we want to grab the substring [932] of index of so this is going to equal 19 [934] characters in for that specific string [936] and then I'm going to jump ahead a [937] little bit here and just show you like a [938] math function we'll do a plus and then [941] we'll do I think question Q I think [943] that's three um and then we're going to [945] go all the way to like the length of the [948] URL I think that's 12. [951] URL and then we run this you know we can [954] accomplish I don't think that worked let [957] me just make sure that this index of URL [960] question mark query parameter is working [961] correctly so that equals [964] 22 now we're getting the substring of [967] URL from [970] 22 and then onwards let me run this [975] puppy uh we're getting it from the [977] beginning right now up to 22 so that's [980] not really what we want to do let's do [981] length of URL [984] now this may not work oh yeah there we [987] go it did work um [989] um let's make this a [992] two no let's make this a [996] three okay great pretty convoluted [998] example but I think you guys get my [999] point if we run this now then we receive [1001] only the the query parameters that we're [1003] interested in and then what we can do [1004] with this uh using another function [1006] which I can show you in a second is we [1008] can separate them based off of uh you [1010] know based off of the presence of this a [1012] or what we could do is instead of three [1014] we could just cut right to the [1016] Q we could run this [1019] now we have question you know um [1021] whatever question mark Q [1024] equals actually let's do plus one [1028] here run this one more time we'll get [1031] qal XYZ and a equals BCD and now we [1034] could just split [1036] this based off of the presence of an amp [1039] percent and now we have you know [1041] basically an array with various [1043] parameters and you know if you wanted [1044] you could further split the substrings [1046] to eliminate the Q equals and the a [1047] equals um this would B basically help [1049] you isolate a bunch of URL parameters [1051] which you could then use in a later part [1052] of the flow or maybe use to recall an [1053] API or something like that so hopefully [1055] that wasn't too convoluted uh we're [1057] going to get into a couple of functions [1058] here that I really don't use very often [1060] um but you know I told you that I would [1062] cover every function so I'm going to [1063] talk about them the first is two binary [1065] binary is just a basically like a [1067] onetoone representation or a mapping of [1069] characters in uh in numbers and so the [1073] reason why I show this is because I just [1074] put the letter a in there lowercase a [1076] and then it um evaluated to 61 if I put [1079] you know the letter B in there it'll [1080] evaluate to 62 if I put the letter C in [1083] there it'll evaluate to 63 I think you [1086] know if I put the letter Z it'll be like [1087] 97 or 98 or something oh I guess it's 7A [1091] that's because it's an heximal anyway [1093] you're basically never ever going to use [1094] binary um there are some like Fringe [1097] cases in which you'll be evaluating I [1099] think uh like data that's coming in and [1101] then needs like there's some apis that [1103] will request data in binary and so you [1104] can just feed in whatever you want then [1106] send it in binary but you can just think [1107] of this as like a it's like translating [1110] from one alphabet to another right a is [1112] equal to 61 B is equal to 62 uh you know [1115] C is equal to 63 whatever all you're [1118] doing is you're feeding it your string [1119] and then it's translating it one for one [1121] into this big binary representation and [1123] then you can send it to an API which [1124] maybe like only accepts binary so in [1126] practice I probably used the two binary [1128] function like one time in the last year [1130] uh so it's probably not something that [1131] you're going to use very often I [1132] wouldn't really worry too much about it [1135] okay let's keep going um right before we [1137] do looks like my face is pretty white so [1140] let me just well my face is pretty white [1142] that is correct my face is very white [1144] let's make this a little bit [1147] lower okay I think I fixed it um great [1151] so let's keep going let's do the two [1152] string function uh two string is pretty [1155] interesting I mean I wouldn't worry too [1156] much about type conversions and stuff [1158] like that but to keep things simple and [1160] to you know explain it in a way that [1162] everybody understands there are a bunch [1163] of different um uh like variable types [1166] there's like uh a Str string which is [1169] obviously just a collection of [1170] characters there's like a number and I [1172] think it's called num or maybe number in [1173] make.com but that's usually just like 1 [1175] 2 3 4 and you know if something's a [1177] string it's kind of hard for you to like [1180] use the plus operator between two [1181] strings like what is you know hello plus [1185] how are you equal right like [1187] mathematically can you really perform [1188] mathematical operations on strings like [1190] that turns out you can but it's a little [1192] more complicated you know you can do one [1194] plus two that's pretty straightforward [1195] right um the reason why we have these [1197] different types is to make it very [1199] simple to like Define things that we can [1201] and can't do with numbers and strings so [1202] like you can do one plus two but you [1204] can't do like a plus e for instance [1206] right um make.com is actually pretty [1208] liberal with this and so they actually [1210] let you get away with way more than [1211] you'd be able to in like any programming [1212] language which is good because the [1214] purpose of make.com is to like help you [1215] make a bunch of freaking money not to [1217] you know nerd out over academic theory [1219] of strings and ins and floats and all [1221] that but uh but you know two string [1223] is basically just a way that if you get [1225] a number let's say you get like 17. [1228] whatever [1229] and then maybe you want to use this as [1231] maybe you want to like use this in like [1233] a proposal or something or like you you [1235] know there's no real mathematical [1237] function or purpose to have this 17. 349 [1240] 348 uh you want to use this in like [1242] another value that maybe formats it [1244] better or something like that then you [1245] just convert it to a string or there are [1247] going to be some instances in which you [1248] have special operators stuff like I [1251] don't know null or whatnot that you are [1253] sending um and maybe you want to like [1256] convert them to a string for whatever [1258] reason you can use that the two string [1259] operator to turn the null from this like [1262] special variable into like an actual oh [1264] I don't think I can actually do that [1266] that's unfortunate um maybe two maybe [1269] true is a better example of that you can [1271] convert like this Boolean operator this [1274] true from you know like a Boolean item [1277] into like a string instead and then [1278] maybe you could do I don't know like [1279] upper or something to it if you wanted [1283] to convert this for some API that [1285] hypothetically we want to take capital [1286] letters and if you're working with an [1288] API it would only take capital letters [1289] you should uh you should stop your [1291] subscription immediately them okay [1294] so that's two string encode URL and [1296] decode URL you know I I very rarely use [1299] these but um essentially you know how in [1301] URLs there are like if I were to put a [1304] space here and then I would go like ASDS [1306] ASDF ASDF I would past it somewhere else [1310] um you know if you pay close attention [1313] you'll see that you know that space that [1315] I added between here has now been [1317] converted into this like percentage sign [1319] 20 the reason for that is because URLs [1321] like they're sort of a universal [1322] standard where URLs do not accept like [1324] spaces and they do not accept certain [1326] characters because this would make it I [1328] think like insecure when you are [1330] accessing a resource on the web or [1331] whatever uh because some of these [1333] characters like reserve characters that [1334] use in like programming and stuff like [1336] that so you don't really want to allow [1337] anybody to like do programming stuff [1338] here right like Drop tables or whatnot [1342] it's a programming sort of joke and I'm [1344] very lame so I'm not going to do that [1345] again uh but you know encoding a URL [1347] basically just allows you to get a bunch [1349] of text that you want to put into a URL [1352] format like edit a whatever and then um [1355] it'll replace all of the characters that [1357] are not really accessible or allowable [1360] in URLs with these Ampersand numbers so [1363] Ampersand 20 is a space I think aand 26 [1365] is like an ampersand you know there a [1367] bunch of different characters [1368] essentially that that you can encode uh [1370] in url and so what you're probably [1373] noticing is like a big function of all [1375] of these string functions or one of the [1377] main use cases a lot of these string [1379] functions just converting from like one [1380] encoding format or one language or one [1383] alphabet to another uh and you know [1385] that's a lot about what programming on [1386] the web nowadays honestly is you just [1388] have an API that only accepts one format [1390] or one language and then you're using [1392] another API which outputs things in [1393] another one and your job is just to [1395] connect the two you know it's just to [1396] convert things from one format into [1397] another make.com is the glue that allows [1399] you to do that so decode URL is pretty [1402] simple same sort of idea you know if I [1404] have like a big function like [1407] hello how are [1411] you and then I pump that in it'll just [1414] take that and then replace it with the [1416] spaces or the characters that you know [1417] um people are more used to seeing in [1420] strings and so you might use this pretty [1421] often if you are doing some type of like [1423] scraping where you are identifying a [1425] bunch of URLs on a page and you know [1427] sometimes you'll see all sorts of [1428] characters and they're all encoded and [1430] they have like hashtags between them and [1432] they have like number sign 20s uh what [1434] you can do is you can pull that and then [1435] you know like feed that into some type [1437] of artificial intelligence thing to [1438] maybe recreate or maybe rephrase a slug [1440] and then you could use that as like the [1441] slug of a Blog poster or whatnot lots of [1444] stuff you could do with encoding and [1445] decoding URLs although in practice to be [1446] honest I don't really use it that often [1449] okay so on that note where we're doing [1450] encoding or changing from one language [1452] to another um something that I think [1453] everybody that wants to make a large [1455] amount of money with make.com in the [1456] future should get in the habit of [1457] learning is a little bit of basic HTML [1460] but you know if you're unfamiliar with [1461] it HTML is just like a it's just like [1463] another language where you can basically [1467] enclose elements within these um uh [1470] right or left greater than [1473] symbols so maybe like B and then the [1477] presence or absence of these modifies [1479] how the text is rendered on the browser [1481] so for instance like you know lower B [1484] greater hello and then lower back SLB [1487] greater this uh basically just bolds the [1490] word hello for you you know if [1492] I uh bolded the hell and then left the O [1495] out it would render as like a bolded H [1497] and then like a non bolded o and so you [1500] know a lot of the time this is a very [1502] special language and because it's like [1504] Universal hypertex markup language is [1506] used on the web like this is how all of [1508] these web elements are being marked up [1510] basically if we go onto the back end of [1513] of these you know if we view the page [1514] Source you'll see it's just all H well [1516] maybe not all HTML this is mostly [1517] JavaScript is a bad example [1520] but you know if you if you look closely [1523] you just have a bunch of HTML here [1524] that's sort of like marked up and [1525] whatnot um because this is so Universal [1528] uh there are many instances in which [1529] like apis or services do not want to [1532] allow you to use HTML in them because [1533] it's a security risk or because of some [1535] other formatting reason and so this [1537] function Escape HTML just lets you um [1540] basically remove HTML and then replace [1542] it with like something that is [1543] equivalent that is also understood to be [1545] regeneratable so I just fed in this like [1548] uh you know [1550] hell o right here and then what it did [1552] is it replaced the um less than symbols [1555] with and LT that sends for less than and [1557] then semi colon which I think just means [1559] character over and then there's a b and [1561] then there's an and greater than [1563] semicolon that just means that that [1564] character is over as well then we wrote [1565] hell then it was less than back SLB and [1568] greater than o I think the O stands for [1571] oh actually no the O is just in my [1572] string never mind so yeah you're [1574] probably not going to use that super [1575] often but I figured I might as well [1577] cover it now you will probably use oh [1579] sorry there's a one more called Escape [1581] markdown markdown is just sort of like [1583] um an alternative HTML you can think of [1586] it as where instead of doing these um [1588] you know left and right greater than [1590] symbols you are instead using hashtags [1594] and so um you know in HTML there is an [1597] H1 and an H2 and an H3 and these are [1599] like headings and you know in the past [1601] they corresponded to the size of the [1602] heading so like H1 would be like your [1604] biggest heading H2 might be like a [1606] subheading H3 might be like a sub [1607] subheading right well Mark down allowes [1609] you to do the equivalent thing in fewer [1611] characters just by using a hashtag so [1613] maybe instead of you know that H1 thing [1616] we just replace it with this number sign [1617] and then a space space and then it says [1619] header you'll know if you've watched my [1620] videos in AI that anytime I'm prompting [1622] Ai and trying to get it to like output [1624] some some article or some content I will [1626] always prompt it in markdown and I'll [1627] say use markdown ATX format um because [1630] that way I can like preserve a bunch of [1632] information uh related to headings and [1634] subheadings and that sort of thing and [1635] so you know if for whatever reason the [1638] API or the service that you're [1639] connecting with does not accept uh [1640] markdown then you can escape the [1642] markdown and it'll just replace it again [1644] with its own sort of character set uh [1646] and then you can regenerate that on the [1647] back end [1649] okay great that stuff's super annoying [1650] so let's get to the cool strip HTML [1652] I think I showed everybody here um or [1655] all of my longtime Watchers in a [1657] previous video how easy it is a scrape a [1659] website with make all you do is you go [1660] to the HTML or HTTP request module and [1663] then you put in the URL of your site so [1666] in my case I'm doing left click. a right [1668] if I just run this [1671] puppy and then I click and then check [1674] out the data you'll see that I just [1675] scraped the entire website I have all of [1677] the HTML the it all it took was like a [1679] couple of buttons this is everything [1680] that is present on my website just in [1684] HTML format but HTML is really long and [1687] you know a lot of the time I'm feeding [1689] content like this into Ai and I don't [1691] really want to spend a ton in [1693] tokens I mean you know how much does [1694] this cost this is [1696] 62420 right uh instead what you can do [1699] is you can take the output of that and [1701] then you can escape the HTML so I'm just [1704] going to add one more variable set [1707] variable here and then I'm going to feed [1709] in this strip HTML I'm going to run and [1712] we'll show you the difference between [1713] before and after before the HTML coming [1716] out of the HTTP makeer request module is [1719] huge and it's massive and you know [1721] there's some words here that I think we [1722] understand right process optimization [1724] but it's wrapped in all these tags but [1726] if I look at this strip HTML um output [1729] then you'll see that there's no HTML [1731] here at all all it is is just pure text [1733] and this is now so much shorter this is [1734] something that you can easily feed into [1736] AI save yourself a ton of money while [1738] doing it um and then you know maybe have [1740] it tell you something about the website [1742] so I use uh strip HTML quite often [1745] there's also a designated module called [1747] HTML to text and you can use this module [1749] it does the exact same thing as strip [1750] HTML I think it's maybe has some slight [1752] differences in how much how it evaluates [1754] line breaks or some like that but [1756] really not that big of a deal um but [1757] this is a whole another module so you're [1759] basically consuming an additional op to [1760] run this and if this is something you're [1762] doing hundreds or thousands of times a [1763] day obviously you want to minimize the [1765] consumption of these Ops wherever [1766] possible you want to run more profitable [1767] flows try and use the uh strip HTML [1770] module instead okay great so that's that [1773] let's keep moving on what other [1775] functions do we have to work [1777] with um contains contains is something I [1779] use all the time if you have an array um [1783] let me create an array [1785] here we're going to talk about this in a [1787] second but a very quick and easy way to [1789] make an array is just to like split a [1794] string based off the presence of a comma [1797] or you know some D limiter character and [1799] so what I'm doing here is I'm creating [1800] an array with three elements John George [1802] and Paul and then I'm just splitting I'm [1804] I'm splitting based off the presence of [1805] this comma sort of a hack but anyway if [1808] I were to run this module I fed it in as [1809] a string and the output is I get like a [1811] little array data type that's why it [1813] says array in the in you know sort of [1816] light gray text there uh and then I can [1818] like access indexed elements of this [1820] array I'll cover that in a sec but [1821] essentially so what I'm doing is I'm [1823] going to feed in this array and then I'm [1824] just going to check to see whether this [1826] array contains George if I run this [1829] you'll see that the output is a Boolean [1831] it's a true or or a false and so now [1833] that it's a true or false now I can do a [1835] bunch of cool with it you know I'm [1836] going to cover if statements later but [1838] you know the if statement I can feed in [1839] like if true then do something else and [1842] by feeding in contains like this and [1844] then using contains as opposed to like I [1846] don't know like a filter I could feed in [1849] like every every item in here I could [1851] iterate through this whole thing and [1853] then like filter it one by one I'm [1854] saving a a boatload of operations it's [1857] the sort of like a smarter way to do [1859] checks to see if an element is is [1861] visible and then use that as some other [1862] part of your flow so I use contains all [1864] the time you're probably can use it as [1865] well I think I just showed you how the [1867] split function works but essentially you [1868] feed in a string then you feed in some [1871] delimiter and then you um can divide [1874] that string into an array with however [1876] many elements are delimited delimiter is [1879] just a separator so in this case I'm [1880] going to use this vertical line as a [1882] separator and I've uh I've put it sort [1885] of my format the split is you add the [1886] string and then you add the sep [1948] the quickest way to consistently isolate [1950] an element of of an array or URL or [1952] something like that based off the [1954] presence of a [1955] delimiter okay that about covers the [1957] most important parts of string next up [1960] there are a bunch of what I'd consider [1961] unimportant functions uh I probably [1963] never use these even once in like a real [1965] function for a client or for my own [1966] businesses but I'll cover it just for [1968] brevity uh just for completeness sake [1970] the md5 function is basically like an [1973] encryption scheme you know how earlier I [1975] showed you the two binary function and [1976] then a was equal to 61 B was equal to 62 [1979] C was equal to 63 and so on md5 is [1982] basically it's a similar idea it's just [1984] a way to like encrypt a string like [1987] let's say this is my password and I if [1989] you feed this string into this md5 [1991] function and run it the result will be [1994] this long non-human interpretable thing [1997] um but you know you can regenerate the [1999] original string easily by applying like [2001] the inverse md5 function and I don't [2003] know if they have like an inverse md5 [2006] but let me see [2008] md5 to string online let's see if they [2011] have [2012] this you know let's say I stumble upon [2015] this thing in the web and then [2019] I decrypt this the result is this is my [2022] password so essentially you can think of [2024] this as like another alphabet that I'm [2026] converting all of my letters into it's a [2028] little bit more complicated than that [2029] because you're performing some [2029] mathematical functions that relate I [2031] think to the length of the array and all [2032] that or length of the string and all [2034] that but uh yeah just a very simple [2036] and easy way to think of it and your [2037] you're probably never going to use this [2039] and if you find yourself using make.com [2040] for like cryptographic encryption [2041] decryption stuff you're you're probably [2043] not using make.com the right way [2045] make.com should be extremely simple a [2047] lot of the time it's like strings arrays [2049] and dates uh you're usually like [2051] modifying some external data source that [2052] like other team members have access to [2054] not [2055] passwords there are also variants of the [2058] md5 so you know the same idea applies [2060] for Shaw one sha 256 sh 512 these are [2063] just increasingly complicated uh ways of [2065] encrypting and decrypting data so md5 is [2067] like the simplest sha 20 or 512 might be [2069] the most um complicated and if you run [2072] this through Shaw 512 for instance [2074] you'll see the string is a lot longer [2076] and you know mathematically it's a lot [2078] more secure essentially if you want to [2079] like encrypt and decrypt there's also [2081] base 64 which is just another conversion [2084] method just like to Binary where instead [2086] of converting it to Binary you're [2087] converting it to uh what's called base [2089] 64 you know a lot of people may or may [2092] not be confused by stuff like this but [2094] I'll be honest you you really don't need [2095] to know this sort of in order to [2097] make it very with make.com I didn't know [2099] any of this stuff I was not necessarily [2101] very proficient computer programmer when [2103] I started this I watched a bunch of like [2105] online YouTube tutorials and I like I [2107] knew what HTML was I knew what markdown [2108] was but I wasn't good at using them I [2110] never really built anything of value uh [2112] but even though I lacked that knowledge [2114] I was still able to go very far with [2115] this so if what I'm saying doesn't [2117] really make sense to you or if you're [2118] thinking ah man when the hell am I going [2119] to use this don't worry too much about [2121] it just uh keep on trucking along you'll [2123] probably find Value in other sections [2125] okay great that is string text and [2128] binary functions next up I want to run [2130] you guys through the second most [2132] important feature of make.com which is [2134] the mathematical functions so let's get [2136] into it now mathematical functions are [2139] pretty interesting because they're I [2140] think there are a couple of hand me- [2141] downs from like programming or integrat [2144] or kind of more like nerdy um academic [2148] features of make.com which you know most [2149] people don't don't really use in [2151] practice but I'll walk you through them [2152] regardless uh the first is there's this [2154] Pi variable now I think a lot of most [2157] people here probably know what pi means [2158] Pi is just like the mathematical [2160] relationship between the radius of a [2161] circle and I think it's circumference or [2163] something like that yeah I think it's [2164] radius to circumference um if it's not [2167] then sorry area to radius Jesus man it's [2170] been a while since I've hit up math um [2172] anyway 3.14159 whatever it's this long [2174] string uh a long number you're probably [2176] never going to use this in practice [2178] unless you're working specifically with [2180] like some math package or math Library [2182] um I have certainly never used this [2184] before and if you find yourself again [2186] doing math and make.com more than just [2188] like simple addition or summation or [2189] averages or something you're probably [2190] using it wrong so any you can do some [2192] cool with it but yeah probably not [2194] for for monetary purposes the next uh [2197] variable here is random and this is [2199] probably like my most commonly used math [2201] thing ever uh random allows you to [2204] generate numbers between zero and one I [2206] believe inclusive and you're probably [2208] like well zero and one like that's sort [2210] of annoying why the hell do I care about [2211] zero and one can't I like just set you [2213] know a a minimum and a maximum have it [2215] generate a random number that way um [2217] yeah I think ideally you would but you [2219] can do it really simply by just [2220] multiplying this random number by some [2222] you know number so in my case five so [2225] now instead of generating 0 to one I'm [2227] generating 0 to 5 um you're also [2229] probably thinking well like why does [2231] this matter 3.3 58 when am I ever going [2233] to need to like generate a number with [2234] 16 decimal points and have that be [2236] relevant well you don't really need to [2238] the math Library includes a very [2239] convenient function called round when [2242] now you can just like generate a an [2243] integer randomly so now it's generating [2246] four now it's ating one right and now [2249] you're probably thinking well when the [2250] hell is that useful man let me tell you [2253] uh one of the most common features in [2255] project management is like randomized [2256] assignment or like randomized load [2258] distribution to different members on the [2260] team and you can accomplish this really [2262] quickly if I go back to my previous [2263] array generator string and I add two [2266] more names let's say let's add a couple [2269] of female names in there okay so John [2271] Erica Paul nixer so if I if I then [2275] generate actually let me just run this [2276] and show you guys so if I have like a [2278] team roster with five people John Erica [2281] Paul Nick and Sarah and then I want to [2283] randomly assign work to one of them what [2286] I can do is I can and I'm jumping ahead [2290] a little bit I'm using the get function [2291] here but I can feed in an array and then [2293] I can feed in the index of the person [2296] that I want to select from that array [2298] and if I randomize that index then [2299] basically every time I run this I'm [2301] going to be generating a randomly [2302] assigned person so now I'm you know I'm [2304] picking Paul this next time I'm picking [2307] Paul again Paul's pretty lucky okay [2309] maybe there's something wrong with my [2310] thing okay yeah there's probably [2311] something wrong here um let me see get [2316] playground no that should work my god [2319] did we seriously just generate Paul four [2321] times wow this just the likelihood of [2322] that is very low I think that's like 0.2 [2324] raised to the three yeah that's like 8% [2328] anyway um yeah so yeah the way that this [2330] works is it's basically just round or [2332] not round robin it's just randomly [2334] picking people's names um and then I [2336] think I needed to add another person [2338] here which is probably why it's not [2339] working uh on that run but any who the [2342] the point that I'm making is you can use [2343] this very simply to randomize things [2345] that you might need some element of [2347] Randomness too like selecting a person [2350] on the team to assign a certain task to [2352] or whatever now obviously there are [2353] different ways to do this sort of Rand [2355] uh random assignment you can also do [2357] round robin assignment which is just [2358] when you go one after the other after [2359] the other after the other but this is [2361] just one that I use quite often I'll [2363] also use this to um generate content a [2365] lot of the time so like a lot of the [2368] time you know when you're generating [2369] content you want to vary the formatting [2371] of the content and stuff like that so [2374] you know if you're using templates you [2375] might want to randomly select templates [2377] uh you know that template 15% of the [2379] time that template 30% of the time that [2381] template 40% of the time to provide the [2383] illusion of your content being random [2385] maybe on some you have like two [2386] paragraphs then an image on others you [2388] have like three bullet points and then [2389] like an exclamation or a table on the [2392] next section you might have like a bunch [2393] of images and then you might have like [2394] some quotes uh you can randomly select [2396] the likelihood that every one of those [2397] are going to pop up by using this random [2398] function and then using that in [2400] conjunction with get and then feeding [2401] the output of that to some other thing [2403] so I do all of those quite often and uh [2405] yeah I mean random and round are [2408] probably like my two most commonly used [2410] math functions as a result of that okay [2413] let's walk through a couple of these [2414] other ones uh average is pretty [2415] straightforward you basically just [2416] calculate the numerical average of a few [2418] numbers you can feed these in one at a [2420] time so I've fed in three and eight the [2422] average of this unless I'm silly should [2424] be like 5 and a half yeah um or you can [2426] also feed in an array so you could [2428] theoretically if you had some big number [2429] array you could feed it in here and then [2431] just calculate the average of that um [2434] this is similar to a bunch of other [2435] functions let me skip ahead here um like [2438] sum sum does the same thing so you just [2441] add up three and eight there's no real [2443] point to use sum when you could just use [2445] addition I think that addition uh the [2447] addition operator here is just a lot [2448] more straightforward so i' encourage you [2450] guys to stick with that Max just helps [2452] you identify the highest number in Array [2454] so max of 3 8 and 10 obviously is 10 the [2457] Min of 38 and 10 if we replace this [2460] would be three um you can feed in arrays [2462] to basically all of these mathematical [2463] functions will be the same I'm just [2465] using individual numbers here to be [2466] simple and and quick um and then yeah I [2470] believe that's it for yeah those so [2473] let's cover seal and floor now um just [2477] like just like round sorry uh lets you [2480] take let's say we have like [2482] 1.9 just like round allows you to feed [2484] in 1.9 and then as an output get two [2488] seal and floor allow you to pull a [2490] number up or down to a hole um quite [2493] easily but there's some Nuance here and [2496] I think it can be pretty difficult for [2497] some people to understand if they they [2499] don't sort of have that like intuitive [2500] um programmer sort of brain at this [2503] point anyway basically seal will return [2506] the smallest whole number well integer I [2509] should say but the smallest integer that [2511] is greater than or equal to a number and [2515] if we just parse this in language and to [2516] show you of examples like if I have 1.9 [2519] the smallest whole number greater than [2521] 1.9 is going to be two right um it's not [2524] going to be three because three is not [2525] the smallest whole number the next one [2527] up is two it's also not going to be like [2528] one or anything because I'm looking for [2530] a number that's greater than this but [2532] likewise if I were to feed in [2534] 1.1 it would this number would still [2537] evaluate I should say to two because two [2539] is the smallest whole number greater [2541] than [2542] 1.1 doesn't matter how close we are to [2545] the floor uh this function is Seal so [2547] it's grabbing like the next number up [2549] essentially so if you think of it I wish [2551] I had my tablet here but I'm in Prague [2552] and I I'm a little Limited in terms of [2554] stuff but uh you know if if you think [2556] about this like a number line where [2557] they're like uh little notches on this [2559] board and it's 0 1 two 3 basically [2562] anywhere you are on the number line if [2564] you do the seal function you'll just go [2565] to like the next big Notch next big [2568] Notch right uh floor does the opposite [2572] so the floor of 1.1 is going to be one [2574] right the floor of 1. 1999999 n is also [2578] going to be one because you know on that [2579] number line if I'm all the way over to [2581] the right really close to two doesn't [2583] matter right the nearest notch on the [2585] left side is one so it's going to pull [2586] you back so that's how those work um and [2590] you know I don't really use seal and [2591] floor very often I usually just use [2592] round uh but some people use seal and [2594] floor all the time I think I used floor [2596] in my content generator aside from that [2598] I really don't use it okay great now we [2601] have two very useful functions which I [2603] wanted to cover in conjunction there's [2605] parse number and then there's format [2606] number and I use these all the time one [2608] of my big use cases is you know I deal [2610] with money so I'm sending out proposal [2611] requests I'm sending out contracts I'm [2613] sending out like stripe invoices [2614] whatever and I want to be able to format [2617] money what do I mean by that [2619] well um let's say I have a number and [2622] that number is this long ass number I'm [2624] charging a lot of money here um you know [2628] this number isn't very pretty right well [2630] maybe I'll make this a little simpler [2632] that way it's not going to be let's say [2634] I'm charging I don't know 120,000 for [2637] something if I were to in my beautifully [2640] worded proposal just stick this number [2642] in with no formatting I think it would [2643] look kind of [2644] stupid um and so what this allows you to [2647] do is this allows you to [2649] essentially I feel like I'm about to [2652] sneeze this allows you to essentially [2654] apply some formatting to a number um [2656] based off like pretty common conventions [2658] now I'm in Europe right now so the [2659] convention is like a DOT and then the [2661] thousands but you can change the um [2663] hundreds and the thousands separator [2665] pretty easily by um putting a semicolon [2668] and then putting the number of decimal [2670] points you want your resulting number to [2671] have which I want zero and then to put a [2673] decimal separator which in my case is a [2674] period and then a thousand separator [2676] which in my case is a comma and if I run [2678] this now uh what I'm going to get is I'm [2680] going to get 120,000 with like that nice [2681] beautiful comma in the middle which is a [2683] lot more human interpretable human [2684] readable and let's say I wanted to turn [2686] that into like a dollar figure I just [2687] add a dollar sign ahead of it and then [2689] I'd run this module so I've converted [2691] like [2692] 120 just a number that maybe I resulted [2694] from like a mathematical calculation or [2696] whatever into nicely formatted string [2698] with like the Thousand separator uh put [2699] in the right place so I use format [2701] number all the time and you know it just [2703] really makes numbers interpretable if I [2705] run this with a bunch of extra zeros [2706] notice how it's now converted that to [2707] 1.2 billion and it's just you instantly [2709] know because you could see the three [2712] commas the inverse of this is parse [2714] number a lot of the time uh if you are [2716] scraping or something like that they'll [2717] be numbers and the numbers will be [2719] like or whatever right maybe there's a [2722] dollar sign there too or something and [2725] maybe you want to do something to it you [2726] want to like multiply the number by two [2727] or maybe add some I don't know you're [2729] doing some project management and part [2731] of your project management flow involves [2733] getting a PDF with like the request for [2735] proposal and then taking the the budget [2737] and then multiplying it by 1.5 to like [2739] give yourself some internal room well [2741] you can feed in that number and then you [2743] can format like you know if I if I look [2745] here I fed in dollar sign one like this [2747] terribly formatted number which makes no [2749] sense and then the output of this was I [2751] got this nicely formatted number and [2753] then what you can do is you can now run [2754] mathematical operations on this so I can [2756] now do a multiply by two or maybe 1.5 or [2759] something like that and then I can run [2761] it and now I can get the other number [2764] and then what I do is let's just make [2766] this a little less [2769] dumb okay great so this is my 1.5 [2771] billion or whatever multiply by 1.5 [2773] right so I'm going to run this input was [2775] 1.5 billion the output is 2.3 billion [2778] and now what I can do is I can feed this [2779] into a format number module add a dollar [2782] sign add uh zero decimal points and then [2786] add my separator and then run it again [2788] and I've basically taken in a number or [2790] a string I've turned it into a number [2792] then performed some mathematical [2793] operations on then I've reconverted into [2794] a string and then maybe I can send that [2796] back or use it in like some other [2797] function so these are very very [2799] important and that's that for math [2801] functions we are now going to move on to [2803] the third most commonly used function [2806] category which are our date and time [2808] functions I use date and time functions [2810] all the date and time uh essentially [2812] there are two different ways to [2814] represent dates in programming and you [2816] know make.com more specifically the [2818] first is a time stamp time stamp is just [2820] like uh well let me run it and show [2823] you Tim stamp is the number of seconds [2825] from January the 1st 1970 which you know [2828] if this is the first time that you've [2829] done anything like this you're probably [2830] like why the hell are we picking the [2831] number of seconds from January 1st 1970 [2834] the reason why is because basically just [2835] a bunch of computer guys got together [2836] and just agreed hey we do need like a [2838] standardized way to count from some date [2842] in order to like make all our computers [2843] work let's just Pi January the 1st 1970 [2846] okay everybody shook hands and this is [2847] the format that we now use called Unix [2850] timestamps and essentially um the reason [2853] why we use this is because it just makes [2855] it really easy to back calculate dates [2857] and like that I mean number of [2858] seconds if you just multiply or divide [2860] seconds by 60 now you have number of [2862] minutes and if you divide that by six [2863] you have number of hours divide that by [2864] 24 you have days divide that by [2866] 365.25 I think you have number of years [2869] right so it's just very easy from a [2870] mathematical perspective just to hard [2872] wire this in and then use this as uh [2874] sort of a frame of reference and so know [2877] there are two sort of ways to represent [2878] it the first is that time stamp and then [2879] the second is um a very long sort of [2885] agreed upon date time format um which [2888] you know make just refers to a date but [2890] essentially what it's doing is it's [2891] taking the time stamp and then it's just [2893] applying a bunch of functions to it to [2895] render like a date and time in human [2896] readable format like March 29th 2024 at [2899] 4:42 a.m. so pretty cool that way um [2902] like in my experience I most commonly [2904] use the the date and time format and [2907] make through using the Now function but [2909] there are always going to be some apis [2911] that are sort of pesky and sort of [2912] annoying that are going to request that [2913] you use time stamps so just get to [2915] understand what both are and like I [2916] didn't even know this until maybe like [2918] three months ago and I'd made tons of [2919] money with makeup until that point in [2920] time so isn't super critical just make [2923] sure that you at least understand the [2924] difference between the two so uh why [2926] does this matter well if you have a [2928] function that can easily take a Tim [2930] stamp or you know evaluate the current [2931] date and then if that date is an easily [2933] understood format that any API sort of [2935] gets intuitively you can just pass this [2937] now and it'll just automatically know [2938] you're referring to like today you don't [2940] have to do any conversions you have to [2941] do anything you can do a lot of cool [2943]  with it like if I want to add I [2946] don't know let's say I want to set a due [2947] date I have a task coming into my [2948] project manager CRM and I just want to [2950] set a standard due date in one week well [2953] underneath here you see the functions [2955] there are tons of add seconds add [2957] minutes add hours ad days add months add [2959] years and essentially what I can do is I [2960] can use the add days function to take [2962] today's date and then just add seven [2964] days to it then if I run this I now have [2967] April the 5th 2024 at 4:44 a.m. what I [2971] can do then is I can use this in my API [2973] call or in my integration maybe I'm [2975] creating a new project and clickup then [2977] I can automatically set the due date [2978] exactly to seven days after the task is [2980] created or the task arrives this allows [2982] so much freedom and flexibility in the [2984] way that you set due dates you can store [2986] like a big project tracker with the [2988] deliverable and then the amount of time [2989] it takes and then you can just pull from [2991] that and then use that to replace you [2995] know um you know the ad days um day [2999] variable so a lot of freedom that you [3000] have there um all of these other [3002] features work the exact same as ad days [3005] add seconds add seconds add minutes add [3007] minutes add hours add hours add days add [3009] days add months months years years so [3012] I'm not going to you know beat that [3013] horse to death but I hope it's pretty [3015] self-explanatory like the value of being [3017] able to do this getting some current [3019] date modifying it based off of like you [3023] know it's just a preset library of [3025] functions that work on like a known dat [3026] data type and because the vast majority [3028] of apis accept this data type you can go [3029] really really far with this okay so [3032] that's now uh and that's the ad feature [3034] what if you wanted to set the day set [3036] the date set month set year a common [3039] feature request when I'm working with [3041] people is especially agencies is they [3043] have set billing dates they'll have like [3045] April the 15th April the 30th April the [3047] 28th whatever like they have a a some [3049] type of date and time where their [3051] invoices go out or when a subscription [3052] needs to be made so let's hypothetically [3055] say we get a new client today then we [3056] need to set the next invoice date at [3058] April the 15th right today's March 29th [3061] April the 15th is what like 17 days away [3064] I can't just say now and then add days [3066] and then do 17 because what if tomorrow [3070] a new request comes in well now it'll be [3072] April the 16th that you know we're [3073] setting the invoice date to right sort [3075] of silly um that's what the set function [3079] Suite does for you if instead I wanted [3082] to set the date to well actually let me [3086] just show you how this works let me [3089] first evaluate the [3090] now if we just evaluate now on its own [3093] it's March 29th right if we set the date [3096] of now and we say 15 what it's going to [3099] do is it's going to keep every other [3101] feature the same every other element of [3102] my date so the the month will be the [3104] same the year will be the same even the [3106] time will be the same but the date will [3107] be different so now we've set this to [3109] March the 15th we fed in March 29th as a [3112] result we've gotten March 15th and so [3114] what I can do is I can now use this in [3115] conjunction [3118] with my ADD months feature and then I [3120] can add one month to March the 15th and [3122] then I can get April the 15th and so in [3125] this way I can consistently always get [3126] the next month's payment period whether [3128] it's 45 days away 32 days away 17 days [3131] away doesn't matter it's just always [3132] going to be um uh you know the exact [3136] like next billing period that the client [3137] or or maybe me uh wants you can also do [3141] this for your own payroll right if [3142] you're trying to like sum up a list of [3144] time entries or something like that to [3145] calculate your own payroll you can set [3147] like the 15th the 30th you can back [3149] calculate that and then you can like set [3150] a or queue up a payment to be made on [3152] April the 15th exactly as opposed to you [3155] know other other dates or whatnot and [3158] this sort of thing saves tons of time um [3160] CFOs in particular love this sort of [3161] thing because they spend anywhere from [3163] like five to 10 hours per week just [3164] queuing up payments and you can just do [3166] all that automatically and then just set [3167] them up so that the only thing a person [3169] needs to do is once every two weeks just [3170] look over all the payments give them a [3172] thumbs up and then go from there pretty [3174] neat there are a couple of other [3176] functions down here like format date and [3178] parse state which I use quite often [3179] basically remember how I said there was [3181] this uh this format where you know it's [3183] like in human readable format um and if [3186] I just use the Now function that I run [3188] it it'll be like this nicely uh [3190] beautified March 29 2024 44 a.m. well if [3194] I go back to this date picker and I [3198] Mouse over format date what you'll see [3201] is in red there's like the actual [3203] machine interpretation of that and [3205] that's 2016 or I mean in my case it [3207] would be different but here it says [3210] 2016-12-28 T um then there's the hour [3213] then colon then the minute then the [3214] colon and the seconds and it looks like [3216] there's even like the milliseconds as [3218] well so that's sort of like the machine [3220] format that make.com will pick up and [3222] then parse for you automatically uh but [3224] what that basically means is if we feed [3225] in now which renders to that red thing [3228] sort of like behind the scenes or or [3230] under the hood and then we want to [3233] convert it into some other daytime [3235] format so maybe instead of being [3236] rendered as like March whatever we want [3238] it just to be I'm in Prague now so maybe [3240] some like weird European format uh we [3242] want it to be like month month day day [3243] year year year year uh we can feed that [3246] in and then we can convert a date object [3248] into a string and so we just fed in that [3251] like Long March 29th thing which you [3253] know I think looks a lot sexier but [3254] we've converted into this date time [3256] format month month date date year year [3258] year year um and this is really useful [3260] because you would not believe the number [3262] of apis that only accept dates formatted [3265] in very particular ways [3267] alternatively you can be scraping data [3269] sources or PDFs or assets or something [3271] like that maybe emails and then you know [3273] there's just some autogenerated thing in [3274] a specific format which means something [3276] different to you because you're in a [3277] different part of the world or whatever [3279] um and what you can do is you can you [3280] can take that and you can parse it um [3282] using the parse date module which is the [3284] exact opposite of the format date module [3286] where maybe you know I have some date [3288] and that's like [3290] 2903 2024 and then I feed in some date [3293] and time tokens here so uh this would be [3295] date dates SL Monon month year year year [3298] and basically it's just reading this [3299] date and then it's saying okay what is [3301] this 29 oh this is the date date okay [3303] what is the 03 oh that's the month month [3305] okay what is the y y y why oh that's the [3307] year year year year if you run that [3309] it'll then convert that back into like [3311] your beautiful date format object which [3314] you can now do things like add days you [3316] know three to run this puppy again now [3320] we have April the 1 and then maybe if [3322] you wanted to you can then format the [3323] day back into this God awful format [3329] um you know if you just like hate life [3332] and enjoy murdering babies or something [3335] so yeah that's the date and time [3337] function super useful I use them all the [3338] time last but not least there's a sort [3340] of calendar picker which allows you to [3341] set specific dates so you wanted to Fe [3343] in like March the 5th for whatever [3345] reason uh you could do that and you [3346] could also change the time and that sort [3347] of thing uh in practice I rarely ever [3349] use that the most commonly used date [3351] functions are format date parse date and [3352] then adding a couple things and I'll [3354] almost always use now instead of a time [3355] stamp as I mention because the vast [3357] majority of services only accept um or [3361] the vast majority of services prefer now [3363] and there are a couple of Fringe cases [3364] where they want the time stamp okay and [3365] that takes me to arrays now arrays are [3368] super useful data types to understand uh [3371] what I'm going to do over the course of [3371] the next few minutes just just walk you [3373] through sort of like the re rationality [3376] behind arrays and um how they differ [3378] from objects and make.com essentially an [3381] array in make um is sort of like this [3384] it's like you have item one item two an [3387] item three and I'm putting these square [3389] brackets here because that's how most [3390] programming languages like represent an [3392] array but basically if you feed this [3394] into um like a parse Json [3397] module uh I think we need to wrap this [3400] with I don't actually know if this going [3402] to work but let's just do array and do [3405] this if you feed this into a parse Json [3407] module then the output is going to be [3409] our nicely formatted like index item one [3411] index item two index item three and then [3413] in future variables you can like access [3415] the sub elements of that array like you [3417] do one two 3 four that sort of thing um [3420] so you know arrays are used primarily to [3422] iterate through things in make which is [3424] quite quite useful as I'm sure you can [3426] imagine and that's what all of these [3428] array functions do they take you know [3430] something that is formatted in this way [3432] where you have like a bundle and then [3433] you have an array and then there are [3434] multiple items in the array and then [3435] they just do something to it so what I'm [3437] going to do here is I'm going to use [3438] this parsejson module as the input uh [3441] for our array functions and then I'm [3442] just going to walk you through a bunch [3443] of different things that you can do with [3444] it so the first function is join join is [3448] the sister to split essentially where [3451] split turned a string into an array join [3454] turns an array into a string and so [3456] instead of splitting based off some D [3457] limiter you can join based off some D [3460] limiter now I said item one item two [3462] item three or something like that but [3464] when I run it through the join function [3465] the output is going to be a string [3467] that's item one comma item two comma [3469] item three um I use join reasonably [3471] often um but not super commonly length [3475] is basically the exact same thing as the [3477] string version of length it just allows [3479] you to get the length of an array as [3480] opposed to the length of a string so if [3482] we feed in this array even though you [3483] know the string version of that might [3485] have like 20 characters the array [3486] version of that only has three [3487] characters and so you know it'll sort of [3489] pick up whatever data type you're [3490] feeding it in if it's a string then [3492] it'll calculate the length in characters [3493] if it's an array it'll calculate the [3494] length in [3495] items um next up we have keys now Keys [3498] is pretty interesting um in order to [3500] understand this you need to know what [3501] like an object is so let me cover really [3503] quickly what an object is in make.com um [3506] objects are interchangeable with with [3509] Collections and if you guys look at this [3512] uh and then we Zoom way in when I [3513] outputed my parsejson module it said [3515] bundle one and then it said collection [3517] um the reason why it's a collection is [3518] because I have this like comma array and [3521] then I have a colon so an object is [3523] basically something that follows this [3525] format I'm just going to open up a new [3528] module here and let me just Auto align [3530] these CU it's stting to look ugly let's [3532] just call this object an object is just [3534] something that has a bunch of key Val [3536] value pairs so this would be key1 and [3538] this would be value [3539] one uh and then if I if I run this the [3543] output is going to be an object with a [3545] key and then a value and you see it's [3547] sort of like nested whereas arrays are [3548] just like item item item item or value [3550] value value value objects is SL to find [3552] a key and then and then a value and you [3554] can obviously swap Swip and Swip you can [3557] swap and switch and add multiple data [3560] types together so you could have like an [3561] array of objects you could have an [3562] object that contains an array for [3564] instance uh but anyway the reason why I [3566] show this is because there's a function [3568] called keys allows you to evaluate just [3570] the keys of the object we can extract [3571] just whatever the keys are um so I have [3573] to run this all together in order to get [3576] access to the variable here but you see [3579] how we put we're going to feed in um [3581] object and then I'm just going to put a [3583] right bracket there if we run this now [3586] basically what I've done is I've only [3587] EXT I've created uh I've turned my [3589] object into an array and that array [3591] contains one item and that's just the [3593] name of the key okay we got a couple of [3594] other functions here there uh there's [3597] slice slice is pretty straightforward [3598] you basically feed in an array and then [3601] uh you can index elements of that array [3603] this is the spiritual sister to [3605] substring uh for the string functions so [3608] if I had an array which I think let me [3611] see good God I'm consuming tons of [3614] Ops whatever I'm doing it for the gr man [3617] um if I feed in this array which is item [3620] one item two item three I can slice it [3623] and then only um you know like I can [3627] basically cut it at two and then only [3628] show number three if that makes sense so [3630] that's what I've done here I've sliced [3632] it at the number two and I'm only [3633] showing number three um make.com like [3635] string indexing or sorry array indexing [3638] it's kind of weird and kind of annoying [3639] sometimes you do zero indexing which is [3641] where you start an array by counting the [3643] first element is the zeroth element and [3644] then the second element is the first [3646] element and then some other functions [3647] start at one two three kind of like [3649] normally intuitively um unfortunately [3652] there's just no really quick and easy [3653] way to understand this um maybe if [3655] there's enough demand I can like [3656] tabulate like a list of functions that [3657] are zero index and one index but just [3659] run it once before they start using it [3661] in an actual flow and it should be okay [3662] so anyway I've cut this three element [3664] array at the two Mark and then it's only [3666] showed the third element if I cut at the [3667] one mark it'll show the second and the [3669] third element so now I have item two and [3672] item number three and yeah you know [3674] you'll use slice from time to time but I [3676] don't really use it that often I'd much [3677] prefer the ability to just like pick and [3680] choose the elements that I want um which [3682] I cannot wait to talk about the get [3684] function oh man I use the get function [3685] all the time but any that slice merge [3688] allows you to combine two arrays um you [3690] can also just feed in the same array [3691] multiple times if you want to make [3692] duplicates so I'll do that here uh you [3694] basically just separate them by [3695] semicolons so I fed in the same array [3697] twice here and the end result is I'll [3699] have an array with six items item one [3701] two three item one two three I don't [3703] really use merge that often uh to be [3705] honest you don't really need you don't [3706] really need most of these array [3708] functions but anyway uh contains is [3710] again the spiritual sister to the [3712] contains function in the string Library [3714] where you basically just feed in uh you [3716] know like a big array of values so I'm [3718] going to go back here and feed in my [3719] array and then I'm going to say hey does [3721] this contain item two if it contains the [3723] value of item two then I want you to [3725] return a true if instead you know we're [3727] looking for item [3729] 555 you know it's going to return false [3731] and we can use this in logical flows [3733] later on which makes it very very [3736] valuable there are a couple of other [3738] ones here um there's remove so you could [3741] remove a specific thing from an array so [3743] if I'm feeding in my array and then I [3745] want to remove the item two then I'm [3748] only going to have item three and item [3749] one uh I will never use remove I just [3752] don't really see a purpose to like [3754] continuously perform operations on the [3756] array I'd much rather just grab the [3758] elements that I want but perhaps there [3759] are some cases in which you may and then [3761] there's also add um the only situation [3764] in which I ever use add is basically you [3766] can grab an array and you can just add [3767] an element to it so the only situation [3769] which I'll ever realistically use an [3770] array uh sorry add first I'll show you [3773] how it works so add array item four so [3775] I'm I'm going to add like a fourth item [3777] basically to this array and you know [3778] obviously it starts at the end when you [3780] add a new item but the only real [3782] situation which I'll use this is I'll [3784] use the empty array keyword and then [3786] I'll just use it to create a quickly a [3788] quick array so it's a sort of like my [3790] split hack where I split a string into [3791] like you know it's constituents based [3793] off some delimiter I'll use the empty [3795] array and then I'll just add items so I [3796] can like create my own three um item [3799] array by just saying add mty array item [3800] one item two item three and if I just [3802] run this the end result is the same [3805] thing as my little split hack so one [3807] thing that I want to make very clear is [3809] you can do the same thing like 20 [3811] different ways in make.com and in [3812] programming more generally and in life [3814] even more generally um but with make.com [3817] you know my my best or my number one [3819] recommendation is just find the way that [3821] works for you and then just learn that [3823] really good inside and out and then just [3824] use that over and over and over and over [3826] again you know the perfect programming [3828] practices or whatever they don't really [3829] apply here since we're concerned about [3831] making money and we just want to be able [3832] to like wireframe something as quickly [3833] as possible a lot of the time that just [3835] involves you know using flows that you [3838] understand and know the next function is [3840] probably my most commonly used array [3842] function and maybe one of my most [3843] commonly used functions in general after [3845] get um add sorry after get uh split uh [3849] switch and then another one that I'll [3850] cover soon but the map function allows [3853] you to feed in a big array and then [3857] basically filter based off the presence [3860] of something or then only extract [3861] certain elements probably the best way [3863] for me to show you this is if I go back [3865] to this big parse Json thing where I [3867] have array item one item two item three [3869] actually let's see this one okay you see [3871] I have object key1 value one so let's [3873] hypothetically say that I'm [3876] running um some type of social app where [3878] I have profiles right so my object is [3881] now called profiles the name is Nick [3884] they'll also be the hair color and the [3887] hair color is you guested [3889] brown no I'm a blondie at heart um and [3893] then let's say I have a couple different [3895] entries one is Sam her hair color is [3898] blonde one is um Petra and her hair [3903] color is black so I have my my Json [3907] object here and if I run this assuming [3908] it's formatted correctly the output is [3911] an object with a key of profiles and [3914] then a value which is an array and [3917] inside of that array are three items one [3919] with name Nick hair color brown another [3921] with name Sam hair color blonde and last [3922] with name Petra hair color black so bear [3925] with me here hopefully that makes sense [3926] now that we're uh well established in [3929] our [3930] example let me just isolate this [3933] specific subflow and then delete the [3936] rest of this now that we have our [3938] example what I'm going to do is I'm [3939] going to feed in profiles and I'm just [3941] going to run through a couple of things [3942] let's say I don't really care about the [3945] hair color or whatever or no let's say I [3946] don't care about the names I just want [3947] to get a list of all of the different [3949] hair colors that are available to me [3951] well in order to do that all you do is [3952] you feed in the top level array so in my [3954] case profiles and then you feed in the [3955] name of the attribute or the key that [3957] you're interested in so I'm interested [3958] in hair colors only if I run this I will [3961] basically remove all of the other [3963] information in the object and then [3965] convert it into an array which just [3966] enumerates over all of the various hair [3968] colors that I have um so this is very [3970] useful if you just want to get a sense [3971] of all of the different options that [3973] maybe an object or an array contains um [3976] more importantly there are ways to [3978] filter using map to select only elements [3982] that you're interested in so for [3984] instance if I wanted only to select hair [3986] color okay let's say instead of hair [3989] colors I only wanted to return names [3991] right so if I run this right now um I'm [3994] going to [3995] receive uh Nick salmon Petra but let's [3998] say I only wanted to receive or output [4000] names whose hair color is equal to [4005] Brown well now I'm only getting Nick and [4008] so you can use map to basically save you [4011] 99% of operational costs I want to say [4013] operational I mean like the operation [4015] set of things by feeding in the arrays [4017] that you'd otherwise feed into like a [4018] filter and then just using map to like [4020] um do all of the filtering up front in [4023] like one shot uh it's a super quick and [4025] easy hack one that I use all the time [4027] and that's why map is one of my most [4028] commonly used functions I'd highly [4030] recommend if that little brief demo that [4032] I showed you didn't make any sense [4033] actually read through the map [4034] documentation it's not bad um I think in [4036] order to understand it you just need to [4038] understand that like you know when you [4039] see something like a variable called [4041] hair color like that's underneath the [4044] name of it it says raw and then it's [4045] hair color that's like that's like uh [4048] that's like its actual variable name and [4049] you can use that variable name in this [4050] function and many others in order to [4052] like access that key so pretty handy [4054] highly [4055] recommend um we have a bunch of like [4057] sorting ones which I will almost never [4059] use the shuffle Shuffle basically if you [4061] feed in an array of item one item two [4063] item three it'll just randomize the [4064] order so it'll be item three item two [4066] item one item one item three item two uh [4069] sort just allows you to sort based off [4071] of usually alphabetical order or date [4073] and time um you have a bunch of uh [4076] variables here that you can add so you [4078] know if you wanted to sort our [4081] array of profiles let's say and you [4083] wanted to do it by name you could do so [4087] alphabetically and the output of that [4088] would be an array where the name starts [4091] alphabetically with n p and then s [4093] because n is before p and p is before s [4095] in the uh you know in the dictionary so [4098] yeah you can sort things in practice [4100] what this usually looks like a sorting [4102] based off dates if you're making an API [4104] call and a bunch of information is [4105] coming in and I don't know it's just not [4107] like well formatted or something like [4109] that or the sorry not formatted but the [4111] information isn't um sorted by dates you [4113] can usually just use make.com to sort [4115] for you uh but you know the vast [4117] majority of the time apis will do the [4118] Sorting much better than you could so I [4120] would just uh I would just go with the [4122] data from the API I got a fantastic [4124] little cup of orange juice here one of [4126] the things I love about Prague is just [4128] how fresh all of the uh the juices and [4131] stuff are I think they probably have [4132] some like top down EU [4134] regulation [4136] but man that tastes good okay now we're [4139] going to talk a little bit about reverse [4141] reverse is just where you'll feed in an [4143] array and then you'll convert that array [4146] or we're not going to convert it you're [4147] just going to like basically flip it so [4149] that instead of item one item two item [4150] three it's item three item two item one [4152] again there are very few use cases in [4154] which you'll use this you can also use [4156] the sort function with um the parameter [4158] descending or as sending to basically [4160] reverse however some however something [4162] is sorted so reverse doesn't really [4164] serve a functional purpose [4165] first and last are just ways that you [4167] can quickly get the first item in a r or [4169] the last element so you know how earlier [4171] I split um you know [4175] htps google.com and then I split it [4178] based off the presence of this if we ran [4181] this then we'd get an array with two [4183] elements let's put this in the middle [4185] here an array with two elements one is [4187] htps one's Google well you can also just [4189] use the last function to select like the [4192] last thing in that array which is Google [4195] um so just is the same way doing um you [4197] know what we what we did previously with [4198] the get now I much prefer get but I'll [4200] talk about that in a sec okay and then [4203] we have flatten and then distinct D [4206] duplicate to collection to array so [4208] flatten um it's kind of weird but there [4212] are going to be some instances where you [4213] have an array and then inside of that [4215] array you're going to have um like [4218] another [4220] array so let me just show you guys what [4223] this might look like in practice [4227] if we render our Json and we check the [4230] profiles what you'll see is there are [4232] three items and then there's a sub array [4235] containing item one item two so [4237] basically we have an array with an array [4239] this is sort of annoying and a lot of [4240] apis will unfortunately do this um but a [4243] quick and easy hack to basically turn [4245] that into just like a on level array uh [4247] basically to flatten the array is to [4249] feed it through this flatten function [4251] and so if we feed in our wonderful [4253] profiles array here [4255] and then flatten it when we run it then [4258] what we're going to do is we're going to [4259] pull out those items and then instead of [4260] it being an array nested within an array [4262] everything is going to be on the high [4263] level now on the top level now this is [4265] tangentially useful this is more of a [4267] programming thing but you will find that [4268] some apis for whatever reason Nest [4270] things like 30 different subarrays deep [4273] and flattening is just a way to bring it [4274] all up to the top level and then maybe [4275] feed it through map so like a design [4277] pattern that people will normally do is [4279] you'll have like some array some nested [4283] array here you'll flatten the nested [4285] array and then you'll map it to pull out [4287] you know I don't know keys that only [4289] have a certain value or something that's [4292] how that works um distinct is just a way [4295] distinct and D duplicate like in [4297] practice are very similar there's a [4298] minor Nuance between them but just treat [4300] them as the same for for the purposes [4301] this video a d duplicate just helps you [4303] remove duplicates so if you had an array [4306] so let's do empty [4308] array oh sorry I can't actually do that [4310] I need to use this keyword if um we [4314] create an array with item one item one [4317] item two item three and just to walk you [4320] through what's happening here I'm [4321] defining an empty array then I'm adding [4323] item one item one item two item three to [4325] it and then I'm D duplicating it what [4327] we're going to do is we're going to [4328] remove any items with the same value and [4331] so there were two item ones now there's [4333] only one item one and distinct does [4335] virtually the same thing uh it just [4337] allows you a little bit more latitude if [4338] you are um if you're using like an array [4341] of objects instead of an array of values [4343] but it simply allows you to filter based [4345] off of whether a name field is the same [4347] or a hair color field is the same or [4349] that sort of thing so that's pretty cool [4351] and then we get to two functions which I [4353] literally never used in my whole life [4355] which there are actually a fair number [4357] of make.com videos out there on the [4358] internet about which I find hilarious [4360] because they're so divorced from you [4361] know actual functional Effectiveness uh [4364] to collection and to array um you you're [4367] basically virtually never going to use [4368] this but to collection converts an array [4371] into a collection to array converts a [4373] collection into array so remember ear [4375] earlier how we defined uh an empty array [4377] and then we said add and then we did [4379] like item one item two item three now we [4382] have an array with three items item one [4383] item two item three what you can do is [4385] you can use this function called two [4388] collection and then you can um basically [4391] convert this [4392] into [4394] uh sorry it's uh what's the [4398] term [4399] uh you're okay actually let me just run [4402] this and see what [4404] happens [4406] okay yeah this doesn't work because we [4407] don't have uh key value pairs let me try [4410] item one let me try run on [4413] this yeah I know it's still empty um I [4416] guess what I'm trying to say is uh this [4418] is so functional like this these two [4420] functions are [4421] so useless for lack of a better word [4425] that you will virtually never ever [4426] actually use them in practice you if you [4428] have [4431] um uh if you have an array that contains [4435] objects and so if we [4438] have um actually this is probably a good [4441] example if we have an array that [4442] contains objects which we have here so [4445] if we run this this is uh profiles and [4448] then the type is array and it contains [4450] three objects which again make.com also [4452] calls collections remember there's that [4454] like uh semantic uh disambiguous or [4459] ambiguity there uh but essentially we [4461] have an array with three objects or [4462] three collections name Nick hair color [4464] brown name Sam hair color blonde we can [4466] convert this whole [4468] thing into just like a top level [4471] collection with names and then um I [4476] don't really know what the value would [4477] be here in this case not really [4481] sure but let's just try putting both of [4484] these here and then [4488] running okay so what we've done now is [4490] we've instead [4492] of um remember how we flattened [4496] something and then we pulled the name [4497] the keys and the values out basically [4499] before we had an array of profiles and [4502] nested inside of sorry we had an object [4505] and then inside of that object was an [4506] array of profiles and then inside of [4508] every profile was you know it's like an [4510] object with name Nick hairc color brown [4513] what what we can do is we can redefine [4515] that object using the two collection [4517] where instead of having like the name [4519] Nick hair color brown we've now just [4521] pulled out the key and we made that the [4523] name and then we can make the value [4525] something else so um I tried making the [4528] value hair color I don't really think [4529] that works maybe I do [4532] this then I run [4534] it yeah okay cool uh what we've done now [4537] is we've redefined this object and we [4539] basically turned it from the sort of [4541] nested structure into just this [4543] collection with three keys uh Nick Sam [4547] and Petra and then the corresponding [4549] values we pulled out of our array using [4552] this like indexing scheme uh as you can [4555] tell I virtually never used this and [4556] you're probably never going to use this [4557] as well I'm just covering this for due [4559] diligence purposes but I think that to [4561] be completely honest this is something [4562] that yeah like you you're probably never [4564] even going to look at and if you never [4566] look at it you're still going to be [4567] fully capable of making a ton of money [4569] there's the inverse which is to array [4570] which is basically where you convert a [4572] collection into array of key value [4574] collections um just because of how [4577] silly this thing is I'm not going to [4580] beat [4581] it to death [4583] but if you have let's just redo [4587] this so you have um profile name let's [4591] just say it's like a value called [4593] Nick right if we run this oops did not [4596] want to add that module if we run this [4598] puppy uh we now have like a an object [4601] with one key profile name and one value [4604] Nick if we feed that into this [4607] array and then we run [4612] it empty is not a valid collection [4614] that's weird oh sorry should have done [4616] profile name oh sorry actually this [4618] isn't going to work either I need to do [4619] one level up we'll do object and then [4623] we'll do profile name neck there we [4627] go yeah as you could see I [4633] uh do not really ever use these [4635] functions and that's why I'm quite poor [4637] at them anyway what we've basically done [4639] is we've taken our um object which is [4642] just profile name Nick and then we've [4644] converted it into to an array and the [4645] array has a sub object which now has a [4647] key of profile name and then a value of [4649] Nick and it actually uses this key value [4651] pair like syntax which again is sort of [4654] silly you're never going to use it any [4655] who hopefully you uh did the smart thing [4657] and you skipped the last five minutes of [4659] explanations on those two and we can [4660] move [4662] on all right that takes us to General [4665] functions which are pretty simple I [4667] think intuitively to understand but it's [4668] more of like um it's more of like uh [4671] just covering all of our bases here you [4672] probably already used a lot of these [4674] functions um I think you already [4675] intuitively understand probably what [4676] like if statements and else statements [4678] are like uh but we're going to cover [4680] them regardless and I need to make sure [4681] to plug in my battery before I like blow [4683] up my computer or something so just give [4685] me give me a second to take care of that [4686] okay now that we're not going to blow up [4688] let's run through some general functions [4691] now the first is you have an execution [4693] ID that just refers to the ID of this [4695] specific execution um if I run this now [4698] you'll see that it generated 93 BF if I [4700] run this again you'll see that it [4702] generated 5e 8A 4B [4706] if we go back to the history you'll see [4709] that there is a Details page for each of [4712] these and then if we click on both of [4713] them you'll see that the URLs contain [4715] the IDS that we just generated so the [4717] URL the first run um you know 93 bf9 and [4721] the UR of the second run 58 A4 uh this [4723] is just a way that you can very quickly [4725] and easily isolate a specific execution [4727] in practice how this works is when you [4729] are developing flows that a lot of other [4730] people on your team use and you know you [4732] want to maintain them and make sure that [4734] they never really mukup um what you do [4736] is you basically grab the [4741] um like let's say I'm updating a CRM or [4743] something like that what I'll do is I'll [4744] also add a comment at the end of that [4746] with [4748] uh um with a link to the specific [4751] execution I think it's logs I think [4753] that's it but anyway um you know in my [4755] case this is my US1 make.com account [4758] because I'm on the US server this is the [4759] ID of my account this is the ID of my [4761] specific scenario this is the logs page [4763] and then this goes to the ex ution ID so [4766] you know I'll usually like wrap this in [4768] some type of tag and then I'll say like [4770] execution ID and then if it outputs HTML [4773] or reads HTML I now have like a button [4775] that anybody on the team can quickly [4776] click to get to that specific execution [4778] uh which can be quite valuable there [4780] obviously some very simple mathematical [4782] operators here like this is these are [4784] brackets and so you can use brackets to [4786] group Expressions together you know like [4788] 5 plus 2 um times three let me do this [4794] correctly time three that equals [4795] something different than 5 + 2 * 3 right [4798] and brackets just allow you to isolate [4800] um various mathematical Expressions mey [4803] you're mostly using that with the math [4804] Library so don't worry too much about it [4806] um I'll cover gets now uh remember how [4809] earlier I split a string and the example [4811] that I did was based off of a URL and I [4814] was attempting to basically just isolate [4815] the domain well if I split based off the [4818] presence of these two backslashes the [4819] end result of that is I'm going to have [4821] an array with two items one with htps [4823] and another with google.com get is just [4825] a very quick and easy way of selecting [4827] which item in the array you want so if I [4830] selected item two and then I ran this [4834] puppy um it equals google.com if I [4837] select item number one it's going to [4839] equal [4841] https and just to show you guys what's [4842] going on at the hood using [4845] split right when I do this I get my I [4847] get my array and then I just use get to [4851] select the element that I'm interested [4852] in now remember there's also the first [4855] and the last function so I can split [4858] this uh and then I can just grab well I [4861] guess in my case I'd be interested in [4862] the last and this will do the same thing [4864] but if you think about it like wouldn't [4866] you rather use a function that allows [4868] you to quickly change whatever element [4871] you want and not just be restricted the [4872] first to last I definitely would some [4874] people will call this less maintainable [4875] or less readable but say lovey I much [4877] prefer just like the get uh feature for [4879] everything so I'll usually use get um in [4883] probably like every scenario it's just [4884] that ubiquitous and and useful there are [4887] a couple of additional functions here [4888] which you'll understand if you come from [4889] a computer programming background and if [4891] not I won't walk you to through them too [4893] heavily but there's if um and an if [4896] statement is basically like if true then [4900] return the first element if false then [4902] return the second element and so the [4904] examples here are pretty simple it's if [4906] one is equal to one which is a true [4908] statement right that's obviously going [4909] to evaluate to true then return a [4913] otherwise if it's false return B and [4914] then the example um evaluation here is a [4917] because 1 plus 1 equals 1 is true now 1 [4920] equals to two is false right so if you [4922] were to do the same thing with past this [4924] is the expression then we're obviously [4925] going to return B so this is one of the [4928] instances in which I think like the [4929] make.com documentation is actually great [4931] uh if one is equal to one maybe return [4933] like Peter and then you know if not [4936] return like Wick or something I don't [4937] know um one is one one equals one is [4940] true so we're going to return Peter now [4943] in practice you're not really going to [4943] be doing logical operators like this [4945] instead you're going to be using um [4947] another function called if empty usually [4949] what you're doing is you are like [4951] calling an API and then you're seeing [4952] whether an element exists and if the [4954] element exists then you're going to do [4955] something if the element doesn't exist [4956] you're not you're going to do something [4957] else and so uh you can do that with just [4959] the if statement but um the ifmt is just [4962] like an optimized version of that let's [4964] say I'm setting a variable let me delete [4967] this and use the set variable remove [4971] this and then I'll just call this like [4975] API variable and we'll just uh let's [4978] just do first [4979] name and so what we're doing is we are [4982] basically calling an API for the first [4984] name variable and then it's returning [4986] the Val the value Nick what we can do is [4990] if I close this and reconnect this [4993] because I uh just added a new variable [4996] what we can do is if we go to our [4997] general functions and then write if [4999] empty um we can make a design pattern [5001] where basically we could say if first [5004] name is empty then I want you to output [5006] something else so maybe you know we have [5007] like a placeholder name or something for [5009] a proposal or whatnot we're calling an [5010] API to like get a name and then we use [5012] the name to populate our proposal um if [5014] first name is empty then add placeholder [5017] and if it's not empty then we just want [5019] to do whatever first name is so if I run [5021] this in practice because I've added a [5023] variable here called Nick and I've [5025] actually like you know added the value [5026] the output is going to be Nick but let's [5028] just say it's empty for whatever reason [5029] I get nothing if I run this now then the [5031] output is going to be placeholder [5033] essentially what this means is it's just [5034] like a on line and very easy and [5037] interpretable flow where I can just [5038] Define um hey you know in the off chance [5041] that this is empty I want you to do [5042] something else so quite useful in that [5044] way next up we have uh probably my my [5047] other most commonly used function which [5049] is called switch uh switch is basically [5052] the exact same thing as an if statement [5053] it's just multiplying the if statement a [5055] bunch of times for different outcomes I [5056] want you to think of this as like a [5058] giant input to Output map you know if [5061] the input is one thing then I want you [5062] to Output another thing if the input is [5064] this thing then I want you to Output [5065] that thing if the input is this other [5066] thing I want you to outut this other [5068] thing right if the input is a I want you [5069] to outut one if the input is B I want [5071] you to outut two it's just a very simple [5072] map that you can build um to simplify [5074] your life and another reason why I [5077] really like this is it eliminates the [5078] use of routers routers and make.com are [5081] really annoying let's say you want to [5083] generate like a proposal but you I don't [5085] know have like 10 different proposals [5086] that you can generate depending on [5088] whether it's like uh service one service [5090] two service three whatever you know in [5092] make.com what most people do is is they [5094] will add a router to your flow and then [5097] they will add like 10 different routes [5099] they'll say you know if first name or [5102] let's say service name is equal to I [5105] don't know [5106] like website or something then we'll do [5109] one flow and then if service is equal to [5112] oops that's [5114] ugly I don't know like SEO or something [5118] then it'll be some other [5120] flow and we'll say [5122] website and then SEO [5125] another reason why I hate routers and [5126] routers just suck and you should try and [5128] get away from them whenever possible is [5130] because um if you think about it you [5132] just duplicated your work and we have [5133] two routes here I would imagine if we [5134] had 10 now we've multiplied our work by [5136] 10 let's say in the future you want to [5137] go through your route and then you want [5138] to make an edit to one tiny little thing [5140] well now you need to make that same edit [5142] to this route the other routes that [5144] route and so on and so on and so forth [5147] and so what switches allow you to do our [5148] switches are basically just routers just [5151] uh included in in a variable instead of [5153] you know in in on sort of like a module [5156] level if that makes sense um so what I'm [5158] doing here is let's say I have a service [5161] name instead of first name and my [5163] service name is called [5165] website and then because I just added a [5168] new variable I have to reselect this and [5170] basically if an input is website I [5173] wanted to Output some I don't know maybe [5176] some email or something like some long [5179] proposal hello maybe an email hello we [5183] can't wait to help you with your okay [5186] sorry I actually up there um if [5188] the input is website the output would be [5190] hello we can't wait to help you with [5191] your website or [5192] something uh and then if the input is [5195] SEO then we'd say thanks for submitting [5198] an SEO [5200] request we're excited to help you build [5203] a great SEO campaign let's just [5205] hypothetically say okay and let me run [5208] you through the syntax here um basically [5210] way that it works is what you do in a [5212] switch is just like an if statement you [5213] have some expression and if that [5215] expression evaluates to Value one then [5218] you output Result One if the expression [5221] evaluates to Value two then you'll [5222] output result two it's basically a [5225] series [5226] of uh value result pairs basically and [5230] then the very first element you do is [5231] just always your input so in my case [5233] I've said switch my input depending on [5236] whether the uh it's equal to website or [5239] it's equal to SEO if it's website I want [5242] you to Output hello we can't wait to [5243] help you with your website and if it's [5244] SEO we want you to Output thanks for [5246] submitting an SEO request so if I run [5248] this you know my input was website so my [5250] output should be hello we can't help it [5252] away you we can't wait to help you with [5253] your website right but if this was SEO [5256] now and I ran it the output is now [5258] thanks for submitting an SEO request [5260] we're excited to help you build a great [5261] SEO campaign and so we basically [5264] accomplish the same thing that you'd [5265] accomplish with a router we've just done [5266] it in a single variable and we've done a [5268] lot faster honestly so highly recommend [5270] you guys use switches wherever possible [5272] now if you guys add a final semicolon uh [5275] you can use you can basically create [5277] like an else route and then you can say [5279] I'm not going to rate the screw you I [5282] don't want anything to do with you um [5283] and what this means is this is basically [5285] like if nothing else matches so if I [5288] don't know we want uh social media or [5291] something uh then the else route will be [5293] evaluated so this just a good way to [5296] like catch every single possible input [5297] and then treat it in some way so yeah [5300] very very uh very very powerful stuff [5302] I'd encourage you guys if you know you [5303] want get the highest Roi out of this go [5305] through the map documentation and then [5307] go through the switch documentation as [5308] well use it in your flows and just [5310] really understand it because those are [5311] probably like the biggest operation [5312] Savers and the biggest maintainability [5314] Savers as well okay and then there are [5317] two other functions one called omit and [5318] the other called pick um these are silly [5321] there's no real reason to use them [5322] they're just like sort of hand-me-downs [5325] from integromat which is the predecessor [5326] to make.com after before they they got [5329] all purple uh pick is just get just [5332] written in a different way uh and it's [5333] where you can get things based off of [5335] their their their keys but um you know [5338] like you can also get things based off [5340] their keys so I don't really see the [5341] point of it anyway if you have an object [5343] and the object has like key value pairs [5346] like key1 value one key2 value two what [5349] you can do is you can pick only the keys [5351] that have the name that you are [5352] interested in so if I go back to this [5356] parse [5357] Json and then I make my own object [5361] again and then I have key1 and and then [5364] I have value one and then I also have [5369] key2 and then value two actually wait a [5372] second I don't need to do that what am I [5374] talking [5376] about I'm all over the place here uh and [5379] I don't need that either okay so if I [5382] create this object what I get is I get [5384] an object with two keys key one value uh [5385] key2 and then if I feed this into my [5390] playground and then I say hey I want you [5392] to pick from this [5394] object which is 23. object I want you to [5397] pick only key one well the output is [5401] going to be an object with only the key1 [5404] value in pair likewise if I want you to [5407] Omit key1 now the output is only going [5409] to be key2 value two pair so he'll [5412] basically never use this and I wouldn't [5414] really worry about understanding it too [5415] much but it's worth at least you know [5417] covering there are a bunch of logical [5419] operators here which I think are [5420] self-explanatory equals is how you get [5422] like you know a equals B then do c right [5424] that's how you get the the evaluation or [5427] expression part of the if statement um [5429] there is a bunch of other ones there's [5432] unequal to there's like greater than [5434] less than um over here on the math [5436] function side of things but I think most [5438] of these are [5438] self-explanatory the ones that you might [5440] not understand are and or or and you'll [5442] just never use and or or but essentially [5444] and um is just a [5447] way so if the variable on the left of [5450] end and the variable on the right of end [5452] are both true so if their expression [5454] that evaluate to true then this will [5455] output [5457] true but if one of them are [5459] different so if this is false let's say [5463] then the end operator will evaluate to [5465] false this is sort of a hand-me-down [5467] from programming and I think it's just [5469] make.com trying to cover its bases and [5471] be academic and all that stuff or uh is [5473] the same as end it's just it evaluates [5475] to true if either of the two are true so [5478] it's like a or b right versus A and B [5481] where both need to be the same and you [5483] know you can use these in if statements [5486] um but I don't I don't really think that [5488] I think that you can do everything that [5489] you you would be able to do with and or [5491] or with equals if you just convert [5493] things to numbers or you know if empties [5495] because you know in reality most of the [5496] time you're just calling an API looking [5497] for [5498] something okay that's that on the [5500] general function side of things the last [5502] thing that I want to cover are the [5503] custom and system variables and I'll do [5504] this a very light touch because to be [5507] completely honest you very very rarely [5508] going to use these I should not as well [5510] that not everybody will have access to [5511] the custom and system variables um I [5513] have access to I think because I'm on a [5514] specific plan you may not have access to [5516] it if you're on like the starter plan or [5517] whatever the simplest one is but any uh [5520] they can be pretty useful but really the [5521] only variable that you're actually going [5522] to use here are operations consumed [5524] operations left because those are ones [5525] that are important essentially remember [5527] earlier how I had an execution ID and [5529] then I tried to you know I I like put [5531] down some URL and then I wrapped it in [5533] like an a um href equals to like make a [5536] make a link well you can do that really [5538] simply by going down to scenario URL and [5540] then just going slash execution ID um I [5544] think scenario URL logs maybe execution [5548] ID and that's just the same thing and [5550] that way instead of having to hard code [5551] a scenario URL you can just do it [5553] dynamically so you know you can copy and [5555] paste this or export it as a blueprint [5557] it'll just work elsewhere um custom [5559] system variables are basically like meta [5560] variables they don't do anything for you [5562] specifically for this thing um they're [5564] just like meta organizational or [5566] scenario information you can get data [5568] consumed which just tells you the [5569] bandwidth um execution started ATS the [5572] start time the stop time you know if [5574] like the start time is a little longer [5577] or something like that you can um I [5579] don't know use that in some flow to like [5581] autod detect or tell you that there's an [5582] issue if there's a problem it's an [5584] incomplete execution you can also add [5586] that to some Q so you could [5587] theoretically have like a watcher and [5589] then if it's an incomplete execution if [5591] this is equal to true then you could [5592] have an additional thing somewhere where [5594] you like log that and say hey this is an [5596] incomplete execution you should check in [5597] on it there's some team variables team [5599] ID te name you're never really going to [5601] use this in practice and then some [5602] organization variables and really the [5604] only valuable one here is operations [5605] left uh this will show you the number of [5607] Ops left at the end of every scenario [5609] run uh and the really cool part about [5611] this is you can trigger another workflow [5613] with this like you could say if [5615] operations left is less than 500 or [5618] something then send slack message to [5620] somebody so you'll use slack module and [5622] then you will check to see if this [5623] passes the filter and then if it does [5625] then maybe you send a slack message to [5626] the opsy on your team being like hey man [5628] your operations are running low just [5629] double check and this is what you want [5630] click this button if you want to buy [5631] more The Reason by the way why I buy [5634] more Ops instead of like setup auto buy [5637] or something like that is because [5638] make.com does a really weird thing where [5639] for whatever reason they charge you more [5641] when you enable auto purchase than they [5643] do when you uh buy things manually I [5646] guess they're charging you for the ease [5647] of use or some but I think it's [5649] kind of like a dark deceptive practice [5650] I'd much rather they get away from it um [5652] regardless this is just a way that I [5654] like keep my pride intact and I'm like [5655] I'm not going to pay more for you know [5657] automatic automating uh the purchase of [5660] my Ops and uh you know I usually just [5662] buy a really big plan and then I'll like [5663] send a send a request or something like [5665] that if I get really low instead saves [5667] us you know 20 30% or more so yeah [5670] that's that okay guys thanks so much for [5672] watching this video if you have any [5673] questions on specific functions uh if [5676] you know you're still here first of all [5677] congratulations but if you have any [5679] questions on specific functions or maybe [5680] you want me to like record a whole video [5682] on just like the map or the get feel [5683] free to drop it down below um the [5686] documentation to make.com can be pretty [5687] sparse and can be pretty confusing [5689] especially due to the ambiguity and how [5690] they Define objects collections arrays [5692] that sort of thing so um you know I've [5694] tried to take all of that unnecessarily [5696] verbose academic language and convert [5698] that into something that you know just [5699] casual viewers will understand but if I [5701] failed in that in any way shape or form [5703] just let me know and maybe I can [5704] re-record a specific part otherwise I [5706] really appreciate you guys making it [5707] this far uh to longtime viewers you'll [5709] notice that I'm probably in a different [5710] place my background is quite off uh and [5713] you know I haven't recorded a video in [5714] for absolutely forever that's cuz I've [5716] moved to Prague to work with a company [5719] whose founder and team I respect very [5720] much I'm now sort of like their [5722] full-time operations guy um and it's [5723] going extremely well we're doing a very [5725] exciting turnaround time so part of that [5727] was because of the YouTube videos that [5728] I'm posted consistently as well as some [5729] of the partnership contracts that I've [5731] been pushing to my clients uh and it was [5733] just such a good opportunity I couldn't [5735] say no so I'm here in Prague really [5736] enjoying my time and uh yeah I'm looking [5738] forward to now that I have like a [5740] reasonable setup and everything [5741] recording some more videos consistently [5743] any who like comment subscribe do all [5745] that fun YouTube stuff I'll catch you [5746] later thanks so much

Video: https://www.youtube.com/watch?v=pGAqubcGA9A
Title: How To Build Useful AI Voice Bots In Minutes With Make.com & Bland
[0] what's going on guys it's Nick and I got [1] a video for today on conversational AI [3] agents and make.com if you guys have [5] been sleeping on conversational AI I [7] decided I would do a live demo or I'm [9] getting a phone call from my appointment [10] scheduler let's see how it goes [14] hello hello this is Carl from left click [17] I'm calling to confirm your appointment [19] with us tomorrow at 9:00 is that still a [21] good time for you yeah 9:00 works [26] thanks great I've got you down for [28] tomorrow at 9:00 [30] is there anything else I can help you [32] with today no that should be okay thank [37] you wonderful I'm glad we were able to [40] confirm your appointment have a great [42] rest of your day Nick you tooe [45] byebye okay so as you can see I uh set [48] up a phone call in make.com to give me a [50] ring and confirm an appointment for 9:00 [52] a.m. I'll also show you how to jump in [54] pull data out of that phone call confirm [57] whether or not let's say an appointment [58] needs to be rescheduled if it is resched [60] what the time uh that the person you [62] know suggested for the reschedule is and [64] generally just do a bunch of cool [65] with voice and make.com on the internet [68] if that sounds like something you're [68] interested in then stay tuned and let's [70] get into [73] it okay so the success of this hinges on [76] a wonderful platform that has recently [78] gained a ton of notoriety called bland. [81] a and essentially they have an AI agent [84] here which they are referring to as [86] Blandy which I personally think they are [88] anything but bland these guys are [89] hilarious [90] um and then you can just send or receive [92] phone calls using their service it's a [95] oneclick sort of API integration where [97] you just grab the API key dump it into [99] make.com a couple parameters that we [101] might have screw around with if you're [102] unfamiliar with apis that's cool I'll [103] walk you through it and at the end you [105] can have like a conversational AI agent [107] that like goes out asks for things [110] collects information and then you can [112] actually just analyze that information [113] and use it to like update a spreadsheet [115] or something too so super cool uh we are [118] currently sitting on the cusp of like an [120] Revolution and so I think gaining [122] knowledge and skill in this area is [124] probably one of the most important [125] impactful things you can do uh and yeah [127] I just figured it was like right place [128] right time so let's dive into how to [129] actually build out a solution using this [132] service and what I'm going to do is I'm [133] just going to pretend that like I have a [134] big Google sheet with phone numbers [136] we're then just going to call the phone [137] number and then maybe we'll have [140] instructions for each phone call as well [142] and then based off of the information [144] that phone call maybe we'll do some else [145] something else some update kind of [147] depends how I feel and how long the [148] video is all right all right so without [151] further Ado first thing you got to do is [152] jump on a bland. a um if you've never [155] used this before obviously just going to [156] start for free It'll ask you to put into [158] much information including your first [159] name last name email phone number all [161] that fun stuff so when you do it they'll [163] give you a couple dollars in free [164] credits just so that you can start [166] sending and receiving and sort of be [167] wowed by how amazing the technology is [170] um after that what you're going to want [171] to do is head over to the home you'll [173] see a homepage kind of like this and [175] then all you need to do is just go down [177] to um your little profile then go to API [181] Keys then go to API key here and then [184] you have your secret key and this secret [186] key is just all you need in order to [187] interact with the Bland API so super [189] easy uh you can copy it and then you [190] know use it in the flow that I'm about [192] to show you but yeah that's about that [194] obviously you know this is really [195] exciting technology I don't have the [196] time to cover every single one of these [198] tabs but uh there's a lot that you can [200] do here you can like test out flows you [202] can set Pathways you can control the [204] flow of a conversation a lot more if you [206] don't want it just to be like a random [207] call like I just did um there there's a [210] lot you can do so definitely go in and [211] check it out but what we're going to be [212] doing is we're going to be using this [214] Google sheet here which has it's just [216] going to be uh two columns one with [218] phone numbers and then one with [219] instructions and then uh we're just [221] going to go in and then for every Row in [223] this sheet we're going to pull the data [226] and then have Bland give that phone [228] number a phone call with the [229] instructions so you can imagine how you [233] know you might be able to build out a [234] much more complex flow like this where [235] you have some CRM and the CRM is [237] responsible for doing something I don't [239] logging call information or seeing where [243] a person is at a specific step in the [244] pipeline what you could theoretically do [246] is you could take that CRM data like the [248] whole update log like called Peter on [250] such and such day he said this you know [252] Peter seems a little ambivalent going to [253] follow up with him on Friday you could [254] feed all this information into gbt 4 and [257] then have it just like summarize um into [259] a list of next step instructions what [261] you can do then is you could have that [262] next step instruction go right here on [264] this Google sheet maybe in like an [267] instructions column uh and then you [270] could use that to like give the the [271] prospect a call and maybe follow up or [274] you could do it much simpler you could [275] just have you know an integration like I [276] set up just now that calls people to [279] confirm um times that they're available [281] or or whatever I guess the point I'm [283] making is that the potential here is [285] quite Limitless completely honestly uh [287] which is pretty sweet so anyway uh the [289] instruction that I'm going to post here [291] is you're an appointment schedule for [292] left click ask how the client is doing [293] and confirm his appointment tomorrow at [294] 9:30 a.m. if he's notable to make it [296] reschedule and then I also provided just [298] some some availabilities over here then [300] wish them a nice day pretty [301] straightforward pretty simple the cool [303] part about this is you're just kind of [304] coding in natural language now we don't [305] need to be like a natural language [308] proficient you know AI engineer with 50 [310] years of experience here uh we can [312] literally just write what we want it to [313] do and it'll probably do a pretty [314] reasonable job so that's pretty sick now [317] we're going to take this bland. a Google [319] sheet and I'm going to use it as a data [320] source to actually go and then build out [322] the rest of this integration so all I [324] need to do here is I have a scenario set [325] up that's titled number one launch [327] bland. call then I have a Google sheet [330] um search rows module and what I'm going [332] to do is oh I actually don't know if I [334] set this up [337] right let me just share it here and then [339] send this to my email address first [342] there we go I'll jump back over here and [344] I'm just going to set this up so let me [346] close this down uh we'll just pretend [348] that this is my drive and then I think [351] bland. I don't actually know I might [353] have to refresh [357] this let me do some searching Bland at a [360] example there we go so I'm finding the [362] specific spreadsheet what I'm going to [363] do is grab the sheet name the table does [366] contain headers because we have the [367] phone number and we have the [368] instructions then for now I'm just going [370] to return one row and then I'm just [371] going to run this module in isolation [373] just to confirm that it [375] works okay great so I just ran it I [377] received a single bundle which is good I [379] received a phone number with my personal [381] phone number please do not hit me up uh [383] then instructions saying you're an [385] appointment schedule for left click ask [386] how the client's doing okay great we [388] have everything that we need now to do [389] this h TP integration now in order to [391] you know get the Syntax for this what [393] we're going to do is we're going to go [394] over to their API documentation which [396] you can find at doc stop land. api-1 [399] poost uh and then there's just a bunch [401] of different things that you could do [402] here um what I'm what I'm going to do is [405] I'm going to go down to this V1 API [407] reference then scroll down and just take [410] a look at all of these API endpoints you [411] could send a call Simple you can send a [414] call using Pathways Pathways is like [415] their way to Route calls depending on [417] people's answer which is quite brilliant [419] honestly [420] um then there are some longer API [422] endpoints like send a call you'll see [424] it's not simple so we actually have a [425] bunch of things we can do we can select [427] a specific model we could change the [429] voice we could do all this fun stuff and [431] I'll actually leave that for you guys to [432] try because I want this just to be an [434] introductory video I don't want this to [435] be like 2 hours but you can literally [437] like change how quickly people how [439] quickly the model responds the faster it [441] responds typically the Dumber it gets [442] but you can like go really far and [444] really Nuance with us like you could do [446] a lot here um treat it just like you [449] would the open AI API um there are that [451] many different features here way you can [453] then analyze the call with API uh with [456] AI and this is a really cool feature um [458] basically what you can do is you can [459] feed in a call transcript back into [461] another AI module and you can ask it [463] information so you can do stuff like um [467] hey uh you know in my in my reschedule [470] example you could say Hey you know did [473] the customer want to reschedule and then [475] if the answer to that is yes then you [476] can also go in and then analyze and pull [479] out okay what time do they want to [480] reschedule for and then maybe it's like [481] 11:00 a.m. you could then use that in [483] make to pull that data and then use that [485] to like update a freaking calendar right [487] so here are basically Limitless I'll [489] just show you how to use the send call [490] Simple endpoint for now I'll kind of [492] take it from there on the right hand [493] side here we see like the curl um [495] details and basically what we need to do [497] is we need to call this endpoint https [500] backb api. bland. A/V one/ calls and so [504] this is going to be the AI API that [506] we're going to call so I'm just going to [508] copy this in and then I'm going to go [509] over here and make an HTTP request [512] module just pump that in and then I'm [515] going to go down and make a request and [517] then connect it this is the URL and then [520] we have a bunch of settings that we need [522] to change here if we want this to work [523] so I'm going to go over here and just [525] make this you know put this right next [527] to me so it's a little bit faster first [529] thing we need to do is we need to add a [530] couple of headers and so the headers [531] here are content type application Json [533] so I'm going to go back here and I'm go [535] to [536] headers you can also uh just change this [539] by using using this but I'm just going [540] to try [541] and be [543] as like accurate as [547] possible so just going to copy and paste [549] these headers in and then there's also [551] an authorization [554] string that authorization is going to be [556] our API key which I have up here I'm [558] just going to copy this [560] in and then I'm going to paste this and [563] now we have everything that we we should [564] need to interact with the API oh sorry [567] we actually need two more we need the [568] data um oh and we also need to be post [570] so we're going to have to change that so [572] um we're going to have to change this [573] method from get to post there we go and [575] then we're also going to have to add in [577] some data in Json format with phone [579] numberers Task string which is great so [582] what I'm going to do is I'll go to body [583] typee raw content type Json application [587] Json and then I'm going to paste in this [590] and you'll see here that we put a string [592] in the phone number and we also put a [594] string in the task well if you remember [595] we have that data from um our sheet and [599] so what I'm going to do here is I'm [600] going to use the phone number that I got [602] here then I'm also going to use the task [605] that I have under [608] instructions and then um I think that's [611] it yeah I believe that's all we need it [614] may bug out because I've written content [615] type application Jason up here and then [617] I also have to select that down here so [619] we'll give that a try we'll see how it [620] goes um but yeah let's run once and [622] let's see what [624] happens let me just get my phone out [627] just in [628] case [631] just in case I get a call from our AI [633] overlords uh okay great it says uh [635] status call successfully cubed we got [637] the call ID here we got everything and I [639] just received a call from Washington [641] let's just pick that up and just verify [643] that this prompt [644] worked oh this is left click appointment [647] scheduling how are you doing today hey [649] man I'm doing really good thanks so much [651] what's this [654] about great to hear you're doing well [656] I'm calling to confirm your appointment [658] with us tomorrow at 9:30 in the morning [660] does that time still work for you yeah I [663] can actually make 9:30 could we do 12:45 [666] no scratch that [668] 1:00 okay no problem let's go ahead and [672] reschedule your appointment to 1:00 [673] tomorrow afternoon does that work better [675] for you yeah sounds good book me [687] in book me in [692] okay I've gone ahead and booked your [694] appointment for 1:00 tomorrow afternoon [696] is there anything else I can help you [697] with today NOP that's okay thanks so [699] much I really appreciate [702] it great I'm glad I could help have a [705] wonderful rest of your [707] day man the way that it says has have a [709] wonderful rest of day it's like it's [711] like secretly plotting to murder me and [713] everybody that I know have a wonderful [715] rest of the day anyway obviously that [717] worked um keep in mind because we're now [719] interfacing with the real world the [720] testing Loop is a little bit longer so [721] we actually have to go in deal with AI [723] come back to this it's not as quick as [725] just like looking at an output right uh [727] but that that looks pretty good to me [728] I'm pretty happy with how that went um [730] so yeah that's uh that's pretty cool and [732] I basically just already queued up the [734] queued up the thing um I think just [735] given the length of this video why don't [737] I actually go in and then do the analyze [738] call as well and just see how that goes [741] so um now that I have the reschedule in [744] why don't I figure out what time I [745] rescheduled for the way that you do it [747] is let's call this endpoint here [750] with the analyze call with AI endpoint [752] anyway so I'm just going to actually [753] copy this paste this in this is the [755] quickest way to do this sort of work um [757] just copy and paste the uh the previous [759] modules because odds are most of the [761] other API stuff is going to be the same [763] so content types the same authorization [765] going to be the same we'll do goal uh [768] and then we'll do questions so I'm a [770] little bit 5050 on what the goal would [772] be I don't really [774] know the overall purpose of the call [777] provides context for the analysis to [778] guide out the questions transcripts or [779] interpret okay yeah that's pretty simple [780] so let's go down here U the goal is just [783] going to [784] be um identify if the call was [788] rescheduled and if so what time it was [791] rescheduled for write the time [795] in military 24hour format so [803] 13:00 IE 13:00 this should help um and [807] then we have a couple of questions to be [809] analyzed for the call so we'll do who [812] answered the call they'll be kind of [814] human or voicemail so oh I guess you can [816] kind of Define like one or the other [819] positive feedback of the product [820] negative feedback of product this is [821] like a customer survey example um but [824] I'm just going to go [825] questions let me just check this out [828] questions this is going to be a an array [832] looks [834] like and then inside of the array the [836] first question is going to be like um [841] um was the appointment oh sorry I should [844] actually write was the appointment [847] rescheduled was the appointment [850] rescheduled and [851] then we'll have another item and that'll [854] be [856] like sorry let me just make sure I I got [859] this format [861] down true or [863] false and then what time was the [867] appointment rescheduled [870] to and then uh it should just be a [877] string okay I don't know if my [879] formatting is right here so I'm going to [880] go to Just Json formatter uh which is [883] just a service that you pump in your [885] Json and then if you click format [886] beautify and it and if it goes through [888] then you know that it's formatted [889] correctly so it's just a quick and easy [891] way that I space it out and make it look [893] sexy um so okay we got the goal identify [895] the appointments you're scheduled and if [896] so what time is your scheduled for write [898] the time in military 24 hour format IE [900] 13:00 questions was the appointment [902] rescheduled true or false if so what was [903] the appointment rescheduled two string I [905] don't actually know if this is going to [906] work but I think it will the last thing [908] we need to do is we need to grab the [909] call ID um if you look back on the [912] output of this then you'll see that one [914] of the parameters was the call ID and so [916] if we want to get this sorry we need to [919] parse the previous [920] module so I'm going to add a parse Jon [923] module [926] here and then I'm going to grab this [932] data and then um I'm just going to do [935] all this in one jump here uh there will [937] be a variable called callcore ID and [940] that's what we're looking [941] for so this call ID will be um curly [946] brace curly brace 6. callor ID curly [951] brace curly brace [954] oh there's some issue here with the [957] formatting for some reason so let me [959] just paste this up here 6. callor ID [963] okay cool should be fine sometimes that [966] happens with make.com um any [969] who let's do that and then what I want [972] to do here is I actually just want to [973] test this first and I can test this [975] because I have the old call ID of this [978] run so I'm going to copy it in and then [981] I'm going to run this and then my call [984] ID is just going to be this big long [986] string and so now it's actually going [988] over the [989] transcript and then it's essentially [991] identifying whether or not uh this [994] worked so okay status um success message [998] successfully analyze the call answers [1000] are that the call was rescheduled true [1002] and that um it was rescheduled for 13 o' [1005] which is awesome so you can imagine how [1007] now if we were to put a parse Json [1010] module after this so copy this puppy [1012] paste that [1014] in now we'd be able to get the um [1019] the answer here which is true or 13:00 [1023] and then what we could do is we could [1024] conditionally route this and say you [1026] know or filter it and we could say hey [1028] if true and only if true then go into [1031] our CRM and update the meeting right so [1033] pretty exciting stuff guys you can do a [1035] lot with this and it's freaking [1036] awesome um the last thing that I would [1038] do is if you wanted to run this in [1039] practice you'd probably need a sleep [1041] module in between here um so maybe a [1043] sleep module and then you might want to [1044] run the I don't know you don't know how [1046] long this thing's going to be talking to [1047] the a ad I'll probably be talking about [1049] you call some people they'll be like my [1051] wife left me and it'll be like oh it's [1053] okay like what do you want to how can I [1054] help you right so maybe we want to like [1056] have this be 300 seconds or maybe we [1058] even want to do longer maybe you want to [1059] like call some other service wait for [1061] like 20 minutes or something and then [1063] you know do that extra request um I'll [1066] uh get the blueprint for you I'm not [1067] going to include my own API key [1069] obviously and I'm going to like um uh [1071] deprecate mine so you know you guys [1073] can't do that but let me just rename all [1075] these so that you guys just have all the [1076] information you need to do this so this [1078] will be call customer and then this one [1081] will be analyze call [1084] contents and then why don't I also parse [1087] this Json just so it's a lot easier for [1089] you guys to take let's do that okay hope [1093] you guys enjoyed that video uh whatever [1095] your personal ethical interpretation of [1097] the fact that you can now have ai call [1099] people on your behalf whatever that is [1102] let's just all agree that whoever [1103] controls this sort of thing and whoever [1105] knows how to use this sort of thing will [1106] grow undoubtedly very economically [1108] powerful in the future so uh it is [1110] probably in your best interest to pick [1111] up this AI licky split um hope you [1115] guys enjoyed this if you have any [1116] questions about maybe other ways that we [1117] could use AI uh feel free to drop them [1119] down below as a comment I love sourcing [1120] ideas from you guys I actually Source [1122] bland. a from somebody in my comments [1124] like quite a while ago and I just [1125] totally forgot about it so yeah you know [1127] if you guys want to see a video at some [1128] point in time I'll just add it to my [1130] queue and and get to it eventually [1131] otherwise please like subscribe and hope [1133] you guys have a lovely rest of the day [1135] cheers

Video: https://www.youtube.com/watch?v=YLg8HTafhlk
Title: Don't Hire Anyone Until You Watch This Video
[0] what's going on everyone I've wasted [1] tens of thousands of dollars maybe even [3] hundreds of thousands of dollars on the [5] exact problem that I'm going to solve in [7] advance for you in this video it's on [9] hiring when to hire how to hire some [12] foundational Concepts behind hiring like [14] Revenue per employee and a few others [17] and generally I just want this to be [18] your hiring end all Beall no [21] for entrepreneurship or really whatever [23] path you're going down so if that sounds [25] like something you want to fix then stay [26] tuned and let's get into [28] it [31] so I've appropriately named this [33] document which is going to live on my [34] blog why the vast majority of hires are [36] pointless now I don't mean to do this [38] because I want to be inflammatory or [40] click baity although that obviously [41] helps with engagement and that sort of [43]  uh but it's true the vast majority [44] of hires that I have seen at seven and [46] eight figure agencies are totally [48] pointless they do basically nothing for [49] the organization and realistically if [51] the business owner had known a couple of [53] the things that I'm about to show you in [54] this video they probably would not have [55] made that decision and so what this [58] video is going to be is it's going to be [60] a deep dive into hiring I'm not really [61] going to look more look as much into the [63] philosophies I'm just going to look at [64] like how to actually make the right [65] hiring decision uh we're going to learn [67] a couple of like key metrics that you [68] should be tracking maybe some simple [70] structured management if this is your [71] first time going into like a management [74] type role or you know hiring people are [76] having people work under you uh but do [78] not hire somebody until you make it to [79] the end of this video please because I [81] work with tons of seven and eight fig [83] companies cannot tell you how big of a [85] bloat percentage of their payroll is [87] just going straight into the trash right [89] now okay great so why the vast majority [91] of hires are pointless number one it's [94] because you don't know your Revenue per [97] employee RP is an extremely valuable [101] three-letter acronym that I think more [102] companies should personally spend some [104] time looking into essentially it means [106] if you are making a million dollar a [108] year and you have five employees well [110] then your RP is a million divided 5 [112] equal 200,000 pretty simple when you [115] explain it that way however that simple [117] concept eludes probably 90% agency [120] owners out there like if you think about [122] it logically the purpose of a business [124] is to produce Revenue right and the [125] purpose of you hiring staff is to assist [127] you in the generation of that Revenue I [130] think some people at this point are [131] probably going to be like oh well no you [132] know the purpose of this guy is to like [134] help maintain the back end or whatever [136] but by maintaining the backend he's [137] doing what for you well he's allowing [139] you to continue producing revenue and [140] potentially increase the rate at which [141] you are producing Revenue so logically [144] every time you hire somebody you should [146] be adding to your bottom line now the [147] issue is a lot of the way that hiring [149] works today and a lot of the way that [151] hiring has actually been done for a [153] while but specifically today with like [155] remote work and you being able to start [157] a business by just going on up work and [159] making a client account and like getting [160] a team of 10 people under your belt is [163] basically there's some problem in a [165] business and so the business owner all [166] of a sudden has a need and then instead [168] of thinking logically through how to [170] solve that need without hiring the very [172] first thing the business owner will do [173] is think oh I have a need I should hire [175] somebody to take care of it for me this [178] unfortunately is this this organic [181] approach basically is like backwards [183] it's the exact opposite of what you [184] should be doing and it lands staff in [186] some really hot water uh when it comes [189] time to like discuss performance and [190]  like that so you're not really [191] doing anybody any favors uh by by you [194] know using that that hiring [196] structure a better way to hire is to [198] anticipate needs in advance to know [200] exactly how much utilization each staff [202] member on your team currently has can [204] currently take and when you need to hire [206] somebody else and to make sure that [208] every time that you hire you're hiring [210] because it's the last thing that you [211] have to do right not the very first [213] thing that you should be doing it's like [215] the last alternative option and you're [216] like I guess I really got to hire [218] for this so Revenue per employee the [221] reason I bring it up is because it helps [223] uh solve all of that just by thinking [225] consciously through what your RP is at [227] any given point in time are usually able [229] to you know both just like Center your [231] priorities and just understand okay like [233] listen if I'm hiring an account manager [234] for my business like how much money [235] should that account manager [236] realistically be making me right I'm not [238] going to move forward until I figure [239] that out so I've written some [241] guidelines over here um they're pretty [242] straightforward the first is if you [244] don't know your RP or Revenue per [245] employee calculate it now super simple [247] to do you just take your annualized [249] Revenue divided by your number of [250] employees so I have a cute little sketch [252] pad over here let's say um you know I'm [255] making 80k per [258] month what we do is we multiply that by [261] 12 and my math ain't so good but I think [263] 80 * 12 is [266] 960k so 960k is our annualized revenue [270] and let's say we have six staff members [273] right so what we do is we divide 960k by [276] six and then we end up with 160k [280] each so our Revenue per employee is now [284] 160k now what you can do with this RP [288] figure is you can further use it in [291] additional calculations to determine [292] what's called like your your your uh [295] return on employee or like your Roi per [297] employee for instance let's say that for [300] these six people you're spending an [302] average of I don't know $60,000 a person [305] so now if you divide 160 buy [309] $60,000 what you'll get if you just [313] forgive my shitty um math here is you'll [316] get basically like a revenue or a return [318] on employee of 2.66 7 and we can just [322] call this like return on employee or [325] even just you know I just like to think [326] of it as Roi and this is basically like [329] your multiple for every dollar you spend [331] hiring an employee you're going to get [333] $266 back and it's a very simple way of [336] just conceptualizing this the reason why [337] I bring this up is because if you think [340] about it like an [343] Roi of [345] 2.67 X like in the grand scheme of [348] things if we just be real with each [349] other here that's a pretty low Roi there [351] are probably a ton of other things that [353] you could do right now in your business [354] to turn $1 into more than [357] $267 assuming that you put a little bit [358] of time into it [360] also keep in mind that this is a very [361] time intense procedure hiring somebody [363] you don't just like press a button [364] online and then hiring is taken care of [366] when you hire somebody you have to like [368] train them you have to Mentor them you [369] have to onboard them you have to have [370] systems and structures in place you got [371] to deal with risk with termination and [372] that sort of realistically this [374] 2.67 if you think about it it's probably [376] after you factor all that in less [377] than 1.5 so you know like there are just [381] so many other things that deliver more [383] than a 1.5x Roi like if we're just sort [386] of you know listing all the things in [388] order uh 1.5 or 1.6x Roi is probably [393] over here and then realistically there's [395] probably an action you can take right [396] now to get you at least a 3xr y maybe on [399] like the sales and marketing side of [400] things or I don't know building out some [401] system or copying and pasting my [403] automations what have you so just a [405] really simple and hopefully [406] straightforward way of just [408] conceptualizing why hiring should be the [409] last decision that you make um and why [411] you should use Revenue per employee to [413] sort of like ground yourself Center [414] yourself and consciously just constantly [416] just be thinking hey man like do I [418] really need to hire somebody right now [419] is hiring somebody really the best move [422] so yeah that's number one now I also [424] mentioned down here that there are a [425] number of ways to hire today um you [426] don't just hire employees like 30 40 50 [429] years ago it's probably more common just [430] to have a team of like six or seven [432] employees that were salaried and in [434] house and you PID them a certain amount [435] every day today you have contractors [438] Freelancers flexible temp workers there [441] are a variety of other job types that [444] make this a little more complicated [445] especially for agencies uh at around the [447] 78 figer mark because they typically [448] employ a ton of cont contractors so what [450] I'd recommend here is if you run an [452] agency and you have a bunch of [452] contractors you want to apply this to [454] your business calculate Revenue per [456] employee and revenue per contractor [457] differently because they do different [459] things most of the time and they sort of [460] have different value propositions and [461] different hiring Logistics right it's a [464] lot easier to hire a contractor than it [466] is to hire a full-time salaried employee [468] 1099 versus W2 if you're in America or I [471] think like T4 or t4a in Canada I don't [474] know man I don't run a Canadian company [477] any who um yeah so what that means is [479] let's say a 15 contractors for that 960k [482] calculate uh 960k divided by 15 to get [484] your Revenue per contractor then if you [486] have like the remaining six members do [488] 960 x 6 to get your uh return on [490] employee and then just keep track of [492] those two figures you know adjacently I [495] guess uh and make sure that you know [496] okay like the Roe is probably going to [498] be a little bit higher than the return [499] on contractor just because I have so [501] many more contractors you don't need to [502] equivocate the [504] two uh and then I mentioned you should [506] have a rough understanding of the RP [507] that you're hiring for before you [508] actually hire for the position position [510] so like if you know that your account [512] manager is going to cost $50,000 ask [515] yourself how much money do I want this [516] account manager to unlock for my [518] business probably at least $200,000 [521] generally speaking return on employees [522] nowadays in 7 eight figure agencies with [525] technology and stuff like that they can [526] be anywhere from like three to like in [528] many cases like six or seven depending [530] on if you're augmenting their flow right [532] obviously I'm going to recommend that [533] you go for the six or seven as much as [535] seemingly possible but yeah if you are [537] paying somebody $50,000 just make sure [539] that they're generating you like at [540] least $200,000 if that makes sense uh in [542] terms of like their Clan capacity and [544] how much they can take on and all that [545] sort of stuff okay great that's number [547] one number two is clearly defined daily [550] accountability this is more of a [551] managerial thing than anything else and [553] this is something that the vast majority [554] of seven and eight figer agencies that [556] I've seen experience really fast growth [558] inevitably screw up on because when [560] you're growing really fast as a Founder [561] business owner entrepreneur whatever you [562] want to call yourself your time's [564] extremely limited and it becomes very [566] difficult to break something if it's not [569] really broken or try and fix something [572] if it's not really broken yet the issue [574] with staff is that they rarely chug [577] along and be perfect and then all of a [579] sudden break all at once it's more of [580] like a slow inevitable decline in your [582] margins and their performance and their [583] ability to do things and their respect [585] for you as well so in order to avoid [587] that what you need to do is you need to [589] clearly Define daily accountability [591] practices it was Peter jker that said [593] you can't improve what you don't measure [595] and I keep that in mind basically [596] anytime that I'm making a hiring [597] decision for my own company or for one [599] of the many companies that I do [600] operations and Consulting with the vast [603] majority of the time when I enter a [604] business their staff like at least a [608] third of the staff members they do [611] absolutely nothing when I mean when I [613] say nothing I mean like in terms of [615] their like like actual deliverable [617] output it's something that you could [620] probably do in an hour and you're giving [622] them a task for them to do like a whole [625] month so you could literally like if you [627] just wanted to say it I'm going to [628] spend the next hour doing something you [630] could usually accomplish that whole [632] person's month of work in an hour which [634] is obviously ridiculous and there's no [637] need to be spending 5 10 or $15,000 on [639] somebody to do something that you could [640] do in an hour that's like a terrible [642] misallocation of resources and obviously [644] your first question is like well why the [646] hell are they doing nothing ask them [648] dude you got to hire somebody else but [650] it's not like the business owner or HR [652] manager whoever hired that person like [654] didn't understand this you know the [656] situation wasn't like that initially [657] what ended up happening was at the very [659] beginning of that person's tenure with [660] your company they were doing great they [662] were probably delivering you know 100 [664] times that output but every month [666] because you didn't have some structured [668] accountability practice and basically [669] because you didn't have check-ins and [671] one-on ones and that sort of thing the [673] person or the staff member you know [676] because nobody likes doing freaking work [678] or the vast majority of people don't [679] like doing work every month that they [681] don't get called on something they're [682] just going to do a little less a little [683] less a little less I break it down a [685] little more philosophically over here by [687] saying human beings are animals and like [688] all other animals a to economize our [690] energy usage wherever possible we're no [692] longer prowling the African Savannah [693] hunting Predators or prey uh but don't [696] think for a second that we're not [697] eventually going to employ similar [698] energy economization strategies in a [700] business so maybe that's like a more [702] palatable or nice way to say it but sort [705] of like the pragmatic or what's the [708] term sort of like sad way of looking at [711] it is that people will just [714] inevitably you know decline to whatever [717] you tolerate and so in companies that [719] don't have structured management [720] practices don't have like good managers [721] or just don't have some type of like HR [723] scheme that at least checks in on their [724] performance every once in a while you [726] know they will inevitably do absolutely [728] nothing unless they're checked in and [729] called on it so yeah in order to avoid [732] that I'd recommend you clearly Define [733] daily accountability practices for uh [735] your employees and contractors that are [737] with you and maybe doing more than like [739] 10 or 15 hours a week sort of deal they [741] should be doing some type of daily [742] accountability as well what I mean by [744] this is basically every job position [747] that you hire for like in order to do [748] this in practice you just want to make [750] sure that you have a set of daily duties [752] if you're hiring somebody to do your ads [753] for instance then make sure that every [755] day they check in on your ads for x [756] amount of time and then maybe on top of [758] that they write new copy for an hour [761] then on top of that maybe they review [763] creatives from like the design team for [765] at least an hour just make sure that [766] there's some daily practice that that [768] person has to do every day Monday to [770] Friday or whatever their work schedule [771] is whenever they sign in to your [773] business this is particularly important [776] in remote work obviously if you're in an [778] office it's a lot harder to do [779] absolutely nothing and get get away with [780] it so it tends to happen less but the [782] vast majority of you guys watching my [783] videos probably run remote companies or [785] are looking to start a remote company so [788] yeah make sure that you just have some [789] type of daily Duty the way I do this in [791] practice is I will estimate how long it [793] takes to do all of my tasks and then [794] I'll just leave them another two or [796] three hours on top of that so if I want [798] them to work an 8 hour day you know I'm [800] spending four or five hours on that task [802] and then I'm leaving them a two three [803] hour buffer so that you know if there [805] are any overages or any complications [806] with that task then they still have [808] enough time to do it and then it also [809] allows me to Loop them in on calls or [811] get somebody involved in some other [813] project to maybe make use of a slightly [814] different skill set that sort of deal I [816] find in practice this typically works [818] the best now in order to make that [820] matter right like daily Duties are one [822] thing and they're important and that'll [824] already take you very far but you need [825] to implement some type of tracking for [827] each of those duties and you need to tie [828] each of those duties to some type of [829] deliverable what I mean by this is and [832] it doesn't have to be complicated at all [833] way too many people make this way too [835] big of a deal if somebody is writing an [837] article for you and their job to write [839] articles just have them fill out a tiny [841] form at the end of every day either [843] telling you how many articles they wrote [845] or linking you to the pieces that they [847] wrote or just writing down how many [849] words they wrote really simple [851] right I mean this takes the staff member [853] less than 5 Seconds to do at the end of [854] their workday but that additional 5 [856] Seconds helps save you realistically [860] like 30% on that staff member it's such [863] a high Roi move to just have a simple [866] form that at the end of their workday [868] they have to go to and then out and in [870] my personal experience and [872] recommendations I would keep this as [874] simple as possible keep it to one or two [875] questions at best oury is going to be [877] dumb and then all you need to do is uh [880] when you or your manager does a [881] one-on-one a one-on-one if you guys are [883] familiar is just like a sort of like a [885] routine regular check-in you can do them [887] maybe once a week you can do them [888] bi-weekly you can do them once a month [890] there are different implications [892] depending on frequency but whatever your [894] one-on-one frequency is it's basically [896] just where you check in and see other [897] person's doing if they need any help if [898] they have any blockers uh when you're on [900] your one-on-one with that staff member [902] with your direct essentially just [903] compare their performance this period to [905] last period that's all you have to do [907] you don't even have to dive in there and [908] start providing structured [910] recommendations or working with them on [912] some performance plan if you just show [914] them that somebody is watching their [915] output they'll usually perform a lot [917] better again I think you can interpret [919] this however you want you can interpret [921] this as you constantly staring over [922] their shoulder and snooping and being [924] like I'm trying to squeeze every last [925] drop of value out of you but in reality [927] human beings are just animals animals [929] just perform better when they know [930] somebody else is around somebody else is [932] listening so call it whatever you want I [934] choose to interpret this positively but [936] it is very important if maximizing [937] performance is one of your [940] goals okay and then the last thing I'm [942] going to mention and I already touched [943] on this earlier but it's before you hire [945] make sure that you explore every [946] alternative to hiring hire as a last [949] resort not as a first Resort now I bring [952] this up because most entrepreneurs [954] hiring process is basically again I'm [956] busy have some need I don't have time to [958] fulfill that need I got to hire [960] somebody realistically before you even [963] get to the hiring stage in the year 2024 [965] with the technology that we have and the [967] software excuse me software platforms [969] available to us and all the wonderful [971] tool man it's like freaking gay space [974] communism Utopia we're basically there [976] already it's it's incredible just how [977] many options that the average person has [980] to fulfill or do a task without a human [982] being involved make sure you explore all [984] of them first I mean think about the [986] return on investment here if you just [988] set aside like 20 or 30 minutes and just [990] think [991] through how you can turn that task into [994] something that can maybe be robotic [995] process automated or maybe delegated to [998] somebody that currently exists in your [999] team or maybe restructured or whatever [1001] like 70% of the time you will be able to [1003] do that task and if you think about it [1005] like you were going to have to spend at [1006] least half an hour hiring for that role [1008] anyway I mean if you're hiring it's [1009] probably going to take you at least 20 [1010] minutes to whip up the job post right [1012] it's going to take anybody else in your [1013] team a couple hours to get that done [1015] you're going to have interviews you're [1016] going to have structured processes [1017] you're going to have paperwork like why [1019] not just pretend that that isn't going [1021] to happen and you're just not going to [1022] hire somebody and take that time towards [1024] solving the problem some other way [1026] instead sounds simpler than you know um [1030] you know it sounds simpler in theory [1032] than it really is in practice but that's [1034] what I'd recommend next time that a need [1036] arises place an artificial constraint on [1038] yourself and pretend that you can't hire [1040] a human being to solve it I joke here [1042] that it's because we're all extinct now [1043] sorry but you know really just think [1046] okay this is something a human [1047] being can't do for whatever reason I [1049] need to find another way to solve this [1050] problem now what this usually looks like [1052] in practice is it looks like you have [1054] some task like write an article or [1056] something and then your whole job is to [1058] break that down into a few subtasks and [1061] then try and farm out as much as you can [1063] of those subtasks to like a robot or [1065] chat gbt or some small micro software [1069] company or some like that um and by [1071] chunking it down you can usually just [1073] achieve much higher profitability if you [1074] do inevitably have to end up hiring for [1076] that role anyway I have an example here [1078] for you and this is a company that I'm [1080] currently working with it's an SEO [1082] agency their main task right now is to [1084] like produce articles for clients they [1086] do a ton of other stuff too of course [1087] but right now it's like hey we have 40 [1089] something clients right now we just need [1091] to be producing weekly articles um in [1093] order to fill up some q and the way that [1095] this company works is is at the time of [1097] the writing they have three full-time [1099] writers and every time that they hit [1101] capacity and they need another you know [1103] they get a few more clients in or [1104] whatever they just hire another [1105] full-time writer now this is an [1106] extremely inefficient uh budget [1108] allocation [1109] uh by my recommendation and I've told [1111] you know the founder this and I've [1112] walked him through a couple of [1113] Alternatives and he's sort of leaning in [1114] that direction he thinks he's going to [1115] do it in the next few months but um you [1117] know as a present they still have their [1119] three full-time writers what happened [1121] about a month and a half ago two months [1122] ago is their editor who's a lovely woman [1125] but she got extremely overwhelmed with [1127] all the work that was falling on her [1128] plate and she told the business owner [1129] essentially hey you know I think what we [1131] need is we need somebody to help us [1133] rough draft pieces so that like we can [1135] do more editing than we actually do [1136] writing and it'll be a lot faster and [1138] it'll sort of un lock a bottleneck in [1139] our business which is good thinking uh [1141] but in this case it ended up being just [1143] a total an utter waste of time what [1145] ended up happening is the business owner [1146] decided okay sure I'm going to hire [1148] somebody by making that decision he [1151] basically destroyed or like deleted 5 [1154] hours of his productivity which we're [1156] going to call worth at least $300 an [1158] hour because he's an incredibly High [1159] earner and he's at least worth that to [1161] the business if not much more um he [1164] ended up hiring a novice part-time [1165] writer for about $2,500 a month and so [1168] you know if you conceptualize it that [1169] first month expense was 300 an hour time [1171] 5 hours of his time plus $2,500 [1173] basically [1175] 4K now if you know and he he asked me [1178] about this and he asked what I would do [1179] and I was like don't do this right this [1180] is a terrible idea but as consultants go [1182] you know people don't always listen to [1184] our recommendations what ended up [1185] happening is he hired a person and then [1188] within a month he fired her because [1189] there was just no value really being [1190] produced no real uh difference to the [1192] business and definitely not something [1194] that was worth $4,000 that first month [1196] expense what he should have done is he [1198] should have taken hiring to be the last [1200] resort for that problem when his chief [1203] editor came to him and said Hey listen I [1205] really think we need to hire somebody he [1206] shouldn't have taken her at face value [1208] and been like oh yeah you're right we [1208] should hire somebody he should have been [1209] like hm well let me think about this are [1211] there any ways to solve this problem [1213] without hiring and I think if he had [1215] just considered that problem statement [1217] for more than 5 10 or even 15 minutes he [1220] would have probably been able to list [1221] like five things he could have done [1222] without hiring now I sent him some [1224] variant of this uh what I just pasted in [1227] over here but he have done any one of [1229] these and it would have solved his [1230] problem for like anywhere from a quarter [1232] of the cost to maybe like [1234] one 40th of the cost I want to say I [1237] think if my math is correct um some of [1239] the some of the solutions don't even [1241] cost anything but like you know let's [1242] think about it like do you really need [1243] to hire a rough draft [1245] writer no he could have instead of [1247] hiring somebody in house he could have [1249] looked for maybe a product ised agency [1251] somebody like me at one second copy or [1253] uh Joe Davies at F show or a variety of [1255] other simple outline or draft businesses [1258] there are hundreds this is a big [1259] industry by the way just look up like [1261] rough draft Outsource or something like [1263] that and you'll find that tons of these [1264] businesses can produce rough drafts who [1266] are meant to be rough they're not [1267] perfect of course but they can do it for [1269] about $15 an article you know if you [1271] consider that versus the $4,000 that he [1273] spent in the first month for $4,000 you [1275] could have produced 266 rough drafts [1277] right uh for the same first month [1278] expenses that hire took except the [1280] turnaround time would have been a lot [1281] shorter because you got a whole team [1282] working on it now uh it could have been [1283] higher quality who knows might have been [1285] lower quality but it also could have [1286] been higher quality you wouldn't had to [1287] train you wouldn't have to hire you [1288] wouldn't have to interview you wouldn't [1289] have to do any of that shed and there [1291] would be no liability now in this case [1293] the team only produces about 60 articles [1294] per month so realistically you can just [1296] cut that $44,000 month expense into four [1298] and then you know realistically they [1300] could have solved all of their problems [1302] uh for a cost of $1,000 a month if they [1304] just outsourc this instead of looked for [1305] an in-house hire so it's just one [1307] solution I thought about this for maybe [1309] 20 minutes and I came up with another [1310] three that I consider pretty good as [1312] well um what I did at one second copy [1314] once to solve this very particular exact [1316] same problem was I just restructured my [1318] my team uh and I turned a few of them [1320] from like writer editors into just rough [1323] draft writers and then I just had them [1325] do the rough drafts you'll think you'd [1327] think that by transforming some of our [1330] editing productivity or whatever you [1332] want to call it utilization um the total [1334] output of the company would go down but [1336] no it turns out by turning some of our [1337] writers into or turning some of our [1339] editors into rough draft writers it [1341] actually allowed us to widen a big [1343] bottleneck in our business and then we [1345] were able to produce like 10 or 15 maybe [1347] even 20% more [1349] output with literally the exact same [1350] resources and if you consider that like [1352] our actual internal cost for that was Z [1354] it was just you know telling people hey [1355] we're going to pay you the same but we [1356] want you to do something slightly [1357] different because you know we have a [1358] need right now so that's why I did a one [1360] second copy ended up being about 20% [1362] more productive for $ Z additional spend [1364] you could have also used an outline [1365] platform something like Surfer SEO maybe [1367] hr's one of these SEO tools out there [1370] these software platforms that can [1371] automatically create outlines for you [1373] using keywords that might have cost you [1375] 100 bucks a month you could also have [1376] obviously experimented with chat GPT [1379] maybe just train your team a little bit [1380] better on how to use chat gbt to [1382] generate an outline so that in an hour [1384] if you consider like an hour of resource [1386] utilization the first 10 minutes is [1387] spent on chat gbt making a wonderful [1389] outline the other 50 minutes is spent [1391] actually doing the editing like a 1 to [1392] six breakdown instead of actually like [1393] hiring a specific person to do that work [1396] so the point that I'm making is by [1398] elucidating and enumerating all these [1400] points you just don't need to hire in [1403] the vast majority of cases and usually [1405] there is a much better outcome or choice [1408] really if if you don't hire instead of [1410] hiring being your first call anytime [1412] you're facing a problem try and make it [1413] your last call and I guarantee you your [1415] company's going to be substantially more [1416] effective and not only is it going to be [1418] more effective uh sorry cost effective [1420] not only is it going to be more cost [1421] effective it's also going to be leaner [1423] but um it's also going to be faster [1425] because when you have fewer people in a [1426] company information disseminates quicker [1428] you have less managerial overhead you [1430] need to Loop fewer people into the [1431] meeting you have fewer opportunities for [1433] lowest denominators to basically [1435] bottleneck your flow the last thing that [1436] I want to show you guys is a little [1438] graphic here that I just found from the [1440] lovely uh Jason low I hope I'm saying [1443] his name right on Twitter and [1445] essentially it is a breakdown of how [1447] much the revenue per employee has [1449] changed over the course of the last 30 [1451] years this is sort of going backwards [1453] instead of Revenue per employee it's [1454] workers needed at S&P 500 companies to [1456] generate $1 million in Revenue what you [1458] see is back in like the 1990s or so you [1461] needed about seven workers to generate 1 [1463] million in Revenue so if you just go 1 [1465] million and divide that by seven that [1466] means the average revenue per employee [1468] was about 142,000 in the year 1995 it [1471] was about 200,000 in the year 2000 it [1474] was 250,000 in the year 2010 it was [1477] already about 400,000 and the year 2020 [1479] it's over [1480] 500,000 right or 2024 it's over 500,000 [1484] so what I mean to say here is the rest [1486] of the world is changing especially at [1488] these big S&P 500 companies where this [1490] was mathematically modeled but the world [1492] is changing if you don't improve your [1493] own hiring practices you're going to get [1495] left behind and with the Advent of [1497] flexible artificial intelligence stuff [1500] like GPT 4 and CLA and maybe gpt7 by the [1503] time you watch this [1504] video Revenue per employee is going to [1506] get to the point where realistically you [1508] might be able to have like a billion [1509] dooll business with you and like one [1510] other dude right so just make sure [1512] you're on top of it make sure you [1514] understand um logically and practically [1516] what to do next time you want to hire [1518] somebody and you'll be okay awesome hope [1520] you guys enjoyed that video I wish I had [1521] a time machine so I can capsule this and [1523] then send it back to myself 3 years ago [1525] probably would have saved at least 50k [1526] maybe more than $100,000 now that I'm [1528] thinking about it but say love uh you [1531] live and you learn that's why I can [1532] produce this video today if you guys [1533] have any questions or like that leave a [1535] comment down below more than happy to [1537] address them as per usual otherwise like [1539] subscribe and I'll see you all on the [1540] next video thanks so [1545] much

Video: https://www.youtube.com/watch?v=DvwR8Y8F5W0
Title: 6-Step System To Productize Your Agency And Make $90K/mo
[0] what's going on everybody in this video [2] I want to show you guys how I took my [3] content writing company 1 second copy [6] from $10,000 a month all the way up to [8] over $90,000 a month at are Peak using [12] productization now productization is one [14] of those terms that I think a lot of [15] people have heard about but not too many [17] people have actually pulled back the [18] curtain and investigated and what I want [21] to do in this video is just provide you [22] guys a step-by-step road map to how to [24] productize your own business whether [26] it's an agency or an info product or a [28] coaching company or what [30] I've never seen anybody actually talk [32] this pragmatically or this simply about [34] productization and I thought that this [35] video would be valuable whether or not [37] you were somebody that owns a business [38] right now that needs to productize or [40] somebody that's just considering doing [41] so in the future so regardless of [43] whatever Camp you fall in if that sounds [45] like something you're interested in stay [46] tuned and let's get into [50] it so I recently accepted a really big [53] contract to basically move to Prague for [56] the next month and then work hand inand [58] with a company to productize their [61] business Implement a bunch of automated [63] systems do a bunch of operations this is [65] the sort of stuff that I love to do and [67] uh I'm going to dive into what I'm doing [69] for that company near to the end of the [71] video but before I lead into that I want [73] to just talk about what productization [75] is why you should productize uh where [78] productization came from and you know a [80] couple of the motivating factors that [81] have made productization so popular in [83] agencies today so in any sense the word [85] productization is probably the most [87] impactful thing that you can do for your [89] business if you run an agency if you [91] haven't already done it like this is [93] something that will completely change [94] the game not necessarily because it'll [96] help your uh Topline so it's not [98] necessarily going to help your Revenue [100] although it is definitely in my opinion [102] um something that makes it way easier to [104] scale a business but because of its [106] impact on profit and there's a phrase [108] that I always hear in the agency space [110] and it's that revenue is Vanity profit [113] is sanity and that's very true because [114] when you're running a marketing agency [116] or an automation agency or just some [118] type of service typically you can grow [120] your Top Line extremely quickly to like [123] pretty sizable numbers pretty quick like [125] you can get 50,000 100 $150,000 a month [128] but the question is how much of that [130] they actually keeping at the end you [131] know because agencies are such a people [133] focused business what always ends up [134] happening for the novice entrepreneur is [136] they will grow their Top Line like crazy [138] be this big exponential spike thing [140] they'll be like I'm making $100,000 a [142] month and then because the only way that [144] they know how to solve the problem is [145] just by hiring a ton of people uh [148] you know when they look at the end of [149] that month and they try and like [150] determine okay how much of this actually [151] like came into my pocket it's usually [153] abysmal it's usually like 5% 10% 15% so [156] productization is a way that you just [158] completely avoid that and it's probably [159] just one of the simplest levers that [160] allows you to I want to say like double [162] your profit margins if you're just like [164] an average agency owner uh in some cases [166] triple if you are sort of struggling [167] with some of the things that I'm going [168] to talk about now so what is [171] productization well most agencies [173] struggle with scope creep they struggle [176] with a variable cost of goods sold you [178] know if you're a marketing agency and [179] you take on this big social media [181] project you know you you have kpis that [183] you set and you have like uh you're [185] trying to deliver some result for that [187] client but most of the time it's not [188] super clearly defined it's not like [190] we're going to get you to 10,000 [191] followers in exactly 38 days right [194] normally it's like we're doing like [195] monthly marketing packages for you so [197] we're going to do certain things but you [199] know what sort of outcomes you get are [200] totally up to you and as a result of [202] that a lot of the time projects get [203] scope creeped and so projects that you [206] initially started doing where you [207] thought that you know your team was only [208] going to do x y and z well now you've [210] also added a bcde e and f in um another [213] big issue is with a lot of these [215] projects specifically in marketing [217] agencies but also in automation agencies [219] I found you know just running one [221] projects can get extremely bloated very [223] quickly and then they can also take a [224] lot longer than you initially scoped [226] which inevitably leads to a poor client [227] experience and that leads to poor [229] retention and you know it always costs a [232] certain amount of money to acquire a [234] customer and so anytime you can retain a [236] customer rather than acquire a new one [238] you should like if you think about it if [239] you're running an ad campaign it cost [240] you like an average customer acquisition [242] cost of $300 or something to like get [244] somebody on board um and you're doing [246] some type of monthly service like sure [248] you could just like continue growing [250] your customer base and paying $300 every [252] single time you acquire one uh but if [255] you just get one person to renew then [256] you're basically getting them to renew [257] for a cost of zero dollars right and so [259] retention is always better than [260] acquisition anyway um yeah so you know [263] projects get bloated they lead to just [265] poor client experience people aren't [267] very happy it's just not a situation you [268] want to work in so what productization [270] is is basically when instead of [272] providing like a bespoke agency [274] experience or something that's a little [276] more white glove what you do is you try [278] and provide the exact same experience [281] every single time that you deliver a [283] product or a service and I'm talking [285] exact same experience that's the entire [287] reason why you productize and the idea [289] is to turn your service which is [291] something soft and fuzzy and warm and [293] you know loose around the edges into [295] like a physical almost like product [298] something that's extremely rigidly def [299] mind something that you know it's very [301] clear what this thing is and what it [302] does and something where there's [304] basically no miscommunication [305] expectations are set and then you can [307] start you know fixing a lot of the [309] problems that usually plague companies [311] like what I was talking about before and [313] so you know these problems there are a [315] thousand that you think that you know [317] right now and there are also like a [318] million that you do not even know about [321] that productization solves and I'll get [323] into that next so obviously the question [326] is okay like what are those problems and [327] why would you want to producti well the [330] simplest way that I could put it is [332] productization enables you to fix your [334] cost of goods sold if you guys are [336] unfamiliar with cost of goods sold is [338] it's basically all the time and energy [340] and money that goes into producing the [342] thing that your clients you know want so [346] um some people are going to say that [348] this is technically referred to as cost [349] of service in the agency space whatever [350] I just call everything cogs but like you [352] know the cogs might be in an agency like [355] let's say you're doing a marketing [356] campaign and you have some type of like [358] monthly check-in or whatever well it's [360] the amount of money that it costs you to [363] uh pay the people maybe you're doing it [365] per hour to run the marketing campaign [367] it's the amount of money that it costs [368] you to like pay for your slack Channel [370] or something like that so that you can [371] host a place for you guys to have that [372] conversation it's the amount of money [374] that it costs for you guys to um I don't [377] know uh invest in like the education [380] required to do that specific thing so [382] maybe there's some documentation that [383] like a new hire needs to read in order [385] to do that thing basically it's all the [386] money that goes into providing that part [389] particular service to the client and the [392] reason why cogs is so important in [393] business is because basically lets you [395] get a feel for whether or not this is [397] like a good business vertical to go in [399] or whether or not the way that you're [401] doing this is profitable and something [402] that's scalable and growable and that [404] sort of thing so productization [406] basically lets you reverse engineer and [408] then figure out what your cost of goods [410] sold are going to be every single time [412] with basically zero risk of any scope [414] creep zero risk of any project bloat [417] zero risk of ever going over and zero [419] risk of ever just like you know pulling [420] your pockets inside out and realizing [422] you got all in there at the end of [423] the month and that's one of the reasons [425] why people like it so much an added [427] benefit is when you producti you [429] understand exactly how many staff [431] members you need in order to deliver the [433] service that your clients want you [434] understand exactly when you need to hire [437] a new staff member to do it right if I [439] know that you know my staff member X can [441] take on 10 clients and I'm at nine [443] clients right now you best believe I'm [444] going to start thinking H you know I [445] should probably start looking to hire [447] when I get my 11th so very very simple [450] and very easy and very scalable in that [451] way and then it also allows you to [453] manage your resources which in modern [455] agencies usually just mean software [457] subscriptions and that sort of thing so [458] productization just lets you kill like a [460] million in one birds in in one with one [462] stone and probably more importantly than [465] that it lets you justify spending time [468] and energy internally towards Building [470] Systems to deliver that product better [474] and faster and more streamlined and more [477] profitably every single time after [479] basically lets you if you think about it [481] in as an [483] example if we could di back the clock [485] 100 years it basically lets you invest [487] in your own manufacturing plant and then [489] buy the Machinery needed to produce the [491] same goddamn thing every time and just [492] do it better and faster and cheaper than [494] everybody else so that's why you would [497] productize that's what productization is [499] what a lot of you guys are probably [500] wondering is okay Nick then how the hell [502] do I actually productize my agency and [504] that's what I'm going to do and talk [506] about right now so this is something [508] that unfortunately I've never seen [509] anybody just lay out in my opinion as [511] simply as I've done here productization [513] is basically a basically producti [516] productization baby it's it's basically [518] like I think a seven or maybe eight step [519] process where you start at the end and [522] then you work your way back to the [524] beginning and productization can also [526] help you figure out your prices if [527] you've never really you know determined [529] how to price or if you're still pulling [530] prices out of your ass when the client [532] inevitably asks the end of the sales [533] call it just lets you solve so many [535] things and so that's what we're going to [536] talk about right now so here's a [538] step-by-step guide to product in your [539] agency very first thing you need to do [542] is determine what type of service are [544] you providing are you providing a [545] one-time service are you providing a [547] recurring service now I highly recommend [550] if you guys are in the agency space you [551] find a way to make your service [552] recurring you try and get away from [554] onetime Services as much as possible [556] it's not impossible to grow an extremely [558] profitable and big business with onetime [561] Services I know a bunch of companies [562] that do I always shout out my boy Joe [565] Davies at F show with his like eight [567] figure productized SEO company because [569] this is a perfect example of one but you [572] best believe that it's really hard and [574] you know you have to like really know [575] your stuff like these guys do in order [577] to make it work so you know figure out [579] if your service is one time or recurring [581] and if it's one time ask yourself if [582] there's any way to make that recurring [584] if it's recurring then Define the time [586] schedule so you know it's recurring but [589] like what on What basis is it recurring [591] is it recurring every week is it [592] recurring every month is is something [594] that recurs every quarter when I say [595] recurs I mean like you know what is the [597] client getting every week or month or [599] quarter basically so you know if you [602] deliver a weekly report then I count [604] this is recurring every week and so [606] everything that goes into that weekly [607] report you're just going to repeat the [608] next week if you're doing like a once a [610] month call or something like that where [611] you go over some detailed thing uh then [613] that's recurring every month and so you [615] know start looking at costs on a weekly [617] and a monthly basis okay great so [619] assuming that now you guys you know have [621] determined whether or not your services [622] one time are recurring it's time to [624] actually go ahead and productize it so [625] step one is you need to figure out your [627] deliverables and this is me starting at [629] the end once we figured out our [631] deliverables we can start working [633] backward to how we're going to get those [634] deliverables done who's going to do [636] those deliverables how to staff how to [638] hire how much money to spend on people [639] and that sort of thing but it all starts [641] with the deliverable now a lot of people [644] don't actually fully know what a [645] deliverable is and it's cool because I [646] didn't actually know this until quite [648] recently um but I'm just going to give [651] you a bunch of examples and hopefully [652] you'll be able to pattern match this so [654] for instance if you're a lead generation [656] agency which you know I used to be a [657] lead gen agency I used to sell leads uh [659] a lot of the time somebody asks you hey [661] man what what's your deliverable what's [662] the first thing that's going to come to [663] mind you're probably going to say my my [665] deliverable is leads that's what I do [667] I'm a lead generation agency I deliver [669] leads to my customers but in reality [672] deliverables are more nuanced than that [674] the question that you got to be asking [675] yourself is how Are you delivering these [677] leads to the customer like what form is [679] the customer getting you know these [682] leads in is it an email once a day with [685] a list of all the leads that you [686] generated I personally think that's a [688] terrible idea some people do it is it a [690] weekly report is it every time a new [693] lead gets generated through maybe an ad [694] or something you populate the client CRM [697] right whatever your form of delivering [700] it to the client whatever the client is [702] experiencing whatever service you're [703] providing that is the [705] deliverable the deliverable isn't the [707] lead the deliverable is the form of the [708] lead is coming in right so this is a [711] simple rule but it's just something [713] you're your clients can see they can [715] feel maybe or potentially they can touch [717] obviously we're on the Internet it's [719] probably not going to be able to feel or [720] touch it but they can damn right see it [722] and that's what's important another [724] example is maybe you're an advertising [726] agency you know a lot of the time people [728] are going to say well my deliverable is [729] ADS you know we create ads we deliver [731] ads but what is the client actually [734] seeing the client doesn't actually care [736] about the ads that you're generating [737] most of the time they care about what [738] the ads are doing and so usually you [740] tell that to the client or deliver again [744] some type of maybe weekly report or [746] monthly status check or a call you know [749] that happens quarterly with a strategist [751] or something like that and so that is [754] the deliverable the weekly call is your [755] deliverable the report is your [757] deliverable and you know with those [758] deliverables when we reverse engineer it [760] obviously we're going to figure out well [761]  in order to get this deliverable I [762] also need to make an ad campaign but the [764] deliverable is like the final thing that [766] gets sent to the client and that's what [767] we need to worry about [768] first another potentially more palatable [772] example for a lot of you guys is an [774] automation agency so you know I've run [776] an automation Agency for quite a while [777] now I do automation freelance a lot of [779] the guys that are watching this video [780] are doing so because I have a bunch of [782] automation courses basically up right [784] now for make.com so you're asking [786] yourself okay well if I'm an automation [787] agency what the hell is my deliverable [789] well it's probably automations right [791] maybe it's the systems that I make and [792] it's like yeah you know in in a way but [795] what does the system mean to the client [796] the vast majority of clients don't give [797] a about the systems they care about [799] what the system does for them for one [801] but two like they also they can't really [803] see your system if they've never logged [805] on to make.com or zappy or something [806] before right so consider what your [809] deliverable is well yeah it's going to [811] be you know a scenario in zapier or [813] make.com or some other not code tool but [816] more importantly it's probably going to [817] be the video that you record at the end [818] of your delivery when you're actually [820] finished testing the flow and then you [822] kind of hand it over to the client it's [824] the email that you send to the client at [826] the end of every build right the [829] deliverable is what the client feels [831] what the client like tangibly [832] understands and that's the thing that's [834] most important to them and the reason [835] why I put the deliverable first and why [837] we start with this is because one this [839] helps us Define all the work that goes [841] into the deliverable but two it gets you [842] focused on the client experience which [844] is the most important part if you're in [845] the service business like the clients [848] don't give a about what really goes [849] into it all they care about is the end [851] result and you could spend all the time [853] in the world and have the best processes [855] ever to like do the thing but if you [858] can't show the client the thing well and [860] if that part of your processes sucks [862] then you're never going to make it you [864] know anywhere really big in the service [866] space so anyway yeah Define your deliver [869] and the way that I do this is I will go [871] into like a Google sheet and I'll just [872] like have a little line called [873] deliverables and then I'll just make a [874] new column for every deliverable this is [876] one deliverable that's another [877] deliverable that's of the deliverable [878] literally just take out like a pen go to [880] a note app just write down whatever your [882] deliverables are if you're watching this [883] video and you own an agency do that [884] right now I'm sure it'll help you now [886] once you guys have your deliverables [889] this is where productization gets really [891] interesting because basically for every [893] deliverable your next step is to break [896] that deliverable down into the tasks [899] that created that deliverable and we're [901] going to get pretty deep here but a good [904] example of this is let's say you are a [908] marketing agency again and you do maybe [910] pay-per-click Ad Agency let's do that so [912] you're PPC agency so you develop ads for [914] clients and you try and get them ranking [916] number one on Google or whatever for [917] some specific keyword through ads right [921] uh the deliverable that you've defined [923] is you know a report that you deliver [925] once a week and then that report comes [927] alongside like a weekly call where your [929] strategist goes through the results they [931] have a quick chat with the client and [932] then they determine sort of what what [933] are next steps whether they can just [935] continue what they're doing whether they [936] need to Pivot that sort of thing right [938] that's your deliverable so what goes [940] into that deliverable what tasks are [942] required in order to make that [943] deliverable happen well in order to like [946] have a weekly call with a report you [948] need to obviously generate the report [950] right so how do you generate a report on [952] ad campaign performance well you need a [954] source of the data that has that ad [956] campaign performance how do you get like [958] data on ad campaign performance well [960] obviously you need to run an ad campaign [961] it's like okay well how do we actually [963] run an ad campaign well we need to write [965] an ad we need to write some copy get [968] some creative done we need to probably [969] get a checked by the client we need to [972] upload it to some ad PPC thing maybe [974] Google right we need to run it for a [976] long enough period of time so that we [978] can actually generate the report and and [980] have enough data and so basically what [982] we doing here is you're starting at the [984] end and then just working your way [985] backward further and further and further [987] it's sort of like the very first step [989] involved in the process and you're going [991] to list every single task that goes into [993] them be as granular as you could [994] possibly be here because if you're not [996] if you leave anything out um you're not [998] going to really be able to productize [999] properly you're going to miss a couple [1000] things it's going to screw up your [1001] calculations later so you know in order [1004] to build that ad campaign you got to [1005] create a keyword list so then ask [1007] yourself what goes into a keyword list [1008] well in order to do that I need like a [1010] TRS or something like that then I need [1012] like some copy and that I need some [1014] creative and I need to blah blah blah [1015] blah this is probably the most intensive [1018] part um I mean I know that question one [1020] looks like it's way longer than question [1022] two but in terms of the amount of time [1023] and energy that will take you question [1024] two will take you the most time but [1026] again it's really not that much time [1027] this whole thing might actually only [1029] take you like half an hour um so maybe [1031] this part is like 15 minutes or [1032] something but you know really sit down [1035] um turn your music off and just like [1037] contemplate what is involved in creating [1039] the service that you are delivering to [1041] clients because every minute that you [1042] spend here will make you hundreds of [1043] thousands of dollars no [1045] joke okay now that you have a giant list [1048] of tasks [1049] what you need to do is you need to group [1050] each of these tasks based on their job [1052] role and so for instance if you are [1055] doing that PPC agency example that I [1058] mentioned earlier you probably have a [1059] bunch of tasks like build keyword list [1063] write copy write creative right set up [1067] weekly call with client do weekly call [1069] with client right you've broken this [1071] down really granularly so what do you do [1073] now well you basically just need to [1076] group all of these tasks based off of [1079] the job role that you would like to have [1081] take care of it and this is an [1083] interesting sort of problem because the [1086] purpose of this is to try and minimize [1087] the number of job roles involved in [1089] doing all of these tasks ideally you [1091] just want like one two maybe three [1093] people doing all of these tasks to [1095] deliver your service because the fewer [1096] moving Parts the less of a pain in the [1098] ass the fewer opportunities for things [1099] to go wrong that sort of thing but in [1101] practice this can be pretty complicated [1103] like for instance um you know is the [1105] person that writes the copy should that [1107] be the same person that that's I don't [1109] know does the creative like sometimes [1111] the answer to that question is actually [1112] yes sometimes you can get like a like an [1115] ad specialist that will write the copy [1117] and the creative but other times you [1118] know these are two uh tasks that you [1122] want two different people to do because [1123] you know one person is much better at [1124] the copy and one other person's much [1127] better at the creative and so this is [1128] sort of like a more free flowing this is [1131] more of like an art than it is a science [1133] uh because you're going to group these [1134] based off job roll and then you're very [1136] quickly going to figure out if this is [1137] like an effective way to do it or if [1138] there's a more effective way to group [1140] tasks based off that job rooll so you [1143] know identify what these roles are [1145] identify what sorts of core competencies [1147] people with that role usually have if [1149] they're an ad specialist maybe they're [1150] better at certain things than others um [1153] and then what you need to do is you [1154] basically take those job roles you take [1157] those tasks and then you estimate how [1159] much money it would cost you to get that [1161] person in that role to do that task and [1164] this is one of the most interesting and [1166] fun steps of all time and I mean you [1168] know if you're still with me I'm sure [1169] some of the stuff has been pretty dry up [1170] until now but just consider what you're [1172] doing here you're breaking down every [1174] task and you're figuring out how much [1175] money it would take for somebody on your [1177] team to do that well basically you're [1179] now architecting the entire financial [1182] future of your company so the ROI of [1184] this step is insane based off the job [1187] roles that you picked earlier you could [1188] hypothetically just pump that into [1190] Google with like average salary figure [1191] out what their hourly rate is and then [1193] try and like back calculate how much you [1195] think that it would take in order to get [1196] one of those things done I do that all [1198] the time [1199] you know be realistic here of course and [1201] always factor a little bit of [1202] uncertainty in so be conservative maybe [1204] multiply whatever numbers you're playing [1205] with by like an additional I don't know [1207] 1.1 1.2 or something like that just so [1209] you have uh you have some room to play [1210] with but once you have this you [1213] basically have like a whole Staffing [1214] model for your business along with what [1216] are called fixed and variable costs [1218] which is just insane 99% of [1220] entrepreneurs will never ever make it at [1221] this [1222] moment now you have a list of [1225] deliverables you have a list of the [1227] tasks that go into deliverable you have [1230] a list of job roles required to do the [1232] tasks that go into each deliverable and [1233] now you even have the amount of money [1234] that you would spend on each of these [1236] people to do the tasks that create the [1237] deliverable for your client you have [1240] everything that you need to productize [1242] the last step is basically to figure out [1244] how much you should be charging and this [1246] is sort of an optional step it's not [1247] necessarily one that you have to do [1249] sometimes you guys already have a price [1250] figured out and that sort of thing but I [1252] find that this is like a mathematical [1253] way to price your product to ensure that [1255] you're always making a certain margin so [1258] this is what I like like to do in my own [1259] businesses mind you so uh the way that [1262] you do this is by estimating the [1263] internal cost of your product basically [1265] you add up the flat fees and hourly [1267] rates that you calculated earlier maybe [1270] the copywriting was $200 and the [1272] creative was $150 and I don't know the [1275] keyword list was $150 you just do all [1277] those additions and then at the end you [1279] have a a cost an internal price that you [1282] are paying in order to get this thing [1283] done and that internal price let's say [1285] it's $1,000 all you have to do now is [1287] you have to divide the number by a very [1289] specific fund formula that I just [1290] whooped out of my ass no this is just [1292] bear with me here and it makes sense you [1294] divide it by one minus whatever you want [1297] your profit margin to be your gross uh [1299] margin um so let's say you want your [1301] cost of good sold to be 20% that means [1303] that your gross margin is 80% that means [1306] that after you deliver your service you [1307] basically have 80% of that money left [1309] over for everything else in your [1310] business and you know 80% is reasonable [1312] I'd say that's like a pretty solid gross [1313] margin if you can hit an 80% gross [1315] margin consistently you're doing a lot [1316] better than most other businesses so I'm [1317] just going to use as an example but [1319] let's say you want an 80% gross margin [1321] what you do is you divide this number [1323] 1,000 by 1 minus whatever that gross [1326] margin is so if it's 80 if it's 80% then [1328] that's [1329] 0.8 uh which would be let's just do the [1332] math here 1,00 divided by 1 minus 0.8 is [1337] 1,000 divid 0.2 or [1341] 5,000 and then whatever price that you [1343] just got here unless you have no idea [1345] what you're doing and unless you [1347] severely miscalculated and you [1349] overestimated certain amount of money uh [1351] in order to get the thing done or you [1352] underestimated what you want your gross [1354] profit margin to be and you just like [1355] made a total dog show of it this [1359] price is going to basically be somewhere [1362] in the middle of what your competitors [1363] are charging for this service and it's [1365] like magic when you do this in practice [1367] it's like absolute magic um you know if [1370] your competitors are making 70% gross [1373] margin and then you use 70% for that [1375] calculation most of the time the price [1377] that you get is going to be almost the [1378] exact same as what your competitor is [1380] using and so this is like a mathematical [1382] way of pricing a product another thing I [1385] didn't add here in my uh big fancy blog [1387] post is if you want to let's say [1389] differentiate prices so you want to have [1391] like a big higher tier and then a small [1393] lower tier what you can do is you can [1395] just divide everything by I don't know [1398] like let's say like 1.5 to get your [1400] lower tier and then multiply everything [1402] B in like two to get your higher tier [1404] and so now you have let's say double the [1406] reports or something or double the [1407] deliverable or double whatever uh but [1410] the these costs are fixed right they [1411] scale but in a fixed way and so it [1413] becomes very easy to constantly remain [1415] at like a similar margin and then just [1417] offer slightly different products and [1419] differentiate them but basically reverse [1421] engineering you're starting from the end [1422] rather than the very beginning like most [1424] other companies do and working in this [1427] way basically allows you to just build a [1429] a scalable money printer you know if you [1431] do the math and the math works out and [1433] you figured that you know you can make a [1434] lot of gross margin on something like [1436] this is the sort of back of napkin [1439] analysis that a lot of people will do [1440] before they decide to go into an [1441] industry like a lot of these private [1443] Equity guys or a lot of these like big [1445] Ops guys they will literally just like [1447] be sitting at a cafe thinking and [1448] they're like I wonder how much money it [1449] cost to create this coffee well let's [1451] think about the deliverable we have the [1452] coffee how how do you get the coffee [1454] here well you need somebody to like [1456] deliver it you know to you physically so [1457] you need like a waitress and then H how [1459] do you like roast the beans well you [1460] need beans and you need a roaster H [1462] right they'll just break all the [1463] down on the back of a napkin they'll be [1464] like man the margin in this [1466] industry is potentially 80% I got to get [1468] in here here right so that's why this is [1469] so interesting that's why this is so fun [1472] any who how do I actually use this in [1474] business well I use this in my own [1476] business one second copy to take us from [1478] about $10,000 all the way up to [1480] $90,000 a month at our Peak and the [1483] process that I use is basically the [1484] exact same as what I wrote down here I [1486] mean this was a little bit earlier on in [1488] my entrepreneurial career so I don't [1489] think I was as rigorous with this but in [1492] essence I used this exact same scaffold [1494] in order to determine how I was going to [1495] build my writing business and what I [1497] realized was you know well what goes [1499] into an article you know I got to [1501] deliver something so what am I [1502] delivering you know am I delivering like [1503] a Google doc link am I delivering like a [1505] PDF you know how am I delivering it am I [1507] sending an email with it right what I [1508] what I realized was there was like a [1510] writing task there was like an editing [1511] task um and I could break those tasks [1514] down so that I could save a little bit [1515] of money by having U maybe people that [1518] weren't necessarily as good at certain [1519] aspects of English to do the rough draft [1521] and then I could pay Specialists to go [1523] in there and then you know touch up that [1525] rough draft turn it into a fine draft [1527] and then show that to the client [1529] basically productization allowed me to [1530] squeeze another 10 or 15% out of my [1532] margin that most other people can't or [1534] couldn't at the time so very simple [1537] example but because of that I was able [1538] to scale my business uh like 10 times [1541] faster than basically all my competitors [1542] at the time and then eat up like a [1544] sizable portion of the internet like I [1546] think we produced like 8,000 maybe 9,000 [1550] like really high quality pieces now and [1551] these are pieces that you know most [1553] people here have probably at least [1554] stumbled on or read so yeah pretty neat [1557] um I'll cover now is I'll cover a real [1559] world example of a PR Company that I'm [1561] working with I mentioned a little bit [1562] earlier that I'm going to Prague for a [1564] month and I'm doing it because I just uh [1566] basically accepted a big partnership [1567] with a PR Company and this is like a [1570] very reputable PR Company it's with you [1572] know dozens of celebrities have gone [1574] through this PR process they've worked [1576] with some of the biggest names like the [1579] biggest names like we're talking YouTube [1580] and Facebook and Tik Tok like these guys [1582] are gigantic um but you know they faced [1587] some troubles recently and the reason [1588] why they're facing those troubles is [1589] because of those agency issues that are [1591] quite typical that I mentioned earlier [1592] they're facing project blo they're [1594] facing inevitable scope creep they're [1596] facing very very high payroll costs that [1598] are like 60 or 70% of their total [1600] revenue these are very common issues in [1603] agencies I see them all the time and [1605] productization is basically one of the [1606] very first things that we're doing [1608] together to sort of eliminate this as a [1609] problem so I'm actually just going to [1611] give you a real world like serious [1613] example of what I am doing for them like [1615] I just had a conversation with the [1616] founder not even like two hours before [1618] I'm recording this video on this exact [1621] process so you know if you know anything [1624] about PR you'll know that one of the big [1626] things that PR companies will deliver is [1627] they will deliver what are called earned [1628] media spots now an earned media spot is [1631] basically just like a article about you [1634] or I don't know like a press release [1636] it'll have like some information about [1637] your company or some cool exciting [1639] project that you're working on right and [1641] basically in order to do this earn media [1643] SP order to receive it you need to pitch [1645] a certain number of journalists on your [1646] project helps if you're well connected [1648] of course uh certain percentage of those [1650] journalists will say yes and then a [1651] certain percentage of those journalists [1653] will actually go through and then write [1654] a story and then publish it on Forbes or [1656] entrepreneur.com or some magazine or [1658] some like that and so if you think [1660] about it the main deliverable here that [1662] we are providing in this PR Company is [1665] we are providing an earned media spot [1668] and in order to break that down into [1670] task we just look at okay like what goes [1671] into that so how would I productize this [1674] PR service and what exactly am I doing [1675] in order to get there well I'm literally [1677] just following the same thing that I [1679] just wrote up above the same six steps [1681] here that I used to productize my own [1682] business so you know I started out by [1685] figuring my deliverables which obviously [1686] those earned media spots then I ask [1688] myself okay what happens in order to [1690] produce this deliverable and in the case [1693] of this PR agency you know we started [1695] with okay how many earned media spots we [1697] want per month we want five let's say [1699] what's a typical conversion rate per [1700] let's say email Outreach let's say 0.5% [1703] to be conservative and that is quite uh [1706] well it's not super conservative [1707] depending on the industry realistically [1709] this might be like 0.25 on average but [1712] uh this company just does it a lot [1714] better than most other businesses do [1715] anyo okay great so we know that the [1717] typical conversion R is 0.5% we know [1719] that we want five spots every single [1721] month well then how many emails do we [1722] have to send out in order to achieve [1723] this mathematically well we do 1,000 [1726] emails times 0.5% equals five spots you [1729] know we figure out that it's a th emails [1731] basically that we need to send okay well [1733] if we know that we need to send a th000 [1735] emails a month or a th email a th [1737] journalists emails a month then what do [1739] we need in order to do that well we need [1741] a place to do the email so like we need [1742] a cold email platform we need a lead [1744] Source in order to get a list of those [1746] journalists we need a way to scrape that [1748] maybe it's like a software platform do [1749] the scraping right how much do all these [1751] things these things cost on average you [1753] know the email platform that we're using [1754] is about 100 bucks a month it's called [1755] instantly which you guys are probably [1757] very familiar with at this point if you [1758] watch my videos we need a lead source [1760] and we're using sort of like a closed [1762] lead Source here which I'm not going to [1763] sure but it ends up being about1 maybe [1765] $150 a month depending on the lead [1767] volume and then we need a system to [1768] scrape them which you know I've set up [1770] but there are other services out there [1771] that do that let's say it's about 100 [1772] bucks a month so we know that you know [1774] now in order to email 1,000 journalists [1776] per month at minimum we're spending $300 [1778] this is great what else do we need well [1780] obviously we need somebody to do the [1781] freaking work so what sort of work needs [1783] to happen we need to set up the email [1785] campaign we need to write the email [1786] campaign we need to manage responses for [1788] this email campaign presumably some [1790] journalists are going to ask questions [1791] so you just want somebody to be there [1792] when they do right all right great what [1795] sort of role would be responsible for [1796] doing those tasks let's let's just call [1798] him a PR specialist I Just Whipped this [1800] out of my ass I don't actually know if [1801] they're going to call them a PR [1802] specialist but that's just what I'm [1803] going to call him right now how much [1805] time and money do you think it would [1806] cost a PR specialist to do this well I [1808] looked online and I found a bunch of [1809] publicly available data for similar [1811] roles to PR Specialists about $30 an [1813] hour I know that you know on average [1815] we're going to guesstimate it's five [1817] hours to build this list so that's 30 [1820] Time 5 is $150 and then let's say it [1822] takes us half an hour a day to manage [1824] the responses you know if we're sending [1825] a th000 emails a month then that means [1827] that we're sending emails Monday to [1828] Friday basically because they're 20 [1830] working days in a month right 50 emails [1832] if we have like a 5% response rate we're [1835] still only getting 2.5 responses a day [1837] realistically anybody should be able to [1838] manage that in half an hour right I [1840] think that's a reasonable assumption [1841] that's the assumption that I shared with [1842] the founder as well he thought was [1843] pretty fine so what's the total cost of [1845] this per month that's 300 bucks so then [1847] how much money does it actually cost us [1848] to run this whole campaign and to [1850] deliver this uh deliverable of five [1852] earned media pitches uh which we are [1855] delivering by the way in the form of a [1856] weekly report well it's $300 whatever [1859] our software costs are plus [1861] $150 oh sorry I lied [1865] $150 uh plus $300 so $450 a month plus I [1870] didn't actually add this up here but the [1871] other uh three software platforms that [1873] we're using so $750 a month so the [1876] desired profit margins are 80% what we [1879] we would do is we'd go 750 and then I go [1882] one minus 0.8 same formula I did before [1885] and I divide the two and I get a total [1887] cost of [1889] $3,750 for this earned media product [1892] maybe we want multiple products well if [1894] I wanted multiple products let's just [1896] multiply everything by [1897] 1.5 if I want instead of seven let's say [1900] I want an average of eight or something [1901] like that well now I'm going to charge [1903] 5,625 for those eight earned media spots [1906] if maybe we want a lower plan to be able [1908] to get people that just want to get [1908] their toes dipped in the water uh well [1910] maybe we'll go 3750 and then we will [1913] divide that by Zero by 1.5 for 2500 and [1916] so now now instead of five maybe we're [1918] delivering like three right you see [1920] mathematically how these costs scale up [1922] and obviously I need to change this [1924] because I forgot to add these software [1925] platforms but you guys get the idea and [1927] this is like a real example of something [1930] that a company that companies out there [1931] pay me anywhere from like $5,000 a month [1934] like $15,000 a month to do for them to [1936] just jump in do productization build an [1939] operational process you get all these [1940] things done um specifically in the [1942] agency space is one of the most the [1944] simplest and most straightforward and [1945] honestly one of the funnest things to do [1947] too so yeah it's how I grew my own [1949] business to what I'd consider very [1951] impressive numbers and it's how I'm [1952] growing a ton of other businesses as [1954] well and I highly recommend that you [1955] guys at least consider productization in [1957] your own business and then if you guys [1958] are doing one time then try and get on a [1960] recurring productization scheme because [1962] those are usually a lot more profitable [1964] okay thanks so much for watching this [1965] video guys if you guys got any questions [1966] about how to implement productization in [1968] your own company feel free to reach out [1969] ask me leave a comment down below uh [1971] I've been a little bit behind on these [1972] comments recently but I'm going to try [1974] and get into a habit of clearing it once [1976] a week until I'm obviously super crazy [1978] famous and I can't um if you guys want [1980] anything more about agencies or [1982] productization just let me know I really [1984] do like talking more about the offside [1985] of things especially recently with the [1987] work that I'm doing but I am also happy [1989] to you know dive into make and dive into [1990] some of these other automation platforms [1992] if there's a demand for it otherwise [1994] like subscribe and I'll catch you on the [1995] next video thanks so much

Video: https://www.youtube.com/watch?v=Ssckf9ZG1OQ
Title: This Freelancer Productivity System Made Me $22K This Month
[0] what's going on everyone in this video [1] I'm going to talk about project [2] management skills as a lot of you guys [3] know I do freelance I also run a [5] business and my income is anywhere [7] between 20 to maybe $225,000 on average [9] per month this month so far I think [11] we're at about [12] 22,000 assuming that I don't sign any [14] more deals I think that a lot of people [16] want to get to that point and are [17] wondering what sort of productivity [19] systems or tools or skills do I need to [22] have in order to make it there and [23] obviously I've waxed poetic about [25] various systems that I build both in my [27] own life and in the life of my clients [28] in order to sell packages to get me that [31] money but I actually just wanted to take [33] a deeper dive and look you know just cuz [35] I know a lot of you guys are curious a [36] lot of you guys are asking me through [37] comments and stuff like that at what [39] like a day-to-day in my life looks like [41] at least regarding you know productivity [42] and task management so if that sounds [44] like something you're interested in if [45] you guys want to hit that 20 to 25k [47] month Mark 2 and are wondering what the [48] hell do I need to do to get there this [50] is the video for you stay tuned and [51] let's get into [54] it okay so I'm actually re-recording [56] this which is really annoying but uh [58] it's because I didn't have OBS on anyway [60] that's fine the way that I organize my [62] life and one of the reasons why I think [64] that like my personal freelancing cap [66] was just a lot higher than other [68] people's before I started you know [69] involving myself in businesses and that [70] sort of deal uh was just because I use [73] two extremely viable and high quality [75] systems that hundreds of thousands of [77] people all over the world have already [78] vetted I'm going to talk about the first [80] right now and the first is called David [82] Allen's getting things done methodology [84] or [86] GTD the whole idea behind the getting [88] things done methodology is you know I'm [90] in Automation and processes and [92] operations so we build out project [94] managers for people all the time in this [96] industry but when's the last time that [98] you considered a project manager for you [101] when's the last time you actually [102] applied some of the values that you are [104] building for businesses and and and just [107] thought hey can I apply this to my own [108] life to make my own personal life [110] management better you know you have [112] tasks every day just like a business [114] does got to locate my socks in [116] the morning you know got to buy [117] something on Amazon I need to book a [119] meeting with Peter I need to get my [120] nails did whatever you have a bunch of [123] tasks that you can conceptualize just [125] like you can in any project manager in a [126] business and the getting things done [128] methodology which I'm not going to beat [129] like a dead horse because tons have been [131] written on this and if you want to read [132] like the book just look up getting [133] things done um on your own but like the [136] the purpose of this is just like how do [137] we how do we improve the process [140] efficiency and productivity of Our Lives [142] by implementing some of the same [143] practices that we use for businesses [144] into my day-to-day and so the way that I [147] personally use getting things done [149] people make this want to be way more [150] complicated than it is getting things [151] done is basically just a big to-do list [153] and the whole idea is anything that [155] comes up in your life that you want to [157] keep track of do not keep track of it in [159] your head write it down somewhere and [162] just get it out of your skull as quickly [163] as humanly possible if you just get [166] these thoughts out of your head and onto [168] some storage medium that will last for [170] hundreds of years like your hard drive [172] or a notebook or whatever you never have [174] to think about them again you never have [176] to consume cognitive energy worrying [178] about keeping track of them again and [180] you can actually just use your brain way [181] better like you're probably literally [183] smarter I mean nobody's done tests on [185] this but you're probably literally [186] smarter and more productive and more [187] effective and so yeah this is the whole [189] idea behind David Allen's getting things [191] done methodology basically you need to [193] capture whatever has your attention [196] anytime that something important or [198] maybe economically valuable has your [199] attention so get that out of the way as [201] quickly as possible put that somewhere [203] and then you can worry about it later so [206] how do we actually do this in practice [207] well um the capture stage people have w [210] poetic about it for for quite a while um [211] my personal take is I just use a simple [213] note tool on my computer called bear and [216] anytime I have a thought like maybe I'm [218] in a meeting and I'm like H I should [220] book a call with Peter I don't just [222] think about that and say okay well [225] I got to remember this so like let's [226] just keep on repeating remember to book [227] a call with Peter Nick you should book [229] that call with Peter right every 30 [230] seconds uh I will take out a note app so [233] in my case one called Bear right over [235] here sorry I think there's some bird [236] outside but I didn't close my window and [238] then I will write [240] book call with Peter and then I'll alt [244] Tab out of it and I'll never think of it [245] again right until I have to or until I [248] consciously choose to basically so I'm [251] no longer a slave to booking a call with [253] Peter you know I can book a call with [255] Peter when I have the time to sit down [256] and book a call with Peter and it allows [258] me to be significantly more present and [260] in the moment with whatever I'm doing so [262] if it's an important meeting I'm no [263] longer trying to juggle two things in my [265] head simultaneously now I'm just [266] focusing on the one that matters which [268] is what's right in front of me that [269] other in my life I'll deal with [271] later so presence is really important [273] here and just being able to give [274] something your all um obviously being [277] able to give something you're all is the [278] core of what makes somebody productive [279] so yeah pretty simple now this [282] methodology this little flowchart or [284] whatever you want to call it this has a [286] lot of steps um I really only just use [288] one more and that's that I will [290] categorize um the thing that I just [292] added and so I don't categorize it right [294] there I separate it into two steps like [296] anytime that an idea or a concept or a [298] thought comes around if I have a new [301] book idea or whatever or you know maybe [304] I have a gift idea for my girlfriend or [306] something like that what I'll do is I [308] will just put that down in this note app [311] and then that's just that's that's done [313] the next step is I need to categorize it [315] into one of two steps and if you look on [318] GTD subreddits and stuff it's kind of [319] culty they have like 50 or 60 different [321] categorization schemes I just use two um [324] I say is this a to-do is this something [326] that I I need to do right now or is this [328] something that I don't need to worry [329] about for a while is this a future task [332] and so I have two do in future and what [333] I'll do is periodically throughout the [335] day as I'm adding these tasks and I have [336] a few moments to myself I'll either whip [338] out my phone which I have a the be app [341] on which is what I'm using for no taking [342] or I'll go to my computer and then I'll [344] just tag the various tasks however I [346] need to so in this case um I've already [349] tagged it as a to-do task just because [350] that's the way that my hot keys are set [352] up but maybe book a call with Peter is [353] just something that I'm not really super [355] interested in or it's something that [357] like I can wait a little while I'll just [359] T that is waiting and then I'll just [360] never think of it again until I [362] consciously again decide to go through [364] these lists so you know two steps [367] basically there's capture and then [369] there's uh there's categorize and then [371] obviously what do you have left well now [373] you just have a list of tasks that you [374] can do right now or a list of tasks or a [377] list of ideas that you can kind of [378] consult with and maybe use to build some [380] grander thing later uh and if I didn't [382] have a system like this there's no way [383] in hell I would have been able to profit [384] $48,000 in a month when I had my 48k [387] month this was like a total godsend I [390] had so much going on that month [392] that if I didn't have a system that you [395] know I could just like have things come [396] up and then capture them and then worry [398] about categorizing them later there's no [400] way in hell I would have been able to [401] make through that so highly recommend [403] instituting some type of personal [405] project manager for your own life David [407] Allen's getting things done methodology [408] fantastic way to start what I do in [411] practice is I as I mentioned I use the [413] bear app and then I have like um a [415] little Siri shortcut on my phone so all [416] I need to do is I hold down this button [421] take a note in [424] Bear tell myself I look [430] pretty okay great so now I have a new [432] task in my bear I'll tell myself I look [434] pretty which I need to do more often by [435] the way um yeah and so you see like it's [438] as frictionless as humanly possible if a [439] thought comes up if I'm in a meeting or [441] whatever I'll just I'll write it down on [442] the phone but then if uh thought comes [444] up and I sort of have you know my my [446] hands free or whatever I'll grab my [448] phone and then I'll just speak into it [449] like like that uh and then that's all it [451] takes it takes two seconds to never have [452] to worry about these tasks again highly [454] recommend you can use uh the Apple notes [456] app you could use a physical notebook if [458] you wanted to although I think that's [460] kind of dated you could use any medium [465] Evernote to doist I don't know there's [467] like a million in ones so I'll leave [468] that up to you guys just look up [469] platform name uh GTD and there'll just [471] be tons of systems and recommendations [474] so that's system number one the getting [476] things done methodology system number [477] two and this is more of a software tool [479] than a system so maybe I have a smoke is [480] I use a platform called superhuman to [483] manage all of my emails and I think both [485] of these collectively save me anywhere [487] between 10 to 15 hours a week and they [489] also allow me to be significantly more [491] present in the moment now superhuman [493] specifically is just sort of like an [494] optimized email client it's nothing [496] special this video isn't sponsored by [497] them or anything um I just do find it [499] like extremely ridiculously impactful [500] and it's definitely worth the 20 or 30 [502] bucks a month that I spend on it uh [504] because it just allows you to like [505] manage all of your inboxes using um [507] hotkeys and so I can usually go through [509] like I get like 20 or 30 emails a day [511] I'm in Consulting and operations right [512] like I talk to so many freaking people [514] on a daily basis I can usually go [515] through a whole email inbox with like 20 [517] or 30 messages and I can do that in [519] maybe like five or 10 minutes superhuman [522] also now has some AI response stuff uh [524] which essentially allows you to just [525] like template out a response using [527] bullet points and so I'll use that quite [528] often so superhuman is just yeah it's a [531] little desktop app that you download you [532] just type superum into your browser um [534] these guys say four hours back every [536] week I think that it does even more than [537] four hours to be completely honest but [539] you know they have like really nice sexy [541] branding and all that stuff I'm not [542] going to I'm not going to go too much [543] into it basically this is what it looks [544] like when it's all signed up for and [546] then you just have like a list of um [549] things in your inbox over here and then [550] as you see at the very bottom of the [552] page they actually encourage you not to [553] use your mouse which I really like about [554] the very opinionated uh you can scroll [557] up or down just with the eror keys and [559] then you can press e if it's something [561] that you want to Archive and you don't [562] really care about you don't really want [563] to do so I know that this email from [565] this platform cup cut for instance I've [567] already responded to um so all I need to [569] do in order to Archive this I press e [571] and then doom boom I'm done with this I [573] don't need to worry about it uh this is [575] uh you know somebody over here that [577] wants to have some I don't know I think [579] they want to like pitch me for video [580] editing for my channel I do receive a [582] ton of these now just because I put my [583] email address in my YouTube so um maybe [586] this is somebody I've already responded [587] to or maybe I don't want to deal with it [588] I just press e if it's somebody that I [590] never want to talk to again I press um [592] command you and then I just unsubscribe [594] or I block them forever you know it's [596] super easy and I'm not going to do that [597] to that lovely person who's I cannot [599] pronounce remail way I don't know why I [602] always do that because I'm sure he meant [604] the best but yeah that's how I get [606] through my inbox extremely quickly [608] there's also like an AI response [609] functionality which is really cool so um [611] this is somebody that asked me a [612] question I'm going to press return here [614] so I'm going to enter into the email and [616] then I'm going to press uh uh command J [620] I think yeah and then now I'm like this [621] AI responder thing so basically what [623] I'll do is I'll read through their email [625] and they're launching some platform they [627] want to do Ai and then they want me to [629] like like Affiliated or something like [630] that and then I'll usually just say [632] something like thanks looks good but not [635] sure this makes [636] sense right [638] now um have a lovely day and then I'll [641] just press enter and then it'll actually [644] go out and use AI to like make the email [645] a lot longer make it seem more [646] professional now I don't actually give [648] that much of a about this because [649] it's just somebody that you know is [650] reaching out to me for some affiliate [651] sponsorship deal or whatever uh but you [653] can imagine how you know if I'm in like [654] a bigger organization 20 30 40 people [657] there's usually some sort of [658] professional or formality that's like [660] sort of culturally required you just [662] don't want to seem like a if [663] you're like an external consultant so [665] this allows me to take just a few bullet [666] points which are the actual [667] informational content of what I want to [668] say and then just expand it into [670] something that like seems a little bit [671] more legit um you know and I I'll [674] usually just like quickly double check [675] and I'll make sure that this is okay and [677] that sort of thing and then assuming [678] that it is I'll just press return and [680] then I'll enter it so yeah that's that [683] pretty simple as I mentioned these two [685] systems aren't rocket science or [686] anything like that but I do find that a [688] lot of people that talk about making 20 [690] to 25k a month they'll mention offhand [694] how you know productivity systems and [695] they're gurus and they have like one [697] thing that skilled them to whatever but [699] they don't actually talk about how they [700] manage their dayto day so I just [701] thought that I'd sort of Peel back the [702] curtain and just provide you guys a look [704] at like the realities of if you're a [705] freelance and you're trying to juggle [707] five or six projects like what does that [708] actually look like again when you've [710] chosen to work for yourself you're not [712] given a system and in order to succeed [714] you need to build your own so this is [716] just some fodder that hopefully you can [717] use to build your own uh Thrive and then [720] print loads of freaking money about as [722] much money as the US government awesome [724] if you guys like that video uh please [725] like it subscribe and if you have any [727] comments or questions leave them down [728] below as a comment more than happy to [729] get back to you I sore so many video [731] ideas from this channel comment sorry I [733] sore so many video ideas from my [734] comments it's crazy so please keep up [737] the good energy and I'll talk to you [738] guys soon thanks so much

Video: https://www.youtube.com/watch?v=_x9LBtqEkyY
Title: How I Built A 15+ Person Agency With No Management Skills
[0] hey everyone Nick here I wanted to get a [1] little bit more cerebral in this video [3] than I've gotten on a lot of other [4] videos and I wanted to talk about team [6] building and this isn't specific to [8] make.com it's not specific to automation [10] this is specific to running a business [12] and I really wanted to give this topic [13] the attention and the coverage that I [15] feel it deserves because as somebody [17] that's operated a business now with [18] between 15 to 20 people in it this is [21] one of the most important things that [22] you can get right and it's also one of [23] the most important things that you can [24] get wrong so your ability to build a [27] team and more importantly a culture [30] really is your ability to build a [31] business in my humble estimation and uh [35] yeah I got some thoughts on it so that [37] sounds like something interesting to you [39] stay tuned and let's get into [43] it so I have here a little notion [45] document that I've written just a few [46] thoughts on team building and how to [48] build a strong successful culture with [50] and one thing that I found while I was [52] writing this out is that to really build [54] a successful culture it's actually not [56] so much about what you do it's more [58] about what you don't do and there are a [60] couple of extremely simple and very [62] straightforward tweaks that you just [64] need to make to the way that you manage [66] people uh to essentially just build like [68] an awesome culture that's organic that [71] you know is filled with good emotions [72] and that ultimately does what any [74] business should be doing which is [75] getting done now these are [78] learnings that I've taken from a variety [80] of books these are learnings I've taken [81] from a variety of businesses that I've [83] worked in personally operated or [85] operated as a consultant and it's really [88] interesting because in my time you know [90] building automations and now more doing [92] operations for companies and partnering [94] and that sort of thing uh it's just [96] crazy that the diversity of cultures and [100] diversity of organizations and [101] organizational values that I see I mean [105] I probably like seen or worked with in [107] some way shape or form now at least 40 [110] maybe 50 businesses maybe 40 businesses [113] I want to say um and I've seen [116] everything from like crazy cruel top- [118] down management practice to like some [121] extremely hyper efficient bottomup [123] machines and I've seen everything in [125] between as well and I've picked up all [127] of that information and basically [128] synthesized it into what I would [129] consider a pretty solid operating road [131] map for culture building and so I'm not [133] going to share that road map with you [135] but what I want to do in this video is [136] just talk about the three big things [138] that you should avoid if you're trying [139] to build a strong culture and moreover a [142] strong team so uh thing number one is to [146] praise in public and reprimand in [148] private a lot of you guys probably heard [150] this before uh if this is the first time [152] that you guys are hearing it it's okay [154] praising in public and reprimanding is [156] in private is quite simple it basically [157] means that when you have a wi to share [160] you do it in front of as many people as [161] possible and when you have something [163] negative to say or a piece of feedback [165] or a piece of constructive criticism to [167] deliver you do that in private the whole [170] idea behind praising in public and [171] reprimanding in private is essentially [173] just building up a flywheel of [175] positivity and making sure that your [176] culture uh is just always full steam [179] ahead let's go go go this is also for [181] some weird reason literally the most [183] common failure mode that I see in [185] culture building where I was just on a [187] slack the other day uh where you know [190] there was some report or something that [192] one person in the team had delivered and [193] then in like a 20 Person Public slack [197] channel uh he just proceeded to berate [200] this this lovely writer who had really [201] poured their heart and their soul into [203] this piece just in front of like 19 [205] other people and I I just want you to [207] think about it from that person's [208] perspective like [210] well really just from like a human [211] perspective we've evolved for like [213] hundreds of thousands of years to have [215] social shame be one of like the greatest [218] motivators and also like the worst [221] self-esteem impactors of all time like [225] our ability to feel confident in [228] ourselves and our ability to get things [230] done basically rests directly on our [233] perceived opinions of the other people [235] in our lives if you want people to feel [238] happy and to feel motivated and to feel [240] encouraged to do a good job you know [242] berating them in front of 20 other [244] people is no way to do it um they're [246] going to not respect you they're not [248] going to respect a lot of the other [249] people in the team and essentially just [250] going to shrink away from it so yeah I [253] mentioned here uh nothing and I mean [255] nothing will ruin how a team member [256] feels about you and themselves and the [259] company faster than just telling them [260] they did a job in front of like 20 [262] other people so avoid that wherever [264] possible my personal rule of thumb here [266] just from like a management POV is I [268] usually do either a weekly or or monthly [270] one-on-one with my directs if you [271] haven't heard the term direct before it [272] basically just means the person that [273] you're managing and usually managers can [275] have anywhere from like three up to [277] maybe 10 directs uh before it starts [279] getting unwieldly so you know on my [281] weekly or maybe my monthly one-on ones [283] if there are any issues I see with a [284] person's performance I'll just bring it [286] up then and I'll bring it up when it's [287] just me and it's just them there's no [289] other you know owl in the room listening [292] there's no Observer and there's really [294] nobody to stop them [296] from laying down or laying out laying [299] down laying out why they feel uh how [303] they feel about you know their [304] performance and maybe some strategies [306] they think that they could use to make [307] it better you really want to eliminate [310] like the social status climbing or like [313] The Virtue signaling as much as possible [314] from any sort of work interaction uh [316] virtue signaling and social status [318] climbing this sort of thing is like a [319] cancer in organizations and it's just a [322] byproduct of Being Human it's going to [323] pop up regardless of where you are what [325] company you're in or what you're doing [327] so you need to be cognizant of that but [329] you know when you're delivering [330] constructive criticism or feedback [332] you're doing so because you want them to [333] improve right and just the best way to [335] make sure that they take or soak up 100% [337] of that Improvement is is just doing it [340] in a private place that's not in front [341] of anybody else so that's number one [343] that's what I would say is probably the [345] biggest failure case and just something [346] that most of you guys can eliminate [347] pretty easily in your own company praise [349] in public reprimand in private the [351] second principle that I find extremely [353] important is it's not actually about [356] keeping everybody happy and I think a [358] lot of first-time founders ERS and [360] novice entrepreneurs tend to believe [362] that in order to run a successful team [363] everybody on the team needs to be happy [365] that is not true at all happiness isn't [367] the endl be all if you're attempting to [369] create or run or build a successful [372] organization happiness should be [373] somewhere on your list for sure at least [375] top five but it definitely shouldn't be [377] number one you know performance should [378] be number one um you know fulfillment [381] should be number one way more than [383] happiness right the happiness is [385] something that's important but it's not [387] like the main kpi or metric that you [388] should be optimizing for but [390] unfortunately because a lot of novice [391] and young managers dread conflict and [394] that sort of thing uh they'll usually [396] like avoid anything that could disrupt [398] client or sorry team member happiness [400] wherever possible uh and when you do [402] that for long enough your team just gets [403] less motivated they get lazier they [405] become lower performers and it's just [406] sort of like a byproduct of like [408] Humanity you know if we're always happy [410] and everything's amazing like eventually [411] we won't be you know eventually we'll [413] grow dissatisfied with what we're doing [414] and a lot of the time you know if you're [416] working eight hours a day you'll project [417] a lot of that onto the work that you're [419] doing [420] so yeah management isn't actually about [422] keeping everybody happy um the effect of [424] matter is a great book by the way if you [425] guys haven't picked it up or anything [426] like that highly recommend uh in it the [430] author whose name I'm not [433] remembering Mark hman uh in it he makes [438] an amazing case for the two different [440] types of stress so there's distress [443] which is obviously when somebody is [444] panicking they're anxious they're [446] emotional they're feeling a lot of [448] pressure essentially and and when [449] somebody's distressed they obviously [450] don't perform very well but there's also [453] another form of stress which is called [454] UST stress and this is a real word if [457] you look at up and you've never seen it [458] before it's going to pop up like this [460] and it's going to tell you that UST [461] stress is a moderate or normal amount of [463] psychological stress that's actually [465] interpreted as being beneficial not [468] necessarily detractive or destructive [470] the whole idea behind UST stress is UST [472] stress is like when you're ideally [475] perfectly stimulated um there's [478] a [480] principle here in I think it's like [483] office performance or something like [485] that called the yeres Dodson curve and [487] essentially this is done I think well [489] over 50 or 60 years ago now um but they [492] they did an experiment where they just [494] modeled how people perform in response [496] to increasing levels of stress and what [498] they found was when stress was really [500] low like down here at the bottom leftand [502] corner performance was low when stress [504] was sort of higher performance was [506] higher when stress was sort of at this [507] like Optimal point then performances at [510] this optimal point and then after as you [512] proceeded further and further to the [513] right of the stress graph performance [515] then started dipping down and so [517] nowadays this is referred to as the [518] inverted U curve or the Y Keys Dodson [520] law and you know we use this in [523] organizational management principles all [524] the time uh because the point isn't [527] necessarily to just you know let [529] everybody be happy and Pat them on the [530] head and you know give them team hugs or [534] whatever the hell a lot of these you [535] know super crazy um mega Progressive [538] companies are doing nowadays [540] uh it's to you know allow them and help [543] them to do big things with their lives [545] you know people want to improve their [547] careers they want to achieve large [548] things and as a manager your job is to [551] stress them or stimulate them to the [553] optimal point when they can so what does [555] this actually mean in practice well it [557] just essentially just means having [558] boundaries it means that caring about [560] the performance of your of your staff [562] members isn't like a negative um sure [564] you should also you know care about [565] their happiness but you should care [566] about their performance first and [567] foremost a lot of the time they want to [569] do really good things they just need [570] somebody that's constantly monitoring [572] how they're doing on maybe a weekly or [574] monthly basis and offering suggestions [576] advice tips and that sort of thing to [578] allow them to get better sorry I'm just [579] getting a call let me just mute that uh [582] you know there there are other ways to [583] do this as well um you can foster [585] competitiveness in your staff members uh [587] and I don't mean competitiveness as like [589] hey if you guys don't do this you're [590] going to get dropped I mean like [592] positive competitiveness where you're [594] offering some sorts of prizes or some [596] sorts of like additional bonuses or [599] something like that if somebody does a [600] really good job these are all forms of [602] positive stress or you stress that allow [605] you know you to take people to the next [606] level essentially as a manager and there [609] are things that I think about a lot [610] personal story time caring about [612] people's happiness used to be the most [613] important thing in the world to me as a [615] manager and because I did that and I put [618] that first and foremost my team never [619] grew I was never capable of paying [621] people what I thought they actually [622] deserved I was only capable of paying [624] people what I could at that moment in [625] time my company was incapable of [628] thriving really by not putting people's [630] performance first and foremost like [632] their economic productivity per se I was [634] hurting them I was hurting their [635] livelihoods I was hurting all the other [637] great people that I could be helping and [639] so you know when you put somebody's [640] happiness first it may seem like you're [642] doing them a solid and that you really [643] care about them and that sort of thing [645] but if anything it's it's selfish [646] because you're just usually afraid of [648] conflict you're usually just afraid of [650] holding that person to a standard and in [652] the long run you're not going to be [653] helping that person you're going to be [654] hurting them so yeah it's not actually [656] about keeping everybody happy it's about [657] making sure that they perform as well as [660] humanly possible and uh it's about [662] essentially bringing out the best [663] version of themselves the last principle [666] that I find a lot of companies Miss is [668] this notion of freedom and [669] responsibility and I got this from Reed [671] Hastings this is the founder and CEO I [673] believe of Netflix who wrote a fantastic [675] book called no rules rules which [677] basically just broke down Netflix's [678] counterintuitive management system and [681] this is something that you know when the [682] book came in everybody's like there's no [684] way that Netflix actually manages like [685] that that's stupid ain't no way and then [687] everybody Netflix was like oh yeah [688] that's actually like our jobs that's our [690] day-to-day and I'm not going to go into [692] detail about Netflix's specific [694] management practices but they do have a [695] couple of unorthodox things they do like [697] completely free unlimited vacation you [698] can clock it whenever the hell you want [700] they do things like um they pay people a [703] ton of money they pay people like [704] incentive bonuses they pay way more [706] money than a lot of other people would [708] for a similar quality or skill position [710] uh they give people way more flexibility [712] in their job than most other people [713] would right but you know there there are [715] a couple more things on that I'm just [716] not going to beat uh beat a dead horse [719] the two things that I think apply to us [721] you know as [722] young excuse me as young entrepreneurs [725] or people attempting to grow a [727] successful business U maybe in the [728] agency space or the automation space or [730] whatever business you might be running [732] is that you know you can think of a [736] company as basically operating in one of [739] two diametrically opposed ways the first [742] is the company with hawkish [744] micromanagers that sticks everybody in [746] cubicles and then roams up and down the [748] Halls constantly looking over [750] everybody's shoulder to make sure that [751] they perform well this is a company that [753] tries to squeeze every last drop of [755] efficiency out of their staff members [757] and I'm not going to lie to you this [759]  works there's reasons why companies [761] do this when they Implement strong top [764] down management practices like this [765] companies actually do better I mean if [767] you think about it like if they didn't [768] then nobody would be doing it right so [770] the whole cubicle thing with the roving [772] managers like yeah that works [774] that's why they're doing it but it's [775] important to look at the time scale that [777] that works on and I think after you've [779] run a company for a little while you [780] realize that that does work and you do [782] squeeze every last drop of efficiency [784] and value out of people but you do so in [786] the short term in the long term that [789] sort of mindset and that sort of [791] environment leads to usually slightly [793] higher turnover rates leads to people [795] being less satisfied with their work it [797] leads to people over a long period of [799] time performing less than they could [801] otherwise even though in a short period [802] of time they tend to perform well and [804] are more detail oriented and that sort [805] of thing and generally speaking I want [807] you to think of this as like a credit [808] card where you know you are swiping and [811] then you are taking performance away [813] from the future of your business so that [815] you can use it today so I'm not saying [817] that you know this is a terrible [818] approach and companies shouldn't be [819] doing this like you know we're talking [821] the economy here right so if you need a [823] bunch of cubicle rats constantly running [825] up and down and staring over people's [827] shoulders to make money I mean yeah [828] there's a reason why people are doing it [829] and I totally understand but you're [831] sacrificing the long-term growth and [833] long-term success of a company uh by by [835] engaging in those sorts of practices [837] this is what Reed Hasting talks about a [839] lot he talks about like the difference [840] between the super structured regimented [843] environment and then what he calls the [844] no rules how no rules rule uh which is [848] what he what he recommends so there's [850] that first idea where everybody's super [852] regimented and super put into a box and [854] constantly monitored and that sort of [856] thing you squeeze more short-term [857] productivity out of it and the opposite [859] approach and the approach that this guy [861] uses and the approach that I use the [863] approach that a bunch of other [863] successful agency owners use is where [866] instead of restricting people you [868] basically just give them a ton of [869] Freedom usually way more freedom than [871] you would feel comfortable doing you [874] define the what in their jobs so you [876] define like the specific task they need [878] to be doing but you don't actually tell [880] them how to do that job you sort of [882] leave that up to them and the idea here [884] with giving people freedom and autonomy [886] to do their job and you know hopefully [889] do really good at it I mean I would hope [891] so is typically if you just hire really [894] good people like really smart really [897] talented really high performers and you [898] pay them really well they'll solve the [901] vast majority of [903] problems themselves within a month or [905] two better than you would have been able [907] to show them how as a manager if you had [910] just tried to you know box them into [912] some system [913] immediately and so in that way you [915] basically get to leverage their human [917] capital to make the processes of your [920] business and of that specific task more [922] efficient you also get to Compound on [925] the cultural benefits and the general [927] satisfaction that people feel working in [928] your [929] because when you hire a bunch of [931] admittedly higher paid professionals [933] that are really stoked and really smart [935] and really happy with what they do um [937] they tend to collaborate much more [939] effectively than people that are sort of [940] boxed and isolated and given a routine [943] list of Sops to follow and so autonomy [946] in this way actually costs you more in [948] the short term because you're not [950] squeezing every last drop of efficiency [952] with templated Sops and you know roving [954] bands of hawkish managers but in the [957] long run it massively improves your [959] productivity and it also allows you to [961] retain people significantly more so you [963] spend less on hiring and on HR and [966] turnover and that sort of thing and then [968] also it usually allows you to hire um [970] for for larger and like more senior [972] manage roles from just within the [974] company uh and usually that person has [976] significantly less training that they [977] need to do because they've just spent [978] all this time autonomously operating [980] well within your business and so this is [982] sort of the trade-off you kind of have [983] two types of businesses you have that [985] like dystopian 1984 orellan dream where [988] you know you're just making a shitload [990] of money but you're doing it at the [991] expense of satisfaction and of long-term [993] growth or you have this like bustling [996] Progressive Utopia where people are [998] autonomous and they can do whatever the [999] heck they want have un limited vacation [1001] time get paid 300K a year whatever and [1004] you're sort of banking on that helping [1006] you in the long term which you know if [1007] you look at just any major tech company [1008] now this is this is what they all do uh [1011] it usually does just look at the stock [1012] prices so yeah these are the two real [1015] differences here and these are the two [1017] paradoxical ways that uh Reed Hastings [1020] talks about companies operating anywh [1023] who I have personally used these three [1025] principles to grow what I would consider [1027] an extremely thriving happy successful [1029] business with an amazing culture where [1032] everybody in my business is a high [1033] performer everybody in my business [1035] really enjoys being there we hold people [1037] accountable we don't just you know hold [1039] their hand through the entire process we [1040] let them spread their wings and we let [1042] them get better uh and it's just been [1043] one of the most rewarding things that [1044] I've ever done so just by following [1046] these three principles and of course [1048] being awesome [1049] um you know I think that you could [1050] probably do it too okay I hope this [1052] helps and you found value in team [1054] building or at least some of the more [1056] nuanced aspects of culture in particular [1059] I find that that Mark Hastings uh sorry [1061] Reed Hastings no rules rules book to be [1064] extremely valuable so make sure to pick [1065] that up if you guys haven't already um [1067] if you guys have any questions about [1068] team building if you're team building in [1069] your own automation agency or maybe some [1071] other Service Agency or even like a SAS [1073] company and you know I didn't answer one [1075] of your questions or you just have some [1077] some additional thoughts to share please [1078] leave them down below as comments i' be [1079] more than happy to touch on that if you [1081] guys like the video please click that [1083] like button subscribe do all that fun [1085] stuff and I'll catch you in the next one [1086] thanks so much for watching

Video: https://www.youtube.com/watch?v=280vrwBDxzQ
Title: My High-Ticket Automation Sales Script
[0] hey everyone Nick here and I got a quick [1] and easy video for you today on [3] automation sales specifically I'm going [5] to show you the starter sales script [8] that I used to use and have used to sell [10] several $100,000 worth of automations at [12] this point um I've also used an [14] extremely similar Approach at 1 second [17] copy this is my seven figure content [18] writing agency to sell content deals and [20] this is just something like extremely [22] simple uh while also being somewhat [24] counterintuitive which some people are [25] obviously going to disagree with me on [27] and so I thought that I'd at least just [28] record a video Lo people through it and [30] take it from there so this is going to [31] be pretty short video by the end you're [32] going to know exactly how I sell deals [35] and if there's enough demand for it I [36] might actually record my next sales call [38] with the prospect's permission of course [40] and potentially put it up online but [42] we'll see about that any who if that [44] sounds like something you're interested [44] in stay tuned and let's get into [49] it okay okay so I made a notion document [53] here and I just copied it over from a [54] Google doc uh that I've been using for a [57] very long time like the oldest Google [59] doc in existence [60] and you know I've done a lot of sales in [62] my time I used to sell door too and I've [64] probably went knocked on over I don't [68] know the math but it's been several [69] thousand doors I've had security [70] violently throw me out I've it people [72] run me out of their offices screaming so [74] I've definitely done my time in sales uh [77] but over the course of the time that I [79] I've sold things I've sort of changed my [81] whole opinion and my my Paradigm on uh [83] how to get people to say yes how to how [85] to get people to give you money and it [87] goes starkly in contrast to what a lot [88] of people consider like the golden [90] standard and I'm not saying that my way [92] is necessarily better but all I'm saying [94] is that my way definitely works for me [95] and this is how I prefer to sell because [97] it's happier it's more enjoyable you [98] don't have those God dang security [100] guards running after you uh yeah it's [103] very very good so what I'll do over the [104] course of the next couple minutes just [105] run through this little sales this [107] little starter sales script that I used [109] um and you know in reality my sales [111] script is a little bit more developed I [113] mean I don't use a script anymore I [114] think I've just been through this so [115] many times that like I understand what [117] to say when but uh when I was starting [119] out you know I had one and it was a [120] little bit more developed I asked a [121] couple of extra questions and that sort [123] of thing but um I I trimmed it down a [125] little bit maybe 20 30% just so that you [127] could apply this to any sort of you know [130] automation sale business whether you're [131] doing crms or make.com or zappier or [135] whatever so any let's get into it um at [137] the beginning I always like to build [139] rapport Rapport just means make them [141] like you essentially not everybody wants [143] to like the person that they're talking [144] with that is selling them stuff and [146] you're going to figure that out pretty [147] quick uh depending on the person but [149] like my my goal is just to get somebody [151] to crack a smile uh before I actually [154] get into the sales stuff so a lot of [155] people disagree with me this disagree [157] with me on this and say hey Nick you [158] should stick to transactional types of [160] relationships you can get way bigger [161] accounts I prefer to like the people [163] that I work with uh and so I'll always [165] do some type of funny joke I mean I'm [168] from Canada and 99% on the time people [170] like you're from Canada and I'm like yes [171] I rode my polar bear to work today you [173] know meanwhile I work from home just a [175] little silly like that um and then [178] the second that they laugh and are [180] appropriately warmed up I like to say [181] the second like the early call Jitters [183] are done because they do all this over [185] like a Google meet usually I'll [187] transition it with something like okay [188] you're ready to jump in and then it's on [190] the sale begins so in order to like take [194] control of sales and this is something I [196] see a lot of novice uh you know [198] entrepreneurs Consultants salespeople [200] Freelancers whatever you want to call [201] them this is what I see a lot of them [202] struggle with in order to really like [203] win a sale a lot of the time you have to [205] take control of the conversation and I [207] don't mean like to do this violently or [208] anything I just mean pragmatically [210] like you have a goal where you want this [211] conversation to go it's obviously with [213] the prospect saying yes and handing you [215] you know hand or fist giving you a bunch [216] of money uh but you know if if you don't [219] lead them there you know like as as a [221] service professional your job isn't just [223] to build out the thing it's also just to [224] like walk them through the sales process [226] as well and so shifting your I guess [229] your mental model for what sales is I [231] think is is really helpful and so this [232] is your job so you need to set the [234] schedule you need to take them by the [236] head and show them where you're going to [237] be walking them uh and I always do that [240] in Three Little Steps I'll always say [242] hey here the way that these calls [244] usually go so I'm not telling them this [245] is how this call is going to go but I'm [246] just saying hey here's how you know my [248] consultant calls usually go just to you [250] know imply that like this is how they [252] usually go but maybe ours will go a [253] little bit differently but in reality [255] it's probably not going to go any [256] differently so I'll say hey I want to [259] learn why you reached out or responded [260] to my email or clicked on my ad one of [263] the most easily asked questions one of [265] the most easily forgotten questions and [267] one of the most powerful questions it's [269] just like hey so first I want to know [270] why you're here basically why are we [272] talking right now um I usually say [274] something like you know an average [276] business gets dozens of similar emails [277] every day or there are dozens of other [279] people you could have contacted uh but [281] you booked a call with me so I want to [282] know why and then I want to get into [284] some background of your business of the [287] project that you're working on that sort [288] of thing I'd like to chat some numbers [289] where you guys are currently at where [290] you guys want to go and then finally if [292] I can help you I'll tell you how and [293] then we can also cover next steps you [294] know like where do we take this [296] logistically in order to make uh make a [298] project happen between us so good they [300] always say yeah that sounds good and [301] then you go from there that takes us to [304] step three which is the why [307] meow this project uh and this is pretty [310] simple you basically just ask a couple [312] of additional questions the first one I [314] mean I know it's just one line on this [316] little notion dog but this line takes [318] probably like 15 or 20 minutes to get [319] through this is like the meat and [320] potatoes of the whole call so why do you [322] decide to book like you didn't have to [324] so what compelled you to you know reach [325] out to me or why why are we chatting or [328] why did you put up the request for [329] proposal on uh jobs.com or upwork or [333] something like that like what made you [334] take that first step they'll usually [336] tell you all about their problems [337] usually they'll give you some context [338] and background about their business as [339] well uh and from there you know this is [341] very Consulting style sales if they [344] haven't already given you your goals uh [346] their goals rather then you can ask for [348] their goals right here so like okay well [350] what are the goals of this project like [351] what would you consider a success that's [353] a very important question as well [354] because most people don't really define [355] success they just build the project out [358] and then when the client is inevitably [359] uny happy they're like huh what did I do [361] wrong well what you did wrong is not [362] defining what the client considers the [363] most important part of the project and [365] so that's why you ask what are your [367] goals you also ask uh if you've tried [369] anything to get to that goal before so [371] maybe you've tried another freelancer [372] you've tried another consultant or [373] you've tried another agency it's really [375] important for you to know that because [376] this is an opportunity to set yourself [377] apart from them and if you don't know [379] that it can be difficult to like if they [382] say well I tried another freelancer but [383] then they use zap here and they built [385] this thing out and it just sucks right [387] now you know okay client has some bad [388] experiences with zap and maybe the way [390] that the old freelancer was doing things [392] so maybe I should do it a little bit [393] differently and then the last one is [395] just to get a sense of urgency I always [396] ask why now so what's the purpose that [399] we're doing this today right like why [400] aren't you doing this in six months why [402] didn't you do this six months ago like [404] why today and a lot of the time it'll be [406] like well we have a bunch of extra [408] capital or we've been ignoring this part [410] of our business until we dealt with all [411] the fires and now we've dealt with all [412] the fires we're ready to move on this is [414] really important information for you to [415] know because starts giving you some [417] budget uh info you get to look into the [421] underpinnings of of what's going on and [423] and you also get a sense of how quickly [424] and Urgent this is for them which can [426] help you if you want to pitch [427] immediately which I'll talk about at the [428] end of [429] this and then honestly like 99% of your [433] work is done like you haven't even [434] talked about the specific thing that [435] you're going to be producing for them [436] and the vast majority of your work is [438] done I know that sounds crazy but as [440] long as you're at this point if the [441] prospect has poured their heart out to [443] you they've essentially just been [444] pressing on their pain points this whole [446] time about how much they need this done [447] and why they need this done and why it's [449] important that it's somebody good right [451] all that's really left is for the [452] cleanup crew to come in you're just the [453] janitor at this point taking out the [455] trash and I say that factiously uh in [457] reality what you need to do is obviously [459] tell them what you're going to build [460] them but yeah this is the solution step [462] which I don't think I put number four in [464] front of so what I'll always do at this [466] point I I'll say something along the [468] lines of hey uh great you know thanks so [469] much for giving me all that information [471] I think I have enough to propose a [472] reasonable solution here do you have any [474] other questions just before we dive into [475] that and this is an opportunity for them [476] to ask me some questions maybe get to [478] know a little bit more about me [480] 99% of people don't care about me they [482] only care about what I can do for them [483] which is understandable right and you [484] would too if you were looking for a [486] freelancer consultant or agency to solve [487] your problem but they'll just say yeah [490] um how exactly does this work and that's [492] where you essentially start explaining [494] Your solution now if you're an [496] automation you know that these systems [498] are extremely Visual and so a lot of the [500] time if you're using a no code tool like [501] make or zappier or nadn or something [503] like that you're physically dragging and [505] dropping modules but you can leverage [507] that during the sales call by actually [509] like screen sharing and going onto your [511] make.com app your NN account and just [513] showing them some of the automations [514] that you built that are similar this to [516] me is usually like the moment where I [518] shine and I really get to like Flex my [519] skills a little bit and you know it's [522] one of the reasons why I think I've had [523] success with this YouTube channel [524] because I'm quite good at it uh but I [525] know some people struggle with us and [527] you know if you want to get better at [528] that part where showing off your systems [530] and walking that fine line between [532] humility and being braggadocious I [533] definitely uh recommend that you record [535] a bunch of videos just walking people [537] through your systems while you work uh [539] that'll will help you get a lot better [540] at it but any I usually will screen [542] share I'll be like hey you know what [543] this is an extremely similar system to [545] one that I built it for a client two [546] weeks ago and here's what that one [548] looked like and I will literally go [549] through and explain how this works and [551] usually by the end of that process the [552] client is like wow this guy really knows [553] how to solve my problem um after which [556] the sale is you know virtually [557] guaranteed as long as we align on price [558] and that sort of thing so I wrote down [561] here that ideally you would have three [562] or four similar systems that you can [563] model Your solution from you don't have [565] to build up the exact system in order to [567] be able to pitch it like you don't need [568] experience building that exact same [570] thing out but you do need experience [571] building out something somewhat similar [574] which is why over the course of my [575] make.com class or YouTube tutoro [577] whatever you want to call it I covered a [579] bunch of common systems that clients [580] need help with so you just have little [582] nuggets that you can draw from and use [584] to like build up the rest of the system [585] but as long as you have like a a basic [588] or general flow you can always just swap [589] out one platform for another you could [591] do notion instead of click up if the [594] client is really dead set on notion or I [596] don't know like if they're running a [598] slightly different business model you [599] could just add a few extra columns into [601] your CRM and probably get it pretty [602] close so that part's important uh and [605] that's why I did what I did in my course [607] and then as a rule of Thum the last [609] thing I'll mention on this part is uh [610] always do temperature checks and don't [612] just do temperature checks here do [613] temperature checks more generally what a [614] temperature check is in sales is it's [616] basically you just sticking the [618] thermometer up there at now it's you [620] just asking them hey how are things [621] going hey do you like this is this [624] something that you Vibe with right I'll [626] always ask some variation is of does [627] that make sense uh is is this sort of [629] like what you were looking for is there [631] something I might be missing here uh etc [633] etc the whole idea is essentially just [636] if you're veering out of bounds and the [638] client's like okay this shit's pretty [639] boring a lot of the time they won't tell [640] you so you need to constantly ask the [642] client okay like is this sort of what [644] you're looking for and if they say ah [645] well actually we were sort of looking [646] for something like this you're like ah [647] okay well in that case let me show you [648] this so it's like you know if your ship [650] is sort of veering off Harbor this is [652] just a way for you to like whip out your [654] compass and be like oh you know [655] we're going way too far east now we got [656] to go west right just wait for you to [658] constantly be on top of things so yeah [661] that's the solution and then once I'm [664] done the solution this is where my sales [666] advice diverges quite heavily from the [667] vast majority of other peoples I usually [670] well it depends on the client but maybe [672] about half the time I I won't actually [674] ask for the sale right there I'll [676] express my interest in working with a [678] client and I'll express my interest in [680] sending them a proposal but I won't [682] actually sit down and be like okay great [683] time for you to pay me money before we [685] get off this call because I find that [687] stuff one it's very uncomfortable I mean [689] let's just be real it's uncomfortable [691] for you to ask somebody to part with [692] money whether it's over a sales call or [694] across the seat from them or across the [696] table from them at a coffee shop or [698] whatever uh so I just don't really like [700] doing it two automation projects can be [703] quite difficult to scope and so as a [704] result if I propose a price or propose a [708] thing before I've really had a chance to [709] just sit back and think about it a lot [711] of the time I'm kind of shooting myself [712] in the foot and then the project scope [714] blows up and it end ends up just being [716] way more work and time than than I [718] really should be spending on this and [720] that I pitched for in terms of price and [723] three it makes the prospect quite [724] uncomfortable as well and I don't really [726] want my reputation to be like that sales [728] guy that is going to do anything to get [730] the other person to say yes and give [731] them money before the end of the call so [733] I'll usually separate this step I will [734] pitch them and make them really like me [736] on the call and make them be like man [738] this Nick guy he could really solve all [739] my problems which to be fair I can at [741] this point and then we say something [744] along the lines of uh you know hey you [746] know this sounds great I'm going to need [747] a little bit more time and energy to [749] scope this right now I'm feeling like [751] it's going to be somewhere in the [752] neighborhood of maybe $2,000 to $5,000 I [755] want to make sure this is reasonable for [756] you but I just got to make sure that you [758] know the systems that you proposed here [759] work together and that any system that [761] I'll build for you is going to be [762] maintainable and scalable so what I'll [764] do here is I'm going to take a couple [765] steps back I'm going to write up a [766] proposal for you there'll be everything [768] that you need to know to make this [769] project a success in that proposal H and [771] it'll have a little payment form attach [773] so if everything checks out you can just [774] sign and pay right there and then we can [776] do a kickoff does that sound reasonable [778] most of the time people like hell yeah [779] that sounds great and they've sort of [781] they're sort of relieved I can tell that [783] I'm not like hard selling them at the [785] end of the sales call like most other [786] people do so yeah that's what I'll do a [789] lot of people are going to disagree [790] because a lot of people say dude a sales [791] call is worth nothing unless you leave [793] with a yes or a no but I just think it's [795] impractical and I've just done way too [797] many of those sales at this point in my [798] life for me to really give a and [800] want to keep doing them um you know and [802] these are usually bigger deals as well [804] like we're dealing with software here [805] we're dealing with like multi-step [808] projects sometimes several phases [810] sometimes 10 15 $20,000 like you can't [813] really just get like a check by the end [815] of the call like you could if you were [816] selling some dinky little $100 thing [818] right anyway and then that takes me to [821] the last step which is objections now [824] again this goes against all popular [825] advice but I don't really deal with [826] objections that much maybe like 10 or [828] 20% of people have some sort of [830] objection and I won't deal with it on a [832] call well I'll usually like answer if [834] they have any objections to the call but [835] since I'm not pitching them it's never [837] like oh this is too expensive right [839] usually just like uh hey logistically [840] how would this work which is less of an [842] objection and more of just like a [843] curiosity but like in terms of [845] objections I I usually don't deal with [846] objections on the call because I qualify [848] the lead really well before we even get [850] to this point like before we get to this [852] point the client knows that I'm a [854] subject matter expert uh I know that [856] they're bought in and I know that they [858] really value who I am and my expertise [860] and you know some of the other projects [861] that I've done and I do this in you know [863] my marketing like if I'm doing cold [865] emails which I'm not really doing as [866] much of anymore just because YouTube has [867] been successful and a couple of other [869] lead gen Source has been successful but [871] if I'm doing cold email um I will [873] usually you know send the client over a [875] bunch of information about who I am um [877] I'll sometimes cheekily tell them to [878] Google me and you know they'll they'll [880] do it and all of a sudden they'll be [882] like oh this guy has a Google profile [883] you know he knows this stuff he's not [885] just some schmuck on the internet uh so [887] this this usually helps me quite a bit [889] but yeah as I mentioned um I guess the [892] last thing I'll touch on here is there [895] are there are some situations in which I [897] will just sell the person on the call [899] these are quite few and far in between [902] if I've already scoped the project and [904] if I've done basically this exact same [906] project before and I know the scope and [908] I know exactly how this goes and I'm [910] extremely confident that I can build it [911] out in like a day or something like that [914] and I know that the client really likes [915] me and would say yes right there Then I [917] then I will generate the proposal [919] usually right on the call using my [920] little proposal generator system this is [922] this is pretty uncommon though in [923] practice especially nowadays with my [925] bigger projects but in those cases [927] sometimes the client will pay right then [929] there and the situations in which that's [930] happened it's been great because I can [931] usually just get into the kickoff [933] immediately and I don't have to like [934] schedule a kickoff a few days out so the [935] Project's a lot faster but you know as I [939] mentioned um in most other instances I [941] will do a dedicated scoping step and [943] then I will send the proposal right [945] afterwards usually same day if you do it [948] like a day or two or three later [950] sometimes if this is an urgent enough [951] problem the client will have already or [953] the prospect will have already gone out [954] and found somebody else to do it so you [956] want to minimize that as much as [957] possible Right do everything for them [959] within the 24 hours any that's my sales [963] process I hope you guys found that [964] informative and valuable I'm going to [966] include a link to this notion in the [967] video description as usual uh I realized [970] this is a little dry because I didn't [971] actually show off any systems or [972] whatever but I think the right people [973] will find this valuable if you have any [975] questions or you want me to Lucid or [976] elaborate on any of this let me know but [978] otherwise thanks so much for watching [979] leave a like comment and subscribe down [982] below and I'll H you guys all up in the [983] next video than

Video: https://www.youtube.com/watch?v=TtvSHo003UI
Title: How To Handle Errors In Make.com (No Fluff Error Handling)
[0] what's going on guys it's Nick and in [1] this video I'm going to cover basically [2] the final important thing that you need [4] to know in order to make make.com work [6] for you and that's what to do when [8] things go wrong so error handling rate [11] limits and the many common and sort of [14] inevitable issues that you're going to [15] face if you choose to develop inm [18] make.com in any sort of meaningful [19] capacity so if that sounds like [21] something you're interested in improving [22] stay tuned and let's get into the [28] video okay so first things first if you [30] guys have watched my videos up until now [31] you'll probably have noticed that I use [32] a particular design pattern in [34] production ready uh flows and by [37] production ready I mean flows that I am [38] sending to a client I mean flows that [40] I'm using myself and my own company [42] essentially flows that make or maintain [45] money and if these flows do not work all [48] the time it's a big problem and so what [50] I'm going to do in this video is I'm [51] going to show you two different ways [52] that you can deal with that the first is [54] going to be a built-in make.com way and [55] the second is going to be a third party [57] that probably less than 1% of make devs [59] know about um that essentially allows us [61] to put a Gateway before anything reaches [63] our make app or add a gate after um our [68] make app like you know if there's like [69] an outbound request or something like [70] that and these are two ways that you [72] know allow me to manage well over 75 to [75] 80k a month just in um revenue for my [78] own companies just using these sorts of [80] flows so very simple very easy and uh by [83] the end of this video you'll know [84] everything that you need I'm not going [85] to like harp on all of the error [86] handling modules because I think most [88] most of them are to be honest [89] we're only going to wor about the ones [90] that actually matter Okay cool so yeah [94] this design pattern uh that you guys [95] usually see is there's just a bunch of [97] modules here and any module that calls [98] an API uh you know I put a little break [101] module on top so get a task for clickup [103] that's an API right um search for [106] projects Google Drive that's an API [108] Google Docs over here that's an API so [109] anytime I'm calling a third party [111] resource and there's like a 1% chance [113] that out of a thousand calls that [114] resource will be down I just need to [116] provide a way to uh to handle that right [119] because it's not not these are third [120] party platforms we don't manage them [121] it's not like I had a server in my [122] basement to like deal with all these [124] requests that I can personally [126] guarantee uh you know uptime for these [128] are Services where there's a million in [130] one other people that are trying to [131] access it there are a million in one [132] other things that could possibly go [134] wrong sure they technically have what [135] are called service level agreements slas [137] usually but I find in practice those [139] don't really mean I mean type form [141] was just down for like 14 hours or [143] something like that uh I think clickup [145] was just down for a day you know these [147] are services that make me a lot of money [149] and every second that they are not are a [152] big problem so yeah um you know I'm [154] going I'm going to show you how to like [155] build out the same sorts of flows now [157] what is a break module basically a brake [158] module says hey if this module the one [161] that the brake break is connected to [163] should errror out you know if instead of [165] that beautiful green little bubble we [167] receive a red one then I want you to [170] hold all of the data that was sent to [172] that module and then I just want you to [174] wait a little while and then try again [176] so this essentially allows us to build [178] out [180] A system that can hold data with ISS you [183] know assuming that there are any issues [184] in the flow and then just retry on a [187] regular schedule that we Define until [189] that flow works or you know until we run [191] out of retry attempts and in this way [194] you can basically virtually guarantee [195] that if it's just a simple rate limit [197] issue like you just call clickup or [199] Google Drive a million in one times or [201] something like that and they're like hey [202] man slow the hell down uh you know if [205] it's just a rate limit issue it's [206] basically never going to be a problem [207] because you're just going to like drip [208] that out later um it just lets you build [210] a little bit more flexibility into these [212] things so if I click on this what does [213] this actually look like it's called flow [215] control you'll see there's automatically [217] complete execution which I believe is [218] just always said to yes by default but [220] the important part is number of attempts [222] and then interval between attempts and [224] so if you read through this little info [226] here it says hey this is the maximum [227] number of atts allowed for the execution [229] to be tried and completed [230] automatically if they fail the execution [233] will have to be completed manually and [235] so um manual completion means that you [238] will literally go into the make.com logs [240] and then you will click retry yourself [242] right and so this is actually just a [244] piece of functionality that the break [245] module allows you to do like if you [246] don't put the break module in and if you [248] don't like uh toggle a setting which [249] I'll get into a second you can't [251] actually ever retry a scenario manually [253] but this actually allows you to like [254] catch the data and then retry with that [256] data which is super super useful [258] especially when you're testing and then [259] down here is interval between attempts [261] so just the number of minutes that you [262] want the interval between attempts is 10 [264] minutes guess how long it's going to [265] take between attempts pretty [267] self-explanatory so that's the break [269] module setting in order to access it you [271] need to go down to these more settings [272] oh I lied you need to go down to the [274] scenario settings little gear icon and [276] then you need to scroll down to allow [277] storing of incomplete executions and [280] then you need to tap yes normally it's [282] no by default but uh by doing yes now [284] we'll have we'll basically provide make [285] the ability to like if there are any [287] issues it's going to break the scenario [288] and it's just going to wait with that [290] data until we reach those cut off times [292] that we just set up earlier so you can [294] read through all this stuff on your own [296] but uh yeah pretty pretty high value [297] flow over there I'll give you a quick [299] example example so this is just a little [303] default that I just set up here um so I [305] just created a new scenario and I'm just [306] going to add a clickup module I'm just [308] going to get a task and then a clickup [311] allows you to like add an ID essentially [314] to try and pull a particular task I'm [316] just going to write a random ID that [317] doesn't exist and we're going to see [319] what happens I have a feeling we're [321] going to for 100 that's exactly what [323] happen we received a 401 team not [325] authorized and this is actually just a [326] quirk of clickup for whatever reason [328] these guys do not uh they don't tell you [330] exactly what the error is they have [331] really shitty error handling but what [333] I'm going to do is I'm going to go to [334] this little settings icon click allow [335] storing of incomplete [337] executions and then I'm going to go to [339] this blue or green here I'm color blind [342] or it's early one of the two and then [344] I'm going to add this break [346] module I'm going to click on it I'm [348] going to look at these settings three [350] attempts 15 minutes interval between [351] attempts that's looks pretty good I'm [354] actually just going to put it on top [355] because I think that's more [356] representative of what's happening and [358] then I'm G to run again [360] there's going to be an error but now [361] you'll notice that the break module has [363] actually gone [364] through and you'll also notice that [366] there was another message down here it [367] says the operation was completed with a [369] warning [370] 40127 team not authorized this is [373] different from what we had before [376] so okay I think I'm just clicking the [378] wrong hot key here yeah my bad uh but [381] anyway if I go back now you'll see [383] there's a new tab that we've added to [384] the right hand side of our scenario [385] editor and that's the incomplete [387] executions tab which is pretty neat [388] right uh so if I give this a quick [390] little click you'll see now that I'm [392] basically being taken to um this [395] specific run that had the problem and [398] that was caught by the break and so if [400] you click on this red dot over here [401] it'll tell you what the issue was hey [403] incomplete execution and then if you [405] click on this get a task module you can [407] actually go through and then you can [408] just run it again and so let's say I'm [411] actually trying to run this on a real [412] record in clickup just going to go down [414] to the content Pipeline and then get [417] this task here the IDS click up or [419] always just store it up at the very um [421] up in the URL then I'm just going to do [423] this and then I'm going to click run [425] once well now you'll see it has actually [428] gone through we initially queried it [430] with uh Tas that didn't exist a fake one [433] we obviously got the error but then it [435] held that and then it allowed us to [438] click into that specific run and then [441] run with our own data whatever new data [443] that we wanted or you know we could [444] rerun it or what have you now what I [447] just did is basically what the break [448] module would do the only difference is [449] the brake module would be running again [451] and again with the same ID but you guys [452] can kind of catch the drift right like [455] usually there is some piece of data that [456] is feeding into a function like the [458] clickup geted task module uh and you [461] know if that thing screws up then this [463] ID is going to be wrong but with the [465] break module you can catch that and just [466] run it again and you know uh usually if [468] you're doing three M three times with [470] 15minute intervals in between usually [472] the second or third time uh will work if [474] it's an API issue so I I just do this or [478] I say this really [480] to just encourage you guys to you know [482] in practice this is what you do this is [483] like the step one two three you go down [484] to this scenario settings module or [486] button you click allow storing of [488] incomplete executions and then just [489] anytime you're calling a resource just [491] drag and drop a break module on top of [493] it it'll fix probably like over 50% of [496] issues just just up front like that um [500] yeah so that's probably like the [501] simplest way to implement err handling [502] there are of course a number of other [504] flow control options here there is [506] repeater which I never use iterators [508] which I I've shown you guys in a [510] previous video I do not like to use [512] aggregators which I've shown you guys in [513] previous videos I also do not like to [515] use you can get far with make.com [517] without using any of these you know [518] Advanced flow control functions routers [520] which I don't like to use but I [522] sometimes will use uh and then these [523] These are really like the error handling [525] there's like roll back break resume [527] commit ignore just for the purposes of [529] like being complete I'm just going to [530] run through them but I you will [532] basically never use these in practice [534] except I lied I apparently did use this [536] here in practice once uh but there must [538] have just been a very particular issue [539] which resulted in me doing that okay so [542] there's break roll back there's resume [544] uh then there's commit and then there's [547] ignore and I probably have to connect [549] these don't I yeah I do that's sort of [551] annoying let's go over here all the way [555] to the end and just connect these one by [557] one to my Harvest [559] module okay I was just doing actually a [561] little bit of documentation reading [562] because I had never used the roll back [564] module in my whole life uh and for good [566] reason it doesn't really do much uh but [569] over the course of the next minute I'm [570] just going to run through these [571] regardless so uh the rollback module [573] essentially just allows you to stop the [575] flow immediately and then Mark it as an [578] uh as an error so you can imagine how I [580] don't really see much utility in that [582] and I'm never really going to use that [583] in practice because if there is an issue [585] with a module and that module has an [586] error it'll stop the scenario [588] immediately and then just mark it as an [589] error so I don't really need this [591] rollback module and that's one of the [592] reasons why I've just never used it in [594] practice um the rollback module is sort [596] of the opposite of the commit module [597] what the commit module will do is the [599] commit module will if there's an error [602] it will instead Mark the the scenario [605] run as a success or as completed and [607] then it'll stop the flow uh so again I [609] don't really see any real reason why we [611] need to to use the commit module unless [613] you wanted to intentionally have some [614] type of you know incorrect information I [617] wager that these are mostly just [618] hand-me-downs from integrat from way [620] back in the day before they really [621] determined the best way to to Route [623] stuff and error control and that sort of [625] thing and they just haven't really [626] changed that the ignore module um this [628] just exactly what what you think um if [630] it runs into an error it's just going to [632] ignore that error and it's going to [633] pretend that that error did not happen [634] or did not exist I believe it continues [636] the rest of the flow um and you know [640] there are some instances in which you [641] might want to use this as you see over [643] here I think that this API endpoint uh [645] that I was using for clickup at the time [647] was pretty buggy and like every time I'd [649] call it it would do what I wanted it to [651] do but then it would return an error uh [653] and I just didn't really want the errors [655] to come in and you know if you get a [656] certain number of Errors it'll [657] eventually turn off your flow so pretty [658] sure we just drag and drop that ignore [660] module there just to deal with that um [662] so I could see a little bit of utility [663] in the ignore but really I don't don't [665] really do that ever and then um the [668] resume module uh this is interesting and [671] maybe a little bit more technical but [673] basically if there's an error [674] hypothetically at the apply budget to [676] project um module here uh we can take [680] in we can take in like the status code [683] maybe that's return like the 400 status [685] code and we can just turn it into [686] something else we can basically just [687] like map over that and say no that a 400 [689] status code anymore because I wav my [690] magic wand now it's a 200 status code [692] and then if you have some other [694] functionality later on some filters that [695] depend on that you'll use the output of [697] the resume module instead of the output [699] of of that so yeah in practice I [702] basically never use these and I imagine [703] if you guys are following along for the [705] first time or you guys are just [706] interested in making a large amount of [707] money with this platform not necessarily [709] just being the master I was about to say [712] the masterb the master composer of flows [716] to be fair masturbation is yeah that's [718] what a lot of people are doing on make I [720] think instead of making money uh then [722] you know maybe you'll disagree with me [723] but hey say love V so that's the break [726] module that's one of the ways that you [727] know you can use error handling in your [728] flows practically and again you know in [730] in the real world all I would recommend [732] is just go to the scenario settings [733] click allow storing of incomplete [735] executions and then just drag and drop a [737] a break module on top of every API call [740] the second thing that I want to show you [741] is I want to show you a third-party [742] platform that I find extremely useful in [744] dealing with higher demand rate limit [747] stuff so like really high volume appli [749] where maybe a scenario is running every [750] minute or every few seconds um and then [753] you know this one also just has a bunch [755] of really cool functionality which I [756] think you guys would be interested in um [757] so I'm not affiliated with this platform [759] in the slightest but it's called hook te [761] and basically the way that it works is [762] as I mentioned earlier it's like a gate [763] where like if you're sending a requests [766] to some scenario let's say you're [768] catching a web hook if you send you can [770] send it to web or sorry you can send it [771] to hook deck first hook deck then [774] basically just like adds like adds it to [776] a Quee um creates a bunch of Q [779] functionality for you and then you can [781] like transform every one of those [782] records you can do whatever the heck you [783] want to that and then after a [785] predetermined amount of time it can then [786] pass that to your make scenario so [788] basically it's just a way to transform [789] Data before it comes in or change the [791] frequency of data uh and you can imagine [793] how it's extremely extremely valuable if [796] you're doing some sort of you know high [798] volume flow and so uh I'm not actually [800] going to go through the rig roll of [801] signing up and stuff like that but you [802] know rest assured it's quite easy just [804] go to hook deck.com [806] uh and then you know there should be [808] like a get started button up there you [810] should be able to just jump on it's free [812] uh and then I'm just going to show you [813] how to practically use it so go over to [815] connection create a new source and I'll [818] just say example uh let's just say March [820] 10th video that'll be easier for me to [823] keep in mind and then we'll call this [826] source and then the destination will [828] just be March 10th video destination and [831] then you'll see here there are a couple [832] settings I can add one of them is [833] endpoint URL and basically what's [835] happening is um we'll set up we'll set [838] up basically this this is like a web [840] hook we're going to get a web Hook from [842] this and then we can use that web hook [844] and send things to it and then it'll [847] catch this web hook and then wherever we [849] put the destination the endpoint URL is [851] where we're going to send it after and [853] so uh let me actually go to a scenario [855] called example rate limiter which I set [857] up for this purpose and then I'm just [859] going to add another one here I'll go [862] back to this example break module [864] actually yeah we'll delete that I'm [867] going to create an http request module [870] I'm just going to call this manually so [871] you guys can see so make a request okay [874] great and then I'm going to go back to [876] hookd finish setting it up so uh we need [878] an endpoint URL so I'm going to go grab [880] this web hook URL I'm going to copy this [883] address to a clipboard this is just a [884] random rate limiter that I just set up [886] so sorry a random web hook I just set up [887] I just clicked on this module and then I [889] clicked custom web hook and then I'm [892] going to go back here paste that [894] in there's some Advanced configuration [896] options I never Ed those I just used [897] like the default h HTTP and then I paste [899] in whatever the web hook um that's going [901] to be receiving the request and the [903] receiving it is you'll see down here [904] there are a bunch of connection rules [905] and this this is really like the the [906] meat and bones the meat and potatoes of [908] this you can transform data as it comes [910] in so you can apply some type of like [912] mapping rule where um I don't know like [915] if the data is in tabular Array format [917] you can like turn every one of those [919] array objects into like a Json object or [920] something instead um my terminology is a [922] little bit off there but yeah you can [924] turn every item in Array maybe into its [926] own object or you can perform some type [928] of filter where you know if a certain [929] key is equal to two you just don't [931] forward that over to make you see how [933] this significantly expands your tool set [934] and basically just allows you to do [936] things that are probably a lot more [937] operationally efficient um you can delay [940] and so you can set up a rule where every [942] time something comes in I want you to [943] hold on to that for exactly 60 seconds [946] you know just keep that in your server [947] don't actually send that to our make [948] scenario yet um I use this sometimes I [951] don't really use this that often because [952] make allows you to just usually sleep [954] but if you keep if you know that uh if [956] you know about sleep you'll know that it [957] only allows you to do it for I think [958] five minutes or something like that hook [961] deck allows you to do it for days so you [962] could theoretically get a response just [965] wait like three days and then send it [966] three days later and that might be [968] useful for you guys if you're using I [970] don't know let's say somebody is [971] finishing a project and after you finish [973] a project you want to send a survey to a [975] client and you want to say hey how did [977] we do on this project uh if you want to [979] solve this natively in make a lot of the [981] time you need to use like a database or [983] you need to add like a new column to [985] your project manager but with hookd you [987] could just say delay 3 days and then 3 [990] days after you finish your project you [991] know a type form or something would go [992] out so very modular very customizable [996] it's it's pretty cool to be able to add [997] that to your make flow and then really [999] like the the cool part of this or the [1001] coolest part I should say because I've [1003] covered a couple cool Parts already is [1004] this retry function and you'll see here [1007] that this is basically just the break [1008] module just and a third party platform [1011] but there are a couple of additions and [1014] the most important one is this retry [1015] linearly versus retry exponentially [1019] so re retrying linearly usually just [1021] means hey I want you to retry every x [1024] amount of [1025] time so if I were retrying three times [1029] and the limit and the interval was 15 [1031] minutes and I was doing it linearly it [1033] would be 15 minutes 30 minutes 45 [1035] minutes but if I'm doing exponential [1038] retries basically what this will do is [1041] and I don't know the exact math but the [1043] first try will be pretty early on so the [1047] first try might be like after 10 minutes [1050] but the second try will be after like 60 [1053] minutes and the third try will be after [1054] like 290 minutes or something like that [1057] like the distance between each interval [1059] will go up exponentially and the reason [1061] for that is because a lot of apis the [1062] way that they work sort of under the [1064] hood is they they use exponential [1065] functions to Define when is too much and [1068] when is too when you're sending too many [1070] requests and when you're sending like an [1071] appropriate number of requests so if you [1073] just retry linearly what can happen [1075] sometimes you know apis are getting [1077] better at this and they're not as hokey [1079] anymore what can happen sometimes is [1080] you'll just never actually be able to [1082] make it past the rate limit because the [1084] time window that you're calling linearly [1086] is below whatever the exponential [1088] function results to when they count up [1090] the number of times that you've like [1091] requested in an hour so by retrying [1093] exponentially you can usually get away [1094] from that and it sort of like follows [1095] logically we're going to try once after [1098] 15 minutes just to just to make sure [1100] that like they aren't really easy on the [1102] rate limits and then if that's denied [1104] then we'll be like okay okay these guys [1105] probably take it seriously so we'll wait [1107] another hour or something before try [1108] again if that's the ID will be like okay [1110] okay these guys probably take it really [1111] really seriously we'll wait like seven [1113] hours before we try again right that's [1115] sort of the logic there and you can just [1116] set that up naturally in uh in Hook deck [1119] which is really cool so yeah pretty neat [1121] I'm actually not going to apply any [1122] filters here just because I want to be [1123] able to test it really quickly and then [1126] you can set a connection name down there [1127] I don't really maybe we'll just do March [1129] 10th video and then I'm going to click [1131] create now it's going to give me a web [1133] hook that I can send requests to and [1135] this is what I was alluding to earlier [1137] so I'm going to go over to example break [1138] module paste this in and I'm just going [1141] to run this puppy you'll see that we [1143] sent the request over to hook deck there [1146] was a response it says 405 just because [1148] this was the very first time that we did [1149] it but if we go back to hook [1152] deck you'll see that uh we received that [1155] that call status was unsupported method [1158] probably because I'm just doing a get [1159] request and maybe they want like [1161] uh yeah they probably want a [1164] different let me just [1167] see [1169] okay yeah it only uh supports receiving [1171] web hooks over htb postp put or patch [1173] I'm just going to do [1174] post I'm going run this [1178] again I'm going to go back to hook deck [1180] here and this is sort of just a queue [1182] while you're testing that'll populate [1183] with all the requests that are coming in [1185] and so you see this one was 200 just [1186] because I'm using the uh the method that [1188] they're comfortable with so yeah pretty [1190] neat if I click through this then [1191] there'll be a bunch more information on [1193] where the request came from you know how [1195] much time it took to process that sort [1197] of deal and then uh what we want to do [1199] is now we want to send that [1200] automatically to another source so if I [1202] go to example rate limiter if you [1205] remember we added this as the [1206] destination so I'm just going to wait [1207] for new data here and what I'm going to [1210] do actually why don't we set a rule on [1213] this first just to show you guys that [1215] this is potentially a little more [1217] valuable than just [1220] uh how the heck do I do this I have to [1223] like click edit or [1224] something somewhere around here no it's [1227] probably here [1232] oh Transformations [1234] maybe I forget exactly how [1237] to maybe open connection I basically [1240] just want to edit and then add something [1242] okay it looks like there's a way to do [1243] it here okay okay so let's um let's add [1245] a delay and then why don't we just delay [1248] for exactly five [1250] seconds let's do [1253] that okay great so now what I'm going to [1255] do is I'm going to send a request at the [1256] front end to that gate [1258] and I'm going to wait and this is going [1260] to take five seconds because you know we [1262] just set a rule to keep it for five [1264] seconds so voila I didn't add any [1268] request options in there I didn't add [1270] any information so the bundle is going [1272] to be empty but yeah we just sent and [1274] received a response if I wanted to [1276] verify that this worked uh with my own [1278] data maybe I'd set the body type to Raw [1280] the content type to application Json and [1282] then I'd say like example test and then [1284] I'd say I don't [1286] know let's do examp example key example [1289] value and then let's say time sent and [1293] then I'll just do [1297] now and then let's run that puppy one [1300] more [1304] time so I just sent it we have like a [1307] ENT uh variable in here [1310] now and that time sent variable should [1312] be the same on both ends so March 10th [1314] 2024 6:46 a.m. this should be March 10 [1318] 2024 606 a.m. or 6 uh 46 a.m. but this [1322] is like in the datetime format so it's [1324] just being rendered a little bit [1325] differently but same deal you know we we [1326] verify that the data is come and and [1329] gone uh yeah so again like in practice [1332] what you're probably going to be doing [1333] is you're going to be using the delay [1334] feature or you're going to be using the [1335] retry feature and if you catch yourself [1338] you know having issues with apis where [1340] the apis are just constantly rate [1342] limiting you or maybe you just know [1343] they're a little more sensitive just go [1344] retry exponentially and then uh I just [1347] use the the 1 hour interval you can set [1349] basically however many you want here so [1351] you could have this be like 10 or 15 or [1352] 20 I think the issue with this is the [1356] exponential function means that the 10th [1357] time will technically be more than one [1359] week in the future so I'm not entirely [1361] sure what the function is under the hood [1362] but you guys can read the docs there if [1364] you want okay great so yeah in practice [1367] I'm only ever really going to use the [1368] break module the way I'm going to do [1370] that is by changing the scenario setting [1371] to allow storing of incomplete [1373] executions then just dragging a brake [1374] module on top of every API call and then [1376] I'm going to be using hook de for high [1378] volume applications or applications [1380] where I want to delay something for you [1382] know maybe more than 5 minutes maybe I [1384] want to delay for 24 hours or 48 Hours [1386] something like that and to do that you [1387] just sign up to hook deck add a source [1389] that source is going to be whatever the [1392] um that source is going to be the URL [1393] that you use when you call a resource [1395] from make and then add a destination [1396] that destination is going to be the web [1398] hook that you are again going to catch [1399] and make so yeah voila that's how you do [1401] it on your own I hope you guys found [1403] that helpful if you guys have any [1403] questions or anything like that feel [1404] free to let me know otherwise leave like [1406] comment subscribe all that fun YouTube [1408] stuff I'll catch you in the next one bye

Video: https://www.youtube.com/watch?v=5ZNF07zm7mk
Title: How to Create High-ROI Dashboards You Can Charge For Using Make.com
[0] what's going on everyone it's Nick and [1] in this video I'm going to show you how [2] to make an extremely simple but very [4] high Roi dashboard for finances in [6] make.com Google Sheets and looker Studio [9] this is something that makes a massive [10] difference to the companies that I work [11] with I usually sell it from anywhere [13] from 3,000 maybe up to $110,000 or so [16] assuming if the company has a lot of [17] money to spend and this is really [18] important to them uh and in this video [19] I'm going to walk through everything [20] they from start to finish it's a real [21] live client build for a project that I'm [24] doing and if that sounds like something [25] you want to learn how to do yourself [26] stay tuned and let's get into [28] it [33] all right so for an example what this [34] dashboard is going to look like just [35] skip over to the end of the video I'm [36] going to run through that in detail uh [39] but for those of you guys that just want [40] to dive right into it the way that this [42] is going to work is I'm going to break [43] this video into three parts the first [44] part is going to be us going over what [46] an example database or Google sheet [48] structure might look like for this the [50] second part is going to be us building [52] out the automations to get the data into [54] that sheet so the finance data is [56] usually entered due to some [57] transformation whether it's like a [59] striped transaction or maybe a padoc [61] proposal signed or something like that [64] uh because I'm respecting my client [65] privacy here I've set up a bunch of [67] example type forms and I'm just going to [69] be using these type forms as our data [70] input but you can imagine how you could [72] simply hook this up to stripe or [73] pandadoc or anything else as the trigger [75] all you would have to do is just replace [76] the field so in question and then the [79] third part is going to be us actually [80] building out the dashboard in looker [82] Studio looker studio is the continuation [84] of Google data studio if you guys are [85] familiar with that uh from a couple [87] years ago and basically it just allows [89] you to use [90] Google products and services like [92] YouTube data or Google analytics data to [95] design pretty simple and pretty [96] beautiful dashboards in my humble [98] opinion this is an example of one using [100] Google analytics 4 so you can see in [101] this case it's doing active users new [104] users uh Trends you can plot things as [106] sort of a graph or a chart and you also [108] have one of my favorite features which [110] is the ability to to change things based [111] off time and the real strength in [113] building a dashboard on this platform is [115] just that you basically have access to [117] real-time data at any point you know you [120] no longer have to call up your Finance [121] team or your finance department or try [123] and manually compile a report like you [125] can you can do all of that yourself just [127] by moving the date range so very [129] powerful for companies and one of the [130] reasons why they're typically you know [132] happy to pay a large amount of money to [133] make sure this problem is solved also [135] just think about like the ROI on having [137] Total Access to your finances at any [138] point in time it's crazy so that's what [141] we're going to cover today um I've set [143] up our Google sheet structure and then [145] I've scaffolded out a couple the make [147] scenarios just to make sure this video [148] isn't 5 hours long uh but in reality [150] these sorts of builds usually take me I [152] want to say probably about three hours [154] of actual like Dev time uh unless [156] there's a major bug or unless I [157] misunderstood sort of how the client [159] wants to track things that's usually [160] what I'm looking at but okay first [162] things first let's cover the way that [164] the um actual data base is going to look [168] now database is a fancy and loaded term [170] uh most of the time when you're doing [172] coaching agency or info product [174] businesses your database is just the the [177] Google sheet that you have set up it's [178] about as close to a database as you can [179] get get anyway obviously if you're a [181] developer you're going to be raging at [182] me right now because Google Sheets isn't [183] a database but you know it has rows has [186] freaking columns good enough for me so [189] uh what we're going to be collecting [190] specifically is I want to get the total [192] number of meetings booked like this is a [194] sales company they do coaching right uh [196] so I want to get the total number of [198] like closing meetings that are booked [199] because I think that's an important [200] metric then I want to get the number of [202] proposals that are sent from those [204] meetings now these proposals proposal is [206] sort of a loaded term if you watch the [207] re my recent videos you're probably [208] think my the proposal is like that [211] beautiful seven-page document that I add [213] generate these proposals are much [214] simpler they're basically just like a [215] one-pager form and then they just you [217] know have payments uh attached to them [219] if somebody clicks yes then they just [221] pay their thing with a credit card and [222] then it's done but just keep in mind [224] it's like this is a this is a one call [226] close where there's a big sales meeting [228] and then a proportion of those are going [230] to go through a proposal transformation [233] and then a proportion of those are going [234] to go and actually like pay the money so [236] we're going to track the number of [237] meetings booked then we're going to [238] track the number of proposals sent cuz [239] presumably these two are good pieces of [241] information to have and at the end we're [243] going to track the number of deals that [244] were closed as a result of those [245] proposals sent and when the deal is [248] closed there are two things that are [250] that we're also going to be collecting [251] one is going to be called contracted [252] Revenue which is the amount of money [254] that the client basically promises to [256] pay it's the total amount at the bottom [259] of the proposal or in our case like [261] we're calling this proposal it's really [262] a contract there's a signature and [264] everything um this is the amount of [266] money that the client is obligated to [268] pay they've been contracted now to pay [270] this money at some point between now and [272] the end of time but I want you guys to [274] know that that's a big difference [276] between the amount of money that was [277] actually collected and that term is [279] called Cash collected um this is [281] something I see a lot of novice [282] entrepreneurs trip up on by the way the [284] difference between revenue and cash [285] collected and this is why you know a lot [287] of guys in the Ecom space or a lot of [288] guys in the coaching space are like I [290] made $45 million in Revenue in two years [293] and blah blah blah blah you're like damn [295] man that guy's crazy well he's probably [297] talking about the contracted Revenue not [298] the actual cash collected let alone the [301] actual money that he keeps in his pocket [302] after expenses um so yeah contractor [305] revenue is the amount basically like the [307] total on the bottom of the contract the [309] client signed saying they will pay you [310] this at some point in time and the cash [312] collected is how much money actually [313] hits your bank account today when that [315] deal goes through very important [316] difference to understand there um you [319] really don't need to know any more about [320] Finance in order to make like a good [321] highquality dashboard that people like [323] so don't worry too much about that but [325] yeah the way that this is going to work [326] I just added some example data because I [328] think this is a little bit trickier to [329] get [330] uh when the transaction happens [333] obviously there will be contracted [335] Revenue because that's like when the [336] first proposal is signed that's when [338] you're Contracting that Revenue right [340] and if you're on a payment plan or [341] something like maybe you only collect [343] 5,000 today and then you collect 5,000 [345] in like a month or something um you know [347] revenue and cash collector are going to [349] be different obviously because you're on [350] a payment plan right so the first [351] transaction with contracted revenue is [353] going to be uh basically like the the [356] deal that was closed and then any other [359] rows for that specific person which I'm [361] just tracking with a product ID which is [363] hypothetical um I'm going to set the [365] contracted Revenue to zero and then the [366] cash collected will be some other you [368] know number whatever the remaining [370] balances they're that they're collecting [371] on and so in this way uh we can count up [374] the number of deals that were actually [375] closed by just looking at any um any [377] rows that have their contracted Revenue [380] column set to above zero and then I can [383] look for cash collected just by summing [385] up the uh you know the cash collected [387] column with dates and stuff like that so [390] that's how I'm setting this up there are [391] obviously millions of different ways to [392] do so but this is a pretty reliable way [394] that's what I personally use uh it's [396] much faster I want to say and easily [398] interpretable for the client and for me [399] I use these sech of dashboards in my own [400] business so yeah that's how we're going [402] to be setting this up now uh meetings [405] booked we're going to have a date added [406] column we're going to have an email of [408] the client or Prospect I should say at [410] this point whose meeting We are booking [412] and then we're going to have a date [413] booked um and we can select way more [415] information here if we want but these [416] are just the fields that I'm going to [417] keep maybe I'll add some more I don't [419] know for proposal sent we're just going [422] to be including the date added uh then [424] the description and then the customer [425] email so probably shouldn't say customer [427] email at this point um let's just say [430] email and then for deals closed we're [432] going to be collecting the date added [434] the description just because uh we're [435] going to presume that the platform that [437] we're using to track this stuff has some [438] type of like title or name column or [441] something uh contracted Revenue column [443] obviously we're going to add that up [444] cash collected column obviously we're [445] going to add that up customer email [447] because they are a customer at this [448] point so I can actually say that and [449] then we'll have like a product ID and [451] product ID here for our purposes is just [453] going to be a placeholder since I'm just [455] going to be putting that data in using [456] type form uh but you know the specific [458] way that the client is tracking is they [460] have uh this big clickfunnel sort of [462] flow and then when somebody buys [464] something and clickfunnels it heads over [466] to their payment processor for a [467] specific product and this is important [469] for us to track because we want to oops [471] um attribute you know if like the the [475] client has several payment plans that [476] are specific to a product and so if [478] there are two payments that relate to [480] the same product ID for instance uh well [482] then we know that that's going to be [483] like payment number one payment number [484] two uh so this whole thing is totally [487] dependent on how your uh client uh sets [490] up their payments and sort of what [491] you're working with but that's how they [492] set up theirs that's what we're going to [493] be [494] doing okay great so yeah that's that um [498] let's actually go in and build it now [500] this is the Google sheet structure [501] everything here is good let's actually [502] jump over into make and then put things [504] together so first thing we're going to [505] do is I'm actually going to use a [507] cal.com example with my own booking link [510] then every time a new calendar event [511] gets booked in that calendar I'm going [513] to be adding a new uh row here to this [516] uh to this meetings book sheet and so [518] I've set a scaffold up here just called [520] client X meeting booked and what I'll do [522] is I'm going to be awaiting a web [524] hook because I know that cal.com my [527] calendar platform uses web hooks but if [529] you're using calendly or something [530] there's a there's a little calendly [531] built-in over here uh where you can just [534] watch events as they come in but I'm [535] using cal.com so I'm using a web hook [538] going to call that custom web hook the [540] web hook name uh we're just going to [543] do [546] new let's just do new example booking [549] March 9th [551] 2024 going to copy that address then I'm [553] going to head over to cal.com jump into [556] my [559] account I have so many different event [561] types here I'm just going to use [562] freelancer demo call this is for an [564] offer that I ran quite a while ago where [566] I was teaching people how to get to [567] $30,000 a month free laning uh worked [570] reasonably well I would say but I didn't [572] end up scaling it into a product or [574] anything I'm going to delete this old [576] web hook just cuz that's not necessary [577] and I'm going to create a new one so um [579] I'm basically just pasting in the [581] make.com server destination which is [584] this link right here that they provide [586] for you into the web hook destination [589] field and cal.com doeses this by letting [592] you choose which event triggers you want [594] like maybe we only want to send this out [596] when the booking is created or maybe we [598] only want to send this out when when the [599] meeting ends or something like that we [601] have a lot of options here uh but [603] because I'm only curious about when a [605] new meeting is booked the only event [606] that I'm Cur that I really want to track [609] is when a booking is created so I've [610] just deleted the rest of these I'm [612] setting everything else to default here [614] I'm not setting a secret I'm not setting [616] um a payload template because I just [618] want it to be whatever cal.com default [620] is and then we can also just ping a web [623] hook before continuing the reason for [625] that is because we just want to [626] establish the data structure so I'm just [627] going to go ping test I'll go back here [629] and you'll see now it's a successfully [631] determined that's because it just [632] received the event that was sent but now [635] I'm actually going to go and run it [636] because I want to see what the data is [638] and you'll see that we just got that [640] data because this's this little Cloud [641] icon that popped up and now we actually [643] already have access to a few fields that [644] we're going to need like start time end [646] time um attendees organizer actually I [649] think that's I think that's enough for [650] us to do everything right uh yeah I [653] think that's actually enough for us to [654] do everything so I'm not even going to [656] like actually run this on real data I'll [657] just uh go ahead and start adding rows [660] the way that I'm going to do that is I'm [660] going to go over to the Google Sheets [665] module uh my bad I can't actually select [667] that because I've already added it to my [668] favorites list here so I'm just going to [670] click on that and then I'm going to go [672] to add a [673] row and let me just check which account [677] this is on I should have access to this [680] I'm not entirely sure so it's probably [681] un shared with me uh wherever your [684] Google sheet is um just make sure that [686] if you connect to the account make sure [689] that you connect to the account that you [690] created the Google sheet in you should [691] see it under my drive now I've sent this [694] over to a different account so I have to [695] go to shared with me and then I have to [697] type in the specific [699] uh let's see yeah I have to type in the [702] specific title and then find it yours [704] will probably be in my drive though [706] sheet name now I've created three [707] different sheets one for meetings booked [709] another for proposal sent another for [710] deals closed revenue and cash collected [712] so the one that I'm curious about the [713] one that I want to interact with now is [714] meetings spook that's I'm going to be [715] using and then for values I'm just going [717] to be pumping in uh the values so date [720] added uh created at that sounds [722] reasonable for me um email I'm just [725] going to go to [728] attendees and then go to email and then [730] date booked uh we're just going to use a [733] start time of this [734] date looks like this hypothetical [736] calendar event here the Ping test that [739] we sent was created on March 9th 2024 at [742] 6:20 a.m. and then it's also going to [744] start at March 9 2024 6:20 a.m. but in [747] reality these are obviously going to be [748] different because you can't book a [749] calendar event for the same time that it [752] is taking [754] place and now what I'm going to do is [756] actually go [758] in I'm going to create the web hook [760] actually first I'm going to go into this [762] and then I'm going to book an example [765] meeting I'm going to say I'm booking [768] this is my example phone number I'm [770] going to set my gross monthly Revenue to [773] low and then I'm going to go ahead and [776] make sure this is on good click confirm [780] what's happening now is it's being sent [781] to the back end we caught the web hook [784] we see that the event type the trigger [786] event is booking created which is the [787] only one that we're actually watching [789] and then there's a bunch of information [790] here coming in including the start time [794] the created ad all the information that [796] we need uh before it goes to the Google [798] sheet the input to the Google sheet are [800] these three values it looks like there's [802] a difference in the formatting between [804] date added and date booked this is [805] pretty ugly so in practice I might [807] change this if I go back to the Google [809] sheet let's see yeah oh no actually it [812] looks like they're all [814] uh they're both in this datetime format [816] so that's fine I'll just leave it as is [819] but yeah we've now added a meeting to [821] this sheet and now we can visualize this [824] data in looker Studio I'm not going to [826] do that yet I'm going to wait until [827] we've run through the rest of these [829] fields but this is just a quick and easy [830] way to get data into the system using a [833] web Hook from cal.com and I've probably [835] showed you guys this before now it's [837] time to actually go through proposal [838] sent [839] the way that I'm going to do this is [840] I've set up an example type form and [843] I've called it client X dashboard [845] Discovery call [848] form so there's a pretty common design [850] pattern when you're doing these sorts of [852] things for agencies and for coaching [854] products or coaching info products and [857] that design pattern [859] is anytime that A salesperson does [863] anything with a prospect they need to [864] log it somehow and so I've just set up [867] an example logging form here and the [868] only thing it asks for is hey what was [870] the outcome of the call answer in US [872] Dollars and so the reason for this is [874] because if you don't at least have [876] salese do some type of sales admin or [878] logging you just can't grow your [880] organization because they will make like [882] backdoor deals and they'll you know text [884] the client at uh 9:23 p.m. to get a deal [888] closed you basically just need some way [890] to log all the interactions sales is [892] having with prospects if you want any [893] chance of optimizing it later on or [895] scaling the company so getting in the [897] habit of something like this early is [899] probably your best bet as as a sales [901] organization now in this case we're just [903] asking for the outcome so we just want [904] to see hey this call happened was it [906] good if it's good then I've sent a [907] proposal we're just presuming that the [909] salesperson goes in and then you know in [911] this case they're like crafting Little [912] clickfunnels Pages themselves and [914] sending it which I personally think is [915] not a very good structure but I don't [917] really have too much control over that [918] at the moment so uh we're just going to [920] say that we've sent the the proposal or [922] in this case the page and then uh we're [924] going to click submit and then when we [926] click submit what we want to do is we [927] want to go back and actually catch that [929] event and when we catch that event we [931] want to add that to the proposal sent [934] page so I'm going to go to example [936] builds and then I'm going to call this [939] client X proposal [941] sent let's actually do client X [945] um Discovery form filled let's do that [949] what I'm going to do is I'm going to go [951] to type [952] form and this is going to be our our [954] transformation this is how we're going [955] to know that the meeting actually [957] occurred so I'm going to click add and [960] then the event here is I'll just go [964] example [966] dashboard Discovery call form I really [968] need to get a name and Convention for [969] this stuff okay there we go and then [973] we're going to click save now I'm going [975] to be using my two-step type form design [977] pattern which I've showed in all of my [979] previous videos but if you're new here [980] basically I just add a sleep between the [982] type form watch responses module and [984] then the type form list responses module [987] and this just allows me to do very quick [990] and easy testing on the form when I need [992] to saves me a bunch of time later on as [995] you'll [995] see so I have the form in mind the form [998] ID that I'm picking is my client X [1000] dashboard Discovery call form I'm going [1002] to leave everything else blank here and [1004] then the limit down at the bottom is is [1006] one and so in this way I'm only going to [1007] be selecting one record I'll leave the [1009] sleep at two and just make sure [1011] everything else works okay great now I'm [1013] going to click run once and I'm going to [1015] actually fill out this form which is [1017] really just one click so so not that big [1018] of a deal uh but then going to click [1021] submit and then you'll see that it [1022] catches the form it's going to wait 2 [1024] seconds and it's going to go and grab [1025] that same form and if I head over to [1027] list responses here and I go to mapable [1028] answers you'll see that it says what was [1030] the outcome of the call sent proposal um [1032] and so we have all the data that we need [1033] now to build the rest of this out uh [1035] except for email actually looks like I [1037] didn't ask [1038] email yeah so maybe I should ask the [1040] client email here just as an [1043] example let's just go back here at email [1047] and I'll say [1053] we should make these required as well if [1056] I'm showing you guys something I prefer [1058] you know it' be best practices okay [1060] let's do that one more time let's run [1063] this make scenario [1064] here and then we're going to have two [1066] thing questions we're going to have a [1068] proposal and then we're going to have [1069] what's the [1070] email and now we should have all the [1072] information that we need for this [1073] specific [1074] example so okay great we got it map [1078] answers include the outcome which is [1079] send proposal and then the email address [1082] great that's all we need now we're just [1083] going to put this into our Google [1086] sheet and then go to add row once [1090] again in practice what I'll do just to [1092] avoid having to like go back and then [1093] grab the same data and map the same [1095] spreadsheet as I will always just copy [1097] the scenario from the previous [1100] flow um oh yeah it's in shared with me [1102] I'll just copy all the scenario or all [1104] of the modules from a previous flow uh [1106] which you know usually have all the [1107] setup for me [1108] I just wanted to actually go through and [1110] build it because I think that people [1112] find [1113] it valuable to do so they're probably a [1116] ton of tiny little things that I'm doing [1118] here that I don't really consider that [1119] important for instance um so we're going [1122] to say date added um I'm going to go [1125] back here to the actual event and I'm [1127] going to say submit it at the [1129] description is just going to be the [1131] title I would [1133] say doesn't look like there's a title in [1136] the list unfortunately so I I have to [1138] use [1139] the um the watch responses module and [1142] then the email is just going to be [1145] here awesome that looks pretty good now [1148] we're just going to run that one more [1149] time and then I'm going to fill this [1150] type form [1151] manually just so that we can really give [1153] it a good test make sure everything's [1154] good send proposal what's the client [1157] email let's run this [1159] puppy looks like it was filled and now [1162] we filled out the rest of this now [1166] Google Sheets has an annoying tendency [1167] to bold every new row if you bold The [1169] Heading so this is just me eliminating [1172] that and making sure that all future [1175] rows are not going to be bolded um okay [1178] great so now we have um a transformation [1180] that enables us to get new line items in [1182] proposal sent this is going to make it [1184] really easy to do math on later I will [1186] say um make sure that you're not just [1189] building this out you know just to [1190] reiterate that you're not just building [1192] out these forms as is I'm just using [1194] these forms as placeholders for [1195] transformation so I mean in this case [1197] the discovery call form I probably would [1198] have a form for that because I want the [1199] sales people to get in the habit of [1201] manually logging their activities but [1203] for um the next form that I'm going to [1206] show you you know this is probably [1207] something you just like collect from [1208] stripe instead okay now the only thing [1211] we need to do is add deals closed and as [1213] mentioned I created a specific form just [1215] to log that and what I'm going to do is [1217] I'm going to go down here to client X [1219] dashboard sale form and then show you [1221] what that looks like now in this case uh [1224] we're just using like a form to template [1226] this out and then ask how much revenue [1227] contra Ed and then how much cash [1229] collected today but again you would [1231] probably just be collecting this data [1232] from stripe or something it's just [1234] difficult to do that in practice on [1235] camera when you're dealing with like [1236] stripe tokens and that sort of thing so [1238] I'm going to use this type form as an [1240] example in reality you would probably [1242] have your own um data source setup [1244] whether that's pandadoc or some web Hook [1247] from authorized.net or a web Hook from [1250] clickfunnels or [1254] maybe yeah a web Hook from pandadoc [1257] whatever so I'm going to say three [1259] client X sale form filled now we're [1263] going to [1264] go know type [1267] form and I'm just going to do the same [1269] thing that I did before where I'm going [1270] to [1271] go example client dashboard sale form [1276] filled I'm going to select the sale [1279] form it's going to map the web hook [1281] which is nice then I'm going to do my [1283] two-step design pattern with as sleep [1286] I'll set this to two I'll go back down [1288] to list responses add that [1291] in I'm going to select the same form [1295] that I had [1297] before or this form here yes and then [1300] I'm going to leave everything as default [1302] set this to one so you can see a lot of [1304] the exact same things over and over and [1306] over again especially when you're [1307] designing these agency flows just [1309] because they tend to use the same stack [1310] and a lot of the functions are modular [1312] and reusable okay great now all I have [1314] to do is actually test this puppy out um [1318] I'll probably just use like a flat [1320] product ID here as an example [1322] but because we've gone so far with us [1325] I'm just going to continue and then map [1327] out the rest of it so I'm going to add [1328] this row to a Google [1330] sheet and then I think I have to select [1332] the second I really have to go in and [1334] then um like what you should do in [1336] practice is if you keep on getting like [1338] error file not found or error [1340] unauthorized you should really go in and [1342] then just remove these connections from [1344] your make account if you don't know how [1345] to do that you have to go down to [1346] connections and then manually [1348] um select it and then take it [1352] out okay for date added we're just going [1354] to use submitted ad again description of [1357] this form is just going to be title and [1359] now we can get to the contracted revenue [1360] and cash collected so Revenue contracted [1363] should be here cash collected should be [1365] here I didn't fill out the [1368] email that's annoying uh and then [1371] product ID why don't we just [1374] do let we just do form ID that makes [1377] sense and then customer email I still [1379] need to fill out so I'm actually going [1380] to go back and then fill out the form [1383] we're going to unlink this and then I'm [1386] going to run and what I'm going to do [1387] now is just grab [1389] this uh form here I think and then I'm [1392] just going to add another question here [1394] with the uh with the email so you're [1396] going to go to email and then I'm just [1397] going to say customer [1403] email we're going to make this required [1406] I'm going to publish this and then I'm [1408] actually going to go out and then fill [1409] it [1412] out uh we're going to say 10,000 was [1415] contracted Nick at oh did I add this in [1419] the middle I think I added this in the [1420] middle yeah that's sort of annoying then [1422] we'll say 5,000 cash [1424] collected I'm running this right now so [1426] it's waiting for the type form [1427] submission so I just sent it it has now [1429] grabbed it doing my two-step design [1431] pattern I disconnected this because I [1432] didn't want this to continue before I [1434] knew what Fields I was working with and [1436] so now that I have the email field I can [1438] actually connect this and if a variable [1440] is ever inaccessible from one module to [1442] the other if you just reconnect it often [1444] times you'll be able to get that make [1446] just uses that to sort of like refresh [1448] the fields that were created so now I [1450] have access to the form um email for [1453] instance okay now that that's all done [1455] why don't we just run this one more time [1457] I'm going to fill this out manually [1459] again just because I I like doing this [1461] live on camera I think people get value [1463] from this so we're going to do this one [1464] more time customer emails nick. left [1466] click. we selected we collected $5,000 [1469] in cash a day 2 second sleep went [1473] through we relisted the responses and [1474] then we added the row values that we [1476] added were we added a date in Mak stake [1479] date time format we added a description [1481] which is just the title of the form we [1483] added the contracted Revenue cash [1484] collected customer email and then some [1485] product ID which is just the the ID of [1487] the form and you can see everything that [1490] was added in seems to be added in [1491] correctly yeah which is quite nice we [1494] may have to muck around with this [1495] datetime format I'm not entirely sure if [1497] this is is going to work natively uh [1499] with the dashboard I just don't remember [1500] off the top of my head but yeah that's [1502] where we're at right now um for [1505] Simplicity sake let's just make all of [1508] the dates here in their format so we'll [1510] say that we collected a payment on the 3 [1512] and we collected a payment on the 7th [1513] and then we collected a payment on the [1515] 9th because I'm actually going to go out [1516] and actually like do this now and then [1519] why don't we just add a few more rows [1520] here to make our lives easier let's say [1522] that we booked three [1523] meetings the first meeting we booked on [1526] the third or on the second the third [1528] meeting we booked or whatever was on the [1530] third and then the fourth meeting we [1531] booked was on the fifth then from these [1533] three [1535] meetings oh let's update this as [1543] well this is doesn't really line up [1545] because somehow we're going to be [1546] getting payments from meetings that are [1547] booked in the future but [1549] whatever um yeah so from these three [1551] meetings we're going to close one [1553] proposal uh so we should be getting a [1555] rate of 33% and then from this one [1557] proposal we we should close a deal so [1558] our technically our closing rate should [1560] be 100% probably not accurate you're [1562] probably not going to get 100% closing [1563] rate unless you're me no unless you're a [1565] really good salesperson uh but yeah now [1568] that we have everything that we need now [1570] that we've uh connected the make flow uh [1572] to the Google sheet we have everything [1574] that we need to actually go out and then [1575] produce this in looker studio and so [1576] that's what I'm going to do now and I'm [1577] just going to set all these to run [1579] hypothetically as if our system is now [1581] on and then I'm going to go back to [1583] scenarios and then go to example bills [1584] just to see them all client X meeting [1586] book client X Discovery form fill CeX [1588] sale form fill beautiful now how do we [1591] actually turn this into some pretty [1593] visualization well just head over to [1595] looker Studio on the account that you're [1596] integrating which actually is not the [1599] account that I have right now I think so [1601] I have to head over to this account [1603] click blank report and this will allow [1606] you to jump in easily and then Google [1608] connectors is basically just your data [1610] source and so this is just going to be [1611] where you're pulling stuff from so we're [1613] going to be using Google Sheets for this [1614] obviously and so what I'm going to be [1616] selecting it it already knows CU it's [1618] just going to take the most recently [1619] updated sheet uh this client X dashboard [1621] tracking sheet now I'm going to actually [1623] be using all three of these but because [1625] I've separated them into different [1626] sheets I need to select them all [1627] individually so the very first thing [1629] we're going to be doing is we're going [1630] to be looking at meetings booked you'll [1633] see that it allows you to set some [1634] options so you can use the first Row's [1635] headers which makes sense include hidden [1637] and filtered cells which we don't really [1638] care about but I'm just going to leave [1639] that and include specific range I'm not [1641] interested in a specific range I just [1642] want to select everything so I'm going [1643] to click [1646] add [1651] okay and as you can see it's actually [1652] gone through and it's collected some [1654] data and created an example report for [1656] us which looks to be just a table or a [1658] chart that they've added and then what [1659] it's doing is it's selecting or it's [1661] listing the email and then it's SE [1663] selecting the number of times that that [1664] email has popped up and because I've [1666] just copied and pasted the same record [1667] it's the same email it's saying that [1669] Nick Sur has booked three meetings so [1671] just to show you guys what the refresh [1672] looks like I'll just pretend that we've [1675] actually booked three meetings with [1678] Nick Peter and Sally um and [1681] then uh we can click this refresh data [1685] and it'll go and it'll basically just [1686] pull that Google sheet again and now [1688] you'll see that it's basically just [1689] counting up or trying to list all the [1691] different email addresses in their [1692] record count Google looker or uh looker [1695] Studio or Google data Studio or whatever [1697] you want to call it can seem really [1698] complicated initially um so like I don't [1701] even fully understand it at this point [1703] and I build dashboards out for a living [1704] and make you know a fair amount of money [1706] doing it so you don't need to know [1708] everything and what I'm going to do in [1709] this video just show you sort of like [1710] where to where to start with this sort [1712] of stuff um I don't actually usually [1714] start with just like a a blank uh [1718] dashboard here I usually use a template [1719] so maybe actually I should just show you [1720] to do that that's probably simplest I [1723] yeah yeah why don't we start with a [1725] template just so that you guys can see [1727] like when you start with a template it's [1728] really easy [1730] um I like this ga4 report template so [1733] I'm just going to use that better that [1734] we start with something where you guys [1736] can see how the data fits in so I'm [1738] going to click use my own data it's [1739] going to ask [1741] me to connect my own data but I'm just [1744] going to use Google Sheets instead go [1745] back to CeX dashboard sheet and then [1747] click add this way we just have a [1748] styling and everything it's going to [1749] look much [1751] prettier now uh because all of these [1753] were previously set up uh there going to [1755] be some issues it's not going to be able [1756] to essentially connect to the right data [1759] um and that's okay we're just going to [1760] click edit and share up here and then [1762] we're going to run through every chart [1763] and sort of like manually change [1765] it so what are we really curious [1770] about we are curious how do I actually [1772] edit this thing oh I think I'm In Like A [1775] View mode or something yeah which is [1777] sort of [1778] annoying let me go back and then click [1780] edit okay so what what are we actually [1783] curious about it's going to tell us if [1785] there's an invalid missing Dimension [1786] don't worry about that uh what are we [1788] actually curious about we want to get [1789] the number of meetings booked so what [1791] I'm going to do is I'm just going to um [1794] go to my so at the top right hand corner [1796] here is basically basically like a [1797] selector where you can go through and [1799] then you can select the specific data [1800] source and then select the field in the [1802] data and that sort of thing so um what [1804] I'm going to do is I'm going to select [1805] this very first chart here which says [1807] that this needs some work that's what [1809] the wrench uh is for and then I'm going [1811] to go and select the date range [1813] Dimension you'll see that it's actually [1814] automatically selected the date range [1815] dimension for us which is date added so [1817] that's that's what we care about date [1818] added um a lot of the time just [1820] automatically going to select that for [1821] you which is nice the metric that we're [1823] curious about is indeed record count [1827] which which is nice uh what you can do [1829] is [1831] um yeah I think that should be [1833] fine yeah [1836] probably let me actually get uh wonder [1839] why is it not showing [1841] the record count maybe we should just do [1844] all [1853] time yeah record count is probably uh [1856] not the right [1860] field let's count the number of dates [1862] that were added that would probably [1870] work H yeah it's a that's actually not [1873] so we're actually just going to go [1874] create a new uh create a new field here [1877] to do so you head over to the right uh [1880] not the right hand side you head over to [1881] the top here and you click add a chart [1884] I'm just going to select the [1886] scorecard drag this down here CU that's [1888] uh that's what our field is a scorecard [1891] the data source we're going to use [1892] client X dashboard tracking sheet the [1894] date range Dimension we're going to use [1895] is date [1898] added and then um if you click [1901] underneath here you'll see there's a a [1903] ctd account um usually we want to use [1905] the record count yeah there you go and [1908] what record count is is it just means [1910] the number of rows in this uh in this [1913] sheet and so there's basically one two [1915] three records aside from the header [1917] which isn't counted and that's how we [1920] select uh that's how we get three as a [1922] result and so you can change the name of [1924] this and stuff like that if you want um [1927] there's a style on the right hand side [1929] and then there's a setup on the left uh [1930] I'm just going to leave it as is and [1931] then I'll like worry about dressing it [1933] up and making it look pretty and stuff [1934] like that at the very end so yeah uh [1936] basically we have three meetings [1939] booked and I can change this name if I [1942] click on this little thing from record [1946] count [1948] it is not cooperating it looks like let [1950] me just jump [1952] back here and click that again to [1956] meeting meetings booked and that's going [1959] to change the title which is what we [1961] want just so that we know what this is [1963] and then I'm just going to delete these [1964] other ones because [1967] clearly it's a little bit buggy and [1969] we're probably not going to be able to [1970] get the specific thing that we want and [1972] now I'm going to go in and then I'm [1973] going to say proposal sent so to do that [1976] I need to to add another data source [1978] right now we have the meetings booked [1980] tab of our Google sheet we don't have [1982] the proposal sent tab of our Google [1983] sheet and so to do that I think if I [1985] click [1986] here no I need to add a new [1990] connection so I'm going to go to data [1993] and then at the very bottom click add [1995] data I think and then Google Sheets yeah [1998] client x-board tracking sheet go to [1999] proposal sent and then click [2002] add now this is going to pull out the [2004] proposal sent data rather than that [2005] other data [2008] and if we Mouse over this um you'll see [2010] it's still connected to the meetings [2011] book so we got to go down and we have to [2013] select the proposal [2015] sent which does not appear to be [2018] populating as you see some of this stuff [2021] is pretty pretty slow and pretty buggy [2024] which is unfortunate [2026] um but this is still the platform that [2030] best integrates with Google Sheets and [2031] so that's what we're using okay great so [2033] now we have three meetings booked we [2034] have one proposal it's called record [2036] count so we can change that name again [2037] to proposals [2040] sent press [2042] enter and then now what we want is we [2044] want the deals closed so I'm going to [2046] copy this record again I'm going to move [2047] this over you'll see that Google or [2050] looker Studio allows you as you drag [2052] things to sort of tell um the distance [2055] from another chart or something just to [2056] help you line it up and so now that I've [2057] dragged the server here you'll see that [2059] there are these equivalent lines [2061] equidistant lines between meetings [2062] booked and the proposal sent and the [2063] proposal sent and this new module that [2065] I've just created uh so that's pretty [2067] helpful and we just have to go through [2068] that same process again we have to add [2069] our data so I'm going to go down to add [2071] data and then I'll go to Google Sheets [2074] again client X dasboard tracking sheet [2076] and then deals closed revenue and cash [2078] collect and then I'm going click [2079] add now it looks like this is just [2081] taking a little bit of time to connect [2083] so I'm just going to give it a [2089] second I'm going to remove the data [2091] source that I had [2093] previously and then I think I what did I [2095] do last time I deleted it and then I [2096] created again I think that's what I did [2099] I don't actually remember oh no I guess [2101] I just needed to refresh it okay and [2103] then I'm going to select the new um data [2105] source which if I hover over it it looks [2107] like a little uh like info thing pops up [2110] that says revenue and cash collected [2112] which is what we want so I'm going to [2114] I'm going to select that and then what [2116] I'm going to do for my record name is [2118] I'm going to [2119] select [2121] um deals closed I'm going to write that [2124] here and you'll see that it says and the [2127] reason why it says three and instead of [2129] uh what do we really want [2131] here actually we should probably delete [2133] one of these it's probably not [2136] accurate okay let's just delete this [2138] last record here because I want to show [2140] you how we're going to track the number [2141] of deals closed versus the number of [2143] line items in here um so I'm going to go [2145] over here refresh the data and now this [2147] should say two good um right now it's [2149] saying two realistically if you remember [2151] earlier in the video I said that I [2152] wanted to have a rule where only line [2154] items with a contracted Revenue uh [2156] greater than Zer or technically counted [2158] as a deal because logically speaking you [2160] can't really contract Revenue unless a [2161] new deal is signed right this just [2163] allows us to get this into three sheets [2165] instead of four and I think just makes [2166] it more interpretable for myself and the [2167] client so in order to do that we're [2169] going to set a filter and so we're only [2170] going to filter for rows with a revenue [2173] higher than zero in order to do that [2175] we're going to go down to the bottom [2176] here where it says filter click add a [2177] filter and you'll see there a bunch of [2179] these default filters here for Google [2181] analytics um since we're using that [2183] template I'm just going to create a new [2184] one and I'll say revenue is greater than [2189] zero equals [2191] deal and then Google Sheets allows you [2194] to set a couple parameters here what we [2195] want to do sorry Google data Studio [2197] allows you to Google looker Studio [2199] allows you to connect or set up a number [2201] of filters here what we want to do is we [2202] want to include only the rows where this [2207] field contracted revenue is greater than [2213] zero you can also imagine that you could [2215] set it so that this is not equal to or [2219] whatever or we could exclude all rows [2221] where the contracted revenue is equal to [2222] zero uh there are many different ways [2224] you can do this logically but this makes [2226] sense to me so I'm going to use that and [2228] then I'm going to click save and you see [2230] the deals close has now gone down to one [2232] which is quite nice now what I want to [2234] do is I also want to get a measure of [2236] how much the revenue collected was and [2239] how much cash collected so I'm just [2240] going to drag this over here and then [2242] for my metric that's the number that's [2244] going to appear underneath the scorecard [2246] title I'm going to go down to contracted [2248] revenue and then I'm also going to go to [2250] sum or I'm going to click on this little [2253] um after I click out and back into this [2257] because it doesn't let me select it I'm [2259] going to go back here to this little [2260] pencil and you'll see that there a bunch [2262] of aggregator [2264] features you could collect the sum of [2266] all of the rows where this filter [2267] applies or you could select the average [2269] or you could select the count or the Min [2271] or the max the standard deviation uh [2273] we're interested in the sum because we [2274] just want to sum up all the contracted [2276] Revenue in a certain period basically [2278] and so that's what I'm going to leave it [2279] as but I don't like the fact that this [2280] title is a little long so I'm just going [2281] to call this Revenue instead of [2283] contracted revenue and that's just going [2284] to make the title a little bit smaller [2286] for us a little bit more [2287] visible okay so that's the Topline [2290] revenue and then what I'm going to do is [2291] copy this again and then I'm going to go [2294] over [2295] here and then I'm going to do the same [2298] thing but instead of Revenue what I'm [2299] curious about now is Cash collected [2301] right so I'm going to go to cash [2303] collected I'm going to go to sum again [2306] look looks good [2310] awesome and then this doesn't look super [2313] pretty so what I would like to do is [2316] just to make this look a little [2319] hotter looks like the way that these [2322] guys are doing is they have like some [2323] overlays going on so I'm just going to [2324] move this down because I I I am going to [2326] use this uh in a [2330] moment and then I'm going to stretch [2333] these [2334] out so that we can see the absolute [2336] solute [2337] figures and then underneath I'm going to [2339] do like percentage figures so if you [2341] just dra uh select all of them and then [2343] drag it you're able to make them a [2345] little bit wider and you'll see that [2347] these aren't all at the same Heights [2349] either it looks like the revenue is just [2350] a tiny bit higher so I'm going to move [2351] that down I think it's going to [2358] no there you go should be good and then [2360] I'm gonna try and move that down just a [2362] tin a bit looks like proposal scent is a [2364] little bit out of whack so there we go [2366] okay so now all these are on the same [2368] level which is nice um just nice [2371] OCD uh it's nice to have OCD it is not [2375] it's nice to just sort of make them all [2376] line up and then what I'm going to call [2377] this is just for Simplicity I'll call [2380] this absolute then I wonder if I make [2382] this longer if I [2384] can yeah there you go that looks nice [2386] we'll call this absolute [2388] metrics and then I'm just going to copy [2390] this whole thing paste this down [2394] here and then I'm going to [2399] do you can set this up however you want [2402] I'm just going to call this like rate [2405] uh let's do percentage [2408] metrics I remember earlier how I said [2410] that we wanted to grab um like [2413] conversion rates and stuff like that and [2414] so I want to get two conversion rates [2416] specifically I want to get the number of [2417] meetings book or the number of proposals [2419] sent the number of meetings booked and [2421] then oh I just realized that the [2422] proposal scent went down to zero I [2424] wonder why Why did the proposal sent go [2427] zero looks like the date is March 2nd to [2429] March the 8th so maybe the proposal sent [2430] date was outside of that yeah it's March [2433] the 9th e okay that makes [2435] sense um because the date range [2437] dimmension field is set here on all of [2440] these um on all of these metric [2442] basically whatever date is selected up [2444] here is going to be the date that's [2445] selected everywhere else so uh we're [2448] just following the date range Dimension [2450] basically now we can manually change [2452] this I don't want this to be last seven [2454] days unfortunately it looks like this is [2456] a little laggy so I'm GNA give this a [2459] second uh for hypothetical I just want [2462] to do like maybe 25th of February up to [2464] 31st of March that should allow us to [2466] get all of the uh all the data you'll [2468] see that it's taking a second to update [2470] but it actually just went through and [2471] updated the revenue and the cash [2473] collected Fields uh to me they aren't [2474] like dollar figures which I'll add in a [2476] sec uh but I'm just going to do this [2477] percent metrics first okay so we have [2480] the absolute metrics which is presumably [2481] going to be the most important thing for [2483] people but then we also want to see some [2484] percent metrics so we want to see what [2486] the conversion rate is between the [2487] number of proposals sent and then the [2489] total number of meetings booked we'll [2490] divide the two and then we can either [2492] multiply it by 100 or we can use [2493] percentage format that'll just show us [2495] what the uh what like the successful [2497] meeting rate is um and then the deals [2500] closed to proposal sent that'll show us [2501] what the conversion rate is and then [2503] those are probably the two most [2504] important metrics now there are many [2506] different ways to do this in looker [2507] Studio as I mentioned I'm not really an [2508] expert um I know how to set up the back [2510] end of all of this stuff which is I [2512] think why my services are uh considered [2514] as valuable as they are but there are [2516] two different ways to do this or three [2518] different ways to do this and I'm just [2519] going to use the simplest one the one [2520] that works for me and the simplest one [2522] that I found is I basically just select [2524] these two [2525] charts then I rightclick and then I say [2528] blend [2529] data and then this creates a third chart [2532] which I now have and I think if you [2535] select it properly then you just [2537] automatically get the ratio between the [2539] two which is what I'm interested in but [2541] if you Mouse over on the right hand side [2542] under setup you'll see the title [2543] proposal sent divided by meetings book [2545] you can also click into the [2546] and then you'll see that there's [2547] actually a formula was created where it [2549] sums up all of the proposals that were [2550] sent so the number of proposals sent and [2552] then it sums up the number of meeting [2554] boken just divides the two um so that's [2556] the that's the metric that I'm curious [2557] about um the title is a little bit too [2559] long for me so I'm just going to go back [2561] and I'll call this [2564] um let's just do this at [2569] like proposal to meeting [2574] percentage and then I'm going to click [2577] apply and because all I did is change [2579] the title we should have that there okay [2581] great and now the next uh metric that [2583] I'm interested in is the percentage [2584] deals closed to the number of proposal [2586] sent so I'm going to do the same thing [2587] I'm going to click on deals closed right [2588] click on proposal sent and then go down [2590] over to blend data it's going to create [2592] a summary field in the [2593] middle and should be the same thing as [2596] before yeah and now that I have my [2599] metrics I'm just going to delete all of [2600] these because I'm not [2603] really oh actually you know what [2607] I think I can make some more yeah why [2609] don't we get [2612] like value of a proposal too that would [2615] be interesting okay great I'm not [2616] actually going to delete all these I'm [2617] going to create a few more summary [2618] metrics so um you know what I want to [2620] get I want to get the value of a meeting [2623] this is an important metric to get so [2625] basically uh let's pretend that we made [2627] $10,000 in Revenue off of our one deal [2628] closed our one deal Clos came from one [2630] proposal sent which came from three [2631] meetings you can actually assign a value [2633] to each of these actions so that you can [2635] plot [2636] how much time energy and money you [2638] should be willing to spend on people and [2640] so if we're willing to spend or if we [2642] make [2643] $10,000 how many deals did it take us to [2645] make that one how many proposals did it [2647] take us to make that one how many [2648] meetings did it take us to make that [2650] three so 10,000 divided by 3 means the [2652] value of every meeting to us at the time [2654] of this date range is [2657] $3,333 so we should actually be able to [2659] do that that would be pretty cool to do [2660] so I'm just going to select revenue and [2661] then meetings [2662] booked I'm going to click blend data and [2664] we should just get I think we're going [2666] to get that or maybe we'll get a [2667] percentage I don't know yeah we're going [2668] to get a percentage um so now we have [2670] Revenue to meetings booked so I'm going [2671] to go over here and then this isn't [2673] actually going to be a percent it's [2675] going to be actually it's going to be [2676] currency so why don't we just go down [2677] and do currency it's going to be US [2679] dollar so I'm going to scroll down here [2681] and it should just have a dollar sign [2684] now um this looks way too big though [2687] maybe I need to apply the change first [2688] before it converts yeah there you go and [2690] then we're going to say value of [2694] meeting [2699] or let's just say meeting [2703] value and then instead of percentage [2705] metrics we're going to just call this [2706] relative [2707] metrics that should be [2716] clear there you go that looks nicer um [2720] and then why don't we also get the value [2722] of a proposal too that'll be uh that'll [2724] be valuable so we're going to [2726] take the revenue first and then the [2729] proposal sent second and then we're [2730] going to right click and go down to [2731] blend data so going to create another [2733] one here and I'm going to scroll that [2737] down change it from a million percent to [2742] dollar dollar bills y'all go to US [2745] dollar here and then I'm just going to [2747] call this proposal [2753] value and then I'm going to add a bunch [2754] of data here just so you guys can see [2756] what this looks like when it looks like [2758] nice and it's all touched up and we're [2760] actually using it in [2762] reality [2764] cool we don't need these anymore so I'm [2767] just going [2768] to exit out of [2771] that I'm going to move these over [2774] here these should line up reasonably [2777] well yeah okay looks like they line up [2780] and then I'm going to [2782] do proposal value will be [2784] second [2786] and then meeting value will be [2791] first I don't think I can I do not seem [2794] to be able to make it line up which is [2796] sort of annoying [2799] but there you go I think that's good I [2802] don't know this looks much later than me [2805] but I need to change his title maybe [2806] that's why uh instead of deals closed to [2809] proposal sent we'll say [2814] proposals uh proposal to meeting we'll [2817] go deal per [2823] proposal now this is just a format that [2825] I'm doing with this colon in between the [2828] two operators um I just find this the [2830] simplest sort of to [2832] conceptualize but I'll leave that at [2834] that and then I'm just going to change [2835] both of these formats to Dollars just so [2837] that they look uh [2839] pretty so got a currency here scroll [2842] down to US [2844] Dollars looks good to me [2846] and then we'll do the same thing for [2847] cash collected so [2850] here and then the data type is going to [2852] be currency we'll scroll down to US [2854] Dollars okay [2857] beautiful [2859] awesome [2861] um thinking if there are any other [2863] metrics that I might be able to pull out [2864] of my ass that would provide value I [2866] think that's it I think that's [2870] it yeah [2873] okay I'm just going to leave sort of an [2875] empty space here unfortunate but I think [2877] that this will imply that there is [2880] certainly some more valuable data that [2881] I'm sure we could [2886] add and just the fact that I'm using [2888] this Google analytics for report [2890] template uh makes this just a lot easier [2891] I think that this already looks [2893] reasonably nice uh I'm not much of like [2895] a dashboard designer um I prefer dark [2897] mode for everything to be honest I just [2898] copy the same dark mode template but I [2900] think this actually looks pretty cool so [2901] I may be using this moving forward I'm [2903] just going to call this sales Das [2907] board and then where it says default [2909] data click to select Google analytics [2911] I'm going to delete that because I don't [2913] actually need [2914] this now we have a bunch of chart [2917] metrics or scorecards as they're called [2919] but we don't have like a way to [2920] visualize how our sales progresses over [2922] time and I would say that's really the [2923] only thing missing from this dashboard [2924] before we can just put a pin on it um [2926] and you know like after this video I'll [2928] probably go in and I'll add a couple of [2930] additional bells and whistles and maybe [2933] um maybe I'll find a way to like break [2935] this down by salesperson uh what I'll [2937] probably do is because you can see the [2939] recipient [2941] on the yeah I'll be able to log the [2944] recipient or not the recipient the [2946] salesperson through the form that they [2949] create the proposal that they create to [2950] send out the client so I'll probably be [2952] able to break this down by person and [2953] I'll say person X produced this much in [2955] Revenue person y produced this much in [2957] Revenue uh and that starts that starts [2959] to get into like the cool parts of this [2960] where you can start tracking [2962] profitability and average cogs and start [2964] making higher decisions but yeah for now [2966] I'm just going to take this and I'm [2967] going to visualize this data so I'm [2969] going to select all of this and I'm [2971] going to put this right over here and [2974] you'll see right now it says too many [2975] rows do the number of rows the chart [2976] canop be Runner I'm just going to create [2977] my own so I'm going to click uh actually [2980] I'm going to copy the style so let me [2981] just move this down here first uh if you [2984] go down and add a chart you'll see there [2985] are a bunch of options here for bar [2986] charts time series charts you could do [2989] like vertical bar charts pie charts [2990] right I think what makes sense for us [2993] what we're going to do is we're going to [2995] add a contracted Revenue um time series [2998] chart so we're going to head over to add [3000] a chart and then go down to time series [3002] give that a quick click and then that [3004] will show us sort of like the rise and [3006] the fall and revenues and stuff like [3008] that over time um which is quite [3010] valuable I've tried doing this before [3012] with a bunch of different types of [3013] charts it doesn't really seem to to work [3016] um because what's important is you want [3017] to grab like the days um so you want to [3019] be able to see the xais with like every [3022] single day of relevance and I think you [3024] can select whether you want this to be [3025] days or weeks or months but days uh days [3028] is fine for our [3029] purposes okay now obviously this isn't [3031] super informative right now because we [3032] only have one transaction with Revenue [3035] um so what I'd like to do is I'd like to [3038] first I'm just going to copy this I'm [3040] going to [3041] paste uh special and then paste style [3044] only and just see if there's any [3046] difference yeah there is a difference I [3048] don't like that I was trying to borrow [3049] the style from the previous chart but [3051] doesn't actually look very [3054] good so I'm just going to grab this [3057] whole thing now move it up a little [3061] bit just a tiny [3065] bit and go up to maybe a little [3071] further just because I noticed that [3073] there's like a disparity between the uh [3075] the line Heights Here There You Go that [3076] looks good and then I'm going to go into [3079] our dashboard now actually just add a [3080] bunch of like fake data just so we can [3081] see this [3083] um a little bit more granularity I would [3085] say so let me go over here to meetings [3088] booked and then I'm just going to copy [3091] and paste this a few [3093] times and then all I'm going to do is [3095] I'm going to change the [3098] date and I think if this is like [3101] rendering datetime format properly if I [3102] do this no it's not rendering datetime [3105] format here so I need to do let's do [3107] like 11 we'll do like 15 we'll do like [3112] 18 I'll do 21 I'll do [3116] 25 let's do [3118] 26 27 and then we'll do 29 so now I have [3123] a bunch of meetings booked let's add a [3125] bunch of [3126] proposals oops we do not want to change [3128] our [3130] header so I'm going to say that this one [3133] was on the 11th this one was on the 14th [3137] this one was on the 15th this one was on [3140] the 19th this one was on the 21st I'm [3143] not going to worry about changing the [3144] emails or whatever just cuz we're not [3145] tracking that we're only curious or the [3147] only thing that's actually relevant for [3149] us is the record [3150] count and then let me actually just make [3153] sure that we have fewer deals closed [3155] than proposals because you usually don't [3156] sign more deals than you do proposals uh [3158] that should be good uh we'll say we [3160] signed one on the 7th and we signed one [3163] on the [3164] 10th next payment came in on the 11th we [3168] signed one on the 13th and the next [3169] payment came in on the [3171] 17th and then we're just going to change [3173] these figures so maybe it's four 4,000 [3176] was 2,000 cash collected and then 2,000 [3179] and then here might be [3182] 6,500 we collected uh let's do like a [3185] staggered payment schedule for this [3188] one say we collected that [3191] much and then on the 18th we collected [3194] randomly the other [3197] 1500 yeah that looks good okay great so [3200] now I think we actually have a fair [3201] amount of data like we'll see we have [3203] three Deals closed here we have what [3204] looks like five proposals sent six [3206] proposals sent we have a bunch of [3208] different cash collected rows here not [3209] all of them line up perfectly uh so that [3211] should be good I'm going to call [3213] this client [3217] X yeah Licor studio is pretty laggy [3219] which is the unfortunate part but uh [3221] client X [3223] dashboard we'll do sales [3225] dashboard then we'll do [3228] example guess it just deleted [3231] everything client X sales dashboard exam [3235] Le there we [3239] go okay great so that's what our [3242] dashboards looking like right now and [3243] I'm going to go to the right hand side [3244] here click refresh data uh this can take [3247] a fair amount of time if you have a lot [3248] of data coming in so just be wary of [3251] that and there we go yeah we have our [3253] meetings book that we're updated [3254] proposal sent deals closed Revenue cash [3256] collected in the period proposal to [3257] meeting percentage 50% pretty good deal [3259] to proposal 50% average meeting value [3262] $178 average proposal value $ 3,47 [3265] this makes sense twice as many proposals [3267] sent as deals closed and then twice as [3270] many meetings booked as proposals sent [3272] so these just change by Factor two uh it [3274] looks like the conversion rates are 50% [3276] which is pretty good realistically in [3277] practice your proposal to meeting booked [3279] percentage is probably going to be [3281] somewhere around there if you're good [3282] your deal to proposal percentage might [3283] be like 20 30% maybe 15 20% for really [3287] high ticket service but yeah uh and then [3290] now that we have this trend or now that [3293] we have this contracted Revenue thing [3295] thing we can like we have a couple of [3297] different options here the way that we [3298] want to show this we could do like an [3300] accumulation I think so we could show [3302] how it grows over time we could do a [3303] running [3304] calculation oops I didn't want running [3306] Delta I wanted running [3310] sum which should just add it up over [3312] time so we could see the [3313] growth no that did not add it up over [3316] time so we could see the [3318] growth [3322] um might be in data type number [3325] yeah first of all let's change this to [3328] currency so let's go down to US [3334] dollar and then weird how the running [3337] sum was different than this [3339] huh [3343] odd I think we can change this if we go [3345] down to style um oh cumulative there we [3348] go yeah yeah yeah uh and then we don't [3351] want running sum my bet so we want to go [3352] back here change running sum for running [3355] some just to none and then now we'll get [3358] like a cumulative Revenue growth graph [3360] over [3361] time and then we also want uh what to do [3366] with zeros so missing data so if there [3368] isn't any data on that it just says go [3371] line to [3372] zero um we could linearly interpretate [3374] the data that's not really 100% accurate [3377] we [3381] could we could smooth it looks like so [3384] we could make it a little B prettier [3385] that way um keep in mind this isn't [3387] accurate if you do it that way as well [3389] because you see technically this is [3390] saying 14,000 this is lower than 14,000 [3392] still says 14,000 so maybe I wouldn't [3395] smooth [3396] it but yeah I'd probably just go line to [3398] zero that that's fine to [3400] me just kind of wish that we could [3403] see the data down here oh you know we [3406] can probably do this by adding like a [3408] little check mark or something I think [3409] there's a way to do [3410] that let me look for this show points I [3413] think show Ste lines that's probably [3417] it uh no that's not [3427] it okay anyway I clearly don't know [3430] enough about the Styles here for this to [3432] be meaningful um but is what it is you [3434] can add as much you can mark this up or [3436] dress this up as much as you like um [3439] yeah hopefully this is actually [3441] educational indicative that you do not [3442] need to be a looker Studio expert in [3445] order to make money off it uh you know [3447] you can just spend more time figuring [3448] the stuff out on your own your value [3450] here isn't really your ability to like [3451] mock up a pretty looking dashboard it's [3453] just your ability to like take the data [3455] source set up a bunch of infrastructure [3457] to like funnel that into a dashboard or [3459] something okay in make.com and then to [3462] use that to like pump this to some [3463] visualization if you know a designer on [3465] their team wants to mock this up make [3466] this look a little better than than they [3468] obviously could [3470] um yeah you know and we didn't really [3472] have too much sales history here so I [3473] think it starts at Mar just a [3475] second so let me just set this to my [3478] specific date range and this will [3479] probably be [3480] better I think we'll start at March the [3483] 3D and then we'll go until March the [3484] 18th let's do [3487] that if this date picker ever loads and [3490] that is the real question oh that's [3493] pretty okay well I guess we're going to [3495] have to refresh that [3502] puppy yeah this is only really going to [3504] happen when you you are [3506] recording um with abs which is [3508] notoriously computationally expensive [3510] when you have your own camera but [3512] whatever okay let's start at the second [3514] then so we can see the increase in from [3516] zero until where we are now and so okay [3518] great you see that on March 2nd [3520] contractor Revenue was zero and then it [3521] was $10,000 and then March 9th to 10th [3523] it grew another 4,000 and then March [3525] 12th to 13th grew another [3527] 6,500 and so this is sort of like a a [3529] growth [3531] line so I'm going to go over here to [3534] this great [3536] growth make it a little bit [3538] wider zoom out just a [3542] Ted just so you could see everything of [3544] interest and then we can play around [3546] with Styles and stuff um there should be [3548] a way to edit the theme if you go to [3550] theme and layout I do actually kind of [3553] like this theme it looks pretty clean to [3555] me but let's scw around with [3556] constellation oo that's spicy yeah [3559] that's not bad at [3560] all maybe we could do [3562] Insight Insight looks the same [3565] ocean oh it's just changing the colors [3567] that's lame Lagoon you know what I like [3569] Lagoon you'll see how the title here [3572] clearly has a white background so I need [3577] to select this [3578] color [3580] background is this which is [3583] secondary so I think we can just jump in [3586] here and then change the background to [3587] our secondary [3589] color no that's lame that looks dumb we [3593] need to change this to a darker color I [3595] think that's our secondary maybe this is [3598] our primary oh yeah that's clean I love [3601] it little hack generally know because [3604] I've suffered through looker studio for [3605] long enough is if [3608] you um never mind I take back my hack [3613] there's a way that you can paste uh copy [3616] Styles and then paste the styles of text [3618] Fields but I think they have to be a [3620] little bit bigger because you have to be [3621] able to select the background not the [3624] text [3627] okay great this looks pretty good I'm uh [3629] pretty happy with [3636] this yeah what I'm going to do is I'm [3639] going to dive in here afterwards and [3640] then do a bunch of uh bells and whistles [3642] sorts of fields so um I think revenue [3646] and cash collector are probably more [3647] important than the rest of these so I'll [3649] probably switch them arounds that [3650] revenue is the beginning and then the [3651] rest of these are sort of at the end uh [3654] yeah I mean that sounds pretty important [3655] to me right like I'm mostly interested [3658] in how much money my money made how much [3659] money my money made I'm interested in [3661] that too but I'm mostly interested in [3662] how much money my business made more so [3664] than I am the meetings B proposal center [3665] deals closed um I'll probably jump in [3668] there and maybe make it a little bit [3669] more visually interesting as well I'll [3671] add a couple [3673] of additional [3675] Fields like this one's Revenue growth it [3679] might be worthy to have a second one [3682] here if I just paste this in [3685] and then call [3687] this try and line this up [3690] exactly make this a little bit uh a [3694] little bit bigger and a little bit [3695] taller here and then call this like cash [3697] growth or something just so you could [3703] see how that's growing over [3706] time which I think is important and then [3709] if I just go down here and then I just [3710] change this contracted Revenue over to [3713] cash collected [3715] then uh you see how the the the pattern [3717] is a little bit different uh because [3719] Revenue only counts when the transaction [3721] when the primary transaction occurs it [3723] tends to be pretty stepwise whereas cash [3725] collected typically you drip that out a [3726] little bit more over time so you see [3727] that there are more transactions here [3729] the line's a little bit smoother uh [3730] there probably some other insights that [3731] can be taken away from this as well but [3733] I'm going to leave it there uh you now [3735] have everything that you need to charge [3737] anywhere from I want to say $3,000 all [3739] the way up to maybe $10,000 or more I [3741] will say that the more um costly [3743] dashboards the usually an expectation [3745] that you do significantly more than I [3746] did here I just wanted to make it simple [3748] and and you know palatable for you guys [3749] that are doing this for the first time [3751] but you could totally build this for [3753] probably about $3,000 I think that [3755] already has enough informational value [3757] to the client that they'd be able to [3758] make decisions using that data on a [3760] day-to-day basis that would net them way [3762] more than $3,000 over the course of the [3763] year keep in mind that most clients [3766] don't know how much money they made in [3768] the preceding month and to get that [3770] information would take them like 3 or 4 [3772] hours to compile books and stuff like [3773] that so so this sort of thing is [3775] outsized value um you know know your [3777] worth and know the value that you bring [3778] to an agency it's one of the big [3780] problems that they struggle with uh and [3781] coaching companies as well if you guys [3783] have any questions about anything that [3784] I've done so far just drop a comment [3786] down below more than happy to answer [3787] personally if you guys like the video [3789] please obviously like it if if you're a [3791] subscriber thank you very much and if [3792] you're not uh please subscribe and hit [3795] the notification button somebody told me [3797] that I should tell you that uh this is [3799] my first video after my first day off in [3802] quite a while the other day which was [3803] quite Lov [3804] uh but I really missed recording this [3807] sort of thing it's it's also almost [3808] become sort of like a psychological [3810] paliative to me so uh I'm going to be [3812] keeping this stuff up for the [3813] foreseeable future thanks so much for [3815] watching have a great rest of today

Video: https://www.youtube.com/watch?v=cWYnMhu3AFg
Title: Ask Me Anything @ Scalers.so: Systems, Starting Over, Agency Deep Dive
[0] hey everyone Nick here and I just did an [1] AMA for scalers doso this is Joe Davy's [4] private productization community that [6] teaches agency owners uh how to scale [8] their businesses I thought I would [9] record a video just going through [10] answers to a lot of those questions [11] because I know that these are things [13] that all of you have been asking me [14] about so I'm going to talk about things [16] that I've never covered before on camera [17] including uh some productivity systems [19] for output specifically on YouTube and [21] then with my own automation company uh I [24] talk about everything from like how I [25] personally got started in business my [27] first few steps to what I would do if I [29] were all of a sudden back at square one [31] again and I had no customers clients or [32] anything like that I'll also talk about [34] some very automation specific things as [36] well as email systems uh what I do if I [38] didn't know anything about crms where to [40] go to learn about email copyrighting and [41] all that sort of stuff so if that sounds [43] interesting to you then stay tuned and [45] let's get into [49] it okay so this is scalers it's Joe [52] davies's Community I love this wonderful [55] man look ugly mug he is uh one of the [58] most successful product agency owners on [60] planet earth guy runs Fat Joe which does [63] I think well over $10 million a year may [64] be mistaken on that don't hold me to it [66] uh but they're super super successful [68] they oper with really high margins and [70] so I've worked with Joe before and I [71] consider him a friend of mine and I [73] thought we'd sort of collab by me doing [74] an AMA the way that we structured it was [77] we put a post up for 24 hours just [79] because our time zones do not SN up uh [81] tons of people posted on it and asked me [82] a bunch of questions and I'm going to [84] both provide a textual response there [86] and then I'm just going to answer in the [87] video provide a lot more context and [88] that sort of thing so yeah this is where [90] we're at right now I am getting a couple [92] of messages here so if uh I don't know [95] you hear weird noises or whatever I just [96] turn down my volume hopefully that'll [97] fix it uh but just uh just be aware of [100] that so I'm just going to start at the [101] top at what I consider the most [102] important question and then work my way [104] down the way that I've set this up is [106] I'm now using clickup to manage all of [107] my uh videos and I've sort of produced a [109] Content calendar so we're getting very [111] systematic here and uh I've actually [114] written down the question and the answer [115] the question below so the first and [117] probably the most important question in [118] my humble opinion that a lot of people [119] people are probably wondering is hey [121] Nick you seem to have a relatively high [122] output what's your system for getting [124] things done and I hope I say that humbly [126] um but I did not used to get probably [129] like a tenth of what I get done now [130] until I learned what I'd consider to be [133] the single most important thing that any [134] young entrepreneur or business owner can [136] learn and that's the difference between [138] Effectiveness and efficiency so when I [140] first started in business the most [141] important thing to me was to do the task [144] that I was working on as quickly and as [145] effortlessly as possible I just cared [148] about okay I got a task in my queue I'm [149] just to figure out the simplest and [151] easiest and quickest way to get it done [152] and that was great in terms of my [155] ability to get a certain number of tasks [157] done but I found that I was never really [158] moving the lever I was never really [160] moving the various aspects of my life [162] forward that I wanted to move forward so [164] um you know my career my Revenue my [166] business my relationships all those [167] things were sort of stagnating I was [169] really good at them for sure uh but they [170] were never actually really moving [171] forward in any meaningful way and the [173] reason why is because though I was being [175] efficient I was not being effective if [177] efficiency is your ability to do one [179] task really well and very quickly then [181] Effectiveness is you taking a couple [182] steps back and asking yourself hey which [185] tasks should I be working on anyway [187] which ones are providing me the the ROI [189] in my life that I want do I even need to [191] do this task hell I might be really good [193] and really fast at doing this task I [195] might be super efficient but is that [196] even necessary to start with a lot of [198] the time you'll find that those tasks [199] are not necessary the ones that you're [201] the most efficient at are usually ones [202] that you just should not be doing in the [204] first place and so it's actually the [206] task that you're you're usually very [207] inefficient at uh they usually move the [209] leader uh lever and most people ignore [212] them in favor of tasks that are easy and [214] and that they feel good doing so [215] Effectiveness over efficiency really [217] good Paradigm Shift especially if you [218] guys are early on in business um just [220] take a couple steps back and ask [221] yourself what you find valuable what you [222] find meaningful what you think will [224] really produce like an outsized Roi in [225] your life um and that's you know [227] personally the the number one most [228] important thing in my life for getting [230] things done another system that I use [233] and I've written about this a little bit [234] on my blog [235] recently is uh minimization of friction [239] it's sort of Paradigm and I'm not like [241] inventing this this has definitely been [242] written and talked about before but I'm [244] using it now and it seems to be [245] providing a very disproportionate RI of [248] the time I spend basically instead of me [250] focusing on working really hard I focus [252] on lifestyle design and ways to uh build [254] systems in my life that make it just [256] easy to do things that produce money or [259] impact or relationship value or or [261] anything like uh of the sort and so a [263] quick example of that is uh for instance [267] the reason my YouTube outputs so high a [268] lot of people would ask me hey man how [269] are you recording ing a video every day [270] the reason why I'm able to record a [272] video every day is because it's not [273] actually that much extra work the stuff [275] that I record is basically 99% of the [277] time just that I'd be doing anyway [280] and it's more just documentation and [282] then there's a little maybe 10% or 20% [284] added time just in terms of my [286] explanations and me slowing things down [287] to make sure that they're understandable [289] and that sort of thing but the overhead [291] is nowhere near as much as I think most [293] people are considering like the way that [295] I built out the systems to record the [296] YouTube videos if you watched my [297] previous video on how I grew to like [299] like 4K subs or something in uh in less [301] than 25 days I believe um you know my [305] recording setup is super simple all I do [306] is I just click a button and then I [307] start talking don't really have to worry [309] about editing or crazy lighting hinks or [312] anything like that it's just like a [313] oneclick on sort of deal I don't worry [315] too much about um the way that I SEO [318] optimize like I don't worry about any of [320] that stuff because to me the highest [322] lever task if we're thinking from an [323] Effectiveness perspective not an [325] efficiency perspective the highest lever [326] that I can pull or the biggest lever [328] that I can pull is just producing the [330] content in the first place and so the [332] way that I see it is I want to run [333] really far I don't really want want to [335] run super fast again Effectiveness over [338] efficiency um so I just build like my [340] lifestyle in such a way that it's easy [341] to do things like produce content [343] without me necessarily um spending a lot [346] of my own time energy or effort on it [347] and that's actually the reason why I [349] started uh writing recently because I [351] actually do write every day I Journal [352] usually most days uh well maybe not as [356] not as much as I would like recently but [357] I Journal most days and what I've [359] decided to do is just post that journal [360] online uh because if I'm doing work [363] anyway on documenting my thoughts and if [365] my thoughts if I personally think that [367] my thoughts are valuable enough that [368] other people would probably find Value [369] in them uh I might as well just post [371] them online kill two birds with one [372] stone and then just get a bunch of [373] content out right so yeah um I have a [377] lot of rationale here on my blog and if [379] you guys are interested I'm considering [380] just making this a newsletter again and [382] actually like posting stuff out in email [384] but uh that's that's my thought process [386] there additionally um I'm minimizing [388] friction with regard to content [390] consumption so whether you know we're [392] talking Instagram or YouTube or Netflix [394] or Tik Tok I think it's unrealistic [396] nowadays considering that the content [398] landscape we all live in is so [399] weaponized it's unrealistic nowadays to [402] not really consume content you can try [404] and you can try and live as like a [405] monastic order monk or something shave [409] your head and wear cool fancy robes and [411] then not watch YouTube ever but it [413] doesn't really seem very reasonable to [415] me given how it's basically our Outlet [416] into like World culture and it's very [419] productive potentially like it's just [420] engaging and it's fun so what I've done [423] instead is I've focused on consciously [424] designing the content that I consume to [426] just be as high value as possible I [428] follow a bunch of what I would consider [430] really high Roi crators and the way that [432] I see the shift in I guess socializing [437] is now we're a lot more parasocial and a [440] large portion of the way that we [441] socialize is just through social media [442] and stuff like that so um instead of the [444] old Doge where it's like you are the [447] five the average of The Five People You [449] spend time with it's now more like you [450] are the average of the 50 YouTube [452] creators or whatever that you subscribe [454] to so you have total control over the [456] top of that funnel off of changing those [458] YouTube subscribers and if you can [461] consciously design them to be people [462] that you're interested in and you look [464] up to and that are Your Role Models your [466] life will be a lot better so yeah both [467] of these are are minimization of [469] friction conscious lifestyle design sort [470] of things and then the last is uh [472] zooming out this is going to sound [474] pretty like hippie dippy and maybe not [476] everybody's going to agree with me but [477] uh the way that I see it is [478] realistically unless we nuclear vaporize [480] ourselves sometime the next like 10 or [482] 15 years the entire internet the ssds [486] the servers everything like that it's [488] going to be around for like the next [489] million years assuming that you know [491] Humanity lives that long people could be [494] listening to or getting value from the [496] stuff that you're producing right now in [498] the year [499] 2400 and so I think most people consider [503] the work that they do like a temporary [505] transient and fleeting thing but I think [507] about the work that I do is something [509] that will potentially be it's like a [511] statue that I'm building for hundreds or [513] thousands of years and there are some [515] moments when I feel pretty demotivated [517] I'm sort of in a slump when I think back [519] to that sort of all the just [521] gets Stripped Away and I'm like wait a [522] second the YouTube comment I'm leaving [525] or this video that I'm recording or the [526] AMA that I'm doing or whatever sure it [528] may be a lot of time and energy right [530] now might be taking a little bit more [531] out of your day than you anticipated but [532] this is something that people will [533] probably be watching for hundreds of [534] years realistically so frame the [538] expected value of that action in that [541] light and so yeah that's my zooming out [543] advice so hopefully that answers that [546] question uh I believe it was actually [548] Joe that asked me that question directly [549] which is quite nice the next question is [552] Nick if you were to start again from [553] scratch would you start your content [554] agency or would you start left click uh [556] the process optimization company this is [559] a good question I think the reason why I [561] started my content agency initially uh [563] was just because I had a very unfair [564] Advantage if you think about one second [567] copy.com you know it's a Content writing [568] business [569] and a lot of people now think that [570] content is should doable with AI and [572] that sort of thing well if you roll back [574] the clock like three years uh nobody [576] knew about Ai and there was very little [578] public awareness that AI could do any of [579] this stuff the only real people that [581] knew about AI were was me and you know [583] the company that I was running and so I [585] trained all of our writers to use [586] artificial intelligence which allowed us [588] to produce probably three or four times [589] as much for the same amount of money uh [591] we managed uh minimize turnaround time [594] significantly lower than most other [595] companies could this was a massive [597] freaking Advantage but it was only a [598] massive [599] advantage to us at the time right if you [601] were to start a Content company again [603] today we wouldn't really have those [605] advantages because now the Le the the [606] playing field is all level so in short I [609] would not start a Content agency today I [611] would absolutely start an automation [613] agency though and that's basically what [614] I what I did granted I'm sort of doing a [616] freelance outfit you know I work with [618] people from time to time but it's mostly [619] freelance but the way that I see it is [623] right now everyone knows about chat gbt [626] everyone's following Twitter or the news [628] on a because it's so relevant to their [630] lives but nobody really knows how to [632] implement that into your business and so [633] awareness of automation is really high [635] demand for automation is really high but [637] we're still at the early stages of [638] supply and the best and most consistent [640] way to get rich during a Gold Rush is [642] not selling the gold or or panning for [644] gold it's selling the shovels so that [646] people can go out and pan for gold [647] themselves and that's basically the [649] situation that we have here I'm selling [650] shovels I'm selling Automation Services [652] during the beginning of one of the [654] biggest gold rushes of all time so [656] that's that another great question [659] question that I received was hey Nick [660] how did you get started what was your [662] first few steps in business like I have [664] written at length about that over here [666] in this link which I'll include in the [668] description it's basically just a [669] biography about my life and where I'm [671] coming from and sort of my family [672] history and that sort of deal but just [674] to give you guys the real summarized [675] version the tldr is my family went [677] bankrupt when I was very young they were [679] immigrants from Eastern Europe and that [681] really like changed my relationship and [683] how I value money as I was about to [684] graduate uh I was initially on like a [686] medicine path because you know those IM [689] Grand parents and the hustle lifestyle [690] you got to be a doctor uh but as I was [692] about to graduate I sorted did the math [694] and I was like hey actually um I could [696] probably just start making money today [698] and if I'm good at what I do I could [699] probably make way more money today than [700] I'd be able to make in like 10 years [701] after I finish my doctor studies I [704] probably have less debt i' probably [705] enjoy my life more I just sort of did [706] some Roi and Medicine just didn't really [708] seem that worth it to me another Point [711] here that I'm going to make that like [712] 99% of people are probably going to [713] disagree with me on is that I considered [715] working like a 9o5 or like a corporate [718] style job whether it's medicine lawyer [719] or something else is really insecure is [722] lacking in job security and I do [724] fundamentally believe this uh I know [726] people think that running companies and [728] starting businesses and being an [729] entrepreneur is super risky and that's [731] way riskier than a stable 9 to-5 but I [733] see it in the exact opposite way if you [735] have 100% of all of your income coming [737] from One Source if that Source gets [738] wiped out tomorrow you're done you're [740] back to zero you have no security no [742] stability and really no life to speak of [744] instead if you run a business and you [746] have 100% of your income split between [749] 20 sources that's 5% each if any one of [751] those go out of business well now you're [753] at 95% of your income not 100% even in a [755] catastrophic uh economic event or maybe [757] AI coming and replacing large portions [759] of your industry you're probably at [760] least still fine to some degree and so I [762] firmly believe that and that was one of [764] the reasons uh that and you know my my [766] poor kind of scarcity relationship with [768] money it was one of the reasons why I [769] decided that I would start a business so [772] the way that that worked in practice is [773] immediately after I graduated and uh I [775] decided that I was not going to go into [776] medicine I started selling marketing [778] Services door to door with one of my [779] best friends and one of my business [780] partners at the time his name was Ginder [782] and this guy was just Whimsical he was [784] he was a magical salesman I've never [785] seen anything like it he would go out in [788] a dingy suit and convince a random [790] business owner of like a $10 million [792] year business to like book a meeting [794] with him to sell them $100 a month [795] Google ad services or something so [798] unbelievably unnecessary but they they [800] bought it up and they ate it up because [802] it was Charisma and because of his charm [804] and to me it was just the most magical [805] thing ever so I started going out with [807] him and uh he start dating no I started [809] going out with a door too and we ended [812] up wrapping an agency around it that was [814] like a marketing service at the time [815] called Pacific Creative Group and we [817] ended up scaling that to like 150k in a [820] year or something but because it was one [821] of the first real businesses I'd ever [823] run it was disproportionately valuable [825] uh we did end up splitting up we just [826] had some partner difficulties and [828] differences but after that I started an [830] event video uh videography business [832] which ended up scaling to about 10K a [833] month and then that's when covid-19 hit [836] and then if you're in the event business [838] and doing videography around an event [840] business you're not going to have a good [841] time during covid-19 so uh yeah our [844] business is basically mandated illegal [846] by the government which was pretty [847] unfortunate but from there I managed to [851] get put on a path of like programming uh [853] which sort of happens if you're just [854] like forced to stay at home for you know [856] 24 hours a day for several weeks your [858] mind starts wondering hm like I wonder [860] if this computer makes any sense [862] and then uh I started binging a YouTube [865] channel called traversy media which is [866] basically just like the best programming [869] Channel ever taught me everything I know [870] about like web development and some [872] simple stuff in hindsight but just the [874] way that it was explained was really [875] good I actually leverage a lot of what I [877] learned from him in terms of how to talk [878] to people how to explain people um [880] explain things to people in this channel [882] so if you're interested in productivity [884] and if you're interested in uh webdev uh [887] and if you like me then maybe check [888] traversity media out too um hopefully [890] this is at least a the smallest thank [893] you that I could give him anyway [894] eventually I started freelancing and [896] then from freelancing I learned a lot [898] more about AI and then I fell down a [900] massive Rabbit Hole of text generation [901] gpt2 was just coming out at the time or [904] it was just gaining popularity at the [905] time for misinformation and all that [907] stuff and it was just starting to cover [908] the four about how these Technologies [910] might actually be pretty devastating [911] politically and then I was just like so [913] hooked I was like man you can like write [915] stuff with this this is insane so my [918] interests at the time were freelancing [920] and then text generation and so I think [921] you can see how the intersection of both [923] was me starting to do freelance writing [925] instead of freelance development uh just [926] using these text generation tools and [928] then that quickly took off and I ended [930] up wrapping an agency around that that [931] ended up being my content agency one [933] second a copy um which you know we we [935] were able to scale pretty quickly so [937] yeah that's that another question I [940] received is Nick if you had to start [941] over today what nure industry would you [943] pick and how would you get your first [945] couple of clients this is a fantastic [946] question I sort of answered it before so [948] I'm not going to beat that to death but [950] I would definitely do automation uh [951] selling shovels during a gold rush man [953] everybody wants a on their business [954] nobody knows how to do it except for me [957] my road map to the first client uh I've [959] talked about this before in a video but [961] essentially I would start by joining an [964] agency community so I would Google like [966] agency [967] communities well maybe not that maybe I [970] do like marketing agency [972] community and then I just find like a [974] big list of marketing communities uh and [976] then I you know join as many of the free [977] ones as you can I go on Facebook and [979] join those too I join communities like [981] scalers doso right which I think is [983] currently free um and I just you know [986] get as involved in as many agency [988] community as possible because presumably [989] those are the people I'm going to be [990] selling Automation Services to and then [992] I just post very consistently every day [994] uh or two for maybe a week or two and I [997] just provide as much value as I can [998] solving specific problems if you don't [999] know what the problems that agency [1000] owners suffer from are then just read um [1004] just watch my Channel watch a couple of [1005] other channels on the subject and I'm [1007] sure you'll know enough to at least [1008] impress somebody some percentage of [1010] those people that uh respond to you will [1014] be down for a call so after you DM them [1016] and are like hey I'd love to chat about [1017] this with you a little bit more in [1018] detail some per of those people say yes [1020] and then uh when you are on the call [1023] show them what they need to do in order [1024] to achieve the thing that they want to [1025] achieve and some percent of those people [1027] will say hey I want to work with you and [1029] then of the people that say that hey I [1031] want to work with you um send them a [1033] proposal send them a a list of prices [1035] that you offer that sort of thing and [1036] some percent of those people say yes to [1037] that so it's really just like a volume [1039] in volume out thing um if I already get [1041] my first customer I could probably do it [1042] within a few days realistically but I [1044] think maybe a week or two is more more [1046] feasible for most people that don't have [1047] business um uh like an understanding of [1050] how to do business communication that [1051] sort of thing any who hope that helps [1053] and I really appreciate it another [1056] question is Nick your output is [1057] phenomenal huh you're going to make me [1058] cry how many hours a week do you work I [1061] actually have a time tracker that can [1063] answer this question exactly it's called [1065] rise uh rise basically just does all my [1068] time tracking for me it's super crazy [1070] invasive and it watches where my mouse [1072] goes the various URLs that I'm on and [1074] that sort of thing uh no I'm just [1075] kidding you give it all the permissions [1076] that it needs in order to do it and then [1078] you kind of kind of take it from there [1080] um but he asked me how many hours a week [1082] do I work so yeah it looks like I didn't [1086] track on Tuesday which is weird so maybe [1088] I just didn't uh I don't think I turned [1090] it on uh but anyway I'm just going to [1093] take the average so average time work [1094] per day seems to be about 7 hours and 55 [1096] minutes right now um that's different [1099] from what I wrote I wonder why that [1101] difference is [1103] uh yeah I'm not entirely sure maybe it's [1105] because I counted Tuesday before now I'm [1107] not counting Tuesday I I don't know but [1108] any who um on average if we just [1110] multiply 7 hours in 55 [1113] minutes uh what's 755 [1116] minutes I don't know it's like [1118] 7.875 or something and we multiply that [1120] by six which is usually how many uh days [1122] a week I work then that's 47.25 hours uh [1125] this is a little bit higher than usual [1127] just because I'm also now responding to [1129] YouTube comments doing a couple things [1130] that I previously did not so [1131] realistically if I could be honest it's [1133] probably somewhere around 35 to 40 hours [1135] just like most people that are watching [1136] this video nothing special uh I believe [1139] that I am just capable of providing [1140] slightly more output because I focus on [1143] Effectiveness over efficiency uh and and [1145] lifestyle design so yeah that's that [1148] another great question is Nick what is [1150] your 10-year plan I want to become the [1152] most respected person in this industry I [1154] don't necessarily want to become the [1156] most popular and I feel like the two are [1157] often conflated just like Effectiveness [1159] and efficiency my goal is for people to [1162] like what I have to say to dig my [1164] authenticity and to get a lot of value [1166] out of what I'm telling them hopefully [1168] go out and change their lives I'll be [1170] honest I don't really have any more [1172] concrete Milestones than that at the [1174] moment plus with the YouTube channel [1176] growing faster than I thought my [1178] trajectory and how long I thought it [1179] would take to do the various things I [1180] want to do in my life have changed [1181] significantly so I'm not going to lay it [1183] out much more granular than this but uh [1185] if I could just give you the road map it [1187] would become number one be incredibly [1189] well respected number two join or start [1192] some company where this company has a [1194] significant impact on our vertical and [1197] then number three would be to achieve [1198] some type of Legacy or security or or [1201] safety for my family or that sort of [1203] thing so I'd say those are that's the [1206] rough bird's eye view if you were to [1207] zoom way out if I could crystallize it [1210] further and figure out where I want to [1212] take that I would but I found that this [1214] is one of those weird problems in life [1215] where the time that you spend trying to [1217] solve it is completely divorced from how [1219] effective you are at solving it I've [1221] like lied in my bed for 10 hours a day [1223] and just thought like what the hell do I [1224] want and it doesn't really seem like [1226] that actually gets me any closer to [1227] figureing out what I want want so I've [1228] elected just to start moving and then [1230] hopefully I'll figure that out as I go [1232] along so yeah I believe that is as [1235] realistic and answer that I can give [1238] you okay now we're starting to get into [1240] more agency specific questions and the [1242] first one here is Nick do you see [1243] potential in doing a productized [1245] automation service approach and if so [1247] how would you go out and do it my answer [1249] to that is absolutely freaking yes I've [1251] actually tried it before it's worked [1252] reasonably well and I do plan on doing [1254] it again at some point moving forward if [1256] you guys have heard of of design [1259] Joy or revolution design I [1264] think Revolution do design probably I [1268] think that's it I might be completely [1269] mistaken here yeah yeah if you if you [1272] look at these two businesses these are [1273] basically what are called design [1274] subscription businesses and they're just [1276] productized ways um or subscription [1278] based ways to grow agencies [1281] disproportionately quickly compared to [1283] what most people think is possible uh [1285] and so this is actually one of my uh [1286] friends from Twitter uh love love to [1289] death man this is such a such an [1290] incredible designer uh but probably the [1292] more well-known one is is Brad at design [1293] joy and the way that these companies [1295] work is you just pay like a flat Service [1298] uh every month and then you get like [1299] unlimited numbers of requests and very [1301] very profitable it's been written about [1302] a lot recently and it's just like taking [1304] off as we speak as a business model that [1306] said I'm definitely not doing it right [1308] now to be successful with a product eyes [1312] type of service you need to be against [1314] any sort of consulting or any sort of [1316] business model that pays you directly [1319] for your time at the moment I'm doing a [1321] ton of Consulting because I find it [1322] extremely interesting and I love getting [1324] into bed with companies and learning [1325] about how they operate especially in the [1327] various industries that I'm in it's just [1329] the most interesting thing that I've [1330] ever done I'm also attempting to pitch [1331] these people on much larger [1333] relationships so they'll usually start [1335] pretty small With Me 3 4K a month and [1337] then I will after working with them for [1339] a certain amount of time understand [1340] their business see their growth [1342] potential and figure hey I could [1343] probably help them Reach 10 times that [1345] in x amount of time um where I'll then [1348] propose like a percentage Revenue share [1349] or some type of equity and I find that [1351] that is really valuable as well um I'm [1353] in I'm interested in finding like a [1356] prizewinning racehorse and then helping [1358] train that racehorse to go even faster [1360] than it's going so yeah that's sort of [1362] what I'm doing but don't just pay [1363] attention to what I'm doing maybe I'm [1365] not the best example here if you want a [1367] better example of what productization [1368] might look like check out Fat Joe [1370] because Joe really has nailed [1372] productization now if I were to give you [1374] a road map because I believe strongly [1376] that any questions should have a 7 Point [1378] list as an answer uh here's exactly what [1380] I would do let's say you're selling [1382] automation systems I would ask myself to [1384] start hey man what systems do you have [1386] in make that are modular easily [1388] repackage and provide an outsized impact [1391] so if you watch all my videos up until [1393] now it'll probably be like the lead gen [1395] system that I've created the helper [1396] reporter at system that I've created [1397] these one-click CRM templates maybe I [1399] take one of those builds save it as a [1401] template make it a one-click thing or [1403] maybe some of the email systems that [1404] I've made I would find the systems that [1406] I would consider modular packageable and [1408] then I would just like make a list and [1410] these are now your e-commerce Shopify [1412] products you know these are your these [1413] are your your products that you can work [1415] with when you have them I would then [1417] make a list of every platform that you [1420] need to integrate to make that system [1421] work so we're using make.com here [1423] obviously make.com is the glue that [1424] holds systems together so what the hell [1426] are the systems right is it uh Gmail and [1428] then type form is it Panda do and then [1430] clickup right just make a list of all [1432] these once you have a list of these [1434] you'll have a list of platforms and [1435] you'll have a list of uh sorry you'll [1438] have a list of systems and then you'll [1439] have a list of platforms per each system [1441] now you have everything that you need to [1442] actually go up there and then sell this [1445] all you need to do is you need to set up [1446] a product on one of these like [1448] information product uh services so like [1451] gumroad is a really good example there's [1452] like another 10 that just aren't coming [1453] in mind right now but basically they let [1455] you set up these payment products where [1458] people click and then maybe a web hook [1460] gets fired and then you catch the web [1461] hook and deliver a product so maybe in [1464] practice this is on gumroad and what you [1466] do is on gumroad or on wherever you're [1467] selling your service you actually ask [1469] the client hey in order for this to work [1471] we need to integrate the platforms for [1472] you obviously so what's your email [1473] address and password to all these [1475] platforms some people probably aren't [1476] going to feel super comfortable with it [1478] or whatever you can get around that [1479] Comfort using password management [1481] platforms and maybe being a little bit [1482] more creative than I am now but I think [1484] even this is going to work if they like [1485] and respect you enough so that's [1487] probably what I do to start and then all [1489] you do is you build a flow that every [1491] time you get a new purchase you will [1492] export your scenario template as maybe a [1495] blueprint or something and then you'll [1498] pay a virtual assistant somebody that's [1500] trusted and obviously can be can be [1503] promised or that can promise you that [1505] they're not going to do anything with [1506] these credentials that maybe would be [1507] considered malicious to make sure they [1509] got data good data security practices [1511] and that sort of thing and then all I [1513] would do is is every time that happens [1515] add a new task to a project manager your [1517] virtual assistant takes that task goes [1519] in implements the system and then the [1521] costs for you would be incredible or [1524] sorry the emergence for you would be [1525] incredible if you sell one of these [1527] systems for maybe 1K the implementation [1529] time for your virtual assistant is [1530] probably going to take like 25 bucks he [1532] pay somebody like 10ish dollars an hour [1535] all they're doing is clicking through a [1536] bunch of authentication modals maybe [1537] takes them an hour or two generously uh [1539] you're P you're spending 25 bucks there [1541] then maybe you offer a standard two [1543] weeks of email support and you have [1544] another assistant or some some executive [1547] that manages this for you maybe that's [1549] like $75 and pay for like the 10 minutes [1552] they're solving this problem five [1553] minutes they're dealing with this [1554] question that sort of deal on a th000 [1557] system then you're [1558] uh your margins are like 90% and you're [1560] not really going to find better than 90% [1562] margins in basically any industry so I'd [1565] heavily consider uh looking into that [1567] sort of thing now this is sort of [1568] tempered by the fact that these [1569] platforms like gumroad are now offering [1571] or taking a much larger cut just because [1573] they realize their value but still [1575] whether it's 85% margin 90% margin still [1577] a pretty damn successful business am I [1579] right next question is what is the [1581] smartest and most impressive automation [1583] you have ever done and this is a great [1584] question because it allows me to clearly [1587] identify a difference in what some [1589] people consider useful other people [1591] consider [1593] impressive I think that the two are very [1595] different I think a smart system versus [1597] like an economically useful system [1599] completely different things my [1600] economically useful systems the ones [1602] that generate me the most money are [1603] usually like five modules in a row my [1605] most impressive or intelligent systems [1608] are usually like super crazy complicated [1610] and they make me $3 so definitely want [1614] you guys to know that the systems that [1615] make money are usually very simple but [1617] I'll just run you guys through a couple [1619] of them right now from a sheer [1621] complexity perspective it would probably [1623] be my red itology automation basically [1625] what I did was and I did this with a [1627] business partner who did a ton of the [1629] editing side of things so I can't take [1631] all the [1632] work but if you type Reddit ly right now [1634] you will find a bunch of pretty creepy [1636] ass videos and I don't really want to [1638] turn the volume up because I think it's [1639] going to kind of screw with the um [1641] recording that I have set up but [1642] basically what we have here is we have a [1644] system that would go on Reddit and then [1646] scrape Reddit for top performing posts [1648] on various subreddits usually askreddit [1650] AMA that sort of thing it would then [1651] calculate the ratio of the up vote to [1653] the to the down vote and then if it was [1656] above some threshold maybe like a five [1657] or a 6X or something I I don't know what [1659] we ended up using and if it was above [1661] some absolute magnitude of popularity [1663] then we would scrape every comment on [1664] that post we'd organize those based off [1667] popularity organize them into threads [1669] and then we would feed every comment to [1671] an artificial intelligence voice which [1672] at the time I think was either 11 Labs [1674] or play. HT one of the two big ones I [1676] think 11 labs has now sort of come out [1678] as as the number one and if we were to [1680] do it today I mean these voices sound [1682] like real humans right sound just like [1684] me talking to you um maybe I'm maybe I'm [1686] a robot uh anyway so then we would uh [1689] feed some of that information to uh [1692] Dolly I think or maybe was stable [1693] diffusion and then we would generate [1695] images and then that would be our [1696] thumbnail and then we would feed that [1698] into like the most complicated video [1699] editing API and then the end result [1701] which I'm not actually going to show [1702] right now because I just tried doing it [1704] and then I recorded about five minutes [1706] and then I realized I had to voice [1708] talking in the background which is [1709] really silly and stupid and I need to [1710] fix that uh but the end result was [1712] basically just like a voice over that [1714] would be like R askreddit what would you [1717] think is the most important blah blah [1719] blah blah and then every time a comment [1720] was posted we'd change the picture to [1723] the comment and then the comment would [1724] be like oh it's on blah blah blah blah [1726] or whatever the point I'm making is it [1728] was like a dialogue like a back and [1729] forth it was entirely a generative it's [1731] pretty cool so yeah that was the most [1733] like technically impressive probably and [1734] I can't take credit for the um editing p [1737] portion of that because my uh my [1739] business partner at the time was really [1740] brilliant he was working with a specific [1741] API and knew had to do it a lot better [1743] than I did but that was super cool and [1745] you can check that channel Out Below if [1746] you are interested the most economically [1749] useful which is probably what you and [1751] myself are significantly more interested [1753] in was The Proposal generator uh [1755] basically the way that it works is I [1756] will go and I will fill out a short [1758] two-minute proposal and the [1761] proposal um uh the proposal sorry I'll [1765] go and I'll fill out a twom minute uh uh [1767] type form and then on the typee form [1769] It'll ask a couple of quick questions [1770] just about who the client is what they [1772] want that sort of thing and then [1773] assuming that you know I fill that out [1775] correctly and everything like that [1777] before the end of the call I will [1778] usually like click enter and then have a [1781] beautiful customized high quality [1783] proposal sent to the client people love [1785] this so much and their responses vary [1787] from like dude this is crazy you're just [1788] copying and pasting something from [1790] somebody else there's no way you guys [1791] just made this that's nuts to how much [1793] money do you want and like what account [1795] should I send it to so obviously very [1797] iry very valuable and this is just like [1799] five or six modules in a row in a [1801] straight line nothing fancy anybody can [1802] do this with any level of skill what was [1805] really interesting about this just while [1806] I'm on the topic is that a lot of people [1807] wanted this exact same system for [1809] themselves uh and that led to a bunch of [1811] funny situations where I was then using [1812] a system to sell them on the exact same [1814] system and then some people loved it so [1816] much they offered to resell that system [1818] for me and then give me a cut so they [1819] were selling I sold them a system using [1821] a system which they would then sell that [1823] system to other people using that system [1826] super meta uh but yeah definitely the [1827] most economically useful made a fair [1829] amount of money on that okay Nick if you [1831] were the beginning of your journey into [1832] automation for business where would you [1834] start do you think somebody has zero [1835] knowledge about how crms work has a [1837] chance in this game and I'm really glad [1838] you asked me that because absolutely um [1842] I've answered this question here before [1843] initially so I'm just going to skip to [1845] the second part but yeah man if you have [1847] zero knowledge in crms it's not a big [1849] deal at all like the distance between [1851] having zero knowledge in crms and then [1853] being able to charge money for crms is [1854] like two weeks realistically it's not a [1856] big deal if you know how a Google sheet [1858] Works you're probably about 50% of the [1860] way there already all a CRM is it's like [1862] a very dressed up pretty Google sheet [1864] with some extra functionality for people [1866] that are less technically inclined [1867] usually so wouldn't worry about that at [1869] all um just sounds like more of a [1870] self-esteem thing um about your [1872] knowledge in the industry than than [1873] anything else the great part about 2024 [1876] man is that just you can learn anything [1877] you need in like two weeks and then be [1879] able to charge money for it unless [1881] you're doing like I don't know pipeline [1883] design like actual oil pipeline design [1886] uh anyway what I would do if I were in [1888] your shoes is I would recommend picking [1889] one platform to start and what I would [1891] do is I would pick clickup clickup is [1892] not sponsoring this video but they [1894] better damn sponsor it after after this [1897] um and what I do is I'd go to their help [1899] page and I'd read all the documentation [1900] all the guides and all that sort of [1902] stuff and what I do is I go to this uh [1904] wonderful woman called lelite process [1906] driven who I'm kind of scared to click [1908] this button because I think the audio is [1909] going to play whatever I'm doing it [1911] anyway don't talk Lea ah she talked [1914] anyway Leila is uh really really good at [1917] building out clickup based processes and [1920] she takes all of the templates and stuff [1922] that's inside of clickup natively and [1923] she just like adds so much context to [1925] them just makes them so much higher [1926] quality so I'd go in there I'd hit her [1928] up she's basically just like a worst [1930] version of me honestly no I'm kidding [1933] I'd go in there i' veraciously consume [1934] everything she's ever posted I'm sorry [1936] Lea and then obviously go to my channel [1938] as well when you're done consuming the [1940] process driven Queen and then uh at the [1942] end of that process I guarantee you [1944] you'll know more about clickup than 99% [1946] of people that are making money off it [1947] today so you'll be in a good spot for [1949] sure okay Nick want to have your [1951] insights what type of cold emails work [1952] well are there any templates available [1954] to get started with this I really like [1955] the emails used in your video tutorial [1957] so I am going to repeat a lot what I a [1960] lot of what I mentioned in the video [1961] tutorial but essentially you can use any [1963] formula you want for this like the Ida [1964] formula or I think the OE o formula I [1968] don't know there bunch of formulas for [1970] this stuff this is what works for me you [1971] always mention where you found them so [1973] hey man I found you on Apollo or hey man [1975] I was just like look looking at Google [1977] Maps images for pictures of my [1979] exboyfriend and you know your business [1982] front came up or something uh and I [1984] wanted to reach out number two is [1986] mention what you do for people like them [1988] so specifically say I build XYZ process [1992] for people like your business [1994] essentially or you know I generate leads [1997] for companies like X Y and Z then [1999] mention why they should care so say [2001] something really big dick if I could be [2003] frank and be like hey you know in 2024 I [2006] made X dollar for this company and I'm [2009] confident I can do the same for you and [2010] at the end just do some type of call to [2012] action was that all worth the call do [2014] you get do you guys find this [2015] interesting enough to sit down with me [2017] tomorrow at 8 AM for 34 minutes you know [2019] something like that so I would just do [2021] variations of that for templates I don't [2023] have templates available I would just [2026] yeah I would just copy and paste [2027] whatever I wrote initially in that [2028] previous video and that's probably more [2029] than enough to at least get you guys [2031] started I will give you some tone of [2033] voice tone of voice advice that I have [2035] not talked about up until now um I went [2037] back after recording that last video on [2039] emails which I think was like a week or [2040] two ago and I looked at my highest [2041] performing campaigns and then I looked [2042] at a couple of other accounts that I'm a [2044] part of where people have much higher [2045] performing campaigns and I found that [2047] there's a big similarity between all [2048] them and that's the tone of voice that's [2050] used high quality highi emails use a [2053] very specific tone of voice and I kind [2054] of want to call it like the CEO tone and [2057] that's where you're like a really busy [2058] CEO that just doesn't have time for [2060]  it's sort of like a yes or a no [2061] is this worth your time or is it not and [2064] probably the clearest example I can give [2066] you of that is it's just let's say you [2068] get an email and says I would like to [2069] see if I can help you with XYZ process [2070] if you just trim away everything except [2072] for literally the information that is [2073] relevant to like the the sentence and it [2076] doesn't even have to be grammatically [2077] correct anymore or missing a subject I [2079] would like to see if I can help you with [2080] XYZ process want to help with XYZ I mean [2083] like that is just what like a third of [2085] the length it uses like a third of the [2087] words and it delivers the exact same [2088] message um so yeah that tone of voice [2090] seems to work extremely powerfully for [2092] me and for a lot of other people and the [2094] way that I conceptualize it is sort of [2095] like a formula like [2098] impact is equal to the number of words [2101] divided by the no the impact of each [2104] word is divided by the number of words [2105] to get like the total impact basically [2107] so if you want to maximize the impact [2109] you need to minimize the number of [2111] words okay great Nick in these cold [2114] emails do you recommend adding an [2115] unsubscribed URL to the bottom of the [2117] email does using an unsubscribed link [2120] affect the deliverability of the emails [2121] absolutely it affects the deliverability [2123] of the emails and not in the way that [2124] you'd expect I would not recommend ever [2126] adding an unsubscribe link to your email [2128] unless you are considered a bulk sender [2130] by Gmail or Outlook or these other [2131] platforms I think a bulk sender is like [2134] a thousand or more emails a day coming [2135] from one workspace account um I don't [2138] know for sure a lot of people pretend [2140] like they know a lot about this and they [2141] don't because Gmail and Outlook and all [2145] the various like sending infrastructure [2147] throughout the [2148] internet you know they're only ever [2150] going to tell you what they want you to [2152] think in order to make their lives [2154] easier right so they're going to tell [2155] you that you have they have like bulk [2156] limits they can automatically detect [2158] when you're sending and you know if you [2159] send more than 500 a day then you need [2161] blah blah blah but nobody really knows [2163] and anybody trying to tell you that they [2164] know just doesn't I mean even I I don't [2166] know at least I'm admitting that I don't [2167] know uh But A good rule of thumb for me [2169] is I don't send more than 1K outbound [2172] emails a day per workspace um without [2175] adding some type of unsubscribe link and [2177] in practice I've never done that I've [2178] never hit more than 1K up on emails from [2180] a Google workspace account so it's just [2181] never really been a problem maybe I [2182] could scale even higher I don't know but [2184] uh I'm part of a bunch of communities [2185] where people do do this and yeah they [2187] say that that's generally Like A good [2188] rule of thumb so the reason why is [2191] because if you hadn't unsubscribed like [2192] it's just going to like crush your crush [2193] your results like nobody wants to deal [2195] well very few people want to deal [2197] with robots they much prefer to deal [2200] with people and the success of a high [2202] ticket email campaign basically hinders [2203] entirely on your ability to convince [2205] them that you're a real person in my [2207] opinion again there are multiple ways [2208] you could do this some people do do very [2210] clearly robotic campaigns but they like [2212] do funny stuff and they make it very [2213] meta and they have like gifts and [2215] and that works well for them but it does [2216] work well for me because I'm selling [2217] like high ticket stuff right so yeah [2220] that's that Nick how would you structure [2222] an email marketing agency that's such an [2224] interesting question how would you [2225] structure an email marketing agency [2227] including the client management the [2228] strategy the implementation the [2229] cooperating and the design through [2231] different stages the stages that it's [2233] lovely gentleman provided were five [2235] members 10 members 20 members more than [2237] happy to help I love stuff like this [2239] such a thought experiment I'm not going [2240] to answer uh what I do at different [2242] levels 5 10 20 just because I don't [2244] really think that that makes that big of [2245] a difference and my advice isn't going [2246] to change but I will say before I get [2249] into this disclaimer I haven't run an [2250] email marketing agency on my own so I [2252] want you to take with a grain of salt I [2253] have worked with a few and this is [2255] exactly what I would try if I were uh [2257] starting an email marketing agency [2259] tomorrow and I actually went out and I [2260] built out the clickup flow so what I'd [2263] start with here is I would first set up [2266] all of my project management click up [2268] obviously and by doing this you're going [2269] to have 90% of your work on your whole [2271] company for real I'd set up a space the [2273] space would first be called project [2274] management it look just like this high [2276] level space you click this button and [2277] then write project management below then [2279] every time I get a new client I would [2281] add a new folder and I'd Call It [2282] Whatever the client name is with in the [2284] folder I would have three lists one [2286] would be called strategy another would [2288] be called deliverables and the last [2290] would be called [2291] resources strategy is where when you're [2295] running an email marketing agency you [2296] usually have some type of recurring [2298] event so um you'll have like a weekly [2300] call with the client to confirm and ask [2302] how things went last week to cover some [2304] campaign statistics that sort of thing [2306] you usually have this um you can of [2308] course get by with like a weekly summary [2310] email or whatever but basically the [2311] reason why agencies love these weekly [2313] calls is because it gives them an [2313] opportunity to show the client that you [2316] are basically like doing a really good [2319] job and that you deserve more money and [2320] then you can upsell them really easily [2321] while building a relationship so that's [2324] not what I wanted to do so uh you know [2326] on your weekly call what you do is you [2328] have a a Str a strategist so you hire a [2331] strategist and the strategist is [2333] probably in-house and they're probably [2334] salaried and the expectation is hey if [2336] you're a strategist in my company you [2337] can handle 10 clients at a time [2339] something like that but anyway what [2341] happens is once a week they have that [2342] call and then the strategist goes [2344] through and then adds whatever Str [2347] strategic strategic information I'm [2349] Canadian whatever strategic information [2352] that they need in order to make this [2353] work so maybe they're like taking notes [2355] here or something like that they have [2356] like a weekly Note file I don't know you [2358] could do that you could have like a [2359] weekly Note file I guess um so maybe [2361] it'd be like uh Mar 7 to Mar 14th 2024 [2366] then you know maybe every week when you [2367] have that call uh you jump in here and [2369] then you add notes about the call right [2371] next what you do is at the end of that [2374] call the strategist's job is to go into [2377] the deliverables list and then create a [2379] bunch of deliverables to be assigned to [2381] contractors so you have a conversation [2383] with the client about X Y and Z client's [2385] like you know I want this I want this [2386] and you're like hey why don't we also do [2388] that you take those three points and you [2389] go down here and then you write like [2391] copy or creative upgrade for email [2394] campaign y or [2396] uh new copy for email campaign Z [2399] something like that and then you will [2401] assign it to a copywriter or a creative [2405] at your company that you are paying as a [2406] contractor and so what this means in [2408] practice is your organization chart [2410] looks like this you have a Founder up [2411] top and you can do this up until like [2412] one maybe even $2 million a year you [2414] have a Founder up a top underneath the [2416] founder are strategist strategists and [2418] then every strategist can handle let's [2420] say 10 clients so you know that you know [2423] if you're at nine clients should [2425] probably start looking at hiring a [2426] strategist pretty soon to take on you [2427] know the Overflow uh and then under [2429] every strategist you have all of the [2431] contractors they work with and uh you [2433] know they I I ideally your strategist [2435] would work with specific contractors so [2437] like every strategist would have a [2438] certain number of directs right this is [2440] going to minimize the bloat in your [2441] company because uh you're going to need [2443] you know for 10 clients paying I don't [2444] know $5,000 a month or whatever you need [2446] one strategist one founder and then [2447] maybe five contractors or something like [2449] the the economics of this work really [2451] really well anyway what you do is uh [2453] then obviously it's just like a a [2455] pipeline as the contractors do the work [2457] so I mean i' I'd make it much more [2459] complicated than this but I didn't want [2460] this to be an hourong section so have [2462] your columns whatever you want and then [2465] uh what you do is in the resources uh [2467] list or the resources doc I would like [2469] have a bunch of resources so I'd have [2471] like you know client Google drive or [2473] something and you could embed this as a [2475] Google drive right here and then just [2477] have other stuff maybe like their brand [2478] assets or whatever they need and then [2480] every week what I do is I would [2482] automatically generate a new Google [2484] drive folder uh with whatever the [2485] current dat is and then the date for one [2487] week in advance and then all that [2489] happens is anybody that is a contractor [2492] working on a task um just stores all of [2494] the files the Google Docs everything [2496] that they need inside of that Google [2497] Drive and it it's known that hey it's [2499] you know it's March the 7th that means I [2500] have to access the March 7th to the [2501] March 14th folder that's like your your [2504] sop the benefits of this is your [2507] contractors all have guest access with [2510] the way that this works and they can [2511] only see the deliverables list so you [2513] have very good data sing you don't need [2514] to worry about anybody ever taking [2515] anything running off on you uh it's [2518] extremely easy to manage because as the [2520] founder of this business you basically [2521] just manage one or one strategist per 10 [2524] clients and maybe you pay the strategist [2526] I don't know like 80k a year or [2527] something so you want somebody good but [2529] then you know they manage all the [2530] contracts they do everything else so [2531] it's insulating and then it's very [2533] scalable like if you consider let's just [2535] hypothetically say it's a 5k a month [2537] model so one strategist can have [2540] $50,000 uh you pay the strategist 80k a [2542] year uh what's 80 times or 80 divided by [2546] 12 am I right here 6,000 Yeah Yeah so [2549] basically you make 50k a month and then [2552] you pay I think 6,000 of that to your to [2554] your strategist and then maybe your cogs [2556] are like 30% so that's another 15,000 [2559] and then you're left with like 29,000 um [2561] not counting for software or other [2562] operational expenses that's damn good [2564] man you're making a ton of money and [2566] then because you're doing it through [2567] this project management thing like you [2568] just don't need to you don't need to [2569] host the projects anywhere else you [2571] don't need to worry everything is in [2572] clickup and Google Drive everything's [2573] 100% self-managed so yeah yeah man that [2576] is how I would do it and I'm extremely [2578] excited just showing you guys how that [2580] works it makes me really want to like [2582] start my own email marketing agency or [2583] something any uh Nick you mentioned how [2586] one of your videos it's worth it to put [2588] at least 10 or 15 hours of your time [2590] into learning cold email because cold [2591] email is such an invaluable skill today [2593] where would you go to learn about cold [2594] email tldr I would go to instantly [2597] accelerator which is app. instantly. [2600] apppp accelerator you see this once you [2602] log in don't know if this cost you money [2605] uh this may this used to just be on a [2607] bunch of like random Google Docs that [2608] the founder R just post it all over the [2610] Internet so I got my training back when [2613] it was free maybe but all you do is uh [2616] after you sign up for instantly you go [2617] to the bottom left hand corner instantly [2618] accelerator here and then just like [2619] thumb through every single thing in this [2621] course and this will teach you more [2623] about cold email than 99.9% of the world [2626] um I say this without a a hint of [2629] humility or Pride or anything like that [2632] um everything that you learn from me I [2634] probably at some point just learn from [2636] from These Guys these guys know [2637] everything about cold email and they're [2638] very very up to date with all of that [2640] knowledge so definitely check out the [2641] instantly accelerator you're going to be [2643] top one% of coold email senders easy [2645] maybe even top [2646] 0.1% another question Nick apart from [2648] the LinkedIn scraping method you [2650] mentioned in the video are there any [2651] other reliable sources to get high [2652] quality data what is your process for [2654] filtering and validating that data as [2656] well this is an awesome question if you [2658] are a business to business agency um the [2661] two most common sources and really the [2663] ones that just make the most logistic [2665] sense are LinkedIn and then to a much [2667] lesser extent Apollo a lot of people are [2669] using Apollo I'll be honest I'm pretty [2671] sure under the hood Apollo is just using [2672] LinkedIn and then they're just selling [2673] an Arbitrage uh but you know if you want [2676] a more managed service or something [2678] Apollo might be good for you um it does [2680] have a nice UI and you do get like [2681] higher quality data than you do if you [2683] try and do it all yourself which is nice [2684] but uh basically like what do you pay 99 [2687] per month uh for 2,000 export credits uh [2690] export credit is how you would like turn [2691] this into a CSV or something that's a [2693] fair amount man 2,000 a month for now [2695] $99 that's like I don't know 20 cents [2699] per person I think my math isn't very [2702] good don't hold me on that um but you [2705] can kind of contrast this with the [2706] LinkedIn method that I talk about in [2707] most of my videos if you scrape using [2710] LinkedIn and Phantom Buster and then use [2712] drop contact your monthly cost is [2716] probably $350 a month which is three and [2719] a half times this but then you can [2721] scrape probably 1,250 per day so 12250 [2725] per day * 30 is [2728] 37,500 so you're spending 30 for 37,500 [2732] leads you're spending let's just say 350 [2734] which is a cost of oh sorry 300 350 [2738] 37500 is a cost of like [2742] 0.0093 contrasted with [2744] 100 divided by 2,000 which is [2749] 0.05 so it's like five times more to use [2751] Apollo I I don't know my math just tells [2754] me that apoll uh link is a better choice [2756] for cost purposes but whatever now if [2759] you're not in B2B for whatever reason [2760] and somebody's you know looking for your [2762] help or maybe you want to start a [2763] business where you're not selling a B2B [2764] leads I would just go to an industry [2766] specific listing website if I'm doing [2768] real estate maybe it's red fin if I'm [2769] doing a video editing SAS or something [2772] well maybe I'm going on like a video [2775] editing directory and then I'm scraping [2777] all of the people on the video editing [2778] directory uh so I'd actually create like [2780] an industry specific scraper the volume [2783] of your leads are going to be a lot [2784] lower but I also want you to think about [2785] it as like the quality of every lead is [2786] going to go up that much more too [2788] because these people because you have to [2790] go through an extra step these people [2791] aren't really getting spammed with [2792] emails like most people on LinkedIn are [2794] at least like once a day uh so they're [2795] going to respond much differently to to [2797] how your LinkedIn leads would [2799] respond in terms of the filtering and [2801] validation step I'd recommend this [2802] process here um if you are getting your [2805] leads from LinkedIn or Apollo you don't [2807] really need to do any of this uh well [2809] you don't need to do any of the [2809] filtering because the leads are probably [2811] high quality enough as is I wouldn't [2813] filter it uh but what I would do is I [2814] would enrich the data and enrichment [2816] today means something different than it [2818] did like three or four years ago back in [2819] the day enrichment meant just like [2821] getting the email address of a record [2822] you know if you have the first name last [2824] name company name where they went to [2825] school all that stuff you could usually [2827] pass this into a service like clearbit [2829] and then get a get an email address to [2831] the lead then you know sell them your My [2833] Little Pony plushy or whatever uh but [2836] these days um enrichment means two [2838] things it means that and then it also [2839] means using artificial intelligence to [2841] add extra context to the lead and maybe [2843] some like additional additional field [2845] for outreach so I'm going to cover the [2847] first which is finding the email address [2848] after this I'm going to cover the second [2851] to enrich uh the email address I would [2853] use either drop contact which is that [2854] French company that uh I probably showed [2856] in about my videos or I'd use another [2857] service called any mail finder I don't [2859] know which pricing is better but by the [2861] time you're watching this video may or [2862] may not be relevant to you anyway so I'm [2863] not going to do too much digging um [2865] those are just the best Services as a [2866] present and then what I do is I pass [2868] them through i' pay whatever cost per [2870] email that I need to there and then I [2872] take the exported records which you [2874] could do automatically or you can just [2875] manually do this and then i' create a [2876] make scenario and what the make scenario [2879] would do is for every record in this [2880] Google sheet it would take in like the [2882] profile picture maybe it would take in [2883] the LinkedIn summary maybe it would take [2885] in like some additional info and then [2886] I'd pass it into AI saying something [2888] like hey write me a customized first [2890] line Icebreaker to this Prospect using [2892] the information that I'm providing below [2893] and the idea behind this would be for [2895] you to get something like another column [2898] called Icebreaker with text that would [2901] be love your shirt man is that UCLA in [2904] the background right just something like [2906] that and then what you do is when you [2908] pump that into your cold email platform [2909] you use that as the first line uh or [2912] like under underneath your high name use [2914] that as like the first realign of your [2915] email so your email would go like hi [2917] Peter dude is that love your shirt is [2919] that UCLA in the background I wanted to [2921] be a front with you and talk about X Y [2923] and Z platform because Blah Blah Blah by [2925] doing that you just completely remove [2927] yourself from the horde of robotic [2929] messages that they're probably getting [2931] and you imply that you know you're a [2932] real human being that's doing this [2933] you're not a robot uh which massively [2935] improves conversion rates for one [2936] massively improves reply rates for two [2938] and it also just makes it a lot nicer to [2939] deal with the prospect so uh they're not [2942] going to tell you like off they're [2943] going to say hey man like dude thanks so [2945] much for that yeah that is UCLA I'm not [2947] actually looking for business right now [2948] but you know I appreciate you reaching [2949] out that's somebody that's warm they're [2951] funer to deal with and maybe you could [2953] sell them on something later on uh [2955] that's what I would use even though it's [2956] a little bit more expensive Nick is [2958] there a reason that you choose clickup [2959] over a table for things like CRM [2961] building absolutely uh clickup is like a [2963] dedicated almost like bit B2B agency [2966] project management and CRM tool and then [2968] air table is sort of just like a blank [2970] canvas that you can paint anything on so [2972] it lacks a lot of the built-in [2973] functionality that you get in clickup um [2975] clickup has like Time Track and built-in [2977] assignes notifications due dates all [2979] that stuff and in air table you have to [2981] like explicity add these functions um [2984] either using air table features or going [2987] out and getting like plugins or [2988] thirdparty time trackers that sort of [2989] thing so simply put since I do CRM [2992] builds for B2B agencies mostly or [2995] coaching companies uh clickup just has [2998] everything that I need and so I just use [2999] clickup and I have a bunch more logic [3001] over here but yeah air table Google [3002] Sheets on steroids do whatever the hell [3004] you want with it you're building it from [3005] scratch clickup specific to the [3007] companies that I work with I'm going to [3008] use clickup it's also a little bit more [3011] cost uh effective but I'm not going to [3013] beat a dead horse um and then air table [3015] also used to have their own built-in [3016] automations because I personally use [3017] make.com I don't really need those [3019] obviously this may be different for you [3021] and I still do use air table for some [3022] applications mostly structured data [3024] scraping and that sort of thing [3026] um sometimes I build a ux stuff but yeah [3028] most most of the time I'm using clickup [3029] these days lastly Nick when you get a [3031] new client do you have them create their [3033] own make.com account then add you as a [3034] user or do you just like make it for [3036] them uh it's a great question um I [3039] didn't actually represent that last part [3040] then uh do you have the client create [3042] through own make.com a clickup account [3043] first then add you as a user so you can [3045] build it up that that's what was asked [3047] so I've experimented with this before [3049] and my personal recommendation what I [3051] personally do is I will always just give [3053] them a call after they sign the deal and [3055] then I will say hey over the course of [3057] the next few minutes we're going to sign [3058] up for this platform that platform or [3059] that platform are you already part of [3061] any of them yes okay great then what's [3063] your email and password if there are any [3065] issues with that I explain that the [3067] reason why I need the email and password [3068] is because I don't want to have to go [3069] through sub accounts because these [3070] usually have some type of information [3072] sharing blocker or credential blocker or [3075] authority blocker admin access blocker [3078] uh if we're to work together I want to [3079] be able to do it efficiently and [3080] autonomously without having to ping you [3081] every five minutes or deal with two- [3083] Factor authentication issues so if [3084] you're concerned about the password you [3086] know could you change it to something [3086] neutral and then could we just go from [3088] there um you know and most people don't [3090] actually care they're just happy to give [3091] you the email address initially I'm just [3093] pretending that you know they have some [3095] type of concern so yeah I'll just I'll [3097] just do that and then I'll always have [3098] their uh email address and then their [3100] password and then I'll add that into my [3101] big fat password manager I currently use [3103] one pass uh and then I'll just manage [3105] that okay that is the AMA guys thanks so [3107] much for watching that if you guys found [3110] the value in those comments as high as [3112] hopefully the scalers community uh then [3114] please head over there J bab is an [3115] awesome guy and I think some of the [3117] conversations that we've been having on [3118] scalers have also been uh very high [3120] quality here um to do so I think it's [3123] currently free they're probably going to [3124] be pay Walling this at some point uh I'm [3126] not entirely sure but yeah jump on there [3128] if you guys like what you've heard today [3130] if there's enough demand for it I can [3131] also do an AMA just directly on YouTube [3134] um answering specifically like my [3136] YouTube subscriber questions I don't [3139] mind doing that at all I really enjoy [3140] doing these sorts of things because [3141] there's so many questions that I didn't [3143] even think were questions that now [3145] starting to realize hey wait maybe I can [3146] do content on this or maybe I can do [3148] content on that so if anything it it [3149] helps me just as much as it probably [3151] helps you guys aside from that please [3152] leave a like down below subscribe to the [3155] channel comment Nick is awesome for the [3157] algo no don't don't actually do that um [3159] and then I will catch you on the next [3161] video cheers

Video: https://www.youtube.com/watch?v=dVKYcbqlteo
Title: How to Manage an Automation Project (Account Set Up, Delivery, Etc)
[0] hey everyone had a lot of requests [1] recently for how to manage an automation [3] project and when I say manage I mean [5] account setup I mean delivery I mean [7] Logistics I basically mean everything [8] around the actual service that you're [10] providing so if that sounds like [11] something you want to improve on this is [13] the video for you stay [18] tuned okay as per usual I'm going to [20] have a notion Link in the description [22] it's going to include more or less a [23] textual summary of everything I'm about [24] to tell you I do very much prefer the [27] video just because I get to visualize it [28] and kind of walk you guys through hand [31] in hand but yeah this video is more [34] technical if you are running an [35] Automation Services Company or if you're [37] an automation freelancer or if these are [40] things that you want to do at some point [41] in the future definitely check this out [43] to see how I solve these problems these [45] are problems that I've heard from dozens [47] maybe well over 50 other people that are [49] running their own automation businesses [50] by now both recently in YouTube and over [54] the course of the last few years of my [55] career so these are all problems that [56] you are going to have to solve one way [57] or another and there are many ways to [59] solve these problem problems these are [60] just the ways that I have chosen the [62] ways that deliver me personally the [64] highest Roi so first things first I'm [66] going to cover account setup now ideally [69] when you are getting a new make.com [71] client or automation client whether it's [74] on zapier n10 or any one of those other [76] platforms you want the client to sign up [79] using their own email and their own [80] password what do I mean by that I mean [82] you want them literally to go to [85] make.com exit out of the [88] cookies and then create an [91] account right over here and then you [93] want the client to use their name their [96] email and then some [99] password and as you can see you can do [101] this whole thing pretty quick I mean [102] from start to finish since I loaded the [103] page maybe 10 seconds or so but you want [106] to make sure the client does this on [107] your own and there's a little bit of [109] nuance here and some people are going to [110] disagree with me on on what I'm about to [112] tell you but there are reasons for this [114] now the first major problem with account [116] setup that I see most people fall prey [117] to is two Factor authentication if if [119] you are in automation two Factor [121] authentication is one of the biggest [123] Killers to both your credibility and [125] your ability to get done and so we [127] want to eliminate that however possible [129] almost every single online service that [132] you're going to sign up for now offers [134] some variant of the sign up with Google [136] or sign up with apple or I mean if we [139] just go back to this make.com page I [141] think there were four or five yeah [143] Google Facebook GitHub these make it [145] really convenient and really easy to get [147] started on make.com or on any other [150] software platform but they cause a huge [153] pain in the ass for you and anybody else [155] that's going to want to use those [156] accounts in the future so you got to [158] make sure that when your client signs up [160] for your service they do so using their [162] email and password not using one of [164] these Services as I mentioned here [166] nothing is going to kill your [167] professionalism more than furiously [169] texting a client at 11: p.m being like [171] hey you just got a 2fa code can you send [173] it back those sorts of things are not [175] the impression that you want to be [176] giving so as I mentioned uh two ways to [178] solve this the first is you use your [180] username and password or email and [182] password and you force the client to do [184] so I will usually do this over a call [185] with the client but I'll get into my [187] kickoff in a second the second option is [191] in some cases you're working with a [192] client who already has an account for a [194] software platform whether it's make or [197] something else and in those cases a lot [199] of the time because of convenience [200] clients will be signing up using those [202] two Factor authentication services like [204] Google or Facebook or GitHub if that [207] happens I would highly highly recommend [209] you guys [210] to go in and change the login method to [213] email and password and of course to [214] explain this to the client uh to make [217] sure that they're on the same page and [218] to make sure they know how to log in the [219] next [220] time the great part about a lot of these [222] Services is they allow you to do this so [224] uh make.com for instance allows you to [226] go in and then change your login method [228] from Google to email and password you [230] basically have to go in there and then [231] unlink your account tons of other [233] services do this as well pandadoc I'm [235] pretty sure pipe Drive the vast majority [238] of the time if a company or a software [239] platform has an API integration it has [241] this functionality built in because it [243] knows that two- Factor authentication [244] and ooth and stuff like that are [246] problems but just make sure that you you [248] go through that if a client is using a [251] platform that's really small like I have [253] had a situation once where a client was [254] using a new startup and the new startup [256] had an API integration and had less than [258] 100 users very very tiny project [260] probably making less than $500 a month [263] but they were dead set on wanting to use [264] that in those cases you sometimes you're [266] just going to have to send an email to [267] the developer or to the support staff [269] and EXP L say hey can you unlink my [270] account and then create a new account [271] with username and password generate the [273] username password send it over to me and [275] then I can sign in and change it later [277] sort of annoying you might add 24 hours [279] to your turnaround time but if you don't [280] do this it's going to haunt you and [283] another really big issue with this which [285] I'm going to get into in a second is [286] it's going to negatively impact your [288] ability to upsell the client later on [290] because next time you're going to want [291] to access their Suite of services or [293] maybe next time you want to log in and [294] do something for them which is usually [296] how you get an upso you do something for [297] somebody for free they like what they [299] see they're like man this guy goes above [300] and beyond and then they want to work [302] with you further you'll be blocked and [304] you're not going to be able to do it so [306] going to want to avoid it however [307] humanly possible there are of course [309] going to be some instances in which this [311] is unavoidable specifically if a client [313] is asking you to do a project on one of [315] these platforms like Google like [317] Facebook like Twitter or Instagram a lot [319] of these platforms now have the ability [320] to delegate access and this is something [323] that most of them have now but not all [324] of them so you're going to have to sort [325] of go on these platforms and sus it out [327] yourself if you want to be like an [328] Instagram integrator or something but [332] what I usually do to get around one of [333] them the the Google problem and Google [335] is the most common platform that I work [337] with is I'll actually ask the client hey [339] just make me a Google workspace account [340] and then make me an administrator so [342] I'll actually send them the instructions [343] to do so I'll make sure that they have [344] everything they need and then usually [346] they send it over to their it guy or [347] their support or their developer and [348] they do it for me that way I can then [350] sign in on my own and then up to various [352] services for them although in order for [354] me to do that I am also going to need [356] their credit card and stuff because I [357] don't want to be involved in [357] reimbursements it's a big pain in the [359] ass [360] so that's the first most important part [362] about account setup just make sure you [364] get your tofa sorted and if you do this [366] at the beginning it'll save you so much [368] headache later on the second thing that [370] I want to talk about here is who owns [372] the account and I want to frame this in [374] terms of client best interest Now [376] counter to what a lot of other people [377] are going to tell you I recommend that [379] you do not own the automation account if [382] you're signing up to make.com or you're [384] using zapier or something that means [386] that the account isn't yours the account [388] is the client's and instead of having [390] maybe one or two big accounts where you [392] have 10 or 15 clients under you I [394] recommend that you just have a password [396] manager and then just have 10 or 15 [398] different client usernames and passwords [399] in that password manager there are a [401] couple reasons for this and I actually [403] want to walk through my thought process [404] in detail hopefully you guys will [405] appreciate it and hopefully also just [407] give you guys some more context about [408] some of the the pushes and pulls some of [410] the factors at play here so the first is [413] a big reason why people like when the [415] client is on their account and nobody's [417] going to tell you this because it makes [418] them seem kind of evil but we're being [420] pragmatic here it's business right if [422] you can gain leverage over somebody you [423] probably will and in some cases you [425] probably should however a big reason why [428] people want clients on their account is [430] because owning all of the client systems [432] is going to give you a ton of Leverage [434] you are going to have an implicit threat [436] essentially and that threat is going to [437] be hey these systems run your entire [440] business so if you don't pay me voila [442] they're gone you can imagine how a lot [444] of people that are earlyer on their [445] career they structure their business [446] this way because they're not confident [448] that clients are going to pay them and I [449] understand imagine that you're a client [452] uh you are six months into your retainer [454] you've been working with somebody for a [455] while and maybe the quality of their [457] service has gone down a little bit and [458] so you're thinking man you know Nick [461] just really isn't working out for me I [463] kind of want to switch but if I do [465] switch what if he just like takes away [467] all of my systems a lot of the time if [469] you're working with somebody for a [470] retainer for a long period of time odds [471] are they're making a little bit of money [473] and your systems are probably helping [474] them do that so essentially from a [476] client POV it's not just hey is my [478] service provider good now it's hey is my [480] service rid good and am I willing to [481] take the disruption in service and [484] continuity that letting that person go [486] and maybe finding somebody else would [488] entail am I willing to deal with him [490] taking all 17 systems that he's [492] painstakingly developed over the course [493] of the last five months and generally [495] just from my perspective that's not what [498] you want to do and I'll I'll touch on [500] specifically why in a second [502] but I always focus on longevity and [505] reputation over the long term sure [507] owning all client systems might make you [509] a more money over the course of the next [510] three months but over the course of the [511] next year two years 5 years operating [513] from that scarcity mindset for one is [515] going to impact the way that you grow [517] your business and are willing to [518] reinvest and scale but two word gets [521] around pretty quick the smaller that the [522] niche is and if you're doing notion CRM [525] setup there really aren't too many other [526] people that are going to be doing [527] exactly what you're doing if you want to [529] be in that industry for the next five [530] years get really good at it everybody's [531] going to have to know your name at some [533] point or at least hear your name and you [534] just don't want that associated with [535] Shady [537] practices another big reason people like [539] like having clients on their account is [541] because it just makes the initial [543] friction setup process a lot easier I [546] think especially for novice automation [549] Specialists or developers this is just [551] one of the most difficult and annoying [552] processes because you sort of have to [553] like hold the client's hand through [555] signing up to these things and a lot of [556] the time if somebody's looking for [557] systems or automations a big use case or [560] a big reason why is because they're just [562] not very technical people and if they [563] lack that technical skill and if they're [565] really busy let's say they're just not [566] really going to want to sign up to these [567] platforms on their own and that's [569] understandable however I would highly [570] recommend that you do it regardless and [573] you get the client to at least have some [574] visibility into what these platforms are [576] at least make it through the signup [577] process and it's going to help you a lot [578] later on and and here's why if you give [580] your client awareness of how the systems [582] work it's a empowering they're not going [584] to feel like you're like the gatekeeper [585] into their business it's also going to [587] let them peek into at the complexity of [589] the systems that you're building for [590] them and sort of have like a little bit [591] more respect or maybe awareness of [593] what's going on that's going to make you [594] look more knowledgeable position you as [596] more of an expert than you probably [597] already are and then it's also going to [599] to improve the self-sufficiency of the [600] client they're going to know where they [601] need to go how to navigate through these [604] systems if you give them like a brief [605] five-minute walkr like I always do and [607] generally speaking they're just going to [608] answer a lot of the stuff that [609] they otherwise would ask you themselves [611] and the self-sufficiency is fantastic [613] because a common failure mode I see in a [615] lot of these agencies that start off [617] with a Freel as a freelance consultant [618] and slowly try and grow is they end up [620] essentially just being the glorified it [621] guy for a company you're building the [624] systems and then they start asking you [625] similar but related questions to other [628] software platforms or other things that [629] you can do and then before you know [631] you're just the end all Beall sort of [633] thing you don't want clients like that [636] because it's going to significantly [636] impact your ability to scale the [637] business it's much better to get clients [639] that have a certain level of [640] self-sufficiency and if they don't have [641] that then to teach them that [642] self-sufficiency by walking them through [644] signing up these platforms the real [646] benefit to all of this and the reason [647] why I'm making this case is just because [649] you can achieve everything that I [650] mentioned below with like an additional [651] 15 minutes in your kickoff call all I do [653] is I actually call the client I'll jump [655] on a kickoff and then I'll say hey it's [657] time for us to sign up to these [658] platforms we have three platforms we're [659] signing up today why don't you share [661] your screen and I'll walk you through [662] how to do it very simple very easy [664] process and it makes sure the client [666] knows where all their data is they're [668] self-sufficient they're empowered and [670] they don't feel like you're blocking [671] them or sort of own their ass lastly [674] setting up on the client account makes [675] it really easy to offboard later the [677] reason why I bring this up is because [680] sometimes you're just not going to like [681] working with a client sometimes you're [682] just not going to like or want to [684] continue doing services and sometimes [685] the client isn't going to want to work [687] with you there are also of course some [689] situations in which the project is just [690] over and maybe this is just the natural [692] conclusion of your guys business [693] relationship and that's okay to offboard [695] a client when you own all of their [697] systems it's usually a lot more involved [699] because it involves taking these systems [700] and then transort transporting them or [703] porting them over or um you know [705] downloading blueprints or whatever and [707] attempting to upload them to another [708] make workspace this is a massive pain in [711] the ass and you don't want to do this [712] keep in mind you're not going to do this [713] super often if you're pretty good at [714] what you do obviously but you're going [716] to do this often enough that like having [717] an extra couple of hours thrown in once [719] or twice a month just not something you [721] want to deal with better to make sure [722] that the clients have their own keys to [724] the castle and they can be responsible [726] for you know fairing in or fairing out [728] the goods okay great so that's [731] everything on how to set up your account [734] now I want to talk a little bit about [735] the logistics of make so what do you do [737] inside of make how do you organize make [739] for highest results and how do you make [741] sure that whatever you're doing is [743] sustainable uh it doesn't sort of fall [745] apart after you're done working with the [746] client first thing that I'm going to say [749] is if you do what I recommended above [751] which is where you get the client to [753] sign up to their platform for them using [755] their username and password or email [758] what you're probably going to do at [759] least on make is you're probably going [760] to get them on the $10 a month plan or [762] maybe the $18 a month plan so if I just [764] go here I think I can just go pricing [766] let's see if that [769] works yes that does work I'm a genius [773] what you're going to do is you're [774] probably going to get them on this core [775] plan or this Pro Plan you're probably [777] not not going to get them on the teams [778] plan just because there's no real need [779] to get them on the teams plan if you've [781] seen my previous videos you'll know that [782] I don't I don't really see any purpose [784] to teams you'll probably get them on Pro [786] or you're going to get them on core and [788] the way that Pro or core works is [790] because you don't have access to teams [791] sort of your highest level way to uh [794] build organization into the businesses [795] through the scenario Builder and so the [797] scenario Builder looks something like [798] this this is just one for my current [800] company left click you see I've [802] separated the folders here into one two [805] three four or one two three basically no [808] four [809] and then I have an example builds folder [810] and then a photography system folder [811] just for one of the builds that I did [813] recently now the way that I would [815] actually encourage you guys to set this [816] up on your own is I'd encourage you guys [818] to set this up in three or maybe four [819] folders for the client um I would do one [822] for sales and marketing so basically [823] everything responsible for customer [824] acquisition because odds are you're [826] going to be using similar platforms [828] you're going to be doing similar [829] approaches and this is just a simple way [830] to break it down so this is everything [831] to do with getting new Revenue in and [834] then have another folder for project [835] management which is sort of just in my [837] case I called it operations here [839] but it' be much more Adept to call it [840] project [843] management and then I have another one [846] for HR and so that's anything to do with [848] hiring or Administration or you can even [851] do payroll here if you want and then [853] have one for other other is just sort of [855] a catall because sometimes you're going [856] to have systems that just don't fall [857] neatly into those categories the reason [859] why I bring this up is because if you [861] don't have that then you just have the [862] big uncategorized folder your make will [864] eventually just turn into a giant [866] colossal cluster and you and your [867] client will have no idea what's going on [870] organization is one thing that I really [871] really wish that they built in a little [873] bit more to the software platform it's [874] also entirely possible that you're [875] watching this in the near 2027 and they [877] fixed all this stuff and they have some [879] beautiful hierarchical folder [880] organization if they do I'll eat my shoe [883] uh but yeah just try and sort that out [884] as quickly as possible another thing to [887] do that most people forget is to turn [888] off the warning or error email [890] notifications the way that you do this [892] in make I believe is you click up here [895] to your profile oh maybe you go to [897] organization [900] and then you go [902] to you do not do [905] that I have a strong feeling that I just [908] uh recorded a whole video on like a [911] whole make.com course and uh I don't [914] even know where the hell the [915] notification settings are okay great so [917] they're they're up here basically you go [918] to the bottom corner you click Pro [920] profile and then go down to the specific [922] organization or part of so you can see [923] I'm part of a bunch of different [924] organizations here so I have various [927] organizational tabs you're probably only [928] have your company though and what you [929] want to do is you just want to select [931] errors and warnings and just turn them [932] both off at least while you're [933] developing the project the reason for [935] that is because while you're testing [937] odds are you're going to be either [938] making mistakes or you're just going to [939] be running and rerunning the scenario a [940] bunch of times sometimes you can run [941] into API call limits and then if you do [945] run into one of those API calls or [946] there's some issue with your scenario [947] that is like on but it's not really on [949] you're just testing your client's going [950] to get an email and uh it's going to [953] start with warnings and then eventually [954] it's going to say error and if you're a [956] client you just started working with uh [958] an automation contractor and all of a [960] sudden within five minutes you're [961] getting 10 emails a day being like hey [963] error in this scenario warning in this [965] scenario you're probably not going to [966] think as highly of that person as you [968] otherwise would so you just want to [969] avoid that as much as possible for [970] professionalism reasons once you're done [972] with the project I would encourage you [973] to come back here and then just check [975] the errors back on I usually do not do [978] warnings simply because I don't really [980] think the warnings are as important and [981] sometimes it's just API rate limits and [983] stuff like that okay now where do you go [985] from here last thing we need to do to [986] organize our make.com account is we need [988] to use a naming convention now in [991] practice as I mentioned earlier make.com [992] will always inevitably get disorganized [994] as hell that's just how it is right now [996] but you can at least saave that off a [998] little bit with a simple naming [999] convention you see I barely follow this [1001] for my own account which is sort of a [1002] bad habit ideally everything that I'm [1004] telling people to do in my client [1006] accounts which are rigorously organized [1007] I would do for myself but say lovey what [1011] we want to do is we want to use a [1012] nameing convention that's something like [1014] this trigger and then I usually do an [1016] arrow or something and then I do [1017] function so what that might be um let's [1021] do this this is an example scenario that [1024] if you guys are watching my videos I [1025] made to analyze a an image from a Google [1030] sheet row so what what I would do is uh [1035] search Google sheet daily and then [1038] analyze image in open [1042] Ai and send email that's how I would [1045] organize this I would have the name of [1046] the trigger up here you can add the [1048] scheduling if it's something that is run [1050] sort of on a clock as opposed to a web [1052] hook or something like that and then [1053] have like the function of the of the [1055] modules here and so in my case you know [1058] I'm searching this Google sheet maybe [1060] not daily maybe it's every 15 [1062] minutes I'm just going to say once you [1064] will never operate again Google sheet [1066] Mah and then we're feeding into open AI [1068] so I'm analyzing the image in open Ai [1069] and then I'm sending the email I'm not [1071] mentioning this parse Json module just [1072] because that's sort of like a it's like [1074] a technical thing doesn't really add any [1075] semantic value to what this thing is [1077] doing it's just something that I have to [1078] do in order to make the rest of the flow [1080] work another example here is you can use [1082] numbers and those specifically those are [1084] important in multi scenario flows where [1087] you have one scenario that maybe starts [1089] a flow and then it triggers another [1091] scenario in the second part and then it [1092] triggers another scenario in the third [1094] part I would always just use numbers so [1095] number one would be the first one number [1096] two would be the second one number three [1097] would be the third one pretty [1099] self-explanatory this is just an example [1100] saying one new error table row send [1102] email to client with proposal so do it [1105] that way you will next I want to talk a [1106] little bit about passwords passwords are [1108] viously very important especially if [1109] you're allowing the client to set up and [1111] encouraging the client to set up all of [1112] their accounts on their own you're [1113] inevitably going to run into issues [1114] where you just have a million in one [1115] password so how the hell do you deal [1117] with that well it's pretty simple you do [1119] have to use a password manager it is [1121] 2024 and a lot of people are still sort [1123] of unaware of how they work but [1125] basically there a couple of platforms [1126] out there like one pass and last pass [1129] and dash [1131] lane and basically the way that they [1133] work is they [1136] are sort of hubs where you can store any [1140] and every password that you use on a [1142] daily basis and then they will look at [1144] the URL the website that you're on and [1146] then if you're on a URL that is in the [1148] database here then they'll pull up the [1149] passwords just make it really easier for [1151] you to log into a service and so the way [1154] that I personally use my password [1156] manager is I will use one pass and then [1158] in one pass you have the ability to [1160] create a bunch of vaults and I basically [1162] have one Vault per client vault is [1164] almost like a folder and then every time [1165] I create a new client or a new client [1167] gets onboarded while on the call with [1168] them my initial kickoff call which is [1170] that start introductory they paid the [1172] thing they just want to get going chat [1175] um I will jump on that call with them [1176] and then as they are creating the [1178] accounts I'll confirm their username and [1179] password I'll add it into my one pass [1181] literally just right there in front of [1182] them and then I'll log in right behind [1184] them just to make sure that everything [1185] is right so that way I'm saving dozens [1188] of hours later where I'm not looking [1190] frantically for a username or password [1191] or maybe I need to wait or have them [1193] send it back to me or something like [1195] that and it's counter inally the older [1197] that I get the more I real realize that [1198] doing these things quickly is actually [1199] the lazier option uh sure you can pass [1201] it off as being more organized but I [1203] like to pass it off as just being more [1205] lazy in practice a lot of people will [1208] try and share these with the client I've [1210] never found that necessary I don't [1211] really think there's any added alpha or [1212] value in having the client have a link [1214] to the password manager or making them a [1216] user on the account I could see it maybe [1219] if you're in like a really big [1220] organization and you want the client to [1221] like create the things themselves but in [1223] practice there's a lot of there sort of [1225] like a pain in the ass because the [1226] client has to learn how to use these [1228] platforms you have to educate them on [1229] how password managers work better for [1231] you just to be responsible for all that [1232] stuff unless you're in a big agency [1234] speaking of big agencies if you are in [1235] big agencies this becomes 10 times more [1237] useful because now you're not the only [1239] one that has access to that password now [1240] anybody else in your team does so very [1242] quick very easy and obviously because [1243] they're part of your company you can [1244] train them really easily which is nice [1247] the next is how to test the project [1249] testing is one of those things man that [1253] I think that a lot of newbie developers [1255] just don't really do and I will give you [1259] probably one of the highest Roi lessons [1261] right now if you're running a make.com [1262] flow never deliver it until you've [1265] tested it from start to finish and what [1267] I mean by start to finish is I mean the [1268] very first module in whatever the flow [1270] is all the way up to the last module in [1272] the flow don't use any of those testing [1274] hacks that I showed you where maybe you [1277] put the trigger somewhere else instead [1278] of on the beginning if you're going to [1280] deliver it just make sure that on every [1282] function that you could possibly want [1284] your CRM build or leaden system or or a [1286] project management system to do [1288] You' just tested it end to end prior to [1290] delivery with the client this does add a [1292] boatload of time it's not easy but it's [1294] something that you basically have to do [1296] if you want to be considered a [1297] professional and if you want to maximize [1298] your ability to get people on a retainer [1300] and upsell them later on because nothing [1302] nothing in automation is going to ruin [1304] your credibility More Than A system that [1305] you're telling the client you can build [1306] for them that ends up not working the [1308] way that I pitch it here is it's like [1310] being a GC or general contractor and [1312] delivering a house and then the house [1313] just has 15 broken windows like who the [1315] hell is going to want to like come home [1317] to that right they're going to think [1318] that your service was trash so yeah your [1321] goal is to transition these clients for [1323] the most of you into a recurring [1324] retainer of some kind and then testing [1326] your flow if you view it from that [1327] perspective it's not just like some [1330] nerdy Dev thing that you have to do [1331] because you know I'm All against those [1332] nerdy Dev things that people like to do [1334] that don't actually add bottom line this [1336] is one of those things that has a really [1338] outsized Roi because you sort of bundle [1339] it into the client experience so if [1341] you're going to spend money on sales if [1343] you're going to spend money on marketing [1344] spend time on testing because it's sort [1345] of like doing the same thing for you and [1348] then last but not least how exactly do [1350] we go and deliver the project well I got [1352] an awesome sop for you eventually you [1355] will be finished what a lot of people do [1357] which I think is a missed opportunity is [1359] they will just email the client and say [1360] they like done and then they'll just [1362] link like their make.com scenario or [1363] maybe they'll just be like hey it's your [1364] turn to test it give it a try the thing [1366] about systems and the glory of make.com [1369] is systems are extremely Visual and [1372] make.com is like super interpretable I [1374] mean just look at these modules we have [1376] the logo of the company we we have a [1378] statement saying what it does and then [1380] if you click in you have a bunch of [1382] pretty interpretable headings here [1383] telling you what every field is [1385] responsible for and so because systems [1387] are inherently Visual and then make.com [1389] is really good at showing that off you [1390] might as well show that off as visually [1392] as possible the great opportunity to [1393] take advantage of here is videos so I [1396] will always record a video upon delivery [1398] and what I'll do is I'll actually just [1399] walk through the flow from start to [1400] finish to show them how it works and [1403] this is probably why a lot of people [1404] think I'm really good at doing these [1405] sorts of videos where I will show a flow [1407] and then I'll document it and talk about [1409] how it works because I actually do this [1410] as part of my job this is like my [1411] day-to-day it's what I do for a living [1413] testing and recording and delivering is [1415] so important to me and it's such a high [1417] Roi opportunity to improve the outcome [1420] of your future work with that person or [1422] maybe just in general that I've gotten [1424] pretty good at it and I'd encourage all [1425] of you guys to do that as well so yeah I [1428] would test it on your own run through [1429] the whole system from end to end as I [1430] mentioned just like you tested it [1432] earlier just do it on [1434] camera what I'll do after is I will [1436] usually just add the loom video because [1438] I'm using loom for all of this into an [1440] email template email template is just [1442] like hey blank you know had a lot of fun [1443] working on this project I I recorded an [1445] in-depth video walking you through [1446] everything you need to know about our [1448] system that's going to do X Y and Z [1449] click this to find out I'll add a couple [1451] of extra lines just explaining maybe [1453] some textural things or some quirks the [1455] system that maybe we didn't anticipate [1456] that sort of deal and then at the end I [1458] will tell the client hey I want you to [1460] take as much time as you need to test [1462] the system on your end and the reason [1463] why I do that is because I basically [1464] just want it to be as transparent as [1466] possible and I want them to feel [1468] empowered to figure out how the system [1470] works without sort of me walking them [1472] walking them through it I mean I've [1473] already recorded a video for Christ's [1474] sake right the idea is you just want the [1477] client uh to trust you but also to feel [1481] comfortable with verifying the quality [1482] of their system on their end and I find [1484] that that leads to a just significantly [1486] longer business relationship than then [1487] just sort of like taking you at your [1488] word sort of deal so tell them like hey [1491] in order just to wrap the project all [1492] you need to do is test the system on [1494] your end make sure it works give me the [1495] thumbs up and then I'll send you over [1497] the other 50% for the delivery something [1499] like that in practice is usually uh [1501] pretty streamlined flow there's another [1503] benefit sometimes your clients use [1505] software and Technology differently to [1507] you you're probably pretty good at Tech [1508] they probably aren't as good at Tech and [1510] so they have a lot of predispositions [1512] and assumptions baked into their world [1515] model that means that they're going to [1516] use your systems differently than you [1517] probably considered so in some [1519] situations that will dig up an edge case [1520] where your system won't work and kind of [1523] sucks that you're doing that upon the [1524] delivery but you can see it as another [1525] opportunity to just improve the air [1527] tightness of system make it last [1529] longer anyway what I will do after the [1532] client confirms the project and this is [1533] the last thing that I'll do and the last [1535] thing I'm going to talk about is once [1537] the client says Nick this is amazing I [1539] love you and I want to work with you for [1540] the rest of my life here's a million [1541] dollars they say that very often by the [1543] way I will record a second loom video [1546] and what I'll do in this video is I will [1548] redo all of the testing that I just did [1550] for the client which is usually like [1552] another 10 15 20 minutes sometimes half [1554] an hour but then I will record it as if [1557] I'm recording it for somebody on their [1558] team to be used as lifetime [1561] documentation so I'm no longer just [1563] recording this just for Peter my client [1565] I'm not he hey Peter here's how the [1566] system works what I'm doing is I'm [1568] saying hey in this video I'm going to [1569] run through how blank system works so [1571] that anybody in the blank organization [1573] can get up where uh can pick up where [1575] I've left off and clients freaking love [1577] this because what you're doing is you're [1579] showing sort of like your willingness to [1582] look a little bit ahead at maybe a [1583] potential future relationship between [1585] you and that client or just the client [1587] using system in day-to-day and solving a [1589] problem that they had that they didn't [1591] even realize that they had regarding [1593] maintenance and managing so very future [1596] thinking uh it's a very easy pitch to [1597] segue into upselling them on a project [1600] management system with documentation [1601] this is probably one of the most common [1603] things that I will do I will start off [1605] by building a one-off project I'll [1606] usually charge pretty modestly for it [1608] maybe between 3,000 to like $6,000 for [1610] something straightforward I'll build it [1612] out for them I'll do all of this if they [1614] don't have a project management system [1615] in the video where I'm pitching and [1617] delivering the client I will say [1619] documentation is one of the most [1620] important parts of any flow I'm more [1622] than happy to talk about building that [1624] out for you in the future they'll give [1625] me the thumbs up I'll then record their [1627] first documentation video and then I'll [1628] pitch them on a retainer afterwards uh [1630] and the conversion rate on that is [1631] pretty great assuming I didn't mess [1633] anything up royally during building of [1634] the [1635] system okay that's it from start to [1637] finish I hope you guys found that [1638] valuable if you guys got any future or [1640] further questions please do leave a [1642] comment down below I respond to [1643] basically all of them although it is [1645] starting to take me a little bit longer [1646] than usual otherwise like subscribe and [1648] I'll see you on the next video thanks so [1650] much

Video: https://www.youtube.com/watch?v=NsQWWnu7vzI
Title: Complete Guide to Pricing Automation Services
[0] hey everyone Nick here with a quick [1] video on how to price your Automation [3] Services the next few minutes I'm going [5] to cover everything from the various [7] models that I've seen work really well [9] in the automation industry so [10] specifically how to structure your [12] package or your service in such a way [14] that makes sense for the client and then [16] in such a way that makes sense for you [17] and I'm also going to cover the various [19] price points that we might want to start [20] looking at uh depending on whether [22] you're a beginner maybe somebody with a [23] little bit more experience and may [24] you're professional so that sounds like [25] something you're interested in stay [26] tuned and let's get into the [28] video [33] okay as per usual I have a notion doc [35] that I'm going to link at the bottom of [36] the video this is just so that people [38] that are more textual Learners just have [39] something to refer to uh you don't just [41] need to listen to me blab on and on and [42] on in order to get the value inherent in [45] this video so uh first and foremost [47] there are a bunch of different ways that [48] you can price Automation Services and I [51] have luckily maybe unluckily [53] experimented with every single kind to [54] try and find one that worked for me what [56] I'm about to tell you is not meant to be [58] the end all be all in so far that you [60] you need to follow this word for word um [63] I'm going to try and make a nuan I'm [64] going to try and show you how different [65] types of pricing probably work better at [67] different stages in your career um so [70] you know take everything I'm going to [71] say with a grain of salt there are also [72] slightly different markets that I know [74] the people that are watching my videos [75] are in I mean for instance I usually do [77] a lot of CRM builds I do a lot of like [78] lead generation I do a lot of make.com [80] stuff but if you're designing or [81] building something slightly different [83] from me um whether it's on a different [85] platform or maybe you're offering [86] slightly different Services keep in mind [87] that that may vary regardless I think [89] this is going to a very educational and [90] beneficial video for you all so without [92] further Ado the first way to price is [95] hourly now what is hourly pricing I [97] think it's pretty damn simple it is [99] where you charge per hour that you spend [102] providing a service as you will see I [105] have put a thumbs down emoji immediately [108] next to the title and that's because [109] hourly billing is widely referred to and [113] well understood and known at this point [114] as like the worst way to price it's also [117] in many instances unavoidable so so a [120] quick example of this is you might be on [122] one of these platforms maybe upwork like [124] I mentioned in one of my previous videos [125] is a good place to start and your [127] profile says $50 an hour for make.com [129] and zapier automation there are some [132] upsides of this pricing method the first [134] is that your upfront cost is going to [135] seem pretty low for the client um so the [137] proceed friction is low and that's [138] obviously very important if you are new [140] in the industry you don't really have a [142] good track record behind you you know [143] you don't have too many case studies to [145] look at uh you know an upfront cost of [147] $50 per hour let's say just seems a lot [149] lower than a client than a project price [151] of $10,000 excuse me for instance so [154] that's something to keep in mind the [156] second [157] is um it's pretty simple you'll set a [160] rate with a client the client's just [161] going to ask you how long do you think [162] it'll take and then you just give them a [164] rough outline with the scope and then [165] and then you Bill after the project is [167] done and so the reason I'm bring that up [169] is it's just it's very simple it's well [170] understood you don't need to do any [171] explaining of like the mechanism of your [173] pricing like you do with a few of the [175] other models I'm going to show you below [177] and most people understand hourly [178] pricing um it's also really built into [180] the variety of online platforms that i' [182] like to mention so upwork for example if [185] it's your first project will take care [186] of hourly pay for you and then you'll [187] also get it automatically added into [189] your account in a weekly schedule um I [191] know Fiverr doesn't do this anymore but [192] there are a bunch of these other like [193] requests for proposal platforms that um [195] allow you to to set up your hourly [198] scheduling in such a way that you just [199] make sure uh you never really have to [201] worry about like a client not paying you [203] or that sort of thing so that's pretty [204] beneficial that said there are also a [206] number of downsides and notice how the [208] uh size of the downside section is about [210] twice that of The Upside section that's [211] because these downsides are very big [213] deals if you are doing hourly billing [215] off platform and again it's [217] understandable that you are because you [219] almost always just get a better rate [220] when you work off platform than you do [221] on platform you have to deal with a fair [223] amount of risk now this risk is [226] difficult to conceptualize for people [227] that haven't run agencies or maybe big [228] freelance outfits before um but there [231] there are a couple so let me just run [232] through them all the first big risk is [235] um you go over and so I don't know if [238] anybody here has ever had anything done [240] like a home improvement side of things [241] but like I don't know maybe somebody [243] quotes you at $5,000 to do your floors [245] and your stairs and everything like that [247] what will almost inevitably happen in [248] these situations is about 60 to 70% of [251] the way through the project the [252] contractor will knock on your door and [253] be like hey man just wanted to give you [255] a progress update now in order to finish [256] this we're actually going to need [257] another [258] $2,000 what I mean by this is it's very [261] difficult to scope some automation [263] projects there are tons of problems that [265] might come up and as a result like when [266] a client asks you for an estimate and [268] all clients will because they want to [269] like at least a rough idea of what the [270] budget's going to look like um that [273] estimate that you deliver may not [274] actually be true or realistic in [276] practice and in situations where that [278] happens especially if you're new to the [279] business and you're not very good at [280] setting expectations and managing you [282] know the client relationship set of [283] things that can be a real bummer and it [285] can lead to terrible experience for you [287] and a terrible experience for the client [288] as well so you got uh the risk of [291] overages right that's a very big risk [292] and something worth considering uh a lot [294] of the time clients will ask you to Bill [296] on some sort of hourly schedule so um [299] you know you know you you kind have two [300] options here you can either Bill them [302] you know do the entire project log the [303] number of hours that you've spent doing [305] the project and then send them a bill at [306] the end um or you know what what a lot [309] of people would probably prefer is to [310] get some type of payment regularly up [311] until that project is completed um both [314] of these have issues the first issue is [316] if you don't get paid until the very end [318] of the project like a lot of novice [319] Freelancers or agencies will probably [321] choose to do so to minimize friction um [323] now you're you're risking the client [324] just not paying you for a long time in [326] my experience you know as long as you do [328] what you say you're going to do $90 [329] 99.9% of clients are going to pay you so [331] that's not a problem uh the big question [333] mark is when are they going to pay you [335] and that means a lot when you're first [337] starting out because you know $1,000 or [340] something like that might make or break [342] uh maybe some personal budget situation [344] that you got going on or your ability to [346] invest rapidly in finding new clients [347] with alternative marketing methods um [349] this is called the accounts receivable [351] problem it's one is the biggest issues [352] in any service business and all of the [354] models that I'm going to show you next [356] are basically going to solve this [357] problem or mostly solve this problem uh [359] but it's something you have to consider [361] and then if you're doing like some type [362] of hourly schedule or whatever it just [364] adds a bunch of sales admin time which [365] is a big pain in the ass um speaking of [368] sales admin the amount of time [370] that a client will sort of force you to [372] do if you are engaging with them on an [374] hourly basis is usually pretty chunky [376] it's usually pretty big I mentioned how [378] clients want you to scope pretty [379] religiously um and that scoping can be [381] so [383] unnecessarily granular especially for [385] like poorer clients that you end up [387] spending literally just the same amount [388] of time talking about you're going to do [389] than actually doing it and that's [391] definitely a recipe of disaster and then [393] the biggest downside of hourly pricing [395] and this is the one that you know if you [396] just take one thing away from this whole [397] video take this away is that it is a [400] total misalignment of [404] values your value as an automation [407] engineer or a specialist or an agency is [409] not in how long it takes you to do a one [412] particular project realistically we just [415] being logical about it your value was [417] built over the months and years and [420] decades leading up to the moment where [423] you have this contract because that was [425] what enabled you to know what process to [427] pitch what system to develop or you know [430] the various skills necessary to do this [432] sort of thing why would you let's assume [435] you're really good at this you build [437] systems really fast why would you be [439] punished for being really good at that [441] that just makes no sense you shouldn't [443] be punished uh hourly wise you know if [446] you finish a 10-hour project in 5 hours [448] you should be punished by getting half [450] of the pay you should obviously be [452] rewarded for getting two or three times [454] the pay maybe an equivalent amount of [455] time an hourly billing does not let you [457] do that so total value misalignment it's [460] a massive massive downside to hourly [463] billing and despite that pragmatically a [467] lot of you guys are probably going to [468] have to start off with hourly billing [469] and that's okay just make sure that you [471] understand the upsides and the downsides [472] inherent right um You don't have to just [475] like go all the way to the bottom of [476] this list and just start your very first [478] project if you guys are pretty new in [480] your career or whatever with the the [481] most optimal type of billing of course [483] as you progress through your career [485] experiment with a couple of these on [486] your own uh but use this as generally [488] like a guide map and just know what [489] you're getting yourself into when you [491] choose hourly or you know any one of the [493] other models that I'm going to [494] mention okay so the second way to price [497] your services as an automation engineer [500] or somebody in Myspace is through [502] one-time Project based pricing this is [505] quite different to hourly billing it has [507] a bunch more upsides it has [509] significantly fewer downsides but [510] they're still worth mentioning what a [512] one-time project might look like is you [515] are pitching a client on the call and [516] the client asks you how much this is [518] going to cost them and you just whip out [520] the super specific number I don't know [521] why I wrote this so specifically [524] $3,192 for this clickup [526] implementation um it's a major upgrade [529] over the hourly pricing model that we [531] before that we had before because you're [532] no longer saying hey I'm going to do $50 [534] an hour for some vague scope instead you [537] still have a scope of course it's [538] usually a lot lot uh simpler and more [541] straightforward uh because you know the [542] client isn't pestering you being like [543] how long is this going to take how long [544] is it going to take how long is this [545] going to take um but within that scope [547] you just give a flat project price you [549] say you're not going to pay more than [550] one cent over whatever is in this [554] project proposal um the benefit to that [556] is that part there where it's like [558] you're not going to we're not going to [559] do any overages because I really trust [561] in my ability to do this that's that's a [562] ton of confidence and clients really [564] like that they like having um set [566] project pricing where they just know how [567] much money is something that's going to [568] cost so it's sort of reduces friction on [570] that end that said you are also just [572] pitching them on a way higher amount up [573] front like $33,000 for instance is a lot [575] more scary than $50 an hour so you are [578] going to have more friction with this [579] method than with the hourly method just [581] keep that in mind um obviously it's [584] value aligned now so you're no longer [586] punished for dragging and dropping [587] modules faster than somebody else or by [589] knowing exactly what the hell to do with [591] this thing um the better and faster you [593] are at building and the more knowhow you [595] have and like the better way you can [596] structure it U that all just translates [598] to improve proove revenue for you so [600] it's a win-win in that [602] regard it's not the worst way but it's [606] also not the best way U but there are [607] ways that you can make it better and [608] there are ways that you can also cover [609] your bases too like a lot of people that [611] start off with onetime project price um [613] there's sort of three camps you can [614] either build all up front or you can [615] build some type of Milestone schedule or [617] you can build all at the end and so a [619] lot of people because you know they [620] first starting on business they don't [621] fully understand kind of the [622] implications of what they're doing [623] they'll say hey let me do the project [624] for a billy after that's a mistake you [626] don't want to do that with onetime [627] project billing because there's just so [628] much freaking money uh in accounts [631] receivable that you do not have access [632] to that um if you Bill everybody after [635] the fact you know your Revenue month-to [637] Monon is going to go like this even if [638] your company is growing and that's going [640] to lead to cash flow problems it's going [641] to lead to inability to maybe staff or [642] hire or pay for the softare that you [644] need or that sort of thing so what [645] people usually do in practice is they'll [647] either Force full payment UPF front [648] which is quite difficult and there's [649] usually a fair amount of friction [650] involved with that so most clients will [652] prefer you to do some type of Milestone [654] based structure where you might have 50% [657] upfront 50% upon delivery uh or maybe [659] 33% uh upfront 33% after Phase 1 and [662] then 33% after the delivery of phase 2 [665] uh these larger phase projects um I [667] usually stay away from them I like the [668] 50% upfront 50% deposit or 50% delivery [671] it's just simpler for me uh but if [673] you're doing like a 30 or 40 or $50,000 [675] project usually they're going to be [676] multiple stakeholders involved and [677] they're going to want like a more [678] granular pricing scheme hence you know [680] the percentage Milestones so yeah um [683] that's that's really valuable and then [684] by forcing 50% up front you usually have [686] enough to at least just make sure that [688] all the costs you have in delivering the [689] service you're paid for which is [691] valuable um I mentioned the downsides [693] are harder sell than hourly if you don't [695] set strong expectations with a client [697] they can use you and abuse you the [699] reason for that is because you're [702] not any additional time that you spend [704] in the project is not being reflected in [706] the pay and that's sort of the whole [708] deal with our or with Project based [710] pricing right so if you don't set [713] expectations really well and then the [714] client like oh like I want just this [715] little thing added or I just want that [717] little thing changed or whatever and you [719] don't kind of put your foot down and you [720] know are willing to sacrifice a bit of [722] the client experience for obviously your [723] business to succeed um a lot of them are [726] going to take advantage of you and this [727] doesn't happen every time um it doesn't [730] happen very often to me but I think [731] that's just because I set expectations [733] very strongly initially um but you do [735] need to keep that in mind like clients [736] are probably going to ask you to do just [737] a couple of additional things and you [738] just need to be very firm about where [739] you put that boundry down so you're not [741] just doing a bunch of work for [743] free um and then the last thing or last [746] major downside is there is a bit of risk [748] if there is a Services implementation [750] problem so let's say you know this is [753] one of your first Times building like a [754] monday.com CRM and then you miscope [757] something and you don't realize oh you [759] know I can't actually integrate portion [761] x with portion y or I need to build this [763] fancy workaround to like do the thing [764] that I told the client I'd be able to do [766] this happens extremely Often by the way [768] no other service professional will [769] probably tell you this but that's like [770] probably 40% of all the time that you [771] spend as a freelancer at least until you [773] have better processes in place um if [776] that happens uh you're not getting paid [778] more for all the extra time and energy [779] and so it really puts the onus on you to [781] like really be airtight and scoping the [782] project and like this is going to [784] happen regardless so you are going to [786] have a couple of projects that are [787] usually less profitable than otherwise [789] uh which is why you just charge way more [790] upfront anyway right instead of $50 an [793] hour times the 10 hours it would take [794] you right is $500 you charge $3,100 [798] let's say which is like 60 hours worth [800] but maybe it takes you like 10 or 15 um [802] the difference between that 60 hours and [804] the 10 or 15 one obviously you're making [805] a lot more money which is hoay uh but [807] two it you have room for issues like [809] this to arise and then even if you find [811] yourself in a situation where you really [814] mess up a project maybe you need to hire [815] somebody outside and you actually lose [817] money on that uh the other projects that [819] you've you've set up in this onetime [820] project pricing enables you at least [822] like sweep that under the rug and not [824] actually just like destroy your business [825] so yeah that is the onetime project [828] pricing model the third way to price is [832] productized and this is even better than [834] our previous model it's a lot more [836] difficult in practice to make it work [837] however productized companies and [839] specifically produ ised like operations [841] companies are some of the highest margin [844] and most profitable businesses that you [846] can run um a quick example of what this [848] might look like is instead of you [851] jumping on a call with a prospect and [853] walking through your skills and why [854] you're the right pick for the job you [856] probably just have a landing page or [857] maybe a couple of landing pages and a [859] bunch of people on the internet talking [860] about you and then you just sell a [862] template so instead of $3,000 for a [864] customized CRM implementation now it's [867] hey pay us $987 for a clickup master CRM [870] template all you have to do is Click one [871] button download it onto your computer [873] and then maybe you can sell accessory [875] Services customizing that or whatever [877] but um the actual core like the vast [879] majority of the core value is just [881] productized it's in like a it's [883] basically like the digital product form [885] now the reason why this is so popular [887] and so many people are moving towards [888] especially right now is because it is [890] the most scalable way to transform [892] knowledge into Revenue basically it's [895] not the most quick like it's not the [898] fast fastest way you're not going to [899] make the most amount of money with the [900] product I service initially the way that [903] I see it is um you know if you're [908] billing one time you're going to make [909] more money up front and so like the [911] growth of your business is going to look [913] like and then it's going to kind of [915] level off but then if you're running a [917] produ ised business the growth of your [918] business will probably be a lot slower [919] initially but then when it takes off it [921] goes basically vertical the reason for [923] that is because you basically have no [925] like added costs involved with this [927] product if it's a template for instance [930] or maybe it's just some service that you [932] provide but that's very granular with [934] very clear milestones and very clear [936] breakpoints um it becomes super easy to [939] calculate and then fix your internal [941] costs so you know I'm making exactly 74% [945] margin on every single project in order [948] for one new project to get done I have [950] to hire one new person let's say or [953] maybe you know one person can do 10 [955] projects a month and I just i' got 20 [957] projects a month so I need two people [958] hired right the Staffing gets a lot [960] easier um the delivery gets a lot easier [963] your ability to plan and project Revenue [965] gets a lot easier and that's really well [966] producti is one of the gold standards in [968] the service industry now um and then the [970] last one is obviously you get you get [971] like paid up front which is freaking [972] amazing so super super valuable there um [976] just very very low friction the cost is [978] usually a lot lower and and that sort of [979] thing now you know no discussion of [982] different pricing models would be [983] complete without me illustrating the [984] downsides and you know despite the fact [986] the product dies is freaking awesome um [989] there are still some downsides the [991] biggest one is product IED Services [994] usually perceived to be lower quality [996] because people just feel like they're [997] being sold like a product and there's no [998] like person or human beside that um this [1002] doesn't necessarily have to be the [1003] biggest downside in the whole wide world [1005] if you think about it like if you want [1007] to buy a car in most parts of the world [1010] you need to go into a dealership and you [1011] need to like shake hands with somebody [1013] and they need to like you know sell you [1014] on why this car is the best that's kind [1015] of like the old school way of of doing [1017] business right but that's still the way [1019] that most people sell like Automation [1020] Services projects or really any other [1022] Digital Services project contrast that [1024] with like buying a Tesla you just go on [1025] their website and then you like select [1026] the car you want add a couple of add-ons [1028] then press enter right you know it [1030] doesn't necessarily have to be a [1031] downside uh but we are working in [1033] business and a lot of the time working [1034] with people that um I don't want to say [1036] they're older necessarily but they're [1038] certainly used to slightly older ways of [1042] doing business I guess that's that [1043] that's a lot more relationship based and [1045] personal based um and as a result you [1047] know there is that per CE decrease in [1049] value just because there's not a person [1051] that's you know walking you through this [1052] process for instance um it's not [1055] necessarily that you can also have a [1056] salesperson selling a product IED [1057] service it's just usually the whole [1058] point of product IED Services is that [1060] it's like you know self- serve sort of [1061] deal because that's the most scalable [1064] there also just going to be some people [1065] out there like those people that I [1066] mentioned earlier that just like really [1067] like the relationship side of things um [1069] that'll just never buy a product IED [1071] service there's just nothing that you [1072] can do to make them want to buy it they [1073] just really need a person um as part of [1075] the process and if there isn't a person [1078] it doesn't doesn't matter if it's like [1079] $100 they're just going to say screw it [1080] all I'd rather spend you know $10,000 to [1083] have somebody walk me through this [1084] implementation than $100 to have [1086] something that I would need to make a [1087] couple of uh changes to so yeah that's [1091] that uh and then also you just can't [1092] really charge as much because you don't [1093] have like the personal time and energy [1095] involved in that um I might be mistaken [1097] here you know I've seen some people [1098] charge some pretty large amounts of [1099] money especially in the last few months [1101] here for product eyes services but I [1103] think generally speaking like it'll just [1105] usually be a lower price um and yeah [1107] that's productization I mean I'd [1108] encourage you guys to do this wherever [1109] possible I have a tab open here uh with [1111] Fat Joe um specifically because Fat Joe [1114] Joe Davies is the founder of this [1115] company and uh I I I run a Content [1118] company as well for those of you guys [1119] that aren familiar called one second [1120] copy which is now doing produ ised [1122] content writing and Fat Joe was a major [1124] inspiration of mine um both back then [1126] and more so now because the way that he [1128] set up his business here it's a big [1130] business we're talking eight figures [1131] minimum the way that this company works [1133] is it's all self-serve like self-order [1136] SEO um where it's just like that Tesla [1139] dealership where all you do is you just [1141] go on tesla.com you pick the service [1143] that you want there are there's media [1145] there's information there's education [1147] surrounding all of the content there so [1149] that you know exactly what you're [1150] getting and you're basically selling [1151] yourself and then when you're finished [1152] selling yourself you click buy so very [1155] very scalable and very self-managed if [1157] you guys want to check out what like an [1158] actual super successful product ised [1161] company is or looks like head over to [1163] fatj.com and just like click on [1165] literally every single one of these [1166] it'll blow your mind okay the fourth way [1170] to price your automation agency Services [1173] is as a retainer now there is so much [1175] Hub up on the Internet about retainers [1177] right now and I think a lot of people to [1178] start just don't really know what a [1179] retainer is a retainer basically just [1181] means you pay somebody to have them [1183] available to you in any time what a lot [1186] of people think a retainer is is it's [1187] just like mrr for service companies or [1190] agencies and it's an interesting way to [1193] think of a retainer for sure but in [1195] reality the way that a retainer works is [1196] more akin to hey pay me $3,000 a month [1199] and you'll get 20 hours of build time in [1202] practice this is usually what a retainer [1204] is going to look like for you so what [1205] does that mean it means that we're still [1206] technically framing the services that [1208] are being delivered in terms of [1210] hours obviously we've eliminated a lot [1212] of the problems with hourly billing like [1213] the accounts receivable and the [1215] instability of the revenue and all that [1217] stuff um but we're still framing it in [1219] terms of hours right if you do the math [1220] $3,000 a month divided by 20 is $150 so [1223] you are now capping your time at [1225] $150 um so you know there's an issue [1228] with that obviously the benefit to that [1229] though is the latter half of that word [1232] here the the slash month uh because now [1234] you've turned your one-time project [1235] revenue or maybe like a onetime hourly [1238] project or something from that one time [1240] into a monthly or recurring service and [1243] in the online world uh for those of you [1245] that are unfamiliar recurring revenue is [1247] King like recurring revenue is the gold [1249] standard for everything it allows you to [1251] be able to project the growth of your [1253] business over time it allows you to um [1256] sell your company for what's called like [1258] an Enterprise multiple and these [1259] Enterprise multiples can usually be [1260] pretty big um it's so impactful and [1264] important that like basically every [1265] company around the world online has [1267] completely changed the way that they run [1269] their business specifically so that [1270] everything is now as a monthly recurring [1272] subscription as I'm sure you guys know [1275] so yeah it's it's King right um even if [1277] it's month-to Monon and you have a [1278] really high turn let's just [1279] hypothetically say you [1282] know we have two options here one is [1284] like a $5,000 project UPF front another [1286] is a $3,000 a month service [1288] um and the average time is 3 months well [1291] by the person uh coming back for 3 [1293] months obviously it's three times [1294] whatever the monthly cost is so 3,000 [1296] time three is equal to $9,000 that's [1298] almost two times more what the hell am I [1300] talking about um so you basically add [1302] just a boatload to your customer [1304] lifetime value and then in addition um [1306] you're spreading that out over a longer [1307] period of time which technically means [1309] you're making less like money per minute [1311] but it also means now you can project [1313] okay like next month assuming that the [1315] vast majority of our customers stay [1316] we're going to have $27,000 available [1318] for us to do investment into marketing [1320] um if you're just doing everything one [1321] time it's very difficult to get that [1323] predictability and usually what happens [1324] to practice is month one you might have [1326] like you might make like a million [1327] dollars month two you might make [1329] $400,000 month three you might make $1.8 [1331] million month four you might make [1333] $128,000 right like the the revenue [1336] changes so quickly that it's difficult [1337] to [1338] sustainably um grow your business [1341] project costs and project uh you know [1344] Marketing sales and that sort of thing [1346] so very important um I mentioned the [1348] Enterprise Value thing the way that it [1350] usually works out to in in mathematical [1352] terms the multiples on buying and [1354] selling businesses in um automation just [1357] they aren't really good because this is [1358] still like an agency service essentially [1360] or like a a managed service that [1361] somebody's providing even if you [1363] productized really well the multiples [1364] just really aren't that good uh in 2024 [1367] March 5th and this may change [1369] drastically over the course of the next [1371] couple of years as the market rebounds [1372] or maybe changes as priorities I think [1374] an average earnings multiple you'll make [1375] is like 2.5 to three maybe 3 .5 if your [1378] business is more productized and what [1380] that means is you basically just take [1381] your annual profit and then you just [1382] multiply it by that multiple in order to [1384] get your sale price so if your annual [1387] profit is a million dollars for instance [1388] and your multiple is two and a half then [1390] you'd make $2.5 million or at least your [1392] company would be valued at $2.5 million [1394] when you sell um a quick you know just [1396] way to sort of do that mathematically um [1399] is you know I'm assuming your margins [1400] are going to be somewhere around the [1402] realm of 50% um mine are about like 55 [1405] 60% uh from month to month some months a [1407] little bit higher when I do a lot of [1409] marketing Services another other months [1411] it's a lot lower when I don't really do [1412] a lot of spend but if you add let's say [1414] $3,000 a month in monthly Revenue you [1417] can conceptualize that as adding $36,000 [1419] a year to monthly Revenue if you cut [1421] that in half your earnings are now [1422] $188,000 a year and if you multiply that [1424] by around three um that's going to add [1426] about 50k to your price so the [1427] difference there between 50 and three is [1430] basically there's like a 16x on the [1432] monthly Revenue you can think of just [1434] sort of as like a general add to your [1435] Enterprise Value and why that's [1437] important is because selling a business [1438] is like one of the best ways to like [1440] make a ton more money because you get to [1442] make money while the business is [1443] operating and then you also get to make [1444] money when it sells um this isn't always [1446] the case in low multiple business or low [1449] multiple verticals like agencies and [1451] stuff a lot of the time if you have high [1452] margins just makes sense to keep [1453] operating it because selling is very [1455] involved and sort of a pain in the ass [1456] but anyway Worth to at least consider uh [1461] you also get paid UPF front which is [1462] obviously huge from an accounts receival [1463] perspective now you don't have to you [1465] know worry about whether you're going to [1466] get your 20 hours worth ofay pay next [1468] month or in six months or whatever like [1470] that if a client is being really shitty [1472] uh you know that you get it ahead of [1473] time and so always charge for retainers [1474] up front okay awesome and the last way [1476] to price your automation agency or [1479] freelance service is with a relatively [1482] new business model that I'm referring to [1484] as subscriptions now subscriptions are [1487] basically retainers it's just instead of [1490] billing based off hours like the vast [1492] majority of companies will do you just [1494] based off the value that you're [1495] providing you just build based off the [1496] value you're providing to the [1497] organization and so an example would be [1499] instead of $3,000 a month for 20 hours [1501] of Bill time you'd say hey pay me $619 a [1504] month and you'll have access to me or [1506] access to my company or uh you'll get [1508] weekly calls or or you'll get something [1510] but the something will just not be ours [1513] and so in my case you know and I've [1515] tried this out and I'm currently doing [1516] this for a couple of clients with [1517] reasonable results um you know I might [1520] say pay $4,400 a month excuse me for [1524] access to a fractional Chief automation [1527] officer or chief operational officer who [1529] will do all of the following for you and [1530] then I have like a big list of [1532] deliverables and the things that are [1533] involved in my case it's usually like a [1535] weekly call it's usually um some type of [1537] like comprehensive road map uh that I [1539] set up in month one and that we follow [1540] every month thereafter but obviously you [1542] know depends on the way that you want to [1543] price or model your specific business [1546] now why are why is the subscription [1548] model so much better than the retainer [1550] model I would say um is because you're [1552] value aligning once again and so it's [1554] sort of like the onetime project price [1557] to the hourly pricing [1560] um well I guess what I'm trying to say [1562] is uh subscription is to retainer what [1565] one time hourly or onetime billing is to [1567] hourly billing and so just you know kind [1569] of keep that in your mind that this is [1570] sort of like the new and improved [1571] version of the retainer because you're [1572] fully value aligned uh if you do a [1574] really good job you don't have to spend [1576] as much time you get all of the benefits [1578] of recurring Revenue you don't have to [1579] deal with any of the hourly headaches so [1580] you don't have to deal with like maybe [1582] going over and doing sales [1583] Administration or going under and then [1584] having a client you know wonder why uh [1587] they're not fully making use of all of [1589] the service time that you've you've [1590] allotted for them and then you also have [1592] full flexibility to set this up however [1594] you like this is a relatively new [1595] business model uh one that I've only [1596] really seen start working and taking off [1598] in the last year or two so this still [1600] very nent and people don't really have [1601] full strong expectations around it um [1603] the way that I see this work in practice [1605] is usually there are [1607] companies like design joy and this is a [1611] design company not an operations company [1612] so take everything I'm going to say with [1613] a grain of salt but instead of uh you [1616] know offering Design Services per hour [1618] for instance it'll just be 4,995 flat [1620] per month and then you can literally [1622] work in an unlimited capacity with that [1625] with the client uh and then usually just [1627] have like a Trello board or something [1629] like that and then they just add their [1630] their tasks to the trell board you guys [1633] consult or coordinate what the next week [1635] of work is going to look like uh maybe [1636] in like a brief 15minute meeting and [1638] then um everything is just managed [1640] through that board and then you know you [1642] can only work on one thing at a time so [1643] that when you're done you know you move [1644] it to complete it or whatever they get a [1645] notification they can check it and that [1647] sort of thing so you can set it up that [1648] way you can do some type of daily [1649] Consulting call if you want to be more [1651] on board or maybe take more of a [1652] Hands-On position in the company [1655] whatever works for you you have total [1656] flexibility over it the downside is also [1659] and I didn't add this uh you have full [1662] flexibility over this and so if you [1663] don't really know what you're doing you [1664] can really shoot yourself in the foot [1665] instead of you ideally making more money [1668] per hour than you were when you just [1669] charging flatly per hour you can make [1671] way less money if you spend too much [1672] time or energy or don't really [1674] understand the best way to pitch the [1676] value of your service another downside [1678] is it's much higher friction um because [1680] it's new you know you also have to S [1681] sell them on the idea of a subscription [1683] as opposed to a simpler idea of hourly [1685] billing which most people are accustomed [1686] to like if you go back to retainer [1688] usually the pitch for retainer is hey [1690] you know my normal rate is $200 an hour [1692] but if you purchase a package of hours [1694] and retain me then I'll only charge you [1695] $150 an hour right that's a pretty easy [1698] sell to make when you're trying to [1699] transition from hourly to a retainer a [1701] subscription doesn't really have that [1702] there's no real there's no real way to [1704] pitch that um that's simple and kind of [1706] well understood within the industry [1708] so keep keep that in mind um you know [1711] the clients definitely need to [1712] understand the value that you bring to [1713] the table um and have that be [1715] disconnected from the time that you [1716] spend in order for it to make sense it's [1718] very difficult to set expectations I [1720] find now that I'm doing this and uh and [1722] that I have a couple clients on this [1723] model um sometimes I actually spend more [1725] time than I would with an equivalent [1726] retainer and I think that's just sort of [1728] part of the job and just something that [1729] I'm I'm figuring out as I go and then [1731] yeah I mentioned that not a lot of [1732] people are are doing this right now so [1735] still something that you sort of have to [1736] figure out um but I've noticing I'm [1738] noticing this working in a lot of [1739] Industries and if you just think about [1741] it logically the subscription is just [1743] like better in basically every way to a [1745] retainer because you're just eliminating [1747] that hourly component so yeah now uh [1751] something a lot of you guys are probably [1752] curious is okay Nick these are the four [1753] or five business models but how exactly [1755] would I price if I was a beginner or if [1757] I was like an expert or Prower or [1758] whatever uh and that's what I'm going to [1760] walk you guys through right now so let's [1762] say you're doing hourly billing as I [1763] mentioned a lot of you guys are probably [1764] going to have to do hourly billing if [1765] you're getting started with Automation [1766] Services for the first time and that's [1768] cool uh what I'd recommend you price at [1770] is between 40 to 60 bucks an hour now if [1773] you look through like the average pay [1774] for somebody that do automation it's [1776] going to be lower than that but you [1777] don't want to go much lower than that [1779] the reason why is because when you price [1780] your services too low people start [1782] wondering who the hell you are and why [1784] the hell they should even care um it [1786] sort of like [1796] subcommunication actually has to think [1798] like is this something that we should [1799] you know is is this a service worth [1801] getting and if they answer that question [1803] is yes then usually people that they're [1804] willing to hire at that range they'll [1805] sort of attribute a bunch of positive [1807] qualities to like competence and skill [1808] and that sort of thing so you can seem [1810] like more of an expert than you actually [1811] are in all honesty if you charge between [1813] 40 60 an hour at the same time it's not [1816] so high that you know a client that [1818] doesn't fully understand the value of [1819] automation will like raise their eyebrow [1820] and be like dude why would I pay this [1821] guy $90 like I could just do some [1823] dragging and dropping myself right so [1825] seems pretty conservative to me prices [1827] are obviously getting more globalized uh [1829] throughout the world so um you know a [1831] few years ago I I would not have been [1832] able to put $40 to $60 an hour here an [1834] hour here and then everybody that [1835] watched it would understand but I think [1837] now we we're all sort of like all [1839] Digital Services professionals whether [1841] you are in Bangladesh or whether you are [1843] in Singapore or whether you're in North [1845] America like you these prices are all [1847] sort of like melding together and so [1849] regardless of where you are I would I [1850] would charge somewhere around this much [1852] and if you go any lower than 40 just [1854] don't go much lower than 40 if you're a [1856] pro if you've been doing this for a [1857] while uh and you know your value then I [1858] charge about $120 an hour but again if [1860] you if you're a pro you probably [1862] shouldn't really be doing hourly billing [1863] in the first place um I charge on [1865] average I want to say about $120 an hour [1867] when I do hourly projects I very rarely [1869] do hourly projects now [1871] um uh probably the last time I've done [1873] an hourly project [1875] is like a couple of months ago and I [1878] think that was like a brief maybe like [1880] an hour and a half quick call uh for a [1882] client that I'd worked with like a year [1883] or two ago that were that was used to my [1885] lower prices and uh I really like them [1888] and I just wanted to help them with [1889] something but I also didn't want to do [1890] it all uh completely for free because [1892] then I thought the client might sort of [1893] take advantage of me and that sort of [1894] thing so um anyway long story there but [1897] uh yeah I'd charge at least $120 uh [1900] dollar keep in mind all the stuff is in [1902] US dollars so translate that to whatever [1904] it means for you if you're doing a [1905] onetime project um I do have a list of [1907] prices in a previous video which I will [1909] hopefully if I remember um add somewhere [1911] here hopefully right now future Nick um [1915] it breaks down the various services that [1917] people provide like clickup crms or [1919] monday.com crms or maybe some lead [1921] generation systems or whatever so it's a [1923] lot more granular than this but [1924] generally speaking if you're a beginner [1925] charge like $1,500 or more for your [1928] project your projects are probably going [1929] to take you at least like 15 hours to [1931] fulfill if you don't really know what [1932] you're doing and you're running into [1932] road blocks right so um you know this is [1935] still at minimum probably going to be [1936] about like one and a half to two times [1938] what you'd make in an equivalent hourly [1940] rate uh but as I mentioned the downsides [1942] to this are some projects can go over [1943] scope and then when they go over scope [1945] it's your fault and you're kind of [1945] paying out of your pocket for it so you [1947] always need to have a little bit of that [1949] buffer if you're a pro I wouldn't uh I [1952] wouldn't take less than 5K for a project [1954] um simply because uh you know it just [1956] wouldn't really be worth your time [1957] otherwise and if you're a pro and you're [1959] running an agency so there are multiple [1960] other people in a company that are [1961] working with you i' probably charge even [1963] more maybe even double this um simply [1965] because the second that you throw [1966] another variable into the mix like [1967] another human being man does it get [1969] difficult to like constantly guarantee [1970] good margin so yeah for pros charge at [1973] least 5K a project but again you know I [1975] consult that other video If if you want [1977] more specific pricing on you know crms [1979] versus lead gen systems that sort of [1981] thing product sized very difficult to [1984] say um and there's no real like Pro or [1987] Noob difference here it's very variable [1989] generally what I find and what I've seen [1992] is that productized services are usually [1994] between 20 to 30% as much is like a [1996] bespoke implementation and so that 70 to [1998] 80% or whatever difference uh just [2001] represents the value that a person would [2002] provide in the process some type of like [2004] personalized implementation expert if [2006] you want an example as I mentioned [2007] earlier just head over to Fat Joe uh [2009] these guys do it for SEO and content [2010] writing design and video PR right all [2013] these marketing services and and you'll [2014] see more less how they price compared to [2016] what an industry standard might be also [2018] note that you have total control over [2019] this so whatever price you choose is you [2021] know play around with it start low or [2023] start high and then kind of work your [2025] way around the Spectrum uh find out what [2027] makes the most sense and highest Roi for [2029] you guys for retainers um the way that [2031] I'd structure them is if you're a [2033] beginner I probably do somewhere around [2034] $1,500 a month um I would pitch my [2037] services probably at like 70 or $80 an [2039] hour and then i' i' pitch the retainers [2041] like a discount to maybe 50 an hour for [2044] that 1,500 so maybe you're doing like 30 [2046] hours for this um that 30 hours though [2048] is like a lot higher value than just [2050] billing them hourly because now you have [2051] a guaranteed sort of deal and it also [2053] allows you to build a long-term [2054] relationship with a client that's paying [2055] you and I think the value of that cannot [2057] really be overstated uh basically every [2060] small retainer that I had at the [2061] beginning of my career has now evolved [2063] into a much larger U relationship [2065] whether it's some type of Revenue share [2067] or just a lot higher hourly rate or a [2069] lot higher number of hours so that's [2071] that's quite valuable and then if you're [2072] a pro I charge probably about $4,000 a [2075] month plus um I would probably pitch my [2077] services at be as being worth at least [2079] 100 or $150 an hour then maybe drop that [2081] down to 100 um obviously totally up to [2084] you and this is all dependent on the the [2086] way that you priced um hourly earlier [2088] but yeah lastly if you're running a [2091] subscription I would as a beginner [2093] charge no less than $2,000 a month keep [2095] in mind you're a beginner it's very [2097] difficult to pass yourself off as like a [2098] chief automation officer or chief [2100] operations officer if you just if you [2102] don't really have a lot of experience [2103] behind you so most of you guys will [2104] probably not be able to do this at least [2106] for a couple years uh but even if you [2108] somehow did I would always make sure [2109] that my value is represented um [2111] somewhere around like the 2000 plus Mark [2113] and then for pros I'm putting $4,000 a [2115] month here just because I've [2116] experimented with charging that much for [2118] my own company left click um which is [2121] right over here and basically um I'm [2124] charging $4,400 a month and basically [2127] uh you know what I found is in practice [2129] I usually spend way less than whatever [2132] the equivalent would be let's say we're [2133] doing $100 an hour I spend in practice [2135] way less than um 44 hours a month it's [2137] usually like 15 or 20 hours a month so [2140] my hourly rate has now just doubled up [2142] to 200 or maybe 250 for an equivalent [2144] amount of time and the value there is [2147] because it's on a subscription basis [2149] some months I might actually spend more [2151] some months I might spend less but I'm [2153] basically like the partner to the person [2156] that's working with me me and I'm not [2157] just like kind of building systems for [2159] them now I'm sort of going into a [2160] Consulting role where I'm proposing [2162] systems and proposing changes and that [2163] sort of thing um and then as inside I [2165] find if you guys are trying to run an [2167] automation service charging a money [2169] charging money for a subscription and [2171] then upselling them later on at some [2173] sort of increased service or maybe some [2175] type of like partnership or Revenue [2176] share is a lot easier because again [2178] you're not framing yourself as somebody [2179] that's working hourly now you're framing [2181] as somebody that's working from a value [2182] perspective and most of the time when [2183] you pitch these people you're pitching a [2185] business owner who doesn't really like [2186] working hourly either and they they like [2188] the value perspective so um yeah they're [2190] just going to consider you a lot higher [2191] value and they're going to see just a [2193] lot more uh I think opportunity in in [2195] working with somebody at their level as [2196] opposed to like just some little worker [2197] be that they pay an hourly rate okay [2200] sweet so I'm going to attach this notion [2202] in the video description as per usual um [2204] that's it on my guide to pricing [2206] Automation Services uh again some of [2208] this was Consulting some of this was [2209] operations some of this was automation [2211] but I trust you guys are mature enough [2212] to see the difference if you guys have [2214] any specific requests you guys would [2215] like me to do next feel free to just [2216] drop that down below as a comment more [2218] than happy to take that and then [2220] potentially record a video on your [2222] suggestion otherwise please like [2224] subscribe do all that fun stuff and I [2225] will catch youall in the next video [2227] thanks so much bye-bye

Video: https://www.youtube.com/watch?v=8o9py_as8FY
Title: How To Use AI Like A 7-Figure Agency Owner
[0] what's going on everybody it's Nick and [2] for those of you that don't know I've [3] been running a Content writing company [4] for the better part of the last two [5] years called 1 second copy we were one [8] of the first businesses in the world to [9] use AI at a scale necessary to make a [12] real dent in the service industry we [14] started way back in 2021 before chat GPT [16] or gp4 had come out and we were using [18] the predecessors of this technology to [20] make a lot of money we managed to scale [22] this to about $90,000 a month in about [25] 18 months or so and the entire way that [27] we were able to do that was by [28] leveraging understanding of still nent [30] technology like large language models Ai [33] and that sort of thing and the reason [34] why I bring that up is because in my [35] time at this business and now developing [37] make.com systems for other companies [39] I've noticed that a lot of people are [41] using AI but they're using it very [43] poorly and they're using it for maybe [44] 10% of the total outsized result that [46] you could realistically get using this [48] technology if you just knew a little bit [50] about how it worked so what I want to do [51] in this video is I want to show you guys [52] how it works I'm going to run through [54] four simple ways that I use AI in [56] make.com to make large amounts of money [58] on the internet and at the end I'm also [60] going to run you through some technical [61] bits about how these models work under [63] the hood and how you can optimize them [65] for better performance so if that sounds [66] like something you're interested in stay [68] tuned and let's get into [73] it okay so I have a notion dock here [76] that I'm going to link down in the video [77] description below and it talks a little [79] bit about my rationale behind some of [81] the AI model uh systems that I've built [84] and you know some of the ways to use [85] them that most people don't really [86] realize so I'll cover that in a second [88] and then at the end of the video I'm [90] also going to cover what I call the [91] technical bits which are probably lower [92] Roi but they're still really important [94] and beneficial and useful to know if you [96] plan on using these am models in your [98] day-to-day and let's be real in the year [100] 2024 and Beyond uh in order to keep or [103] grow a job we we will all probably need [105] to be using these Technologies in some [106] way shape or form so uh maybe that's [109] actually pretty high Roi too any who [110] what I'm going to start with is I'm [111] going to cover the various workf flows [114] that I've developed that allow me to [115] leverage artificial intelligence is [117] basically like a little helper in the [118] cloud instead of me paying a human being [120] to do some of this work now I can just [122] pay AI it's about 1 100th of the amount [124] that I would have to pay and uh it does [127] things basically instantaneously so a [128] lot of benefits there and um yeah let's [131] dive right into it probably the first [133] and the simplest workflow that I'm going [134] to start with is uh image analysis now [138] the reason why I bring up image analysis [139] first is because basically nobody uses [140] image analysis image analysis is an [142] incredible feature and because nobody's [144] talking about it and I'm like what the [146] hell I figured I just start with that [148] I'm going to use this in the context of [150] you running an email campaign as you [151] guys know that's one of my favorite uh [153] examples to bring up constantly just [155] because I've used it personally to [156] generate outsized returns and what I [158] what I have over here is I basically [159] have like a scrape from LinkedIn I've [161] gone into LinkedIn sales Navigator over [164] here and I've pulled out a big long [169] search let's say I'm looking for just [171] some random search Consulting uh like [173] this and then I fed it into a scraping [176] platform and there are like five or 10 [177] that are out there the one that I like [179] to person personally use is called [180] Phantom [181] Buster and then basically um all you do [183] is you just drag and drop this into this [185] scraping function you know you feed it [187] the URL which is up here and then at the [189] end of it you get a big spreadsheet like [191] this um I'm also using another platform [193] called drop contact that's just to [194] enrich the data and give me some email [196] addresses but that's actually not the [197] important part of this video and you [199] could just delete this whole thing uh it [200] wouldn't matter the important part of [202] the video what I'm really curious about [203] is I'm curious to see whether we can [205] gain any useful information from the [208] profile image URL column and what I want [211] to do is I want to build out a brief [212] little tool that will take as input an [215] image from one of [218] these columns here I think it's just [220] image URL yeah there you go profile [222] image [224] URL and so we got a a nice handsome fell [227] right over here and what I want to do is [228] I want to feed this into artificial [230] intelligence and then I want to have ai [231] tell me something about the image so [232] that I can use it to personalize the [233] first line of an email I want you to [235] imagine that you receive an email that's [236] like hey how's it going Nick I hope [239] you're doing well well here's this [240] business service that I'm providing and [242] here's why I want you to do it and then [243] I want you to compare and contrast that [245] with like hey how's it going Nick dude [246] like your profile pick looks like the [248] perfect day in the whole wide world also [250] I own a shirt just like that um my name [253] is Peter and I want to help you do X Y [255] andz with whatever system right uh the [258] point is by personalizing the email in [259] the latter case at minimum you'll [261] usually at least have a little bit more [262] interest or at least um you know some [265] curiosity behind who you are because [267] you've implied that you've taken the [268] time out to like actually look through [270] the person's profile and you're not just [271] copying and pasting the same response [273] that millions of other people are and at [274] maximum that sort of personality can [276] actually substantially improv conversion [278] rate and and sort of be the dividing [279] factor between a business that succeeds [281] or fails and so what we want to do is we [283] just want to feed an image like this [284] into Ai and then have ai tell us [286] something about the picture and then we [287] want to use that to personalize an email [289] campaign so I've actually gone ahead and [291] I've built this and what I'm going to do [293] is I'm just going to explain how every [294] step of this works in make.com we have [297] the action module here as the Google [298] Sheets sech search rows so if you go to [301] add and then you type sheets Google [303] Sheets is going to pop up here uh mine [305] is not because I've already added this [306] as a favorite but when you select that [308] you'll have a big list of items that you [310] can choose from and then what I've [312] selected is selected the search rows and [314] uh this is going to be the trigger to my [316] flow this is what's going to initiate [317] the rest of it what I have here is I've [319] gone through and I've selected a [320] spreadsheet with my specific data and [324] then what I'm doing here is I'm just [327] returning one single row at a time [329] because I just want to test this next I [331] have an open AI analyze images or Vision [334] module the way that you get that is you [336] search up open AI once you find that go [338] up to the very top here and it's this is [340] like the first module that nobody ever [341] uses um select that and then you'll have [345] a module here where you can add a prompt [347] that's sort of like mine what I'm doing [349] is I'm telling um GPT 4 Vision in this [352] case it's the name of the model to [353] analyze the image and then write a [354] oneline email Icebreaker using the [356] following Json format this is [358] interesting and it's also very important [360] if you do not force the outputs to be in [362] Json a lot of the time if you're using [364] make.com they're much more difficult to [365] work with and you can't really like [367] incorporate them into the rest of your [368] flows and so what I always do as a [370] design pattern is anytime I generate [371] something with AI I'll always feed it [373] into a parse Json module and then I can [375] use that and I'll show you that in a [376] second any who the actual prompt says [378] analyze the image and Rite one line Emil [379] I breaker using the fall on Json format [381] I then give it an example of what I want [382] it to do and then I also provide an [385] explicit two or three examples showing [387] the sorts of tones of voice that I want [389] it to provide um you know the format [392] that I want it to stick to and that sort [393] of thing and I'll cover how all that [395] works in a moment um that's part of the [396] technical bit that I was talking about [397] here this is technically called fuse [399] shot prompting um but it's one of the [400] ways that I can ensure consistency [402] across models next all you need to do is [405] you need to supply an image URL so I've [407] gone here and then I've clicked image [408] URL and then I've copied in profile [410] image URL which is one of the fields way [413] down here um near the bottom of this and [416] what this is is this is basically this [417] URL up here and so inside of this gp4 [421] module they sort of like a built-in [423] image um parsing module and then for the [426] model I've selected gp4 Vision preview [428] Max tokens 300 temperature 0.7 I always [431] like to pick the temperature make the [432] temperature lower than default because I [434] find that the um responses that are [436] being produced by AI these days are sort [437] of silly and then because I have a [440] transform as the last module in the red [441] I'm going to get a warning but I'm still [442] just going to run [443] this and what you'll see happens when we [446] feed in the image [447] URL is you get a a uh you get a result [451] that looks like this Icebreaker that's a [453] great shirt in your profile pick blue [454] stripes are my go-to as well if we look [457] back at here what's this handsome fellow [459] wearing well he's wearing blue stripes [460] and so uh you know if you get if you get [462] a message like this and if we're just [464] not kidding ourselves here you are [465] probably like five to 10 times as likely [467] to respond I mean to be fair the base [470] rate of you responding to any cold email [471] is probably pretty low so five times [473] that might just be like 20% or something [475] like that so it's not like a guaranteed [477] sort of thing uh but you know having a [479] degree of customization and basically [481] implying that hey I'm a human being who [482] actually took the time and energy out of [483] my day to read through your profile and [485] look at your picture um that goes a long [487] way now we have a parse Json module [489] right over here which is actually taking [490] that and then what you can see is um [492] we've converted adjacent string which is [494] just a bunch of text and then we've [495] turned that into like a make.com uh key [498] value collection pair and so now we [500] actually have a variable called [501] Icebreaker that we can access the text [503] within and you can imagine how if you [505] wanted to add this as part of your email [506] flow uh you might just add like an email [509] module here um probably the more [511] intelligent way to do this would be uh [513] you would go through and then like add [515] this to instantly or add this to some [516] other cold email platform but maybe um [520] hypothetically you just say you know [522] quick q and then let's just add the [524] person's [526] name Quick Q [529] Lopez hey [532] Lopez and then let's add a couple spaces [535] now let's insert this [537] Icebreaker let's go [540] and then you would say something like I [542] wanted to tell you a little about dot [543] dot dot and I'm just going to use this [545] as an [546] example and then let's go back here uh [551] I'm sending the email here unfortunately [553] I should have chosen the draft module [554] but whatever I'm just going to send it [557] to let's do just my base email just so I [560] can show you guys what this might look [563] like save that puppy we're going to run [566] it oh sorry I'm not um sign into the [570] right one [570] here okay we're going to run it then I'm [573] going to go to my email address and then [575] I'm just going to see this live I want [577] to see this as this comes in just to [578] show you guys what sort of quality we're [579] looking [582] at so you can see um the text that you [585] got it was different obviously than the [587] text we had before because a is flexible [588] and it comes up with its own uh with [591] different variations every time but it [592] was hey first name that's a great selfie [594] those trees make for relaxing setting I [596] wanted to tell you a little bit about [597] whatever now in this case what I might [599] do to make this higher quality is I [600] might go back here and then I might say [603] that you you [604] know make sure to explicitly reference a [609] profile [612] pick in your Icebreaker the reason why [614] is if we're sending it through email [616] it's probably not entirely evident um [619] what we're talking about here so if we [620] just say that's a great selfie that [621] might be construed as sort of weird [623] alternatively you can imagine how you [624] might just send that over LinkedIn [626] directly and saying like um you know hey [628] that's a a a great selfie that would [631] probably be a lot more obvious and uh [633] and attributable to that fact that [634] you're reaching out to them over [636] LinkedIn but this one looks a lot better [637] I like the strip shirt in your profile [638] pick makes for a great outdoor look [640] these three dots here is just a Gmail [641] thing if you have the same text in [643] multiple subsequent emails it just tries [645] to like hide everything that's a [646] duplicate but um just pretend that this [648] is back over here and then it says I [650] wanted to tell you about whatever the [651] pitch is so very quick and easy way to [653] you know customize an email sequence [654] based off like visual data which [656] basically nobody's doing and I think [658] that way more companies are probably [660] going to be implementing this over the [661] course of the next year or so so might [662] make sense you guys to get ahead of the [663] curve and just see how you might be able [665] to do something like that on your own so [667] before I forget I'm just going to save [668] this [670] blueprint got it and then I'm going to [672] move on to the next flow that I have so [676] uh the very first way was image analysis [678] we're going to mark that as done the [681] second probably most valuable way to use [683] AI that a lot of people aren't using [684] today is as a filter so not only can you [687] analyze an image using the image mod you [689] can also perform basically like some [692] cognitive functioning on a set of data [694] and you can determine where you want [696] that data to go um in make.com scenarios [698] and just a lot of automations uh usually [702] you know you'll use either routers or [703] use some type of switch module to [705] determine whether some output is X or Y [707] let's say um but you need to do so using [709] procedural rules so you need to do so [711] using keywords or maybe some [713] mathematical function or that sort of [714] thing the unfortunate thing about [716] reality is that a lot of these decisions [718] don't really work work one to one with [719] these procedural rules right they're a [721] little fuzzier than that and the cool [723] part about AI is it allows us to [725] basically use fuzzy logic in order to [727] determine whether or not something is in [728] one camp or the other now if that sounds [730] like an abstract example for you which [731] it was um a better one is probably uh [735] what I'm about to show you in a second [736] which I've showed multiple times before [737] which people are quite interested in but [739] essentially there are a lot of these [741] request for proposal websites out there [743] and a request for proposal website is a [745] website that basically just lists a [747] bunch of people that are looking for [749] um contractors or people to bid on a job [752] so upwork is a perfect example of one of [755] these platforms upwork has a giant list [757] of people basically being like hey I [759] want somebody to help me with make.com [761] and zapier hey I want somebody to help [763] me build a treehouse for my son-in-law [765] right just a bunch of like requests for [767] bids and then what you do as a [768] contractor or service professional is [769] you'll go in there and then you will bid [771] for that job the issue with these [773] platforms I find a lot of the time is [775] that there's just so many jobs that it's [777] difficult to filter out all the [778] irrelevance [779] and then focus on high signal to noise [781] and so AI is fantastic at basically [784] allowing you to do that with minimal [786] issues and what I've done here is I've [788] actually created a flow that goes on to [790] upwork pretty consistently I think this [792] do this once every hour or two yeah so [794] hour and a half it pings a resource [796] which in this case is called an RSS feed [798] it parses the description and then it [799] feeds it into Ai and a lot of people [802] that have been watching my channel have [803] been like hey can you break this down [804] can you actually go through this exact [806] flow in detail um and so I mean I've [809] sort of done that half and half in [810] another video but um this time I'm [812] actually going to focus on the AI bit so [814] anyway the first part of this module [816] here so first of all everything works [818] off of an air table the air table looks [819] like this we have a title column a [821] description column a status column URL [824] column you can click this to go to the [825] job URL uh and then a copyable message [828] column and these are really the four or [830] five most important columns we'll cover [831] everything else in a second but this is [833] just one example of something that you [835] could probably implement on a dozen or [836] more big requests for proposal platforms [838] where you're taking some information [840] from the resource adding it to a third [841] party data store like Google Sheets or [844] air table and then using AI to filter so [847] any who let me just stop waxing poetic [849] we grab the RSS feed items we parse the [851] description here using an HTML to text [854] module just because the description [855] field is always coming in as this long [857] HTML string and we want to minimize the [859] number of tokens that we're going to [860] have to pay for so we just want to [861] eliminate that as much as possible then [863] we feed it into basically our magical AI [865] module and the way that this works is um [868] we Define uh a bunch of prompts here the [871] first is a system prompt which just [872] tells the system or tells the module how [874] to identify and so we're telling it to [876] identify as an intelligent admin that [877] filters jobs easy enough right secondly [881] what we do is we Define a user prompt [884] and then we Define a bunch of examples [886] after that user prompt and so my user [888] prompt is hey we're an operations agency [890] that builds Outreach systems CRM systems [892] project management systems no code [894] systems and Integrations blow as a job [896] description filter it for relevance true [898] or false in Json some of the platforms [900] we use include big list of platforms if [902] relevant write a short introductory [904] Icebreaker note API Integrations are [906] good since we can develop them using no [907] code we don't develop full stock apps we [909] don't use Python telegram WhatsApp [910] Facebook bubble soft or Google Apps [912] scripts or chat Bots I add that line in [914] there because I just hate all of those [915] platforms we're not VA virtual [917] assistants and we don't work on very [918] tiny projects like Integrations that [919] will take less than 10 minutes to do or [921] those that require extremely fast same [922] day or 24-hour delivery I then also [924] provided some example client projects [926] that I built out for other people and so [928] these these are meant to be social proof [930] these are meant to be sort of big dick [931] projects that you know get people a [932] little bit uh interested or excited like [934] end to end project management for a 1 [936] million year copywriting agency that is [938] my uh company one second copy right over [940] here outbound acquisition system that [942] grew a Content company from 10K a month [944] to 90k a month and 12 month that's [945] sneaky but it's also my content writing [947] company uh monday.com CRM and project [950] management for recruiting company doing [951] greater than 1 million year that's a [952] client automated content generation [954] system for an SEO agency doing greater [955] than $10 million a year that's another [957] client and then click up CRM build for a [960] marketing company doing $1 million a [961] year that's that's another client so uh [963] I've given it all these projects and now [965] that I've told it what I wanted to do [967] that isn't enough I actually have to go [969] in then I have to give it a bunch of [970] examples and so that's what this pattern [972] is here where uh we have a system prompt [974] first then we have a user prompt where [975] we tell it what to do and then we have a [977] bunch of user assistant Pairs and this [979] is sort of training the model so have a [982] user pair here where I feed in basically [984] just all of the description of the job [987] as an example and so I'm saying hey if [989] we give you this job as an example [991] here's how I want you to [993] respond and so I feed it with an [995] assistant prompt that says Jason um [1000] curly braces result false reason this is [1002] about writing nothing to do with systems [1004] Icebreaker I think if I were to be smart [1006] about this I'd actually [1007] go and I'd put the result after the [1011] reason I would probably improve the [1013] quality now that I'm thinking about of [1014] the of the result yeah and I can get [1017] into why in the technical bit in a [1018] moment moment any who then there's [1020] another user prompt here with another [1021] example and then there's another output [1024] and let's just do this consistently [1026] across this whole [1027] thing I love make.com because I tend [1031] to um I mean I'm always learning and so [1033] when I go back to an older scenario or [1035] one that's been serving me well um and I [1038] read through it from top to bottom I [1039] just see so many opportunities for [1040] improvement here's another prompt from [1041] User it's as air table expert needed and [1044] then here's how I want it to respond if [1046] the reason is true so I'm going to go [1048] here and [1049] then delete that and then paste that [1052] over here good and then here's another [1055] example and so you can see I'm doing [1057] this quite a bit the reason why I do [1059] this as many times as I do is because [1060] it's just worth the money that I'm [1061] spending in tokens realistically it cost [1063] me a couple of cents every time that it [1065] does filtering and then uh for those [1067] couple of cents I basically just like [1069] save myself I don't know um maybe like a [1072] minute each and so you can imagine how I [1073] mean this is just me and I'm more of a [1075] freelancer at this point than anything [1076] but if you were to do this at large [1078] enough scale and you had a lot of people [1079] working for you in a company um it [1081] probably makes sense to do this um and [1083] maybe even give more examples any at the [1086] very end after I give it like six or [1087] seven example pairis I have a user [1089] prompt and this is my final prompt where [1091] I just feed in the same information that [1092] I fed in before I just do it using [1094] variables and then uh I've defined Max [1097] tokens as 250 I've set temperature to [1099] 0.3 because the temperature of a model [1101] is basically it's Randomness and I do [1103] not want it to be very random I want it [1104] to be deterministic and pretty simple [1106] I'm going to cover everything and [1107] anything need to know about temperature [1109] at the end of the video so if you're [1110] interested in the technical bits behind [1111] that stay tuned um and then I don't do [1114] anything for frequency penalty or [1115] presence penalty the response format I [1117] leave as text what I do next is I will [1120] then parse the output of the previous [1122] module just like I did in the other [1124] scenario here and that just makes it [1126] easy to work with and then I go through [1128] and I will just do a bunch of tertiary [1131] sort of like text processing function so [1133] I'll get the budget and then I'll split [1135] it up into an hourly or project job and [1137] then I'll add it to my a table and what [1139] I end up getting is I end up getting a [1142] couple things so obviously I get the [1143] title description uh URL and the rest of [1146] the fields but then if you remember I [1149] also added an ice [1152] breaker and that [1154] Icebreaker I've added to an introduction [1157] field here the introduction field is [1161] basically me telling the AI that I [1163] wanted to write a short again [1165] introductory Icebreaker um that I can [1168] use in the job application to later copy [1170] and paste into whatever the request for [1172] proposal website is and so in this case [1174] you know let's look at a good one [1176] here um I've worked on similar projects [1179] involving API Integrations and [1180] automation I'm confident I can help you [1181] with this task it's not really the best [1182] maybe this one's better confident on the [1184] man you're looking for he's make a com [1185] to build automation compan doing greater [1186] than1 million doll a year I understand [1187] the need for human readable [1188] documentation would love to help you [1189] with this great so this is sort of an [1191] introduction and then in air table what [1193] I do is I set um I set a formula field [1197] that looks like this I feed in so I [1199] concatenate that just means add text [1201] together the introduction and then I [1203] also have like a template that's just [1204] the same text every time and I just [1206] concatenate the two I put that in a [1207] formula field and then this now is just [1209] like a simple copy and paste sort of [1211] thing that I can do maybe a higher of [1213] mine can do that sort of deal uh makes [1216] it a lot easier and simpler to apply to [1217] jobs in this way and the only way or [1219] only reason why this is doable is [1221] because I've now implemented like a [1223] filter just do all the hard work ahead [1225] of time for me if it identifies a job as [1227] being worthwhile well then it can go [1228] ahead and actually even pre-write some [1230] of the work that I would be doing [1231] otherwise so I like to think it's a [1233] little sneaky and a pretty intelligent [1234] flow um I don't see a lot of other [1236] people doing this basically I don't see [1238] anybody else doing this aside from I'm [1240] sure a lot of the people that have [1241] started building it after I showed it in [1243] my uh in my upwork video uh 3 weeks ago [1247] uh but you know like outside of that [1248] small little realm uh very few people [1250] understand this and I think this is [1251] probably one of the highest leverage use [1253] cases um so I would I would try and [1255] build filtering into any app that I'm [1257] building or any backend workflow however [1260] possible one of the reasons why this is [1262] so powerful and this is the last I'm [1264] going to say about this is because [1266] artificial intelligence by nature is [1267] extremely flexible and flexibility is [1269] both its strength and it's also its [1270] downside if you think about it you know [1272] we're trying to Output code reliably [1275] here and you know [1277] if I mean up until very recently and [1280] when I say very recently I mean like [1281] literally in the last four or five [1282] months it was very difficult to get one [1284] of these large language models to Output [1285] the same code reliably it's only very [1287] recently we've saw that and so you know [1289] the flexibility in Ai and its ability to [1291] do fuzzy matching and all that stuff [1293] that's its strength but it's also a [1294] massive downside when you want to build [1296] like an Enterprise level or small [1297] business automation that's supposed to [1299] do mostly the same thing every time [1301] right but there's a way that you can [1303] work around that and that's what I just [1304] showed you instead of using it as the [1306] end all be all just use it as something [1308] that filters and then depending on the [1310] output whether it's a or b or left or [1312] right you know you can build procedural [1313] logic to take that fuzzy match [1315] functionality and then do something with [1317] it that's a lot more reliable a lot more [1318] stable so hopefully yall understood that [1321] um but yeah that's how you use filtering [1324] the third thing that I'm going to show [1325] you guys how to do is content generation [1328] now in a previous video I've actually [1329] shown or I've sort of revealed one of my [1332] big prompts for generating articles on [1334] the Fly and these are like quite heavy [1336] you know 1500 to 2,000 word pieces and [1338] these are very involved and they're very [1340] sort of high value um what I'm going to [1341] do in this video is I'm not going to [1342] show that cuz you guys just watch that [1344] other video if you want I'm going to [1345] show how I generate um proposal [1348] and I've also shown this in a previous [1350] video but I'm going to dive deep into [1351] what the actual prompt looks like this [1352] time and so the way that this workflow [1355] works is basically um during sales when [1357] you're you know about to speak with a [1359] pro or when you are um finished speaking [1361] with a prospect uh we're filling out a [1363] quick little form and that form just has [1365] a couple of questions one of the [1366] questions in the form uh that the form [1368] asks you is something like hey what's [1371] the problem the client is suffering from [1373] another question the form asks you is [1374] hey what's the solution you want to [1375] build for this and the really cool part [1377] about AI is you can take a very tiny bit [1380] of basically top level human instruction [1383] and then using AI you can multiply it [1385] into paragraphs upon paragraphs upon [1388] paragraphs upon paragraphs this is known [1390] as expansion and it's like one of the [1391] key ways that content is generated using [1393] AI reliably so what you do is you have a [1396] human provide some type of little [1397] snippet which in my case would be a [1399] problem or a solution and then you feed [1400] it into Ai and then have it blow it up [1402] and turn it into basically like a big [1403] proposal and so what I've done here is I [1406] have a discovery call and so when the [1408] discovery call form gets filled out we [1410] go to these type form modules which I've [1412] talked at length about in previous [1414] videos but this is just a simple design [1415] pattern to get you in the habit of [1416] separating the trigger um from uh [1420] basically like a testable module that [1421] you can like run whenever you want and [1423] so we're separating the source of the [1424] data from um I guess what's the best way [1428] to frame this that I haven't already [1430] done it just becomes a lot easier to [1431] test because then you can always just [1433] move this here and pull data from this [1435] module instead of that module and then [1437] just always have access access to it [1438] anytime that you want on demand you [1440] don't actually have to go out and fill [1441] out the type form but if that doesn't [1442] make sense let me know and I'm I'm more [1444] than happy to walk you guys through it [1445] any who um you feed the output of that [1446] into a gp4 module again and what I'm [1450] doing here prompt wise is I'm saying [1453] you're a helpful intelligent sales [1454] assistant which is slightly different [1456] rationale than I had previously um I'm [1458] then giving it the same pattern that I [1460] had before where I'm doing a user prompt [1462] to give it highle instructions and then [1463] I'm actually just giving it a bunch of [1464] user and assistant pair examples and so [1466] what I'm doing again is I'm saying hey [1468] we're an an operations agency that [1470] builds out on Outreach systems CRM [1472] systems project management systems no [1473] code systems Integrations below is a [1475] loose scope turn that scope into a [1478] highquality proposal in Json our clients [1481] are Enterprise so write in a Spartan No [1483] Frills tone that implies [1486] intelligence what I do after then is I [1488] basically feed it my own JavaScript [1491] object which I've or I am going to [1494] compile in a second the reason why I do [1497] this is because because feeding it in [1499] this format allows me to compress it a [1501] little bit I don't have to worry about [1502] any formatting and I think that this is [1505] just one of the many ways that you can [1506] communicate with a you don't have to do [1507] it this way but I just tend to like to [1509] structure everything into code blocks as [1511] much as possible so the input or the [1514] example in providing it is hey when I [1516] feed it with this code right which talks [1518] about some company that does X Y and Z [1521] then I want you to turn that into this [1525] huge much longer string of Jason that [1529] I'm going to use to feed into a proposal [1531] that I'm generating I do that again here [1533] with another user prompt where I talk [1535] about in this case this is uh some real [1537] estate company right and you know a lot [1539] of these are fictional um and then I [1542] have the same thing an assistant [1543] response over here where I basically [1545] blow this up into a bunch of variables [1547] there's like uh problem pitch one [1550] there's solution pitch [1553] there's title right so I'm getting it to [1555] generate me a title I'm getting it just [1557] to generate me a bunch of information [1558] based off of some small input this is [1560] the expansion that I mentioned earlier [1561] feed in maybe 200 tokens and then get [1563] out like 700 in response in this way AI [1566] is a multiplier for human leverage and [1568] like human productivity and then after I [1570] give it a couple examples I then just go [1571] to the actual request which is another [1574] user prompt and then I say business [1576] description whatever the business [1577] description is Problem whatever the [1579] problem is solution whatever the [1580] solution is tools whatever the tools are [1582] um these are all questions coming from [1583] the type form by the way if that wasn't [1585] clear [1586] already any who then feed it into Json [1588] again then I'll generate milestones and [1592] timelines and so I have a very similar [1594] flow set up here where basically all I'm [1597] doing is I'm taking one tiny text [1600] field which is rough timetable which [1603] literally just says a week or two weeks [1604] or 5 days and then I use it to generate [1607] a massive or a much bigger list of [1609] Milestones uh on how that project might [1611] actually work out in practice so maybe [1614] AI is generating a milestone for a CRM [1616] build and I'm saying okay great you know [1619] if it's one week then generate me five [1622] Milestones but write it intelligently [1625] and be fuzzy about it and turn That Into [1628] You Know day one we got Project X day [1630] two we got project y day three we had [1632] project z um you know that sort of thing [1635] and so in this way it's a very flexible [1637] sort of and very simple way to take [1640] literally two words like the number and [1643] then the word week or day into you know [1646] a very detailed or supposedly detailed [1648] breakdown of what the Project's going to [1650] look like in practice anywh who uh then [1652] we'll actually go and we'll send the [1653] proposal and I'm not going to harp that [1654] to death cuz I think most of the alpha [1656] in here was already gained that's the [1659] third um item and then the fourth item [1661] is scraping uh which is where we can use [1664] AI to basically you know we've pulled a [1666] bunch of text from or we pulled a bunch [1668] of HTML I should say from a website uh [1670] and maybe that's like uh you know like a [1672] a listing website or something like you [1674] guys probably saw on my red fin scraper [1676] or maybe it's somewhere else and then [1677] instead of doing the parsing [1679] procedurally we use AA to fuzzy match [1681] all of the text in the document and then [1683] extract only what it is that we're [1684] interested in and so if that sounds [1686] complicated uh it's really not here's a [1688] very simple flow that I set up to do [1690] this I'm starting with my website so I'm [1693] calling an HTTP request module you can [1696] find this by going to add writing HTTP [1698] and then getting this blue one with a [1700] little Globe inside of it and then [1701] clicking make a request that'll pull up [1703] this what you want to do is just put in [1705] the URL click get and then leave [1706] everything else as a default and click [1708] okay and then I'm just going to test [1710] this to show you guys what the output's [1712] like you'll see we got a bunch of HTML [1715] and where we're getting that HTML from [1717] is the actual web page that you know [1718] we're calling and so in our case it's [1720] this URL left click. a which so happens [1722] to be my awesome website service you [1725] guys should definitely sign up for um [1726] but you know we can see a bunch of data [1728] here that's uh on my browser that's also [1730] represented in this page right like um [1734] you know find the find the perfect offer [1738] automate your lead acquisition you go [1739] back to the website find the perfect [1740] offer automate your lead acquisition so [1742] it's the whole website it's just an HTML [1744] form what we can do is we don't want to [1746] just feed this into AI to have it [1747] extract stuff because it's just a lot of [1749] tokens and'll probably cost us money we [1751] want to feed it into an HTML detex [1752] parser instead and that's basically [1754] going to take as input this super long [1757] HTML string that we just outputed from [1759] the module 4 over here and then it's [1762] going to strip away all of those tags [1764] that we don't need and turn it just into [1766] plain tag text and in that way we're [1768] going to eliminate probably 90% maybe [1770] not 90% we're probably going to [1771] eliminate a fair amount of the text so [1774] we don't have any of those tags anymore [1775] and then what we can do is we can feed [1777] this into AI to have it scrape or [1779] extract stuff for us and so as an [1781] example for this what I'm going to do is [1783] I'm going to pretend that I'm an SEO [1784] company and one of my favorite things to [1786] do is run parasite campaigns on uh other [1789] companies and so I have a big Google [1791] sheet with a million in one websites and [1792] all I do is I pump those websites into [1795] this flow right so maybe a Google sheet [1797] is the the is the trigger here then I [1799] feed the URL into the get a website [1800] module and then for every website I call [1803] I parse the text and then I feed it into [1805] gp4 with a prompt that says hey below is [1808] a plain text straight from a website I [1810] want you to extract all the menu and [1812] navigation items and write them in this [1813] Json format and so I have a Json format [1816] down here that just says navigation [1817] items and then I have an array which is [1819] some examples home about Etc and what I [1821] basically want to do is since I'm this [1822] parasite SEO company uh my whole job is [1825] I just want to uh scrape all of the [1828] links on the page and maybe I could say [1830] this better maybe instead of saying I [1832] want to scrap all the menu items I could [1834] just say links but I'm just going to [1835] assume that I'm specifically interested [1836] in the navigation links CU some websites [1838] you know uh when you go to them up at [1840] the top they have nav bars and then [1842] inside of the nav bars there's like a [1843] nested other nav bar with like all the [1845] links and all the service pages right so [1847] this this is something that a lot of [1848] companies I think actually do any who [1851] after that we feed into a parse Json [1852] module and then that's that so let's [1855] just run through this end to end and let [1856] me show you how powerful the extraction [1858] features can be the output of this text [1861] is like a million in one let me see here [1864] how many tokens or how many words okay I [1866] don't know oh it actually looks like [1868] there was an error probably outputting [1869] the Json weirdly [1872] enough [1873] H yeah yeah there was an error there um [1876] it's probably because I'm using the new [1877] model yeah the new model is uh [1879] historically uh less reliable than the [1881] older models so I'm just going to use [1882] 0613 for this run this [1886] again [1890] okay [1891] great looks like that worked um so [1893] basically we took uh I don't know um how [1897] many how much text [1901] here we [1904] took about 1,00 or 12200 words and then [1908] we instantly within 3 seconds extracted [1910] only the items that were relevant to us [1912] which in my case is all the navigation [1914] item links this might be something that [1916] would take a virtual assistant like 3 or [1917] 4 minutes per page we can do it another [1919] 1 second for you know just a few cents [1921] and so I don't mean that you guys should [1924] be building scrapers for a living just [1926] because you can do stuff like this I [1927] just mean that there are probably tons [1929] of workflows where you guys can break [1932] those workflows down into systems that [1934] involve extract like uh uh scraping or [1937] pinging a resource and then another [1938] system that might involve extracting [1939] data from that resource and that might [1941] be enough to save your company or maybe [1943] the company whose systems you are [1944] building like hundreds of thousands of [1946] dollars a month maybe make them a bunch [1947] of money right a lot of options here a [1949] lot of opportunities and it's just for [1951] people that know how to harness and sort [1952] of Leverage AI uh the right way so yeah [1956] that's that for the systems here I [1957] wanted to frontload this video with [1959] examples what I'll do now is I'll talk a [1960] little bit about the technical bits [1962] behind um artificial intelligence and I [1964] feel confident talking about this [1966] because um like we've been using AI for [1969] better part of three and a half years [1971] now I would say um I was using it before [1973] I started 1 second copy I was obviously [1975] using it while I was running 1 second [1976] copy trained over 30 maybe 35 writers on [1979] how to use this technology in such a way [1982] so as to minimize our token usage but [1984] also maximize the perceived quality of [1986] the results so I'm very familiar with [1987] this I also know how to build models um [1990] this is a skill that I thought I was [1991] going to have to use like three years [1993] ago when all of this stuff was just [1995] coming to a four and I was starting to [1996] see the potential of this technology so [1998] I actually went out and I learned like [1999] the math behind it I spent four months [2001] locked in little Sky Box in downtown [2003] Vancouver little shoe box apartment uh [2005] just reading all about back propagation [2007] and stuff and I got to the point I could [2008] build these language models and it's [2010] given me a very in-depth understanding [2012] of I think some of like the more [2013] mechanistic bits that most people that [2015] might consider themselves like prompt [2016] Engineers or whatever are missing um as [2018] an aside you do not need to know how to [2019] build these things I just I didn't waste [2021] my time I'm glad that I learned how to [2023] do this but it turns out that the uh the [2026] moat here is not your knowledge because [2028] anybody can learn to build this stuff [2029] within like a month or so the moat here [2032] is access to billions of dollars of gpus [2034] so if I had billions of dollars of gpus [2036] we' be calling this puppy GPT Nick but I [2039] do not have millions of dollars at gpus [2041] so we're calling it open AI or whatever [2043] U anyway I feel very confident that [2046] these tweaks are essential basically if [2048] you want to be like a high performing [2049] prompt engineer uh so the first one is [2051] pound-for-pound the fewer tokens that [2052] you use in a prompt the better your [2053] model will perform basically car blanch [2056] this doesn't mean that if you have you [2058] know a prompt earlier like I showed you [2060] with like 10 examples then you have [2061] another prompt later that it show do [2063] with zero that the one with zero will [2064] perform better just cuz there are fewer [2066] tokens it doesn't mean you just be like [2067] yo write content good please and then [2069] it'll do a great job but what this does [2071] mean if if you have a prompt that's [2074] 2,000 words and then you can find a way [2076] to keep all of the information preserve [2078] all of the instructions in that prompt [2080] but then cut down the word count to like [2081] a thousand then the large language model [2084] will perform a lot better with a th000 [2086] tokens than 2,000 and the reason why is [2088] because statistically if you think about [2089] it like this is a big math equation and [2092] in autor regressive models which is what [2094] like the GPT family the clouds the [2096] anthropics whatever all these models are [2098] all auto regressive models the way they [2100] work is um basically you know there's a [2102] bunch of text and then you want to [2105] generate the next token and in order to [2107] generate the next token you need to look [2108] back at all of the texts that's been [2109] generated and fed into it and then [2111] perform this big mathematical equation [2113] basically multiplying every single like [2115] numerical representation of every word [2116] and token together to get some number [2118] that can then help you evaluate the next [2120] token it's basically what's happening [2121] under the hood now because you know [2124] we're dropping zeros every now and then [2126] we're rounding numbers and that sort of [2127] thing the further on the text goes and [2131] the longer the prompt becomes the lower [2134] quality that that next token Choice also [2137] gets and so if you have a choice between [2140] two prompts both that have the same [2142] information density but one that's 2,000 [2144] words that's 1,000 words always go with [2146] the one that's 1,000 words not only [2148] you're going to be saving twice as much [2150] in token costs but you're also going to [2151] be getting a lot higher quality response [2154] so that's one and that's something that [2156] I think that you know if the vast [2157] majority of people watching this just [2158] implemented that your prompts would [2160] probably be better than 90% of of [2162] everybody else's on the internet [2164] today the second is um the difference [2168] between F shot and then zero shot now [2171] I'm looking at this example now this [2173] isn't actually what I wanted to show you [2174] I think this is like a special paper [2179] um let's do [2182] this maybe graph I just want to show you [2185] guys like a visual here to show you [2187] um how the prediction accuracy [2190] works okay yeah that's pretty that's [2193] pretty [2194] solid uh this is basically like a [2196] breakdown of model performance um based [2200] off the number of examples that you give [2202] the model and [2203] so zero shot just means giving it [2207] instructions and telling it hey write me [2208] a poem one shot means giving it [2212] instructions saying hey write me a poem [2214] and then saying here's an example poem [2216] two shot means doing that twice three [2218] shot means doing that three times five [2220] shot means doing it five times few shot [2223] in this case just means doing it at like [2224] between one to maybe I don't know like [2225] 30 times in the literature and so what [2228] you find is the performance will go up [2230] basically with the number of examples [2231] that you provide you'll see that um it's [2233] not always a massive performance bump I [2235] mean here the accuracy on this specific [2237] task coqa was like maybe 5% difference [2241] but you can imagine now if you're [2242] writing content or you're doing some [2243] like Enterprise application where you're [2244] sending hundreds or thousands of [2245] responses per day [2247] that 5% can make a really big difference [2248] to your bottom line right and so what I [2251] would recommend everybody here get in [2252] the habit of doing is don't just do like [2254] zero shot don't just tell it to do [2255] something um always add a couple of [2257] examples you know like when we were [2260] generating the proposal for instance we [2262] weren't just like telling it generate a [2264] proposal based off this we we showed it [2267] hey if we feed this in we want this to [2269] be the exam the result then if we feed [2271] this and we want this to be the result [2272] now I want you to try with my new data [2274] and the idea is you hope that it will [2276] learn the relation ation ship between [2277] input and output and sort of model some [2279] deeper like you know function so always [2283] do um more than less let me copy this [2287] puppy in here just so we have like a [2290] visual example of what's going on the [2292] reason the last image didn't work by the [2294] way is because it showed that the uh one [2296] shot performance was worse than the zero [2298] shot and I think that was like a [2299] statistical abnormality that was only [2301] present in that in that model I may be [2303] mistaken but I'm pretty sure that that [2305] was that was that so yeah generally just [2307] add more prompts this does go direct at [2309] odds with having a longer prompt by the [2311] way so there's like a fighting sort of [2313] effect between the length of the prompt [2315] going up and then that having an impact [2316] on the performance versus the number of [2317] examples going up and then having an [2319] improvement in performance so be careful [2320] with it obviously the third is uh if [2323] you're writing content so if you're [2324] doing some type of content generation [2325] application always use what's called [2326] markdown language if you don't know what [2328] markdown language is uh it's pretty [2330] simple like let's say that we have a [2332] we're trying to make a Google doc and we [2333] want the Google Doc to look like this [2334] heading one some story introduction [2336] heading 2 some stor sub header heading [2338] three right this is what we want our [2339] Google doc to look like well if we're [2341] using Ai and this is just the open AI [2343] playground it's just a way to test the [2345] API inputs and outputs if we're using Ai [2347] and I want to write heading one and then [2349] I want to make it big how do I do it [2352] there's no lever available to pull to [2354] make that text Big right we simply lack [2356] the ability and so the way that you get [2359] around that is with markdown format [2360] markdown format is like a universally [2361] understood format in text where if you [2365] put a hashtag to the left of a line that [2367] just means it's a heading and so this is [2369] a heading one this would be a heading [2372] two and this would be a heading three so [2376] if I wanted to just reproduce [2378] this these two pieces of text are [2386] equivalent yeah so this now is [2389] technically equivalent just in markdown [2391] to this text and the cool part about [2393] make.com is make.com offers a variety of [2397] modules if I just type markdown here I [2399] can select a markdown to HTML module [2403] where I can then feed this Tex [2406] in [2408] here and then run just that and you'll [2411] see the output is now HTML and now that [2414] we have the HTML we can we can feed this [2415] in anything we could just like feed this [2417] into a Google doc and then use that HTML [2419] to like automatically create all of [2421] these headings if we wanted to and so [2423] yeah just you know if you're generating [2424] text for any sort of writing purposes [2426] just use markdown um it's a hack that [2429] you know we found probably two and a [2431] half three years ago to just be way more [2432] effective because otherwise you're copy [2434] and pasting stuff it's just not the same [2436] um if you want to like confirm this go [2438] to markdown live preview.com and then [2441] just like look at text with uh with [2443] these hashtags if I had a hashtag here [2445] and then a space this turns into a [2447] heading one and so this is basically [2449] like the the HTML version of this um [2453] yeah so there's that and then the last [2455] thing that I'll talk about and this is [2456] sort of sad very near and dear to my [2458] heart is that modern models are uh [2460] they're actually a lot lower quality in [2462] terms of output than older models like [2464] just in terms of the sheer intelligence [2466] of artificial intelligence Believe It or [2468] Not uh I would say these models were a [2469] lot smarter about a year ago to maybe a [2471] year and a half ago and that's because [2473] what happened between a year and a half [2474] go to now is open AI got very concerned [2477] open Ai and th opic claw they all got [2478] very concerned about uh obviously the [2481] content being used for poor purposes and [2485] uh you know they wanted to sort of like [2487] restrict all of the things that could be [2488] said with these models cuz they're [2490] finding that some of them were [2491] generating you know quote unquote toxic [2492] outputs and that sort of thing which I [2494] understand if you're a billion dollar [2495] company the last thing you want to do is [2496] get sued because you have some racist [2498] Nazi model right um but because the way [2503] that they trained it was called [2504] reinforcement learning through human [2505] feedback rhf because of the way that the [2508] rhf was done it's really dumbed down the [2511] quality of the outputs and so model [2514] outputs today are just really they all [2516] have this distinctive tone of voice and [2518] it's all very happy go-lucky and like [2520] hello I'm more than happy to assist you [2522] in a world where blah blah blah blah [2523] like you could see that from a mile away [2525] if you're even modly observative and [2527] You' know that that's Ai and so that can [2528] take away some of the fun obviously [2530] because obviously we're trying to [2531] automate humans out of uh existence [2534] right we're automating things that you [2536] know realistically should be automated [2538] and uh this sort of makes it more [2539] difficult to do so so there are a couple [2541] hacks to get around that and the [2542] simplest and easiest hack is just to use [2545] like if you wanted to write [2546] me a story about Wales uh just say use a [2549] Spartan utilitarian tone of voice this [2552] just cuts out all that um it's [2554] going to be less interesting and less [2555] exciting of course but it it will be [2557] logical it'll be intelligent it'll be [2559] very straight to the point so in a time [2561] before man Wales rule the oceans vast [2562] and size their dominance was in [2564] challenge migration dictated their life [2565] north to south following the food now [2566] imagine if I remove this it's going to [2569] wrate some happy go-lucky [2573]  actually that's not that bad [2577] yeah it's not that bad at all maybe a [2579] better example would [2581] be write me an article about [2588] Wales yeah I mean I take that back I [2590] don't know why but it's doing a pretty [2591] good job [2592] here oh never mind it's [2596] uh yeah I guess because of my increased [2598] temperature it's just devolved into [2599] absolute Bonkers okay I'm going [2602] to stop that here before I get myself in [2604] trouble we generate a mini Nazi model um [2608] a Nazi whale okay yeah so that's more or [2611] less it those are my those are my four [2612] tips um I would just encourage you to if [2615] you're using this for some type of [2617] content generation purpose make sure to [2618] use markdown make sure to provide a [2619] couple examples of what you want make [2621] sure to keep the token count as low as [2622] possible and the information density of [2624] your prompt as high as possible and then [2626] anytime that you're getting this to [2627] perform applications which you want to [2629] be logical and [2630] consistent add a token to a prompt like [2632] Spartan or utilitarian or something like [2635] that that in output it'll substantially [2637] improve the quality of what you get [2640] awesome thanks so much for watching guys [2641] it was really fun to put this together I [2643] have made a fair amount of money with [2645] artificial intelligence over the last [2646] couple years and I've sort of been [2647] looking for an opportunity just to talk [2649] about some of the hacks and techniques [2651] uh that I've built on my way up here I'm [2653] almost done my 30-day video challenge [2655] just got a couple days left if you guys [2656] have anything specific that you want me [2657] to bring up or talk about in a future [2659] video now's your time after I'm done the [2662] 30-day daily posting challenge I'm still [2663] going to post on YouTube I'm just going [2665] to dial back the volum a little bit so [2666] that I can improve the quality of every [2669] video and then make sure that the things [2670] that I'm talking about are new and [2673] exciting and they're always provide some [2674] type of value so yeah if you got [2676] anything that you want me to talk about [2677] specifically leave it down below as a [2678] comment otherwise like subscribe do all [2680] that fun YouTube stuff and I'll catch [2682] you in the next video

Video: https://www.youtube.com/watch?v=fBCpD4rIm5I
Title: Watch Me Build A Real Make.com Client Project For $2.5K
[0] hey everybody in this video I'm going to [1] show you a real CRM buildout for a [4] client with make.com automations that [5] I'm charging about 2500 USD for this is [8] very much on the cheaper end of my [10] builds but I wanted to do this at this [11] price point uh just to show you guys [13] what an actual project and around that [16] range might look like I want to show you [17] the thoughts that I'm having um I'm [19] going to use some mind mapping software [20] just to show you guys what the flow [22] looks like I'll even run through some [24] project management things like how to [25] confirm deliverables with a client [26] before you proceed and what I want this [28] video to be is basically like the end be [30] all for what an actual make.com [32] consultant uh workflow looks like I'm [35] going to try and do it from start to [36] finish depending on the amount of time [37] that we have in the video I may be able [38] to get like 80 or 90% of the way there [41] uh and then my goal is that by the end [42] we will have something that I can send [44] to the client and then say are we good [46] to go so if that sound like something [48] you're interested in if you are building [49] your own make.com automation agency or [51] maybe uh your freelance Consulting [53] hopefully this is the video for you stay [55] tuned and let's get into [58] it [62] okay so first things first the way that [64] I do these projects in reality is I [66] usually break them down into three steps [68] the first step is I use some mind map or [70] some visualization software like [72] whimsicle which is one of the most [73] beautifully redesigned websites I've [75] ever seen and I'll use whimsicle just to [78] build out sort of a conceptual highlevel [80] overview of how the client wants the CRM [82] to look from start to finish and then [84] I'll get them to confirm it and then [86] assuming that they've confirmed it um [87] I'll then start actually building out [89] the project and the way that I do the [91] project is in two stages I do the MVP [93] first and then assuming that the MVP [95] works for the client and they like it [96] and you know it has all the bells and [98] whistles that we've sort of agreed to [99] with the highle flowchart um there I'll [101] usually make a couple of minor edits [103] from MVP to final deliverable stage uh [105] and they'll usually bundle in some type [107] of ongoing maintenance usually like [108] about a month out just to make sure that [110] the person knows how to use the CRM [112] their company is adhering and adapting [114] to it and everything is successful right [116] because I I want to be able to work with [118] these people long term I just don't want [119] want to do tiny little oneoff projects [121] here or there so whimsicle is the [124] flowchart software and that's where I'm [125] going to start with this client I've [126] actually done a bunch of the work uh [128] just earlier before I started having a [129] conversation with my friend and he was [130] just like dude you should totally film [132] you doing this people would love it um [134] but I'll I'll run you through and then [136] I'll walk you through the logic up to [137] the point where I am and then where [138] we're going to go from here so this is [140] the Whimsical flowchart that I built out [141] the specific client is a photography [143] client and they want a CRM um that [145] essentially allows them to automate a [146] large portion of the work that they're [148] doing right now manually now this client [149] in particular has never used a CRM [151] before they're very new to this sort of [153] process they're a freelancer making [154] about $20,000 a month and the CRM [157] basically represents um them going to [159] the next step I guess in their [160] photography freelancing they're very [162] very popular and and quite famous from [165] my understanding in the uh it's one of [167] the big Australian cities like nightclub [169] scene uh and this is yeah this is [171] hopefully what's going to allow them to [172] scale past that you know the 50 100 200k [175] a month and Beyond so what this is is I [177] basically whipped up this Whimsical [179] flowchart and um it starts with leads [182] being added and then it ends with [183] everything uh basically getting ready [185] for project management and in the next [187] minute or so I'm just going to walk you [188] through what this looks like [189] conceptually and then we can brainstorm [191] like how how exactly we build this so [193] there are two components to this one is [194] these little white boxes with text [196] inside that's just like the the action [198] or the trigger and then there's a bunch [200] of markup that I've done here in blue [202] just to explain to the client how this [203] is all going to work so first we need a [205] way to get the lead into the system and [207] so there are three different ways that [208] I've written here the first is a lead is [209] add manually via type form the second is [211] a lead ads themselves via type form this [213] is preferred because it doesn't [214] obviously require any of our time and [216] effort so you know maybe the uh the [218] photographer or the company or the [220] salesperson would send a type form to [222] the client get them to fill it on their [223] own and the last is sort of like a stub [225] that I'm building out because the client [227] has mentioned that they've had this [228] before and I just want to add a little [230] bit of additional value so I'm just [231] going to build it a stub for a flow that [233] automatically parses a new Facebook ad [235] lead email um and then all of these [237] three are going into the same place [238] they're going in the clickup and what [240] we're doing first is we're obviously [241] just checking to see if the lead exists [242] in clickup that's sort of the most [243] important part right we don't want to [244] make duplicate records so assuming that [246] it doesn't exist then the next step is [248] we will create a lead record in the CRM [252] with the status of meeting booked now [254] the reason why it's meeting booked is [256] because um the form that we're using [259] we're doing this in type form is going [260] to have a calendly widget that the lead [263] uh is going to have to like accept and [265] then specifically book A Time In in [267] order to move forward with the process [268] this is because this photographer is in [270] very high demand obviously and I want to [272] provide them a way to like filter out [273] people that aren't super interested um [275] there are also workarounds to this so [277] I'm not just going to force everybody in [279] there I'm also going to allow um you [281] know them uh that that's what the step [283] is for so I'm also going to allow the [285] photographer the salespeople that [287] eventually hire us to add leads manually [289] themselves and you can imagine how they [290] might do that by like texting or getting [292] Instagram DMS or maybe calling the [294] client and then just filling out all [296] that information manually so there are a [297] couple ways into the system but yeah [299] ideally people would add themselves via [301] typee form and then they'd book in and [302] when that happens they would be with a [303] meeting booked status in this yeara now [305] we'll do a couple other things there [306] we're going to add what's called a [308] discovery call form link if you guys [309] aren't familiar with this process um [311] sort of design or this design pattern I [314] should say it's where as you have a [317] meeting with the client so maybe I'm [318] having a meeting with you right now I [320] ask you a couple pointed questions and [321] then as you answer the questions I will [323] write down your answers or maybe uh [325] important information that I'm going to [327] use later to like create a proposal or [329] something like that some type of sales [331] asset so maybe you say hey I'm looking [333] for the event shoot package and I'm like [336] hey what's your budget and you're like [337] oh it's $1,500 to $2,000 so I'm actually [339] going to write all that stuff down and [341] then when the meeting ends I'm just [342] going to press enter and then boom [343] you're now in my system with a bunch of [345] additional information um potentially to [347] enrich your record and then allow us to [349] do sales automation later on so a very [351] common design pattern and it's sort of [352] like the first step to systematizing any [354] type of sales flow so I'm going to make [356] a discovery call form with you guys in a [358] sec but what I need to do here here is I [359] need to add a specific link that links [361] up that Discovery call form to that [364] specific clickup record and if any of [366] this is unclear it'll become much [367] clearer over time now this client wants [370] to have two different flows they want to [372] have one for just um base level event [375] shoots and an event shoot is just like a [377] nightclub or a bar or a promotions [379] company hiring them to come out and then [381] film for a couple of hours and obviously [384] these are a lot lower quality than what [386] we want these are between $500 to $1,000 [388] for night usually [390] probably takes like between 5 to 10 [391] hours to get done so the company isn't [393] making more than $100 or $200 an hour we [395] would call this low value uh but in [397] order to increase their bill lels and [398] increase their revenue uh what he's [400] trying is he's trying a Content strategy [403] program where instead of just doing a [405] one-off event shoot he's offering to [407] pitch nightclub's bars these promotions [409] companies with some type of regular [411] content creation schedule where him uh [413] and his team are going to come in [415] presumably to their location at certain [417] times and then you know prod produce [419] this big content calendar on social [421] media that makes them look super [422] glamorous and maybe just you know Hypes [423] up the club Hypes up The Nightlife uh or [426] or the corporate event I think you do [427] some of those as well so these leads are [429] obviously a lot more impactful and [431] they're a lot more expensive and [432] generally when you have two tiers like [434] this um you want to structure the [437] project management of different packages [439] according to how much time and energy [441] they take um and how much money they're [444] making you so you want to make sure the [445] ROI and the time that you spend is high [447] and so why I'm bringing that up here is [449] the event shoots are going to be very [450] simple we're just going to have a [452] kickoff phone call to confirm the [453] details and then we're going to send [455] them a stripe link with basically like a [457] terms and conditions we're going to [458] update the status of the record to [459] awaiting payment and then we're just [460] going to do follow-ups until paid or [462] lost if it's paid the status has changed [464] into closed one and then we're going to [467] create a new record in like a different [469] project management space to actually [470] start the project and manage it so this [472] is a very quick and easy process you can [474] imagine the kickoff phone call might [475] take like five or 10 minutes it's just [477] like hey man what's going on okay cool [478] got your Det details right over here [480] sweet that sounds good any additional [481] questions for me no sweet I'm going to [483] send you over a proposal with a stripe [485] Link in a sec let me know when you got [486] it when you paid then we're good to go [488] right very simple process the content [490] strategy lead though considering the [491] leads are probably going to be five [492] times to 10 times as expensive or as [494] valuable I should say we're going to put [495] a lot more time and effort into them so [497] we're going to book a Google meet call [499] so it's going to be a video call um the [502] salesperson or the consultant is going [504] to come out there and then give them [506] this grandiose meeting and then they're [508] going to fill out that discuss Rec call [509] form that I uh alluded to earlier just [511] to make sure that we have everything [512] that we need to automate portions of the [514] process later on so then we will update [518] the status to proposal sents instead of [519] a waiting payment it's proposal sent and [521] then um we'll send the proposal and [523] we'll also send an invoice and I think [525] we're going to do probably 50% deposit [526] 50% payment afterwards we'll do daily [529] follow-ups until paid or lost then the [531] client signs and then the status has [532] changed to a waiting payment when the [533] invoice is paid same thing everything's [535] closed one and then this is sort of like [536] the end of the CRM part and the [538] beginning of the project man management [539] part so I'll cut it there anything in [542] blue is just markup where I've provided [544] some context um a lot of the time if [545] somebody hasn't used a CRM a lot of [547] these terms are unfamiliar to them and [549] that sort of thing so when I deliver one [551] of these mind maps I'll usually just you [552] know write a big well I don't know if I [554] want to call this big but certainly a [555] few hundred words just to give them some [557] context and to be clear you don't just [559] do this every time you get a client you [561] build out one CRM or project management [564] flow and then you use that as your [565] template and then you just iterate on [567] that um and then apply that to different [568] clients NS so it's not like I made all [571] of the stuff up from scratch I sort of [572] had a general template and then I took [574] that template and then modified it [576] specifically to this person's flow and [578] you know the needs and and values of [580] that company So that obviously saves you [582] a bunch of time moving forward right and [583] that's part of automating your own sales [584] process okay great so now that I've [586] given you guys a high level overview why [587] don't we actually go and we build the [589] thing now full disclaimer I have already [591] started building the thing and so I [592] usually like to start from scratch with [594] you guys uh just because I don't know it [596] just seems so much more valuable and [598] authentic but what I'm going to do in [599] this video is I'm just going to walk you [601] through what every column in the CRM [603] does and everything that I did to get to [605] this point and then we'll continue on [607] with the build so this is clickup if you [609] guys aren't familiar with it it's an [610] awesome project management and CRM tool [613] and the way that it works is essentially [614] we have a bunch of different spaces and [616] spaces are broken down into folders and [618] they're broken down into lists and so uh [620] if you wanted to create a new space you [621] click this button add a bunch of [622] information here and then you'd have [623] like a top level kind of container for [625] the rest of the flow now I've called my [628] top level container CR M that's actually [630] sort of silly of me so I'm going to [631] change it right now and I'm just going [632] to call this uh I don't know I'll just [634] call this [637] photography assuming that maybe this is [638] like a service that they're offering [640] this list I'm going to rename this and [642] this is going to be the [644] CRM and then I'm also just going to make [646] a new list I'm going to call this [647] project [649] management now lists are basically just [651] databases right I think we're all quite [653] familiar with the way that they work [654] sort of like Google Sheets as you can [655] see we got rows we got columns we got [657] all that fun stuff and here what I've [659] done is I've added a bunch of [660] information that is going to be relevant [662] to um the photographer and to the [665] company that he's running he's obviously [666] going to need a bunch of information on [667] where the event is taking place right [669] what stage the event uh person is in the [672] date that the record was created all [674] that stuff and so that's what I've done [675] here I've created a sample record here [677] called Nick [678] Sur I've uh added a date created column [681] so we can see when the record was made [684] I've also added a date updated column [685] and this is a pattern that I'd encourage [687] a lot of you guys to get into especially [688] on the sales side of things because [689] response time is so important and it's [691] good to see which leads are going stale [693] uh I then have a stage column which is [694] what's called a drop down and the way [696] that I've broken the stages up into are [699] there's intake which is a catchall just [701] for any lead that's entered the system [702] that is unprocessed there's meeting [704] requested there's meeting booked [706] proposal sent awaiting payment and [708] closed and as I alluded to earlier in [710] the big mind map a lot of the time leads [712] are just going to go directly to meeting [713] booked and then if they are an event [716] shoot lead then we're just going to go [717] to a waiting payment after sending them [718] an invoice and then if they are like a [720] bigger higher quality content strategy [722] lead we're going to go from meeting book [723] to proposal sent proposal sent to [724] awaiting payment and then awaiting [725] payment to closed I've added a type [728] field here so we see there's an event [729] shoot type and then a Content strategy [731] type I've added an asse the assign is [733] just going to be whoever is in charge of [734] that event you can imagine how building [736] this infrastructure now will allow this [738] client to scale and add you know more [740] contractors more in-house employees over [742] time without having to like radically [743] change a system so always be future [745] thinking in that way and then I've added [748] uh two Fields here one called start date [749] now this is a built-in clickup field [750] unfortunately I can't change the name [752] but I think the name is representative [753] here and that's the date and time that [755] the event is beginning and then I have a [757] due date field and I wish that I could [759] change this so that instead of due date [760] it said something different it's [762] possible there's a Click app that allows [764] me to change the names of these fields a [765] Click app is like their own little [766] plugin but I'm just not going to use it [768] for Simplicity sake the due dat is [769] basically going to be the end time of [771] the event and then the start date is [772] going to be the the beginning time [774] unfortunately just due to a quirk with [775] clickup you can't add um well it's [777] annoying to add [779] custom uh it's annoying to add date [782] times to custom date fields you can do [784] dates but you can't really do times that [786] well again I think there's a Click app [787] that may assist with that but I'd rather [789] not bother at least for now then there's [791] an address column and so I just chose a [793] random I think this is type forms [795] address actually so I just pasted that [796] in there and then there are columns for [798] first name last name email and then [799] phone number and this is all the [801] information that uh the client wants to [803] add here so that obviously they know who [805] they're talking to they have all the [806] information they need to do that quick [808] call or that quick email and uh yeah now [811] obviously there are more fields that you [812] can add here and to be completely honest [814] I would encourage anybody that's [815] designing a CRM to like have more Fields [817] than they think that they need um you [819] can always just hide them it's not like [821] the data in every single column needs to [824] be filled out all the time uh having [825] more information basically just allows [827] you more opportunities to do cool [829] with it later on there is a caveat to [831] that if it's client facing and have and [832] you're forcing the client to fill out [834] way more information than realistically [835] you need in order to get this thing [837] going probably not a good idea because [838] because anytime you're selling a booking [840] form or something like that you always [841] want it to be as uh low friction as [843] possible but yeah just a sort of a just [845] a sort of a high level overview i' [847] always encourage you guys to do [848] that okay now um oh obviously we can [852] also add like a revenue field or [853] whatever here too but I'm just leaving [854] that out for now last thing is I grouped [857] this by stage so I went down here to [858] custom field stage because I want us to [861] be able to quickly see who is in the [863] intake who's in the meeting requested [864] who's in the meeting booked all that [866] sort of thing all that sort of stuff the [868] way that we're [869] in clickup is um you'll see there's just [872] like a lot more visual separation if we [874] do it that way so now we see who's in [875] intake now we see who's in meeting [876] requested yeah it's just a a much faster [879] and easier way to keep things organized [880] anyway I'm going to delete these records [881] and then I'm going to move on so now [883] that I have all of that uh we actually [884] have to go and design the systems for [886] that right so I'm going to go back to [888] the scenario Builder and show you guys [890] how I approach this basically from the [892] ground [893] up sorry if my voice is a little bit off [896] today I'm uh still getting a cold [899] okay so I've created a couple of what I [900] call STEM or like nub scenarios and [903] basically what I'll do my very first [904] pass through is I will go to the Mind [906] map that I've built out here or the [908] process workflow if you want to be all [909] fancy and then I'll look at all these [911] steps and then I will create scenarios [914] and then name them uh for the functions [916] that I want each of these steps to do [918] and then I won't actually build them out [920] I'll just name them and maybe like pick [921] one module the module that's going to be [923] the uh the trigger and then I'll go back [924] to the Mind map and just see if there's [926] anything else and then you know [927] iteratively go back and and and forth [929] and then once I have all of the almost [931] like the skeleton of the process [932] workflow uh then I'll actually go back [934] and I'll start with the first thing and [935] then I'll just work my way down so what [937] I did here is I basically looked at this [939] beginning flow and I said okay leads [940] added manually via type form leads add [942] themselves via type form I know that I'm [943] going to have to have an automation that [944] uses a type form as a trigger um so I'm [946] just going to build that out and that's [947] what I did here with new booking inquiry [949] add to click up likewise then I looked [952] here and I said okay new Facebook ad [953] lead H that's a different route so I'm [955] probably going to need something that [956] would like take a new Facebook ad lead [958] Maybe by mail hook or something parse [959] the email and then add that to click up [961] right and so that's what I did over here [963] so we have the first and then we have [964] the second then I'm sort of looking [966] through here okay create lead record [968] with meeting books add Discovery call [969] form link we can probably do all of this [972] with the first scenario that adds it to [974] clickup cly sends meeting invites since [976] they're filling out a cly form in the [978] form since they're filling out a uh [980] calendar in the Forum we're not going to [982] need to do that [984] ourselves and then we need some type of [986] Discovery form so and then we need to [988] see when the discovery form is filled [989] out so that's one thing that I can add [992] right now that I haven't added here [995] um not actually going to need this so [997] let's just delete this create a new [999] scenario and then let's call this new [1003] discovery call form filled and let's [1007] just say update lead and click up and [1010] then what am I going to use for this I'm [1012] probably use type form so let's go to [1014] type form click that in and then I'm [1017] just going to watch responses [1019] I do have to choose a hook and add a [1021] form so I'm going to go [1023] into the workspace [1025] here create a new form start from [1028] scratch I'm just going to call this a [1030] discovery call [1034] form okay and then I'm going to remove [1036] images because I think they're ugly and [1038] then I'll go down to design and just add [1040] uh my own design that I find much sexier [1042] than the default ones awesome so we [1045] should now have one called Discovery [1046] call for good so I'm going to go back to [1048] type form and I'm going to add that as a [1050] hook so I'll say new discovery call form [1053] submission example now keep in mind I'm [1056] doing this on my own um my own uh [1059] make.com account uh simply because the [1062] client has yet to give me or sign up to [1063] a make.com account on their own and so [1065] what I am actually going to have to do [1066] is copy all these over to his account [1069] which kind of sucks you want to avoid [1070] that wherever possible because it adds [1071] like another 20 minutes or so and then [1073] you also have to like reauthenticate all [1075] the accounts so um that's what I'm doing [1077] here that's why if you guys are paying [1079] close attention we're sort of logged [1080] into my account the same one that I do [1082] normally what I'm doing next is I'm [1084] adding a two-step type form design [1086] pattern that I always add which is [1087] basically where I will watch the [1089] respones it comes in I will then use [1091] that as the trigger to my flow but then [1093] I'll actually have another step that [1094] lists all of the responses afterwards [1096] and the reason why is because I want to [1098] be able to reference only this module's [1100] variables so that I can test really [1102] easily by doing this unlink list [1104] responses and then run [1106] ones so that's that I'm just going to [1109] save this for now and then we'll go back [1111] to the top level here just to see if [1112] there's anything else that we need to [1113] skeleton out before we actually go [1115] through and build the rest of these [1117] systems so let's go back to the Mind map [1121] um client science has change with [1124] waiting payments invoice paid says [1125] change closed one so we need a scenario [1127] that takes a record in closed one uh [1131] that basically watches for a record that [1133] has been changed to closed one and then [1134] does something with it so oh man I have [1137] so many tabs open hold on let me just [1139] simplify this so that I don't have to [1141] alt tab so fast that it hurts your guys [1143] eyes so what I want to do is when a [1145] client is one from the CRM and the stage [1148] goes to closed I want to automatically [1151] move this record to the project [1153] management uh list and then I basically [1155] want to begin a bunch of onboarding [1157] tasks so if you think about it logically [1160] what do we have to do here [1162] well we have to make a bunch of [1166] onboarding tasks uh we have to basically [1168] make the project management space so I'm [1171] just going to do [1174] like um hold on a sec actually I think [1177] I'm missing a column yeah I am I'm [1178] missing a company [1182] name so we're gonna add a company name [1184] here and I should have done that because [1186] while having the name of the lead is [1189] important um having the company name is [1193] just as important uh if we're going to [1194] want to like do proposals and that sort [1196] of thing later anyway I'm going to go [1197] back here this is probably going to be [1199] the company name now and then I still [1201] want an assign um I don't need a due [1204] date column I think yet for project [1205] management I don't need a priority [1207] column either what I'm going to need is [1209] I'm going to need all the columns that [1210] we had uh previously so I'm going to [1213] want the first name type the phone the [1216] email the [1217] company um I don't know if we're going [1220] to need this yeah okay screw it let's [1221] keep it anyway again more stages are [1222] better I'm not going to take the the [1224] stage because the stage is specific to [1227] sales the is instead going to be [1229] something [1234] different so because it's now a client [1237] view we probably don't need [1239] to okay actually I'll work I'll worry [1242] about hiding the fields afterwards just [1243] for demonstrative purposes make sure [1245] that I'm instilling best practices here [1248] we're going to pick uh whatever the [1251] company name is here so I'll just go [1253] company name I'm just going to duplicate [1255] all of the information here just so that [1257] we could see it in uh sort of live view [1261] this will be company name I don't know [1263] why this didn't save a there we go let's [1267] just use my email here let's do [1271] some I don't remember what that says but [1273] that should be okay and then we need [1275] some additional uh Fields here for [1277] project [1280] management [1282] um why don't we say have a drop [1286] down well we'll call this [1291] progress and then we'll say [1295] um just trying to think about the best [1297] way to frame this let's [1302] do event [1304] booked yeah that that should be okay you [1308] can call this whatever you want I just [1309] called this progress because I didn't [1310] want to reuse [1313] stage maybe I'll add something else here [1317] actually let's add another one called [1319] canceled because I imagine that's going [1321] to happen every once in a [1322] while um and then let's oh oh actually I [1326] got it I got it let's [1329] do okay let's have one called a waiting [1333] event let's have one called onboarding [1336] and basically the flow is going to be [1337] like when a new this is really annoying [1340] the flow is going to be like when a new [1341] lead or when a new project is closed [1343] their status changes to onboarding we [1345] have to do certain onboarding activities [1347] that come along with that um after the [1349] onboarding is done we're now awaiting [1350] event and if there are any issues with [1352] it then we move it to cancel that sounds [1354] pretty reasonable I'd say that's uh [1355] that's a good flow I'm going to do the [1357] same thing I did before by grouping then [1358] going to progress and then um now we're [1363] grouping by that I do like adding colors [1366] and that sort of thing here I'm just not [1367] doing it because um uh I don't know the [1370] black is like the void in my soul today [1373] just really just pretty uh pretty tired [1376] honestly but yeah okay Okay cool so now [1379] we have everything that we need to [1380] actually do that next step where we will [1382] when a client is [1388] one um then we add to project management [1394] space or [1397] list and then add onboarding activities [1401] or tasks let's do that and the way that [1404] you do this in clickup oh man so many [1407] tabs again is uh you go to the [1411] originating list so the one that is [1414] going to [1416] be changing the stage and the one that [1419] contains the Clos status that you're [1421] interested in then you add an Automation [1423] and it looks like they just added some [1424] new automate with AI feature that's [1426] pretty [1427] neat and then what you do is you go down [1429] to custom field [1431] changes from first of all the field [1433] we're selecting the stage from any and [1436] then to closed [1438] what we want to do down here is we want [1439] to call a web [1441] hook it doesn't look like I can call a [1443] web hook which kind of sucks yeah I [1445] didn't realize that we couldn't call a [1446] web hook for this guy let me think um [1451] yeah I don't know if he paid for his [1452] plan or not uh we may be able to do this [1455] without calling a web hook so let's just [1457] go click [1460] up [1461] let's um we can watch [1465] tasks we can watch lists folders yeah [1468] it's probably somewhere in watch tasks [1469] although I think because it's a custom [1471] field it's probably not going to want us [1472] to uh or allow us to do this [1479] easily okay so task status updated [1482] appears to [1484] be the only field that we could [1486] realistically use in order to make this [1489] work so okay I'm going to have to adjust [1491] my uh my usual workflow a little [1494] bit we're going to filter by list and [1496] then instead of creating a web hook and [1498] just using the data from the web hook [1499] we're actually going to use the clickup [1501] watch tasks module which is uh in my [1504] opinion far [1505] inferior but that's okay we're going to [1509] go to CRM and then I'm going to look for [1511] task status [1514] updated and then we're going to go back [1516] and then change the field that we're [1518] using so instead of it being [1521] called um [1524] stage we are going to just add click [1528] op's built-in status [1530] field which again I don't really like [1532] using and then we are going [1535] to add our own statuses so the 2 to one [1539] we're just going to call [1540] Intake we're then going to call what did [1543] we do meeting requested I think we did [1546] meeting booked and we did uh proposal [1552] sent and we did awaiting payment and we [1556] did uh complete which we'll just call [1559] closed [1560] here I don't like these colors that are [1562] built in just going to change these [1565] colors a little [1567] bit okay so meeting requested meeting [1570] book proposal sent awaiting payment good [1571] and then close status closed that should [1573] be all [1575] right and then instead of statuses like [1577] I was doing earlier we're just going to [1578] do everything with um sorry instead of [1580] um a custom field we're going to do [1582] everything with click UPS built-in [1583] status fields and then we're going to go [1585] back to grouping by status instead [1586] because now status is equivalent there's [1588] some Nuance there but essentially the [1590] reason why I always use my own custom [1592] field instead of clickup built-in status [1594] field is because you can't assign [1596] differential statuses to subtasks which [1599] is sort of annoying and so yeah that's [1601] when way we can get around that any who [1603] this is my my tasks web hook so what I'm [1605] going to do is I'm going to run this [1607] puppy go back here and I'm going to [1609] change the status hypothetically to [1611] closed and uh we're just going to see if [1614] it picked it up looks good so it picked [1617] up the fact that the status before was [1618] intake and the status after was closed [1621] this is now everything that we need in [1622] order to build out that automation so [1623] I'll stop here but basically what we're [1625] going to do is we're going to grab this [1626] task ID and then we're g to get a record [1630] in intake which I suppose I'm hiding [1632] closed tasks now yeah that's [1635] annoying so we're gonna watch both then [1638] I wonder if I can move this up here yeah [1640] it doesn't look like I [1641] can one of the reasons why I don't like [1645] um using clickup stuff for this but [1647] anyway um what's going to happen is when [1649] it gets closed we're then going to call [1650] and then get this specific record and [1652] we're just going to copy all the fields [1654] over so the name and the DAT created and [1656] the date updated and all that stuff and [1657] just go through and then basically [1658] recreate the record in project [1660] management um yeah that'll help us get [1662] around some of the the limitations that [1665] I saw earlier and then I'm going to save [1667] this view so we can always see the [1668] closed [1669] cool so now that we're done scaffolding [1672] out an actual client project for $2500 [1675] us baby where do we go from here well we [1678] actually have to build it um we know [1679] from like a bird's eye view what's going [1681] to happen but now we actually got to go [1682] and get our hands dirty and that's what [1684] I'm going to do with this first scenario [1685] called new booking inquiry add to click [1686] up now I've actually done a little bit [1688] of work on this already so I'm going to [1690] walk you guys through it but basically [1693] what we have [1696] here [1698] is we [1701] have if I auto align this a type form [1705] setup called a booking inquiry over here [1707] let me show you what this looks [1712] like the type form for when people come [1715] in is going to look like this there'll [1717] be a welcome page here that says welcome [1719] to whatever photography and then uh I'm [1721] just using some very simple copy because [1723] the client has Express an interest do a [1724] lot of the the edits and changes on [1726] their own so they're probably going to [1727] change logo they're going to change [1728] everything that's fine um when you click [1731] Start then it asks you what service [1733] you'd like to book then it asks you [1736] where the shoot will take place [1739] then it asks you how can we reach you so [1741] it'll get a bunch of contact info [1742] basically it'll then ask you how long is [1745] the event in [1751] hours let me just add a little bit of [1753] instruction here so nobody screws that [1754] up it'll then uh basically say if you [1757] are on event shoot then add your event [1760] date and time using our [1762] calendar unfortunately there's no way to [1765] get around the um uh Kenly does not [1768] allow you to set like calendar events [1769] without a time obviously so you have to [1771] use like a built-in one and you you [1773] can't like get the client to set that at [1775] least not that I'm aware of so I've [1776] basically set up a bunch of one hour [1778] slots as placeholders and then um when [1781] they book we'll take the length of the [1784] event and then the time that they're [1786] starting and then we'll update that and [1788] then we'll add a new Google Calendar [1790] event at that location which will allow [1791] us to override that event and then we're [1793] also going to have a book of free [1795] strategy session using our calendar if [1796] the service you want to book as content [1798] strategy so ideally it would be two [1800] different calendars U because I'm just [1802] on my own caly account here and I just [1803] didn't want to pay more money for [1804] testing purposes for this MVP of just um [1806] using the same calendar uh but yeah [1808] that's more or less what the flow looks [1810] like right now and then after you're [1811] done it says thanks your booking inquiry [1812] so how do we actually like take all this [1814] information now and then get that into [1815] click op [1817] well make that delicious money um I have [1820] a flow here that first watches the [1823] responses and then it sleeps for a [1826] couple seconds with that pattern that I [1827] mentioned earlier and then list the [1832] responses um and [1834] then what I'll do now is I'll actually [1836] just run this for you so you guys can [1838] see what this looks [1839] like let's just list the responses so [1842] you guys see the shape of the object if [1844] I click on the little bubbles here and [1846] then go down to mapable answers that's [1847] what really matters you'll see that [1849] there is what service would you like to [1850] book um then there are a bunch of mapped [1853] questions here like this is obviously an [1855] address there's the first name last name [1857] name phone number there's then an email [1860] address there's a company name this is [1862] obviously the number of hours that you [1863] want to book just a number and then down [1865] here uh when somebody uses Kenly in type [1869] form and then they submit the form you [1871] end up with a link here and if I copy [1874] and paste that link in to my uh browser [1877] what we have is We have basically like a [1879] booking confirmation now you only really [1882] would know this if you've mucked around [1884] with you know databases or maybe have [1886] personal experience with CLE but the way [1889] that this is in represented inside of [1890] cly in their API is through the use of [1893] these long ID strings up here and so we [1896] can actually grab the ID from the URL [1898] and then we can store it somewhere in [1900] make and then use that later on for [1902] anything related to cly automations and [1904] so they're they have their own API um [1907] kind of pattern and and I'll show you [1909] that in a second but basically what I'm [1910] doing is I'm I'm I'm then grabbing this [1913] link and then I'm going to the set [1914] multiple variables module I'm calling [1917] this an event ID and then what I've done [1920] is I've fed this link in down here and [1923] then I'm splitting it based off of the [1924] presence of these backslashes if we go [1928] back to this URL you'll see it is https [1931] colon backback slc.com Back schedu event [1935] backs slash and then this is the area of [1937] interest and there are a bunch of other [1939] backslashes and so in make what you can [1941] do is you could split a string based off [1943] the presence of that backslash which is [1944] what I'm doing here and then we can get [1947] the results of that split and make his [1951] one index which basically just means we [1953] want to grab the fourth um the thing the [1956] fourth item that has been split from the [1959] split array so I'm just feeding in the [1961] number four and then I'm grabing it and [1963] so we can actually test this if I run [1964] this module and just feed in this URL [1967] and then paste it in here should be [1968] functionally equivalent we'll see that [1970] what we get at the end of that run is we [1972] get an event ID that is equal to 7B 08 [1976] then we go back up here at 7B 08 so [1978] that's that's the ID that we want and [1980] then what we can do is we can actually [1981] use this ID and we can feed it back into [1983] a cly module so you can just go into [1985] cenly and then do get an event and then [1987] use that event ID to to query their API [1990] using a format that they have here and [1991] the format that they have specifically [1993] is you got to feed in the URL htps SCB [1997] apc.com schore events and then you got [2000] to feed in the event ID and so basically [2002] what I've done is I've I've just [2003] transformed data from one I guess format [2005] in cly to another and I'm using it to [2008] call their [2008] API okay you'll see in between these two [2011] I have a router field why do I have a [2012] router well because I want to delineate [2014] between the two event types there's an [2016] event [2018] shoot and then there's also going to be [2021] um let's see which one is it service is [2023] equal to event shoot right here so I'll [2025] say event [2026] shoot uh and there's also going to be [2028] another one which is [2031] um what the hell was the other one [2033] content strategy there we [2035] go so I'll go content strategy [2038] here I'll say content strategy and so [2042] this is one of the first times if you [2043] guys have been watching all of my make [2044] videos that I've ever used a router um [2046] just because routers are generally a lot [2047] less maintainable and they're just [2048] really annoying so yeah that's uh that's [2051] what I've set up here two routes one for [2052] Content strategy one for vent shoot and [2053] then we'll do a bunch of other stuff [2055] afterwards so I'm going to keep this [2058] testing module uh testing circle on the [2060] list responses module just because I'm [2061] going to use the input that I just did [2063] to test a bunch and then I'm going to go [2065] back to the CRM and what I'm going to do [2067] is I'm just going to run this [2069] flow uh actually no what I'm going to do [2071] here is I'm going to get the sorry I'm [2073] going to get the uh clickup event here [2075] sorry click up task and then I'm going [2077] to just double check that all the fields [2079] are right so yeah I've gotten the event [2081] and I'm going to create the task and so [2082] what I'm doing is I'm going into [2083] photography CRM this list here which is [2086] now going to be changed because I've [2087] changed the name so this is going to be [2089] called [2091] CRM uh you know what I have to change [2093] the top level name too because I've [2094] renamed it so it's photography photos [2096] list RM the task name for the lead is [2099] always going to be the first name last [2100] name just what I always recommend [2102] content type plain [2104] text no [2106] content if you guys don't know what the [2108] content is if you click on any clickup [2110] record there's a field here that allows [2111] you to add a description they just call [2113] that their content field so you could [2114] theoretically add a bunch of stuff in [2116] there if you wanted to assignes I'm just [2118] doing my example no tags and then what [2120] we have to do is we have to add a status [2122] basically based off the statuses that [2124] we've created before uh and so at this [2126] stage [2127] they have already booked a meeting so [2128] I'm going to do uh sorry not meeting [2131] they've booked an event and so what I'm [2132] going to do is I'll go awaiting [2136] payment and then [2139] priority actually hold on a second no I [2141] don't think it was awaiting payment if I [2143] look back [2145] here create a lead record with meeting [2147] booked add Discovery call form link Cy [2149] sends meeting invite okay so we need to [2152] do a kickoff call so actually I'm going [2154] to go back here and change my whole [2157] thing I'm going to add another status [2159] here called awaiting [2163] kickoff and [2165] then I'm going to have one here called [2168] awaiting [2171] meeting it's probably more statuses that [2173] we need but I think this is a better way [2174] to represent that um if they are a high [2177] Roi flow they want a meeting and if [2178] they're a low Roi flow they want a [2180] kickoff so that should be good so now [2182] that I've added this I have to refresh [2183] the [2184] field but it's good we can select it uh [2187] and then we're awaiting a kickoff no [2189] priority field uh the due date is going [2191] to be so if you get an event in cenly [2194] you get a bunch of information about [2195] that obviously and so we fed the idea in [2197] and we've gotten that the start time of [2198] that specific event was March 20th 2024 [2200] 900 p.m. and so um oh sorry I'm going [2204] backwards here uh what we care about [2206] first is the start time obviously so [2207] start time is March 20 20249 p.m. so I'm [2209] just feeding in the start time directly [2211] into the date module now I know I can do [2213] that because if I Mouse over if you look [2215] at the two squ square brackets or uh [2217] angled brackets there it says date and [2220] in make.com this is like uh just [2221] something that a lot of people don't [2223] realize because they're they don't [2224] really do a good job of explaining it [2226] but anything inside of those two angle [2227] brackets is the type of the data and so [2229] this variable is of type date and so we [2231] don't actually need to massage it or [2233] change the type or whatever we can just [2234] feed the date in directly and it'll just [2236] automatically parse it for us now since [2238] I'm using the start date as the [2239] beginning of the day uh beginning of the [2241] event and then the due date is going to [2242] be the end of the event what I need to [2243] do is I need to grab the start date [2245] again and then I need to add a certain [2246] number of hours however many hours I ask [2248] the client uh or we're asking the [2250] prospect um so that plus the start time [2253] or the start time plus the number of [2254] hours is going to be equal to the end [2257] obviously we can't just use the end time [2258] variable from cly because um kly we're [2263] just using the default sort of one hour [2264] event slot time and so that would always [2266] just be one hour ahead and the way that [2268] you do that make is you go add hours you [2271] feed in a date object which is what we [2273] did here and then you feed in however [2275] many hours you want to add to that so so [2276] let's say it's three you know that would [2278] be uh that would be functionally [2279] equivalent but in my case I'm feeding in [2281] add hours and then I'm grabbing the [2283] number of hours that I want to feed in [2285] which is this uh variable right over [2287] here [2288] d373 and then that's how we're going to [2290] get the the start and the end time you [2292] do have to fill out a couple of fields [2293] here called due date time and start date [2295] time otherwise clickup does not allow [2297] you to natively just add times in and [2299] it'll just default to I think like 12 [2300] a.m. on the day which is sort of [2302] annoying any who as we go further down [2304] I'm then mapping through the first name [2306] so I'm grabbing uh the first name which [2307] is Nick sticking that in here the type [2310] which I'll get into in a second the [2312] phone which is obviously the phone field [2315] the email email field same sort of deal [2317] uh company which I didn't put in before [2319] which I'm going to put in now and then [2322] address and the address is basically me [2325] just delete all this and do it all [2327] again the address is just all of these [2330] and it's unfortunate you sort of have to [2331] map them so I'm putting in the first [2333] space second space third space fourth [2336] space Fifth and this is just going to be [2338] the the total address then I have a last [2340] name which I'm mapping from this [2342] variable here and then uh we also have a [2345] stage but the stage doesn't matter [2346] anymore because I've decided that I'm [2347] not going to use it so I'm just going to [2348] leave that as [2349] empty okay so this should be everything [2351] that we need in order to actually create [2354] a record so let's actually go ahead and [2357] do it and what we should be seeing is we [2359] should see a new record in the awaiting [2361] kickoff I'm just going to move this to [2362] close get this out of our faces I'm [2364] going to run this puppy we see that it's [2367] taken the bottom route here because it [2369] is technically an event shoot and we [2370] filtered for that the kly bundle it got [2373] the right event which is nice and then [2375] it's created a clickup task with the [2376] status awaiting kickoff you go back to [2378] the CRM you'll see that that looks good [2381] we're going to remove this stage because [2383] we don't need it just going to remove [2384] this from the list [2385] entirely it got the type got the company [2388] name assign start date and date address [2391] first name last name email and then [2392] phone awesome um I didn't talk about the [2394] type just because uh I've talked about [2396] this at length in previous videos but [2398] basically I'm just going to do this for [2399] anybody that's [2401] new in clickup if you look at um the [2406] type and okay so in clickup we've added [2409] a drop down with two items there's event [2411] shoot and there's content strategy and [2413] so if I click event shoot here then that [2414] means that every time this module runs [2416] it's going to create a new record and [2417] the type is going to be event shoot [2419] likewise of a new content strategy so [2421] ideally we would have a way to map this [2423] and map in make par parlance essentially [2425] just means have this change dynamically [2427] based on some input now the issue is you [2430] can't just map this and then write the [2431] word event shoot inside make.com will [2434] not understand this and clickup won't [2436] understand this either instead what make [2438] and clickup do together is they assign [2440] an ID to every new dropdown field and so [2443] if I click map again you'll see that [2444] there's this very long ID with [2446] 77895 f605 blah blah blah in Click UPS [2450] backend that now represents the term [2452] event shoot and so if you want to map [2454] this dynamically we need to find a way [2455] to get this as an an output every time [2457] we have event shoot as an input now [2460] luckily make allows for a very native [2461] way to do that using what's called The [2463] Switch module and so what we need to do [2465] is we need to and the quick little hack [2467] you can do for this is Select whatever [2469] drop- down item you want go to map it'll [2471] then show you whatever the mapped um [2473] actual ID is then use a switch module [2476] and then for the input to this module [2478] and feel free to look through the [2479] documentation I highly recommend it [2480] because they use switches all the time [2481] but as the input to the module what [2483] we're going to do is we're going to feed [2484] in the variable coming from from the [2486] type form called uh what service would [2488] you like to book and then we're [2490] basically just having a bunch of input [2492] output pairs so if the uh service is [2495] event shoot then we want to Output this [2497] if the service instead is content [2499] strategy then we want to Output another [2502] variable and in order to get that [2504] variable I'm just going to copy all of [2506] this delete it go to map select content [2509] strategy get this and then I'm going to [2511] paste what I had [2513] earlier in order to select uh everything [2517] so okay this should work now so I'm [2519] going to get out of here I'll run this [2522] again okay good that works and so we've [2525] essentially confirmed now that our flow [2527] to get somebody into the system at least [2529] through the type form is now functional [2532] and uh if it is a low value lead then we [2535] are basically just immediately calling [2537] these people and then working our way [2539] through before sending an invoice or [2541] something like that you can keep as many [2543] of these fields present as you want I'm [2544] going to keep them all present um one [2546] thing that I don't like is how we're [2550] currently um grouping this so I'm going [2554] to click this and see if we can go the [2556] other way yeah yeah okay there you go so [2557] if you click um on this little up or [2559] down it groups in either as sending or D [2560] sending order so I'm going to group in [2562] descending order because obviously when [2563] people come in I want them to be at the [2564] top and then I want them to work their [2566] way [2567] down okay so that's that first scenario [2571] um the first route of the scenario good [2573] now I want to do the same thing but I [2574] want to do it for a Content strategy [2576] lead so we've gotten the event so that's [2579] good and then what we want to do is we [2580] want to create a task same as we did [2583] before and actually what am I doing [2586] anytime you find yourself doing [2587] something with routers just copy the [2589] module and then just make the minor [2590] change that you need to make it's going [2592] to save you a bunch of [2594] time um never mind I lied because we're [2597] selecting a different [2599] cly event so what we realistically [2602] should be [2604] doing is we should be deleting [2608] this should be copying [2612] this this is going to be stupid because [2614] I'm gonna have to do this uh actually [2615] wait a [2618] second unlinking [2622] this linking this and then moving this [2624] back here we got to remove this [2628] filter what we really should be doing is [2630] we should be uh calling uh Central [2634] resource in instead of doing [2637] two right like there's no need to have [2639] another get an event module here because [2642] the function getting an event does not [2644] change depending on the route so ideally [2646] we just want to front load all that [2647] stuff do it before the route um we're [2650] going to consume three Ops here and then [2651] One op on either Channel and then that [2653] way when you duplicate it like this we [2655] can access the same resource and so now [2657] if you look the um the text here is [2658] going to be [2659] blue so cool uh the status we're going [2662] to want to add when we do a Content [2663] strategy lead is we're going to want to [2665] do a waiting [2668] meeting um which is good and then [2670] priority uh the due date is going to be [2673] a little bit different because this is [2674] going to be like a meeting due date [2677] now um so there are multiple ways that [2680] we could do this we could have the [2682] salespeople just know that if somebody's [2684] in a waiting kickoff the due date is or [2687] the start date is the date of the [2688] meeting um but that doesn't really feel [2690] super descri descriptive to me if I'm [2692] being completely honest what I might do [2695] is or what I might have done is I might [2698] I might have created two separate [2700] pipelines for this I might have had one [2702] pipeline for Content strategy and then [2703] another pipeline for event shoots um [2706] that said I don't really like really [2708] muddling up and having like a bunch of [2709] different lists because it makes things [2711] difficult to [2712] automate so what I think I'm going to do [2714] is I'm just not going to fill out start [2716] date or due date for Content strategy [2719] chats um yeah I think that the like sop [2724] for the CRM is going to be if it has a [2726] start date and a due date it's obviously [2727] an event shoot but if it's a type [2729] content strategy then this field isn't [2731] sort of important it's not very [2732] meaningless uh it's not very meaningful [2733] I should say you can get around this [2736] sort of view by the way um and the fact [2738] that we're going to have a bunch of [2738] empty columns by using this board view [2741] instead and this is actually how a lot a [2742] lot of people like prefer to do their [2744] their sales pipelines um and so in this [2747] way like the presence of the date it's [2748] not really going to seem weird if [2750] there's just no date here it's just [2751] going to be a card that says Nix anyway [2754] um yeah so I'm going to do that I'm not [2756] going to have a start time and I'm not [2758] gonna have an end time because the [2759] meaning of the cly booking will [2763] change uh and then the first name is [2764] still going to be that switch is going [2766] to be that phone's going to be that [2767] email is going to be that company [2768] address last [2770] name yeah it looks good to [2774] me okay now let's try this out live for [2777] our content strategy lead um you can [2780] also just click Auto align I don't know [2782] why I always do that [2784] manually so I'm going to go back to our [2787] type form and then I'm going to refresh [2789] it then I'm going to uh right before I [2793] do this actually let me run this so this [2794] is running now and I'm going to try [2796] content strategy it's going to say book [2798] a free strategy session using our [2799] calendar I don't like how long it takes [2801] to load but there's very little power I [2803] have over that and let's say I want to [2804] book my meeting for 5:00 [2806] pm um this is weird it should be getting [2810] my oh I got it yeah that's sort of [2814] annoying so it should be getting my [2817] contact details uh but it's not getting [2820] my contact details because of the way [2822] that I set up the type form we should [2825] probably be asking these guys what their [2827] uh what their first name and last name [2828] is as well now that I think about it [2829] because that way we can have a [2831] company actually that's not super [2833] important we could put first name last [2835] name company right on the uh booking [2837] form itself um I'm just forced to use [2840] the same booking form right now because [2841] I'm just using a free caly account okay [2843] that's not a big deal we'll just do that [2846] okay great so it's just scheduled it if [2847] I go back here uh you see that we just [2849] caught the web hook we're sleeping for [2850] two seconds looks like there's a problem [2852] it says at least one of organization or [2855] user must be filled so I [2857] imagine something weird happened [2860] here looks like we're not getting the [2862] event ID or we didn't get the event ID [2863] that's [2866] weird um let me see here oh yeah right [2869] right right yeah I didn't fill out the [2871] um yeah I got the wrong thing okay we [2875] were doing testing right and so I move [2877] things around quite a bit um I don't [2878] want to resubmit all that it's a waste [2880] of my time so I'm going to move this [2881] back here and then just run this again [2883] and this should now work and it worked [2885] through the content strategy route if we [2886] go back to CRM we'll see that we're [2889] awaiting meeting now there is no first [2890] name or last name there's no company or [2893] address or anything [2895] actually so let me think the reason why [2898] that happened is because of the way that [2900] I structured the [2902] form and so everything that I said [2904] earlier was wrong what we need to do is [2907] we need to change this how can we reach [2909] you and we need to put it [2913] uh we need to put it here then we got to [2916] go to [2918] logic and we have to adjust the logic of [2921] this type form so that one and two are [2923] done on both routes and then three four [2925] five are on one route and then six is [2927] done in another route okay so I'm going [2930] to go down [2932] here delete this branch [2937] and then what I'm going to do is type [2940] form allows you to change the flow of [2943] data depending on an earlier input so if [2946] the service that we are booking is equal [2948] to content strategy then we're going to [2950] go to Six book a free strategy session [2956] if the service that we are booking is [2958] equal to event shoot we're going to ask [2959] them how we can reach you just like [2961] before then we're going to do a bunch of [2963] additional questions like where will the [2964] shoot take place how long is the event [2965] add your event date and time and then [2967] thanks for the [2969] booking so that should be [2972] reasonable and that'll avoid this [2974] problem here where the data isn't filled [2977] in okay we're going to go back to New [2979] booking [2980] inquiry and then I'm going to fill out [2982] this form again no real way around it [2989] refresh I'm going to book a Content [2991] strategy write all my personal [2994] information [2997] I'm getting really good at typing my [3000] first name my last name and my phone [3002] number we're going to do this for 5:00 [3004] pm on March the 14th now it's mapping my [3007] first name last name automatically [3009] because that's what the calendly [3009] integration [3011] does um okay great says I'm scheduled [3013] and now it's uh saying thanks for [3015] booking my [3017] inquiry and now you see that I've added [3019] a [3020] record the type is different it's [3022] content strategy instead of um [3027] uh event shoot and then you know I still [3029] have the assign and all that stuff [3031] doesn't look like it mapped my address [3033] properly oh right because I didn't ask [3035] for the address okay um yeah I'm not [3038] gonna ask for the address this is pretty [3040] ugly though I don't like having all [3041] these freaking blank uh [3045] Fields yeah it just doesn't look super [3050] professional how would I fix this in [3053] practice we could do a board [3056] and we could sort we could group this [3059] board sorry we could add swim Lanes to [3061] this [3063] board um I don't know where the swim [3065] Lane feature is now that they've moved [3067] everything [3071] around um oh yeah there it is group swim [3074] Lanes swim Lane is going to be based off [3077] of [3080] type yeah that might be [3083] good um you know it's not perfect but [3085] it's definitely a lot less ugly than it [3087] was [3089] before we could make content [3095] strategy the [3099] first so the way that this works in [3102] clickup is in a board view you can Group [3107] by the stages that you want to divide by [3109] again just like normal you can also add [3112] an additional feature called a swim Lane [3114] which allows you to basically do that [3115] twice and so just have two levels of [3117] filtering going on and so we have one [3119] level of filtering called a Content [3121] strategy this is at the type level we [3123] have another level of filtering from [3124] left to right using the [3126] stage so we can do that and uh I think [3129] if I click on this I should be able to [3131] hide this I don't know if I maybe I [3133] can't hide this that's sort of [3135] ugly maybe we could filter so [3139] that type is [3144] not type is event [3146] shoot [3149] or type [3152] is content [3155] strategy Save The View yeah know we [3158] still have that ugly empty I don't like [3160] that just from a professionalism [3161] standpoint that doesn't really speak to [3163] me I think if I were a client and then I [3165] saw this and then you know I just gave [3167] you instructions to like not pay [3169] attention to it or whatever I just think [3170] that this is [3173] annoying so I don't know if this is [3174] going to work [3176] I may I may need to go to the back to [3178] the drawing board just redesign the CRM [3180] and then have [3183] a one for Content strategy and then [3186] another one [3188] for event [3190] [Music] [3192] shoots [3193] yeah that would avoid this ugly problem [3196] here I don't see any way around that so [3200] I'm just going [3201] to let me just see if there's maybe [3203] another view that I can organize [3205] information by obviously we use the [3206] calendar view oh they got a mind map [3208] feature that's [3209] neat timeline is not going to make sense [3213] here yeah I think from a professionalism [3215] perspective uh I'm just going to have to [3217] redesign this annoying but whatever I'm [3220] going to experimentally try and keep [3222] this in the video and um yeah I'm G to [3225] try not to cut it out just so you guys [3226] can see the weirdos that are watching [3228] this that actually want to see stuff [3230] like this just so you can see what like [3231] the decision forking process is like um [3234] see if I was a little bit smarter and if [3235] I thought about this a little bit more [3237] ahead of time I would have realized that [3238] I'm asking for different information and [3240] I'm putting you different information [3242] per funnel and then I'm trying to use [3243] the same set of columns to store that [3245] different information um in which case a [3247] bunch of columns would just be empty [3248] which is obviously not what I want to do [3250] um I guess now that I think about it we [3252] could ask for their [3256] address in both but then we missing the [3259] start date and the due date yeah no I [3261] don't think that makes sense I think [3262] from like a sales perspective like you [3264] only get the information that's [3265] necessary to you to minimize friction so [3268] I'm going to call this event [3270] shoots and then I'm going to just [3272] duplicate [3274] this I'm going to call this I'm going to [3277] copy everything and I'm going to call [3278] this um content strategy and let's just [3281] call them leads actually so event shoot [3284] leads and then content strategy [3288] leads okay great so we'll have two [3291] separate [3292] funnels we're also going to have two [3294] separate status Fields um this will make [3297] our pipeline simpler intake we're going [3300] to have a waiting kickoff we're not [3303] going to have proposal sent we'll just [3304] have a waiting payment [3306] saved um your statuses in your list one [3309] will be affected how should we handle [3311] awaiting meeting um oh right it's [3314] because uh we actually have a few [3315] records in here we should just change [3317] awaiting meeting to awaiting kickoff for [3318] now that's [3319] fine and then for Content strategy leads [3322] uh we're going to have a different [3323] pipeline we're going to have intake um I [3326] think I should keep meeting requested [3328] we're going to do a proposal sent and [3333] then actually you know what that's [3335] irrelevant we'll just do intake awaiting [3337] meeting proposal sent awaiting payment [3339] and then [3342] good so now we have two pipelines which [3345] look good um event shoots is going to [3347] have all of these columns and all this [3348] information and then content strategy [3350] leads is not going to need this uh we [3352] may use this information eventually but [3354] we're definitely not going to going need [3355] to see it and that way we can hide the [3356] start date and the end date as [3360] well so these leads now have the date [3362] created data updated status type we [3364] don't need the type field at all so we [3365] can just remove this completely from the [3367] list and not just the list but uh the [3370] other column as well yeah there you go [3372] and then what else signing we still need [3375] first name we still need last name email [3376] and phone yeah I think that's reasonable [3378] so our flow is now going to be status is [3381] going to be intake if uh we add them in [3384] manually otherwise it's going to be [3385] awaiting meeting directly for Content [3387] strategy proposal sent uh and then [3389] awaiting payment good and then for event [3391] shoots it's going to be intake awaiting [3394] kickoff awaiting payment it's good that [3395] this is much simpler because I think [3396] that represents the relatively um [3399] simpler nature of [3401] this so yeah that's good I'm going to [3405] remove this and I'm going to go back and [3406] then update the rest of my [3408] uh my stages here or my my [3412] systems I'm glad that this happened [3414] relatively early on in the flow because [3416] if this has happened way later like [3417] after I designed everything there tends [3419] to be sort of like a waterfall or [3421] trickle down effect with these sorts of [3422] things where if you screw up initially [3424] and then you don't realize the screw up [3426] or maybe you want to change something [3427] and you try and change something in [3428] early on in the process uh when you're [3430] very late in the process you then have [3432] to change literally everything from [3434] start to finish which just blows anyway [3437] I'm going to go back to um the scenario [3439] and then I'm going to go to content [3440] strategy the status is going to be a [3441] waiting meeting good we're not going to [3444] have any due dates start dates first [3445] name yes phone yes email phone company [3448] good we're going to delete all those [3449] addresses because they're not relevant [3450] to us [3453] anymore should be good I think and then [3455] the event shoot oh uh the type let me [3458] see if the type field was still there I [3459] don't [3460] remember no typ field was gone we [3462] deleted it good then event shoot we're [3466] going to go down here [3472] and it didn't get the map cap able [3475] answer because the last time we filled [3476] it out was not an event shoot [3479] good um address is good what we need to [3482] do now though is we need to change the [3483] list that we're dumping this [3485] into so this is still good this is event [3489] shoots and then this will be [3493] um content strategy leads [3497] yeah okay fantastic now that we've done [3500] that why don't we just delete all of [3503] these records [3507] and then why don't we just retest from [3509] here on [3513] out okay I'm going to run and then I'm [3516] going to fill this out [3517] again and I'll get even better at [3519] filling out my first name last night [3521] okay we'll do event shoot to [3525] start we'll do left click as the company [3528] name [3531] um we'll do this for the postal code and [3535] then we'll say it's 3 hours we're going [3538] to add a new date and time to this event [3541] it's the 14th at [3543] 6:30 pulled in all my information we're [3545] going to schedule this we're going to [3546] see if there are any uh final remaining [3548] issues [3549] here booking happened so we got the [3552] response uh there's some count the issue [3556] again and why would that [3563] be [3567] says we can't what did vent ID do yeah [3569] vent ID was empty why was vent ID [3573] empty we're calling module 4 with a [3576] mapable answers it shouldn't be [3581] empty let me just see if it's on the [3584] input side or if it's uh something to do [3587] with the [3592] variable Oh weird [3597] um this doesn't seem to be running at [3600] all let's just try splitting this first [3604] oh right right right yeah yeah I see why [3606] I didn't have a [3607] backslash doy I must have deleted that [3609] while I was doing something else run now [3612] cool gets the ID I already filled that [3614] out so I'm going to go back here list [3616] the responses instead of getting okay [3618] event shoot looks good I'm then going to [3620] go back [3622] here double check that all the these [3624] fields are filled out yep and then I'm [3627] going to fill out the form [3630] again but I'm going to do it as if I was [3633] a Content strategy [3638] lead okay we'll go left click and now [3641] we're just going to book the strategy [3642] session [3643] immediately should still have all my [3645] name and personal information [3648] done um I don't know what happened there [3651] oh I think I canceled it yeah my bad [3653] okay still it's running takes the [3655] content strategy route if I go back to [3657] content [3659] strategy we are now awaiting meeting [3661] with all the fields filled out all right [3662] awesome great that actually worked [3664] fantastic um wonderful wonderful very [3667] happy to hear that so now we have two [3668] funnel setup we have one funnel setup [3669] for all event shoots and we have another [3671] fnal setup for all content strategy [3672] leads what's annoying is that we have [3674] two separate places for data which means [3675] salespeople will have to go to event [3677] shoots and then content strategy leads [3679] um alternatively they could make use of [3680] the everything view in clickup which [3683] will allow us allow them to see [3684] everything at a glance so uh maybe it's [3686] not the end of the world but I [3687] definitely do like to have my data in [3689] one place means that you only really [3690] ever have to make one automation um you [3692] know if you ever end up using like [3693] clickup builts and automations makes it [3695] a lot easier to like watch one list um [3698] but say love you there's very little [3699] that we can do here so now that I've [3701] created the task I want to do one final [3703] thing I want to create a Google Calendar [3712] event um [3716] and I can do this before I go into click [3721] up because we're not going to have to do [3726] two now I'm just going to use like my [3728] primary calendar for this I'll call this [3736] um if the event type is equal [3742] to event shoot [3745] then I'm going to [3747] write event and if it's equal to content [3752] strategy um actually no you know I don't [3755] think we need to do this [3756] for the booking yeah no we don't I take [3760] that back here's what we need to do what [3761] I want to do is okay sometimes we're [3763] going to book these calendar events for [3765] event shoots right and in those cases we [3767] need to create a new event and then we [3769] need to block out three a three hour or [3771] 4 Hour however many hours uh that ends [3773] up being um so I'm going to [3776] say [3778] um event booking for and then I'm going [3782] to [3783] do first name last name then I'll also [3787] just add uh no I'm just going to do [3789] first name last name actually it's not [3790] an all day event um the start date is [3792] taking if you Mouse over the variable [3794] name it's taking in as type date and so [3797] we can actually just copy and paste what [3798] we did here in the previous clickup [3801] module because it's just a date type and [3804] then what I'm going to do is I'll go [3806] here I'll do start um end date is this [3810] and then the start date will just be the [3811] start time variable from cly uh we don't [3814] need to do duration if we do the end [3816] date although I guess we could also just [3818] enter um the duration as the number of [3822] hours plus the word hours let's try both [3824] we'll give it a we'll give both a [3826] try okay now what I want to do here is [3829] um I want to only grab that last [3832] response that I did for testing as sorry [3834] the event shoot response that I did for [3836] testing so um I don't actually know how [3838] to use this query I'm just going to see [3841] if I could just filter directly from [3843] this to only grab the one that has the [3844] query that I'm interested [3846] in yeah it looks like I can do that so I [3849] basically am now filtering just as a [3851] test only for responses that include the [3853] word event shoot somewhere inside of [3854] them so that'll allow me to test and [3856] then go down this event shoot route and [3857] then create a Google Calendar event um [3860] I'm doing that because I want to test to [3861] see whether the start date and the end [3862] date logic is correct and then it looks [3865] like I set it [3868] up weirdly because it says 5:30 I don't [3870] remember if I selected 530 let me go [3873] back to this cly event okay yeah looks [3874] like looks like it was good start time [3876] is 5:30 and then I believe I had a [3879] three-hour duration if I go back [3882] here that's right so the end time should [3884] then be 8:30 5:30 to 8:30 wonderful [3889] awesome so if you think about it [3891] logically this now does everything that [3892] we wanted the first I don't know maybe [3895] um third of this flow to do and it [3898] covers all of the type form stuff so [3899] basically everything oh I did miss one [3901] thing the discovery call form link [3903] that's unfortunate uh but I I'll add [3905] that in a sec but I've done basically [3906] everything except for the discovery call [3908] form all the way up to here and so we're [3910] actually done I want to say probably [3912] about half of the system maybe even more [3914] than half of the system um I don't [3915] really recall when I began recording [3917] this but I think it's probably been [3918] about an hour so far um there's still [3920] going to be some testing and so if you [3922] think about it the first half's an hour [3923] second half's an hour hour testing the [3924] MVP is another hour let's say that's [3926] three hours uh and then we're going to [3927] spend maybe another hour or another two [3929] hours later on uh split between [3932] connecting the system and then also um [3936] you know doing any small little [3937] iterative upgrades assuming that we've [3938] scoped this project well on that plus [3940] the time that it took to do the uh do [3942] the process flowmap you know probably [3944] taking between seven to eight hours of [3946] my time realistically in order to build [3947] out the system um which is pretty good [3949] if you consider from an hourly [3951] perspective it's still like 300 bucks an [3952] hour or so granted if you are in [3954] Consulting and you are acquiring your [3956] own customers yourself um as I am you [3959] know a lot of the time that can um I [3961] just ran that again inadvertently but a [3963] lot of the time you do also have to [3964] count your sales hours and uh your sales [3966] hours are usually at least half of [3967] whatever your project management or [3969] development hours are so maybe that's [3971] like1 to $150 an hour certainly not what [3974] I would consider like a super ideal rate [3976] for me but I think that a lot of people [3977] out there that are in the early stages [3979] of their career would find that [3980] extremely valuable and that would be [3981] more than willing to you know do really [3983] good work for that money at least it got [3984] a leg up [3985] initially but any um let me just check [3988] to make sure my camera's still recording [3990] all right let's uh let's keep going and [3992] let's push through and do the rest of [3993] this so I'm going to check the status to [3996] see if it's a waiting payment if it's [3998] still we'll send the follow-up email um [3999] I'm going to do the follow-ups after [4001] client one add onboard task I'll do that [4004] after I'm going to do the discovery call [4005] next just because it's next logically in [4006] the sequence of scenarios so new [4009] discovery call form field update lead [4010] and click up what we need to do in order [4012] to actually go ahead and do this well we [4013] need need to go back to a discovery call [4015] form we need to add the questions that [4016] we're interested in that in in that sort [4018] of thing um and then we need to connect [4020] that so I'm going to go back to my [4021] workspace and then head over to the [4024] Discovery call form that I just mocked [4025] up earlier and the way I want this [4027] discovery call form to work if you think [4028] about it it's it's internal facing so it [4030] doesn't really have to be super pretty [4031] um it just needs to be something that [4032] the salesperson can use to basically One [4035] log some data and so I want them to [4037] start getting in the habit of logging [4038] every call how did the call go was it [4040] good you going to send a proposal was it [4041] bad you're not going to send a proposal [4043] were they not a fit did they flake on [4044] the meeting right simple questions like [4046] that U and then I also want to just [4048] provide them the ability to in the [4050] future build out like a proposal [4051] generator system so I might have them [4053] fill out a couple of questions here I [4055] don't [4056] know but okay let's do this um your [4058] question here recall information with [4060] that Let's [4063] do let's assume that there will be no [4068] let's not do that we're assuming that [4069] there's only going to be one salesperson [4071] to start and so we don't need to ask for [4073] for salesperson [4078] information let's just ask um what was [4081] the outcome of the [4084] call we'll say [4089] positive maybe we [4091] should yeah let's just do positive and [4094] then we'll just say no fit or we'll [4100] do [4102] noow no fit would be in situations where [4105] they explicitly show up and then for [4107] whatever reason it's not a fit no show [4110] is in situations in which you're there [4111] waiting on the meeting and then nobody [4113] shows up and then positive is obviously [4115] they like it they want to see more so [4117] we'll use positive as sort of the [4118] catchall and then if the status of the [4121] lead is positive sales will send a [4123] proposal and an invoice and the status [4125] will change to proposal sent if it's no [4128] fit or no show then we'll just log that [4131] and the reason why we want to start [4132] logging that as early as POS possible is [4134] basically because it'll be easy to see [4137] patterns between no fit clients and no [4139] show clients especially if you're doing [4140] something like um Facebook ads for [4142] instance there'll be certain sorts of [4144] campaigns with UTM parameters that are [4147] more likely to give you no fits or no [4148] shows and so what you can do is you can [4150] like back reverse engineer that and then [4153] not run the Facebook ad campaigns that [4155] lead to no shows or higher percentage no [4162] shows [4166] let's just do [4168] this [4170] um yeah that should be it uh I'm going [4173] to use the email address of the prospect [4175] here and I'm going to use that to [4177] connect [4179] the no I lied I'm going to use the ID [4181] okay so the way that you do that in typ [4182] form is type form allows you to add a [4184] bunch of um this is the only question [4186] I'm going to add I'm just going to make [4187] this really simple type form allows you [4189] to add a bunch of your own personal [4190] hidden variables into a flow and then [4192] depending on whether or not there is a [4194] hidden variable um you know you can do [4196] things with it and in this way I'm going [4198] to add the hidden variable that [4199] corresponds to the clickup ID so that [4201] anytime that this type form gets filled [4203] out it'll automatically go back find the [4204] clickup record that's associated with [4206] this and then go back and then update [4207] that record so I'm going to do [4209] personalized with data I'll have a [4212] hidden field which I'm going to [4215] call click up [4218] ID I'm going to save [4220] this so now we're feeding in a hidden [4222] field called click up ID so our type [4224] form will look like this it'll be like [4226] uh you know question mark click upore ID [4229] equals whatever the clickup ID is and [4232] then I'm going [4235] to add another question just in case and [4239] that's going to be what's the clickup [4243] id this is only popping [4248] up this question is only appearing [4251] because you're not using [4254] a [4256] specific let's say the specific type [4259] form [4260] associated with the record you're [4263] selling in order to get the clickup ID [4266] head over to your [4270] CRM find the record in question click it [4274] and then look at your url it'll be [4277] something like again these are just [4279] instructions that I'm giving the salese [4281] here or the potential future sales [4283] people [4303] okay this should be enough instruction [4305] to eliminate 99% of problems um we're [4309] going to go to [4311] logic and the only situation in which [4314] this would pop up ah let's actually [4315] change the placement of the questions [4317] let's have this question appear first [4319] actually I don't know if we can do that [4319] let's [4320] see [4326] um yeah it doesn't look like it I think [4328] we have to like specifically [4330] route wait a [4333] sec move this [4337] here that is extremely frustrating yeah [4340] we have to um actually have that what [4341] was the outcome of the call First before [4343] we have the what's the clickup idid what [4346] are you going to do man [4348] software um so if uh hidden [4355] variable [4360] H this is [4363] interesting how do we not get the [4365] clickup [4366] [Music] [4371] ID let me show you guys something before [4373] I get go any further because I think um [4376] in order for this explanation to make [4379] sense um I need to just provide a little [4382] bit of [4384] context the way that this works in sales [4387] organizations is and the best way that I [4390] found to make it work is us to take this [4393] link and then put it somewhere in the [4396] CRM so maybe this would be somewhere up [4399] top in like the event shoot or something [4401] or content strategy lead for instance [4403] and then to have a link however the way [4405] that type form when you add a hidden [4408] variable works is if you paste it you'll [4410] see that it now has a hashtag click [4412] upore ID equals [4415] xxxxx and so if we restrict it so the [4417] only way somebody could use this form is [4419] by clicking on a link that we presup [4422] them we can supply this link with the [4425] xxxxx and then we can provide logic [4428] inside of typ form and this isn't [4430] perfect but this will cover 99.9% of [4432] cases we can provide logic within type [4434] form that [4436] says hey [4440] when the hidden [4443] ID contains and let's just do x x x x I [4447] think that was four right it's five [4450] we'll just do [4453] xxxxx uh for now then immediately jump [4456] to thanks are filling out this form [4458] otherwise we want you to fill out the [4461] clickup ID [4465] what else we're going to do is we're [4466] going to go to this content strategy [4468] leads and this event shoots and for [4470] Content strategy leads we're going to [4472] add another column called [4475] website and then we're going to call [4477] this discovery call [4480] URL I'm going to take this discovery [4482] call [4483] URL I'm going to move it back to [4486] somewhere that's easily accessible uh [4488] from the [4489] salesperson I think if we remove this [4493] should be [4495] okay let's do company [4498] first let's uh frontload the [4504] assign let's [4506] do yeah I just don't like how many [4509] fields we have here I don't like the [4511] fact that [4513] uh okay maybe if we close this a little [4516] and then go Discovery call URL and then [4519] we take this and then move their [4521] information okay never mind that's fine [4523] um so we're going to add another column [4524] called discover call and this is where [4526] we're going to we're going to paste the [4527] ID in right here and so this would be [4531] the clickup ID of the record and then [4533] when you're ready to sell um the reason [4535] why why I build it out this way is so [4537] that it forces you to be in the CRM uh [4540] one of the biggest issues with building [4541] crms and that sort of thing in my [4543] experience the actual building is pretty [4545] quick and it's pretty easy as you can [4546] see uh you know you do have to do some [4547] thinking and it helps if you have [4549] experience but generally speaking all of [4550] these steps are straightforward I think [4551] most people would understand them even [4552] if they didn't really get make.com or [4554] crms the reason why it can be really [4557] difficult to make this work for clients [4558] though is because clients can be really [4560] lazy and they just don't want to use [4561] your CRM and they just don't want to go [4563] through all the steps required in order [4564] to log every piece of data I mean odds [4566] are if they're asking you to build their [4567] CRM part of it's because they don't [4569] really like thinking about this stuff [4570] anyway and they're sort of operationally [4573] um averse and so what I'm doing here by [4576] adding a column called Discovery call [4578] URL and forcing in order to fill out [4580] this form you need to go to the CRM then [4582] click on the record [4583] is one I'm forcing them to be more [4585] familiar with crms so I'm forcing them [4587] to learn how all this stuff works for [4589] one and two I'm just forcing them to be [4591] in it every single day and just by being [4593] in it every single day they'll naturally [4594] start using this to like start [4596] coordinating their own work um so the [4598] very first time that I built a system [4599] that had a flow like this um I thought [4602] it was kind of janky but looking back [4603] this is actually one of the the highest [4605] Roi ways to build out flows by having a [4608] discovery call URL that like assigned to [4609] every specific lead it you know makes a [4611] lot more sense now you can also um you [4614] can just like give them this form maybe [4618] like this and then have them bookmarket [4620] and then what you can do is you can add [4621] a question in the discovery call form [4623] and say what's the email address of the [4624] lead that you just spoke with u and then [4626] you know they can put in Nick at left [4628] click. a or whatever and then that can [4629] also link it up but I find IDs are just [4632] you really can't you really can't muck [4634] it up because it's going to be directly [4635] in here um and it's just a little bit [4639] more I don't know it's like more [4641] accounting for the human biases in [4643] involved in you know building a CRM or [4645] building anything for a client that is [4647] sort of operationally averse so that's [4649] my rationale there so all I have to do [4650] now is I have to change [4653] the first flow I guess yeah I didn't [4655] think about this but I got to change the [4656] first flow to add this discovery call [4658] URL so I'm going to do that [4660] now on this new booking inquiry add to [4663] clickup what I'm going to do is I'll [4664] create the clickup [4666] record here create a [4668] task and then I'm also going to edit a [4672] task [4674] with custom Fields so I'm going to add [4676] that [4678] here I'm going to go through all the rig [4680] roll of selecting my workspace and all [4682] that so we're go workpace [4686] photography folder folder list [4689] lists list uh where were we content [4692] strategy [4697] yep the task ID that I'm going to select [4699] I'm going to map and then feed it in [4701] from the previous module here which is [4703] 13 create a task so I've created the [4705] task and then I'm going to select that [4707] task and then I'm going to scroll all [4709] the way down to where it says Discovery [4711] call URL then I'm going to paste in the [4714] type form with uh let me just be safe [4717] here so let me go [4718] back then I'll go right over here I'll [4722] paste in this type form and then where [4723] it says [4725] xxxxxx I will put the task ID that way [4728] it'll be [4730] creating um a new type form entry or a [4734] new entry or sorry a new discovery call [4736] form URL that pulls from the base Ur URL [4739] of this task or the ID which is 86 [4742] ut0 [4743] jrz good so now that that's behind us [4746] let me [4749] um let me test this [4754] actually I think now you see why this [4757] design pattern is so valuable because it [4759] allows you to test with the same data [4760] over and over and over again instead of [4761] filling up that godamn form which uh can [4764] be really really tedious at times okay [4766] so I just created a new lead in this [4768] content strategy thing and as you see [4770] it's right down here and if I click this [4772] we now have an ID at the very end of [4774] this that's associated with that [4776] specific record so I'm just going to [4777] delete this old record and then I'm [4779] going to use this as my example for the [4781] testing of the current flow uh and so [4784] the current flow looks like this where [4785] we're basically watching responses and [4787] then we're listing them so I'm just [4788] going to turn that on and then I'm going [4790] to go to this discovery form which is uh [4793] routed to that specific Prospect and [4795] then I'm just going to say that it's [4796] positive and then why is this [4800] asking I don't know why this is asking [4802] hold [4803] on okay oh I don't think I saved the [4805] type form logic did [4807] I [4810] um if it contains XA oh yeah sorry I did [4813] the opposite of what I should have done [4816] and go to two all other cases I want to [4819] go to thanks for filling this form my [4820] bad my bad Okay so this should now be if [4824] it contains xxxxx what's the click up ID [4826] otherwise just go to jump to a all right [4828] yeah yeah we'll go back here now we'll [4831] refresh this and now we should just have [4833] a submit button which we do and then I'm [4835] going to um submit and then go back [4839] here it's going to catch it sleep for a [4842] second and then get the response and let [4844] me show you guys where the data that [4845] we're actually looking for is which is [4846] our click up ID go to Hidden now in [4848] Hidden there is a cuore ID field with [4851] the ID that we want and so what we can [4853] do now that the discovery call form is [4854] filled is we could add another clickup [4858] module I'm actually just going to copy [4860] this from a previous module so I'm just [4862] going to copy that command C and then go [4865] over here command V the reason why I'm [4867] doing that is just because there are a [4869] bunch of fields here like workspace [4871] space folder that just take a couple [4872] seconds to load and this is just a way [4874] that I can get ahead of them be a little [4876] bit faster then what I'm going to do is [4878] I'll go over here to where it says [4880] hidden uh I'll grab the clickup ID and [4882] then I'm going to make use of a a [4885] make.com design pattern called if empty [4887] and so basically if empty is just [4889] whatever variable you put in it if it's [4891] empty then you actually add another [4892] variable and so I'm going to add this [4895] hidden clickup ID and if for whatever [4896] reason our design pattern didn't work or [4898] somebody found a way around whatever I [4900] just talked about with the [4901] xxxxx um then we'll feed in the uh [4906] will'll feed in the clickup the answer [4909] to that clickup question that I [4911] mentioned earlier although I just [4913] realized that we can't actually do that [4914] until we [4916] test this out so now I'm going to [4921] go we can't we don't actually have [4923] access to the variable [4924] of so let me refresh this with the X [4927] I'll say it's positive it's going to ask [4929] for the clickup ID so I'll go back here [4931] select the record copy this paste this [4935] and then I'm going to run uh submit this [4940] then I'm going to wait a second [4943] and then I'm going to run oh sorry I [4946] just meant to run just this uh it's [4949] going to get a mapable answer with the [4951] clickup ID here and then I'm going to go [4954] I got to reconnect this every time I [4955] change the variables like this so just [4957] pay attention to that if you ever wonder [4959] why a variable isn't showing up in like [4961] a subsequent module it's just because [4962] you haven't done that reconnection and [4965] then I'm going to stick in this clickup [4966] ID variable so what I'm saying is is hey [4969] if this hidden thing is empty then I [4971] want you to grab from the question that [4972] somebody filled out specifically with [4973] the clickup ID and then um what I want [4978] to do also is I want to change the [4979] status or maybe I don't want to change [4981] the [4982] status [4985] um we need to do something with this [4987] information otherwise it would have sort [4990] of been pointless to put all that stuff [4991] in so why don't I create an [4994] update instead then we'll just add or [4998] create [5000] a I don't know where the update is oh [5002] it's probably called comment yeah yeah [5004] post a task comment there we [5006] go we'll feed in the task ID from the [5009] previous field uh and then the comment [5011] text will [5012] be um call outcome and then going to [5017] collapse this and then I'm just going to [5019] take whatever the call outcome is I'll [5022] feed that in there put that back here [5025] and now at least we have some type of [5026] logging going on um granted because I'm [5029] not building out uh the the scope of the [5031] project did not include like an [5032] automatic proposal generator or whatever [5033] so I'm not going to build that out but [5034] we still have uh the stem of that if we [5037] ever wanted to build on it you can [5038] imagine how if you know the client [5040] called me and was like hey man I'm [5041] looking for a followup project where I [5043] want you to build that automatic [5044] proposal generator that you mentioned uh [5046] it be very easy for me just to go into [5048] the scenario now and then add a few more [5049] questions that type form and then [5051] basically map that into a gp4 module [5054] like I've shown you guys many times [5055] before and then turn that into some type [5057] of like proposal generator um but still [5059] for now that's that's fine after we're [5061] done with this the will be done [5064] so uh we should actually update the [5068] stage maybe I'll just [5072] say meeting [5074] concluded maybe we'll say awaiting [5077] proposal let's do [5079] that so assuming that the outcome was [5082] positive after we're done with the [5083] meeting we will update the stage to [5086] awaiting [5087] proposal and so we can do that over here [5089] with edit a task with custom fields [5094] so we can go to status and [5096] then say awaiting [5099] proposal um and then we should only [5102] actually we should only do a waiting [5104] proposal if they are [5108] positive [5110] well I don't know if that's really [5112] necessary I think after they filled the [5113] discovery form if it's not positive they [5115] could probably just delete it no that's [5118] not good we should uh we should do [5121] something the way that you could do this [5123] is you could add another stage here in [5126] Click [5126] up and you could call this [5132] um let me see you could say no [5141] fit maybe have that be [5144] red or maybe let's just do a Catch All [5146] Stage called closed [5149] lost no I think it' be better have no [5151] fit um close lost would presumably be a [5154] little too [5155] broad um this would be a done [5158] status so we'd save it then what we do [5162] is we go back here and then we'd [5165] switch so I'm going to refresh this [5168] again that'll grab the new field that I [5171] just created then using a switch [5176] module oh nice we can actually just use [5179] the plain text in the status field [5180] that's nice so if the [5184] incomings if the incoming input is just [5189] positive just positive then it's [5195] awaiting then it's awaiting [5198] proposal and then if it's no fit then [5201] it's no [5203] fit should be good let me see what [5206] statuses we have here yeah we got we got [5209] no fit right here right should be [5213] good um we had one other option which is [5216] no-show if it's [5220] noow U maybe we should just change that [5222] to awaiting meeting I [5231] think yeah I think I'll just change that [5233] to a waiting meeting for now it's not [5234] perfect because presumably the meaning [5236] of a waiting meeting meaning of a [5238] waiting meeting uh this meeting is [5240] something slightly different from what I [5242] what I'm referencing right now but we'll [5243] give this a try run this [5246] puppy okay it's calling it's taking a [5249] long time not a good sign might be an [5251] issue with the [5253] formatting yeah issue with the [5254] formatting so clickup is terrible [5256] because uh it'll just default to a team [5258] not authorized 401 error if there's some [5261] type of issue with the back end and so [5264] clearly in this case there was uh let's [5266] see what we added as a custom field yeah [5268] we didn't even add any custom Fields [5270] apparently which is weird oh right right [5273] status was awaiting [5275] proposal which is should have been good [5278] right that's what we're looking [5290] for yeah weird this is uh this is very [5296] odd why don't I test this awaiting [5299] proposal [5301] thing [5303] um we're going to go back to content [5305] strategy leads okay good and then I'm [5307] just going to grab the ID of this [5310] record and then I'm going to go back to [5312] my testing flow here just run this [5315] because I want to see if I just hardcode [5317] this as a waiting proposal does it still [5320] do [5322] anything uh let me just make sure this [5324] says a waiting meeting yeah it does so [5325] let me just try this click up ID click [5328] up ID let's run this and let's see if [5330] this changes the status to waiting [5331] proposal [5333] it does okay so there must have been [5334] some syntactical error in the way that I [5336] was doing the rest of this [5339] then yeah that looks like it worked fine [5341] so I don't know what happened with that [5347] [Music] [5349] switch it might be [5354] that the word positive isn't all that's [5358] in the [5359] form I go back to the actual for and [5362] then go question is there a space [5365] there's no [5367] space that's weird [5374] man we'll go try that again and see if [5378] maybe I screwed up formatting or [5382] something so we'll say positive oh oh my [5386] bad yeah yeah you guys watching this are [5389] probably like face ping right now and [5392] how I didn't see [5399] that okay that should be good run that [5406] again no it's still taken way too [5412] long let's see I fed in a waiting [5415] proposal as an [5416] input so awaiting proposal should be [5420] okay and I fed in positive oh maybe it [5423] can't change the stage if it's the stage [5424] already that could be [5427] it let's try running this and checking [5429] the mapable input it says positive oh [5431] positive with a p a capital P [5434] maybe maybe it's a capitalization [5437] thing let me see no we got a [5439] capitalization here that looks good we [5442] got no fit that looks good no show [5444] awaiting meeting maybe it just doesn't [5446] like the presence of a switch yeah I [5450] don't know man some modules are weird [5452] so I'm just going to set uh actually I'm [5455] just going to do a switch module if you [5457] guys haven't used a switch module before [5459] um they're basically that exact function [5462] they just allow you to um do this in [5465] like a another variable or another [5467] module basically I don't really like [5469] using them because it just uses an extra [5470] module but that's okay so let's use this [5473] as the input and let's say if it's [5475] positive we're going to go awaiting [5476] proposal they're also a little bit more [5478] like uh testable uh if it's no fit then [5482] we'll do no fit and then if [5485] it's no show then we'll do no show and [5489] that's what it that's what it's called [5491] right no show with a capital yeah looks [5493] like [5494] it so going back here um if it doesn't [5498] do any of those then let's just move it [5499] to a waiting proposal [5501] regardless okay let's just copy this [5504] output exactly we feed this in [5508] here output is now awaiting proposal so [5511] now as the input to this edit aask with [5513] custom [5515] fields we should be able to just feed in [5518] the uh the status and map it from this [5522] output it should save us a bunch of time [5524] and [5526] energy and probably brain cells at this [5528] rate okay let's run once got the switch [5532] still taking a while man I don't know [5534] about this I don't know if you can [5535] actually do the sort of mapping that uh [5537] that I want to [5538] do alternatively there could just be [5540] some other field that's not [5542] uh it's not being filled in correctly so [5544] yeah let's just diagnose the rest the [5546] mapable answers we have the clickup ID [5548] here that's good we also have a hidden [5549] here with [5552] xxxxx ah [5554] yes yes that's what [5556] happened uh this clickup ID is [5561] xxxxx so we'll say [5564] if hidden clickup ID and then we'll do [5568] an equals [5570] to [5572] and then we'll do [5575] um I think that'll [5578] work [5581] then I want you to oh man what's my [5584] logic um it's equal to [5588] xxxxxx then I want you to [5593] grab [5597] this otherwise if it's not equal to that [5599] then we'll just grab this [5603] I think oh otherwise if empty then we'll [5607] add [5612] that [5615] um [5619] alternatively [5621] yeah yeah I think that should be good so [5624] if that's equal to xxxxx then we're [5626] going to grab the manual [5628] input if it's not equal to xxxxx then [5633] we're going to grab it and then if it's [5636] empty we're going to grab that okay that [5638] should be [5639] good yeah yeah so it turns out the issue [5642] wasn't with the switch module at all um [5644] but this math still not may still not [5650] work so we can tell here yeah and it [5653] just continues to say it's not [5654] authorized even though that's obviously [5655] the mistake and the task ID we're [5657] feeding is [5658] xxxxxx [5660] so [5662] um my terribly sleep deprived brain is [5667] clearly not understanding what's going [5668] on [5669] here so I'm going to set a timer for a [5672] minute and then if I can't fix it I'll [5673] uh fix it and then just cut to [5678] that so the hidden clickup ID is equal [5681] to one two three four five and I think [5684] that was five [5686] right 1 2 3 four five [5689] correct maybe it's because I put quotes [5692] yeah I don't remember if make oh yeah [5694] it's CU I put quotes all right sweet I'm [5698] silly awesome and we got away without me [5700] having to find the specific spot in this [5702] video to cut so that was a w um great so [5705] now that's changed to a waiting proposal [5706] and now we have the logic basically in [5708] here um to Route uh [5711] successfully so wonderful wonderful [5715] news let's Auto align this save this and [5718] then run this uh Delete the old data and [5721] then run this puppy now this will be on [5724] the reason why I turn all of these on [5726] after I'm done muddling through which [5728] should have been a 5-second problem is [5730] because I uh I'm I'm GNA at the very end [5732] do like a full endtoend test of the [5734] system okay next is this stub that's [5736] watch emails new Facebook ads lead [5738] Parson add to clickup now I don't [5739] actually have an example of this so I'm [5741] just going to leave this as is but what [5743] I'm going to do is I'll just have some [5745] subject maybe like Facebook leads ad and [5748] maybe that's just how they um maybe [5751] that's just how they parse it and then [5752] I'm going to just like scaffold [5754] everything with a match [5756] pattern and then maybe what I want is I [5758] want like a [5759] name and this is more just for uh the [5763] purposes of let's just feed in the text [5766] content this is more for the purposes of [5769] me to be able to come back in here and [5771] just change it really fast so I'll do [5772] parse name and then I'll do the same [5775] thing for let's just do email address [5777] and phone number for [5780] now [5783] and I encourage you guys to get into [5786] this um when you guys are doing like [5789] more complex projects that maybe have [5791] multiple steps or [5793] multiple uh dependencies you know when I [5795] started this course and I recorded a [5797] bunch of videos it was always just one [5798] module but now we're starting to deal [5799] with or sorry one scenario but now we're [5801] starting to deal with like five [5802] scenarios six scenarios things can get [5804] kind of overwhelming unless you map out [5806] a little bit of what you're doing um [5808] there's also a maintainability issue [5811] where uh you know a lot of the time this [5814] just won't be anywhere near as [5816] maintainable when you look back at it in [5818] like a month or something like that [5821] let's just do default country for [5822] parsing that'll be us and then I'm just [5824] going to add a one of the clickup [5825] modules from a previous scenaria here to [5829] just create this task [5831] hypothetically and we're going to remove [5832] this filter and this way now uh later on [5836] when you know we do build out that [5838] feature or maybe we get some more [5840] clarity around the Facebook gads feature [5842] uh it's as simple as me just jumping in [5843] here and then running um I mean yeah I'm [5847] just going to run this for the purpos [5848] this video so we get like a nice purple [5850] slate but you imagine now that's not [5851] actually functional so doesn't really [5853] make any sense to run okay what else are [5856] we waiting for on this $2,500 system [5860] um daily follow-ups until paid or loss [5862] so I was initially going to do this [5863] automatically I don't actually think [5865] that that's a good [5866] idea I mean now that I'm thinking about [5868] it this is the first time that this [5869] guy's ever used a CR M before and he's [5872] at a stage where he's gotten where he's [5874] gotten to just by doing a really good [5875] job which is common with Freelancers at [5877] about the 20K a month range but in order [5880] to get past that in order to continue [5882] scaling you do have to like kind of [5884] build like very strong fundamental sales [5886] skills and I think part of that is just [5888] getting in the habit of following up [5889] with these people so if you think about [5891] it like I'm I'm not just trying to do [5892] the job for this guy um I'm trying to [5896] build infrastructure that'll enable this [5897] guy to scale for a very very long time [5899] and I also want him to gain skills and [5901] gain familiarity with using crms before [5903] I start just like doing all of this [5905] stuff automatically for him that he may [5906] or may not understand now obviously this [5909] isn't going to be every client not every [5910] client is going to want you to play the [5912] part of a Consultants as much as a [5914] builder sometimes they're going to have [5916] very specific things that they just give [5917] you a lot of the time they'll just give [5918] you a mind map like this honestly and [5920] those'll be like hey it's your turn um [5922] but in my case you know I'm taking more [5923] of like a I'd like I'd like to help this [5926] guy out you know in my conversations [5927] with him he's he's a good guy and uh I I [5931] don't know if an automatic follow-up [5933] system would be good for him if we did [5936] end up building it yeah if I did [5938] actually do this what I would do is I [5939] would basically be monitoring two [5940] statuses one would be awaiting payment [5943] um and then if an awaiting payment um [5946] we'd basically every 24 hours we' list [5947] all of the clickup records that are [5949] awaiting payment and then we check how [5951] long it's been since the data has been [5952] updated on the record and if the data [5954] has been updated and it's been over a [5955] certain amount of time then I would [5957] probably just select from a pool of [5959] maybe 20 random follow-up emails [5961] um that you know just have varying [5962] levels of copy that's like hey man just [5964] wanted to check in on this let me know [5965] if you need anything hey how can I help [5966] you with XYZ hey blah BL blah blah uh [5969] we' make sure that every email is a [5970] little bit different just so that any [5972] follow-ups seem organic and then we [5974] would just do that until we receive a [5975] definitive answer where the person's job [5977] would be either to move forward with it [5979] or to you know Market his lost [5980] essentially so I'm not going to do any [5982] of that stuff um last thing I'm going to [5984] do then is I'll do the client one add to [5985] project management list plus add [5987] onboarding tasks um I think that sort of [5989] like you know rounds out this whole this [5990] whole [5991] process so um what are we looking for [5995] here well now actually this is sort of [5997] annoying this one of the reasons why I [5998] don't like this we have to do this in [5999] two places I [6001] think because we have two crms now right [6004] not just [6007] one or maybe we can just do it in one [6010] let's do photography and we'll filter [6011] okay yeah you know [6013] what we could [6018] theoretically uh we should add a folder [6020] here [6022] yeah let's add a folder here so I'm [6024] adding a folder here called [6029] CRM and then I'm going to [6031] put event shoots and content strategy [6033] inside of that the reason why is because [6036] given the constraints of uh this fella [6039] not having [6041] a let's just put this above the project [6045] management sort of annoying I don't [6047] think we can oh yeah uh no we can't [6049] actually put this above [6052] come on [6058] man okay that's really [6061] annoying how do we move [6065] this move yeah [6070] move okay [6072] well ideally I want to move the freaking [6075] project management so it's after the CRM [6078] logically okay great yeah looks like [6080] that worked okay okay uh sorry about [6081] that the reason why I'm adding a folder [6082] is because um we've had to change the [6085] way that I would normally do this [6086] normally I would do this through web [6087] Hooks and then I would watch for the [6089] closed stage um because this fow doesn't [6092] have uh the right clickup subscription [6094] in order to enable us to do that I'm not [6095] going to force him to get a new clickup [6096] subscription I'm just going to change [6098] the trigger to that flow the trigger to [6100] that flow instead of being a web Hook is [6101] now going to be the watch tasks module [6103] however the watch tasks module uh can [6105] only filter by space folder list or task [6108] I don't want to set up two watch task [6110] modules so I don't want to have two of [6111] these scenarios one in the event shoot [6113] CRM and then another one in the um [6116] content strategy CRM just because I [6118] believe that that would be sort of silly [6120] and I'd always try to minimize the stack [6123] as much as humanly possible and have [6124] only one trigger to a flow and so what [6127] I'm doing is I'm filtering it by folder [6129] and then I'm selecting [6132] photography and then I'm going to select [6134] CRM what I'm looking for is when a task [6138] status is [6139] updated click save [6141] ideally you would name this something [6142] more descriptive than my tasks web hook [6145] but then I'm going to run this once and [6147] then I'm going to go into just one of [6148] these and change the status and I'm [6150] going to pretend it's closed we going to [6153] go back to this scenario here and you'll [6155] see that it received the event along [6157] with the task ID that we can use the [6159] issue with doing what I just did though [6161] is um I need to go back into all of [6164] these and I need to now select the [6165] folder and when I do this things are [6168] there's a possibility that I may have to [6169] re-enter all this information in which [6171] case that would blow so let's [6174] see CRM lists and then the list is [6177] content strategy [6178] leads good yeah I don't I don't have to [6181] reenter all that in which is [6183] nice wonderful wonderful so I'm just [6187] going to update the folder that I'm [6189] selecting in all of [6192] these and then I will also reselect the [6195] list because a lot of the time um click [6199] up can be [6201] sort of annoying with this if you [6205] don't so there you go selecting the CRM [6209] again we going go to back to content [6211] strategy Leads Here save this save this [6214] whole flow watch save again then I'm [6219] going to go to the Discovery call [6220] booking scenario here and then change [6224] the folder as [6228] well yeah as you can see there's a fair [6230] amount amount of back and forth when you [6231] make these Upstream changes and that's [6233] why I was uh recommending that you [6235] minimize this as much as possible this [6237] simple act alone is probably adding [6239] another fiveish minutes to maybe not [6243] five minutes just this in and of itself [6245] but simple acts like these do commonly [6247] add 5 to 10 minutes to what should [6250] otherwise be relatively simple flows [6252] right you'll also notice that if you [6254] look at this from a bird's eye view none [6255] of these scenarios are very complex they [6256] all cap out at I think like 10 scenario [6258] or 10 modules that's the most [6259] complicated one if you ever find [6261] yourself making modules with or [6262] scenarios with more than 10 modules odds [6264] are you're just making them way you're [6266] making one do way too much better to [6268] split them up so that everyone has its [6269] own specific function some people will [6271] complain that you'll be a little too [6273] operationally expensive this way but I [6274] say the few additional Ops that you're [6275] spending it's totally worth the [6277] maintainability bonus additionally I'm [6279] sure you are spending a few more [6280] operations but you're also doing a lot [6283] more error like better error handling [6285] where if there's an error in one part of [6286] the flow it doesn't impact like the [6287] entire flow so a lot of the guys that [6290] are watching this [6291] um I've looked at you know some of your [6292] guys YouTube channels and some of the [6293] people that have subscribed that have [6295] left comments that do make.com stuff and [6296] record videos on it a lot of your guys [6298] flows are really really big like they [6300] might have like I don't know 50 or 60 [6302] modules and they have a bunch of routers [6303] inside I would just encourage you to [6305] stay away from that however possible use [6306] switch modules and then use um the sorts [6309] of design patterns that I'm showing you [6311] here uh because it's just much more [6313] maintainable and if something screws up [6314] early on in the flow it doesn't really [6315] impact the rest of it any who so that's [6318] my that's me waxing poetic I'm going [6320] watch this these tasks and what I'm [6322] looking for here is specifically I'm [6324] looking for the field after and the [6327] status to be closed so I'm going to use [6329] that as my filter now when that happens [6331] what do I want to do well I want to do [6333] two things number one I want to get the [6335] task that'll enable me to basically pull [6338] all of the data from the task and then [6341] get a bunch of information and then two [6343] I actually want to recreate that task in [6345] the project management space so I'm [6347] going to say uh this is closed [6351] and then if if we look into history [6353] items and then after and if the status [6356] is equal to [6357] closed then proceed then I'm going to [6360] get the record and after I get the [6362] record what I want to do is I want to [6364] recreate this whole record so I [6365] basically want to create a new [6368] record and I want to create in the [6369] project management space now instead now [6372] you can use clickup automations for this [6373] you don't have to use the make system [6376] that I'm setting up here but I prefer if [6378] I'm handling some of my stuff in make uh [6380] so if I'm handling 90% of my stuff in [6382] make might as well handle 100% of my [6384] stuff in make again just makes it a lot [6385] more [6386] maintainable we're actually not going [6388] here we're going to folder lless list [6389] and then project [6390] management makes it a lot more [6392] maintainable and maintainability is the [6395] main issue that a lot of people have [6396] with [6398] make.com we're not going to create a [6400] subtask the task name so I actually have [6402] to run this now to like get some of the [6404] data so I'm just going to go [6406] example save I'm going to unlink this [6409] I'm going to run this and and then I'm [6410] now going to change one of these records [6413] we'll do intake to start that should uh [6415] run the scenario we're also going to run [6417] it again and then change intake to [6420] closed this is going to pass through [6422] we're going to get the task and now we [6423] get all the fields from the task so now [6425] we can connect this to its subsequent [6427] module and now we have access to all of [6428] the fields previously so the task name [6431] for this is I'm going to go if empty um [6435] and we're going to go down to company [6439] name [6441] right here then I want to do the first [6443] name and the last [6444] name that way we're look for the company [6447] name preferentially but then if there is [6449] no company name maybe it's a very small [6450] outfit or it's a promoter or something [6452] like that that doesn't have a company [6453] under them then we'll just put their [6454] first name and their last name as a [6455] project [6456] record couple of other things I want to [6458] do obviously I want to add that [6461] information everywhere else throughout [6463] the flow so we'll put first name here [6466] progress will make them onboarding phone [6469] will add the phone number that we've [6471] collected and [6473] then my magic track pent so magic uh we [6477] will add this [6479] email if the company name exists then [6482] it'll be stuck in here there'll be no [6485] address and then will have their last [6487] name go [6489] here and then I [6492] believe that's it all I want to do now [6495] is I basically want to I'm going to do [6497] an interesting design pattern here I'm [6499] going to iterate over some subtask oh [6502] actually no I'm not going to do that [6504] what I'm going to do is I'm going to get [6505] the task sorry about this I'm going to [6508] create a Google drive folder there you [6509] go this is what I wanted to do I'm going [6513] [Music] [6515] to create a folder there we [6519] go I'm going to go here never mind then [6523] I'll just make it here I don't want to [6525] update this new folder location I'm just [6527] going to make this back slash okay I [6529] guess I I do have to update this that's [6532] unfortunate uh what I want to do is I [6534] want to have a Google drive folder that [6536] houses all of the information here uh [6538] and so we're going to do the same thing [6539] that we did earlier actually yeah we're [6541] going to go if empty company name then [6543] write first name last [6547] name uh and then I want to share this [6549] folder and then I want the role to be [6551] writer and [6553] then uh we could segment this by domain [6556] so that only people that are in a [6558] specific URL that or a specific domain [6561] that we want is accessible but for now [6562] I'm just going to say everybody has [6564] right access to this maybe I'll just do [6565] everybody no I'll do right access for [6567] now so the reason why I do this is [6569] because what I want to happen is every [6570] time any project gets created I want to [6571] create a Google drive folder and then [6573] when I create the task I actually want [6574] to go into click up and then add that [6576] Google drive folder to the project that [6577] we just created so that anybody on the [6579] team has one centralized resource to [6582] place all of their [6583] data so let's say Google Drive let's add [6587] that column and when to move this all [6589] the way back [6590] and you can imagine how this is a [6592] photography business right so there's [6594] probably going to be some photos being [6597] taken so I'm going to refresh this and [6601] then I'm going to add the Google Drive [6602] link that we just created [6604] to that record under the Google Drive [6607] URL column and it should be in something [6610] that's like shared or [6612] something I don't actually remember how [6614] to access a web view link I think okay [6616] I'm just going to do web view link we'll [6618] roll with it okay and then I'm going to [6620] run once and then we're going to do an [6621] example and we're going to assume that [6623] we just closed a Content strategy lead [6625] worth a million bajillion dollars uh [6627] called Nick SAR I'm going to move this [6629] to intake first it's going to run once [6631] but nothing's going to happen and I'm [6632] going to run it again and then move this [6633] from intake to [6636] closed we're going to run we're going to [6638] make the Google drive folder and we're [6639] going to add the Google drive folder and [6641] the new record into the project [6643] management space which we just did [6645] you'll see there's now a Google drive [6646] folder which anybody in the team will [6648] have access to so if they can upload a [6650] files maybe photos that sort of thing um [6652] and then we're also going to remove this [6654] address field and then delete this old [6656] record last thing I'm going to do is I'm [6658] going to create a couple of subtasks the [6660] way I'm going to do that is I'm going to [6662] make use of an [6663] iterator and I'm just going to make my [6664] own uh array and uh this is a very [6667] simple and sort of like dirty design [6669] pattern uh but I just want there to be a [6671] couple of different subtasks to this I [6673] want there to [6674] be um like like hypothetically just to [6676] show the client what's possible because [6678] I want to be able to upsell them later [6679] on so I'm going to [6681] say what's a good [6688] task let's say um they're going to [6691] determine whether or not they [6693] [Music] [6695] need some projects they're not going to [6697] be able to make so they're hiring a [6698] second shooter that'll go in there and [6700] then you know complete the project for [6701] them so determine second shooter [6705] status we'll [6708] do [6711] confirm date and time with [6714] client we're going to split this by the [6716] presence of a comma that'll provide us [6718] an array with two items and then we can [6720] use that to create two tasks both with [6724] the names as [6726] titles and then this will allow us to [6729] Let's map this from [6731] earlier task name is just going to be [6733] the value that we get from [6735] that then all of the stuff will be empty [6745] okay and now [6747] oh let me do this one more time so I'm [6750] just going to delete [6752] this go back to content strategy leads [6755] I'm going to go to intake again it's is [6756] going to run because again it runs [6758] unfortunately every time any status [6760] changes that's why this method is a [6762] little bit limiting um and it's also a [6764] little bit more operationally intensive [6765] going to create that Google Drive fold [6766] to create the task iterate [6768] twice [6771] there's that first time there's that [6772] second time if we go back to the project [6773] management space now we now have um a [6776] new record created in the [6778] onboarding um progress stage and then [6781] you'll see that there's now determined [6783] second shooter status and then confirm [6784] date and time with client so there [6786] actually two tasks here I've noticed [6787] that all of them have onboarding as [6790] a stage here so I don't really like that [6792] I don't want my subtasks to have any [6794] sort of status this is one of the [6795] reasons why I don't like using a status [6796] field so I'm just going to go here and [6798] make this empty [6801] awesome so that is going to be our [6804] onboarding simple onboarding [6807] process somebody should be assigned to [6809] this [6810] actually yeah let me just make sure [6812] somebody's assigned to this uh if [6814] nobody's assigned to something in your [6816] CRM that's a [6817] problem [6821] awesome [6823] great and then I'm not going to do this [6825] as I mentioned [6827] earlier yes really cool now we have all [6831] four of our scenarios for this CRM [6834] system set up and so what I want to do [6836] now is I actually want to run through [6837] and just test it end to endend before I [6838] do any sort of delivery always get in [6840] the habit of doing this before you do [6842] any sort of delivery because the worst [6845] Vibe or energy that you can give a [6846] client is that uh is that you haven't [6848] tested it before you deliver it to them [6850] just probably the biggest and most [6852] common loow hanging fruit I would say so [6855] why don't we test both ways to get into [6857] the system there's an event shoot funnel [6858] and then a Content strategy funnel [6860] let me rename this so it says event [6862] shoots leads so my OCD will stop and uh [6866] once they're in there I'm then going to [6868] run through the process with both make [6870] sure that when both get closed then we [6871] create a new a new deal or a new [6874] lead you know I just realized [6877] that actually the specifics of our [6882] onboarding are going to depend on the [6885] type of [6887] lead so let me just just add one more [6890] column here let me bring back the type [6899] column let me yeah I mean that makes [6902] sense right we got two different types [6904] of clients some of them are going to be [6905] event shoot some of their corporate [6906] strategy event shoot leads are going to [6908] have determined second shooter status [6909] confirm date and time with client and [6911] then [6912] maybe content strategy [6915] leads are going to be a little bit [6917] different okay this is the last thing [6919] we're going to do before we run through [6920] an end [6923] entend so here we're going to do switch [6927] and then if the input to this [6931] is if the [6934] list name that we're getting this [6942] from is content uh let's do event [6947] shoot leads then we're going to do split [6950] determine second shooter status confirm [6952] date and time with [6953] client and then if it's content strategy [6957] leads then we're going to do instead of [6960] determine second shooter status we're [6962] going to [6963] say [6965] book site [6968] tour and [6973] then we'll do create or complete content [6978] audit there you go yeah I remember uh [6981] him mentioning that he did something [6982] like that I'm going to check the space [6985] names so or List names event shoot event [6987] shoots leads yeah that's a problem there [6989] because I didn't put that [6991] in and why don't we just change this [6993] name because this is grammatically [6997] incorrect make sure this says event [6999] shoot leads good this one says content [7000] strategy leads good and now we should [7003] have a differential here where if it's a [7005] Content strategy lead our uh array that [7007] we're iterating over is going to be the [7009] cont [7010] things that are specific to content [7011] strategy like booking a site tour [7012] completing a Content audit then if it's [7014] specific to an event shoot it's going to [7016] be determined second shooter status [7017] confirm date and time with [7019] client okay nice so now all we have to [7024] do left is test the system and that's [7026] pretty straightforward right so I'm [7027] going to delete all of the records in [7030] this whole thing make sure that we got [7032] nothing and then I'm going to run [7034] through the form and I'm going to do our [7037] form that we send to the client and then [7039] I'll finish that for for the event lead [7043] or event shoot lead and then I'm also [7044] going to do that for the content [7045] strategy lead just to make sure that [7047] everything here is hunky [7051] dory so this is the [7053] Forum welcome to client photography [7057] we're going to pretend we're [7058] shooting we're going to pretend that [7060] it's Nick [7062] again I need some more people to put in [7064] here man it's getting lonely just being [7066] the only [7068] guy [7074] looks good we're going to say it's three [7076] hours we're going to select a date and [7078] time in this calendar the 14th at uh you [7081] know I've used that a lot let's go here [7084] let's go 900 pm. G to pull all my info [7087] in and then let me just make sure all [7089] these scenarios are on all these [7091] scenarios are on so why don't I actually [7094] just open them all and then run them as [7096] well I guess I only really need these [7098] three so first we're going to be looking [7100] at new booking then we're going to be [7101] looking at new discovery call formfield [7103] and then we're going to be looking at [7103] client one so let's run new [7107] booking and let's schedule the [7112] event now that it's schedule it should [7114] automatically finish we did grab the [7117] type form [7118] response and [7121] then why the hell is this a Content [7123] strategy don't tell me a I filtered [7125] my content strategy that's stupid well I [7128] feel dumb we're going to do this but [7130] we're going to run this instead and I'm [7132] going to go to content strategy leads [7134] and delete [7138] this okay let's try this again it should [7141] be event shoot because that's the most [7142] recent one good good we out of the [7145] Google Calendar event let's go back and [7147] see how the event shoot leads is [7149] doing it's at a waiting kickoff [7151] salesperson's job is [7153] now simply to jump in here look over the [7156] details that have been submitted the [7158] address make sure that you know it's [7159] like where it needs to be maybe add some [7161] extra time to the um invoice that [7164] they're sending because it's like very [7165] far make sure that everything's all [7166] hunky door give them a call and let them [7168] know and then you know presumably they [7170] like a stripe account or something so [7171] they'd go into stripe and then they'd [7172] shoot it over and then they'd change us [7174] a waiting kickoff to a waiting payment [7176] the client would look over they'd be [7177] like oh this is great um you know thanks [7179] so much I'm down to get started tomorrow [7181] let me pay that invoice they pay the [7183] invoice what we could do is we could [7185] theoretically have a stripe um scenario [7188] that's watching and waiting for people [7190] to pay invoices and then when they pay [7191] the invoice we update this automatically [7193] but as I mentioned earlier I want the [7194] guy to get in the habit of like checking [7196] this a little bit more often so I'm not [7197] going to automate everything for him [7198] just yet but any who after that's done [7201] uh we are going to move it to closed but [7202] before we move it to closed let's fill [7203] out another Form for Content strategy [7205] leads and make sure that that side of [7206] things works good so I'm going to go [7208] back [7210] here run this again go to the booking [7214] form and then essentially copy and paste [7216] all of my [7218] information [7226] in a book a free strategy [7228] session go to the 15th you'll notice [7230] that between the hours of 900 p.m. um or [7234] 8:00 P.M I think to like 10 or something [7236] like that we're we're booked up we can't [7240] so wait a second I feel like I'm missing [7244] something where's that question that [7246] asks me how long the event was supposed [7248] to be [7251] feel [7253] like I didn't fill that [7256] out [7258] right did I fill that out I don't even [7264] remember if I did fill that out then [7266] when I created that Google Calendar [7267] event a second ago then that should have [7270] overwritten that [7275] time let me look at the data from that [7279] it did say it was 3 [7282] hours this says it's 3 hours it's [7284] between 5:30 to 8:30 on the 14th looks [7292] like weird I guess I was looking at the [7295] 15th and not the 14th or there we go [7298] we're not feeding in the right cly knew [7302] it yeah I could tell there was some [7303] issue there so we're going to feed in [7305] the actual right countly [7308] okay [7310] so I'm actually again if there's ever [7311] any problem in in the testing phase uh I [7313] go back and then I retest and I [7315] basically just continuously retest until [7317] I've determined um or I've like [7319] completed everything with no problems [7322] because if you think about it I mean [7323] this is what the client's going to do [7324] anyway right so you can't really screw [7326] that [7327] up okay yeah this is right now it's on [7329] the 15th between 8 to 11 good so let me [7332] just make sure that that is good inside [7335] of [7337] here so it's 2: p.m. to 5 p.m. just [7339] because my time zones are really messed [7340] up um so this is technically I know 16 [7342] hours ahead or something like that [7344] because the client's in Australia but [7346] anyway yeah that's that's right and good [7349] like we can delete this one because this [7351] one was false we can pretend they've got [7353] an A awaiting payment good uh awesome [7356] awesome awesome so now that I'm done [7357] that I'm just gonna see if I can reload [7359] the form I don't know if it's going to [7360] let [7361] me yeah there you go so it's reloading [7364] good and now we don't have the time that [7365] we initially had on the 15th so let's go [7367] to the 16th let's pretend I'm setting uh [7369] meeting up for 5:00 p.m I don't know we [7372] got our details let's run this scenario [7374] again save this run it submit [7384] it we're getting the response there's [7388] some issue with cly [7392] again good Lord what is the problem this [7397] time oh [7400] you know what because there are two [7401] different cly [7403] questions there are two [7405] different right right because there are [7408] two different Cy questions there are two [7410] different um [7414] outputs so we're going to go if [7417] empty that means that if one of them is [7419] empty then the other one will [7421] populate silly silly should be good yep [7424] good content strategy lead created we're [7426] going to go and check this out here now [7429] they are in a waiting meeting which was [7430] the idea what's going to happen is they [7432] are going to have the meeting when they [7434] have the meeting the salesperson will [7435] click on this link that's this form with [7437] the ID they'll then click positive we're [7440] going to go new discovery call form test [7443] let's run that [7444] puppy then go back uh here then they're [7448] going to click submit this is going to [7451] complete the type [7452] form and then this is going to both edit [7455] a task change the status and then post a [7457] task comment and then if we go back here [7459] you'll see that this is now in a waiting [7460] proposal so it's been updated it's [7462] basically waiting the salesperson to [7463] jump in do the proposal if you click on [7465] it as well you'll also see that there is [7466] a task outcome that says call out [7468] compositive this is just a logging thing [7470] it doesn't really it's not really going [7471] to be that valuable uh just yet but gets [7473] them in the habit now after awaiting [7475] proposal after that's sent the [7477] salesperson would then change this to [7478] proposal sent once the um payment is [7481] sort of completed or once the proposal [7483] is sent and they're a waiting payment I [7484] would recommend you send these both at [7485] the same time but you change this to a [7487] waiting payment and then when the [7488] payment done then you move it to closed [7490] now we need to test our ability to [7492] successfully move people to closed right [7494] so what I'm going to do is I'm going to [7495] run this and then I'm going to move this [7497] from awaiting payment to closed we're [7499] going to see how the scenario works now [7501] that we are iterating um using a [7504] switch cool we got two subtask created [7508] so something should happen here the [7510] first thing is I'm not actually removing [7512] this from um the leads scenar uh the [7515] leads uh CRM by the way I should have [7517] clarified this earlier but essentially [7519] most of the time people just hide this [7520] and the reason why they have it is just [7522] for a historical log of sales activities [7524] so I'm just GNA hide this now so we [7525] don't see this anymore even though it's [7526] closed uh if we go to project management [7528] now you'll see that a record has been [7529] created with two subtasks that are [7531] specific to content strategy I didn't [7534] put in the typ here so that's something [7535] that I have to do um I added a new type [7537] field just to delineate between the two [7539] right but I didn't actually add the [7541] thing and then it looks like I added the [7543] assign on the subtask but I didn't add [7545] on the parent task so I'm going to go [7547] back here and then I'm going to add the [7548] assign on the parent task and the [7553] subtask and then I'm also going to jump [7556] in here and add a type to the parent [7559] task now that type is going to require [7561] me to do a switch module [7563] again so we're going to switch and then [7566] we're going to [7569] say um I'm just picking up the list name [7572] so I'm going to feed that as an input [7574] and then if the list name says content [7576] strategy leads then the output that I [7578] want from this is I [7580] want this mapped function or variable [7585] and then if it's event shoot leads then [7587] I want to [7589] select this [7593] variable I love testing because it [7596] just elucidates so many of these tiny [7599] things that I I frankly get wrong quite [7603] often okay so let's see how this works [7605] on the event shoot lead instead let's go [7609] closed this is going to select that [7611] filter through create another Google [7612] drive folder it's going to create the [7613] task hopefully with the assignes now and [7615] it's going to iterate through them again [7617] this is closed so I would just collapse [7619] it hide it I'm going to go back to [7621] project man should be another one called [7622] left click good it has the type [7624] correctly this time which is nice there [7626] is no um type or progress or anything on [7629] the subtask which is beautiful has a [7630] Google Drive has the first name last [7632] name of the lead or the client now the [7634] phone number the company and the email [7636] awesome that's everything that we need [7638] in order to deliver this project um at [7640] least as it is right now and that is [7643] what I would represent or that is what I [7644] would I would call um a pretty solid MVP [7648] realistically there are probably a few [7649] smaller additional features that the [7651] client would want and they're only [7652] really going to know that they want this [7654] when they actually thumb through the CRM [7656] play around with it a little bit uh [7658] maybe create a couple example Rec [7659] records that sort of thing but [7661] everything that you saw is everything [7662] that I do on basically every client [7664] project and whether the client project [7665] is $2,500 like this one or it's I don't [7669] know like 15 or $16,000 like some of the [7671] bigger ones um you follow the the same [7674] steps essentially always focus on [7676] creating a minimum viable product first [7679] uh if you think that the client is going [7681] to have some difficulty like accepting [7683] something or maybe they're not really [7684] sure what they want make sure you do [7685] like a workflow map it's always easier [7687] to change things further up to change [7689] than it is to change things down at the [7690] very bottom and the whole idea is let's [7692] like crystallize the picture early with [7694] the Mind flow or uh mind map and then uh [7697] crystallize it further with the MVP and [7699] then finally like when the client wants [7701] a couple tiny little changes made that's [7703] okay it only takes you five or 10 [7705] minutes or something like that so yeah [7707] that's about it um everything that I [7709] showed you guys is equivalent to the [7710] work that I will literally always do for [7712] my clients uh specifically if they want [7714] like a simple serum like this what I'm [7716] going to do now is I'm going to record a [7717] video for the client basically just [7719] walking them through what I just walked [7720] through to you uh not all of it just [7722] that last part testing the flow making [7724] sure they understand how everything [7725] works and basically saying okay great [7727] now it's your turn I want you to go go [7728] through and I want you to test it and [7729] end and let me know what sorts of minor [7731] changes you would like me to make [7733] important to say your expectations there [7735] are always minor changes at this point [7736] because you've already put all your time [7737] and energy or two or three hours like I [7739] did in building the rest of the system [7741] uh but most of the time the clients that [7742] you work with you know as long as you're [7744] intelligent and you're respectable [7746] yourself you know you you uh expect [7749] respect and you're treated with respect [7751] um you don't really have to worry too [7752] much about you know the that [7754] you probably hear in most Reddit or [7755] upward Horror Story threats thanks so [7757] much for watching this video I had a [7759] blast actually doing two birds with one [7761] stone I literally just finished a small [7763] client project and then I recorded [7764] another YouTube video I'm going to try [7766] and do this as often as humanly possible [7768] you guys of any scenarios or flows that [7770] you want me to build for you maybe [7771] whether it's a project that you're [7773] working on for a client right now or [7774] something you want to add to your [7775] portfolio please leave them down below I [7777] find these videos frankly in my humble [7779] opinion to be the most rewarding ones [7780] that I make otherwise please like [7782] comment subscribe do all that fun [7783] YouTube stuff and I'll catch you all in [7785] the next one cheers

Video: https://www.youtube.com/watch?v=NKX6cdLIH80
Title: How I Grew My Make.com YouTube Channel To 3.7K Subs In 26 Days
[0] what's going on guys it's Nick here and [1] in this video I want to take a departure [2] for my usual automation stuff to talk [4] about YouTube growth as a lot of you [6] guys know I've grown my YouTube from a [7] little over 300 subscribers up to I [10] think 3,700 is as of right now probably [13] going to be over 4K by the time you guys [14] are watching this um and a lot of people [16] have sort of made notice of this [17] meteoric growth over the course of the [19] last little while and just asked me some [21] questions about like how I produce the [22] videos um what my rationale is how I [25] decide what to talk about next even like [26] what my recording setup and my my kit [28] looks like so what I wanted to do in [30] this video is just break all that stuff [31] down for you guys I wanted to show you [32] what a realistic uh YouTube Ascension [35] might look like for people that are [36] really good at their craft and sort of [38] know what they're doing um I want to [39] talk a little bit about like the the [41] niches that I pick the way that I [42] respond to comments just all this sort [44] of stuff that's probably at the back of [45] a lot of the people that are watching [46] this is minds and they're like hey what [48] is Nick doing what's the purpose of all [49] this and you know maybe if I wanted to [51] build in public how would I do that as [52] well so if that video sounds like [54] something you guys are interested in [55] whether for business purposes or more [57] just for like curiosity sake then stay [59] tuned and let let's get into [63] it okay so the first thing I'm going to [65] cover is just some stats and where we're [67] at right now and then I'm going to talk [68] about like my actual production process [70] my rationale sort of the philosophy [72] behind all this stuff so here's what the [73] stats look like today as of you know [75] march thei to 40 um I enabled [78] monetization yesterday and so yesterday [81] I made about [82] $384 um that's not accounting some of [84] the affiliate money that I've made over [86] the course of the last few days which is [87] nice um some of you guys have used the [89] affiliate links and a lot of the people [90] that are watching this may consider to [91] do that in the future to help out you [93] boy but uh you know the the the money [96] that I'm making from ads was never the [97] point of this Channel and it's probably [98] not ever going to be like the main [100] contributor to you know my my economic [102] success um really the purpose of this [104] channel was to educate a large number of [106] people to float the idea of a community [108] or something like that at some point in [109] the future and then also to provide so [111] much legitimacy and respect and [113] Authority within the niche that I can [114] get the sorts of automation jobs that I [116] want to get in the future you know like [117] the 20 3040 $50,000 month the sort of [120] deals um that'll enable me to become [122] even more financially independent than I [123] already am so any who this is the [126] breakdown of the dashboard we got views [127] over here on the left as you can see [130] I've been posting every single freaking [132] day for the last 27 or 26 days I think [136] this might be the 26th the 27th so uh [138] basically just non-stop and you'll see [140] here that the views at the very [141] beginning of this on February the 6th [142] when I started were basically none this [145] is actually what I what I thought that [146] it would be like today I didn't think [147] that I'd ever get more than 70 or 80 [148] views a day at least for the first like [150] six months of recording and so my [152] mindset here was just uh kind of [153] quantity and just to push out content so [155] that I can quickly learn and adapt to [157] what people on YouTube consider high [159] quality and valuable and that sort of [160] thing uh and you'll see that pretty [162] quickly within like the first maybe [163] seven days so 1 two 3 four five six [165] 7even I was already starting to earn [167] some respectable view numbers right like [168] 300 views on my eth day 500 views [171] approximately on my uh ninth day 800 [174] views on my 10th day and within like you [176] know 10 days or so I'd basically if you [178] just take the average of these to what [180] that like 90 within 10 days or so I [181] basically like 10x My Views and then I [184] received like the first what I'd call [186] major bump in my views and my [187] subscribers which is pretty cool so [190] subscribers are what most people are [191] interested in when they talk about [192] YouTube Just because obviously Subs have [194] a lot more staying power and Subs are uh [196] I don't know you know you can do things [197] with Subs you can monetize them you can [199] sell stuff to them like courses and all [200] that sort of stuff so uh that's what [202] people are interested in and that's what [204] this gross this is what the growth looks [205] like day one I got six Subs 5 4 14 7 11 [209] 8 19 30 46 50 140 314 that was a pretty [215] good day 369 361 and you know then it [219] kind of goes down a bit and then it [220] looks like I'm in some second sort of [222] Renaissance right now I imagine one of [224] the videos that I posted has gone sort [225] of viral people I think are sharing it [227] in their communities and stuff like that [229] so that's why it's going up over here um [232] and really there there are a couple [233] takeaways to take from this like I've [235] started YouTube before and I did [237] reasonably well I think I got up to like [238] 3500 Subs so you know a little under [241] where I'm at right now the difference [243] between what I'm doing now though and [244] what I what I did then is what I was [246] doing then was I like published one [249] video a month and I tried to put a lot [251] of time and energy into that video but [253] realistically because my um turnaround [256] time was so much lower on the videos [257] that I was producing it was really [259] difficult for me to like learn what [260] people wanted and explore a diverse [262] number of topics or at least enough of a [264] diverse number of topics that I could [266] kind of sus out what people wanted to [268] hear and the things that people found [269] important uh and you know as a YouTube [271] person or as a Creator or whatnot that [273] that is a pretty important part of your [275] job right like you you press a bunch of [276] buttons and then you see oh when I press [278] this button you know people are louder [281] right like H so every time I press [282] people are shouting okay good you know [285] maybe I need to like build some [286] infrastructure to press that button more [288] often it's a shitty example but I think [290] you guys get my point right these are [291] pain points uh or issues of the audience [293] is going through that you can then [295] position yourself to help solve uh and [297] so in that way you know YouTube is [298] basically just like Entre R preneurship [300] just uh in the information product kind [302] of way but when you're publishing that [305] infrequently like once a month or [306] whatever the hell is was publishing like [307] before the rate at which you can do that [309] is just so much slower and if you [311] contrast that with my my publishing [312] every single day which I mean in the [314] initial I was totally ad living I had no [316] idea what I was doing or all I was doing [318] was just like running through the uh [321] successes that I've had in business and [322] hoping other people would find them [324] valuable as well you can see they didn't [325] really make a dent or anything until you [327] know I started writing about uh [330] specifically and you know figuring out [332] that the pain point that a lot of people [333] had with that is that like there's just [334] way too many nerdy explanations of how [337] this works and not too many that are [338] focused on funds and how to how to grow [339] your business so you know you can kind [341] of see that that pattern um so that's my [343] mindset behind developing all this stuff [345] it was like I'm GNA move fast I'm going [346] to break things I'm not going to be very [348] good I had really shitty thumbnails to [350] start essentially I had 10 people a day [352] sending me emails being like yo bro your [353] Channel's awesome and you're going to [354] take off but your thumbnails blow you [356] got to fix those I'll do it for you and [358] you know just pay me $5 or something [360] like that um so since obviously changed [363] that I've done a bunch of minor [364] optimizations that improved the channel [365] output so yeah that that's nice and then [367] the monetization aspect like I think a [369] lot of people are going to look at the [370] 3841 and then they're going to multiply [372] it by 30 days and they're going to be [373] like damn you're already making you know [375] 1,200 bucks a month off of ads uh and [378] it's like yeah I mean I suppose so I'll [380] probably make more than that maybe it'll [381] be like $1,500 uh in the next 30 days [384] maybe $2,000 depends on how much more I [386] grow but like if you think about it ads [389] are such a small portion of the Economic [391] Opportunity that YouTube represents if [394] you go on my newsletter I wrote a blog [396] post um just a couple of days here [399] called a cold lead suck but they make [400] you a lot of money and this is basically [403] my breakdown of my philosophy behind why [406] I'm starting YouTube and why I'm [407] focusing on branding now and you know if [410] I could just tldr this and summarize it [411] it would be that I'm very good at [414] acquiring cold traffic to all of my [416] business resources and that's how you [418] know I've been able to make make a [419] million dollars over the course of the [421] last 12 13 months that's how I've been [423] able to have those like standout months [425] where I'm pocketing 48,000 freaking [427] dollars right more money in one month [430] than I thought I would be able to [431] produce in like a year just a few years [433] ago so these are these are valuable [435] skills but they're also really draining [438] and they're also really hard if [440] I'm being completely honest because [442] you're always selling to cold people [443] cold audiences people that just don't [445] like you people that are always [446] skeptical of you and so like my my [448] mindset was that would start doing [450] YouTube to help alleviate some of this [452] and just to see if there was like [453] another alternative lead source that I [455] might be able to to build where you know [458] instead of me constantly having to fight [459] this uphill battle and try and you know [461] win people over with a pitchfork try and [463] sell them on some service and maybe get [465] a few pennies for it well okay pennies [467] is mistaken but I think you guys see [469] what I mean what if I could change it so [471] that you know I provide so much value [473] just through the videos that I create [475] and Through The Branding that I've been [476] able to cultivate and that sort of thing [478] that a lot of the uh leads in in my [479] audience people that may have business [481] systems that need help they just come to [482] me instead and I don't have to deal with [483] any of that stuff and that's that's [485] really been my whole philosophy here the [487] 3841 is like one one 100,000th of I [491] think the total potential of building [493] like a good solid successful brand um [497] you know I have a bunch of conversations [499] that I'm having right now with probably [501] a few of you that are watching this uh [503] where people want me to build them [504] systems for 15 20 $30,000 already U I [507] have a couple of like partnership [508] conversations that having with people [510] that own like micro private Equity firms [512] and stuff like that if a single one of [514] those deals goes through you know I [516] might be able to earn 500 times whatever [518] the daily estimated Revenue that I can [519] imagine to make over the course of the [521] next uh two months and I might just be [523] able to do that in one swoop right so [525] the value really I think in YouTube if [527] you're approaching it from an automation [529] perspective or like a high tick service [530] like I am really isn't in the AdSense or [533] in the revenue that you could make uh [536] but it's about like the connections and [537] the Serendipity that you're able to [538] build the branding the reputation The [540] Authority um I've also seen some knock [542] on effects from this where a bunch of my [543] current clients all uh as well as people [546] that I'm currently in the process of [547] closing they will go out and just see me [550] on YouTube maybe they've searched my [551] name up on Google or something and so it [553] remembers the cookie and I don't know I [554] pop up in their watch feed but this has [556] happened a couple times where they're [557] like hey we just saw your video on [558] YouTube can we chat like I'd love to I'd [560] love to move this forward and these are [562] leads that you know maybe just haven't [563] talked to me in like three or four weeks [565] people that otherwise wouldn't have [566] wanted to do it so I'm having having a [569] lot of success there both directly I [570] would say just in terms of generating [572] conversations and then indirectly in [573] terms of um you know like the impact of [576] the perceived brand Authority and [578] recognition on my ability to close so I [581] I kind of killed two birds with one [582] stone if that makes sense so it's been [584] really valuable so far um I was really [586] inspired by this [588] guy I think it's Jackie Chu yeah Jackie [592] Chun that's funny I was really inspired [594] by this guy his name Jackie I built up [596] and a lot of you guys probably watch his [597] channel if not like head over there and [598] and check it out but uh one thing that [600] you'll notice when you go to his channel [601] is he has 10.3k subscribers right now [603] and then [604] 1.2k videos [607] 1,200 videos you're probably thinking [610] like dude what the hell you know you [612] have one how the hell do you have 1,200 [614] videos well the way that he does it is [616] he posts every single day sometimes [617] multiple times a day and he just sort of [619] does like a little morning thing where [621] when he logs on in the morning the very [622] first thing he does just talks about the [624]  that he's going to accomplish that [625] day and he's really successful this guy [628] makes I think like three to $400,000 a [630] month in profit right like by any [632] stretch of the imagination this guy is [633] loaded and he's going to make [635] generational wealth assuming he doesn't [636] like completely this up um but [639] you know the way that he was doing it [640] was you know he's just building or he's [642] just moving fast and he's breaking stuff [644] uh and his videos are super unpolished [646] like they're not really what I consider [647] high quality production value sorry [649] Jackie for watching this um but you know [651] it's obviously he's a smart guy and it's [652] obviously he knows what he's talking [653] about because makes a lot of money so I [655] was really inspired by that guy and that [656] was one of the main motivations behind [658] doing this sort of like like you know [659] daily challenge um which has enabled me [661] to acquire you know this this many Subs [664] so any who I guess the point that I'm [665] trying to make is uh yeah like the [667] purpose of YouTube for a lot of people [669] that are probably watching this might [671] previously have been to like monetize [673] and make several thousand dollars a [674] month through AdSense um but I think if [676] you look at anybody that's actually [677] making a lot of money on YouTube [678] basically none of them depend on their [680] AdSense Revenue it's probably like 5 to [682] 10% of the money that they totally make [684] because what they do is the other 95% is [686] like Partnerships or it's like some big [688] affiliate brand deal or that sort of [689] thing so yeah that's my uh that's my [692] mindset and my rationale so how actually [693] do I go out and then produce a video [695] well it's pretty simple um that I [698] realized that I can't actually show you [699] guys how I produce the video maybe I can [701] use my phone okay I don't know how this [703] is going to work this is going to be the [704] most advanced thing that I've ever [706] done um I'm going to take a video here [710] and then I'm just going to like go on a [711] post and then slap it on the screen okay [713] so this is what my setup currently looks [716] like I got like a uh a big light over [718] here on the the left in the center I [720] have a monitor uh I got my camera right [722] over there as you can see and then this [725] is my shitty attempt at like what's [727] called Bounce which is where you reflect [730] some of the light back and then over [731] here is like a I don't know it's like a [734] soft box light again but the way that I [736] clamped it is just really stupid and [737] it's not really working anyway uh the [739] idea is that this one over here is like [741] my primary light it lights the one side [742] of my face and then uh this one here is [745] like my secondary and that's supposed to [746] do something but um I could not really [749] be that bothered um and then what I'll [751] do is uh I will just like go over here [753] and then I'll click and I'll turn the [755] camera on and then I'll go into OBS [758] Studio which is right over here um and [761] then I have like a little hot key and [763] it's like shift command one and when I [766] do that I go back to just looking at my [767] face and then when I go shift command [768] two I go back to like you know doing [770] this sort of infinite mirror screen [772] screen share thing and so in this way I [774] can basically minimize the amount of [776] time that I spend actually producing um [778] or like doing editing and stuff like [780] that for the video and then I actually [781] just do I guess it's kind of like the [784] way that like a newsroom works you know [785] where like somebody sort of Manning the [787] controls and they kind of cut back and [788] forward U manually between different [790] scenes and shots and that sort of thing [792] and the reason why I do that and I'm [794] just going to turn this puppy off right [795] now hold [796] on yeah there you go I think that's off [799] yes it is um the reason why I do that is [801] because um I I didn't want this to be a [804] really high friction part of my life [805] like I am doing a ton of other stuff [807] every day I mean I probably work for six [809] seven sometimes eight additional hours [811] whether it's on client projects or I [813] usually have a bunch of sales calls [814] every day I'm doing consulting sometimes [816] I'm traveling right so my my whole idea [818] was okay like I can't really make a [820] YouTube channel and then go full bore if [824] I'm spending four or five freaking hours [825] a day like recording and editing and [827] doing all that post and all that so [830] my whole idea was I was just going to [831] set this up in such a way that it was [832] like is simple and as easy part of my [835] lifestyle as humanly possible and that's [837] more or less what I've done now so [839] usually um you know sometime around I [841] mean right now it's pretty late it's [842] like 2:53 but I'm also sick as hell this [844] morning or this afternoon uh but usually [847] you know sometime in the morning after [848] I've done some of my higher Roi [850] activities so maybe like a system build [852] or I've wrapped up a couple of calls or [853] something like that um I'll jump on here [856] and then I'll either have a list of [858] topics that I'm working through like I [860] did with the make.com [862] course um it's right over here and then [865] I'll usually just like write them down [866] they'll just go through one after the [867] other after the other and then record or [869] I'll Source uh the ideas from the [871] comments in uh YouTube so I'll [873] specifically go to comments down [875] here and then I will go find haters like [878] Ray Fellers I'm just kidding man or [881] sonic 5 How Could you um and then I'll [884] you know I'll look for questions [886] actually so how to do it is you go [887] contains questions there you go and then [889] take out I haven't responded and then um [893] yeah and then like if somebody says [894] something like hey you know can you make [895] a system about this or whatever then you [896] know if it makes sense and if I think [897] it'll be able to ride back vality of the [899] audience then I'll I'll do the system um [901] and and I'll just build it out right [902] then and there and then in this way like [904] my videos take I don't know they take [905] basically the amount of time it takes to [906] record plus a few minutes to pop it into [908] Premier Pro and then export that's a [910] very very simple and very [912] straightforward um I should actually [914] cover the export flow now that I'm [915] thinking about it I'm just using Premier [917] Pro which is like [919] a um you know just a piece of piece of [921] production [922] software and what I do is I have a file [924] here called what was this thing called [926] production template and then in [928] production template I have like an [930] adjustment layer here which is just like [932] a little piece of color grading so um [935] just kind of makes me look a little [937] sexier um and you know the way that I [939] learned how to do that is I just looked [941] up a bunch of premere pro like video [943] editing tutorials and then I have some [945] audio here which is just like a song [947] that I've gotten off of like uh [950] commercially copyrighted whatever like [952] Library um and then I'm trying to like [954] do something where I have this little [955] animation here I don't know how this is [957] working it's going to be meta because [958] I'm going to put this in the video but [959] uh it's like a little animation that [960] I've dropped in from a pack called [962] really big deal titles and then I just [964] like write the title and the whole idea [966] there is just to make it a little bit [967] more engaging at the beginning because [968] most people um stop watching after I [971] don't know like a minute or something [972] like that so this just sort of claws [974] them back implies that I have really [975] high production value and then if you [976] guys see there's literally nothing for [977] the next like 30 minutes before a tiny [980] little audio clip at the end where I'll [982] usually just like you know cap it off [983] and um do like a summary or something [986] like that so my production flow is BAS [988] basically meant to be like okay I got [990] the video so what I do is I drag the [991] video in here apply a couple of the [993] effects that I have like the audio [994] effects like um one of the First videos [996] that I put out the audio was really [997] really low and like four people were [999] like dude your audio sucks man those are [1001] the only comments that I got on that [1003] whole video they were all just like your [1004] audio blows this shit's interesting but [1006] dude your audio sucks so I like deleted [1008] it and then I immediately reuploaded [1009] with fixed audio uh but you know that [1011] takes me like 10 seconds and then um I [1013] just select all and then I go down to uh [1016] export here media and then I export it [1018] and then on the YouTube side uh what I [1020] do is I'll go over here to create and [1022] then I'll upload videos so I'll drag and [1024] drop it here and then after you drag and [1025] drop it uh you can select your title and [1027] stuff I don't SEO optimize any of my [1030] work uh because I think that's just an [1031] additional level of friction and my [1033] whole idea is I want to run as far as [1036] possible I don't really care about [1036] running as fast as possible in the short [1038] term and I find that if you focus on [1040] running far you will usually actually [1041] end up running fast as well it's sort of [1043] like my little mental Paradigm shifter [1045] hack and if you're interest reading [1047] about that I I WR about that in depth on [1050] uh my blog [1051] here um right over here focus on [1054] minimizing [1055] friction uh any who so then I'll upload [1057] it and then in YouTube you can add and I [1061] don't remember how to do this off the [1062] top of my head I think it's like a [1062] template or something yeah upload [1064] defaults there you go um where I have a [1066] description template that I've set up [1068] with like a bunch of my affiliate links [1069] and that sort of thing um I'll always [1071] set the visibility to public and then I [1073] have like a bunch of tags here that I [1075] usually use and then I'll like customize [1076] the tags so I've actually timed myself [1078] with a bunch using this software [1080] platform called rise which is pretty [1081] awesome um and it basically just [1083] monitors what you're doing at all times [1084] a day and then from here you can [1086] actually see like the time that I'm [1087] spending on YouTube every day and like [1089] the time that I'm spending recording and [1090] all that sort of stuff so um on average [1092] it takes me something like three minutes [1095] to do the editing um it takes me like [1098] another minute or two to like do the [1099] YouTube um you know like the title and [1102] add the tags and all that stuff and then [1104] it takes me usually about four or five [1105] minutes to do the thumbnail and the way [1108] that I the thumbnails is I have a little [1109] canva setup over here um so I've just [1112] like created a template and all I did [1115] for this was I basically looked at like [1117] what I'd consider the highest performing [1118] templates that tons of other people on [1120] YouTube are using um and I noticed that [1122] a lot of them tended to have like this [1123] little white uh outline around them and [1125] so I went into canva and then I looked [1126] to see if there was a way to do that it [1127] turns out there is a really easy way to [1128] do it you just go to edit photo and then [1131] Shadows over here and then you can like [1132] add an outline or a drop shadow or [1135] whatever and uh I just found that like [1137] all the videos and which I added this [1138] white outline around a picture of my [1140] face where I was like I tend to do way [1143] better so just very organic sort of [1145] optimization there and then I just have [1147] like text here and and my whole idea [1148] behind the the video uh like thumbnail [1152] is um I try and like make these two two [1155] or three lines here I try and make them [1156] match up so I'll like make the below [1158] text really big and then I'll make the [1159] up the higher text like really small and [1162] then I'll drag in whatever software [1163] platforms I'm using here and I'll [1164] basically just like Google upwork logo [1167] Facebook logo and pl in uh and then I [1169] and then I export them and then yeah [1171] just add them to my thumbnail and then [1173] it's basically it um there is one more [1175] missing piece to my workflow that I [1177] didn't talk about so far uh I do also [1179] respond to comments quite a bit and so [1181] uh my actual like production workflow [1183] takes me I think on average like 40 [1184] minutes a day uh when you add up [1186] everything and the recording and stuff [1187] like that over the course of the last 30 [1189] videos or whatever note that some of my [1191] videos are much longer now I think I did [1193] like an hour and 15 minute tutorial so [1194] it doesn't apply all the time but um [1197] yeah like on average it's it's some [1199] somewhere around there but what I've [1200] been doing a lot more now is I've [1201] actually been responding to comments um [1203] because I'm finding that comments are [1206] one I just I just love all the freaking [1208] questions that you guys are sending me [1210] for one um some of them are extremely [1211] interesting and you know just make me so [1214] happy to read it's also like if I'm [1216] being honest if I have a bad day and [1217] then I just jump into the comments man I [1219] feel incredible afterwards you guys are [1221] like literally the most lovely kind and [1225] genuine human beings on planet freaking [1226] Earth the comments that I get every day [1227] are just stuff like what this lovely guy [1229] Karan just said where he called me [1231] phenomenal like good lord it's like a [1233] it's like a warm fuzzy hug uh from [1236] somebody that you love you know uh but [1238] but anyway that's not the only reason [1240] why I don't just do it for validation I [1241] do it for um for business purposes as [1243] well like I I want to establish a [1245] reputation uh with my personal brand as [1247] being extremely authentic extremely [1248] genuine and I also want to be as helpful [1251] as possible and the way that I see it is [1253] some of these comments that I leave are [1255] pretty big and they're pretty extensive [1256] or whatever but they might take me like [1258] like 10 minutes to write but then um you [1261] know these videos are probably going to [1262] be seen for the next like two three four [1263] maybe even five years right they sort of [1265] exist on the internet unless we all nuke [1267] ourselves before 2030 uh fingers crossed [1270] uh that we don't then potentially [1272] they'll be here for the rest of time so [1273] the 10 minutes that I spend to like [1275] provide a bunch of genuine value to [1277] somebody if you think about it that's [1278] that's nothing in the long run of the [1280] amount of time and energy that that [1281] comment is going to be in people's heads [1283] from now until the end of the universe [1284] like I'm totally cool with it I think [1287] anybody that doesn't do stuff like that [1288] is probably just not really paying [1290] attention to just how much value you can [1291] realistically provide people here by [1293] just being yeah being genuine being [1294] honest and being upfront so yeah um [1297] that's more or less my my strategy [1299] behind the YouTube I think I covered [1301] everything that I wanted to cover I am [1302] pretty tired and fortunately quite sick [1304] today so if I didn't and if you guys [1306] have any more questions about what my [1308] strategy looks like specifically just [1309] let me know um more than happy to walk [1311] anybody through just you know what's [1312] going on in the back end um tldr um [1315] seems to me like I'm paying off my [1317] mortgage just through YouTube AdSense [1318] which is awesome got a bunch of great [1320] deals through YouTube um that are on the [1322] go I haven't signed or began working on [1325] any but I'm at the proposal stage with a [1326] bunch and some of these are really high [1327] ticket deals that are way bigger than [1329] what I was doing before when I was just [1330] selling [1331] cold uh I really like everything that I [1333] do like I love being able to um take all [1337] this accumulated knowledge and my skill [1339] set and then provide value to people [1340] that are at varying stages of their own [1342] automation Journey or Business [1343] Development Journey so I really enjoy [1345] the work that I do and I love logging on [1346] here every day and then yeah you know it [1349] just it's just really rewarding when you [1351] see the work that you're doing is is [1352] helping people so I'm very very happy to [1354] be able to do this and I would say like [1356] qualitatively if my life before when I [1358] was just doing cold sales non-stop all [1360] day was like uh six and a half out of 10 [1362] seven out of 10 despite the fact that I [1363] was making a lot of money now it's [1365] probably like an eight and a half out of [1366] 10 even though I have yet to you know [1368] sign an equivalent amount of money uh [1369] this month that I would if I were just [1370] doing cold sales all right I hope that [1372] answers all of the questions you guys [1373] have if you got any more again leave [1374] them down below as a comment otherwise [1376] please like subscribe and stay stay [1378] tuned for the next video thanks so much [1379] see you soon

Video: https://www.youtube.com/watch?v=6EDWkFlxRWI
Title: How to Acquire Your First Make.com Automation Customer
[0] what's going on everybody it's Nick here [1] and in this video I'm going to show you [2] exactly what I would do if I were in a [5] lot of your shoes and I wanted to get my [6] first automation customer within a week [8] or two if that sounds excit you're [10] interested in let's not mince words see [12] you in the [15] video okay so first things first I'm not [18] only going to be teaching you uh the [20] lead sources that we're going to be [21] using in order to acquire these [22] customers uh the stuff to say during a [25] sales call some of the systems that I've [27] alluded to in previous videos like [28] proposals and whatnot but I also just [30] want to give you a skill uh that more [32] generally is going to stick with you or [34] at least many of you who are early on in [35] your business career hopefully for the [37] rest of your guys lives a lot of people [39] that start businesses or start these [41] freelance outfits if you ask them hey [43] how do you acquire customers 99% of them [45] are going to say I acquire customers [46] through [47] referrals and if the only way that you [49] acquire a customer is through a referral [52] I hate to be the bearer of bad news but [53] you don't actually really have a [54] business you basically have like a side [56] project or a side hustle I'd say the [58] transition point between [60] side project and like actual legitimate [62] business or freelance or Enterprise or [64] whatever you want to call it is [65] basically when you can go out be dropped [68] anywhere on the face of the earth I [69] guess in this case anywhere on the face [71] of the internet and then you know [73] somebody checks back in with you a month [74] you'll have a few customers under your [75] belt the skills that I'm going to be [77] teaching you right now are foundational [78] they're really Scrappy uh they're not [80] glamorous at all they're going to look [81] and feel like a lot of you guys are [82] probably going to be like what the hell [83] is he talking about this isn't what I [84] wanted to do but there were skills that [87] make money and I know because you know [89] I've made about million dollars over the [90] course of the last 12 13 months just [92] using skills like this as well as the [95] skills that I've shown you guys in my [96] previous videos so I want this to be [98] authentic I want this to be uh as [100] straightforward as humanly possible and [102] that is why I compiled a notion doc with [104] all of this information hopefully people [106] that are textual Learners can use this [108] in lie of the video and then people that [109] are video Learners can kind of use this [111] in lie of the text but I'm just going to [113] be using this as our primary source as [114] we go through now the very first thing [116] I'm going to mention is you do have to [118] put in the work obviously dingding [120] that's a no-brainer um if you do not do [123] a few simple daily actions you'll never [125] really get anywhere in sales we can [127] automate systems as much as humanly [128] possible but really like the super high [130] leverage Parts the parts that um are [133] actually like the most important [134] bottlenecks in order to get you the [135] business you do still have to do those [137] on your own and so you need to make sure [139] that you're willing to put the time and [140] energy in to achieve the sorts of things [142] that you want which is presumably some [143] type of automation business or agency or [145] freelance automation lifestyle where you [147] can work from your desk or call from [149] your pajamas [150] um you do also have to be willing to [152] spend a little bit of money nothing in [153] life comes free certainly not your first [155] few leads and so there always needs to [157] be a little bit of risk if you don't [158] spend any money at all you can still [160] achieve everything that I'm going to [161] show you and talk to you about today [162] it's just going to be unnecessarily slow [164] and it's one of those things where you [165] could just spend maybe hundred maybe [167] $150 and you could save yourself several [169] weeks of time which in my opinion you [171] know life is short we don't really have [173] all day to get moving here uh and that's [175] that's a trade-off that I'm very willing [176] to make the last thing is you have to be [178] willing to put your pride and your ego [180] aside um this is going to be in direct [182] contrast to what a lot of people talk [184] about in this industry which is your [185] pricing and everybody says you got to be [187] pricing more bro 10x your prices right I [190] think that's good bro advice but I think [192] if you've never had your first customer [193] before like coming in with high prices [195] is pretty stupid and it's not really [196] going to yield you the sorts of results [197] you want um if this is your very first [200] go of things you should probably price [201] somewhere right in the average and then [202] subtract 10 or 15% of it and then you [204] should think of that 10 to 15% as [207] basically being made up by the fact that [208] you are freaking working with a real [210] customer baby like this is your first [211] real you know automation project the [213] skills that you're going to learn here [214] are going to be invaluable and you can [215] always worry about raising your prices [217] later so you do have to be willing to [218] put that pride and ego aside uh keep [220] your price low focus on gaining skills [223] anyway now that that's out of the way [225] how would I actually go out and how [226] would I actually go and acquire a [228] customer uh pretty freaking simple [231] you're going to have to talk a lot and [232] you're going to have to get in [233] situations where people see you as an [235] authority there's several different ways [237] to do so the first is what I would call [239] an agent gency Community now if you sell [242] Automation Services like if you're [243] attempting to you know build crms for a [246] living or um you know do email systems [249] or that sort of thing your number one [250] customer 99% of the time is going to be [252] the marketing agency marketing agencies [255] are notoriously poorly managed they're [257] poorly run they're deliverable suck they [259] have very poor customer acquisition uh [261] and they're just like really manual [262] sorts of businesses because usually [264] marketing agencies and I say this not to [267] harp on marketing agencies I mean I own [268] a marketing agency for Christ sake you [270] know my first three businesses are [271] marketing agencies but usually marketing [273] agencies don't really take much to get [275] started and so they tend to attract [277] lower common denominator sorts of [279] Enterprises or at least people that [281] don't really have money or time or [283] project management skills or like the [284] means to make things work in an [285] automatic fashion and so that's really [287] where the vast majority of your value is [289] going to come from right you don't have [290] to work with marketing agencies but odds [292] are if you're watching this video you're [293] probably going to be working with [295] marketing agencies mostly so what do you [298] need to do you need to get in front of [299] as many marketing agencies as humanly [301] possible and the best way to do so while [303] also keeping uh your network small [305] enough that you can actually go out and [306] sell is with an agency community so what [310] do I mean by agency Community well if [312] you guys have ever been on Facebook and [314] if you've ever typed in the word um well [317] let's just do marketing agency [319] Community invariably stuff like this [322] will have popped up digital marketing [324] agency owners help hiring and support [327] marketing agency owners and uh smma [330] influencers right digital marketing [333] agency and this is just on Facebook mind [335] you you don't have to use Facebook for [336] this but I'm just using Facebook as an [337] example uh if you type these in you'll [339] invariably see a bunch of these groups [341] and they're basically like communities [342] and support groups for people that run [344] that specific type of business so in [346] this case a digital marketing agency and [348] the purpose of these groups if we go [349] over to this discussion page I guess [351] this one's private let's see this one [352] also private there you go this one's [354] public the purpose of these pages is [356] basically the business owner needs help [358] with something and they run a marketing [359] agency they can lean on the expertise of [361] a bunch of other marketing agencies they [363] can request Services they can exchange [365] things whether it's knowledge uh Dev uh [368] developers deliverables y yada so you [371] know it's meant to be sort of like an [372] all path lead to success sort of thing [374] um many is greater than one now in order [379] to have these communities turn into a [382] viable lead Source okay two things first [385] of all we got Facebook groups on the one [387] hand and then we also have things like [388] slack communities um School communities [390] and that sort of so this is just [393] another example of a of a similar [394] Community this is one run by somebody [396] that's very near and dear to my heart [397] Joe Davies he runs one of the most [399] successful um productized SEO companies [402] on the planet F show they make a [403] boatload of money and I'll see if I can [405] link him somewhere in the description [407] below um but this is a good example of [409] like one of these that that's off [410] Facebook this is just called scalers uh [412] this one is free so probably for the [414] next couple of weeks if you watch this [416] video and you want to join a community [417] and kind of get a leg up this is where [418] you do it um there are a bunch of slack [420] communities as well there's one here [422] called advise. Soo this is run by a [425] brilliant guy Jackie cheu uh and [428] basically it's just like everything that [429] I showed you on Facebook is just on [430] slack so anyway the reason why I bring [432] this up is because there are two main [433] Community types right there's these [434] Facebook groups and then there's slack [435] Discord and school groups now what you [438] want to do if you want to get your first [439] customer is you're going to want to go [441] onto Facebook you're going to want to go [442] onto slack Discord school you're going [444] to want to type like marketing agency [445] communities into Google you know go [447] through the list and just find a bunch [449] some of cost money and you're just going [450] to want to join between five 10 maybe 15 [453] of them depending on your throughput and [454] how much you can realistically do the [456] ideal size is between 500 to 2K um you [459] want to focus on agency communities that [460] are slightly on the smaller side but [462] still have enough people and you know [463] enough of a sense of camaraderie that um [466] you know you can quickly gain Authority [468] and then all you want to do and I know [469] this is going to sound stupidly simple [470] to most people and most people may not [472] believe me but this is all you need to [473] do and if you do this and you don't make [474] money then I'll I take it all back um [477] all you need to do is you need to post [480] constantly and show up every single day [482] for a certain period of time I'm just [484] going to say about a week maybe a week [486] and a half and you need to be constantly [488] just providing value every time that you [490] pop up everybody in the group just needs [492] to start associating you with simple [495] easy solutions to problems that they [497] suffer from I believe so strongly in [499] this because I've done this a bunch of [501] times and it's how I'm getting customers [502] I mean if you think about it it's sort [503] of what I'm doing right now I'm just [505] providing in one lovely commenter's [507] words a dummy amount of value every [508] single day and it makes people really [510] like me and want to work with me you [511] know plenty of people already have just [513] from this YouTube channel so you can you [515] can copy and paste that and and you can [517] do this approach in a group and so what [519] I've done is I've even written a [520] template for you guys that you guys can [522] use in your own way um feel free to copy [524] and paste it if you want to although I'd [526] probably change it and make it a little [527] bit uh more specific but you'd go into [529] one of these marketing agencies like [531] this fellow here Jordan Steen is doing [534] right and you'd copy and paste something [536] like this that says hey I know a lot of [538] people a lot lot of marketing agencies [540] struggle with hiring I know a lot of [542] marketing agencies struggle with [543] onboarding I know a lot of marketing [545] agencies struggle with crms here's a [547] simple way that I saw somebody solve [548] this problem and then you just tell them [550] exactly how to do it because you're an [553] automation solving problems in like a [555] high Roi and low manual time and effort [558] way is basically like your whole [559] deal right that's the entire purpose why [561] people like hiring us um I shouldn't [564] swear because I'm monetized now [566] apparently but um if you just do this [569] every single day like set a calendar [571] reminder every morning and at I don't [573] know 8:00 a.m. wake up go through every [575] group read through all the comments [577] reply to a bunch of them and then make a [578] top level post like this within a week [580] or two you're going to have a bunch of [581] people leaving you comments on your [583] posts essentially just asking you to [584] clarify getting you some questions being [587] like hey you know how do you know how to [588] do this hey like what systems would you [590] recommend for this purpose blah blah [592] blah and then all you do is every time [594] you get one of these messages you reply [597] to that message it's sort of like my [598] little sop for when I was doing this you [599] replied to that message uh then you you [602] know answer whatever question they have [603] and then just DM that person afterwards [605] on whatever platform you're on if you're [606] on Facebook for instance you know you'd [608] go in which one which group was I in [611] this one here that is Mark Zuckerberg [614] looking like an alien damn dude no way [616] that's got to be a generated uh anyway [619] uh you know you go in this is like [620] Pakistani and I don't understand the [622] language so I'm not going to bother with [623] it uh but you jump into one of these [625] groups you reply and then for every [627] message that you get and you can see [629] Jordan Steen the guy that probably runs [631] this group he's been doing this for a [632] while um every message that you get just [634] click the person's name and then send [636] them a DM and basically just follow up [638] and say something along the lines of hey [639] sure yeah you know in your specific case [641] I'd do X Y and Z I'd love to walk [643] through this over a call if you like [646] give them a specific time because it's [647] important to have a time let me know if [649] you like to chat it does not have to be [652] any more complicated than this the math [653] works out really well if you leave let's [656] say you do this every day for a week and [657] you're in five communities you got five [659] communities you got uh I guess just five [662] top level posts if you get just one [664] comment on every post then you have 25 [668] um comments or DMS that you can go [670] through and attempt to solve people's [672] problems in reality you're probably [673] going to get way more than 25 you're [674] probably going to get like 50 maybe even [676] 75 maybe you're so good and you're [678] in such like a high quality group and [679] you're leaving such uh such valuable [681] nuggets of information you're going to [682] get like 150 these are 150 leads and in [687] order to get those leads you probably [688] spent less than like 5 hours of your [690] time there's probably no higher return [692] on investment than just doing this [695] because what you're doing is it's [696] technically called knowledge Arbitrage [697] you are uh leveraging your mind more or [700] less and you're using the knowledge that [702] you've accumulated watching my course [704] you know reading the threads in this [706] community working potentially with other [708] businesses if you have that experience [710] um and then you are selling kind of [712] access to that knowledge because it's [713] it's coming from you so technical term [715] is knowledge Arbitrage I'm not going to [716] get too much into that but um yeah it's [718] very very simple sop here that you can [720] use in order to quickly start dominating [722] agency communities now again a lot of [725] the people that are reading this they're [726] like hey this doesn't really sound that [727] fancy this doesn't really sound like [729] that Golden Nugget that you know I [730] thought that I'd get watching a video [732] called how I'd acquire my first [733] automation customer in 2024 that's right [735] because nothing in business is Golden [738] Nugget you know there's no golden hen [740] that's laying freaking golden eggs uh [742] you actually just have to get in there [743] and you have to do silly things that you [745] know may not seem at the surface to be [747] capable of providing all that value but [749] just think through it logically right [751] you are talking to business owners in [752] your particular Niche you're providing [754] them value day after day after day [756] within a week tons of these people that [757] check in every day are already going to [759] start seeing you as an authority and by [760] dming them all you're basically [761] providing them an opportunity to get on [763] a call with you and then actually take [764] that to the next step so hope that makes [767] sense very simple and very [768] straightforward again couple of [770] communities that you can use that I'd [771] recommend jump on scalers it's a great [773] Community for marketing agency owners [774] and you know if you're doing automation [776] you're now an automation agency owner so [777] You' fit right in jum on um advise. Soo [781] I think this is like 60 or 70 bucks a [783] month might be more might be less I [784] don't know but it's extremely high [786] quality has really good agency owners in [788] there as well uh and then if you want [789] any more just type marketing agency [791] communities maybe type slack or Discord [793] or something like that and then there'll [794] be a bunch more here I know for certain [796] demand curve is awesome because I used [797] to be part of them so now that you know [800] how to work with agency communities what [802] is the second highest Roi way to acquire [805] your first customer I want you to know [808] that I don't recommend you just do one [809] or the other I recommend that you do all [811] three of these in perpetuity [813] simultaneously uh but any what's the [815] second way that I'd recommend you [816] getting out there and getting like an [818] actual customer well it's through [820] platform sales so I'd recommend you jump [822] on upwork I'd recommend you jump on [824] Fiverr now a little bit of rationale [826] here if you're unfamiliar with the the [827] concept of buying uh the buying ladder [831] basically anytime that you're doing any [833] sort of sales you have to sell somebody [836] on different levels of the problem and [839] different levels of the solution for [841] instance if I am selling marketing [843] through like payperclick ads let's say [845] right uh so I'm trying to get people on [847] the first page of Google through ads and [849] I'm knocking on doors and I actually did [851] this for like three years of my life it [852] was terrible but you know I'm knocking [854] on doors and the door opens and I'm like [856] hey how's it going are you on Google ads [858] yet there are many ways that that person [860] can answer that question but the most [862] common answer to that question is what [864] is Google ads and so the reason I bring [868] that example up is because when you do [871] sales and when you do it really well you [872] start to realize there are different [874] levels of buyer awareness there are [876] people that don't even understand the [878] problem and so if you want to sell [880] people that don't understand the problem [881] you have to educate them on what the [882] problem is why the problem matters what [884] the solution is why the solution matters [886] and why they should pick you for the [887] solution right you have to work through [889] so many more levels likewise you know [891] some people know what the problem is but [892] they don't know what the solution is so [894] in those cases you still have to sell [895] them on what the solution is why the [896] solution matters and why you are the [898] right person to pick for for that [898] solution right it's just a shitload of [901] work now contrast that with a platform [903] like upwork or Fiverr if somebody's on [906] that platform and they're making a [907] request for a proposal they understand [909] the problem they understand what the [910] problem is doing to their business they [912] understand the solution that they want [913] most of the time because they're [914] actually going to write it specifically [915] in the request for proposal they [917] understand uh why they need the solution [919] and really the only thing that you have [920] to sell somebody on the only tiny thing [923] is just why they should pick you instead [924] of the 50 other people that are lining [925] up and so in that way selling on these [928] platforms is actually way easier and way [931] uh lower barrier to entry than selling [933] anywhere else and a lot of people are [935] going to think that they're too proud to [936] jump on platforms like upwork that pay [939] you know 30% of what you should be [940] getting paid and I say a lot of those [942] people probably don't make money because [944] again in order to cross that hump and [947] get your first few customers you do need [949] to put your pride and your ego aside you [951] do usually need to be willing to [952] compromise and some that are important [953] to you I've done it many other people [955] have done it but it's just a part of [957] life so what do you do first things [961] first you're going to have to make a [962] profile on upwork so I'm not going to do [964] an entire upwork walkth through here but [966] I am on upwork and I would recommend [968] that everybody here that's doing this [969] get on upwork very simple and [971] straightforward business model all you [973] have to do is jump on there you're going [975] to pick through a variety of uh [978] different like job types basically so [980] back in the day I was doing article [982] writing and I charge $52 an hour for it [984] now let's say I'm doing marketing [985] automation uh you'll see here that you [987] know I put up my profile as AI developer [989] and process automation engineer for make [991] zapier gp4 and no. JS you see that I'm [994] charging quite a bit for this um and [997] then you have to write yourself a little [998] profile you got to make sure you got [999] like a good profile picture you got to [1000] make sure that you know um you optimize [1002] the hell out of out of everything that [1003] you can get a few reviews write you know [1006] a little bio selling people on stuff you [1008] can record a video if you want um if [1009] you're as charming and handsome as me [1011] then uh sure that's easy I think I'm [1013] wearing the exact same outfit you that's [1015] embarrassing I only own one shirt um [1019] but yeah you know make make yourself a [1020] profile and upwork uh and then uh [1023] categories that I recommend are the [1024] scripting and then the marketing [1025] automation categories at least for this [1027] specific work that we're doing after [1028] you've made your profile you're going to [1029] want to apply to between three to five [1031] jobs per day um I'm going to apply or [1033] I'm going to recommend that you do a [1035] slightly different application method [1036] than most people most people will just [1038] write a big proposal template and [1039] they'll copy and paste that over and [1040] over and over again in order to apply to [1042] a job I don't recommend that you do that [1044] I think that that's sort of lame and [1045] that the best jobs that I've gotten on [1047] upw work have been really big jobs you [1049] know um and the way that I've done them [1051] is instead of me just writing a proposal [1053] I actually record a video just like I'm [1054] recording right now it's one of the [1055] reasons I love this format so much so [1056] much easier to explain things visually [1058] I'm using a a platform called Loom which [1062] if you guys don't know it's just like a [1063] very simple way um let me open this in [1067] an incognito tab so we can actually see [1070] the website it's just a very simple way [1072] to like oneclick Chrome extension and [1074] then record a video to document stuff uh [1076] and then just record a video basically [1078] trying to solve their problem um using [1079] the stuff that you see in the proposal [1082] text so for instance what I would do [1083] here if I was looking for Automation [1085] Services let's say I just type in [1087] Automation and then most of these jobs [1090] don't look super relevant to me here [1094] so this might be good if you want to be [1096] a marketing operations manager I don't [1097] really want to be client portal hosted [1099] on AWS no not really funnels and [1101] automations that looks pretty good this [1102] guy's using go high level so you know [1104] realistically you'd probably implement [1105] make there anyway I'd click apply now um [1108] keep in mind obviously the amount of [1109] money that you know charging and stuff [1111] like [1113] that um make sure to apply with the [1115] right profile by the way um I have like [1117] no money on my marketing automation [1118] profile because I have an article and [1120] blog writing profile and my dumbass has [1122] applied to a bunch of these like higher [1124] quality or or higher um ticket jobs with [1127] my freaking General profile or my My [1129] article and blog rting profile so and if [1130] you don't do that on upwork then it [1131] doesn't show up under the profile that [1133] you're attempting to apply for and you [1135] just don't really get as much Street [1136] Credit which you see is pretty important [1137] anyway um then you read through the job [1139] just like I'm reading through this right [1140] now and then you click Loom you [1144] introduce yourself and then you just run [1146] through how you would solve the problem [1147] that this person has and so in this case [1149] this person I don't know is linking some [1151] resource I don't know what this is so [1153] I'm going to be pretty careful with this [1155] it looks like they're running through a [1158] funnel um it's some type of like [1159] coaching funnel I guess for this woman [1161] called Rita Ridge I suppose um and then [1164] you know basically what I would do [1166] is I would record a video just walking [1169] through um go high level in my case I [1172] know what go high level is and how it [1174] works because I've worked with a variety [1175] of businesses with this platform if you [1177] don't you might want to look for a [1178] different job maybe I'd look at or show [1181] a few other funnels that I built that [1183] are similar if you haven't built out any [1184] funnels I'd probably build out a few [1186] maybe build one live over the video just [1187] to show them exactly how you solve the [1189] problem and ultimately I would come in a [1191] little bit lower than whatever their [1192] fixed prices this is $500 which is quite [1195] frankly um kind of laughably low for the [1197] thing that this person's looking for so [1199] I'd probably pitch you know maybe $500 [1200] for this but you know if a job is like [1202] 3,000 you know I'd probably come in a [1204] little bit lower just like 15ish percent [1206] maybe i' charge like 2500 or something [1208] just to give the the person an extra [1209] incentive and lower friction just to say [1211] yes they don't have to double check the [1212] budget they don't have to do anything [1214] and then I just make sure you respond to [1216] that as quickly as human possible just [1217] get on your messages and make sure that [1219] if they do accept you and they want to [1220] work with you that you're just getting [1222] back to them as quickly as you can so [1223] you can like download the upwork app on [1225] your phone get some notifications in [1226] place that sort of [1229] again this isn't you know anything more [1231] than just like a very step-by-step high [1232] level overview of exactly what I would [1234] do if I was in your shoes I am limited [1236] by time of course I can't go in and [1238] actually make a new upward profile and [1239] all that stuff but if you've gotten to [1241] this point in most of my videos you're [1242] probably smart enough to know how to you [1244] know set up an upward profile they're [1245] going to ask you some simple questions [1247] you got to supply them a head shot right [1249] um so that's all I'm going to say about [1251] that now Fiverr is basically the same [1253] thing for people that aren't familiar [1254] it's a freelance Services Marketplace [1256] and so I'd recommend you sign up for [1257] both sign up for both Fiverr and [1259] upwork.com and what you basically do is [1261] I could type make.com in here and [1264] there'd be a bunch of people that are [1266] offering make.com jobs and they're [1268] saying hey I will teach you how to use [1269] make.com integrat I will be your product [1272] sourcing agent I don't know why that's [1273] relevant here but maybe there just [1274] aren't too many make.com Engineers I'll [1276] be your female video model yeah make.com [1279] for sure guys clearly that's not a very [1280] popular thing to look up but regardless [1283] um maybe make a job for automation [1284] skills or automation service something [1286] post that up set your prices pretty [1288] conservatively so again 10 50% lower [1290] than you think and then um you know you [1292] can always increase the pricing later um [1294] same sort of idea make sure you smoke [1295] quickly as response time is the single [1297] most important factor in ensuring that [1299] you do get a client from these platforms [1301] because platforms are very important [1303] I've made several hundred thousands of [1304] dollars on upwork specifically maybe [1307] like $10,000 on Fiverr um but that's [1310] because the niche that I'm in um I only [1312] pitch really like high cost jobs now and [1314] I have an houry rate that's about 120 us [1316] just on upw workk so most of the people [1318] people on Fiverr are looking for lower [1319] paid stuff that's why it's called Fiverr [1320] by the way because you're only supposed [1321] to you know they're supposed to be like [1323] you can get anything you need done for [1324] five for a Fiverr yeah that was way [1327] before [1328] inflation anywh who um yeah so that's [1331] what I would do for upwork and for [1332] Fiverr so that's what I do for platform [1334] sales you'll see that below there's a [1335] little cost the reason why there's a [1337] cost for this is because there's usually [1338] a little bit of a cost to apply to a job [1340] and upw work I think it comes out to [1341] like 40 or 50 cents per proposal so if [1344] you're sending four or five a day it's [1345] like $2 a day sort of deal which is [1347] going to be about $60 a month assuming [1348] you apply to five every day um but you [1350] know just be careful uh and and and [1352] monitor that and just know that again in [1354] order to make money you need to be [1355] spending money the communities over here [1357] I said are between $100 to $200 a month [1359] just because uh a couple of them are [1361] paid like I mentioned before so if you [1362] wanted to jump on advise you probably to [1364] spend at least 60 bucks um but again [1366] totally worth it I mean consider the [1368] value of one of these leads if you get a [1370] single lead from any of these platforms [1371] you're already making you know probably [1373] for your first job 1,000 to ,500 to [1375] $2,000 that buys you another 20 or 30 [1377] months of the this which is great the [1380] last source that I would personally use [1382] if I were in most of your Watcher most [1385] of my Watcher shoes today uh is I would [1388] go through the cold email route now the [1390] reason that I do cold emails is not [1391] because cold emails are easy I actually [1393] just wrote a big blog post about why [1394] Cold emails suck and they're really [1396] really difficult to scale um but they do [1398] make a lot of money um cold emails are [1400] basically the great leveler if you're [1402] sending or receiving a cold email your [1405] status doesn't matter your income [1407] doesn't matter your accomplishments [1409] don't matter the only thing that matters [1411] in the likelihood of somebody answering [1413] that email is your messaging and so it's [1416] the ultimate leveler it allows people [1418] that have no experience and people that [1419] have a ton of experience to sort of meet [1420] in the middle and it's just one of the [1422] simplest and most straightforward ways [1424] to set up like a reliable flow that you [1426] can scale and you can grow now I've [1429] actually built several systems here that [1431] show you exactly how to do this and I [1433] linked a video here walking you through [1435] how to build one with instantly LinkedIn [1437] sales Navigator and then an richment [1438] platform like Drop contact this is [1440] personally um how I built campaigns that [1442] emailed anywhere from 300 to 500 people [1444] a day with response rates of kind of [1446] depends on your offer but maybe [1448] somewhere between 5% to 10% it's pricier [1451] than all of the other options I [1452] mentioned below because you do need to [1453] sign up for Google workspace you need to [1455] sign up for instantly you got to sign up [1458] for LinkedIn sales Navigator these [1459] enrichment platforms all this stuff [1461] isn't free and I didn't write the cost [1463] here it's probably about $400 a month um [1466] but I do I I would still recommend that [1469] you at least get some exposure to this [1470] you at least try it out maybe for one [1472] month right most of you that are [1473] watching this probably have a couple of [1476] hundred dollars kicking around in the [1477] bank at minimum um I would say these are [1479] probably the highest Roi ways that you [1481] could spend that money better to spend [1482] it on growth than to spend it on you [1484] know your next Starbucks coffee as much [1485] as I freaking love [1486] Starbucks okay so I've talked in depth [1489] now about lead [1491] sources if you guys follow everything [1493] that I mentioned here and you take it [1495] seriously and you don't think that any [1496] of this is a joke um by the end of a [1498] week or two you will probably have at [1500] least 25 to 30 conversations under your [1501] belt these might not all be the highest [1503] quality conversations but these will be [1504] sales conversations specifically for [1506] products or services that you provide [1509] and that's doing way better than 99% of [1511] the other people that watch videos like [1512] this all day but that never actually [1514] take any action never actually get [1515] anywhere assuming that you have those 25 [1517] or 30 sales conversations those might be [1520] 25 or 30 phone calls by the way this [1522] might be 25 or 30 uh I don't know screen [1524] shares this might be Google meets [1526] whatever the the form of these [1528] the fact that you're getting [1529] conversations is enough and uh you'll be [1531] able to go a long way from there but [1534] once you're there like once you're [1535] actually on a sales call or some type of [1538] Google meet or something like that with [1539] a customer one-on-one what do you do [1542] well as an automation specialist as [1543] somebody that offers make Services your [1545] job is never to Hard Sell it's not your [1549] job to be like make a decision today [1552] you're not a car salesman right slaps [1554] car you can fit so much family in here [1556] your job is not to do anything any of [1557] that your job is actually just to ask a [1559] bunch of questions and then have the [1561] person sell themselves on your expertise [1563] as an automator we're taking advantage [1566] of that knowledge Arbitrage that I [1568] mentioned earlier and so the more [1569] intelligent that you can seem the more [1571] in tune with the person's business that [1572] you can seem uh and the more I guess [1575] skilled at your particular trade you can [1576] seem uh the more you'll be able to sell [1578] cart blanch you don't need to actually [1579] like provide any or provoke somebody to [1581] do anything um all you need to do is [1583] just be hopefully your smart self and [1586] make sure you understand what their [1587] problem is and you'll be okay so what [1590] I've done here is I've actually compiled [1591] just a very simple checklist for you to [1593] make sure that you cover all the [1594] questions that may come up on a sales [1595] call um in my case I I always do what's [1598] called a one call close there are [1600] different ways to structure this [1601] basically what I'll do is I'll have my [1603] lead gen sources whether it's a [1604] community or whether it's a cold email [1606] or whether it's you know upwork or five [1607] or whatever and then I'll get somebody [1609] on the call and I'll say Hey you know we [1610] should chat about this Ser call and then [1612] what I do is I will do a barebone [1614] skeleton of what I'm about to talk about [1616] right now so at the beginning when I get [1618] them on the call I'll do a quick [1619] introduction and I'll just ask them how [1620] they're doing you know I'll just make a [1622] couple jokes right I try and get people [1623] to like me obviously that helps with [1625] sales uh and then when it's time to dive [1627] into things I will ask them hey so what [1630] made you want to book this call like [1631] what was the what was the purpose behind [1632] this and that's just the most [1634] straightforward simplest clearest [1635] question that most people will never ask [1637] and so this just cuts through all the [1638]  basically immediately uh and [1640] they start telling you you know what [1641] pain they're having and why they're [1642] having it from there um in in our one [1645] call close I'll ask them how long is [1647] this been problem going on just to get a [1649] sense of the urgency I'll ask when do [1650] you need it fixed just to get a sense of [1652] how much money they're willing to spend [1653] I'll always ask okay do you guys have a [1654] budget in mind um and then finally once [1657] I have most of the information that I [1659] need so these four questions I'll then [1662] talk about the specific solution that [1663] I'll recommend to solve their problem [1665] I'm not pushing it on them all I'm doing [1666] is just giving them a high level [1667] explanation at the end of the call I [1669] will always do a wrap-up basically [1671] saying hey thanks so much you know given [1673] everything you told me this makes sense [1674] I can certainly help and it would be a [1675] solution like what I talked about [1676] earlier I'm going to send you a proposal [1678] momentarily with more information and if [1681] it makes sense to you then we can also [1682] set up a call to walk through any [1683] questions or further comments that you [1685] have thanks for the time looking forward [1687] to working with you this whole process [1690] here you know any anybody that's [1691] watching this probably memorize this [1692] whole script if you want to call it or a [1694] sale skeleton in I don't know 10 or 15 [1696] minutes right um this whole process here [1698] is basically what I would consider the [1699] most important components of any sale [1701] and as long as you do all seven of these [1703] steps and you're rigorous and you're [1704] methodical about it and you've gotten [1705] the skills that you've probably gotten [1707] by watching these videos up until now [1709] you will probably sell at least one in [1711] five or one in six times you have a [1713] conversion rate of you know 10 15 maybe [1715] 20% um so if you get 25 or 30 of these [1717] conversations a week right four or five [1719] calls a day or whatever you're going to [1721] sell a lot you know might be that you [1722] get your first customer you know in a [1724] week and then you get your second [1725] customer in the next day and then you [1727] get your Third customer the day after [1728] that right um As Long as You Follow sort [1731] of this structured system you'll do [1733] you'll do really well um what I [1735] obviously do after that is I'll send [1736] them a proposal proposal and uh I handle [1740] that personally on my own end through a [1741] system that I developed and so I've [1743] linked a video down here called this [1745] make.com proposal system generates 21k a [1747] month and this actually is just like a [1748] it's like a one-click proposal sort of [1750] thing where when I'm asking these [1751] questions up here what I'll do is I'll [1753] actually just write a couple of notes [1754] and then I'll click a button and then [1756] I'll use AI to basically generate a [1757] proposal in a platform called pandadoc [1760] so yeah that's what I do for the actual [1762] sales call um and then what to do after [1764] the call I'd send the follow-up email [1766] confirm what we talked about shoot over [1767] that proposal um sometimes I do that on [1769] the call sometimes I do that after the [1771] call and then if it's your first [1774] customer you don't even really have to [1775] build the system um I would just [1776] recommend starting to get into the habit [1778] of doing these high Ro sales skills [1780] yourself just so that you understand [1781] what's involved in them and how much [1782] time you'll really be saving when you do [1783] build a system um also don't worry too [1786] much about any proposal like some people [1787] make their proposal out to be the [1788] biggest most important thing in the [1789] whole wide world it's not the biggest [1790] most important thing in the whole wide [1791] world doesn't even need to look super [1793] professional like I've sent Google Docs [1794] proposals in plain text before and a lot [1796] of people love it as a consultant or an [1799] automation engineer or whatever you want [1800] to Brand yourself as you do most of your [1802] work on that call you don't actually [1804] really do most of your work in the [1805] proposal so if somebody likes you and [1806] wants to work with you usually they're [1808] going to work with you at that point the [1809] proposal doesn't really do anything [1811] aside from just provide them a semblance [1812] of legitimacy for moving forward with [1814] the [1815] task okay great now that we've covered [1817] uh the three lead sources that I'd use [1819] along with some of my selling [1821] methodology it's time to talk about [1823] probably one of the biggest questions a [1824] lot of people have which is how do I [1825] actually go out and price my systems [1827] well these are benchmarks and these [1829] benchmarks depend on where you are in [1830] the world the skill and level of your [1833] services some of your branding and maybe [1835] your past experience but in general if I [1837] was getting my first customer tomorrow [1839] like never had a customer for Automation [1841] Services before first time I'm doing [1842] this this is what I would probably price [1845] if I was doing a CRM buildout like [1847] you've seen in my many clickup videos [1848] which is where I'll usually go in add a [1850] bunch of columns uh you know do some [1852] thinking for for a couple of hours and [1854] then um connect that to some type of [1856] make.com system system whether it's like [1857] an email followup system or like a web [1859] hook system I charge about $1,500 for [1861] that probably just going off the top of [1863] my head here um I think if I were to [1865] charge more and it were my first [1866] customer I don't know I'd feel like [1868] either unconfident or maybe I'd lack [1870] some skills but this is a reasonable [1871] enough price point that you're not [1872] getting like the bottom of the barrel [1873] customers you're not going to get like [1874] really shitty clients and you're also [1876] not going to get the best ones either um [1878] but you know I think it's a good start [1880] if I was building an email system so [1881] like a cold Outreach thing I'm sure tons [1884] of people are going to disagree with me [1885] with this by the way and that's fine um [1887] because you know this email system is so [1889] valuable this can grow your your bottom [1890] line by like $300,000 a month right but [1893] I'd probably just charge $1,500 $2,000 [1895] for that again um I'd keep it simple you [1897] know if it's my first time setting up [1899] the system keep in mind there probably [1900] going to be some issues that you're [1901] going to have to work through that you [1902] weren't really expecting uh so you know [1904] it's not going to be a perfect delivery [1905] and I sort of know that so I probably [1906] wouldn't price that much if I was [1908] building an entire endend project [1909] management system so like what I've [1911] shown in my project management videos [1912] where I've covered my own agency one [1914] second copy and how that works probably [1915] charge about $2,500 maybe [1918] $3,000 um again I keep it really cheap [1920] this is reasonable enough to put some [1921] money on my plate give me that sense of [1923] success I provide me some Capital to [1925] fuel the rest of the lead generation in [1927] the next few customers but not be [1928] overwhelming and keep friction low and [1930] then if anything else doesn't fit into [1933] one of these three categories I'd just [1934] charge a flat $40 an hour for it most [1936] likely um 40 bucks an hour is sort of [1938] like middle of the road stuff um I mean [1940] now I charge close to 120 an hour some [1942] clients are charge 150 an hour um so I'd [1945] say $48 an hour is probably like [1947] representative of having extreme entry [1949] level skills in the market not really [1950] knowing how to do client management and [1952] all that sort of thing these prices are [1954] all pretty low right um you know maybe [1957] you're coming from an industry where [1958] you're used to making a lot more money [1959] than this and if so kudos to you um and [1961] I think you're going to get there very [1962] quickly with automation but if it's your [1964] first customer just be reasonable about [1965] it and understand that you know the [1967] delivery and everything like that these [1968] are all very much Works in progress and [1970] you're probably not going to deliver [1971] anywhere near as good of an experience [1973] as you will eventually after you get [1974] five or 10 or 15 of them under your belt [1976] um so you know price according to the [1977] experience and make sure that you know [1979] you keep it as frictionless as possible [1981] now the real money in this doesn't come [1983] from building the systems and this is a [1985] secret that maybe not too many [1986] automation guys are going to tell you [1988] but the real money in automations comes [1990] from Consulting on operations so what I [1994] mean by operations is when you build out [1995] these systems you're basically um I [1999] guess you can brand yourself as a [2000] builder right but there's a difference [2001] between a builder or maybe an integrator [2002] is probably a better way of saying it uh [2004] there's a difference between being an [2005] integrator and then being like a a part [2007] or an operator or a consultant like the [2010] Builder is sort of just given a list of [2011] tasks that they have to go through and [2013] then do right and it's almost like uh [2015] you know it's like a contractor or [2016] something like that where you say I want [2018] my building to look like this and here [2019] are all the materials and here's the [2021] step-by-step guide on how to do it but [2023] the real kind of value is when you shift [2026] from that I'm just here to build stuff [2028] mindset to huh I wonder what what would [2030] be good to build and you start actually [2033] taking an active role in suggesting [2034] systems suggesting operations flows [2037] suggesting project management and so on [2039] and so forth and that's where you start [2041] making the big bucks that's where [2042] clients will start paying you know 10 15 [2043] $20,000 a month and and that's where you [2046] can get into things like like I'm I'm [2047] starting to do now which is where I'm [2048] like flying out to client offices and [2050] shadowing teams and uh you know making [2052] hiring and firing decisions and that [2053] sort of deal so that I imagine is what a [2056] lot of you guys are going to shoot for [2057] um I've set up my own business to be [2058] more of like a freelance outfit because [2060] I don't really want to work with a big [2061] agency or a big team so um you know this [2063] is just sort of like the straightest [2064] line path to getting there for me while [2066] also maintaining a really high income um [2068] on average it's anywhere from 20 to [2069] 25,000 a month right now uh which is [2071] obviously quite valuable but keep in [2073] mind that this is also your first [2075] customer and you know if it is your [2077] first customer um know that this is [2079] where the real money is but don't like [2081] lose the forest for the [2083] trees lastly um how to bill you can [2086] build in a variety of different ways um [2088] just make sure that you have a Billing [2090] System set up here uh I like to build [2092] through stripe and because I use [2093] pandadoc I will usually integrate stripe [2095] with pandadoc connect the two and then [2096] and send somebody a panad DOT with like [2098] a linked payment form and that just [2100] keeps friction really low that makes [2101] customers just one click from the [2103] signature to the payment but in your [2105] specific case you know if you don't want [2106] to use Panda do or maybe have another [2108] contract software just get stripe and [2110] then just send them a stripe invoice [2112] I'll usually always do a 50% upfront [2114] deposit at least on oneoff projects with [2116] a 50% after the fact and then usually [2118] after you're done with your first [2119] customer U what I'd always recommend [2120] doing is getting in the habit of [2121] pitching them on a monthly retainer or [2123] at least some type of like combined [2124] retained Services um because again the [2127] real value isn't just in a one-off [2128] project that makes 500 bucks the real [2129] value is in a client that starts to [2131] depend on you and trust you and really [2133] value your input on more than just [2135] systems that pays you you know maybe [2136] five 10 15 [2138] $20,000 okay great I hope that this was [2141] as efficient a brain dump as I could [2143] humanly give you guys I know that there [2144] was a lot to go through I know that some [2145] of you guys are probably raising your [2146] eyebrows but for the real ones that are [2148] still here uh don't just watch this [2151] video close the tab and then you know [2153] move on with your life if you really [2155] want to get your first customer try try [2157] really try take the steps that I told [2159] you go find 5 10 or 15 of these [2161] automation communities and just join you [2164] don't even really have to go through [2165] rigorously scheduling these value giving [2167] posts or anything just take that first [2169] step and I guarantee you that when you [2171] start seeing some of the validation and [2172] the positive feedback and some of the [2174] leads coming in uh the rest of this will [2176] take a life of its own thanks so much [2178] for watching guys if you guys have any [2179] questions comments feel free to leave [2181] them down below I get a lot of [2182] inspiration on the next video to make [2184] literally just sourcing from you guys [2186] and answering your question questions I [2187] think that's why my community has been [2188] so engaged so I'd love to keep that up [2190] if you like the video uh please [2192] subscribe to my channel if you haven't [2193] already every little bit helps I will [2195] see youall in the next one and have a [2197] great rest of the day bye-bye

Video: https://www.youtube.com/watch?v=R8o7V39NSSY
Title: A Completely New Way To Build Make.com Scrapers: Hidden APIs
[0] what's going on everybody welcome to [1] another video in our course make.com but [4] for people who want to make real money [6] and in this video I'm going to cover an [7] extremely Advanced topic that if I were [10] to guess less than 0.1% of anybody that [13] uses make.com knows about it's called [15] hidden API access and it's how you build [19] completely automated scrapers that [20] bypass pay walls or bypass uh you know [24] like sign up resources and [25] authentication flows and so this is [27] going to be a really Advanced video if [28] you haven't already seen everything that [30] I've posted on API calls and how to do [32] like a request module and set all that [34] stuff up then make sure you check that [35] out first otherwise most of this is [37] going to seem like magic but if you're [38] already at that point then this video is [40] going to show you an entirely new way to [41] leverage make.com if that sounds like [44] something you're interested in stay [48] tuned all right so first thing I'm going [50] to mention is that this works really [51] well for services behind pay walls [53] nothing thing I want to mention is this [54] isn't actually going to work for all [56] services and so I want you guys to treat [57] what I'm about to show you as like an [59] option and just one of the things to [61] determine pretty quickly when you guys [63] either get a web scraping project from a [65] client or when you guys want to set up [66] some type of web scraper for yourself [68] now if you guys remember from a previous [69] video um when we scraped a website just [72] using the HTTP request module what we [74] did is we sent a request to the website [76] and then we received all of the HTML of [78] the site right and then we used parsers [81] and we used like the HTML DET text [83] module to turn that into something that [85] we could then either use AI to extract [86] or use the text parer module to run [89] through and then isolate things like the [90] email address or the URL all that sort [92] of thing but what if there was a way to [95] call the backend of the service that [98] produces that HTML and then just get all [100] of your data perfectly structured to [102] begin with what if we didn't actually [103] have to do any of the that we [105] had to do in that previous video and [106] what if we could actually go out and [108] then you know call presumably the hidden [110] API like the back end um using the [113] skills that we have well that would [114] obviously make your life a lot easier uh [116] especially when you have like complex [118] signup flows or that sort of thing and [119] and that's exactly what we're going to [120] cover in this video this is one of my [122] favorite topics of all time um just [124] because like I showed this to one of my [127] business partners Blue's mind I showed [128] this to um just a bunch of like random [131] make automats and various groups that [132] I'm in blew all of their minds this is [134] just something that like you can you can [136] use to really take you know your make [137] development to the next level and so [139] what I'm doing is I've set up an example [140] here this is just one of many data [143] resources out there that you can sign up [145] and then you know pay a little bit of [147] money and then have access to basically [148] like uh like a like a database of [150] listings if you guys remember previously [153] we did like a redin video where we were [155] just scraping the HTML right and so [157] redin is a free resource it's not really [159] behind a pay wall or anything like that [160] what I want to do is I want to set up [161] something that like actually allows you [163] to go beyond um whatever service and [166] then just like call their call their [168] servers directly we do have to be a [170] little bit sneakier because we're doing [172] something that's not really allowed [174] right it's not something that like [175] companies want you to do because [176] obviously they have their own apis for [179] specific purpose you know and and that [181] purpose is for them to deal with not not [183] for you to deal with if it's not public [184] and if it's private obviously then we [186] need to be a little bit sneakier but but [188] anyway it's still really cool so cy.com [189] is just like a random data source for [192] real estate listings and it essentially [193] allows you just to find a bunch of [195] property records and so you can get like [196] market and Property Data you can get [198] listings you can get all sorts of things [199] so um I've set up a search here for a [202] specific place in Arizona and when I [204] click through it you'll see that there [205] are a bunch of filters that have been [206] applied and then what comes up on the [207] right hand side we have a bunch of like [209] map listings and then the left hand side [211] we have like um just sort of cards that [213] you can click into and if you guys [214] remember this is really really similar [215] to what we had for redin right more or [217] less the exact same thing um with red [219] fin you had like the data is a bunch of [221] listings and at the very top of the page [222] you had a map and the map was just [223] pulling data from the listings and then [225] you know presumably pulling some [226] latitude longitude and then [228] using that to populate the the user [230] experience now that said um all of this [232] data's got to come from somewhere right [234] and so where is this data coming from if [236] you think about it when I'm like signed [237] into the service and then I click this [239] button [240] right I press enter well the the server [243] is or sorry the client which is my [246] browser basically is sending a bunch of [248] requests to the server and the server is [251] looking at that request and then it's [252] presumably going into a database pulling [254] a bunch of records for me based off the [255] filters that I've set up and then [257] sending it back to the server the server [260] then uses this to like populate some [262] HTML like you know the the actual um way [265] that the page looks with the divs and [266] all that and then that gets served [268] to the client so that's you know sort of [269] like a very high level overview of how [271] these sorts of requests happen in [272] practice but but anyway so this data is [274] coming from somewhere right and the [276] crazy thing about most of these Services [277] is you can actually find where that data [279] is coming from and then instead of you [280] having to call the server you can just [283] call that resource directly and so the [285] way that you do that is you right click [286] on the page and again this isn't going [287] to apply for every resource so I just [290] want you to use this as like a tool in [291] Your Arsenal next time you're faced with [292] a scraping project but anyway um we [295] we've selected the inspect and then [298] we're going to network here and then [300] what I want to do is I just want to [301] refresh this [303] page and notice how we got hundreds of [306] requests that are being made right these [308] are all like ongoing requests that the [310] server is currently that we are [312] currently sending the server and you'll [313] see it has random that like trust [316] box view question mark stats question [318] mark aggregate right a lot of the [319] stuff's going to seem like witchcraft [321] but what I want you to do is I want you [323] just to click it through uh click [324] through a few and then poke around and I [327] want you to look for commonalities [329] between of these requests using the [331] headers on the right hand side what are [333] you noticing comes up again and again [335] and again just as I scroll through these [338] well there is a URL that's [340] https backback api. cory.com so this is [347] the hidden API that this service is [350] using to send and receive data and [352] manage all of its requests which means [355] odds are we can reproduce the request [357] that's being sent and not have to go [360] through the browser in order to pull [361] this data we can actually just send a [362] request directly to this URL up here [366] instead of you know this URL up here and [369] so what you're looking for basically and [371] a very quick and easy way to do this is [373] go to payload and then what you want to [376] do is you just want to scroll through [378] and then what we're doing is we're [379] looking for uh we're looking for data [381] that comes back I mean I already know uh [383] specifically which network request is [386] important here it's the search Network [388] request sort of makes sense right [389] they're calling it The search endpoint [391] and I know that this is where we're [392] going to get the data but if you don't [394] know specifically which endpoint is is [397] to retrieve the data go down to a [401] preview and then just kind of thumb [404] through and just go I mean I'm just [406] holding this down and scrolling as [408] quickly as possible and what I'm looking [409] for is I'm looking for some response [411] data to pop [413] up so that doesn't look like anything of [415] value okay now we're starting to get [417] into responses what you'll find is [419] anything that ends injs is usually [421] something you can discard you don't [422] really have to worry about it because [423] this is just calling JavaScript anything [425] that ends in CSS is just usually a [427] stylesheet it's just something that is [429] used to build the page visually so you [432] don't have to worry about that anything [434] that's prepended with data colon is [436] usually a font so you don't have to [437] worry about that what we're looking for [439] is we're looking [441] for modules like this that say simple [444] words like account or stats or moderated [447] or cell list because these are usually [449] calling an API resource and what we want [452] to do is we want to scroll through all [454] of these and I'm not going to do that [456] all on the video because as you see [457] there are like 400 requests and it can [459] take a fair amount of time once you know [461] what you're looking for though you [462] usually get to figure it out pretty [464] quick once you've found the resource the [467] resource is going to look something like [468] this and as you see [473] here uh should be one of these I don't [476] know which one there we go uh the [478] resource is going to look something like [480] this when you go to the [482] oh this was an issue where you can you [485] can select the specific time that you [486] want to isolate responses okay what [489] you're looking for is you're looking for [491] something like this where when you go to [493] preview you have a big Json you know [496] JavaScript object with just a giant [499] boatload of listings just like we have [501] here and if I click into each of these [503] listings you'll see that we actually see [507] all of the information that's [508] represented on the left hand side here [509] we just see it in tabular Json so this [512] is the data source for corxy it's this [517] URL [518] https backback api. cory.com [522] assets search and you'll see there are a [525] bunch of parameters over here including [528] authorization which is the most [530] important one and essentially [531] authorization is when you log into a [533] service that service gives you a cookie [535] or a little key and then you can just [537] use that key to byass pass the [539] authentication on future requests so [542] what we're going to do is now that we've [543] isolated that this is the URL that we [545] want to hit we've seen that this is the [547] data that comes back to us when we hit [549] that URL you'll notice that there's [551] another header here called payload and [553] this represents the data that you need [555] to send to that URL in order to get that [557] response so now all we're going to do is [560] we're going to copy all this stuff over [562] into a make module and then instead of [564] doing this in a browser like we're doing [567] now we're going to do it in make.com and [569] then you can set that up to call [570] automatically once an hour once every [572] day stuff like that there's a little bit [575] more Nuance to it than that because [577] sometimes these cookies will expire and [580] in this case it does expire every now [581] and then but there are multiple ways [584] around that and I'm not going to build [585] them out in this video but I'll touch on [587] them just so you guys can see what an [588] actual sort of make.com scraper flow [591] looks like at a higher level okay great [594] so now all that nerdy shit's done let's [595] actually go to make and build something [597] out I'm going to click on this module [601] type [602] HTTP and then make a [605] request the first thing that we have to [607] do so we have to grab this request [610] URL so I'm going to write https back [615] api. cory.com asset search the second [618] thing we have to do is we have to go [620] down to this request method and you'll [622] see all this information is available in [624] the [625] request and then we have to change it to [627] post because that's what the request [629] method is in the [631] browser the third thing we have to do [633] and what I would recommend you do is [635] just copy all of these request headers [638] down [640] here I'm not going to do these I'll [642] start with [643] accept then I'll open up the header [646] value and I'll say accept application [648] Json text [650] plane then I'm going to go down to [652] accept [653] encoding I'm not keeping the colons in [656] my response so just keep that in mind as [659] you copy and paste your own [660] resource the language [665] here it's [669] English the authorization this is the [672] important one so you're going to want to [673] make sure that you get that one right [675] you see it starts with be and then it's [677] a very long [681] string there's client time zone [685] offset and I'm going to go all the way [687] down I'm going to skip anything that [689] starts with SEC and then I'll grab the [691] user agent as [693] well so this is [697] just7 we're going to add I'm not going [700] to add the content length um simply [703] because I don't feel any of these are [704] relevant or [706] necessary I will add an [709] origin as ky.com [712] [Music] [713] and as you're doing this on your [716] own just add in all of the cookies to be [719] all of [720] the headers to be safe I just know which [724] ones work and I want to make sure this [726] videoos in three hours like they usually [729] are last thing we need to do is the user [731] agent which if you recall from a [733] previous video is how we get [735] around producing requests that look like [738] they're human okay great so now we've [740] essentially copied all of the headers in [742] the response there's one other thing we [743] have to copy and that's the [745] payload essentially what we need to do [747] is we need to copy all of this exact as [749] it is and see that there are two ways to [752] do so if you right click you can copy [753] the value or you can copy the object so [756] I just paste this value in you'll see um [759] that I have an extremely long string you [762] can also copy the object if I paste that [764] in you'll see it looks like it's the [766] same thing uh there's just uh commas now [770] or not commas [772] um I don't know what those are called [774] apostrophes yeah double quotes there we [777] go so I'm going to scroll down here and [779] then I'm going to go to body type click [781] raw my content type is Jason and now I [785] need to put my request content in here [788] essentially so I'm G to click view [791] source and now I can see not the entire [794] thing this is extremely long mind [796] you and you don't actually need to copy [799] in all of this a lot of the [801] time this will just be so unfeasible to [805] do especially uh kxy is a special case [807] because they put a giant list of all of [810] your latitudes and longitudes like this [812] and you see this object is freaking huge [814] right but anyway I'm going to click yes [816] to parse [818] response and then what I'm going to do [822] here is and you do have to be careful [824] when you're calling hidden apis so when [826] you're testing just make sure that [828] you're not doing this all the time every [829] five seconds because the hidden API will [831] cut you out eventually but then now that [834] we have everything ready I'm just going [835] to click run once and see what [837] happens waiting for for the server took [840] a little bit you click here and then [842] scroll down to the output you'll see the [843] status code is 200 and then the data [846] variable has a total count of 384 that [848] number looks familiar we saw that in the [850] payload and then the data is now array [853] indexed and it's everything that we [855] wanted in perfect [859] Json which now prevents us from having [862] to do something like build out an HTML [863] detex parser and then build out a [866] specific parser or regx for every single [869] variable we just have everything right [871] here so what would you do with this [874] information well why don't we set up a [876] Google sheet and why don't we make it [882] practical and why don't we just dump all [884] of these records in to a Google [888] sheet we don't have a spreadsheet do [892] I let me open one on this oh this is [895] pretty [897] annoying Gmail always defaults back to [901] whatever you used to open this okay and [903] then I'll say example correcty data [907] dump now I'm not going to go through and [910] then make headers for all of this but [911] realistically what you should probably [912] do is you should go to the data that [914] you've received in Json and then create [917] a header for activated on locations [919] brokerage name description has FL blah [921] blah blah all the way down just so that [923] you know what columns you're sticking [925] that data [926] into but I don't so not not going to [928] worry about it and then I want you to [930] notice that this comes out as one bundle [932] and it comes out as a bundle with a [935] variable called data which is an array [937] and so if you guys recall from our [938] previous video some modules have built [940] in iterators but others like the HTTP [942] request module does not and so if we [944] want to access this data and if we want [946] to iterate through it then we need an [948] iterator and so we need to turn that one [950] bundle into basically 384 bundles so you [953] can imagine it's going to be pretty [954] operationally intensive so I'm not going [955] to run it in [957] perpetuity what I'm going to feed in as [959] the value to that array is I'm going to [961] feed in this [962] data uh with these square brackets and [965] again always go for the highest level [966] square bracket variable that you can [969] then this Google sheet I'm going to [972] select the example correcty data [975] dump that I just set up [977] here assuming that my authentication is [980] still valid every time that that red [981] thing pops up just means that it's [983] expired and you need to redo your [987] authentication I'm going to select all [990] of the sheet information that I normally [992] do and then this doesn't contain headers [995] but it's okay and then I'm going to go [997] through here and I'm just going to dump [998] everything in this locations might be a [1001] little bit more difficult so I'm just [1003] going [1005] to paste in the full [1008] address yeah down here we'll do [1010] brokerage name we'll do description [1013] we'll do has flyer has [1016] om has video I ID you can imagine how if [1020] you're building this out for a client [1022] they probably don't give a about [1024] all of the random values [1027] here they're probably not going to use I [1030] don't know updated [1034] on or URL [1036] slug but if you consider the cost of [1039] including this it's basically nothing so [1042] you're almost always better off just [1043] doing [1044] so and yeah we ran through 25 variables [1047] here [1050] next what I'm going to do is I'm going [1052] to add a sleep the reason why I'm going [1054] to add as sleep here is just because I [1055] want to be able to cancel this after 10 [1057] or 15 because I don't want to do any [1059] more than that so I'll just add a one [1061] second [1062] delay and now let's just go through what [1064] we know about the scenario and about [1066] what we've learned so far what's going [1068] to happen is we are going to call this [1070] backend hidden API resource we are going [1073] to include in that call a bunch of [1075] headers that we've copied over from crai [1079] we're also going to include a body to [1082] that request which you find a request [1084] content with all of the various uh [1086] settings that kxi has allowed us to put [1089] in which is in this payload tab you can [1093] see it's quite long a lot of latitudes [1094] and longitudes for this particular API [1096] it's not going to be the same for all of [1097] them but these are the settings that I [1099] suppose are uh being used as a filter in [1103] craxi and then what are we expecting as [1105] output well if we go down a data we're [1107] expecting an array and that's a single [1111] array not multiple bundles and so what [1113] we have to do with this information is [1115] we then have to iterate through the [1117] iterator is taking this data that we [1119] came in that huge data array and then [1122] it's going to produce various bundles [1125] one bundle for every item in that array [1127] and then for every item in that array [1129] we're dumping or mapping the values into [1132] a Google sheet with no headers and so [1135] we're just going to see the data stuck [1136] in on line one but then we are sleeping [1140] for one second and then what'll happen [1143] is this sleep after it's done with one [1146] second it'll go back to the iterator and [1147] then start again and so every second [1149] essentially it'll be choosing the next [1152] bundle to stick into Google Sheets so [1155] that's what we expect to happen let's [1157] see what actually [1158] happens API call went through we [1161] received a status code of 200 you'll see [1163] records look like they're being dumped [1165] in a Google sheet if I go back here [1167] that's what's [1168] happening and so all of this is data now [1172] that is being automatically scraped from [1174] this paywalled [1177] resource it looks like some of the [1180] fields here are strings and so if you [1183] wanted to you could also set up a system [1185] that takes in as input land let's say [1187] this the string D and then maybe splits [1190] it based off the presence of that [1191] vertical pipe if you want it to separate [1193] Acres from the type [1196] whatever has all the data that we want [1198] every single field has the image has [1200] some Fields here are like price per acre [1202] you see that not every field has data in [1205] it and you are consuming a fair number [1208] of operations because you obviously have [1209] to iterate through all this stuff but [1212] all in all not [1215] bad so yeah that's how you get data from [1219] a paywall resource like kxy for [1222] instance now I promise that i' touch on [1225] a little bit extra here because [1228] essentially what we've done this is sort [1229] of cheating but what we've done is we've [1231] logged into the resource and then when [1234] you log into a resource the resource [1236] will send you back a cookie or an API [1239] key or some type of [1241] token and that token is your [1244] authentication to be able to use that [1245] resource now some apis specifically the [1248] older ones which I believe corxy is one [1250] of them will allow you to reuse that [1252] token for a long time maybe two or three [1254] four five six hours some other apis will [1257] automatically kick you out after maybe [1259] 30 minutes or an hour and so if that [1261] happens what you need to do is you need [1262] to get another token makes sense right [1266] now how exactly do you get another token [1268] well this is the part that may be a [1269] little bit more advanced there are [1270] generally two ways that you can get a [1272] token from a resource in order to have [1274] the data you need and then automatically [1278] uh refresh that token every now and then [1280] what you can do in is you can set up [1282] another scenario here actually before we [1285] do that let's just say you can set up [1287] another step to this [1289] scenario what you could do theoretically [1291] is you [1293] could add another request module before [1296] the flow that we built and call it get [1299] API key or maybe let's just say get [1301] token off [1303] token what this is going to do and this [1305] isn't going to work every time it's [1307] going to work sometimes it's not going [1308] to work every time but what this is [1310] going to do is we're going to log out of [1312] this [1317] resource [1320] okay so I should be logged out now and [1321] then I'm going to click log in and then [1324] what I'm going to do here is I'm going [1326] to do the exact same thing that I did a [1328] moment ago go to inspect and then [1330] Network and then what I'm going to do is [1332] I'm actually going to log into the [1333] resource and I'm not actually going to [1334] log into the resource because I don't [1335] want to show the username and the [1336] password and stuff like that but you can [1338] imagine how if I did like example [1341] gmail.com and then my password was like [1343] I don't know like uh example password [1345] 890 exclamation point [1348] right and then if I looked back on this [1351] network request tab what's going to [1353] happen when I send the request is and [1355] let me just refresh this and kind of [1357] start from scratch here we're not going [1358] to preserve the log so it's going to [1360] start right from here what's going to [1361] happen when I log in is it's going to [1362] send a request to that [1365] resource and that just happens somewhere [1367] around here maybe a token there you go [1370] you'll see here that it includes the [1371] username the password in the payload and [1374] then it actually goes and it calls this [1375] URL here api. corcom token [1378] the only job of this URL of this API [1381] endpoint is to generate a unique token [1383] based off of whether or not a username [1385] and a password exists in the back end in [1387] the server you see in my case none does [1389] because obviously example of gmail.com [1391] with example password 890 probably not a [1394] real account but what'll happen is [1397] inside of that will be a response and [1400] inside of that response will be a [1402] variable called token and so what you [1404] could theoretically do is we go through [1406] all the same steps that we just did [1408] where you go to the headers you copy [1409] everything over you copy this URL [1411] resource into this you know get off [1414] token thing you go through and you uh [1416] change the payloads that there's a grant [1418] type a username a password there're all [1420] these fields and then every time you [1422] start the scenario which may be once a [1425] day let's say maybe we do it every day [1427] at like 717 p.m. it'll log into the [1431] resource for you it'll retrieve a token [1435] and then what you can do is you can just [1436] use that token as a variable and then [1438] stick it into here this authorization [1441] and there'll probably be a couple of [1442] additional steps you have to do some of [1444] these need to be formatted in a certain [1445] way some of them you need to add the [1447] word Bearer in front of it you know [1448] they're just some minor things that [1449] change from API to API but in that way [1453] you basically just log into the service [1454] once a day grab the token and then use [1456] that token to make the request to the [1458] specific hidden API endpoint that you [1459] want so that's probably the simplest way [1462] to do [1463] it that said this way does require you [1465] to log into the resource every day and [1468] if you log into the resource at the [1469] exact same time of every day and if [1470] you're very consistent with this sort of [1472] thing for a long enough period of time [1473] sometimes they have spam detection [1475] measures that will eventually find out [1477] that you're using a robot to do this and [1478] it's not a human being the other way to [1481] do it is you have an external data [1484] source like a Google [1486] sheet and then you have maybe like a [1488] date retrieved column and then you have [1492] a token [1493] column excuse [1496] me and then what you do is you use this [1500] data source so you you build another [1502] scenario so we build another scenario [1503] here we'd call it [1506] um let's get example [1508] builds we'll call this let's say like [1512] retrieve um token from whatever the [1515] service is we'd feed in this get off [1518] token module that we're pretending that [1520] we just set up and then you'd add that [1523] token to a shared data resource like [1526] Google Sheets [1529] and so we go we' select this example [1531] Correy data dump and then you'd have a [1534] field like date retrieved so you can [1536] constantly monitor when the most recent [1537] one is has been retrieved and then [1540] whatever the specifics of that API are [1542] where like maybe the token expires after [1543] 17 hours or something like that um every [1546] 17 hours you actually go and you call [1548] that resource using this scenario you [1551] dump the token into this Google sheet [1553] and then back in the original scenario [1555] you actually retrieve that token from [1556] that Google sheet entry every time you [1558] run the record so the first module here [1560] would actually be probably get a cell [1563] instead of um get off [1566] token and then what you do is you get [1569] that cell that specific record that's [1572] called [1573] token and then you would use that as the [1577] input into this authorization Bearer [1582] whatever so those are the two main ways [1584] to do it there's another way to do it of [1585] course you can use what's called browser [1587] automation [1588] browser automation is pretty Advanced [1589] you do need to know how to code most of [1591] the time anyway and there are a bunch of [1593] services out there that allow you to [1594] build out essentially these little [1597] crawlers that will physically go into a [1599] website pretend they're using a browser [1602] and then click on the username password [1604] and login field then you can retrieve [1607] the cookies or the tokens that were um [1610] sent to received and then you can use [1612] them to fill in a Google sheet or a [1615] shared resource that you can call and [1617] and so I mean I'll add a link down below [1619] to the resource that I usually use for [1620] this sort of thing it's definitely a [1622] skill that's worth knowing and worth [1624] having but it's quite difficult if I'm [1626] being honest if you don't have any [1627] coding knowledge and it will take you a [1629] little bit of time to get up and running [1631] regardless some of the highest Roi [1633] skills that you can have so I hope you [1635] guys enjoyed this video on hidden apis [1638] using make in a completely new and [1640] hopefully quite uh valuable way and I [1644] want you guys to know that I use this [1645] sort of approach all the time for my own [1647] client [1648] to build scrapers out that realistically [1650] only take me 20 or 30 minutes to build [1652] whereas it might take somebody else like [1653] 5 hours to build in code so very high [1655] Roi sorts of flows that you can build [1657] here thanks so much for watching if you [1659] guys have any specific questions that [1661] anything that I talked about in this [1662] video or if you have requests for future [1663] videos on make.com or something else [1665] please let me know I love the feedback [1667] and these requests are what have allowed [1669] me to um decide my content calendar for [1672] the month leave a like subscribe tell [1676] all your friends hopefully and I'll see [1677] you on the next video thanks so much

Video: https://www.youtube.com/watch?v=hQ5WyIZglx8
Title: Watch Me Build A Real Client System In Make.com
[0] hey everyone we got another course video [1] here for make.com but for people who [3] want to make real money and this video [6] is going to be an actual live build for [9] a photography company one of my loyal [11] viewers that left me a system request I [14] think about a week and a half ago that I [15] told him that I do and I haven't even [18] thought about this for more than 5 [19] seconds so I'm just going to do this [21] live run through my thought process and [22] show you what like a real production [24] build for a system is going to look like [27] so if that sounds like something you're [28] interested in stay tuned and let's get [30] into [34] it okay first things first let's [36] actually look at the comment it was left [38] by this lovely human whose name I'm not [40] even going to try to pronounce waste ah [44]  I did it anyway uh here's what he [47] wants he wants a booking appointment for [49] his service which looks to be [51] Photography in this case the [52] photographer will have two or three [54] services family session pregnancy [57] session and a newborn session each of [58] these Services presented on a separate [60] page on WordPress the bottom of the page [62] will have an order button and that's [63] where the magic can begin it's kind of [66] scary smiley face placement there buddy [68] the client selects a date leaves his [70] details and pays a deposit he receives [72] an email confirmation of the reservation [73] a bill and a list of necessary things to [75] prepare for the photographic session [77] should be three emails a week before the [79] date he'll receive an email reminder [80] about the session then one day before [81] the date he'll receive a text message on [84] his phone so uh there are a couple [87] things here I'm not actually going to [88] build out a whole WordPress website I [89] would love to but I just don't have the [90] time energy or resources so what I'm [92] going to do instead is I'm going to [94] create like a drop in variable and that [97] variable is just going to contain [98] information that's formatted just like [100] would actually be coming from uh [102] WordPress for instance the way that [105] WordPress works is uh you typically have [107] like a bunch of different payment [107] plugins or payment apps that you can [109] download uh and so we're just going to [111] assume that this photographer is using [112] one of those and then when somebody [114] clicks the order button right they fill [116] out all their details they click order [117] uh that's basically just sending a web [118] hook somewhere and we're just going to [119] going to pretend that we're catching [120] that web hook and then using that to [121] build up the rest of the flow so aside [124] from that um the few seconds of planning [127] here I did was signing up for tlio [129] because in order to send or receive text [131] messages we're obviously going to need a [132] way to do so automatically um this is [134] actually the first time that I've signed [135] up for twio probably in like two years [137] very different from what it used to be [138] you do have to do a bunch of [139] verification now so if you're trying to [140] do this test on your own just keep that [142] in mind I'd verify like 10 times um at [145] the end of it they gave me a twilio [146] number and they gave me an account Sid [148] as well as an off token and then I set [151] up a twilio module over here just the [153] create a message module and then I [155] hooked it up here with all of this [156] information uh and then I'm just going [158] to be sending or receiving these [159] reminder texts basically just using [161] twilio but aside from that we're [163] starting from scratch uh what I'm going [165] to do is I'm going to set up a CRM here [167] for the photography stuff and clickup [169] and so I've just created one here called [171] photography example the way that you do [173] that is you click on the little plus [174] next to a space and then you just go to [176] list that's what I've done here uh I'm [178] going to Define all the fields that [181] we're going to use I'm going to show you [184] guys how to build systems that like send [185] people emails several days later using [188] make.com it's going to end up being like [189] two maybe three or possibly four [191] scenarios depending on how spicy we get [194] and yeah I'm just going to run through [195] my thought process at every step through [197] the through the uh flow so you know if I [200] get something wrong or maybe if I don't [201] understand it you'll see the sorts of [202] debugging procedures I guess that people [204] that make real money with make.com um do [208] so let's get into it so first thing I'm [209] going to do is I'm going to define the [211] um actual variable here I'm just going [214] to [215] pretend let me just use this as my [217] source get rid of that nasty gray one [219] I'm just going to pretend that we're [220] receiving um like a web Hook from [222] WordPress and that web Hook is going to [224] keep let's [226] see uh it's going to keep inside of it [230] their email address for [232] one so I'm just going to use test data [235] now because I'm going to be testing this [237] we're going to pretend the email is Nick [238] left click. [241] looks like there's a date as well so [243] we're going to have a date and let's [246] make this spicy and then instead of [248] using the built-in date uh why don't we [249] just use like custom a custom date [251] format so that we can parse it so I'm [254] going to pretend that we're doing [255] something weird and European uh we'll do [259] month day and then year so that should [263] should be December the 2nd 2024 let's [265] actually pretend ah actually yeah we're [267] booking this in the future it's a [268] photography thing [270] what else do we need um we need a bill [272] okay I don't think I'm going to use the [274] bill part of this but we could say like [275] amount or something um let's just say [278] like 499.99 [281] let's add a package so it looks like he [285] wanted three different packages one for [286] family one for pregnancy one for newborn [288] so let's just hypothetically say um that [290] the way that we like figure out which [292] type it is is we have a package variable [294] with uh [296] newborn um pregnancy or family right and [300] so I'm just going to pretend that we got [302] the newborn [303] package um what else do we got here uh [307] we got the [308] date and we need email oh we also need a [310] phone number of course so we'll say [313] phone number and I'm just going to put [314] in my own phone number [316] here don't call [319] me everybody proceeds to call me it's [322] okay I never pick up anyway um we're [324] going to call this like WordPress web [326] hook because again we're just testing [328] this and then what I want to do here now [331] that I have like the variable that's [332] coming in is we actually need to like [333] create a way to store this in a CRM [335] somewhere so I'm going to set this up [337] and click up so let's have our space [340] which we're just calling photography [341] example let's just say example actually [344] Let's do let's add some more Fields here [346] like first name last name that'll just [348] make this [352] prettier okay so what I'm going to do [354] here is I'm going to create an example [356] record that's going to be first name [357] space last name we're we're going to [359] keep uh the due date record and the [361] assign record but we're going to remove [362] the priority record so I'm going to [363] right click and click up and then go [365] hide column and then the cool part about [367] clickup is and you'll know if you've [369] been watching the course studiously up [370] until now you can just add like a [372] million in one column so that's what [373] we're going to do here so I'm going to [374] add a drop down for U package and then [377] we're going to have three options we're [378] going to have newborn we're going to [380] have uh [381] pregnancy and then we're also going to [383] have family just going to make these [385] look pretty because I can newborns are [387] pink pregnancies are blue blue and [390] families apparently are dark [393] red okay let's um do that so apparently [396] I'm a newborn no I'm looking for newborn [398] photography uh we want an email address [400] field so I'm going to create a new one [402] I'm going to call it uh I think I can [403] just write email yeah sometimes [407] I um and then I'll just add another [410] phone one sometimes I have so many other [412] fields in various spaces with the same [414] name that it doesn't actually let me do [416] that and then why don't we have another [418] one with the date um should we use the [422] due date [423] field yeah let's do the due date field [425] but let's also have a date [428] created and just for like layout [430] purposes um let's have first name last [433] name here let's actually add a first [435] name and last name field too it's just [437] usually good to get in the habit of like [439] having all of your data yeah so that's a [440] that's a field for instance that I can't [442] add so I'm just going to write first [443] maybe that'll work yeah I can't add that [445] either just because I I have that [446] written down I think in the same space [448] in this hiring pipeline examp [449] example um let me just [452] do first name screw it it'll be ugly [456] we're going to add another one here [457] we're going to call a last name cool and [459] these are just going to be fields that [461] you should just always have you should [462] have a way to um pull data even if like [465] this is going to be the the key of our [466] record the the name we should also just [469] have a way to like separate them because [470] you can imagine some instances in which [471] maybe somebody has three names or [473] something uh we're going to put this in [475] the due date field oh and then we need [476] an amount so is there dollars or money [479] yeah there's a money field and click up [480] which is nice so I'm going to go money [482] I'm going to create a new field and then [483] we're just going to call it um amount [486] paid let's do that and we're just going [488] to assume this is in US dollars so the [491] person that's managing this doesn't [492] actually need to see all this stuff um I [494] just wanted to provide as much [494] information as seemingly possible um for [497] the purpos of the demonstration let's [498] just make this be December 20 December [502] the 2nd 2024 just so I can see how all [506] this stuff is going to look in practice [508] let's add this this we'll add the phone [510] number that you should never call or [511] text we'll add first name we'll add the [515] last name I think what did I say $499 or [519] something $499.99 it's pretty cheap [520] photography dude you got to up your [523] prices okay looks good so uh we now have [527] the data structure set up in the [529] database or the I don't know the [533] um uh CRM I guess in this case uh we [537] have the variables coming in uh we can [539] make the serum a lot fancier if we [540] wanted to like theoretically we could [542] include stages so maybe we could have [545] like where they are in the [548] process [550] um I don't know if that's really [551] necessary yeah I'm not going to do [553] stages uh but you know you can imagine [555] how you can add as much complexity to [557] this puppy as you want we're going to [559] keep it pretty simple though and then [561] clickup will just default to grouping by [564] status but I usually like grouping by [566] just some other drop down that I uh I [568] make myself so I'm now grouping by [570] package and so this is going to turn [571] pink it'll say newborn if I add another [573] record here as an example and then if I [577] set this to pregnancy now it's going to [578] like separate the two so this will just [580] be a quick and easy way for us to [581] segment based off of the the package [583] type that's coming [584] in okay so we got the data structure um [587] this date is going to be really [587] important because we're going to be [589] looking to see um when we need to uh [592] basically send them an email uh let me [595] just double check that we're not missing [596] anything [598] else [605] well that looks pretty good all right so [606] now we have everything we need to [607] actually build this system out um you [609] know open up your watches or your [611] stopwatches or whatever set a timer I'm [612] really curious to see how long it would [614] take to build out all of the backend [615] functionality for a system like this for [617] somebody like this obviously in a real [619] system build I would do a lot more [621] testing um I am under the constraints of [623] limitations of YouTube video lengths and [625] uh you know I'm pretty hungry so there's [627] that um but you know this should give [630] you a reasonable idea as to how much [631] time and energy to really spend on [633] things uh assuming that you know what [634] you're doing so now that we got a [636] WordPress web hook set up what I'm going [638] to do is I'm going to open up a clickup [641] module and then what I'm going to do is [643] create a task and what I'm going to send [647] this oh and I believe I have to change [649] the CRM here because I'm at left click [652] okay sorry about that I opened up a [653] different account and that's where I was [655] working but in order to access the [656] clickup workspace I needed to be on just [658] a different make uh but anyway I [659] imported it in this is what it looks [660] like same thing as before so where are [662] we we are creating a task and clickup [664] and so what I'm going to do is I'm just [665] going to run through all of the fields [667] that we just set up um from this [669] WordPress web hook and then I'm just [671] going to dump them into the space that [675] we made and we're going to have to do a [677] little bit of date parceling just [678] because the way that I've set up the [679] date is I'm pretending that the date [681] just comes to us in text it's not like a [682] date variable uh and this is something [685] that actually happens quite often so I [686] just wanted to make sure that everybody [688] that's watching this sort of um stuff [690] just knows how to do that sort of [692] filtering okay so package uh we're going [696] to do some mapping for that amount paid [698] we can just do amount I [701] believe uh anyway it turns out it ended [704] up making those additional Fields so [707] that sucks but I'm just going to go [708] first name I'm going to do another one [711] called last name phone number uh it's [713] interesting here but it needs to contain [715] the country code otherwise it's not [716] filled uh and so if h hypthetically the [719] input here did not contain the country [721] fote this this would not work so you got [722] to keep that in mind um a lot of the [724] time you know in WordPress or in various [726] plugins or form Builders you can set it [728] up so that there has to be a country [729] code and I would always encourage you to [731] just do all the verification and [732] validation way ahead of time but anyway [734] uh and then there's a due date and the [736] way that we're going to feed this in is [737] date and I'm just going to save this and [739] then check out what this date format [744] is so I'm just going to store this here [747] for now but anyway the date format is [750] month month SL DayDay SL year year year [754] year now in integrat or make sorry um [757] there are a bunch of ways to parse a [760] date and the simplest one is going down [761] here to the parse date [764] module or uh [768] function adding that in and then if we [770] look at the documentation it says that [772] you feed in a date and then what you do [774] is you write the the format of that date [776] it's just with the numbers uh replaced [778] with with you know y's M's or D's [780] basically to tell you where the days [781] months and years are and so that's what [783] we're going to do for this date um you [785] see here that it's let's say [788] 12224 so what we're going to do is we're [790] going to go 12 or um sorry month month [792] slash DayDay slash year year year [796] year and what we're doing is we're [798] basically saying hey you know for this [799] input here which is basically going to [801] be this I want you to parse it as if the [804] month is here the date is here and the [805] year is there and what it's going to do [807] is it's going to convert that into [809] um its own date time object which if we [812] Mouse over the par State function and [814] then look at all that like text the [816] bottom there you see how it's like [818] 2016-12-28 t00 [821] 00000000000000 z um that's its own like [823] internal representation of the date [825] function and then yeah that's uh that's [828] how we're going to get it um you can set [829] a due date time if you want to I mean [831] realistically in photography shoots you [832] probably you probably should have a due [834] date time but uh I'm not going to worry [836] about any of that stuff just because I [837] want this video to be a short and [838] effective as possible and then I'm going [841] to remove this and then the last thing [842] we need to do is we need to map the [843] package now in clickup packages aren't [846] as straightforward as just writing down [848] the name or the uh the label that you're [850] passing through for instance I can't [851] just click map and then [853] write um package because clickup doesn't [857] recognize that unfortunately so what we [858] have to do instead is we have to switch [860] through various options here and a quick [862] and easy way to do that is Select [864] whatever the option is that you want [865] then click map and you'll see that [867] there's now a big ID here and this is [868] the ID that represents the label map and [872] the way to make this work is I use [874] switch and then you have to feed in your [876] input first so we're going to feed in [877] package and then you got to go uh [880] semicolon and then you have to write um [883] the various options that you have that [885] your package could [887] be and then what the ID of the clickup [890] field is for that option and then it's [893] just package name semicolon option [896] package name semicolon option over and [898] over and over and over over again so for [899] instance I'm saying Hey I want you to [902] look at the package that comes in and if [904] it's newborn I want you to Output this [906] ID and then by outputting that ID into [909] this um field it's just going to tell [911] clickup to select this newborn dropdown [914] right over here now obviously we can't [915] just do that for one we have to do that [917] for all three and so I'm going to go [918] through and see the other two Fields I [919] have one's called pregnancy one's called [921] family so we're going to do another one [922] for pregnancy now I don't have the ID [924] but I'm just going to do a little hack [925] here I'm just going to copy all this [926] text go back to map and then go to [929] pregnancy and then map again then [931] paste and you'll see now I have that and [935] then I'm going to do the same thing for [937] family go back here [941] paste I'll write family and then I'll [944] write this cool so this should work [945] right now um and you can also test this [947] in another module if you want I'm pretty [949] confident I think that this is going to [950] check out so I'm not going to do too [951] much testing here but I'm just going to [953] run through the rest this make sure [954] that's that's legit so first name last [956] name good I'm selecting myself as the [958] assign e good I'm parsing a date looks [960] pretty good to me uh doing this fancy [962] switch which we'll see if that works [964] amount paid good first name email phone [966] last name all right I think we have [968] everything we need what I'm going to do [970] here is just delete the previous record [973] because I want to keep this clean for [975] when I run my super bombass web hook [978] okay yes and there is a there's an error [980] because the value is not a valid phone [983] number um this may have been because I [985] didn't put a plus so we're just going to [987] try this first and see how that [989] goes yeah okay that worked yeah so I [991] guess the country code requires a plus [994] just make sure that whatever parsing [996] that your form Builder is doing that [998] passes in the web hook it uh you know it [1000] includes the country code and if it [1001] doesn't um you can just use the parse [1003] phone number module [1005] here I just type phone there'll be a [1007] phone number and then parse a phone [1009] number you can just feed that in and [1011] then theoretically you could feed in uh [1013] whatever the phone number is and then [1015] you could pick and I mean this part is [1016] sort of annoying you could have another [1017] field that's like country and then you [1019] would use mapping just like I showed you [1021] a moment ago to map through all of the [1023] various options um the way that this [1024] works is you'd have to use a switch with [1026] the country code and obviously that'd be [1027] pretty big um but yeah you can also just [1030] parse phone numbers directly like that [1031] or maybe if your service is only in one [1033] place odds are it's going to be one [1034] phone number right keep it simple uh [1037] anyway let's see what happens so looks [1039] like everything was created except for [1040] the package so there's probably an error [1042] there looks like the due date was parsed [1044] correctly which is nice emails good [1046] phone number is good although when click [1048] it oh it's actually trying to call me [1050] yeah that's not good I can edit this and [1052] then there's the country code there we [1054] go first name is good last name is good [1055] amount paid is good okay great now that [1058] we're done with this I'm just going to [1059] hide these columns because I don't like [1060] them and they're [1062] ugly uh and then we have to clearly fix [1065] this package thing so let's just see [1066] what this um how this worked if you [1069] click on the clickup module you'll you [1070] can see the input that you're providing [1072] it it doesn't really look like there's [1074] any input at [1075] all so I imagine we just didn't uh the [1079] switch was either Mis formatted or just [1081] didn't check [1083] out so I'm actually just going to copy [1085] this and then I'm going to put this into [1087] a new module just as a test just going [1090] to call this switch test you can also [1093] use an actual switch module [1096] but and let's see what happens if we run [1098] this with the text um [1103] newborn okay so that worked so I think [1105] it probably has to do with the [1106] capitalization then I probably didn't [1108] capitalize this yeah I didn't capitalize [1110] this silly [1111] me so the input that's coming in from [1113] the web hook uh we're just going to [1114] pretend it's uncapitalized and most [1116] things are [1117] uncapitalized uh in code so most things [1121] will be lowercase so just keep that in [1124] mind so I'm going to delete this now I [1127] think that this is going to be good so [1129] we're going to delete this record too [1131] going to run this [1133] puppy looks good if I go back here nice [1136] awesome so now I have the record inside [1138] and we have our flow that successfully [1140] gets things inside of clickup now that's [1142] pretty simple pretty easy right and this [1144] is going to be one of our scenarios so [1147] I'm going to save this and then I'm just [1148] going to say one um let me just do [1151] photography [1153] example and then I'll say new lead in [1157] clickup awesome I'm going to save that [1160] and just open up another scenario right [1162] beside it then I'm going to [1167] call [1169] oh actually you know what I'm not [1170] actually done because there were a [1171] couple of other things we want to do I [1172] think we wanted to send [1173] um we wanted to send a bunch of emails [1176] right yeah let's do that let me go back [1178] to this comment what what are we going [1179] to do he receives an email confirmation [1180] the reservation a bill and a list of [1182] Necessary Things PR the photograph [1183] session all right all right cool man I [1185] got you um all right so what else we're [1187] going to do we have to send some emails [1189] obviously it sounds like he wants to [1190] send three emails I know there are many [1192] ways that you can do this you could [1193] theoretically leave this module as is [1195] and just have uh a WordPress web hook [1197] and then the clickup module that creates [1199] a new task you could then go into [1200] clickup and then add a watcher that [1203] watches for new tasks that are created [1204] in this space and then if it sees a new [1206] task create in the space then it fires [1208] another automation that sends an email [1209] um to be honest that would probably be [1211] like the cleanest way to do it but what [1212] I'm going to do for Simplicity sake U [1214] because I don't I don't really give a [1215]  about the cleanliness is actually [1218] let's just go ahead and send the email [1220] I'm just going to create three email [1223] modules uh and then I'm just going to [1225] send the email to or send three fake [1227] emails to records here now the cool part [1230] about um creating a new entry with [1233] clickup is now we have access to all [1235] that data so I'm just going to pretend [1238] and write like let's say [1240] Nick and then what do we want to do we [1242] want to confirm the reservation so we'll [1245] just say your reservation is [1248] confirmed clean we'll say hi [1252] Nick I'm going to add BRS just for HTML [1256] and spacing and that sort of thing [1258] we're writing you to let you know that [1262] your [1263] reservation for uh let's just be fancy [1266] so we're actually going to pull out the [1267] name of the variable [1271] here um can we actually do that can we [1274] pull the package I think we can pull the [1276] package it we're [1279] gonna we're going to give it a try [1280] you'll notice the package doesn't [1281] actually have a variable value next to [1283] it um so I don't know if that's because [1285] maybe clickup isn't getting that or if [1287] there's some issue um maybe it's just [1289] not showing here but I'm just going to [1290] I'm just going to run with it we're [1292] writing you to let you know that your [1292] reservation for blank [1294] photography on the date of and I'm going [1297] to go over here to Due Date just right [1300] over here let's see what type of file it [1302] is okay so if you Mouse over any [1304] variable and make uh little modal pops [1306] up and then inside of the two angle [1309] brackets there you see that there is a [1311] function or a file type and in this case [1314] it's date so what that means is if it's [1316] like a date function or sorry a date [1318] module a date variable you can do date [1322] time stuff with that and so I'm going to [1324] format this [1325] date I think this is going to work I'm [1327] going to format this date and I'm going [1329] to format it [1331] as um month month month month day day [1336] year year year year that should be fine [1339] let me actually test this [1342] first before I get too far ahead of [1345] myself just want to make sure that the [1349] uh if this is an actual date it would [1352] work so let's just do test date run this [1356] puppy [1358] once uh yeah February 28th 2024 yeah [1361] looks pretty good to me I'm just going [1363] to keep that there just in case I need [1364] it but anyway that's the variable there [1366] you can obviously do all the stuff ahead [1367] of time in another variable and then [1369] pull from that that would be the most [1373] maintainable confirmed let's do br br [1378] thank you for [1379] ordering and looking forward to meeting [1383] you br br [1387] cheers BR uh I'm just going to pretend [1390] that [1391] uh w w te is the photographer [1396] here looks good and then I'm going to [1399] unlink this puppy just for now G to open [1401] up my email [1402] address get ready [1406] and let me run through this whole [1409] scenario one more time so we should be [1412] creating a record Nick we should be [1413] sending an email here and I just want to [1415] make sure that this work December 02 [1418] 2024 uh for zero photography right right [1421] right so the way that clickup does this [1424] indexing is they don't actually put the [1426] name of the [1427] package they'll just put zero one or two [1431] so that's annoying but obviously we can [1432] just pull that directly from the web [1434] hook um in practice I always do like to [1437] like pull from one source of Truth just [1438] makes any flow a lot more maintainable [1440] but in this case you know just to be [1442] simple let's pull from the place where [1443] we get the data aside from that looks [1446] pretty good um I don't like the 02 here [1448] so maybe there's a way we can fix that [1450] and then just write 1D I don't actually [1453] know if this is going to work but we [1455] give that a try one D for One [1459] Direction okay res newborn photography [1462] on the date of December 2nd 2024 has [1464] been confirmed thanks for ordering [1465] looking forward to meeting you blah blah [1466] blah okay great we should get another [1467] email that's perfect now and uh if you [1470] have like the same text uh Gmail will [1472] just do this every now and then and just [1473] like trim the content for you so don't [1475] worry about that that's not anything on [1476] the make side of things it's just Gmail [1479] so great yeah looks good to me so that [1480] was that first email what else did uh we [1482] want to do we wanted a bill so for the [1485] bill here I'm just going to put in the [1487] total so I'll just say you know we'll [1489] just pretend that this is like an email [1493] Bill your bill for I'll just write [1497] package AG [1501] photography hi blank your [1507] total [1510] um let's just add do this one more [1518] time and then we're just going to grab [1520] the amount [1522] field so$ 499999 [1525] I'm going to put a dollar sign in front [1527] of it [1529] and then we're just going to roll with [1531] that I'll put a period after as well so [1533] your total for package photography on [1535] format date whatever is custom field [1538] amount paid we're going to pretend that [1539] that's the bill although you can imagine [1542] how if you wanted to build out a more [1543] intricate sort of billing session or [1545] whatnot you could and then a list of [1548] necessary things for the photography [1549] session so I'm just going [1551] to add one final module here and then [1553] I'll [1555] say don't forget these [1559] we can't wait to have [1562] you for your photography [1565] session before you come make sure to [1568] bring the [1569] following and then you know I'm just [1571] going to pretend that we're [1573] doing numbers uh you can also use HTML [1577] format so you could do like an ordered [1578] list and then have a bunch of list items [1580] so it be Li I think o I'm not going to [1583] do that though I'll just say one um a [1587] warm change close sure we'll go [1591] br2 a smile then we'll [1594] do two more looking forward to seeing [1600] you all right this may seem like a bunch [1603] of you're probably wondering [1604] why I'm doing so much work actually [1606] writing out the copy and stuff um that's [1607] because it's really important as [1609] somebody that's like a like a make [1610] engineer the most important thing for [1612] you and really for your success in a [1615] business isn't just can you build [1616] systems on the back end it's can you [1618] maximize the customer experience for [1620] your clients and so if this is your [1622] business you want to make damn sure that [1624] these emails aren't just like hello [1625] blank good order here's the number and [1628] here's your email attachment thank you [1630] whatever you really want to like [1631] personalize it as much as possible um as [1634] I've kind of grown more and more [1635] competent in make uh I've realized more [1637] and more that like the time that you [1639] spend crafting the customer experience [1641] uh ahead of time is probably twice if [1643] not three times as valuable as the [1646] actual time that you spend like building [1647] these flows again you'll see that these [1650] flows aren't super crazy complex or [1651] anything so anywhere you can you know [1654] improve the way the customer perceives [1655] it uh the better so we'll say send [1658] confirmation reservation I'm just doing [1660] this for maintainability purposes this [1662] will be send Bill and then over here [1664] will [1666] be um [1669] send [1671] list whatever I'm just going to write [1672] send list um if you have three email [1674] modules one after the other like this it [1676] can unfortunately every now and then um [1679] drop one of your emails so I'd always [1680] add a delay let's just do 5 seconds in [1682] between these two that should be [1687] good I'm just going to do this and then [1689] I have a couple of sort of leftover [1690] modules here uh that I'm just going to [1692] delete yeah okay I'm going to delete ah [1694]  now I have to set up too again [1696] whatever um okay I'm GNA save this puppy [1698] and then uh right now this is just being [1701] set to run at regular intervals so I'm [1702] not actually going to turn it on I'm [1703] just going to run this to test and just [1705] demonstrate that this works and you can [1706] see that I've been creating clickup [1708] records this whole time okay WordPress [1711] web hook received we created the task [1713] okay we sent the first email [1717] okay we are now waiting and then we sent [1719] the second email that looks good nice [1722] the number formatting checked out and [1724] then we also sent the last email how is [1726] this going to look we got three emails [1729] Nick your reservation is [1730] confirmed this is the email with the [1733] date and then the package wonderful then [1735] we have the bill for newborn photograph [1737] is here's your money and then don't [1739] forget these here is a list of things to [1741] bring awesome I think that is pretty [1743] good from a client perspective you know [1745] you just pay a little bit of money and [1746] then you get three little dopamine hits [1747] being like hey nice job for [1749] ordering okay great so that is like the [1752] first section and this is pretty simple [1753] we all know how to do this sort of Flow [1755] by now um what I want to do now is I [1757] want to take this to the next level and [1758] I want to show you how to implement [1759] basically like reminder or followup [1762] functionality in a flow like this and [1764] the way that this is going to work it [1765] really all just hinges on um you having [1768] a CRM or a project manager of some kind [1770] if you didn't have an external place to [1771] store data like the date that the shoot [1773] is happening for instance this wouldn't [1775] really check out but I'm going to show [1776] you a really simple way to solve this [1777] problem that I use in a lot of my flows [1779] and some might consider it operationally [1781] heavy um I don't really care to me this [1783] works super well it consumes maybe 50 to [1785] 100 Extra Ops a month I'm more than [1787] willing to pay for it if it means that [1789] you know my customers get a good [1790] experience and my clients get a good [1792] experience as well so the entire way [1794] that we're going to implement um [1796] follow-ups you going see here a week [1798] before the date he'll receive an email [1799] reminder about the session so the entire [1801] way that we're going to implement this [1802] is what we're going to do is every day [1804] at the same time hopefully we're going [1806] to run through our clickup list we're [1808] going to list all of the records in that [1810] list and then we're going to grab the [1812] date that it's supposed to be happening [1815] this column is called due date you can [1816] imagine how it's really like the booking [1817] date I was just lazy and I didn't want [1819] to make another field so what we're [1820] going to do is we're going to grab the [1822] due date then we're going to grab [1823] today's date and then we're just going [1825] to count the number of days between the [1826] two [1827] and when that number Hits seven assuming [1829] that we're running this every day then [1830] we're going to send the email and [1832] because we're only running this once a [1833] day the next day when it runs it's not [1835] going to be seven it's going to be six [1836] we're not going to send the email again [1839] so very simple way of solving this and [1840] that's what the second scenario is going [1841] to be about so first things first I'm [1844] going to open up [1845] clickup head over here and then I'm [1848] going to list all tasks so retrieve all [1850] tasks for specific list I'm then going [1853] to and then we have to select our list [1855] ID which is sort of an actually maybe [1857] maybe I can just select manually that'll [1859] be easier yeah we can [1861] wonderful um this may be new [1863] functionality I think in the past you [1864] just had to map the list IDs from the [1867] URL so that's good anyway I'm going to [1869] go down and select [1871] my photography [1874] example and then I'm not going to do any [1877] filtering at all and I'm just going to [1878] let's just say I want to be really [1880] generous and I'm going to limit this um [1883] to 100 so this should work all the way [1885] up to 100 records and then just so that [1888] uh we have more of these I'm just going [1889] to add a new name let's just say Peter I [1892] left click and maybe this is like the I [1894] don't know the ninth or actually we [1897] should probably do that one week from [1899] today my math ain't so good I'll do [1901] that later let's do um [1906] Family let's do [1910] this we'll do [1913] wnac oh okay maybe I shouldn't do that [1916] because I'm going to send three emails [1918] emails random email address that doesn't [1921] exist I just did that because I wanted [1923] to create a new record and I just wanted [1925] to test my flow at the same time so [1926] anyway now I have two with the date [1928] created uh which we can sort by which is [1930] always nice to have you know like uh at [1932] a very simple easy visual glance when's [1934] the first record that came in for [1935] instance and so you do that and click up [1937] just by clicking this button that's [1938] ascending order this is descending order [1940] uh and then you click save down here to [1941] like Save The View uh but what we're [1943] interested in is this is this due date [1945] field so I'm going [1948] to let's do next week I think that's [1950] seven days no that's not it's totally [1952] the sixth okay so I'm going to pretend [1954] that my record here this Nick Sur record [1956] initially was from March the 6th and [1957] then this one's December the 99th so we [1959] should now be able to see uh you know [1961] discriminate between a record that's [1963] working and the record that isn't first [1964] thing I'm going to do is I'm going to [1965] list all tasks so now we got the task [1967] names for two bundles if you guys [1969] remember from the previous video I [1970] talked about a lot of things having [1971] built-in iterators with the names list [1973] or filter or um you know get or whatever [1976] this is example of one so this is [1978] actually going to run twice one for [1979] every bundle that comes in assuming that [1981] you have multiple records right and then [1983] what I'm going to do is I'm going to [1985] add an email module actually I'm just [1988] going to copy my previous email module [1992] and then I'm just going to paste this in [1993] and then I'm going to say send [1999] followup let's just call this follow-up [2001] one this is going to be over [2003] email we're going to grab the email [2006] address [2008] we're going to grab the first [2011] name right here I'm not going to include [2013] the package [2016] here hi we're chiming in to remind you [2019] of your photography [2022] session [2024] on then we're going to grab the due date [2027] again and I'm just going to do a little [2029] hack here because I know what this [2030] variable is called it's uh left curly [2033] bracket left curly [2035] bracket um [2038] um dot [2040] no one. doore date then I'm going to [2045] paste in the first name [2050] here and then I'm just going to say let [2052] us know if there are any changes [2055] otherwise looking forward to seeing [2058] you okay so we send that we set up the [2060] followup and now we need to set up a [2062] filter which basically only shows tasks [2064] that are on that day there are multiple [2066] ways to do that you could do this um I [2069] think here yeah you could do this on the [2071] clickup module itself so we could say [2072] filter dates and then we could only [2075] show um well actually I don't know if we [2077] can do this yeah no I don't believe [2080] uh yeah I don't actually know if we can [2082] do this anyway this allows you to filter [2084] by dates so you could do after due date [2085] before due date after due date whatever [2087] but I don't really want to do that what [2088] I want to do is I just want to filter [2090] directly in this filter module so I'm [2091] going to say if days between equals 7 or [2096] maybe we'll just just do if 7 days out [2099] let's do that that's simpler the thing [2101] I'm going to grab is I'm going to go [2103] down here and find the due date which is [2105] December the 9th 2024 apparently at 4 [2107] a.m. for some reason and then I'm going [2108] to say [2110] condition um and then I'm going to use a [2112] date function which you'll find here I [2114] always confuse these two tabs because [2116] this looks more like a calendar to me [2117] than this for some reason anyway uh [2119] we're going to get the number of days [2120] basically between the two [2122] um I don't actually remember how to do [2125] this that's [2127] interesting so let's [2132] do due date minus now I [2137] think yeah I think you can actually [2140] just subtract the [2142] two okay anyway I obviously don't [2144] remember how to do this so I'm actually [2145] just going to do it in the module I'm [2146] going to call this test date I'm going [2149] to paste that in and so what this is [2150] going to do is this is going to get a [2152] due date from clickup it's then going to [2154] subtract that by now so we'll see how [2157] that works I'm going to remove this [2159] remove that just connect these two [2161] directly that way I don't have to do [2163] anything funky I'm going to run this and [2165] we'll see what happened oh this is going [2167] to run twice probably yeah [2170] whatever um we received a very large [2174] number uh I think the reason why is when [2176] you subtract two dates what you end up [2178] with is I think you end up with [2179] milliseconds so I think there are that [2182] many milliseconds in [2183] between [2185] um I think what we have to [2188] do I'm not really sure here so we're [2190] going to figure this out [2192] together so I'll paste [2195] in this and then I'll just um I'll [2198] divide by [2202] 86,400 [2207] maybe so now it's that oh maybe oh hold [2209] on I think it's way more than that [2211] actually um what is this due date first [2213] of all uh this due date is March oh yeah [2217] yeah so I don't care about the Peter [2221] record so let's actually just uh remove [2224] this do I want to remove it no it [2226] I'm not going to remove it let's [2227] actually just look at operation number [2229] two um so 6.5 days out so I think that I [2232] just need to add one two three more [2234] zeros here and I think that's how you [2235] convert from milliseconds to days so if [2237] I go in operation two you'll see now the [2239] test date is 6.5 days out um it looks [2242] like the date is supposed to be March [2243] the 6th we are halfway through February [2245] the 28th so I think that makes sense uh [2248] and so what we have to do now is we have [2249] to flatten this and what I want to do is [2252] I want to grab uh in the math module [2255] here I want to put brackets around this [2260] as [2262] well and a quick and easy way to do is [2264] just that and then I want to [2268] um uh actually you know what I don't [2270] need brackets the hell am I talk uh yeah [2272] no I do need brackets I lied um so curly [2275] brace curly brace Clos [2277] and I guess you automatically close them [2279] and then what we're going to want to do [2282] is I think we're going to want to get [2284] the [2285] ceiling yeah because this is technically [2287] seven days out so we're going to go seal [2292] oops seal up [2295] here then I think that should be all [2297] closed up [2299] now you might not need one of those [2302] brackets but screw it this should say [2304] seven days good awesome so now we know [2307] that this is our function and then I'm [2309] going to go in here and unlink the [2311] filter drag that back in and I'll say if [2315] this is equal to numeric [2319] 7 then send the [2322] email and then I'm going to set this to [2325] run every day and I want this to run [2328] sometime pretty early so we'll do like I [2330] don't know 7:54 or something like that [2333] am uh am yeah okay great and now what [2337] we're going to do is we're going to scan [2338] through our list again run this and then [2341] see uh which ones get selected now keep [2343] in mind the only record that should be [2345] selected is this March 6th one and then [2347] when that gets selected we should pull [2348] the email and then add in the body copy [2351] and kind of send it so let's run that [2354] awesome so we had two bundles as input [2357] the filter ran it isolated the one that [2360] we wanted which was equal to seven and [2362] then it sent one email and it should be [2364] sent to Nick Sarat or Nick left click. [2366] yeah awesome awesome so that's how you [2369] would do the second followup and then [2371] the third follow-up is basically the [2373] exact same thing so we're actually just [2375] going to get to reuse all this [2376] functionality which is [2378] nice the only difference is now instead [2380] of checking for seven days we're just [2382] checking for one day and instead of us [2385] sending a email we're going to be [2387] sending a text message text messages [2390] functionally speaking at least on the [2391] make side of things they're the exact [2393] same as emails the only difference is [2396] going to be your formatting and the [2397] modules that you use and in our case the [2399] modules that we're going to want to use [2400] are [2401] twio so just go to twilio and then we're [2404] going to want to create a [2406] message um this is the filter that we [2408] want right so if you just delete this [2410] good news is that filter gets carried [2412] over to the next open module [2415] so yeah anyway um now we're going to [2420] create the too connection I'm going to [2421] call this example tlio you can see I've [2423] already done that uh let's do Feb 28 [2426] 2024 just so I can disend big between [2428] the two and then twi what happens is [2430] when you sign up you will get an account [2432] Sid and then an off token so um I'm [2434] gonna have to like delete my account [2436] immediately after because I am exposing [2437] my off token which is sort of annoying [2439] wait a second I don't actually need to [2441] do [2442] that I can just change the camera [2445] wonderful okay sweet so now that I've [2448] authorized that toio connection you can [2450] choose what you want to send the message [2451] from after you set up the account [2452] they'll give you a phone number you can [2453] use for testing so that's my phone [2454] number and what I'm doing is I'm I'm [2456] going to send it to uh the phone number [2458] that I've received from the list all [2459] tasks module now can't actually get that [2463] data yet so I'm just going to [2466] go I'm going to say um hi I think it's [2470] just going to be one. first [2473] name um just a reminder that your [2476] photography session is tomorrow let me [2479] know if you have any cues thanks uh [2483] we'll [2484] say was Tech [2487] that should be good I'm just adding a [2489] fake number there because what I want to [2491] do now is I want to unlink this I want [2493] to run the clickup list all tasks module [2496] just to get all of the data then I want [2498] to connect this and I just want to see [2500] what the name of the variable that I'm [2501] going to be using is called um I guess [2504] it's just phone yeah I guess it's just [2508] phone should have the country code yeah [2511] there you go so we're just going to go [2512] phone and then instead of it being oh [2515] and then I think I need to change the [2517] name of this variable [2518] too um it's not lowercase f Ur name [2524] it's uppercase F Earth [2527] name instead of if seven days out we're [2529] gonna go one day [2531] out and then I'm just going to click [2534] that awesome uh we're going to run this [2536] not at regular intervals but every day [2538] and we're going to do that the same [2539] thing it's going to be [2540] 7:55 a.m got to write the date like that [2544] at least here then I'm going to go back [2546] here and then test this by setting this [2547] to tomorrow and so what should happen is [2550] we should get one day out and then I [2552] should get a text message I'm just going [2553] to hold up my phone [2555] here uh just to make sure that that [2557] worked and then yeah let's pretend it is [2559] now March the 5th or whatever one day [2561] before um the time that we were supposed [2562] to send this and then we're running this [2566] puppy and it's going to select the one [2568] record that matters and then I don't [2570] know if you guys can tell but I just got [2571] a little notification up at the top of [2573] the screen and behind that is my sick uh [2575] berser artwork from a really great [2578] artist um so now you guys know what my [2579] phone screen looks like and yeah you can [2581] imagine how if you run this every day [2583] and then if you run that other follow-up [2585] every day um you will now have two [2587] follow-up systems uh one on a 7-Day time [2590] span and then one on the one day time [2592] span so yeah that's what we would do and [2594] then just to really fully close out this [2596] example payload too large [2600] H um I don't really know why that [2603] happened it might be that I just by [2606] copying all this stuff over oh okay [2608] maybe it's just a make er yeah weird I'm [2611] also going to copy all this okay so the [2614] last thing we would need to do obviously [2615] is we would just turn all these on I'm [2616] not going to do that here without [2618] changing this to On Demand first so on [2621] and then on and then [2624] on and then assuming that you replace [2627] this WordPress web hook module with like [2628] the actual input and then you change all [2630] the variable names to accommodate um [2632] everything that this lovely bearded [2634] suited man wanted uh is now done and [2638] yeah that's a real make scenario build [2640] for um somebody that may or may not be a [2643] customer I mean I'm probably not going [2644] to work with this fell because he's [2645] posting on a make uh tutorial and he's [2648] basically like how would I make [2649] something like this on my own you can [2650] imagine how this was a very vague sort [2653] of scope that we received from a [2654] customer a potential customer and then [2656] over the course of the last I don't know [2657] half an hour 40 minutes or whatever um I [2659] turn that into a series of three [2661] business modules a CRM mind you a very [2664] introductory CRM one that's probably [2666] lacking some of the functionality they [2667] want but I turn this into a system that [2669] is actually capable of going out there [2671] and then improving the customer [2672] experience doing some very simple things [2674] you guys probably might want to do for [2675] your own business uh following up [2677] automatically and all that stuff so yeah [2680] super realistic look I want to say like [2682] the life of a make or just like an [2684] automation Dev more generally I hope [2686] this could help you guys on your own [2687] automation Journey if you guys have any [2689] other requests that you want me to [2690] include just as I'm rounding out the [2692] rest of this course because I only have [2693] one more video that I want to do please [2694] leave a comment down below with that [2695] request I think this might be a pretty [2697] interesting format honestly if I'm being [2698] honest I think that people would just [2700] really like to see how I convert these [2702] vague uh requests into like actual [2704] tangible business use cases so yeah that [2707] might be a series or something like that [2708] that I'll do at some point I don't know [2709] yet depends on the uh the feedback but [2711] otherwise please like subscribe and I'll [2713] see you on the next video [2720] cheers

Video: https://www.youtube.com/watch?v=DpH9WaTIiuU
Title: How Iterators & Aggregators Work In Make.com
[0] what's going on guys welcome to another [1] video on our course make.com but for [3] people who want to make real money and [5] it is a BAL me minus 20 uh degrees or so [9] in Calgary I thought I would put on my [11] favorite winter sweater and record a [12] video today on iterators and aggregators [14] this is going to be everything that you [15] need to know in a practical sense to [17] succeed with iterators aggregators and [19] make.com I find way too many people [22] diving way too deep into this for [23] basically no reason because you're only [24] ever going to use iterators like 10 or [26] maybe 15% of the time um so we're going [28] to focus on like a real practice iCal [30] application for an accounting firm and [32] we're just going to try and make this as [33] simple as possible uh I'm going [35] to not tell you but I'm going to show [38] you how they work and then hopefully [40] you're going to pattern match this into [41] your own flows and then do something [43] cool and make a bunch of money with it [44] so if that sounds like something you're [45] interested in stay tuned and let's get [46] into [50] it okay so not going to lie I did record [53] an entire [54] video for about 35 minutes right before [56] I did this and then I realized that uh [59] OBS was not on so I'm going to be doing [62] this again and hopefully it's going to [64] be way higher quality than it was before [66] what we're going to be doing here is I [68] have an example spreadsheet set up and [70] we're going to pretend that we're [71] building out a flow for a client that [74] wants maybe some accounting Automation [77] and it's going to be a really simple [78] flow I'm going to keep it as dumb as [79] humanly possible because the focus of [80] this is going to be on how to use [82] iterators and aggregators but [84] essentially what we want to do is just [85] like once a month we want to send the [87] client an email just telling them what [89] their net uh cach in was and the way [91] that we're going to do this is we're [92] basically going to plug this into a [94] make.com scenario and then we're just [95] going to add up everything in the amount [97] column here so you know classic [99] spreadsheet right you have the name of [101] the transaction uh you have like the [103] date added this is in like date time [104] format which we'll touch on and then you [106] also have the amounts all we're going to [107] be doing is just going to be summon this [108] up and I mean like Google Sheets already [109] does this for you look at the bottom [111] well you probably can't see because my [112] face is there but in the bottom right [114] hand corner of the screen like when you [115] Mouse over stuff in Google Sheets it [116] literally shows you like summary value [118] uh so right now it's saying the is [120] 28774 for instance um so we're basically [123] going to be doing this and then we're [124] just going to like attach this to a [126] one-step email and that email is just [127] going to be sent out to a hypothetical [130] business owner and just say hey man in [131] the last month you made X dollar great [135] so that's going to be the whole idea and [136] that's uh that's what we're building out [138] now again I've already built this flow [139] out [140] so I'm just going to create a new one [143] we're just going to pretend I'm building [144] it from [146] scratch and I'm going to pay close [149] attention to my camera to make sure that [151] that doesn't happen again okay so [153] what I have here is a new make.com [155] scenario I'm going to open up Google [157] Sheets because we're going to be pulling [158] the data from Google Sheets and then the [161] module that I'm looking for here is [162] called search rows right down [166] there and what we're going to do is [168] after I select the correct [171] account um I'm going [174] to find the spreadsheet that I'm using [177] which in this case is specifically [178] called example spreadsheet there you go [180] we got [181] it and then I'm going to grab the sheet [184] name sheet name is just the text down [187] here uh the table does contain headers [190] leave everything else as default uh [192] we'll work on a filter in a moment and [193] then sort order a sending order by and [195] then we're not going to put anything for [196] maximum number of return rows if you [198] don't put anything in there it'll just [199] select all of them and then we are going [201] to run it and now we see the first parts [205] of iterators and aggregators so what a [207] lot of people think is they think that [209] and aggregators they're separate modules [212] that uh you know you can kind of [213] optionally put into a flow this would be [215] your iterator this would be your [216] aggregator notice how they have these [217] fancy diagrams where with the iterator [219] one thing's coming in five things are [221] coming out with the aggregator five [222] things are coming in one thing's coming [224] out in the reality in reality in [228] make.com many modules already have [230] iterators and aggregators built into [232] them and so usually any module with the [235] name search or list or filter file find [240] U anything like that actually already [242] has an iterator built into it so you [244] don't need to add another iterator and [246] the way that you find out is if you [248] click on the model output module output [250] rather and if there is more than one [253] bundle that is output from that module [255] then this is an iterator module and so [258] all that that means is [261] basically if we were to add a scenario a [264] or a module after this so let's just add [267] a set multiple variables the variable is [270] just going to be amount and then the [271] variable value is just going to be [274] amount all that having multiple bundles [276] means is if I click run once pay [278] attention to the bubbles above every [281] module the Google Sheets module run one [283] runs once but then it because it outputs [287] four different bundles everything after [289] that is running four [291] times and so we're consuming for [295] operations this is for module [297] executions and uh you'll also see that [300] there are different operations here so [302] like this it's four operations every [304] every time you have multiple bundles [305] coming in as an input to something um [308] you're going to run it basically however [310] many times the number of bundles that [312] have come in and so you can think of an [315] iterator is basically anything that [317] takes in one bundle and then puts out [320] multiple bundles so if we go down that [323] diagram kind of see why this makes sense [325] now right because we have an arrow [326] coming in with just one bundle and then [329] it's outputting a bunch of different [330] bundles and the really important part [332] about iterators is that basically for [335] every bundle that you are then putting [337] as [338] output every other subsequent module in [341] the scenario is going to run for that [343] bundle and for any other bundles that [345] you're sticking in now the reason why [348] this is important is because if you're [350] not careful when you use iterators [353] gratuitously you can consume a ton [355] of [356] operations I've seen flows and I've [358] built flows that unfortunately consume [360] anywhere from like 50 to 500 operations [364] per execution you can imagine now if [366] you're trying to run that every day well [368] there's the whole you know 20 or $30 a [370] month make plan right so I usually don't [374] actually like using iterators in [375] aggregators for the sole reason that it [377] becomes very operationally expensive to [378] maintain and there are usually ways that [380] you could just chop up a big scenario [382] into three or four tinier scenarios to [385] achieve the same thing without having to [386] do all of that [388]  so that's my piece a lot of [390] people would probably disagree with me [392] on but [393] hey now um cool so we have basically one [397] bundle coming in as input and then we [398] have four different bundles coming out [400] and what you'll find is if you access a [402] variable in a subsequent module that [403] variable will change for every run so in [406] the first run it's going to go and stick [407] in 3583 because we're sticking in the [409] amount here right so the first run is [412] going to be 3583 second run is going to [414] be 194. 5 Third Run is going to be 9591 [419] the fourth fourth run is going to be [420] 38.5 it's a different uh the variable is [423] different every time because we're [424] basically running this a new and let's [427] say I wanted to just add another module [429] here to really drive this home let's [431] just say that we have another variable [433] that we're calling double in a [434] subsequent module and then we're just [435] multiplying this by two then I run this [438] again notice how we have three modules [441] but this is nine whole executions we ran [443] once we got four bundles as output to [446] the first iterator module and then we [448] had four runs for the second module runs [450] for the third module so be careful when [453] you're making uh flows with a lot of [455] iterators and a lot of [457] aggregators so anyway that's that first [459] scenario when you're just using a [460] built-in [461] iterator um what I want to do now is I [463] actually want to take a little bit of [464] data and then I want to I want to [466] iterate it um just outside of this just [468] so you guys can see what an iterator [470] like the actual iterator module does and [473] so I'm just going to use this set [475] multiple variables as my flow and then [478] I'm just going to call this example [480] array and what I'm going to do is I'm [482] just going to use I'm just going to [484] build a really simple array and then I'm [486] going to show you how if your module [487] doesn't have iterator functionality [488] built in but you want to give it [489] iterator functionality uh you can just [491] use the iterator module super simple and [493] super easy so what I'm going to do uh [495] this is just a quick and dirty way to [497] like make an array uh you can use a [499] bunch of different uh functions to make [501] arrays all you do is you go over here to [503] the array tab uh but I know a really [505] simple function is just split and then [509] as you can see it actually shows that [510] exactly as an example so I'm just going [511] to do [512] this and then I'm going to separate by [515] comma and so what this is going to do is [516] this is going to take in one string as [518] an input and then the output of this is [520] going to be three different items in an [522] array and so I'm going to click okay and [525] going to run this puppy and then now as [527] you can see we had one variable as the [529] input well I guess this uh is counting [532] the input and the output but anyway we [534] had a string that was like John George [535] Paul all separated by commas and then [537] the output of that is this array that [539] that is indexed uh the first entry is [541] John the second entry is George and then [542] the third entry Paul so pretty cool what [546] I want you guys to think about iterators [547] is doing is basically an iterator will [550] just take an array and then turn that [551] into various bundle uh bundles and then [554] an aggregator will take a bunch of [556] bundles and they'll just turn that into [557] an array it's a really simple and easy [559] way of kind of conceptualizing what [560] these two things are [561] doing so um great now that we have this [564] and we have an array why don't we [566] iterate over it the way to do so [568] manually if you don't have a built-in [569] functionality to your module is go over [571] here to tools and then click [573] iterator you need to Define an array as [575] your source and so the array that we're [576] defining as our source is going to be [578] this example array be careful when you [580] select this what you need to do is [582] select the variable with uh square [584] brackets uh and no number in between [586] otherwise you're selecting an entry [587] inside of the array but we actually just [589] want to select the whole array and then [591] to make this super simple I'm just going [592] to use a set multiple variables module [594] and I'm just going to add um another [597] example variable and then I'm just going [598] to set it to as you'll see uh when you [600] use an iterator you'll have a couple of [602] default variables that are always [603] accessible to you total number of [605] bundles bundle order position and you'll [607] also have the value of whatever it is [609] that we're [610] selecting and if that doesn't make sense [612] this will so we had one um this ran one [617] time the output was an array with three [620] items John George and Paul we then fed [622] that into an iterator the iterator ran [625] once because its job is to basically [627] build a bundle structure you can think [628] of it as it doesn't have to run multiple [630] times only runs once does its job as the [632] input to this iterator we had that array [634] with three items as the output we turn [636] that array into three separate bundles [639] and so what that means is now anything [641] after this iterator is going to run [642] however many bundles we have and that's [645] exactly what happened with this final [647] module 6 it ran three times the input to [651] the first time we're just setting a [652] variable here was the first item or the [654] first bundle value coming out of that uh [656] iterator module which in that case was [657] John the second one is probably going to [659] be George and the third one hopefully [661] will be Paul there you go so yeah that's [663] how iterators work in a nutshell and how [665] you can incorporate your own iterator [666] functionality into it uh but why the [668] hell am I talking about all this I [669] thought I was going to build something [671] that is business ready and you know [673] something youd probably do for yourself [674] for your clients so let's get into that [677] by learning a little bit about the flip [679] side of an iterator which is called an [683] aggregator the simplest way to [685] understand an aggregator is to go open a [688] make scenario get like a Google Sheets [690] module like this um build out your own [693] Google sheet for whatever functionality [694] you want and then go down here to this [696] purple uh tools button and then as [699] opposed to the flow control button with [700] the array aggregator much simpler way to [702] understand it go to the tools and then [704] scroll down to numeric aggregator here [707] and I'm going to use this I'm going to [708] show you exactly why this works and how [710] this works um basically what we'll do is [714] we're going to feed in every bundle as [716] an input to this numeric aggregator [718] module so the source module is just [720] going to be whatever the previous module [722] is in this case we only have two modules [723] so we can only select the Google Sheets [725] module but just always select the the [727] earliest module the one that is [729] outputting all of the bundles that you [730] want and then you'll see here for the [732] numeric aggregator module you can select [734] from a number of functions and so these [735] are pre-built we could do an average we [737] could do a sum we could do a count we [739] could select the max value the Min value [741] right we have a lot of options here but [742] it keep it simple I'm just going to use [743] sum and then the value that we're going [745] to stick in is going to be whatever [747] value that we want like num generally [749] aggregated and so in my case it's the [751] amount and just check out the magic that [753] happens when I stick this in that's what [757] she said uh as output we have the four [761] bundles uh as we had previously right [764] and then all of those went into the [765] numeric aggregator and then look at what [767] happened we fed in these four bundles as [768] input and then what happened the output [771] just summed them all and at the end we [773] only get value called result and so the [777] way that an aggregator works is again [778] it's just a flip side to the iterator we [779] have multiple bundles coming in and then [781] just like the diagram shows we squash [784] those into a single value coming out [786] you'll also notice that something's [787] Chang graphically in the make UI and [789] this is interesting I don't think too [791] many people understand like the the [792] Nuance behind this but basically uh [795] anytime you have like a gray sort of [797] thing wrapping around a few modules [799] that's because the beginning of that [801] modu uh beginning of that flow beginning [803] of that gray area is an iterator and [805] then the end of that gray are is an [807] aggregator and so [809] because an iterator expands things into [811] a number of bundles and then an [813] aggregator squashes that back into one [814] bundle any modules outside of that Gray [817] Zone can't access anything inside of [820] that except for the output of the final [822] module what do I mean by this well let's [825] make this a little more complex let's [827] say hypothetically we have a set [830] multiple variables module we stuck it in [831] the middle here and then we had a [833] variable that we just called double [835] we're going to grab that amount we're [836] going to do that mathematical operation [838] we did before [839] and then we're going to Auto align these [842] what I want to do is I'm going to sum up [844] the double value instead of the original [846] value and then I'm going to add another [849] multiple variables module here and then [852] I'm just going to leave this as blank [853] for now and then run this [856] once you see that everything is working [858] as expected Google Sheets module ran [860] once set multiple variables module ran [863] four times because this is simply um [867] operating per bu [869] right this isn't an aggregator module or [870] anything and then the aggregator took [872] this as an input and then turned that [873] into one you'll see that the values here [875] double what the previous values were [877] that's sort of to be expected right so [878] the result is as well now let's say we [881] want to add the result and just stick it [882] in this set multiple variables module [883] and we just wanted to like store that [885] information somewhere let's just call [886] this doubled [888] result notice how the only thing [890] accessible to me is a single module [893] which is Tools 7 which is this numeric [895] aggregator I can't actually go back and [897] access anything from from uh Tools 8 and [900] I can't actually access anything from [901] Google Sheets the reason why is because [903] this module is not inside of that gray [905] overlapped sexy area that you know [907] really wants to be in it's not in the [909] exclusive Club um and so the reason why [912] is again because everything in here is [914] like uh it's executing a bunch of times [916] and it's just it would be impossible for [918] you to reference a single value here [920] when the whole purpose of this flow is [922] to squash that into a value over here [924] right this is going to run once [927] everything after this but everything [928] inside of here is going to run as many [930] times as the number of bundles generated [931] by the [932] trigger okay great so why don't we [935] actually use this now to build our [936] summary [940] metrics we're not taking double as input [942] we are taking [944] amount let's run this again for [947] sanity [951] 28774 and actually let's do one more [953] thing first [956] um I added in three values that were in [959] February so 223 2024 224 2024 224 2024 [964] and then one uh value that was from or [966] one row that was from March and the [969] reason why is because I just wanted to [970] teach you guys a little bit of filtering [971] while I was doing this let's say [972] hypothetically for the purposes of our [974] flow that we're building we only want to [976] get dates within the current month you [978] can imagine how maybe we run this flow [980] on the last day of every month and the [982] purpose of this flow is just to take [983] everything from uh the beginning of the [985] month all the way up to the current date [987] or maybe the end of the month and and [988] then just to add all of those entries up [990] and then deliver that as like a cash [991] flow report um so in order to do that uh [994] we'll use this Google sheet search rows [995] module and if you guys remember at the [997] beginning I mentioned that there was a [998] filter section so we're going to [999] implement a couple of filters now to do [1000] that so I'm going to be filtering by [1002] date added and what I basically want to [1004] do is I want to select only the entries [1006] between February the 1st and then uh the [1008] last day of the month the way that you [1010] do that is in filters you can scroll [1012] down uh there are basic operators text [1015] operators numeric operators what we're [1018] interested in our daytime operators so [1021] uh I'm going to select later than or [1023] equal to and what I'm going to do is I'm [1025] going to attempt to [1026] define a date and I want that date to be [1030] the 1 of February basically the way that [1032] you do that is you head over here to the [1033] date and time Tab and then you make use [1036] of the now [1038] variable and then you also make use of [1040] the set date [1043] variable what this basically does is it [1045] takes in the current date which is now [1049] um make has a really complicated date [1051] string if you check out the red text in [1052] there like [1054] 2016-12-28 [1056] t163 [1057] 06372 Z that's its own like internal [1060] representation of what a date time is [1063] but what what now does is now just gets [1064] the current date time so now is like 234 [1067] February the 27th 2024 right um it would [1070] just turn that into whatever this long [1072] object is and then all the other [1073] functions in this date tab they they [1075] know how to manipulate those variables [1078] uh those [1079] that format of date time object [1081] essentially and so one of the functions [1082] is called set date and it basically [1084] takes as input that date time object and [1086] then it allows you to set the date of [1088] the month based off that date and so if [1090] you feed it in February the 27th and you [1092] say I want you to set the date to be the [1093] first it'll just um change the date to [1095] be the first [1097] essentially so yeah that's that um and [1101] let me just run this right now just to [1104] show you guys what that comes out to in [1106] practice if you select the module and [1108] then you go to filter it'll show you the [1110] operators that you've essentially [1111] created here and you'll see how um this [1114] o variable stands for the the operator [1116] so I'm looking at the date operator and [1118] I'm checking to see which dates are [1119] greater or equal to and then this B here [1122] is the actual value that you're feeding [1123] in is your filter so this is the source [1125] of Truth February the 1st 2024 1:35 p.m. [1129] uh this isn't like super accurate but [1131] I'm not going to worry too much about [1132] fixing it ideally though you can imagine [1133] if you were trying to build out like a [1135] precise flow you'd want it to start at [1137] like 12:00 a.m. that day uh but it's [1139] aside the purposes of this so I'm just [1140] going to move forward and then I'm going [1142] to build out another filter and that [1143] filter is going to be um for the end of [1145] the month so I'm going to go find [1148] another datetime operator we're going to [1151] say earlier than let's just do earlier [1154] then and then let's make this March the [1156] 1st how you do that is you go back to [1158] the datetime [1160] operator and then you do add uh months [1165] so add months set date and then add one [1167] month to that and so this is going to [1169] take the date that we had previously [1170] it's just going to add exactly one month [1172] so it's going to go from February to [1173] March and then what we're going to look [1174] at is we're going to look at entries [1175] that are later than February the 1st and [1177] then earlier than March the 1st and [1179] there's a little bit more Nuance there [1181] this is later than or equal to February [1183] the 1st and then this is earlier then [1184] March the 1st so technically it should [1186] be February the 1st inclusive all the [1188] way up to March the 1st excluded um but [1192] I'm not going to worry too much about [1193] the Nuance but let's just check out that [1195] filter and see how it operates um since [1198] since three of these were in February [1200] and then one of these were in March they [1201] should only operate three [1203] times and that's what happened so we [1205] only selected the ones that were in [1207] February so it looks like the filter is [1208] working and then we took those values [1210] and then we used the numeric aggregator [1211] to sum them up to [1213] 32624 what I'm going to do now is I'm [1216] going to write an email to myself [1219] talking about how great I am now this [1221] would be the email maybe that you're [1222] writing to your EXA client or maybe or [1225] maybe yourself if you're running a [1226] business and you want some type of [1227] summary metric [1229] I'll leave it at drafts for now write [1231] the email address in question I'll say [1233] your monthly report is within I'll say [1237] hi um I'm using HTML so I'm going to use [1240] these BR tags to space it out a little [1243] bit um your monthly cash flow let's call [1248] this a cash flow [1252] report hi your cash flow for the month [1256] of let's have make get the date so let's [1260] do now make has another date time [1263] function called format date so we can [1266] take as input a datetime object which is [1268] that long number string thing [1271] 2016-12-28 whatever and then we can turn [1274] that date time into just natural [1276] language like we could make this say [1278] February the 27th or something if we [1279] wanted to um so that's what we're going [1281] to do here we're going to use format [1282] date I'm going to take his input now and [1284] then I'm going to take his output and I [1286] only know this because I work with dates [1288] all the time but if you want to like [1290] learn more about this head over to [1291] tokens for datetime formatting here um [1294] it's like a make.com help page and it to [1296] shows you which tokens to stick in but I [1298] know for sure that I just want to select [1300] mmmm that'll stand for the month so [1302] that'll grab February [1304] basically um so your cash flow for the [1306] month of February [1308] is and then I'm just going to [1311] select and then let's say your net cash [1315] flow counting up all [1319] Revenue line items and subtracting all [1322] expense line [1325] items for the month of [1330] blank is whatever and let's see maybe I [1333] can bold this too make it look really [1335] nice and [1336] sexy uh and then I'm going to add a few [1339] more [1340] BRS thank you and then we're just going [1342] to pretend we're like accounting or [1344] something you can imagine you could [1346] actually build this out for an [1347] accounting firm pretty pretty easily I'm [1349] going to run this just to make sure it [1350] works um we're back here we in [1356] drafts that was from the previous flow [1359] that I ran so it'll be this one here [1361] yeah there you go uh High your net cash [1363] flow for the month of February counting [1364] up all revenue land items subtracting [1365] all expense l items is this amount thank [1367] you accounting great um that is our [1370] super simple and easy business use case [1373] and then the last thing I'm going to do [1375] here just while I have you and you're [1377] also interested in what I have to say is [1379] I'm going to show you how to use the [1380] actual array aggregator module uh which [1383] is very similar to what we just did here [1384] with the numeric aggregator it's just in [1386] green and I really like the color green [1388] no it doesn't have um it doesn't have [1390] like its own built-in uh function but [1392] you can just add that function in later [1394] if you want so so okay imagine we have [1396] an iterator over here which takes as [1398] input one bundle turns it into a bunch [1400] of bundles in in our case three but [1403] let's say we wanted to um take those [1406] three bundles and then sash those back [1408] into one value and probably the simplest [1410] way to do that is with the example that [1412] we provided earlier um let's have two [1414] summary functions one will be called [1417] doubled amount which will just be amount [1421] and then we'll do times two and then one [1424] will be called tripled [1426] amount and for whatever reason we just [1429] we we really want to get these we just [1430] need to multiply them by two for God's [1433] sake and then we drop in an array [1435] aggregator feature and basically what we [1437] want to do is we want to we want to run [1438] this we want to multiply all of the [1439] values by two and then by three and then [1441] we want to get all of those values at [1443] the end um here's how it works well [1446] first things first as the source of the [1449] aggregator when you're building out [1450] these flows for yourself to keep it [1451] simple always use the earliest iterator [1454] in the flow what that means is the [1455] Google Sheets module here is the [1457] earliest iterator in the flow it's the [1459] module that defines the number of [1461] bundles that are being created so I want [1462] to use that as the source of my flow now [1466] if I click okay notice what just [1468] happened we just added that gray outline [1470] and we did it around the Google Sheets [1472] module I don't actually know but I feel [1474] like if I select this it'll yeah it'll [1476] only do it around here so to keep your [1478] flows really simple just anytime the [1479] bundles start coming out um that's what [1481] you want to like encapsulate with your [1483] uh with your [1485] aggregator of course there are probably [1487] going to be a bunch of like make [1488] Professionals in the comments being like [1490] oh well that's not always true uh I [1492] really don't care because I almost never [1494] use iterators and aggregators most other [1496] people really don't use iterators and [1497] aggregator creators and this is probably [1499] just the simplest way to keep it all in [1500] track in your mind unless you know you [1502] do software development or uh computer [1505] architecture stuff for a living okay so [1508] next is Target structure type uh I [1511] select um custom for this all the time [1513] and pretty much everybody else will as [1515] well so just leave that as is and then [1517] the part that causes the for people is [1519] this field um aggregated fields and [1521] basically the way that it works is so as [1523] input we had an array right or like a [1525] one bundle and then as output we had [1527] four or or sorry three different bundles [1530] for this search row module right and so [1532] what we're doing is now we're trying to [1533] quash that down into a single um item or [1536] a single array basically uh so we're [1538] just doing the opposite of what we did [1540] with the iterator where we turned one [1542] array into a bunch of bundles now we're [1543] turning a bunch of bundles into one [1544] array and what we need is we need for [1546] that array to have a bunch of variables [1548] basically or values for the stuff that [1549] we're interested in having because you [1551] can only access the last module in an [1554] aggregator which is usually the array [1556] aggregator itself um you can select the [1558] values that you want to have accessible [1560] to you in that last module so what I [1563] want accessible to me is I want to be [1564] able to access the doubled amount which [1565] is here the tripled amount which is here [1568] and then I also want to be able to [1569] access the transaction name which was [1571] here the amount which was also here and [1573] then the date added which was here and [1575] this is hypothetical you could add as [1577] much information as you wanted here all [1579] the variables that are accessible I mean [1580] in our case it's just a bunch of empty [1582] Google Sheets uh columns so it's not [1584] really super important but yeah just to [1586] give you guys some freedom and then if [1587] we run this you'll see what we were [1589] expecting to see which is that the [1591] iterator runs once the any flows in the [1593] middle run the same number of times as [1595] the number of bundles and then the [1597] aggregator runs once as well and then [1599] look at the output of the aggregator the [1601] input was three [1603] bundles and each of those three bundles [1606] just had a bunch of values and these are [1608] the values that we selected a moment ago [1610] with aggregated fields we have the title [1613] or transaction name from here the amount [1616] from here and then the the date time [1618] from here these are titled weirdly but [1620] don't worry too much about that just a [1621] Google Sheets convention and then we had [1623] the two U variables that we picked from [1625] here like doubled amount and tripled [1627] amount and you can see that we had this [1629] for all three of the the bundles that we [1631] fed into this flow then the output is [1634] just a single array it's one bundle a [1636] single array with three collections [1640] inside of it and so we've taken three [1642] separate bundles that were all flowing [1644] on their own and then we've just quashed [1646] those back into a single array which is [1648] now the output and now we can do [1650] anything that we want with that maybe we [1653] want to [1654] add I don't know we want to add the um [1658] doubled and the tripled amount to get [1660] like the five times amount or [1663] something and when we run that [1666] once you'll see that now everything [1668] after the aggregator only is run once I [1671] don't really know why that happened [1674] oh oh yeah I just uh stuck them next to [1677] other I probably should have added a [1678] plus but whatever I think you guys get [1680] the [1680] point okay great so that is how [1683] iterators and aggregators work in [1684] make.com um I hope you guys enjoyed the [1687] business use case and the way that I [1689] tried to make it really simple I'll be [1691] honest guys you're probably not really [1693] going to use iterators and aggregators [1694] more than once in any flow if you find [1696] yourself building flows and like every [1699] single flow is an iterator aggregator [1701] just ask yourself if you're building [1702] things that are too unnecessarily [1703] complex ask yourself if you can just [1705] divide that into two or three scenarios [1706] instead of just one because usually what [1708] happens with these iterators and [1710] aggregators is the flows that you build [1712] as a result of them are just super [1714] unmaintainable and they can just take a [1715] boatload of your time all I care about [1718] is building Revenue performance systems [1720] systems that make money keep money and [1722] allow you to keep more of the money that [1723] you are making obviously and a big part [1725] of that is just the time you're spending [1726] maintaining and updating and and and [1728] error fixing systems so I like to avoid [1730] that as much as possible and I hope that [1732] you guys have at least gleaned that from [1734] all the other videos in our course [1735] thanks so much for watching if you guys [1737] got any question questions leave them [1738] below as a comment otherwise like [1739] subscribe and I'll see you on the next [1741] one thanks

Video: https://www.youtube.com/watch?v=dMcIhQ2v8lE
Title: How to Get Free PR Using Make.com & AI
[0] what's going on everyone welcome to [1] another video in our cours make.com for [3] people who want to make real money and [5] in this video I'm going to be diving [6] deep into how to build an automated [9] backlink generation machine using a [12] publicly available service called Haro [14] which stands for help a reporter out now [17] Haro shoots you emails once a day well [20] actually three or four times a day they [21] can be uh pretty overbearing with a big [24] list of questions that journalists have [25] developed and journalists are basically [27] just like shopping around for quotes and [29] so um I've built the exact same system [31] that I'm about to show you and then sold [33] it to a variety of clients anywhere from [35] like an 800 us price point all the way [36] up to maybe a 2 and a half to $3,000 [38] price point uh as you'll see the build [40] is extremely simple although the [42] outsized impact of having something like [43] this constantly running 247 uh is [47] difficult to Fathom I mean you can get [48] backlinks in fors Business Insider [50] entrepreneur.com that sort of thing uh [52] and I'm sure that vulnerabilities like [54] this will eventually be patched but as [56] of my latest knowledge you could still [57] use this sort of system to you know just [59] take take yourself to backlink Heaven [61] that sounds like something you're [61] interested in and you want to learn how [63] to build a business or SEO system that [65] generates actual leads uh backlinks or [68] money then this video is for you stay [70] tuned and I'll see you in a [75] sec okay so if you guys are new to Haro [77] or help reporter out a brief rundown [79] this is basically like a source website [81] that allows journalists to get sources [83] from business thought leaders and [85] doctors and lawyers and all these [86] authoritative people that you usually [88] see quoted in like a magazine or [89] whatever uh and we're just going to [90] build a system that takes in these [92] requests and then if it's relevant to us [94] we're going to use AI to process it and [96] then write an email response to the [97] person that's requesting the source so [99] very simple very straightforward from a [100] bird's eye view uh but Haro is just like [103] such a such a great system um this [105] probably isn't going to be around for a [107] while I received some notification I [108] think like a year ago saying that [110] they're going to uh slowly start [112] changing the way that the system works [113] maybe they're going to put it like in a [114] portal or something like that uh you can [116] imagine how the systems that we're going [118] to be building for that are going to be [119] slightly different from the email based [120] system that I'm going to show you today [121] but when they do that you know somebody [123] leave me a comment and then I'll I'll [124] build out a way to do that as well [125] everything in life is automatable um [128] yeah and so this is an example of one of [130] the flows that I built up before you'll [131] see that a bunch of modules are [133] everywhere that's just because I was [134] testing it right before this video to [135] make sure that it worked uh and this is [137] an example the flow that we're going to [138] be building out we're going to start [139] with uh previously I used a web hook now [141] I'm just going to use an email module [143] we're going to set a bunch of variables [144] then we're going to use AI to do things [146] like collect titles and then write [147] emails so that is what is in store we're [150] also going to get to use the iterator [151] module which is a module that I don't [152] think I've explicitly shown or talked [154] about until now uh but it's very simple [156] and very straightforward you don't need [158] to be too concerned about what we do [159] with that so here is the new scenario [162] first things first why don't we take a [163] look at one of these har emails just so [165] we know what we're working with let's do [168] Har then do Har Friday evening Edition [171] so these are the emails that they're [172] sending out what looks like three times [174] a day Friday morning afternoon and [175] evening um as you can see it's just a [177] massive list of queries uh people are in [181] biotech and Healthcare asking for pros [183] that you know they're seeking Pest [184] Control professionals and Travel Health [186] experts uh they want people that can [188] talk on virtual reality and medical [189] practice right there are all sorts of [191] things and obviously there are a ton of [194] requests here it looks like 93 in total [196] not all of them are relevant so we're [197] going to want to develop a system that [199] can automatically find the ones that are [200] relevant to us and then uh read through [202] the descriptions and then respond and as [205] you can see this is a really long email [206] right like we're not even a quarter or a [208] fifth of the way down we can scroll all [211] the way to the very [213] bottom and uh yeah it looks like the the [217] 93 oh actually the message was clipped [219] so it goes on even further than that so [221] I'm not going to you know open it up and [223] read through this probably take until uh [226] the end of time another asteroid would [228] probably come and extinct us all before [230] the time that I was done reading this [231] email but there are a couple of things [233] that we can pick up just pattern wise um [235] that'll make it really easy for us to do [237] this so as you see first they start with [238] like an index and then they just have a [240] bunch of oneline queries like hey [242] seeking Pest Control professionals and [243] Travel Health experts Anonymous or [245] Brands what are your biggest marketing [246] challenges in 23 blah blah blah if we [248] scroll all the way down though you'll [250] see that at a certain point that changes [252] uh and then there's this big list of [254] stars which I guess is just how they [255] formatted the emails way back when Haro [257] was first made uh and then you'll see [259] that they actually like go longer on the [262] specific requests so now there's a whole [264] what looks like three or four paragraph [266] section just about that first request [268] which is seeking P control professionals [270] and Travel Health experts and so what we [272] can do is we can basically parse all the [274] titles and then extract the relevant [276] queries just from the titles like let's [278] say if I'm Nick at left click and I work [280] in operations and business Consulting [282] you know I'm going to tell the AI hey I [283] just want you to extract all of the [285] stuff about business Consulting and then [286] we can use those titles to basically [289] split the email into the sections that [291] we want so maybe starting from here down [293] to here and then we can just feed this [295] section into AI we can do some fun email [298] parsing stuff to get the specific uh [300] email record that we want or email [301] address that we want to send to and then [303] maybe we can just write something like [305] hey you know I'm a professional at bed [306] bugs and I'm more than happy to help [307] here's a quick quote right in that way [309] it's like an automated quote generation [311] system um obviously not not everything [314] that we send out is going to be 100% [315] true there are going to be some issues [317] with factualness and like veracity and [319] that sort of thing so you do have to be [319] careful when you're using this U but the [321] system has generated tons of links for a [323] variety of people uh and I find that you [325] know if you don't really have the [326] expertise that the AI thinks that you do [328] people just aren't really going to [329] respond or or put the link up so very [331] low impact in that way I have a bunch of [333] prompt set up here which we're going to [334] be uh drawing from hence why I have a [336] Google doc window open but why don't we [338] start with the very first problem which [340] is just getting the email from our [342] inbox now you can imagine how if you're [345] building the system for the future like [347] I am um we want to look at emails that [349] are going to be coming in from now until [351] Infinity but I can test using the watch [354] emails module by right clicking and then [355] press choosing where to start so oh I [358] guess I have to set it up first so uh [360] I'm just going to click and let's use [362] this account I just know that that is [364] going to work my folder that I'm going [366] to pick here um in your Gmail inbox you [369] have a variety of folders this is [370] something that most people don't realize [371] but there's a difference between the [372] inbox folder like the sent mail folder [375] the all mail folder your unread and all [377] that stuff this is just a quirk of how [378] Gmail works so if you're using a [380] different email um it may be a slightly [382] different approach for you but I know [384] for a fact that I just want to look at [385] all mail that has ever entered my inbox [388] or ever will enter my box um this is [390] basically like setting up that mail hook [392] web hook that we were doing earlier I'm [393] just doing it using the email module [394] because it's a little bit easier I would [395] prefer to use web hooks though because [397] you can typically respond a lot faster [399] any who um okay criteria we're going to [401] choose all emails send your email [402] address this is where you basically [404] Define the filter that you're going to [405] use to search through emails so um if [407] you notice if I just type Haro in my [408] mailbox I got tons of these right har [411] har har har so odds are um the email [414] that or the subject line that you're [416] curious about is just going to or the [418] subject line that we're going to use to [419] filter it's just going to be h o and [421] odds are I'll probably do pretty well so [424] I'm just going to filter by subject [425] lanaro um I'll have no phrase and then I [428] will not Mark messages as red maximum [430] number results one click okay and that [432] it'll ask you where to start um now we [434] want to test this on historical emails [436] so I've received a bunch of hor emails [437] obviously so I'm going to select the [439] first email down here and it's actually [441] going to go through my whole email inbox [443] do the filter that I showed you and then [445] allow us to select where we want to [446] begin so why don't we do why don't we do [450] this one here um this Friday morning one [454] looks like that'll give us three emails [455] to test then I'm going to run this [457] module so now we're selecting that and [461] you can see we have a bunch of fields [462] here we have the date the email ID the [464] size just a bunch of that we don't [465] really give a crap about sender [467] recipient right text content uh and text [470] content is what we're going to use so [472] text content looks just like the body of [474] our email but it starts off with look [476] what we found when we analyzed over [477] 100,000 press releases so this looks to [479] be just like some advertising that [480] they're doing and then the query start [481] and you see we have the formatting that [483] we had before with index then we have [485] what looks like a hashtag and then the [487] name of the industry and then a bunch of [489] titles right and so these titles are [491] probably sufficient for us for our AI [493] system to like automatically figure out [494] whether or not it's relevant to us so [497] that's what that's what we're going to [498] use uh and then we're going to do some [499] fancy text parsing one thing that you [501] realize in make.com is you get better [503] and better is that like a ton of the [505] really high value um operations that you [507] can do or the workflows that you can [508] build really just depend on your ability [510] to use text parsing um and obviously we [513] can use AI to do a lot of that text [514] parsing for us especially in like less [517] structured data sets you know when we're [520] scraping a website or whatever where the [521] data isn't going to be the same every [522] time but you still need to have an [524] understanding of how to do text parsing [526] um and so you know the modules and the [528] functions that are available to us like [530] the split and the replace and the get I [532] find myself using them basically in [533] every workflow now so getting familiar [535] with them uh if you want to build higher [537] systems is pretty essential okay okay [539] anyway uh what I'm going to do here is [540] I'm actually going to take my own advice [543] and I'm going to set a testing variable [546] so I'm going to this is the only time I [547] will ever use the set variable module on [550] its own and I'll just call it test text [553] the text that I'm a sticking here is I'm [554] actually just going to go through this [556] whole email and then just copy and paste [559] all of this in just because I just want [561] a way that we can test our flow without [564] me having to like explicitly grab an [566] email every time so click okay [570] all right so we have the text and then [572] now that I verified that this email [573] module works now I'm just going to start [575] here and then I'm going to rename this [576] to testing text just for my own sanity [580] uh and now every time we run this [581] scenario we're just going to get this as [583] an output which is the exact same thing [584] as we got the first time now we're just [586] not querying our own email over and over [588] and over and over again so assuming that [591] that's representative of the data set [592] what do we do next well the way that I [594] see this working and I know because I've [596] developed the system so I'm kind of [597] cheating in that way but the way way [599] that I see this working best is first to [601] save our on tokens we pass in all of the [604] titles and then we have ai tell us which [606] titles are relevant to us and then in [608] order again to save on tokens we pass in [610] all the descriptions or we pass in the [612] relevant descriptions and then we only [614] have ai generate responses to the [616] descriptions that are of course relevant [618] to us and so the way that I would do [620] this in practice is I would set multiple [622] variables here and again I always use [624] set multiple variables over set [626] variables because there's just no reason [628] why you would ever just want to have one [629] for maintainability uh you always just [631] want to be able to jump in and add more [633] and then why don't I set a variable [634] called [637] um uh let's just call this like titles I [640] guess right because we basically want to [642] extract everything up until here so [645] we'll just call [646] this uh titles and then the variable [649] value okay so let me just go through [651] this and see this yeah this text is [654] probably how we're going to separate the [655] email [657] honestly um let's let's just do that we [659] could obviously separate it from here [661] all the way down to here but it doesn't [665] really matter I'm going to have like an [666] extra 20 tokens or 30 tokens or [668] something if I include the title so I'm [670] just going to grab the very uh like the [672] first half of this using split and then [675] I'm going to feed in all of the testing [676] text here and then I'm going to copy [679] this [681] long string of asterisks and you know [685] what let's just make [686] sure that this man how many asterisks is [688] this oh I don't want to count this but [690] let's just make sure this is the same in [691] every Emil that's [693] five that's [695] 10 that's [697] 15 that's 20 that's 25 so it looks like [702] they're 28 [704] asterisks I don't know man um I wonder [707] if I can just test this and make sure [709] it's the same over [710] here let's paste this in okay yeah so it [713] looks like it's finding the exact same [715] number of asterisks good sanity check [716] that means it'll probably work on all of [718] the emails that we want want to test it [719] on um but I'm just going to split all [720] the titles this way um and then let me [723] just do this as like demonstration and [724] then I'll show you how to get the first [725] item so what happens if we split the um [728] if we split the two things then we have [731] an array now with the first half being [734] all of the text up until that line [736] delimiter or whatever and then the [738] second half basically starts uh [740] immediately after that so the first half [743] is everything from here on up and then [745] the second half is everything from here [746] on down basically so that's good that's [749] our intended Behavior but what we want [750] is we only want to grabb the first one [751] and so you can do that and make just by [753] using get which I've probably shown you [754] guys 10 times by now but I'm just going [757] to get the first and then I'm going to [758] run once again sanity check make sure [760] this works titles we now instead of [762] having an array we just have a long [763] string and looks like it goes down to 33 [767] and then it stops I don't know if that's [768] just like make um like having uh wanting [774] to like cut it early or whatever as [776] opposed to keeping going so let me just [777] make sure that this is [780] yeah okay so it looks like the titles [782] that we fed in were pretty light so [784] there were only 33 in the testing text [786] so that makes sense so it goes all the [787] way down to 33 uh looks like that other [789] email that I got where we got 90 queries [790] or whatever that was sort of weird but [793] uh yeah that looks good to me okay now [794] we're going to set descriptions we're [795] going to do the same thing so we're just [797] going to say descriptions and then I [799] know for a fact this is going to work [800] because we just worked uh set it up on [802] the first uh so now I'm going to [804] separate this and then just press run [806] once and then get it all the way down [809] starting at the top working my way down [811] you can obviously just like um use one [813] variable and then have an array to index [816] it into two but I don't really care [817] about [818] that um and you know I'd rather have [820] like variable names like title [822] description it would just be way [824] easier okay great so yeah looks like we [827] got what we want we can obviously like [828] separate it so that it goes all the way [829] up to here I don't really think it's [831] super relevant or important um when we [833] separate the text it'll probably be okay [834] but I am noticing that every description [836] is separated with this line so that's [839] like a good uh this is a good instruct [842] instructional video sorry on text [844] parsing just because it looks like help [847] a reporter out is [849] extremely structured in the way that [851] they do things all right so now it's [853] time to introduce a into the process we [855] have a big list of titles what are we [856] going to do next I'm going to go down [857] here to open [859] AI then I'm going to use the completions [862] endpoint and I have my own setup so I [864] don't have to go through the connection [865] rigal on my own I'm just going to use [867] gp4 for now [869] this is probably in or suboptimal from a [872] token perspective because gp4 is going [874] to charge you like three cents per a [875] thousand tokens something like that uh [878] but you can imagine how the positive [880] impact of getting one of these probably [882] vastly outweighs the money that you'd [884] spend on the tokens now I have my [886] prompts set up elsewhere so I'm just [888] going to copy these in and the reason I [890] did that in this video is because uh [893] these prompts took a little bit of trial [895] and error and I just want to make sure [896] that the video isn't three hours of me [898] just coming up with [900] promps but I'll read through all of [902] these after I'm done copying and pasting [903] them in just so that we we all know [907] where these prompts are coming from and [908] then some of my my thought processes in [912] developing [915] them so let's paste in this one here for [919] user that looks pretty good and then [922] let's do another one for assistant which [924] will be an example of the correct query [928] that I want to [929] Output all right last thing I'm going to [932] do is because I'm sort of training it [934] here now I'll just have the user prompt [936] I'll feed in the [937] titles for advanced settings uh Max [940] tokens of 300 I think that should be [941] okay but let me just test and see how [943] long this is I'd always just use like an [946] online word counting Tool uh 58 words [949] yeah 300 characters is probably going to [951] be more than enough maybe we can even [952] make it shorter let's just do 150 [955] temperature I'm going to choose a low [956] temperature for this because I want it [957] to be very um um I want it to be as less [962] creative as possible all right all right [965] so what exactly do these prompts do so [967] the first is a system prompt that says [968] you're a helpful intelligent [969] Administrative Assistant this is just [970] sort of a catchall and it makes it [972] identify as something that is smart uh [974] next up is user prompt and this is where [976] you would put in information about you [978] because of course we're getting AI to [979] filter these titles based off of [981] something so they needs to be that [983] something that we're filtering by so in [985] this case I'm saying I'm a business [986] owner specializing in AI marting [988] software development and design below is [991] an email with a list of titles all [993] prepended by a number and the right [996] bracket with a right bracket symbol [998] filter them based on relevance and if [1000] the title involves the sorts of things I [1001] work with on a daily basis if it's in my [1004] area of expertise add it to a Json [1005] object that returns only the list of [1007] associated titles don't include the [1009] company names or the number then I say [1012] use the following Json format the [1014] following Json format looks like this [1016] where I have a right curly bracket with [1019] an additional space it looks like and [1021] then I have a variable called relevant [1023] queries and then I have a colon and this [1026] is just like an adjacent format um with [1029] a nested array so then I have an array [1031] with element A B C D where a BCD are [1034] queries IR relevance now when you [1036] provide it with con with instructions [1038] this complicated it's usually good to [1040] give it at least one example the number [1043] of examples that you give have to be [1044] weighed against the amount of money that [1045] you're spending per request so I re rece [1048] three emails like this a day I know [1050] mathematically that means I'm probably [1052] going to be spending 10 cents or [1054] something like that per run maybe 30 [1055] cents a day in total if you add that up [1057] over the course of 20 business days [1059] that's like $6 for me that makes sense [1062] I'm more than happy to spend $6 to have [1064] a system that's constantly responding uh [1066] and generating me backlinks but for you [1068] that might be a little bit different and [1070] so you sort of have to you know weigh [1072] this by what the perceived cost is and [1074] then what the perceived benefit is to [1076] you the next prompt is a user prompt and [1079] this is where I'm just going to give it [1080] a user assistant pair example so I start [1083] off with just a giant list of [1085] titles and I went very extensively here [1088] because I wanted it to do a good job so [1090] I added 130 titles I got this just from [1092] a couple of other um horo campaign so I [1095] copied that in and then I tried to have [1098] it model the response format that I [1100] wanted and so that's what we did here [1102] relevant queries here are a list of the [1106] titles which all look good [1110] and then after that we have another user [1112] prompt with the actual titles from the [1114] actual data and so this is where we're [1117] going to get the list of titles that are [1119] actually relevant to [1120] us now we have everything that we need [1123] to actually test this thing so why don't [1125] I try and click run [1128] once that looks good to me it's [1131] running it's gp4 which historically [1133] takes a little while longer than GPT 3.5 [1136] or gp4 Turbo [1140] okay and if I go down to choices one [1141] message you see that we have a list of [1145] titles it looks like there's some weird [1147] formatting going on over here not really [1149] sure where that's coming from but that [1150] might just be the person that wrote that [1152] title any who buy build or fix what's [1154] best for first-time home buyers nearly [1156] half of Americans have considered [1157] starting a business what's stopping them [1158] the importance of financial planning for [1160] a secure future return to office and [1161] corporate sustainability goals careers [1163] now handle anxiety on new job AI to job [1165] hunt cell phone repair experts need the [1167] One charging s that's draining your [1169] battery I'm probably not the right fit [1171] for this one um but regardless you see [1174] how it's pulling in a bunch of things [1175] that are significantly more relevant [1179] than you know seeking somebody to help [1181] me figure out where the prostate gland [1183] is right like obviously I'm not going to [1185] be able to provide you guys information [1187] on [1187] that um okay so I'm going to have this [1190] be extract relevant [1194] titles I'm going to call this set title [1197] and description [1199] and let me just set this up how to reach [1201] out to Haro queries automatically and [1204] build a backlink Empire feeling kind of [1207] clickbaity today so now that we have a [1210] list of relevant titles what do we do [1212] next well what we have to do next is we [1215] have to [1216] turn that list of relevant titles [1218] basically that we have over here into um [1223] or we have to use that to split the text [1225] that we're interested in in the [1226] description side so that we can then [1228] feed that into um our Ai and the way [1231] that I did that here was I had that [1233] parse Json module of course but then I [1235] had an iterator and the way that the [1236] iterator was set up was I just dumped [1238] through all of the relevant queries and [1241] then I used that to um do a bunch of [1244] text formatting which you're going to [1245] get into where I split the descriptions [1246] and do all that fun stuff so I'm going [1250] to do exactly that here the first thing [1252] I'm going to do is I'm going to add [1254] ajacent module on the end the reason why [1256] I'm doing that is because I just want to [1257] parse the output of the AI module so I'm [1260] going to add this as my Json string I'm [1262] going to go message and then content and [1264] this is just going to make it accessible [1266] in [1267] make.com you'll see that I get a warning [1269] here because anytime a Transformer is [1270] the last module in an input uh it'll [1272] just say hey this shouldn't really be [1274] happening this isn't really doing [1275] anything of value to you and then what I [1278] want to do is I'm going to Let's [1281] actually just run this once you guys can [1282] see what the data structure looks [1287] like it's doing its thing I am calling [1289] the GPT 4 API every time that I run this [1291] test so it's costing me like a scent or [1293] two but you'll see that um after we we [1296] process this we actually end up with a [1298] relevant queries variable and then all [1299] of the titles are basically in just an [1301] array here which is nice so what we [1303] would do with this information is we [1305] would iterate over this now if you've [1306] never used an iterator before use an [1308] iterator when you basically have an [1309] array of stuff and then you want to run [1312] a new scenario a mini scenario for every [1314] single one of them so in my case if I [1317] didn't use an iterator here then I would [1318] have to work with this whole array but [1320] if I use an iterator I can actually do a [1321] bunch of stuff specifically for every [1324] title in this array and so you can think [1326] of it as if I use an iterator here um [1328] everything up until the iterator is [1330] going to run once and then the iterator [1332] is going to run nine more times it's [1334] going to go through every title and then [1336] do stuff with that title so I'll give [1339] you a quick example here I'm going to go [1340] to the tools down here and then go to [1342] iterators and click iterator and you'll [1344] see it's asking me for an array um the [1346] array that I'm going to use is this [1348] relevant uncore queries array and you'll [1350] know that it's an array in make.com when [1352] it has two square brackets one to the [1353] left and then one to the right the the [1356] reason why we click the array is because [1357] the array has just a giant list of the [1360] things we want to iterate over and then [1362] the format in make.com is you always do [1364] like the highest level array and then [1365] you stick that in like we wouldn't we [1367] wouldn't press this one or whatever the [1368] formatting here confused me for quite a [1370] while but you always just want to use [1372] the highest level U variable in the [1374] array so anything with that left and [1376] right square bracket should be good now [1378] the iterator I believe is a Transformer [1380] as well that's why we got that [1382] little excuse me that's why we got that [1384] little one to the top [1387] right and you'll see now what's [1389] happening is we fed it as an input a an [1392] array with a list of [1395] values and then what happened afterwards [1397] was we turn that into a list of bundles [1400] instead and so a bundle is just one [1402] whole scenario execution basically and [1405] so everything after this point is going [1407] to run per bundle so they'll be you know [1409] if I added like a Google Sheets add a [1411] row module here then it would run once [1413] for this another time for that a third [1415] time for that a fourth time for that it [1417] would just keep on going until all the [1418] bundles were exhausted [1420] essentially so what do we want to do now [1422] that we're iterating over every title [1423] well now for every title I want to [1425] extract the specific summary that's [1427] relevant to us and the way that I'm [1429] going to do that is I'm going to use a [1430] another set variables [1433] module and I'm just going to call this [1435] um specific request let's do that and [1439] here's where we're going to get into [1440] like some text parsing magic so I have [1442] the title over here in uh the value [1445] parameter where it says nearly half of [1447] Americans have considered whatever and [1449] then I'm going to go back to this [1450] testing text just see where that is [1452] nearly half of America okay so this is [1453] in the title section so we don't want [1455] the title we want the description t [1457] section okay great so you see here that [1459] the way that we need to do this is we [1460] basically need to parse [1463] this and then we want to grab all the [1465] text from here down to here [1469] and so then we'll have this [1471] text available to feed into Ai and then [1474] create like a customized response to [1477] you'll see it has a bunch of information [1478] we probably don't need like the deadline [1480] probably going to respond to this within [1481] 7 Seconds of it being posted so that's [1483] probably not relevant the Yahoo finance [1485] media Outlet part might be relevant this [1487] email is relevant because this is where [1488] we're actually going to like write the [1489] email back to but basically we need to [1491] extract this and then we need to extract [1494] the [1496] specific part [1498] or the specific [1500] um uh text from from here to here and so [1504] the way that we're going to do this if [1505] you think about it logically kind of [1507] like in make and you know eventually [1510] that's going to be this so we're going [1511] to work up to this right now what we [1513] have to do is first we have to feed in [1516] the description that we isolated earlier [1518] the whole long description with like 93 [1521] or whatever um sections of text like [1524] this and then we have to separate it [1526] using that title that we've extracted [1529] previously and once we've uh split it [1532] using this title we'll then have all of [1535] the summaries before and then all of the [1537] summaries after and so what we need to [1539] do then is we need to get all of the [1540] summaries after right because the after [1543] part is going to include all of this [1544] it's basically going to be from here all [1546] the way down to the bottom email and [1548] then we have to take that and we have to [1549] split it again based off of this and [1552] then what we want to do is we want to [1553] get the first result because the first [1555] result will be from here to here [1558] so if that doesn't make sense I'm going [1559] to run this a bunch of times just so you [1561] can see how we iteratively get to the [1563] variable that we want to get to um but [1566] that's how we're going to extract this [1567] text specifically and I sort of hope [1569] that I have at least one or two errors [1571] here I mean I'm not going to do anything [1573] purposefully but if I do then that'll [1575] hopefully allow me to walk you guys [1576] through this in a little bit more detail [1578] especially for those of you that aren't [1579] really familiar with how this works okay [1581] anyway so uh I just got a little bit [1583] ahead of myself what am I going to do [1584] here so first thing I'm going to do is [1585] I'm going to split and then the varable [1587] that I want is [1589] descriptions and the what I'm going to [1590] split it by is the value that came out [1593] okay so that's the very first thing that [1595] we're going to [1596] do oh and then uh let me just actually [1601] no let me do this just so you guys can [1602] see everything at every step and it's [1605] going to run you know presumably seven [1607] eight or nine times however many titles [1609] that it extracts and then passes through [1611] the iterator so we're going to get to [1613] see that [1615] happen so there you go ran one time in [1618] the iterator and then seven times down [1620] here so we actually split the text in [1621] seven different places and you'll see [1624] that just like we had before with the [1625] titles and descriptions we now split it [1626] into two sections we split it into the [1628] section before that title which goes all [1631] the way down up into the summary we [1634] split it after and it includes all of [1636] the information that we want the name [1638] the category the BL blah all the way [1640] down so that's great that's exactly what [1642] we want now what we want to do is we [1643] want to grab the second value here and [1645] then we want to split that second value [1647] by this you can of course do this in [1650] separate modules if you wanted to um but [1652] in practice you know you get good enough [1654] at working with this that you can [1655] usually just stick it all into one so [1658] now I'm going to get the second response [1660] or the second result of that so let me [1664] run that one more time and just waste [1665] all of my value BL [1668] Ops we just need to make sure we don't [1670] overwhelm the gp4 API now in my case I [1674] have like a million requests that I can [1676] make per minute cuz I'm part of their [1677] highest plan but in your case you know [1679] make sure that you're just not sending [1681] you're not re rerunning this every 5 [1682] Seconds let's [1684] say okay now what do we get after well [1686] because we got the second result uh we [1688] have only the section that we're [1690] interested in and then um it goes all [1693] the way down from there to the bottom of [1694] that email so now what we're going to [1696] want to do is we're going to separate it [1697] all we're going to split it again and [1699] we're going to do it by this string and [1702] then we're just going to get the first [1704] result so I'm going to go back here and [1706] I'm going to split that again and what [1709] I'm going to do is split it by that then [1711] I'm going to get and then I'm going to [1712] get the first result now we're going to [1715] run this one final [1716] time [1718] and this should work and get us the list [1722] of [1723] descriptions that we can then use to [1725] feed into another AI module to have us [1727] automatically [1729] write so let's check the output and it [1732] worked like a charm we got the name of [1734] the person that requested it the [1736] category the email blah blah blah blah [1738] blah blah [1739] blah now the last thing that I want to [1741] do is and this may seem unintuitive but [1743] I want to feedback the title and the [1745] reason why is because in my head I have [1747] a feeling that if I that if uh the text [1749] doesn't include the title it'll just be [1751] a slightly lower quality so what I'm [1753] actually going to do back here is I'm [1754] just going to write value and then I'm [1756] going to do space and now it's just [1758] going to take everything that I just did [1759] all the text processing and then it's [1761] just going to add or concatenate uh the [1764] title itself to the beginning of that [1766] which should be every that I need and [1768] you know what I'm also going to go in [1769] and then I'm going to add a new line as [1772] well so I'm going to add value then new [1774] line and then I'm going to add all the [1775] other [1777] information okay let me just save this [1780] as a sanity checks my computer's been [1781] acting up recently and let's see how it [1788] works got some French hazelnut coffee [1791] that stuff is the [1792] bomb okay operation s specific request [1796] elevate your e Commerce unleashing the [1798] power of magenta development services [1799] and then category so this is the title [1802] uh of the request that we have now [1804] concatenated and I think this is just [1806] going to be a little bit better now [1808] you'll see a lot of these queries ask [1809] for stuff like a headshot a bio and a [1811] high Authority website or social media [1813] link for attribution purposes so we're [1815] going to have to find a way to put that [1816] into our uh into our AI module but now [1819] we have everything that we need to do to [1820] actually like move forward with this so [1822] um now I'm going to stick in I'm just [1823] going to copy this then stick it back in [1827] going to rename this and I'll say write [1829] customized [1831] email and then I have to edit all of [1833] these prompts of course because these [1835] are the prompts from the extract [1836] relevant title section but I have them [1838] right down here in Google Docs so that's [1840] good I think this is the same system [1842] prompts I'm not going to worry about [1842] that I am going to do the user prompt [1846] though this is where the money is at um [1849] when you paste in it has the nasty habit [1852] of just pasting all of your text in with [1853] no new lines so if you want to add the [1855] new lines which I find very important [1856] for forign formatting and tone and [1858] professionalism you have to hold down uh [1860] shift when you do your command V or [1863] control V and that'll paste without [1864] formatting you also right click and [1865] there should be like a paste without [1867] formatting or maybe paste and match [1869] style in Mac I don't know but the user [1871] prompt that I'm going to use now is hey [1872] I own one second copy it's a successful [1874] AI marketing company that does over 90k [1876] a month my name is Nick surf here is [1878] some of my information don't use it [1880] unless asked I then have a bunch of [1882] links to my socials um if I were you I [1884] would go down every single one of these [1885] and just follow me on every platform [1887] immediately uh if you don't the the [1889] whole world is a stake um you'll see how [1891] one of the things that I provided is a [1892] headshot because I knew that a bunch of [1894] these were requesting headshots there's [1896] my own business website my Twitter my [1897] Instagram LinkedIn if somebody asks for [1899] these directly I just want the AI to add [1900] them in then below is a request by a [1903] journalist for outreach write a succinct [1904] Spartan email respond to each query if [1906] needed be concise and then use the [1907] following format it's important that you [1910] give it a following you give it a format [1912] and then you just like train it to use [1914] that exact format because if you don't [1917] then it'll just sort of wing it every [1918] time and sometimes the quality will be [1920] good but most times the quality will be [1921]  so it's better for you to walk its [1923] hand a little bit and this is worth the [1924] additional token cost I'm actually [1926] giving it an email template saying hey I [1928] own this company is successful marketing [1930] company that is over $90,000 a month [1932] your customized responses go here we'll [1934] be in the office for the rest of the day [1936] if you need anything just shout and I'll [1937] take care of it the idea being that I'm [1939] implying that I'm around and I can help [1941] uh very very [1942] quickly now the next thing we need to do [1944] is we need to like train this in context [1946] and so I'm just going to paste in a huge [1948] query [1949] here copy this from here and then paste [1952] this in and this is basically like a [1955] like a like an unstructured um request [1958] and you'll see it doesn't have new lines [1959] or anything like that but that's because [1960] new lines take some tokens and I don't [1962] really I don't want to worry too much [1964] about um adding a bunch of those uh just [1967] in the training example because I just [1968] wanted to focus on the content not the [1969] way that it's formatted sometimes the [1971] formatting will be a little bit [1972] different anyway I paste this in and [1975] then I give it an example of the email [1977] that I wanted to write and this is [1979] really the most important one this is [1981] the longest one as well because I'm just [1983] showing it hey here's the [1985] relationship between the input that I'll [1988] give you and the output and what does [1990] the output say it says hi and then it [1992] grabs their first name which is [1994] somewhere in here like Puja I believe I [1997] own the company sucessfully marke with [1999] 9k a month and then here are a bunch of [2001] answers to their specific questions that [2003] they're asking right specifically we are [2005] seeking your input on the following [2006] questions 1 2 3 blah blah blah so I'm [2008] actually going in that I'm answering [2010] these questions which uh is just going [2012] to train it to basically you know if [2015] there are any questions it's going to [2016] know that it needs to respond to them in [2017] a customized manner then I add a bunch [2019] of information most of this information [2021] was explicitly requested so I stuck that [2023] in and then I add in my final uh [2026] response so after that what we do is we [2029] feed in the specific requests from [2032] here and then this is longer so my Max [2035] tokens will not be 150 why don't we go [2036] to word counter and see 256 words one [2039] token is equal to about 0 0.7 words so 1 [2043] over [2045] 0.7 is 1.4 so 1.42 * 250 is 355 this is [2052] probably in the longer end of emails [2053] that I'm going to generate but just to [2055] be safe I'm going to go down here and [2056] I'm let's just do like [2058] 700 and then I'm going to add slightly [2060] more to the temperature because I want [2061] it to be a little bit more [2064] creative okay great so now we have the [2067] right customized email and then just to [2069] skip ahead a little bit I'm also going [2073] to um yeah I mean I don't want to run [2076] this a million in one times okay let's [2078] work on the email module as well and [2081] then yeah okay great so now that I have [2084] this I also obviously need to get the [2085] email address that I'm sending it to um [2087] if you pay close attention you'll see [2090] that the email address is actually [2091] nested right over here in um a phrase [2094] that's email colon space something [2097] something at help reporter.net and so I [2099] can actually like extract that really [2101] easily um by just uh using creating a [2105] reg x one of my viewers made fun of me [2108] the other day for mispronouncing uh red [2112] reg gex it's really tough to do that off [2114] the top of my head gez uh looking for [2117] that specific query so I'm going to go [2118] back here and then I'll go to Reg [2123] x101 and then I'm just going to paste in [2126] all of this text here and just try and [2127] have it extract the email address using [2129] the [2133] regex okay so I'm looking for this email [2136] here query blah blah blah blah so [2139] because I know how to use [2141] regx I should be able to extract this [2143] pretty easily uh email space looks like [2147] there's going to [2149] be [2152] uh anything here at help a reporter.net [2159] and so this extracts this email I think [2163] that's going to work but just to be safe [2165] why don't I go and put in all of the [2167] testing text and see if it extracts all [2169] of the emails that I'm I'm looking to [2173] extract okay you see that it's extracted [2175] the email address here fiq fiq whatever [2179] this is their own internal system that [2180] they use to like route emails and stuff [2182] so that actually looks good what a fast [2185] regex uh we're going to parse this text [2188] and I'm just going to call this extract [2189] email and then once I get the output of [2192] that [2195] email which I think will work but who [2199] knows I'm then going to create a [2204] draft just selecting the wrong account [2209] here and then I'll write it in drafts [2212] the two email will be the email that I [2215] just extracted [2217] and I don't know if you actually need to [2219] put a subject line let me see what I did [2227] before looks like I have a couple of [2229] email modules here um I also attached [2231] this to strip myself okay so it looks [2234] like I just said rearo and then I added [2237] in some social proof saying that I'm [2238] loaded which I find works extremely well [2242] uh I'm just going to paste this in as [2243] plain text because that's how it's [2244] coming out of the model and we should [2248] also [2249] be actually no we don't need to do a [2251] Json U module here because I'm just the [2253] output is just plain text so I'll go to [2255] choices and then I'll go to messages and [2257] I'll stick the content in there and now [2260] this should produce uh a bunch of [2262] drafts so let's see how this [2265] works in the completed system I noticed [2268] that some of the emails as they were [2270] coming in were Mis formatted because [2273] Haro doesn't always stick to the same [2275] formatting whatever term internal system [2277] they're using to manage these sorts of [2278] things is good for the most part but [2280] there are some issues and so I put in a [2282] few blocks and those blocks were you [2284] know if the request doesn't exist [2285] basically which happened I think one in [2287] every 15 or 20 times don't proceed with [2290] the flow for [2291] instance um if another thing doesn't [2293] exist then don't do that right okay [2296] let's see if we could extract the email [2298] no it doesn't look like we could extract [2299] the email for some [2300] reason so that's unfortunate let me go [2303] down to choices and just see and make [2305] sure that the actual message was good hi [2307] Nicole I own this company here are my [2309] thoughts on the reasons people hold back [2310] from starting a [2312] business this looks pretty good so I [2314] think the actual like text generation [2315] parts are fine the reason why this isn't [2317] proceeding is because I added a block to [2319] the module that said if you don't find [2321] anything don't keep going and the reason [2323] why I did that for this specific case if [2324] you remember in the previous regx videos [2326] I didn't is because I uh I wanted it to [2330] proed even if I couldn't find the email [2332] in this case it's not proceeding uh [2334] because if it continues to go then the [2336] email module error out and I don't [2338] really want to deal with that so let me [2341] see why it was unable to find the [2343] specific email and [2345] question this to me looks like it should [2347] be [2350] good yeah so it should be able to find [2352] query at helper reporter.net [2355] so maybe there's something that I did [2358] here or maybe I didn't uh maybe it [2361] wasn't Global or something like that oh [2363] right my dumbass just didn't put the [2364] text in [2367] okay well that's pretty stupid I am [2369] going to globally match [2370] this and then I'm just going to return [2372] the first [2373] result uh and then for text I'm going to [2375] stick the email address in and [2380] then if the module finds no matches [2382] don't [2383] continue and then for safety to solve [2387] the problem that I was mentioning [2388] earlier I'm also going to add a filter [2390] in that says request [2393] found and I'm going to say this exists [2397] so the only way that this can proceed [2399] and actually call my precious tokens is [2401] if a request exists if it doesn't exist [2403] then I just don't want to run [2405] this because odds are um you know it's [2408] just sort of [2409] pointless okay let's run this whole [2411] puppy from start to finish and I think [2414] that this should work we got our robot [2416] Minions on full swing extracting our [2419] relevant [2420] titles and then we're going to parse the [2422] Json from that iterate over it and we [2425] fed in what looks like nine responses [2428] and so this should function or should [2430] run nine times after the iterator so it [2432] ran the first time it found the request [2434] and now it's generating our [2437] email it's then going to hopefully [2440] extract looks good then it's going to go [2443] in and then it's going to write that [2445] draft so two we stuck the right email in [2447] there the content is here and the best [2450] part of all is if I go back to my own [2452] personal email and then I check the [2455] draft I have it right over here Hi Megan [2458] I own this company I'm not a certified [2461] licensed real estate bank or lending or [2462] financial expert I can tell you from my [2463] experience in business owner that BL [2465] blah and then I also add in a bunch of [2467] my experience so yeah that system looks [2470] like it's trugging along nicely uh I'm [2473] surprised I didn't run into more issues [2475] while building that to be completely [2476] honest especially these higher level [2478] like text parsing flows where you need [2480] to put like a split and then a get and [2481] then a split and then a get but I think [2483] because we did everything iteratively [2485] like I actually when I'm building these [2487] out alone rather than just trying to do [2489] it all at once um I was able to sort of [2491] error correct along the way the last [2493] thing that we would need to do in order [2494] to make this module uh to turn this [2497] module from the scenario sorry from [2499] Theory and turn it into like a reliable [2501] practical business generate uh Revenue [2503] generating machine is we would have to [2505] sign up to harl and then we'd have to [2507] start receiving emails from harl and [2509] then we'd have to connect this email [2511] module to the rest of the flow and then [2513] let me just stop this because I think [2514] it's clear that this works [2517] and then instead of testing text what we [2519] do is we just go down and then feed in [2521] the actual text content here and then [2524] you can rename this from testing text to [2528] set email plain text or [2532] something so I'm going to save this I'm [2534] going to export this as a blueprint for [2536] all of [2537] y'all that looks pretty good and yeah [2540] that's how you build a helper reporter [2542] out automatic Outreach system from start [2544] to finish in make.com don't think video [2546] took more than maybe 45 minutes again [2548] I've probably made five or six maybe [2550] $7,000 selling this system now and it's [2553] just one that's so simple for me to set [2554] up all I need to do now is just drag and [2556] drop the email address of the client [2558] into a couple of these folders I need to [2560] sign up for Haro obviously um but aside [2563] from that yeah that's how you do it so [2565] you can use this to automatically [2566] generate backlinks and build a whole [2568] empire if you want to you can also use [2570] this in a slightly different way from [2572] what I've showed you you could write a [2573] much longer prompt spend a lot more [2575] money C iing into your specific [2577] experience and use case maybe put some [2579] case studies in do all that sort of [2580] thing but I'll leave all that up to you [2582] thanks so much for watching if you guys [2584] have any questions comments or anything [2585] like that leave them down below [2587] otherwise like And subscribe and I'll [2589] see you guys in the next video

Video: https://www.youtube.com/watch?v=5w6Bf5pponE
Title: How to Scrape Any Website in Make.com (2025)
[0] hey guys welcome to another video in our [2] course on make.com titled make.com for [5] people who want to make real money and [7] this video I'm going to dive deep into [9] one of the most popularly requested [12] features of make just going off the [14] number of comments that I get about this [16] every day and that's how to scrape any [18] website you want with [20] make.com to pull information structure [23] that and then use that in basically any [25] other flow I've seen this used for like [27] email personalization I've seen this [29] used to like great competitor [31] websites you can get a bunch of info off [33] like e-commerce platforms and use that [35] to do your own product research there [37] are a million and one different use [38] cases for what I'm about to show you uh [41] and the systems that I'm I'm going to be [43] building just in the next 20 or 30 [44] minutes are systems that I actually go [46] out and I build for clients that pay me [48] between 2,000 usually between $2,000 to [50] $5,000 a pop sometimes more sometimes a [52] little less but I want you to know these [54] are basically production ready systems [56] um these are systems that you can [57] actually go at and start employing [58] literally today the second that you [60] finish watching the video you don't need [61] to know how to like script you don't [62] need to know crazy programming skills [64] anybody that has a reasonable level of [66] make.com skills certainly everything you [68] guys know up until this point in time [70] can do what I'm about to show you so if [72] that sounds like something you're [72] interested in then stay tuned and let's [74] get into [78] it now one of the reasons why I'm so [81] excited for this video is because this [83] is personally one of those like mindset [86] shifts with make where like when I [88] figured it out I just got it and [90] everything else in website design and [93] business and obviously Building Systems [95] and stuff like that just got a million [97] in one times easier as a result so what [99] I'm going to do here is I'm going to [101] start by just scraping a random website [102] just one of my own and then I'm going to [104] I'm going to look at ways that we could [105] structure that data we're going to look [107] at like what we get when we when we do [108] the scrape uh various tools and [110] techniques to turn that data into [111] something usable and then I'm going to [113] go and I'm going to scrape like um a [115] more like listing based website and what [118] I'm going to do is I'll scrape redin [119] which is is basically just like a big [120] real estate compendium uh and we're [122] going to look at how to turn redin into [124] usable data as well as a couple of [127] sneaky ways that you can get around [128] things like rate limits using what are [130] called hidden apis so this is super in [132] demand tons of people are using this [133] right now and this is basically like how [134] you get through to websites like Redfin [137] or Uber or all of these like [139] historically UNSC scrapable websites and [141] then I'll see if I have the time and if [143] I do then I'll scrape some other Shopify [145] website or something this is just one [146] that I pulled up when I was searching um [148] so we can use this one or maybe another [149] one by the end of it you'll know [151] everything that you need to know about [152] how to scrape like you'll be better than [154] 99% of the rest of the world at scraping [156] sites and you don't even really need to [157] know like HTML or anything like that [159] because we're going to use AI uh to help [161] us along with the process so without [164] further Ado let's get into it uh this is [166] just a little flow that I built out [167] previously that I'm going to discard and [170] then I'm just going to build a new one [171] here and let's just call this um how to [176] scrape websites with [178] make.com and I'm going to call it this [180] as opposed to something more functional [182] like I usually do because uh I'm going [183] to be like building this and then [185] exporting the blueprint and then like [186] rebuilding it doing this a couple of [188] times depending on the website so in [190] order to scrape any website with [191] make.com what you have to do is you need [193] to use the request module we've used the [195] request module before in a previous [196] video um but what matters here is go [199] down to http so if you don't have this [201] just go HTTP I already have added it to [204] my little doc my little favorite list [206] here so I already have it down there and [208] then click make a request [210] and remember you know back when you were [211] using API calls and stuff like that uh [213] we used the exact same module so I'm [215] going to unlink this and then just drag [216] this over [217] here and then boom got my HTTP maker [220] request module and I'm just going to [222] call it something like uh get and then [226] let's just do like left click. a I'm [228] assuming that we're building out a [229] scraper whose sole purpose is just to [231] Ping this website and maybe look for [232] updates or something like that so we [235] have a request module called get left [236] click. the URL that we are going to call [239] is simple all we're going to do is we're [241] just going to paste in the website URL [242] of the place that we want to scrape the [244] method we're going to use is get uh [246] we're just going to perform a get [248] request to that website and then you [250] don't need to worry about any of this [252] stuff the body type you don't need to [253] worry about par response because we're [254] going to do that in a second and you [256] don't need to worry about any of these [257] um kind of advanced settings here okay [260] so simplest module ever let's just run [263] this and see what happens so we received [266] a 200 status code which is positive that [268] means that the request went through [270] sometimes on particularly like high [272] volume websites sometimes when you call [275] with make.com as the originator or as [277] the source of the request um it'll just [279] like cancel you out right because it [281] wants to be safe and it you know wants [283] you to be like a proper uh user like [285] browsing normally not like a an [287] automated bot system but you can see [289] what we ended up getting as a result of [291] this was this huge list of HTML and it's [294] pretty [295] long scrolling all the way down to the [297] bottom of this thing you see it's it's [298] pretty long the F size [300] 62420 I think like bytes um so you know [304] obviously that can be pretty [305] intimidating how do we actually get [306] useful data out of this well first of [308] all like what is that data that data is [310] just the HTML the CSS and the JavaScript [312] used to build this page and so when you [314] get a web resource um what you're doing [317] is you're getting all of that code now [319] when your browser gets a resource like [321] when you you know open up Chrome and [323] then type google.com it's getting the [324] exact same thing it just has what's [326] called like a rendering engine and so it [327] can turn that code into the pretty [329] elements that you see on the page here [331] so for instance if I go back and then I [332] look at this data this huge long string [336] and then let me just find something here [337] like automate your business and if I [339] were to command F that so find you'll [344] see that all of the text on the website [346] is actually present in the uh request [349] bundle that we received from left click. [351] when we did the get request uh it's just [353] like you know wrapped around with a [354] bunch of formatting and spans and divs [357] and all that stuff and that's not hyper [359] relevant unless you're like a web [360] developer so don't worry too much about [361] that but what I mean to say is basically [363] we've just called all of the contents of [365] the website um and the reason why when [367] your browser does it it looks different [369] is because the browser just has a [370] rendering engine whose sole job is to [372] turn that code into pretty images like [374] you see on the screen okay great so now [377] that we understand at least some of [378] those Basics how do we actually turn [380] this into something usable because [381] certainly I mean if you were to go and [383] then try and use this data for something [385] I mean you'd have to parse the hell out [386] of it you'd have to I mean like even if [388] we just fed this string into AI it would [390] probably do a reasonable job but it's so [391] long it would cost so much money just [393] not something that we really want to get [394] in the habit of doing um what you need [396] to do is just go down to the text parser [398] and there are a bunch of Transformers [399] here which can basically take an input [402] of HTML and then turn that into some [404] type of raw text and so I'm just going [406] to use the simplest example this is by [408] far the simplest example ever this [410] probably isn't what you actually want to [411] do in practice and uh we'll just build [414] in complexity more and more as we get [415] further along in the video but all we're [417] going to do here is we're going to take [418] all of the HTM Emil that we just [420] received so all of this stuff and then [423] we're just going to strip away anything [425] that's not text what do I mean by that [427] well if you look at the HTML here [429] there's [430] like span class inline H6 mb4 whatever [434] and then it says automate your business [436] so what we're going to do is we're only [437] going to get the automate your business [439] part we're not going to get all the [440] stuff that wraps around it and that's [441] what the HTML detex module does so I'm [443] going to click okay you'll see I'm going [445] to get a warning because now I'm using a [446] Transformer as the last step in a uh in [448] a flow and it doesn't really like that [450] so I'm going to click ignore warnings [451] and then run [452] anyway and then if we click on the [454] output and we click on text what you'll [456] see now is all of that HTML stuff or at [459] least the vast majority of it has now [461] been scraped away and what we're left [462] with is we're left with a much much [464] shorter string um instead of [467] 62420 characters or bytes or it's [469] probably like 5,000 so maybe like 1/10th [472] or 115th the length um and it's just [474] text and so what you could do at this [476] point already is you could take this [478] text and then you could just feed it [479] into Ai and you could have it let's say [480] tell you something about the website and [482] that's what I'm going to do here because [484] I'm going to pretend that let's say you [485] know uh we're not getting left click. AA [488] we're just getting like a [490] website and maybe we have a list of [492] websites and Google Sheets and what we [494] doing what we're doing is for every Row [496] in Google Sheets we're pinging a website [497] and then we're getting a bunch of [499] information about it then we're calling [501] Ai and we're just telling it to like [502] tell us something about the website [504] that's a pretty common use case that a [505] lot of people do uh usually in the runup [507] for like an email campaign or I don't [509] know some type of like value add in that [511] way so so pretending that we're doing [513] that if I go down to add and then I go [514] to open [516] AI specifically I'm going to be using [518] the completions endpoint like [520] we understand hopefully understand well [523] by now the model I'm going to use let's [526] just use GPT 4 messages for system let's [529] just say you're a helpful intelligent um [534] what exactly is this doing let's say web [537] scraping [538] assistant [539] for the user message I'm just going to [541] write let's keep this super simple [543] nothing fancy here tell me about this [547] website use Json [550] format let's say [557] about use the Json format below there [560] you go um let's have it output the an [563] about field which is just like a [565] description of what this website is um [567] let's do a [570] I don't know we should get some other [571] interesting information here um let's do [574] a one lion [578] Icebreaker and [581] then maybe we'll look for the year [584] updated as [586] well yeah because usually on websites [589] there is a little snippet down at the [590] very bottom that says something like [592] copyright 2023 copyright 2024 as you can [594] see I haven't actually updated my [595] website since 2023 so I should probably [597] get on that cuz now it's 2024 you may be [599] watching this in 2027 in which case head [602] over to my website and confirm and if I [603] haven't done that then yell at me um but [606] all we're doing is we're saying tell me [607] about this website use the Json format [609] below and then we're having it basically [611] give us an about so just a brief [613] description of what the website is a [614] oneline Icebreaker which I'm going to [615] use in sales so you can kind of think of [617] that as like the first line of an email [619] and then we'll have it give us the year [621] updated as well let me just make sure [624] that this the formatting of this is [626] correct I think I added an [628] extra double quote there yeah I did okay [630] great uh and then what we're going to do [633] is we're going to feed in one final user [635] prompt and that user prompt is just [636] going to be the text [639] output and let's just say using the [642] plain text scrape below and then I'll [645] say use the following Json format let's [647] just try [650] that and let's give this a quick run we [653] scrape the website with all the code and [656] we parse that to plain text like this [658] and and now we're calling the open a [660] endpoint with that long string and it's [662] taking a second because we are feeding [663] it in a fair amount of data so let's go [665] down to choices one message and then [667] content Let's see we got an about that [670] says the website is for a company called [671] left click that provides automations and [672] growth systems for B2B businesses left [673] click services operating and [674] subscription model and offerings include [676] leg gen blah blah BL blah a Founder [678] named Nick that's me seems heavily [679] involved both in operations and client [681] interactions the website also features [682] positive client testimonials yet add one [685] line Icebreaker it said left click is [687] making B2B business growth hands off [688] with a customized and Automated Business [690] operation services so I didn't really [692] understand what I wanted there what I [693] wanted was something that I put into an [694] email but you can imagine how we didn't [696] train this at all we didn't provide any [697] examples whatsoever it still did a [699] pretty good job at like creating a [700] oneline Icebreaker um so why don't I [704] just to try and make this one shot [706] oneline email intro let's do c [710] customized oneline email intro and intro [713] and let's say write a simple on line [717] email [720] introduction saying something [723] like I noticed your website was about [726] XYZ yeah that should [729] work and then what I'm also going to do [731] is I'll go down to add and then type [734] Json I'll grab um the parsejson module [737] stick that at the very end then I'm [739] going to feed in this choices [741] string because I want to force this to [743] structure my data in a way that I can [745] use so we're getting the website again [748] rece to 200 we're then parsing that into [751] the same string that we had before we're [754] then feeding that into open Ai [756] gp4 and then we are parsing the Json and [759] what we should get here is a list of [762] information with an about which is [764] pretty long and then that customized [765] oneline email intro I noticed your [767] business provides services to automate [769] businesses and or your website provides [771] services automate businesses and system [772] and scaling towards eight figures not [774] the best email intro in the whole wide [776] world but you can already see how this [778] would be useful we haven't even spent [779] five minutes building this flow or [781] building any sort of prompt whatsoever [783] um you know if we had the time to put a [785] bunch of examples in place if we had uh [787] you know a specific email sequence that [789] we wanted to fit this in you can imagine [791] how that for the cost of like less than [793] one tenth of a cent in tokens well maybe [795] maybe it's a couple cents in tokens we [797] did feed in quite a lot of data but you [798] can imagine how for the cost of that um [801] you can automatically customize the hell [803] out of some big email Outreach sequence [805] right so it starts to get pretty [806] valuable anyway that is the simp simp [809] simplest scraping setup that you could [812] ever imagine to do um for instance what [814] you could do with this information is [815] you could add a Google Sheets module at [817] the end maybe what you want to do is [820] instead of just send an email you want [822] to add a row to a pre-existing [824] spreadsheet and in that pre-existing [825] spreadsheet you want there to be a [826] website URL column you want there to be [828] an about column you want there to be a [829] on line email ice Breer column and then [831] you want to want there to be like a year [832] updated column and what you can do is [834] you can take that information maybe hand [835] it off to your sales team or hand it off [836] to somebody else in the company that's [837] responsible for business development [839] you can do all this in 5 minutes right [841] which is what makes it so [843] valuable okay any uh I'm going to save [847] this and then I'm going to say add [850] scrape websites with make.com we'll just [851] call this [852] one and the reason why I'm doing that is [854] because I want to be able to save this [855] blueprint for all of you later so I'm [857] going to export this blueprint that [859] looks pretty good and now I want to take [862] this in a more structured Direction now [865] that we know how to scrape you know one [867] simple web page page using uh an html [870] text parser I want to get in a little [873] deeper and look at how to build a [875] scraper that automatically scrapes [877] product listings on a website like redin [880] uh this is an extremely common use case [881] a lot of people want to constantly ping [884] a data resource or something and then [886] use that to fill up a spreadsheet that [887] maybe somebody on else on their team [889] manages or can use for lead gen or I [892] don't know I mean in in my specific case [893] the red fin scraper that I developed um [896] and I I actually like built a red fin [898] scraper for a client which is why I [899] wanted to show you guys this I wanted [900] this to be as relevant as humanely [901] possible to ways that you can make money [904] um they want to buy up properties that [908] are below a certain price per square [910] footage and redin allows you well they [913] don't technically allow you but if [915] you're sneaky you can ping redin get a [917] list of URLs and then ping every one of [919] those URLs separately to get a bunch of [922] data about that specific web page um the [924] way that this is going to work is it's [926] going to use a very sneaky principle of [929] webdev that not too many people [931] understand called hidden apis and so I'm [933] going to look into how to retrieve data [936] from a hidden API which is like a [938] regular API it's just you're not really [939] supposed to legally be able to use it uh [942] and then I'm going to show you how to [943] transform that into a format that you [944] can use to like populate a spreadsheet [946] or something like that so first things [948] first I'm going to clone this puppy [950] we're going to say how to scrape [952] websites with make.com [955] 2 and then I have the same flow that I [958] had [959] earlier what I'm going to do now is just [962] delete all of [964] this and then and delete this too and [968] then I'm just going to check out my data [969] source so what I want to do is I [971] basically want to go on redfin.com and [973] then let's pretend that we're just [974] scraping data from the San Francisco [975] source so uh redfin.com what basically [978] happens is when you type in San [980] Francisco and press this little uh [982] search icon you'll see how the URL at [983] the top is changed now it says [985] redfin.com City 17151 a/ sand- [990] Francisco understandably they probably [992] have some data structure in their [993] backend that when you call this URL the [996] server retrieves a request and then it [998] parses out okay we're looking for uh [1000] city [1001] 17151 in California with the title San [1004] Francisco it then probably just you know [1006] on a whim here um calls the database [1009] with that information and then receives [1010] some list in like as sending order of uh [1013] recency and then it pulls that and then [1015] displays that on the web page right I [1017] think this is pretty basic [1019] um it's you know you don't really need [1020] to be a developer to fully understand [1021] that part that's sort of just how the [1023] servers are working under the hood what [1025] you end up with is you end up with a [1026] couple of views here there's like a map [1027] view on the left then there's sort of [1029] like this listing view on the right and [1031] to me if I were looking for a red fin [1033] scraper or if I were looking for you [1035] know valuable information um this is [1037] what I'd be concerned about the stuff on [1038] the right you see that there is a bunch [1039] of summary information so you get like [1041] the price to the listing um wow 1.65 mil [1045] Jesus and I thought Vancouver homes for [1047] pricey uh six beds three baths 2,920 ft [1050] whatever you get some summary [1051] information up here and then presumably [1053] if you click into the listing we now get [1055] way more information on it you get like [1057] an about this home how many days has it [1059] been on red fin what type of home is it [1060] when was it built [1062] that's like 18 years old Jesus uh and [1065] then I'm going to stop being surprised [1067] at s Fran real estate prices and then if [1069] you go back to the URL you'll see that [1071] now we have like another URL pattern [1072] it's like redfin.com slca sanfrancisco [1075] the actual address slome some number so [1078] presumably what we're going to do is [1079] we're going to split this into two parts [1081] the first part is going to call just [1083] this General San Francisco page and then [1086] it's going to receive a list of links [1088] and then what we're going to do is we're [1089] going to call every one of those links [1091] individually so that we can get all of [1093] that good tasty data like what we have [1096] down here we're then going to parse that [1098] data we're going to get a couple of [1099] specific fields that we care about like [1101] I care about the price so I'm going to [1103] parse the price um maybe I care about [1106] the type right multif family or [1108] something uh maybe I care about the [1109] square footage so I mean I'll keep it [1111] really simple I only do like one or two [1112] Fields so this video isn't an hour uh [1114] and then I'm going to take that data and [1115] I'm going to dump that into a Google [1116] sheet that I'm going to set up for that [1117] purpose so that's what the flow is going [1120] to look like and you can imagine how [1121] you'll be able to to massage this flow [1123] into like literally any use case you [1124] could ever possibly want very high Roi [1127] stuff um I'm probably going to make a [1130] couple mistakes while doing this is the [1131] first time that I've done something like [1132] this in quite a while um but I want this [1134] to be as informative as possible and [1135] just to show you guys like what somebody [1137] that builds these sorts of things for [1138] living is sort of thinking about and [1140] looking for um as they do so [1144] so yeah let's get into it um this is a [1146] cup that one of my clients just gave me [1148] by the way it's a Yeti [1149] tumbler beautiful okay um so first [1153] things first let's call this resource [1156] and let's see what [1158] happens so it just paste it in that San [1160] Francisco link I'm going to call [1163] it you'll see that this request took a [1165] little while it was 200 error uh 200 uh [1167] status which is nice but it still took a [1169] little while which tells me it's [1170] probably pretty big and yeah that is [1173] really [1174] big I'm scrolling all the way down here [1176] good God how big is this resource [1180] 2,685 [1182] 718 and you see how it even had to like [1185] truncate that a little bit so the actual [1187] amount of data is a little bit longer if [1189] you remember back when I sced my own [1191] website I was at about like one I think [1193] I was at like 60,000 or something if I'm [1195] not misremembering which is like one [1197] what like four 40th or something of the [1199] length of this website so first thing [1201] that that tells me is it's probably [1203] going to be unreasonably long if we just [1205] try using the text par meod that I was [1207] using before so I'm going to do HTML to [1209] text we're just going to see what [1211] happens when I stick that text in [1213] there again the Transformer should not [1215] be the last module on the route that's [1216] okay don't need to worry about [1218] it let's see what comes out so you see [1221] we receive a bunch of login sign up you [1224] know here's the nav bar information [1226] bunch more info San Francisco popular [1228] searches blah blah blah uh and then it [1230] looks like after a certain time we [1231] actually start getting into the listing [1233] so all filters there are 1,13 homes you [1235] can sort by recommended photos table [1237] this is all just the text that's on this [1239] website over here [1241] presumably and then it looks like you [1243] have a link actually already so you have [1245] square bracket slca sanf [1248] Francisco unit 702 [1250] slome okay that is actually probably all [1253] that we need as is so that's great um [1256] what I'm going to do is I'm going to [1258] open up redfin.com and then I'm going to [1262] just try pasting this in I'm going to [1263] see what [1264] happens okay great so now we actually [1267] have the link which is what we wanted [1268] initially so um so yeah that's that's [1270] basically what we wanted we wanted a [1271] list of links and then for every link we [1273] wanted to do a bunch of fun stuff with [1274] it so that's pretty simple um the [1277] question is how do you parse this in [1279] presumably a giant SE of links I mean [1281] this is really long right we got one [1284] link up there um we got another another [1288] link right over [1290] here so what I'm looking for now is I'm [1293] looking for commonalities between these [1294] links it looks to me like they all have [1297] a square bracket [1299] slca San Francisco so I can probably [1302] build out a Rex if you guys are uh if [1304] you guys remember from previous [1308] videos so I can probably build out a Rex [1311] for this [1312] information using something like [1316] this and then maybe I'll have like a DOT [1318] star and then I'll have another square [1320] bracket here um to constitute the end of [1322] that the dot star will match any text in [1325] between sand- Francisco backslash all [1328] the way up to that square bracket and [1331] then I should be able to export all of [1333] those results and then let's see how [1334] many we got so it looks like we get [1336] about 40 every time we call which is [1338] good so 40 every time we call that seems [1341] like a pretty solid data resource I mean [1343] just uh from the top of my head the San [1346] Francisco Market's probably populated [1348] enough that like around 30 to 40 [1350] listings probably go up live every day [1351] at minimum maybe more um we didn't apply [1354] any filters to the search on redin you [1355] see up here at the top you know if [1357] you're using these listing websites [1358] there's usually a bunch of filters that [1359] you kind of muck around with or screw [1361] around with um we didn't do any of that [1363] so this is just like literally any home [1365] in San Francisco so 30 to 40 homes is [1367] probably okay I can imagine that we're [1368] probably going to want to call this [1369] resource maybe once every two or three [1372] hours to start uh and then see uh [1375] whether or not like we're doubling up on [1376] queries and that sort of thing so that's [1379] great um what I'm going to do then is [1381] I'm going [1382] to call this [1385] module parse HTML as text let's just do [1389] plain text I want it to be as simple as [1393] possible get [1395] all SF [1398] listings let's just call H yeah no let's [1400] leave it at that and then I'm going to [1402] use the text parser module and go down [1404] to match pattern here so it's going to [1405] be a regular expression [1409] and then what I usually do when I'm [1410] designing Rex's is I will [1413] take a big list usually at least two [1416] examples of what I'm looking for and [1418] then I'll go down to a website called [1419] Rex 101 which is just a way that uh you [1422] can build them out really quickly what [1424] you do is you paste the test string down [1425] here and this is the string that we are [1426] going to be searching and then I'm going [1428] to try and build [1430] out the Rex over here you could of [1433] course also just ask chat gbt to do this [1436] um I know enough about is that I can [1438] probably build one out in about the same [1440] amount of time or faster and I think [1442] it'll be like reasonably [1445] good okay so we actually don't uhbe we [1449] should escape this and I want to escape [1451] all of [1455] these and then let's see we have two [1457] matches here which is what we [1459] want and then I'm just going to do [1462] period and then this actually don't [1464] think I need to escape this do I oh yeah [1466] I do need to escape this okay [1469] and then what I'm going to want is I'm [1471] going to want this [1477] so um we have an incomplete group [1480] structure I don't really know what that [1481] means if I'm [1483] honest see if maybe I can do that an [1485] unescape delimiter must be escaped in [1487] most languages with a back slash [1493] right okay so that's going a little too [1495] far you see how that's selecting from [1497] from the beginning of this bracket and [1499] it's going all the way to the end of [1500] that bracket I believe that's because [1501] it's on a greedy match I think it's [1504] called so if I wanted to be UNG greedy I [1506] go back here okay great and then I have [1508] the URL and really what I'm looking for [1510] here is this group one and you see how [1514] I've got two results from this I've got [1518] one with the ca San Francisco whatever [1521] slome then I've got another one here [1522] with this other Home URL just so just [1524] for my own sanity I'm going to take this [1526] in this make sure that that works okay [1529] good I'm going to do the same thing down [1532] here paste this okay great so I got [1534] another home so that's great so these [1535] are two um you know I've basically [1538] called the general listings once and [1541] then I've gotten just a list of all of [1544] the listings I'm now going to parse it [1545] out so I have like an array of just the [1547] URLs and then I'm going to use an [1549] iterator to iterate through that list of [1550] URLs and then just call the same sort of [1553] idea I'm going to call every one of [1554] those URLs once extract a bunch of info [1557] and then use that to update a Google [1558] sheet so may seem complicated but stay [1561] with me on this one um it'll all make [1563] sense quite shortly so I have two here [1567] why don't I test this out on the rest of [1568] this data so I'm just going to go all [1571] the way down to the bottom copy that in [1574] and again just sanity check myself the [1576] reason why I always like to sanity check [1578] myself over and over and over and over [1580] again is because I've been in the habit [1581] of building these systems out um and [1585] then like realizing that my Rex doesn't [1586] work on all the data or whatever but I [1588] just paste it in presumably like another [1590] big chunk and it says it that it's found [1592] 32 uh which is great I'm just going to [1594] randomly select one again just make sure [1597] I'm not wasting my time here okay great [1598] yeah looks good I've tested three out of [1600] these randomly and uh that seems to be [1602] okay uh one thing I need to keep in mind [1604] is that I need to make sure that my [1605] quantifiers are lazy so that's that may [1608] be an issue that I run into at some [1609] point so now we're going to say [1612] extract [1614] URLs let's say extract individual [1619] URLs and then I'm going to go up here [1622] and then check out the pattern I don't [1624] know if there's an option for [1627] greedy yeah it doesn't look like there's [1629] an option for greedy so we'll have to [1631] play it by [1632] ear I'm going to take this long [1636] string paste this in here um case [1640] sensitive yes multi-line yes single line [1642] yeah no no continue the execution right [1645] the module finds no matches I'll say yes [1647] for now the text I'm going to feed in is [1648] going to be this [1652] text and then let's give this a [1655] try now um ideally what you probably [1659] should do actually why don't I do it [1661] ideally what we should do is while we're [1662] testing we're going to call this API or [1664] this list this link a bunch of times um [1667] hell I'm probably going to call it like [1668] 20 or 30 times over the course of the [1670] next like 15 or 20 minutes just cuz I [1671] want to make sure this works right but [1673] you can run into issues where when [1675] you're calling one resource over and [1676] over and over and over over and over [1678] again uh you can run into issues where [1679] they'll either like isolate your IP and [1681] then block you or something like that [1683] and So to avoid that what I'm going to [1684] do is I'm actually going to set a [1685] variable here and I'm going to call this [1689] HTML and then the value that I'm going [1691] to stick in here is I'm just going to [1693] hardcode it for now but eventually I'm [1695] going to use the actual [1699] HTML okay I'm having trouble with [1702] this just bought myself a new [1705] um Magic trackpad which is quite nice [1709] but it's also very slow uh okay so I [1712] can't just copy and paste it directly [1713] from the module output there so what I'm [1715] going to do is I'm actually going to [1715] download the output bundles and then I'm [1717] going to get all of the text or all of [1719] the the HTML [1721] here um and then what I [1724] want so I want [1727] this and I want to put that in [1732] make oh unfortunately when you copy [1735] something this massive cuz this is [1737] massive right it's 2 point whatever [1738] million bytes takes a while to copy so [1741] just be wary of that I'm then going to [1743] try pasting it all [1744] in scroll all the way up to the [1747] top uh and then I'm just going to remove [1750] this okay it doesn't actually look like [1752] it copied at all probably ran into some [1754] like character limit but that's okay we [1756] uh we copied over the vast majority of [1757] the website so I'm fine with that uh and [1760] basically what you do uh what this [1762] prevents you from having to do then is [1763] you never really have to call that [1765] Resource as long as you use this as the [1768] source that you are pulling your data [1769] from and then when we're ready for um to [1773] actually use this in like a real flow [1775] all we do is we replace this hardcoded [1777] test data with the actual output that [1779] we're looking for here so that's what [1781] I'm going to do just for my own sanity [1782] and just to prevent me from having to [1784] re-record this video later so now that [1786] we have all of that text what I'm going [1787] to do is parse the html's plain text and [1788] then try and extract the individual URLs [1790] uh and we're we're going to see how that [1792] goes so called it you see this is empty [1795] which is telling me that there's some [1796] issue with the Rex that's preventing it [1798] from actually effectively scraping this [1801] so [1803] um let's find out what the problem [1807] is I'm looking at these URLs here and it [1810] looks like there's [1811] actually a quote and I don't remember [1814] there being quotes before this may be an [1816] artifact of the fact that I'm dumping in [1818] text [1819] here [1822] um let me [1825] see I don't want to be [1828] crazy let's call it one more time and [1830] see if we uh if we got the [1833] results oh okay well yeah that actually [1835] did work um so what's happening is when [1837] you dump um the results from this get [1842] all SF listings module uh it escapes all [1845] of the backslashes with a quote and so [1849] when when when you actually turn that [1850] into like a string variable in make.com [1852] it'll do that so A very sneaky pesky [1854] error but because of that our Rex in [1857] work and we would have had to put [1858] another quote sign there I'm actually [1860] lazy so I'm not going to do that so [1862] forget everything that I said a minute [1864] ago but yeah you know ideally when [1865] you're doing it on your own end you [1867] would uh you would make sure that you're [1869] not quering the API or the the resource [1873] unnecessarily okay so it looks like we [1874] also got a little bit of additional [1876] information here that we didn't want and [1877] the reason why is because uh we couldn't [1879] put in the the greedy or the UNG greedy [1882] token so if you check it out what we get [1885] is we get the output is a [1887] giant array of or uh it's a bunch of [1891] bundles essentially and in every bundle [1893] is um like a Json or a JavaScript object [1897] notation with a value called I which I [1900] imagine is just the index and then a [1903] dollar sign one which is the name of the [1905] first match that we made using Reax now [1908] it looks like if you look at the link [1909] here we're not actually just getting the [1910] link we're also getting a bunch of [1911] additional text so the link that I'm [1914] interested in is CA whatever all the way [1917] way up to here U but it's actually [1919] dragging way more of it in there and the [1921] reason why is because uh it's using [1923] what's called greedy [1924] Rex uh which tries to match the longest [1928] end of that string uh and that's not [1930] what we want we want it just to grab one [1932] so okay so a quick and easy way that we [1935] could probably do this and one that I [1936] might consider a little dirtier than [1938] usual um is we can get that text and [1940] then we can just split it based off the [1942] presence of that uh right word uh square [1945] bracket and then we can just grab [1947] everything to the left of that and [1949] because I've examined you know five or [1952] six at this point as as you saw me [1953] scrolling through I'm pretty confident [1955] this is only going to get that URL and [1956] then we should be good so what that [1958] might look like in practice is okay [1961] we've gotten all the San Francisco [1962] listings we pars the hml's pl text we've [1964] extracted the individual URL some of the [1965] URLs are too long so what we're going to [1967] do now is let me actually just test this [1969] first uh let's set a [1971] variable let's call this test [1975] URL I'm going to what I'm going to do is [1977] I'm going to select the dollar sign one [1980] I'm going to split this based off of [1982] that right bracket and then I'm going to [1985] get we're just going to grab the first [1987] result what this is going to do is it's [1988] going to take all of the strings in that [1992] dollar sign one variable all 30 or 40 of [1994] them or however many that we're pulling [1995] because it'll iterate through this one [1997] for one and then it's going to split [1999] them based off the presence of that [2001] right square bracket and so if that [2003] right square bracket exists then we'll [2004] have two elements in which case it will [2007] it'll get the first element the one on [2008] the left um and then if it doesn't exist [2010] then it won't so um that's good that is [2013] intended behavior for us let's click run [2016] now and see what [2018] happens okay great this is looking good [2022] uh so we we chucked through it 40 times [2024] so first test URL worked second test URL [2026] worked third test URL fourth test URL [2030] fifth sixth seventh okay I mean [2032] obviously it's done what we wanted to do [2034] let me just do one sanity check at the [2035] end here [2037] uh okay great and we'll know pretty [2039] quickly if it doesn't [2040] work let's pump that URL in good awesome [2044] so now we're at the point where we have [2045] the individual um URLs that we're then [2049] going to call [2050] again and what I'm going to do now is [2052] I'm going to test out what it looks like [2055] when I call a specific one so I'm going [2057] to type oops I just called the same URL [2059] twice let me stop that um we just want [2063] redfin.com [2064] one of these URLs so [2067] let's just grab this one I already have [2068] it in my URL [2072] bar okay and let's see what sorts of [2074] data we get when we call an individual [2076] listing [2080] now and we can make a determination [2082] about what we want to scrape [2083] specifically uh okay I got a 403 not a [2086] good sign um for those of you unfamiliar [2088] 403 error essentially means that uh we [2091] don't have some cookie or something that [2093] we need uh alternatively we could be um [2098] let's see alternatively we could have [2100] put the URL wrong alternatively we could [2104] have uh there's a one final reason [2108] why obviously we could have been rate [2110] limited we could have put the URL wrong [2112] or we could have not had headers or [2114] cookies um that like make our requests [2117] seem like real so that makes sense uh [2120] it's one of the reasons why let me just [2121] try doing this from my own URL yeah so [2123] it works from my own call uh and let's [2125] try pasting this in here doing this one [2127] more time seeing if maybe you ran into [2129] that local rate limit no usually when [2130] you receive a request that is satisfied [2132] as quickly as this it just means that [2134] you've been denied uh and that's [2136] understandable so there are a couple [2137] ways that we can get around this and I'm [2138] glad that this happened because now I [2139] get to show you guys how to like [2141] sneakily divide and conquer you know to [2144] to make it around these uh these rate [2146] limits the first is we need to put a [2148] bunch of cookies in our URL that mimic [2149] our browser and so the simplest and [2151] easiest way to do this is head over to [2152] the page that you want to hit up so [2155] that's this one right here [2157] then head over to inspect [2159] elements going to zoom out here because [2161] I'm way too far in and then head over to [2163] network now if you're unfamiliar what [2165] the network tab is is it's like a [2167] real-time display of every request that [2169] is being sent or received from your [2170] browser in real time um when you're [2172] accessing a web resource of whatever [2174] kind and so in our case what's happening [2176] is every time that we enter this URL a [2179] bunch of requests are being made for [2180] specific resources like the header image [2183] for instance maybe some other listing [2185] images um some CSS some JavaScript on [2188] the page right all these tiny little [2190] things that you normally never have to [2191] think about because the browser does it [2193] automatically in order for those [2195] requests to check out you usually need [2196] to have what are called headers on the [2198] requests that you are sending and [2200] headers are basically just like a unique [2201] identifier like a fingerprint um showing [2204] the server that you are a person and not [2207] a robot like what we are attempting to [2209] design now the good part about this is a [2211] lot of servers are very easily tricked [2213] and you can just reuse the same headers [2214] that you use in your browser over and [2216] over over and over again uh without [2218] there being any issues the problem with [2220] our request right now is if you go back [2221] here you notice that we have no headers [2223] whatsoever so we're not actually sending [2224] anything and so we're going to try and [2226] get around that and try and be a little [2227] sneaky um so what I'm going to do is I'm [2229] going to go uh let's not preserve the [2233] log so I'm going to eliminate all of [2235] these Network requests then I'm going to [2236] press return and I'm going to scroll all [2238] the way up to the very top of the [2240] page and just see exactly what I am [2242] calling here and then as you'll see the [2244] network tab has another tab called [2246] headers in them um headers show you what [2248] you are sending the uh the the server [2252] resource [2254] okay so here are request [2257] headers looks like we're sending one [2259] called accept with text HTML all this [2261] stuff so what I'm going to do is I'm [2261] just going to copy over a bunch of these [2263] including the [2265] cookie uh because we're not actually [2266] signed in and then I'm going to see what [2269] happens the platforms Android that [2271] sounds like to [2273] me uh yeah and then we're going to we're [2275] going to try pumping these in so I'm [2276] going to go go back over here to my make [2278] module and then I'm going to go to [2280] headers and then you'll see there's a [2282] two-part format there's a name and then [2284] there's a value and so what we basically [2286] have to do if if you look on the left [2287] hand side here the name is the text over [2289] here like server and the value is NG NX [2292] for instance so U these are response [2295] headers that just means that we're [2297] receiving them from the server and then [2298] these are request headers that means [2299] these are the ones that we're sending so [2300] we want to do is we want to mimic all of [2301] the ones that we are sending so you see [2303] here it says accept text HTML [2305] application whatever so we actually want [2306] one called [2307] accept that has all of this information [2311] I'm going to add another header uh [2312] accept [2313] encoding some of these are already like [2315] default added um to every request that [2317] comes [2320] out and I don't remember if you actually [2322] need to include this [2324] um uh this colon here so uh we're going [2327] to try both with and [2330] without the cookie is probably the most [2332] important one because a lot of the time [2334] they will like specifically browse or [2335] fingerprint you and and they'll store [2337] the results of that in the cookie so [2339] they'll just store some really long [2340] string and then if they find that string [2343] then good uh and then user agent is [2345] another really common one too so I'm [2346] going to copy that one in user-agent and [2349] then we're just going to paste in [2350] everything that we had here uh you'll [2352] see there's some additional info which [2354] doesn't look like it's relevant don't [2355] know where that came from so I'm just [2357] going to scroll through and make sure [2358] that that data wasn't [2360] pasted anywhere else okay great um then [2365] if you scroll down here sometimes [2366] there's uh a few other settings that you [2370] can change that request other [2371] headers so for instance if I were to [2373] click body type application whatever [2375] then that would actually be adding that [2377] as a header I'm just hardcoding it in [2378] right now because I want to see uh I [2379] want to see if this [2381] works okay so we are now going to call [2385] this URL again but I'm going to do it [2387] from [2388] make.com [2389] here it's taking a fair amount of time [2392] now which is usually a good sign and as [2393] you can see the status code is now 200 [2396] uh and so we actually get all of the [2398] text here that uh you know you'd [2402] otherwise get on this page so yeah [2405] that's more or less how to like sneakily [2406] navigate a lot of these simple 400 [2408] errors that you're going to get like the [2409] unauthorized resource type things um I [2412] do this all the time and I usually just [2413] copy over my own browser credentials you [2415] can be even sneakier and so you can like [2418] generate header uh fingerprint I think [2421] that's what it's [2422] called and there are a bunch of scripts [2424] out there that do that for you [2429] um I thought there was just like an [2431] online service but I guess I was [2432] mistaken but essentially what these [2434] services will do is they will randomize [2436] like your uh like the browser that [2439] you're using so maybe instead of chrome [2440] it's like Firefox they'll randomize like [2442] the page size so that you know a lot of [2444] the time you'll pass that in as part of [2445] the cookie um they'll randomize just a [2447] bunch of stuff and basically make it [2449] impossible for the browsers to what are [2450] called fingerprint you um so something [2453] to keep in mind you don't necessarily [2454] need to know it but might be worth [2455] thinking about about it and then uh what [2457] I'm going to do here just because I've [2459] gone through this whole rig roll I've [2461] done a test URL and I've um I've I've [2464] ran through this three or four times is [2465] I'm also going to provide a [2467] weight because I don't want [2472] this let's just do this directly in [2477] here uh let's get one I'm also going to [2481] provide a sleep basically and so every [2483] new individual URL that comes in we're [2485] going to sleep and we're going to try [2486] sleeping for a fair amount of time um I [2489] guess for testing purposes should I [2492] sleep let's sleep after that's [2497] smarter actually let's sleep like 3 [2500] seconds before just so that there's a [2502] little bit of a delay in the request [2504] that we're making and then afterwards [2506] let's sleep I don't know like 30 seconds [2508] or [2510] something then I'm going to Auto align [2512] this and then I'm checking the URL here [2514] it's redfin.com and it should be ca SL [2516] whatever and so we initially split the [2520] source string and then we split it by [2522] the presence of that right bracket [2523] character and then we're getting the [2524] first record that looks good to me we [2526] got all of our cookies and everything [2527] else like that here which is nice uh and [2529] then what we want to do is I'm just [2531] going to stick this at the very end we [2533] also want to parse the html's pl text [2534] and just see what sorts of cool sexy [2536] fields we got as a result of that so I'm [2540] going to pass in the data from [2543] this and then presumably I'm just going [2545] to run once is a test uh presumably [2548] what's going to happen is we're going to [2550] then get the text Data the plain text of [2554] a particular page and then we can do [2556] more or less the same thing that we just [2557] did and then just dump those results [2559] into a Google sheet okay again you can [2561] use this exact same approach on any [2562] e-commerce website that you want in fact [2565] e-commerce websites are way easier to do [2567] than like a very popular Global resource [2569] like redin simply because they usually [2570] don't have the data security protocols [2572] in place to like verify your headers or [2574] anything like that so you're probably [2575] not going to do any of that stuff I [2576] would always get in the habit of adding [2578] some type of sleep you can get pretty [2580] fancy with this if you really want to [2581] like scrape completely undetected you [2583] could for instance add a random weight [2585] time um on a normal distribution of like [2588] human traffic visits so you could try [2590] and model that based off actual human [2591] data uh and then have your your weight [2593] time not just be a flat 30 seconds or [2595] something um but you know we're keeping [2597] it pretty simple I want it to be I want [2598] this to be as accessible as humanly [2600] possible uh so that's that's what we're [2601] doing um I called this 30 I usually just [2605] like writing the length of my [2608] sleep directly inside the module title [2611] like this um just because it keeps it [2614] really simple to understand from a [2616] bird's eye view and then let me just [2617] double check all this okay good this [2618] looks good let's try running getting all [2621] the SF listings up [2623] here that was a 200 got them all [2625] successfully sleeping 3 seconds we're [2628] getting the SF listing from one of the [2630] individual links here and now we're [2632] sleeping for 30 seconds so let's check [2634] this HTML plain text while we're doing [2636] it and let's see what sort of [2637] information that we can get this looks [2640] to be the text of that specific page so [2642] we could [2644] grab the Google Maps entry it looks like [2648] so let me just turn this off because I [2650] think we've demonstrated this works uh [2652] we could grab the Google Maps entry it [2654] looks like so maybe this is relevant [2656] information for our sales team or [2657] something let's see what that might look [2660] like uh we're missing a parameter called [2663] size so I don't actually know if I'm [2666] selecting this correctly maybe I'm not [2668] um we could grab like the price we could [2670] grab the estimated mortgage payments [2672] let's think what's the simplest thing [2674] that we can do to demonstrate how this [2675] would work uh we could obviously grab [2677] all of this text uh we just have to [2679] build out like an appropriate Rex for [2681] it okay I like the property yeah I like [2683] this this is easy uh because we just [2685] have tabs like property facts sale [2687] history tax history [2690] um that be pretty [2693] easy we could do [2698] Transit we could do walk score that's [2703] neat what would be the most valuable [2705] here for [2708] us looks like there are also some other [2710] links afterwards so I imagine if we go [2712] on a particular page and then scroll all [2713] the way down there'll probably be like [2714] some recommended similar listings yeah [2716] that's what these are so we don't want [2718] those so basically everything up until [2721] this point here um we're good we don't [2723] need to continue scrolling down because [2724] everything after that is just like other [2726] listings so of this uh I'm going to [2731] grab let's do payment calculator so [2735] let's do estimated mortgage [2738] payments and [2740] then let's do a line called tax [2746] history and then there should just be a [2748] cost as well where we can get just the [2751] dollar [2754] value um unfortunately make doesn't [2756] really let [2758] me do this by yeah I can't really drag [2761] this out anymore so that's unfortunate [2764] um why don't I just paste this in here [2765] and [2766] see what the information [2773] was okay I want [2775] this paste that in okay so it looks like [2778] the price is sandwiched [2780] between a number of space and then beds [2784] and then a left bracket and I imagine [2787] just based off of what I'm seeing here [2789] this is very like consistently formatted [2791] um that format will probably work in the [2794] vast majority of cases so I'm going to [2795] build out a Rex for that data and we're [2798] going to start with [2799] price and once I have all of the [2801] variables I'm going to add them to a set [2804] multiple variables module and then I'm [2806] going to update a Google sheet um so [2809] I'll have to create a Google sheet as [2810] well so let's set multiple variables the [2813] first variable that I want I'm going to [2815] call Price [2817] and then for now um I'm just going [2821] to leave it at that I don't know if [2824] it'll allow us to yeah it will allow us [2825] to um the other information that I [2827] wanted not remembering off the top of my [2829] head I think it was [2831] mortgage estimated mortgage [2837] payment let's do [2840] mortgage yada yada yada okay estimated [2844] whatever dollars per month [2846] so next up is going to be estimated [2848] mortgage [2850] payment let's just call it its full name [2854] and then the last [2855] thing what else might be useful that we [2857] could [2859] grab uh let's just like copy over this [2863] um the sale history that looks [2867] nice and we'll just do like uh we'll [2869] just copy over all the texts so we can [2871] get in the habit of doing [2873] that okay great um so now and there are [2876] multiple different ways to do this but [2877] now I'm just going to create three rexes [2879] one for everything that I want so one [2881] will be for the price the other will be [2882] for the estimated mortgage payment the [2884] last one will be for um that sale [2887] history let's just Auto align this and [2890] then let's call this extract [2894] price let's call this one extract [2897] estimated payment and then let's call [2901] this one extract sale [2903] history awesome we're then going to set [2906] the outputs of these so price is going [2908] to be [2910] here um estimated payment is going to be [2912] here and then sale history is going to [2914] be [2915] here and then I'm going to also add a [2918] Google sheet [2920] module it's good to just scaffold the [2923] stuff out ahead of [2924] time and we're going to say add new row [2928] to [2930] sheet great so this looks pretty [2933] self-explanatory um I'm just going to go [2934] through now and make manually find the [2936] Rex's and then I don't know how long [2938] this video has gotten but I'll just look [2939] at the time and then if this is a little [2940] too long I'm going to jump to all the [2943] Rex's being done in 321 click okay [2946] assuming that I didn't do that uh let's [2947] see how we're going to do [2951] this so there was a million dooll Mark [2954] here I'm just going to copy over this [2956] text pump it into re X [2958] 101 and it looks like I'm looking for a [2962] new or a space character then a dollar [2965] sign and then an amount [2969] so I think this would be slash D star [2973] although I'm not entirely [2976] sure let me see what is a digit [2979] character any digit dashd oh you know [2983] that probably that's probably not going [2984] to work because this is sometimes going [2985] to include a [2987] comma so why don't we just do [2992] this and then we'll go dpace beds [2999] yeah that looks uh that should work I [3003] think so oh there actually is no sorry I [3006] meant uh let's do [3009] this wrong [3011] one okay and then we want a dollar [3014] character and then we want a [3017] number what we want is we want to just [3019] extract this number [3022] here but it's not picking that up for [3024] some reason let's see why [3028] there we go it's because the dollar sign [3030] is a specific [3033] um it's a specific sort of value there [3036] okay great so we've now extracted [3038] this going to go back to the price and [3042] then I'm going to pump this in I'm then [3045] going to take my example which is over [3047] here and then just run this and also I [3050] have a million in one tabs open it's [3051] probably getting pretty complicated to [3053] see what's going on so let's paste this [3055] this in and see if our Rex found the [3057] price successfully it did that's nice um [3061] now let's look for the estimated payment [3064] it's right over here so it'll be a space [3068] character then a dollar [3070] sign and then it'll [3074] be and then a back slash [3077] Monon um it's going greedy so it's not [3080] what we want presumably what it's going [3082] to do is it'll have a space character [3084] immediately after that [3085] so we can use that to select this Rex [3088] here for estimated payment and then I'm [3091] just going to copy this in and then run [3093] another [3096] test looks like it selected the [3099] estimated payment correctly and then [3100] sale [3101] history [3103] um we got to do another test which [3105] is unfortunate so I have to Ping the API [3108] again unnecessarily let's just see if [3110] they all have sale [3112] history okay let's just call most recent [3115] sale history so I'm going to [3120] run [3123] um you know what let's run this whole [3128] thing and just because I think I know [3131] what this is going to look like I think [3133] it'll be an n and then I want [3137] everything so I think what we're looking [3139] for is [3141] this and this is me being [3144] sneaky I'm not necessarily saying that [3146] this is the right thing to [3149] do [3160] um that should possibly work so I'm just [3164] going to stick this in and just give it [3166] a try and then what we're looking for is [3168] an output I just realized was wrong [3170] previously uh this is currently [3171] referencing module 8 so I'm just going [3172] to go back here and then reference [3173] module L7 and I can just copy that in [3176] and then paste this into the other three [3178] modules so copied [3181] oops let me just uh go back here that [3185] one's right and then this one's still [3188] lacking and then this one looks [3192] good okay great so now that I have [3195] everything and everything is being [3197] pulled correctly I'm just going to run [3198] this again this is taking some time so I [3201] imagine this is going to be a 200 [3203] nice going to sleep 3 seconds seconds [3205] we're going to call the individual [3207] listing which looks good we have the [3208] three rexes here it looks like it's [3210] extract [3212] multiple oh yeah yeah we're running this [3214] too often so I'm G to pause that now [3216] before we start getting a bunch of 400 [3218] errors usually with apis you can do [3220] anywhere from like five to 10 or um five [3223] to 10 calls a minute but I like to be [3226] safe okay so we pars the HTML let's see [3228] if the price was extracted correctly [3230] okay so price was uh extracted correctly [3233] on the first go and then on the second [3235] go It also says last sold price so we're [3237] going to want a way to um select only [3241] the first entry as opposed to all of the [3245] entries and I think that if I check this [3248] out there'll be other records that are [3250] similar yeah um extract estimated [3253] payment it's pulling in a lot of prices [3256] here which is not [3260] good so uh extract sale history let's [3263] see if there's anything list listed on [3265] February listed on February last sold on [3269] last sold okay actually yeah turns out [3270] my total random pick here worked so now [3274] I'm just going to create a new Google [3275] sheet you can do that really easily just [3277] by writing sheets. new by the way I'm [3279] going to call this um redin scrape data [3283] and then I'm going to add in a bunch of [3285] information here the first is going to [3286] be [3287] URL the second is going to be um what [3292] would we want like price third was going [3294] to be [3296] mortgage let's do [3300] estimated payments and then we'll just [3303] do like sale history now you can imagine [3305] how you could build this into an error [3308] table or something extremely easily um [3310] doesn't have to be on Google Sheets I'm [3311] just using this because Google Sheets is [3313] always the simplest place to get started [3315] a lot of the time what I'll do is I'll [3316] actually scaffold my flows in Google [3317] Sheets I'll verify that it works on just [3319] like a data first perspective and then [3321] I'll dump everything into like a more [3323] enriched CRM or project manager like air [3326] table or clickup or whatnot um but it's [3328] just a simple and easy way of you know [3331] testing your flow using simpler tools uh [3335] and that's you know particularly [3337] important [3339] if um you know you don't want to spend [3341] money on these okay so just because I [3345] have um a bunch of account set up what [3348] I'm going to do is just share this with [3350] one of my other accounts called Nick [3352] left [3353] click. we're going to going to give him [3355] full editing [3357] access Run for the hills neck and then [3359] what I'm going to do down here is I'm [3361] going to go select that user just [3362] because I already have that off I'm [3364] going to enter manually or sorry I am [3366] going to select by path uh I'm going to [3368] go to shared with me because I just [3370] shared that with myself at Nick left [3372] click. from another email address and [3374] then the one that I'm looking for is [3376] called redin scrape data which is right [3378] here and the sheet name is going to be [3380] sheet one table it does contain headers [3382] which is going to allow us to then [3384] iterate over all of these variables so [3387] first thing that I'm looking for really [3388] is the URL so I can extract the [3390] individual URL here and then I can just [3392] prein redin to this so redfin.com uh the [3396] price I can pull from this value the [3398] estimated morg payments from this value [3400] and then the sale history from this [3401] value this will be just plain text uh [3404] these two will be numbers I think we [3406] should be able to format them correctly [3408] and then after I'm going to sleep for 30 [3409] seconds let me just make sure that all [3411] of this is formatted the way that I want [3413] it to be so price and estim ated history [3416] I'm just going to go down to format [3417] number and then we're just going to do [3419] accounting and this should allow us to [3421] automatically account for those little [3423] commas because otherwise commas can be a [3425] massive pain in the ass now if um it [3427] doesn't account for the commas we can [3429] also just pass that through another step [3430] where I just replace the comma with [3432] nothing and then it'll be rendered as a [3433] number but I do like to just do this as [3435] a sanity check um let's just make sure [3438] this isn't being oh yeah and let's just [3441] turn Global match off for all these that [3442] means that this will only select the [3444] first entry on the page with the text [3446] that we want the reason why this is [3448] important uh on these modules is because [3451] um we're just looking at one page so [3452] odds are the text isn't repeating we [3454] needed a global match back here because [3457] we were looking at a giant listing [3459] that's going to have similarly formatted [3461] links okay great so now that [3462] everything's good to go let's click run [3464] once and let's just see if there are any [3465] errors I kind of hope there are because [3467] I love debugging these things and I've [3469] received a lot of feedback that they're [3471] valuable okay let's go over here and [3475] and doesn't look like we dumped in any [3477] of the variables which is not a good [3481] sign yeah it doesn't oh JavaScript is [3483] disable oh yeah yeah okay great so we're [3485] actually getting hit with a rate [3489] limit so we got a 202 [3492] here we'll see that javascript's [3494] disabled this requires JavaScript enable [3496] JavaScript and reload the page so this [3497] is another example of sort of like [3499] automated anti- scraping behavior um [3502] they're doing this just because we've [3503] tested so often and a short period of [3505] time that like we're we're hitting the [3506] rate limit we're running into the upper [3507] limit again um so you know a couple ways [3510] to solve this initially the first is [3512] obviously just when you test have some [3514] variable that you're calling instead of [3515] the the URL or the API over and over and [3517] over again so just like what I was [3518] showing you before I was just too lazy [3520] to deal with the commas um the second is [3523] make sure that you have like authorized [3525] request headers just like I'm doing over [3526] here um and then the third is I actually [3529] have I built this out on red fin [3531] elsewhere so let me just log into that [3533] and let me see if there was another API [3535] that I was calling that maybe would help [3537] me get around this [3541] issue let's do that let's do [3548] that let me see my gut tells me [3553] probably I think we're doing this if I [3556] had to guess correctly see that there [3559] were some warnings [3563] here [3565] yeah so it looks like I'm just uh just [3567] stuffing a few additional headers so let [3569] me try doing this and seeing if we could [3571] just stuff a few additional headers and [3572] have that work a few of the headers that [3574] I have here that I don't have here are [3576] accept language so I'm just going to [3578] paste that in and then there's also [3580] cache control this might be valuable [3583] this might just discard um any cached [3586] data uh it also looks like I'm [3588] requesting text plane um as opposed to [3593] HTML so that might have something to do [3595] with it let me give that a try although [3597] I think this may sort of muck up the [3599] rest of our uh the rest of our parsing [3601] but whatever we'll give it a try and [3603] then what I want to do here is I want to [3605] add a bigger sleep between these two [3607] let's do 10 seconds so that we're not [3609] calling red fin twice from the same [3611] place because it looks like this first [3612] one worked it just looks like the second [3614] one is a little bit [3615] suspect um and then for my sanity I'm [3618] going to go back and then I'm going to [3619] extract one of these [3621] URLs let's do like this one here [3625] and then I'm just going to test that one [3628] um just so I don't have to like you know [3630] call a million in one [3633] URLs [3636] okay let's run this module we received a [3639] 200 request we're going to get nothing [3641] here because I didn't actually call a [3646] link um why don't I just do one specific [3651] URL here so this one [3656] paste this in my URL and this looks good [3658] so we should get information on Liberty [3660] Street uh the price should show up is [3662] 1.7 mil um wait one bed four bath man am [3666] I living in another world or something [3669] that's crazy and then we should also get [3671] some sale history information so uh we [3673] should get at least one of these that [3674] the price change that it's listed active [3676] ideally we would get the most recent one [3678] because we chose to stop after the first [3681] um uh after the first uh match so we'll [3686] give that a try you'll see that this URL [3688] is not going to work [3692] so uh the reason why it's not going to [3694] work is because we are hardcoding in [3698] this so let's just do that and then [3700] let's try running this [3703] once we received a 200 request there so [3706] I imagine the additional entries that I [3709] put in probably made a difference looks [3712] like we couldn't find the price so [3714] there's something that we need to debug [3716] there and it looks like we could find [3717] everything else which is nice so we got [3719] the URL over here we got the estimated [3721] mortgage payments um the formatting [3724] doesn't seem to be correct so let me [3725] just jump in and then make everything [3729] accounting you can do that pretty [3731] quickly on a Mac [3733] by well when you know the keyboard [3735] shortcuts un like me um by going control [3739] option o n and then a so I go back up [3742] here you'll see that the price is now [3743] tabulated [3745] correctly [3746] um and then this URL uh I guess was the [3750] first one that we ran so I'm just going [3751] to delete that that doesn't look [3753] correct okay so last thing we have to do [3755] is figure out how to get these price [3757] entries in this database successfully so [3760] let's see what the issue was with this [3762] we fed in a price I'm actually just [3764] going to [3765] copy all of [3767] this paste this in here then I'm going [3771] to go grab the Rex now it may be because [3774] um that only had one [3776] bed whereas the other ones had multiple [3780] beds yeah looks like it so you see how I [3781] wrote beds previously and I just told [3783] you that this place only had one bed and [3785] then four bathrooms um so because I was [3787] searching for beds with an S essentially [3790] it didn't exact match that correctly so [3793] my actual reject should just be bed so [3795] I'm going to go back here change that to [3796] bed presumably not every place is going [3798] to have more than one bed um because we [3800] don't have that filter set up ahead of [3802] time so this is just a good way of [3803] ensuring that you know um everything you [3806] need is uh is parsed correctly so I'm [3808] going to go through here and then just [3809] delete this [3810] row and then um just because this Rex [3815] thing or this uh red fin API looks to be [3818] a little [3820] bit I don't know it's just a little [3823] um uh sensitive I want to say I'm just [3826] going to add like a very generous sleep [3827] of 60 seconds you can imagine how you [3829] could just schedule this to r on once a [3830] day maybe at I don't know like [3835] 6:30 a.m. or something like that and [3838] then um you know 60 seconds on 40 [3840] records would take you about 40 minutes [3842] from start to finish it's important to [3843] note that make times out after 45 so [3846] that should allow us enough time for the [3847] rest of these calls to be made and stuff [3848] like that um but yeah you know you can [3850] obviously run it more often than not and [3852] then oh one thing that I didn't check [3854] was we need to check to see if the [3856] record actually exists in the Google [3858] sheet first before we add it that's [3860] important and that's the last thing and [3861] I'll [3863] do so let me go down to search rows [3866] first and then we only want to add this [3869] if oh and you know what I kind of want [3870] another column here I'll call this like [3872] a date created let's do [3877] that yeah not having this would be [3879] silly okay so I'm going to go back here [3882] to Nick left click. I'll do shared with [3889] me I guess just red fin scrape data [3892] there sheet this does contain headers so [3895] the filter I'm going to be looking for [3897] is I'm basically going to be looking for [3898] the URL and I'm going to look to see and [3901] essentially I'm going to Ure that the [3902] URL does not already [3905] exist [3907] somewhere on this listing so I'm going [3910] to go over here and then I'm going [3915] to um get split and then we're going to [3918] do this [3922] again then the value that I want to [3925] check [3926] for and we should really be doing this [3929] in a [3931] variable um instead of just like dumping [3934] it directly in there that'll be a lot [3937] smarter because then we can also reuse [3939] that variable yeah let's do [3942] that we're going to say individual URL [3947] the value we're going to stick in is [3948] going to be this we're then going [3953] to paste that in and then I'm going to [3955] get to reuse this back at the very [3958] end [3960] URL so what we're going to do is we're [3962] going to check to see if there is a URL [3965] that is equal to this URL that we just [3968] pasted in uh except I think we're also [3969] going to have to put redfin.com [3971] yeah and then if there [3973] are then we're not going to [3976] proceed so I'm going to say not found [3979] and then we'll say uh total number of [3983] bundles if the total number of bundles [3985] is greater than one or greater than zero [3989] essentially uh then we're not going to [3990] proceed so we basically want the total [3993] number of bundles to be equal to [3996] zero and only if the total number of [3998] bundles is equal to zero we're going to [4000] use numeric operator there and not a [4002] text operator um are we going to proceed [4004] with this flow because if the total [4007] number of bundles is equal to zero then [4009] this did not return anything and if this [4010] did not return anything then that URL [4012] does not already exist in our database [4014] um what we should do is we should add [4018] the sleep before this as well so that if [4022] the URL is not found or sorry if the URL [4025] is found it's not just dumping two of [4027] these in you can imagine that that'd be [4029] sort of [4031] annoying okay and then I'm going to Auto [4034] align this and then I'm just going to [4036] say set [4040] URL oh sorry actually it looks like I [4042] already did uh stick the the red [4045] fin thing here so I actually don't need [4048] any of that I can just go individual URL [4050] there nice uh this looks no we can just [4054] paste the individual URL in there okay [4058] that was a lot of jumping around uh [4060] should work why don't we give it a try [4062] only one way to find out right getting [4064] all the SF listings Over Here html's [4067] plane Tex set the URL this URL looks [4070] good I'm sleeping a little bit I'm now [4072] calling this um um HTTP request module I [4076] think I set this to like 10 seconds yeah [4078] I did hence why it took a little longer [4079] we received another 200 which is nice uh [4082] we're parsing all of these fields looks [4085] like we [4086] got the price correctly we got the [4089] mortgage payment correctly we got the [4090] sale history correctly we set these [4093] three variables uh we're then sleeping [4095] for a full minute so that's unfortunate [4097] but whatever we'll wait for a minute as [4099] we uh as we dump those records in so [4102] everything here looks good and I I think [4104] that the scraper is basically good to go [4105] now um there's only one final change [4108] that I would make uh and that's just to [4109] ensure that the scraper uh you know just [4112] never really errors out or never really [4114] has like issues related to rate limits [4116] and those are called error handling [4118] modules now I haven't discussed error [4119] handling before but air handling is [4121] basically just a way that you can put in [4122] some contingencies so that if your make [4126] flow ever you know 400 errors or if [4128] there's ever like a rate limit like what [4130] we saw earlier or maybe if that [4131] JavaScript warning comes up again um [4133] it's essentially we can just [4134] intelligently retry the flow over and [4136] over and over again until uh you know [4139] that flow goes through and so there's a [4141] quick and dirty way to do this so let me [4143] just cancel this out looks like the [4145] records were dumped incorrectly oh and [4147] then I didn't update the date created [4149] record right silly Nick well for the [4152] purposes of um exporting this I will I'm [4156] just going to put in a date record and [4158] I'm just going to call this now there [4160] you go that should be good and then we [4163] will [4165] will um format this as a date so that [4168] should technically be correct any who um [4172] yeah so what I'm going to do here is I'm [4174] going to click on this little gear icon [4177] and then I'm going to click allow [4178] storing of incomplete executions I'll [4180] click okay and then on the left hand [4182] side of the tools um modal here there [4185] are a bunch of different error handlers [4187] that you could use under directives and [4188] the one that we're going to be using is [4190] called break now what break does is [4192] break basically if there's a warning or [4194] an error with that module it doesn't [4195] work then it will um depending on your [4198] instructions store the execution history [4201] of that uh it'll store the history of [4204] that specific execution so store all [4206] those variables and then it'll wait a [4208] predetermined amount of time before [4209] using them again to try and finish that [4212] execution what do I mean by this um [4215] basically anytime you're calling an an [4217] API or anytime you're calling from a [4218] request module or something like that [4220] you do have to understand that like the [4221] Internet isn't perfect uh functions [4223] pretty damn well but like your up time [4224] is not always going to be 100% And so if [4227] you don't have an air handler like this [4228] then eventually over the course of like [4230] the days weeks or month that you're [4231] operating scraper there will just be [4232] some issue with the website it'll airor [4234] out and if it airs out three times in a [4236] row it'll just shut your entire thing [4237] down what breakes allow you to do is [4239] they just allow you to retry and so you [4241] can see there's a number of attempts [4242] module or a number of attempts um [4244] selector here so I could say hey I want [4246] you to retry 10 times and the interval [4248] between attempts I want to be 15 minutes [4251] now you can actually make this as long [4252] as you want you can see you could liter [4253] to make this 44640 minutes uh if you [4256] wanted to like really be sure that the [4258] red finin API isn't going to like air [4259] you out obviously we don't need it to be [4261] that long but what I'd recommend is you [4263] have some number in place I usually just [4265] stick with the default 15 um you know [4267] maybe if we want this to be really safe [4268] let's do 30 and then the number ofs [4271] attempts being every um essentially [4274] retrying three times that sounds good to [4275] me so I'm going to leave it at that now [4277] you don't need a breake module for every [4279] single module in your flow but you do [4281] need it anytime you're calling an API [4283] you're calling a web resource so I'm [4285] going to put that in and then what I'll [4287] also do is I'll put this in my Google [4288] Sheets I don't expect Google Sheets to [4290] break I don't think it ever has um but [4293] anytime you're calling a resource or [4295] interacting with some type of like web [4296] system it's just good to get in the [4298] habit of doing especially if this is [4300] something that like you depend on for [4301] revenue and whose uptime is very [4303] important so yeah that's more or less [4305] that I hope that that was educational [4307] and informative just imagine there's a [4309] little date created here uh I'll share [4311] the blueprint that I've developed here [4313] for both steps the first where we're [4315] scraping just like one resource and then [4317] using AI to turn that into Parable data [4321] and then the second where we're actually [4322] building out our own text parsers just [4324] using Rex and stuff like that obviously [4326] the second example is a lot more High [4328] throughput these are the systems that [4329] people pay me usually between 2 to 5K to [4331] build um I did build it in I think under [4333] an hour Depending on time so you can [4335] imagine how your Roi gets pretty good [4337] there although if I were building this [4338] up for a client I would have taken a [4340] couple of additional steps just to [4341] sanitize the data and make sure that [4343] like everything was hunky dory before [4344] proceeding so hope that was valuable if [4346] you guys got any questions leave them [4348] down below in the comment section [4349] otherwise like subscribe all of your [4351] support to my channel so far has been [4353] incredible we've been averaging between [4355] 200 to 300 Subs a day which is [4356] mind-blowing um I'd love it if we could [4358] keep that up thanks so much for watching [4360] and I'll see you in the next one bye-bye

Video: https://www.youtube.com/watch?v=vHJH3TShGks
Title: How to Build My 7-Figure Hiring System In Make.com
[0] what's going on everybody welcome to [1] another video in make.com but for people [4] who want to make real money and today [6] I'm going to be talking about a 7figure [8] hiring system that I use for my own [10] business and that I built out for for a [12] variety of seven and eight figure [13] businesses you're going to learn exactly [15] how to build that out in make.com it's [17] extremely simple flow but it does [18] require a few platforms so we're going [19] to talk about the best platforms to use [21] for it and then I'm just going to walk [23] you through step by step both my [25] methodology my mindset and some of the [27] little trip ups that people usually [29] unfortunately suffer as they're [30] attempting to build these out so if that [32] sounds like something you're interested [32] in stay tuned and let's get into the [38] video okay first things first here is [40] the hiring system that I'm going to [41] build out I've shown this on previous [43] videos um it's extremely straightforward [46] essentially you have a pipeline in a [47] project management system the pipeline [49] that we're using today is called clickup [51] and I've alluded to it in multiple [52] previous videos but it's one of my [53] favorite pipelines simply be or my [55] favorite project management platforms [57] simply because it's so customized able [60] and if you know what you're doing you [61] can do a lot with it and what we have [64] here is we essentially have an [66] appropriately named hiring pipeline [67] where people will come in through our [69] type form that I've set up and posted on [71] a bunch of job websites they'll then put [73] in various Fields like their portfolio [76] the rate that they want the number of [78] hours they can work um and you know a [80] few comments and then um we have a [83] virtual assistant that will go through [85] this usually about once a week or so and [87] then sort out any applicants that they [90] consider are high quality enough to be [92] reviewed by our writing manager and so [95] this is how we do it at our uh content [97] agency obviously if you're doing a [100] different sort of business model like [101] I'm not going to be rebuilding the [102] content agency set of things for this [104] video I'm going to be pretending I'm [105] hiring for a sales role but depending on [108] your business model depending on the [109] specific role that you're hiring your [110] Fields might look a little bit different [112] um but this is just a very effective way [114] that I found to to to structure this and [116] so after they're reviewed you see [118] there's little rating tab on the right [120] hand side here the manager will then [122] take a look at this and then if the [123] manager likes what they see what they'll [125] do is they'll request a trial and we'll [127] move them to this stage now this is all [129] managed automatically using automation [131] so we'll send out an email that's [132] templated basically saying hey um thanks [134] so much for sending us your application [137] we love the stuff that we've seen you do [140] all that's left now is for you to write [141] a brief trial article for us we'll make [143] sure that they get paid for this work [144] because I find in my experience it's [146] almost never worth the few dollars that [148] you save um getting people to do free [151] work when you compare to its effect on [153] both your reputation and the quality [155] that you get after they finish the trial [157] they go to review trial and this is a [158] stage where you know somebody on the [160] team can look over and make sure this [161] trial article is representative of the [163] quality of work that we'd like to see [164] out of them and finally we have like an [166] onboarding stage and then a hired stage [169] not going to touch too much on these [170] just because of how customized this [171] typically is but yeah this is how we [173] hire for our seven figure agency and how [175] we run through hundreds of applicants [178] usually per week when the system is up [179] and running we haven't hired in a little [181] while which is why we have so many of [182] these and we haven't really needed to do [183] anything with the system in a bit but [185] yeah that's more or less what we're [186] going to be building out so I'm going to [187] showe to do it in clickup I'll show you [188] how to build out the form and type form [190] I'll show you how to set up the make [191] flow so that we can dump new leads into [193] new applicant and then I'll also um run [196] through a few automations to like [197] automatically move them to the [199] successful stage um assuming that you [201] know their rating is above a four and [203] we'll template out a quick little email [204] to send them and so on and so forth this [206] video will differ from previous ones in [208] so far that we're not just building out [209] one flow [210] we're building up many because I like to [211] torture myself and make these videos [213] long uh so we're probably going to build [215] up two or three make scenarios maybe [216] four depending on uh on whether or not [218] we have enough time but any who um I [221] love building these sorts of systems out [223] because they can have such an outsized [224] impact on the businesses that I do this [226] for and yeah it's just uh it's it's [230] really fun so first things first we have [232] to do is obviously log into all of our [234] make accounts uh we have to jump into [236] type form because we're going to start [238] logically with the beginning which is [239] the form and then we'll work our way [241] through click up and then you know [242] connect it all with make so I'm logged [244] in type form here I have a pretty big [246] agency account so I have you know no [248] limits or restrictions with the number [249] of form submissions I can receive um I [252] mean if you guys are wanting to do more [254] than 100 submissions a month I think you [255] guys are going to have to pay like $50 a [257] month or something like that $59 a month [259] what I'm going to do here is I'm just [260] going to click add workspace and then [262] I'm going to write um test [266] build and that way I'm just going to [268] keep everything organized on my side [270] make has been running into this issue [272] recently where sometimes the access is [274] denied on the US server so I am on the [276] US server for my account sometimes I [278] have to log in twice sort of annoying [280] but uh it's no big deal you can also [282] just keep on trying and eventually get [284] in okay great and then yeah I'm also [287] going to build out a new space here on [288] clickup just to house this I'll call [291] this test build we'll go next no [294] description um let's make this dark like [297] my [298] soul well have it be shared with one [300] second copy workspace and then no task [303] statuses no no nothing I'll just keep [305] going um I don't need any click apps [308] here but whatever I'll just keep them [310] and then we'll do list space cool that [313] looks good I'm going to click create and [315] then it's going to go through and then [316] make [318] this and then this is the list that [320] we're going to use as our hiring [321] pipeline so let me just rename this call [322] this hiring pipeline um example just to [326] disambiguate between the other one and [328] then great yeah we should have [329] everything that we need now now I always [331] like to start at the top of any flow at [332] the very beginning um usually I'll have [334] some kind of ideas as I'm developing a [336] type form or something like that and so [339] if I were to try and start at the end or [340] at the middle um I basically have to go [342] back and then update my type form to [344] have the fields that I want to have in [345] that that middle part um so I'd just [347] always encourage you guys like if you're [349] starting with form as a trigger um just [351] you know fill out the form first make [353] sure that that's everything that you [354] want so in typ form the way that you do [356] that is you click create new form and [357] then I'm going to create mine um as like [359] like a basic form so I'm going to have [361] mine be um I'm not going to use AI to [363] fill it in or anything like that and [366] we're going to be a little bit laggy [367] just because I'm on shitty hotel [368] internet today um but on that note [371] Toronto has been lovely what a beautiful [373] city if you guys haven't been I would [374] highly recommend [376] it okay we're going to call this type [378] form um let's do hiring form um for the [383] purposes of this example Let's Pretend [385] We're hiring for a salesperson so we'll [387] just say sales hiring form [390] and then I'm going to click [391] continue okay not a big fan of like the [393] default images and stuff like that so [394] I'm just going to remove them that looks [397] good and what we're going to do is we're [399] going to ask a couple of very simple [400] questions and I'm going to leave it at [402] two or three because I don't want the [403] type form part to be a really big chunk [404] of this video um and then if you guys [406] wanted to you know add specific [408] questions that are more relevant to your [409] job post or something like that then [411] feel free you you can have like a resume [412] field you could have like CVS you could [414] have people write you letters all that [416] stuff uh but in my case what I'm going [418] to do is I'm going to start off with a [419] contact [421] info and then I'll [424] say first let's get your contact [429] information say details we'll use this [434] to notify you of an [437] interview first name we want last name [439] we want phone number we want email we [441] want company we don't really need this [443] odds are if they're applying for a [444] position they probably don't own a [446] company or anything like that I will [448] make all these fields required because [450] they're going to be necessary for the [451] rest of the flow well not all of them [453] but um I I just want people to get in [454] the habit of hey are you applying for a [455] job with us well then if so you do need [457] to provide your first last name phone [458] number all that [460] stuff um what I usually like to do for [462] sales and some people are going to [463] disagree with me on this but I uh I like [465] to have people record a a quick one [467] minute video just explaining their job [469] history like over the video as opposed [471] to you know in a in a resum or a CV if [474] you think about it the vast majority of [475] sales positions most of the work that A [477] salesperson is going to be doing is [478] probably going to to be either over [480] video over a call or maybe in person and [482] so just seeing how they um operate uh [485] you know in real life like while [486] conversing is really important so I'll [489] say attach a one minute loom video [494] explaining who you are your job history [497] and why you want to work here uh Let's [502] do let's just do that Loom is a oneclick [508] video share platform you can sign up [511] here if you can't install loom for [514] whatever reason you can also add a [519] Google Drive link to a video recorded by [524] other [525] means guidelines keep the video between [529] one and two [533] minutes and make sure to listen to it [538] before [540] make sure it's [543] shared and make sure to listen to it [545] before you [547] submit cool um so I really like doing [550] that uh for sales positions so obviously [552] this can't be a multiple choice so what [554] I'm going to do is I'm going to look for [555] a website or a link field There You Go [557] website link here I'm going to make this [560] question required as well and then I'm [562] also going to just look up Loom so that [565] if anybody is unfamiliar with this uh [567] it's just a very quick and easy way [572] oops let's do this just that it's a [575] quick and easy way to sort of have like [576] transparency that this is a tool that [578] we're going to be using and uh you know [579] if you don't know anything about it [580] click here to find out oh sorry you can [585] sign [587] up it's free and you can sign up [591] here okay awesome yeah that looks good [594] um what other questions do we want um [597] let's have one final question we'll just [599] be yes or no and I'm going to pretend [601] that I'm hiring for a high ticket sales [603] position and let's just frontload this [605] here first have you ever sold a [610] product worth more than [614] $5,000 let's do this and we're going to [618] frame this is like a high ticket sort of [621] um High ticket sort of sales pitch so [624] I'm going to make this required as well [625] and the idea is you know we want people [627] that have experience selling High ticket [628] items usually High ticket items uh force [631] you to sell in a slightly different way [633] than low ticket items at the end of this [635] we will have [636] a little um thank you screen we'll say [640] thanks for submitting your [643] application I always like to provide a [645] time because I like to be respectful of [647] other people so um we'll review this and [650] get back to you within 48 hours if [654] you're not accepted you'll receive an [656] email [658] notification [660] and we'll say publish okay really simple [663] form problem solved so just going to pop [666] this puppy open make sure that it is [669] everything that I want good um I don't [671] like the power by type form in the [673] bottom right hand corner I forget how to [674] remove that though which is sort of [676] Annoying It's probably in settings typ [679] form randing there we go yeah yeah I can [681] turn that off auto sa progress that's [683] good letters on answers that's good yeah [684] sure [686] whatever now there a couple different [688] ways that you can do this logic [689] um you know like if somebody puts a no [690] and if that's a deal breaker for you you [692] could just not forward the responses [693] directly from type form um I'm not going [696] to do that I'm just going to keep [697] everybody's information in my type form [699] in my head it's like well if you've [701] already filled out the form and you've [702] already expressed interest we might as [704] well have your information right not [706] because I'm going to resell their data [708] on freaking I don't know to like um [712] Chinese spyware or anything like that [713] but just because uh you know if I ever [715] change my mind in the future if I'm ever [717] looking for low ticket sales people now [718] at least I have list of people that uh [720] that I can probably start with before [721] having to do this whole thing over again [723] but any now that we have the type form [725] up I'm going to go in and I'm going to [726] create a make module and just test this [729] so I'm going to [732] say new type form [735] entry new sales hiring form type form [739] entry and what do we want this to do we [741] want to add this to click [743] up so first things first is I'm going to [745] click on this button I'll type type form [749] and then what I want to do is I want to [750] watch responses uh and then I want it to [752] be instant and acid now M has like a [754] little uh configuation between um acid [757] and instant acid um I don't remember to [760] be completely honest and I've never [761] really thought about this or used it [763] generally speaking if there are two [764] equivalent modules and once says instant [766] just use the instant one uh that [767] basically means there's like a web hook [768] trigger going on underneath the hood and [770] it'll run automatically if we were to [772] just choose the acid one then instead of [773] it being this web hook kind of lightning [775] Dash uh thing over here it would be a [778] timer and it was basically just pull [780] every 10 or 15 minutes obviously it's [782] not very operationally efficient we want [784] to minimize op usage however possible [786] without it being like the center of our [788] Lives of course um but the fact that it [789] runs instantly is also important because [791] we want to make sure that we just get [792] their information whenever they put it [794] in I'm going to call this sales hiring [797] form submission and then in the form ID [800] you see I can just already select sales [801] hiring form type form's nice that way [803] and that it just um sorts by uh by newly [805] created and then I'll press enter okay [809] now if you watch my previous videos um [811] you'll know that I have a special [813] two-step sort of type form design [815] pattern it's pretty simple basically we [817] want to get the response in one step and [819] then we want to wait a second or two and [821] then uh retrieve all of our responses in [823] like a sending order of submission or [825] descending order of submission ascending [827] order of submission um so that we could [829] like then map the answers and separate [831] the trigger from um the usage of that [834] information and I'll talk about that in [835] a [837] sec after I sit my extremely way too hot [841] coffee so so I get for hotel coffee [843] makers uh let's go to sleep [846] here well just do like a two-c delay for [849] the purposes of this demonstration and [851] then I want to [852] list all of the [856] responses uh what I'm going to do is [858] select the sales hiring [860] form and then I only want to select [863] one and then I'm just going to Auto [865] onine okay so the reason I do this is [867] because I want to be able to test this [869] form whenever the hell I want I uh I [871] don't want to have to run a new type [873] form submission every time that I want [875] to test I want to be able to just get [876] the last submission and then just like [878] click a button and just have that be [879] used assuming that you know the last [881] time I filled a those with the [882] information that I wanted um this saves [884] a boatload of time during maintenance [886] and testing uh and it's it's essentially [889] like I refer to it as separating from um [893] the usage of the variable I'm sure [895] there's a fancier and more programming [898] sounding way that I could have pitched [899] that but that's just what I do um so [902] this one is watching the responses as [903] you see down here and then this one is [904] listening the responses and what I'm [906] going to do now is I'm actually just [907] going to run this and then I'm going to [908] fill out the form for the first and [909] hopefully the last time with my [911] information so that's my name this is [914] apparently my phone number and then this [915] is my email address I've sold a product [918] worth more than [919] $5,000 and then let's just pretend that [921] I have a loom [923] video sure that's my video okay great [926] I'm going to click submit it's thanking [928] me for submitting my application we'll [930] review this get back in 48 hours let me [931] just make sure that all that's spelled [932] right yes it is um okay and then if you [935] see back here now we have those little [936] Cloud dot things next to the modules [939] that means that we retrieved it this is [941] what a type form I just realized I was [943] really zoomed out hopefully you guys [944] could still see that this is what a type [946] form submission looks like um we have a [949] bunch of different fields here there's [950] definition which use [954] answers um there are ending that just [957] reference a specific ending screen [958] there's an event so they have like IDs [960] for the events themselves and then there [962] are mappable answers and you're going to [963] use mappable answers 99% of the time you [966] see here that that's my first name my [967] last name the phone number I put in the [968] email address the true or false for the [970] product over 5,000 and then the loom [972] video link now you'll then see that we [974] waited for a couple seconds and then we [976] went back and we actually just queried [978] type form again to retrieve the mapable [979] answers here and the reason why is we're [981] going to be using this module's mapable [983] answers not this module's mapable [985] answers so that at any time if I want to [987] get that form that I just submitted I [989] just drag this over here and then click [990] run once and then it pulls it and so now [993] we can just test nonstop extremely [995] quickly and finish out the rest of our [997] flow basically in like two seconds so uh [1001] okay great so now that we have the typ [1002] form responses let's just go through [1004] here and look at the fields we're [1005] obviously going to need the first name [1007] going to need the last name going to [1008] need the phone number going to need an [1009] email uh we're going to have a true or [1011] false here and then we're going to have [1012] a loom video link that sounds pretty [1013] simple to build out and click up so why [1014] don't we do that what I always like to [1017] do is just add a record [1019] um what I usually do is I make the [1021] record the name of uh like the first [1023] name and the last name and I'll actually [1025] store the first name and the last name [1026] separately just because I don't like [1027] having to worry about like random [1029]  associated with uh if you guys [1031] have seen previous videos I have to like [1032] split Tex and then get it it's better [1034] just have like a single source of Truth [1036] so I'm going to hide the columns that I [1037] don't want I don't need a due date I [1039] will keep an assign um because the [1041] assign is going to be the person that's [1043] like responsible for dealing with this [1045] record and we're just going to [1046] autoassign them to be me but you can [1047] imagine how you know if you have like a [1048] virtual assistant or somebody that you [1049] want to manage these sorts of hires then [1051] you can stick them over there and then [1053] I'm going to get to work adding Fields [1055] so the first field I'm going to add is [1056] going to be called um stage and I'm [1059] going to add a few stages one I'll do [1062] intake another one I'll I'll add is [1064] called reviewed a third one that I'll [1066] add is let's pretend I'm doing a [1068] two-stage interview so we'll do [1070] interview one and we'll do interview [1075] to yeah that uh that looks good and then [1079] obviously we'll have like hired or [1080] something just to give us [1082] a a way to look at all the people that [1085] we've hired or have not hired as a [1087] result of us um on that note we should [1089] probably have another field that's like [1090] not or past [1093] or something I'm just adding random [1095] colors here because I don't like my drop [1098] downs not to be [1100] pretty let's just call this no [1104] fit make this ugly and [1106] gray awesome [1109] so I've added it now and I'm going to [1110] move the stage over here to the left [1112] just because I think that's the most [1113] important field [1114] realistically uh and then I want a few [1116] other pieces of information right so [1118] let's go back to our scenario and let's [1119] see what they are so first name last [1121] name phone number email those are simple [1123] so I'll have a text field it'll be short [1125] text not long text and then I'll call it [1127] first [1128] name I'll add another field oh this may [1132] be interfering with some other fields I [1133] have um elsewhere so let me see if I [1136] could hide this [1139] maybe there's contact there is a people [1141] field oh but that selects people in our [1144] workspace um let's just call this first [1149] you guys should call this first name but [1150] I just have a bunch of what are called [1152] like space Fields uh or board fields or [1155] just click up wide Fields called first [1156] name that I've used in previous [1157] automations so I can't use the term [1159] first name um so I'm just going to go [1162] first and then we'll call it [1166] that and then I'll have another one and [1168] I'll call it [1173] last then we'll do another one called [1176] email and we'll just call this candidate [1179] email probably won't conflict yeah there [1183] you go it doesn't uh we'll go phone [1185] number I'll go candidate [1188] phone I'll say [1191] um we can do a drop down with two [1194] options yes or no uh single select and [1197] I'm going to call this [1199] High ticket experience the question mark [1202] I'll just say yes or [1205] no and then I'm going to have a final [1207] field here which is a website field and [1209] I'll say loom video keep in mind this [1213] isn't it's not always going to be a loom [1215] video as we talked about before um but [1219] some the vast majority of people will [1220] probably use Loom because you know if [1222] you're putting that as like a platform [1224] that you guys use in the company odds [1226] are um this is a pretty long field so I [1229] just want to be able to show everything [1232] here let's just do sold High [1236] ticket that way we can shorten it and [1238] that way we can have everything just in [1239] one view which I find important right we [1242] have the first name last name here we [1243] have the stage we have an assign then we [1245] have first name last name again [1246] candidate email phone number sold High [1248] ticket loom video what else might we [1250] need should probably have like a date [1251] updated or something that's usually good [1253] to have so I'll write date and then and [1256] click of different options that you can [1257] pick from there's date created date [1259] updated y yada um let's do created [1263] actually instead of [1264] updated and then this is pretty [1266] important so let's put it right next the [1269] stage okay that looks good it's a shame [1271] we can't fit all of this in one screen [1273] perfectly but we can get we can get [1276] pretty close which I like um the last [1278] thing I'm going to do is I'm going to [1279] group this by the stage field that I [1281] just created so I'll click group and [1283] then I'll go down to stage and what this [1284] is going to do is just just going to [1286] replace that 2D with the stage there and [1288] so intake or reviewed or whatever and [1291] the reason why is because if I had [1292] multiple fields or multiple entries um I [1295] can then just very visually see the [1297] hierarchy of okay this person's in [1298] intake this person's in reviewed that [1300] sort of thing uh which is pretty simple [1304] so yeah okay great so everything seems [1307] to work okay what I'm going to do is [1308] delete everything now and I'm going to [1310] try and set up the integration to [1312] automatically create these using the [1314] input that I'm getting from this type [1316] form so I'm going click this add button [1318] then go to click [1319] up there should be um a module here [1322] called create a task or get a task you [1324] create a [1328] task and then going to go and select the [1331] appropriate board and space super [1332] annoying and click up [1337] unfortunately um folder if you don't [1340] have a folder to house your list and [1342] click up so as you see in some spaces [1344] here I have like a top level folder like [1346] this one called CRM in this one I just [1348] have like a list called hiring pipeline [1350] example if you don't have that then [1351] it'll just call it a folder [1354] list that was pretty confusing when I [1356] first started I like what the hell does [1357] that mean okay great and now we can [1360] select um the information that we want [1361] to specifically put in so if you want to [1364] make this a subtask for instance so if [1365] you wanted to make this like nested [1366] within another task you'd choose a [1368] parent task ID we don't want to do that [1370] we just want to the first name last name [1371] all that stuff and see how these two [1373] modules aren't connected and so this is [1375] actually the beginning of my flow I do [1376] that intentionally just so that I can [1377] can only access information from this uh [1379] module just so that I never get confused [1381] or anything now unfortunately it's sort [1383] of annoying and hard to see um but the [1385] contact information question in type [1387] form doesn't actually have like the [1389] question written up here um it just has [1391] like a a long unique identifier and so [1394] you sort of have to like look and squint [1396] and really pay attention here to what [1397] the previous answer was in my case I [1399] know my first name is Nick so that was [1401] the question last name surve so on and [1402] so forth so what I'll do here is I'm [1404] going to go Nick space survive it's good [1408] what I want the content field is like [1411] the body of a record so if I create a [1414] new one here and then I click on it [1416] you'll see that there's this whole [1416] description field in here where you can [1418] write whatever the hell you want that's [1419] the content field we're not going to use [1420] the content field at all so I'm not [1422] going to worry about that I'm going to [1423] make myself the assign no tags no status [1428] no priority no due date what we're going [1431] to want to do now is fill out these [1432] custom Fields so custom field last here [1436] candidate phone [1438] I think the formatting is going to be [1440] the same but if not this will be a good [1441] opportunity for me to show you how to [1442] parse phone numbers but it looks like [1444] there is a country code sort of [1446] mandatory by type form so probably not [1447] going to need to worry about that the [1449] stage that I'm going to stick them in is [1450] called intake first name is going to be [1453] Nick sold High ticket this is [1455] interesting and this is something that [1456] you know you can get in the habit of [1457] learning um of doing if if you use [1462] clickup okay so basically in clickup you [1465] can either have um in this drop down [1467] that we've created you can either have a [1468] yes or you can have a no right now the [1471] issue is there's no way for us to map [1473] this uh you see that when we select yes [1475] then we try and map we have this long [1477] super crazy unique identifier because [1480] every time you create a new drop down [1481] item in Click up it will like in the [1483] back and they you know system um their [1485] programmers have set it up in such a way [1486] where like every one of these stages or [1489] drop down items is assigned this crazy [1490] long ID um and so at first glance it [1493] seems sort of Annoying It's like well [1494] how the hell can you do it well it's [1495] actually pretty easy if you go to yes [1496] and then you click map you see see that [1498] string if you go to no and you click map [1499] you see another string and so what we [1500] can do is we can actually use um switch [1502] modules in make to get the input and [1505] then depending on the input have one of [1507] these be the output so what do I mean by [1509] this um I'm just really lazy so I'm [1511] going to try and I'm going to store the [1512] no ID up here and then this will be my [1516] yes ID and make him in a right switch [1519] the way that the switch module works if [1520] this is the first time that you're [1521] looking at it is essentially we will [1523] evaluate the first value called the [1525] expression against a list of values [1528] returning the result corresponding to [1529] the matching value what that means [1534] basically is if you look closely this B [1537] is the one value called the [1540] expression so this is the real value [1543] that's coming in from whatever your data [1544] source is this is the thing that you [1546] know we're we're we're pulling and so in [1549] my case that would be the true or the [1551] false and we add this semicolon [1555] here and then if you guys see if you [1558] guys look closely the next um after the [1562] semicolon the next option is your value [1564] one and then your Result One what you're [1566] basically saying is if the value is [1569] equal to the expression then I want you [1571] to Output the result so in this case if [1576] a was equal to B the output of the [1578] switch module would be [1580] one now if you look at the next option [1583] it says a semicolon 1 and then it's a [1586] semicolon B sem equalent 2 what that [1589] means is this is your second value with [1590] the second result and now this is saying [1593] if B if the value two is equal to B [1597] which is the expression then I want you [1599] to Output two and if you look down [1601] underneath the switch statement uh in [1603] the example there there's a little equal [1605] sign and it says two the reason why it's [1606] outputting two is because the input is B [1609] and then the value that it's selecting [1611] is B and then the uh result is two and [1615] so it just matches those two and then it [1616] outputs whatever like the next result is [1620] um right next to Value so if that sounds [1622] sort of weird don't worry it took me [1624] probably like five minutes of just [1626] staring at it and kind of squinting and [1627] what the is going on uh but it is [1629] eventually one of the most useful [1630] modules that you will learn in make [1632] specifically because it gets you away [1634] from having to use routers and routers [1636] is really annoying because routers [1637] aren't very maintainable you can imagine [1639] how we could just use a router here and [1641] we could say well if the answer to this [1642] is yes then I want you to go down one [1644] route and then put yes if the answer to [1645] this is no then I want you to go down [1646] this other route and then press no but [1647] now all of a sudden we have two modules [1649] and that's two things that we need to [1650] keep track of next time we maintain it [1652] and I mean some of these systems are [1653] going to work so long for you guys that [1654] you're not going to touch this for like [1655] two years but then you're going to have [1656] to make a change and then you're going [1657] to have to go back and just reread and [1659] relearn everything that you built two [1660] years ago switch statements are just a [1662] much easier and simpler way to do that [1663] because you don't have all those all [1665] those routes you only have to ever have [1666] to change things once so what does this [1669] look like in practice for us we have [1670] switch our expression one or our first [1673] expression coming in is going to be [1674] either a true or a false because that's [1676] how tip form is going to form out there [1677] this and then what we what we want to [1679] happen is basically we're saying if we [1683] if the input is true then we want to [1687] Output this long string which will help [1690] us select the drop down item if the [1692] input is false then we want to grab this [1694] no field paste that and then output that [1697] okay so I know this can seem sort of [1699] annoying um but you know in order to [1702] test this actually I'm just going to go [1703] through and then create a new module let [1705] me just put the rest of these fields in [1708] so I know that sounds sort of annoying [1709] but let's just do set um multiple [1712] variables and let me just really quickly [1714] show you what this [1716] means we're just going to paste all this [1718] information [1719] in and then I'm going to run this have [1722] you ever sold a product worth more than [1725] $5,000 this should be a true or false [1727] yes okay great so have you ever sold a [1730] product worth more than $5,000 you see [1732] the output is this long string when I [1733] said true now let's run this again and [1736] then let's say no [1739] now you see it this long string which [1741] was corresponding to the no dropdown [1743] item in uh in clickup and so what's [1745] going to happen is this module will [1746] output that and then click up we'll see [1748] that and then it'll use that to say oh [1751] they want like the no dropdown item and [1753] then that's how we're going to select [1754] the no hope that makes sense just make [1756] sure to map on here uh and then you'll [1758] have that field open and accessible to [1760] you okay great now that we're done with [1762] all this why don't we actually go ahead [1763] and test this module uh what are we [1765] expecting to do well I filled out a form [1766] with Nick [1767] my first name last name my information [1769] all that stuff and what I want to happen [1772] is I want there to be a new record in [1773] here at the end of this called mixar um [1776] that's you know Group by stage and that [1777] has all that stuff um correctly filled [1779] in so I'm going to click run once it's [1780] going to grab the record and then you [1781] can see it's already done um doing what [1784] it needs to do in clickup and you'll see [1785] that it added all that information [1787] successfully the cool part about this is [1790] again anytime I want to retest this all [1792] I do is I run this again so I'm going to [1793] do this and it's going to put the same [1794] record in so now I have two Nicks [1796] arrives easy peasy lemon squeezy right [1799] and so anytime I want to like screw with [1800] any of the functionality or whatever [1801] this is this is how I do it um one thing [1804] that I've realized that I put in my [1807] actual system but I didn't put in this [1808] system is I didn't put in a rating um [1810] system I I like to have like some type [1812] of star rating field thing um you don't [1816] need this of course uh if you aren't [1818] hiring too many people but in my case I [1819] was hiring like what 100 people a day or [1821] going through like 50 to 100 people a [1823] day at one point so it was important for [1825] me just to be able to rate people on a [1826] scale from uh four to five or whatever [1829] so if you wanted to do that you would [1830] put in this rating field and then you [1832] could Define the number of um stars that [1834] you know you want to rate people by you [1836] can even Define the emojis that you want [1838] maybe I want it to be like a thumbs up [1839] field um and then you can just have that [1841] as like part of your part of your flow [1842] I'm not going to do that for Simplicity [1844] because I don't want to make this video [1845] too long but suffice to say that's that [1847] let's pretend we had one nixar here in [1850] reviewed and then now I can just reuse [1852] this module just to create a bunch more [1854] nixes so I'm just going to create two [1856] more [1858] I'm going to add this next arrive to [1859] interview one and then I'll add this [1860] next drive to interview two okay great [1863] and now I think you can start to see how [1865] a pipeline is forming here um you know [1867] from a bird's eye view we have one [1869] person in intake one person reviewed one [1870] person interview one one person [1872] interview two gets a lot simpler sort of [1873] as you're navigating through the process [1876] uh what you can also do is had some type [1878] of standard operating procedure where if [1879] a person is um I don't know if you know [1883] in order for a person to move from [1884] review to interview one maybe the [1886] manager has to jump in here and then [1887] leave a comment saying I really liked [1891] Nick's application his videos were [1894] awesome and he has a ton of experience [1896] selling High ticket stuff maybe that [1899] just becomes part of your standard [1900] operating procedure for like [1901] accountability purposes within the [1902] company you know if like the CEO or [1904] something ever wants to look into hiring [1906] well now they have like a backlog of [1907] comments and rationale as to why uh a [1910] manager did or did not hire [1913] somebody so it's pretty nice um but [1915] where do we go from here well ideally [1917] what we want to do is we want to [1918] automate this we want this to be like a [1919] really simple straightforward automated [1921] process um and the way that you do that [1923] is use clickup as like the single source [1925] of Truth this is the only place that [1926] anybody ever needs to log on and then [1928] what you do is um you use web hooks to [1931] uh create actions from triggers like [1933] when somebody makes it to interview [1934] stage one or interview stage two and so [1936] what I'm going to do here is I'm going [1937] to have two uh stages I'll have or two [1940] automations I'll have one for interview [1941] stage one and then another one for [1942] interview stage two that send an email [1944] out to the candidate email listed here [1946] essentially just saying hey you know [1947] congratulations you made an interview [1948] stage one we'd love to book a call with [1950] you here's a link to a calendar please [1952] book sometime in the next week and then [1953] assuming that it's a fit uh we can move [1955] forward to interiew stage two and then [1956] finally you know give you guys the job [1959] so that's what that process is going to [1960] look like obviously we built out these [1961] flows multiple times at this point so [1963] that's not going to be super difficult [1965] or anything for now I'm just going to [1967] move this back and then I'm going to [1968] save the flow and then I'll turn this on [1971] uh again now this is basically watching [1973] responses as they come in and then we're [1974] using this as the data [1976] source so that's number one number two [1979] we're going to [1983] call um clickup stage equals let's do [1989] interviewing one send email inviting [1994] candidate to interview and you can [1996] imagine how um you can build out this [1998] flow for like a a recruitment company [2000] pretty easily and recruitment companies [2002] manage this sort of thing all the time [2005] now if you guys remember from a previous [2006] video I love you using web hooks for [2007] this I don't actually like using [2008] built-in um clickup modules or anything [2011] like that I basically just love using [2013] web hooks because it just gives me so [2015] much more freedom over every aspect of [2017] the process so what I'm going to do is [2018] I'm going to go through click up and [2019] then in the top right hand corner I'm [2020] going to click automations and then I'm [2022] going click add an Automation and then [2025] what I want as a trigger is when a [2027] custom field changes right here and the [2030] field that I'm looking at specifically [2032] is called stage and when it changes to [2034] interview [2035] one what I want to do is as a trigger I [2038] want to go down and then I want to call [2039] a web hook and then I need to get my web [2042] hook URL so I'll say [2045] hiring sales hiring stage equals [2048] interview one that'll be the name of my [2050] web hook then I'll copy this address to [2052] my clipboard paste this here now every [2055] time the stage changes interview one I'm [2057] going to be sending a request and so I [2060] want to test this first I'm just click [2061] run and then I'm going to change this [2065] Nix let's just change this name before [2067] it kill ah actually no I'm not going to [2069] change this name okay let's just delete [2071] this nixar first so we don't have like a [2072] million ones in interview one and then [2074] why don't we change this to interview [2075] one see what happens so I just changed [2077] it to interview one uh you'll see that [2079] clickup is really fast with this so I've [2080] already received the web hook and let's [2082] take a look at this payload it's huge [2084] there's the ID there's the name of the [2086] record the status um I go to in a custom [2089] Fields you'll see every field that I [2091] have is also listed [2095] here you will notice though though that [2097] it's a little Annoying In so far that [2101] um uh this stuff is like if I wanted to [2104] access a specific field I couldn't do it [2107] simply I'd have to like go into an array [2109] indexing thing and then I'd have to or [2111] I'd have to like try and map um the [2113] custom field with the ID equals to this [2115] and so what I usually like to do in [2117] stages in setups like this is I like to [2119] get the ID from the web hook and then I [2122] like to go back and then call click up [2123] again and this is just another simple [2125] two-step design pattern [2127] where um you'll just essentially just [2130] always have easily accessible and easily [2133] maintainable info so I'm just going to [2135] test this again by moving the first [2137] record back to reviewed and then I'll [2138] move it back to interview one um [2140] sometimes clickup doesn't get this [2141] instantly uh because it's a little bit [2143] laggy but it looks like it did in this [2144] case and you'll see how we we received [2146] the ID and then in the second module we [2149] fed the ID into the clickup get a task [2151] module and now if we go down to custom [2153] Fields you have basically a very easily [2155] accessible named list with stage first [2157] name first okay it looks like I have two [2159] Fields called first which is sort of [2161] weird but just ignore that um candidate [2164] email candidate phone sold High ticket [2165] all that stuff so that's that now what [2168] are we going to do with this well what [2170] we want is when the state changes we [2172] want to get all the the contact [2173] information here and then we want to [2174] send out an email and we want the email [2177] to include uh link to the [2179] calendar so let's just do send an [2183] email email we're going to send it from [2185] is just info it's always good to get in [2187] the habit of doing the email address we [2189] are going to send from or to is going to [2192] be the candidate email here and then [2195] it's going to be congratulations we'd [2197] like to [2198] host to have you for an interview and [2201] let's do congratulations first name [2205] really give them that nice automated [2207] sexy [2209] experience you know and little stuff [2211] like this um will really impress a lot [2213] of hires because most companies have [2215] just the most atro I hiring practices [2218] ever our team loved your video and the [2221] rest of your [2223] application we'd love to extend an [2226] invitation to learn a little more about [2229] you over a [2233] call if this is still something you're [2236] interested in please book a meeting with [2240] our manager let's just say Nick using [2244] this link um I'm just going to grab like [2246] a random [2247] cal.com link here and then since this is [2250] HTML I can use tags one tag that I'm [2252] going to use is the a tag which is a [2253] link tag and I basically you paste in a [2256] link here and then whatever you do after [2258] this closing tag is like the text that [2259] will be highlighted with the link [2264] um so let's do [2275] that [2285] okay that's that that looks pretty good [2287] to me um we don't need any attachments [2289] or anything like that we're not going to [2290] save the message after sending what I'm [2292] going to do is I'm just going to test [2293] this [2294] puppy so let me save this I'm going to [2296] click run and then what I'm going to do [2298] is pretend that I loved Nick's [2300] application so much that I am now [2303] extending him an interview request so I [2305] just moved into interview one we got the [2307] web hook we got the clickup information [2309] and then it says here we sent the email [2311] which is nice I'm going to go and log on [2314] to my email which is somewhere here and [2315] just see if I got [2318] it yes looks like it congratulations [2321] Nick we'd like to have you for an Nick [2322] our team loved your video and the rest [2323] of your application we'd love to extend [2324] invitation to learn a little bit more [2325] about you over a call if this still [2327] something you're interested in please [2327] book a meeting with our manager Nick [2328] using this link here's a link we look [2330] forward to meeting you let us know if [2331] you have any questions thanks best [2332] wishes the one second copy team quite [2334] nice quite sexy um and now we have at [2337] least some automated way of contacting a [2340] client simply by changing you know a [2342] stage from uh one to another now one [2345] thing that I like to do here and one [2346] thing that this is like the most this is [2349] like the nerdiest and like the best [2350] practices that I'll ever I'll ever do um [2353] I like to add an update to a task every [2355] time I send an email to some um I think [2357] it's called a task comment here yeah so [2360] the reason why is I I just want the [2361] hiring manager to see that there was [2363] some history of communication between [2365] our company and the prospect effect so [2366] that again if there's ever like any [2368] accountability issues or we need to like [2369] look back in time and see what's going [2370] on uh we'll just see like a like an [2372] update having been added to that record [2374] and so what I'm going to do is I'm going [2375] to go grab the task ID now a good design [2378] pattern to get in the habit of doing is [2379] always use the same trigger for our uh [2382] same module if you're using IDs or [2384] mapping anything like that um just tends [2386] to help and then what I'm going to do is [2388] I'm just going to paste in the um body [2390] of the message the same thing that I [2392] that I pasted in here so sort of [2394] annoying but I basically have to just [2395] copy and paste this [2398] again and you can get around copying and [2400] pasting the exact same message by um we [2403] could have like another module here and [2405] we could call it [2408] email we'll just [2412] say and we'll just call this email HTML [2416] and maybe I could just paste all this [2417] stuff in here um this around basically [2421] if you ever find yourself reusing the [2422] same [2424] um the same variable over and over and [2427] over again it's better just to pull from [2429] a pull from a module that's what I'm [2431] going to do [2432] here then the task commment I'm going to [2434] post just going to be the same HTML and [2436] that way if I ever want to change the [2437] next two modules I all I do is I change [2440] this so I'm going to save that and then [2442] we'll test this one final time uh for [2444] sanity so move this back to [2447] reviewed now this is here and then I'll [2449] go to interview [2450] one this is waiting just uh received it [2454] okay great we got the task okay great we [2456] set the email body here okay great looks [2459] like we sent an email awesome and then [2462] we posted a task comment awesome if we [2465] go over here now and we click on the [2466] body of this you'll see that uh it's [2468] pasted in the email uh clickup and Gmail [2471] both have slightly different email [2472] formatting rules so this HTML is [2474] actually being displayed directly in the [2476] message obviously we could fix that if [2477] we wanted we could just replace all BRS [2479] with new lines or something like that [2481] I'm not going to worry too much about it [2482] uh basically this is like now the single [2484] source of Truth saying we sent them this [2487] exact email and anybody that looks at [2490] this later will know that they've you [2491] know received that [2493] request now we can add a couple of other [2495] automations here we could for instance [2496] have something that scans through all [2497] open tasks once a day and it could check [2500] to see how long they've been in [2501] interview one for um so you could have [2504] like another stage here called like date [2506] move to stage and then you could use a [2508] clickup automation that looks to see [2510] what was the date that they were [2511] initially moved to interview one let's [2513] say it's February the 24th and then what [2515] you calculate the distance between [2516] February the 24th and the current day [2519] and you could say okay this person's [2520] been in the stage for8 days now but [2521] they're still an interview when they [2522] haven't really moved forward with the [2523] process what you can do is every day [2525] scan through all of your open applicants [2527] here automatically maybe using 10 Ops a [2529] day or something totally worth it and [2531] then if that value is greater than 10 [2533] send a follow-up email being like hey [2534] just double checking it to see if you're [2536] still interested in this if not we're [2537] going to resend our invitation you can [2539] do something like that extremely easily [2541] uh but I'm not going to get into that [2542] because I think that's sort of just like [2544] same level stuff that you guys already [2547] understand [2547] instinctively okay great so that's [2549] interview one now what we're going to do [2551] is I'm just going to copy this exact [2553] same flow so just copy all those [2556] modules do this [2559] for clickup stage interviewing three um [2563] and the really cool part about make.com [2564] is you can just copy all the modules [2566] open up a new one and then paste them in [2569] and so [2570] um I [2573] think send email inviting to to [2576] interview stage I think I wrote my title [2578] as something like this what you will [2579] have to do is you'll have to create a [2580] new web hook so we'll [2583] do [2586] um we'll do interview two [2590] here now I'm going to go back here and [2593] then create that same automation just by [2595] duplicating it in the current location [2597] and then instead of stage or interview [2599] one we'll do interview2 and then the [2602] address that we're going to use for this [2603] is here this is about how fast I'd [2605] develop it in real life if I were you [2608] know not just showing you all so um [2611] we'll give that a try the hook already [2613] has a scenario assigned oh I must be [2615] using the same web [2617] hook what don't we say uh it might be [2619] one of these other web hooks actually [2621] now that I'm thinking about it let me [2623] just make sure that we can run this I'm [2626] going to go back to interview [2628] one chug this out to interview to see [2631] what happens awesome we received the [2633] payload that looks good now what we're [2635] going to do do is get the payload ID [2637] again set the email [2639] HTML um I just make sure that [2641] everything's good here yeah should be [2644] fine hi [2646] blank thanks so much for the great [2648] interview our team it was great getting [2652] to know [2655] you let's [2658] do we'd like to invite you in for our [2662] final [2665] interview assuming after after this [2669] assuming you're accepted you'll receive [2672] a job [2674] offer and be invited to work directly [2677] with us please book using this [2681] link maybe now we're meeting with the [2683] CEO so we'll say Peter's calendar we [2684] look forward to learning more about you [2688] let us know if you have any questions [2689] thanks awesome that looks good um and [2692] then because we use the same email HTML [2695] here we should get to go so I'm going to [2697] rock this back to interview one you'll [2700] see nothing has changed here because [2702] this is only monitoring interview [2704] 2 uh now we're going to go and pull the [2707] interview 2 HTML and we [2711] should have now both like an updated log [2714] of all the comms oops wrong one of both [2718] of [2719] these yep and we also if I check my [2722] email now we'll have both emails sent [2727] so again the first one that we sent was [2729] this up here and the second one that we [2730] sent is this down here you can see how [2733] you can build out you know arbitrarily [2735] complex and automated flows using a [2737] method like this which is cool um of [2739] course you do the same thing with the [2740] hiring package you could set a web hook [2742] here uh when somebody's hired you could [2743] automatically send them over all the [2745] stuff that they need in order to be [2746] hired so maybe you could send over like [2747] a job offer maybe you could send over an [2749] agreement automatically whether they [2750] have to sign and send back to you you [2752] could do all sorts of things but from a [2753] bird's eye view this is more or less [2754] what it looks like um one final thing [2757] that I'm just going to touch on and I'm [2758] not going to build is a lot of people um [2761] that watch one of my previous videos are [2762] probably wondering can you update the [2765] stage or status of the client of the [2768] candidate using like a cal.com [2771] uh booking Trigger or can you like get a [2775] web Hook when somebody books using that [2776] calendar link and use that to update or [2778] add a comment or something you totally [2780] can um cal.com and cley and all these [2782] services offer web hooks that allow you [2784] to add another module [2786] sorry to add another scenario and then [2789] um use that scenario to automatically [2790] update this to maybe like maybe it's [2792] like interview one meeting request sent [2794] interview one meeting booked or [2796] something right they're they're slightly [2797] different um semantically but yeah you [2799] can you can make it essentially as [2801] complex as you want I'll be honest [2803] though um usually this is worth at least [2806] like a few minutes of somebody's day and [2808] so I don't always want to automate the [2809] hell out of everything too much because [2811] sometimes it doesn't really have [2812] functional utility if you consider the [2814] bottom line impact that a good hire can [2815] can have on your company versus a bad [2817] hire you it's usually in the realm of [2819] like $50 to $100,000 a year uh and so to [2822] me when I think about Roi $50 to [2824] $100,000 a year is worth having somebody [2826] spend at least a few minutes just doing [2827] some of the stuff manually just in case [2829] there are any errors with the automation [2830] or anything like that so always keep [2832] that in mind that is it for our video on [2836] setting up a hiring pipeline again this [2838] is the exact same sort of hiring [2839] pipeline that I use at my 7 figure [2841] agency and a ton of the companies that I [2842] work with now use at theirs this is how [2844] you can process between 50 to 100 [2846] applicants per day um and you know [2848] automate all the mundane routine boring [2850]  like sending out emails updating [2852] requests logging information and that [2854] sort of thing hope you guys like the [2856] video if you guys have any comments [2857] you'd like to leave feel free to do so [2859] down below everyone helps like subscribe [2862] and let me know what else you'd like to [2863] see in the rest of the course because [2865] we're actually starting to come up to [2867] the end of it um we still have like [2869] three or four left I think but we're [2871] actually working our way through which [2872] has been quite surprising any who thanks [2874] so much for watching have a great rest [2875] the day [2879] byebye

Video: https://www.youtube.com/watch?v=EoSIBPJ4ilM
Title: How to Automate Slack with Make.com
[0] hey everybody welcome to another round [2] of make.com but for people who want to [4] make real money I find myself in a [7] random hotel room for the second time [8] this week but I'm not going to let that [10] stop me I'm recording a high quality [11] video on one of the most common use [13] cases that I usually see coaching [15] companies reaching out to me for which [17] is automating a large portion of their [19] slack Communications and so what I'm [21] going to do in this video is I'm going [22] to build an extremely viable automation [25] that I use for my own business and that [26] I sell to many other businesses that [28] involves instantly . a which is a cold [31] email Tool uh make.com obviously uh gp4 [35] we're going to do some AI stuff and then [36] we're going to dump the results into a [38] slack message so you're going to learn [39] everything from start to finish I'm [40] going to make it as extremely simple as [43] humanly possible and now that you know [45] about web Hooks and about apis we have [47] everything that we need to build this [48] more complex system that sounds like [50] something you're interested in then stay [52] tuned and I'll see you guys in a [58] sec okay so what do we have here in [61] order for you to build this specific [63] automation you're going to need an [65] instantly. A account now you don't need [67] need an instantly. account you can build [69] out a very similar automation with any [73] data source on the front end whether [74] it's like Facebook lead ads or um I [78] don't know like Instagram messages or [80] anything like that I'm just using [81] instantly because my own agency gets a [83] lot of leads through cold email well at [85] least we did until I started recording [86] YouTube videos all day um and you know [89] instantly has a bunch of very simple [91] system setup to allow us to basically [93] just like send a new request every time [95] a reply uh is received in response to [98] one of our campaigns so if you're [99] unfamiliar with instantly just a cold [101] email tool you can set up campaigns and [103] sequences and that sort of thing um [106] stuff like you know this for instance [108] and then you can add basically unlimited [110] mailboxes on the front end um here so [112] you can see I have like 15 or 20 [114] mailboxes set up um and then you can [116] distribute like email volume across [118] those mailboxes so extremely valuable [120] tool not going to harp on this too much [122] because I have several videos out on [124] this but yeah check it out if uh it's [126] the first time that you're hearing about [127] it now the specific flow we're going to [129] be building today is going to look [130] something like this so we're going to [131] use a web hook to catch incoming replies [134] from instantly and they have a feature [136] allow to do that which is nice we're [137] then going to use AI to filter the email [139] um and you can imagine how if you're [141] using a simpler sort of data source like [144] maybe Facebook lead ads or something [145] like that you're not going to need to do [146] any filtering because odds are you just [148] want to like forward a lead to a slack [149] Channel or something uh but in in my [151] case I want to make sure to only forward [153] new responses that are high quality and [155] new responses that are interested to [156] that slck channel because realistically [158] you get like 30 or 40 or 50 email [160] responses a day um then we are going to [163] do a little bit of parsing uh it's the [164] first time we're going to use like [165] procedural parsing which is going to be [167] fun and then uh if you know it's like [170] not an unsubscribed message basically [172] we're going to shoot over a slack [173] message using a specific type of [176] formatting called um slack blocks [178] formatting uh and and I'll dive into [181] what that looks like later but I am just [183] going to be copying this down because [184] it's sort of a pain in the ass to build [185] from the ground up so that's what we're [188] going to be doing this video uh and [189] let's get started with the first part of [191] that build which is probably the [193] simplest which is just connecting the [194] web hook so I'm going to call this uh [198] well I'm just going to call this this [199] because that's basically exactly what [200] I'm doing so I'm going to copy over that [203] name and then I'm just going to call it [204] like example lead capture just to [207] differentiate between the two first [209] thing I'm going to do is click on this [210] little button and then type web hook [213] this is going to open up the web hooks [214] module and then I'm going to get custom [216] web hook and then I'm going to add a new [219] module or a new web hook called um let's [222] do new [224] instantly reply and then I'll just call [226] it example build and then I'll also say [228] February 23rd [231] 2024 I'm going to copy that address to [233] my clipboard and I'm going to go over to [234] instantly now instantly has that feature [236] where I can set up web hooks I don't [238] remember where it is though so we're [239] going to find it [241] together okay Integrations that sounds [243] pretty good okay awesome yeah so it [244] looks like they now actually have like a [246] direct slack integration which is pretty [248] cool uh we don't want to do that though [249] we want to do web hooks you'll see they [251] have a bunch of other features they have [252] like um API key so you could screw [255] around with the instant API if you want [256] you can do direct zapier Integrations [259] looks like they have some open AI stuff [260] now which is maybe where like they can [262] automatically respond for you I'm going [264] know that sort of thing but we're going [265] to use this web hook feature so I'm [267] going to click ADD web hook paste in the [269] web hook URL [270] and then down here you can select the [272] campaign that you have specifically so [274] um I'm just going to use test campaign [276] because we're not actually going to [277] receive a response of the course to [278] email and then you'll see down here [279] there are a bunch of events that we can [280] choose so uh the good news about [282] instantly is you can select you know [285] fire web hook every time an email is [287] sent so maybe you want to do something [288] like update a record in your CRM to show [290] that an email is sent you can do email [292] bounced um email opened although I [294] actually never track email opens that's [296] topic for another video link clicks uh [298] reply received lead and subscribed and [300] then there are a bunch of sort of like [302] automatic AI tools where um instantly [305] we'll try and evaluate whether or not [306] the lead is interested I don't use this [308] because I find it's usually much worse [310] than something I can design on my own so [312] what I always do is I'm just doing reply [314] received okay great so I added the web [316] hook now what is this going to do this [317] means that anytime somebody replies to [320] one of my sequences I'm then going to [322] have a web hook with the reply from that [324] email uh that I'll be able to use like [327] I'll have like the reply text I'll have [328] all that information which I'll be able [329] to use to like build out the rest of my [331] flow and the end result is it's going to [334] be something like this and I only know [335] this because I built a specific flow out [337] but I'm using an app called left click [339] which is just my own internal um slack [341] app uh it says Nick just generated a [343] warm lead so salesperson just generated [345] a warm lead with like some confetti [347] there's a link to um the uni box from [350] instantly where somebody can click [351] through and then manage this and then [352] there's like a message from this person [355] so it looks like this lovely person [356] themba I'm totally going to butcher that [358] last name but offered to let me give [361] them a call on November the 208th 2023 [364] which is back when I was running a [365] specific campaign and because of the [368] slack block formatting you can see how [371] it's spaced out nicely we're using like [373] header tags and that sort of thing this [375] is basically what we're going to be uh [376] what we're going to be moving towards [378] but any who so um great so we have that [381] web hook set up now I don't know if [383] instantly has a testing feature I don't [385] believe that they do which is sort of [387] unfortunate uh because it would be nice [388] to be able to test this web hook flow um [391] so what I'm going to do here is the next [394] step uh is we're going to add a gp4 [396] sequence so a completion [399] sequence right over here and then we'll [402] do this so you're going to have to add [404] your openai API key as a connection if [408] you haven't done that already and then [409] the method that we're going to be using [411] is create a chat completion which is [412] just sort of back and forth speaking [414] with these models now I find that using [417] the gp4 um uh endpoint just the one that [420] says gp4 is usually a little bit shitty [423] uh the reason why is because if you just [424] use like the base GPT 4 it'll always [426] default to the newest version and open [429] aai has sort of vested self-interest in [431] reducing their internal cost so they [433] will always try and shun you on like the [434] shittiest version of gp4 available um so [438] it's usually like gp4 turbo the quality [440] of this model is just less I mean it [441] costs you less to use but the quality is [443] less so if you wanted to do things that [445] are maybe a little bit more um [447] cognitively or computationally demanded [449] I'd always recommend um picking a [451] specific version and then building a [453] prompt and optimizing a prompt for just [455] that specific version um and then you [457] know worrying about changing it later uh [459] because every every version that you [461] choose you're basically going to have to [462] like prompt optimize from uh from the [464] ground up again but any you can see how [466] there are a bunch more down here like [467] gbt 40125 preview gbt 40314 that's not [471] deprecated I use that for a long time [473] 0613 32k I mean by the time you guys are [476] watching this video it'll probably be [477] quite uh quite different but let's see [480] what I used back here okay so my dumbass [482] did just use the Bas GPT 4 model um so [485] despite all the poetic I was just waxing [487] I'm just going to end up using it [489] anyway uh the role of the first line of [493] messages is going to be system I'm just [495] going to copy over my prompts from here [496] because I'm cheating and I'm a little [498] bit lazy also I've been sleeping like [500] four hours a night uh something about [502] just like the Toronto skyline man so [505] bright and I don't have blackout [506] curtains in this [508] hotel um the second prompt is going to [510] be user prompt and you can sort of infer [513] what this is doing but I'm just saying [514] hey below is an email reply to an [516] outbound campaign I want you to [517] categorize into one of the following [518] outcomes positive not interested or [520] unsubscribe they ask a question or don't [522] fall into any of the other categories [524] just write interested and my idea is [526] what we're going to do is um if somebody [528] is really pissed off at us and they're [529] saying hey you guys I don't want to [531] talk to you ever again stop emailing me [533] well obviously we don't want to send [534] them an email again right so we're just [536] going to Auto unsubscribe them and um we [538] want you GT4 to be able to pick up on [540] that but if somebody is like hey this [542] sounds pretty interesting I'm just not [543] super into it right now I need another [545] six months and you know then our [546] business will be able to align [548] priorities on this uh we still want to [550] like log that as something and then we [552] want to maybe just have them available [553] for a follow-up sequence later uh and [555] that's what my not interested um status [558] is uh if they are interested and if you [560] know they want to book a call or [561] something like that then obviously gbd4 [562] is going to understand that that is a [564] positive reply and all positive replies [566] are replies that are going to be forbit [568] over to the slack so that A salesperson [570] or maybe somebody just in charge of [572] monitoring like customer success manager [574] whatever a coaches Define their roles as [576] uh will be able to see it and usually [578] this is a lot better than just having [579] somebody in charge of an email inbox [580] because in an instant messenger I don't [582] know what it is it's like a [583] psychological thing but it's also just [585] like uh like a notification thing people [587] are just much more likely to respond the [589] average response time on an instant [590] messenger is like a quarter of uh of [592] what it is through email so we're [594] attempting to get these positive replies [595] to pump them into slack and then just [597] have somebody be notified uh that's how [599] I'm going to do it next up I'm going to [601] provide some examples of what the email [603] body is going to look like and so in my [605] case I'm going to go back and do another [607] user prompt so it's going to be user [609] instructions up here and then user and [611] assistant pair responses and you'll see [613] how my first example was hey Nick yeah [614] for sure this sounds like it has [616] potential Peter you'll see I'm using new [618] lines here new lines um this is just [620] like a way that both GPT but also a lot [622] of um email [624] clients understand um new lines and if [627] you think about like a new line uh [629] really like in an email it will say [630] something like this hi Nick yeah for [632] sure this sounds like it has potential [634] um but I'm attempting to compress the [636] message that's being sent and I'm also [637] just attempting to um attempting to [640] account for you know maybe email [641] services that um replace all actual new [645] lines with this new line character if [647] that doesn't make sense to you then [648] don't worry too much about this it's [649] just a minor optimization but it's what [651] I do to ensure that things go well and [654] then afterwards I'm just going to train [655] it on what I want the assistant to think [657] so in this case I want it to see a [659] response like this and then I want to be [660] like that is a positive reply and you [662] can see the way that I'm doing it is [663] with the JavaScript object notation [665] where I'm having the assistant respond [667] and say category positive and this is [670] really important I want it to respond in [671] Jason because I want to be able to parse [673] that message in Jason later now I don't [675] just want to do one example I want to do [677] several so I'm going to have another [678] response that just says no and stop [680] emailing me take a wild guess as to what [682] category I want the assistant to respond [684] to that with obviously [687] unsubscribe and then I'm going to do a [690] couple more I'll do a user one that says [692] hey Nick what did you have in mind and [694] then it'll be from this lovely Simone [697] person and I want to count that as [700] positive as well because if somebody's [701] asking a question odds are you know they [703] probably want to continue the [704] conversation in some respect uh and then [707] this one I want to do like a [708] not-interested one so this is a longer [711] uh a longer message that says hey Nick [712] apologies for the delay I had some last [713] minute travel I don't think I'm the best [715] person for this but I'll pass on your [716] request blah blah blah blah blah and [719] then I'll just write not interested from [721] the assistant and then now I think I [723] have everything I need to know just to [724] go straight to the user [726] prompt you can see how on my actual flow [729] I have like five or six different [731] prompts and I'm just being as um I guess [734] as as thorough as possible and I was [736] willing to spend money um spend more [738] money in tokens to have this sorted uh [740] back then uh but nowadays I'm I'm not [743] really worried too much about this is an [744] example flow uh I was receiving like 50 [747] or 60 responses a day at the time so I [749] did really enjoy having AI um filter the [751] ones that were negative of course uh [754] both for my sanity and also for my time [756] but is what it is now uh what you'll [758] notice is if you click on the message [761] content because we haven't actually [762] received a web hook yet we don't [763] actually have an example of what the [765] data looks like here's a quick hack that [768] you can get um that you can use to get [770] around this and I don't want you to rely [772] on the hack but I'm going to show you [774] the hack anyway because it saves me a [775] lot of time and now that I'm sort of [777] experienced with make.com I can kind of [778] get how this works under the hood I [780] didn't understand this for probably like [782] 6 months so if you're before 6 months [784] and you're learning this consider [785] yourself better than me um at the point [787] that I was at in my career um but I'm [790] also going to show you how to like do it [792] normally and how like you should do it [794] um the only reason why like I I'm sort [796] of hesitant to show you or the reason [798] why I'm showing you these two methods is [799] because instantly historically it's had [801] sort of a slow web hook response where [803] it can lag for like 2 or three minutes [804] and I just didn't want to have to sit [805] here and just wait for 2 or three [807] minutes on camera so here's the back um [809] if you know what the variable is called [812] so for instance this is the old flow [813] that I built out and you see how it's [815] called reply uncore text if you know [818] what the variable is called and if you [820] know the number of the module which in [822] our case is [823] nine even if you don't have a selector [826] over here in the star you can still [828] recreate this and you can have this [829] select it on the first run what do I [832] mean by this well if I just try to copy [833] this from my other scenario and then [835] paste this in you see how it's black and [837] it says 9 reply text well black just [840] means that that module doesn't exist [842] however I do know that the module one [844] exists so this one's called module 9 but [847] in my flow that I'm currently working on [848] it's modu one so the way that make does [850] this under the hood is they have a [851] format that looks like this it's curly [854] brace curly brace it's the number of the [856] module so in my case one and then it's a [859] period and then it's the name of the [860] variable reply text and then it's curly [862] brace curly brace so you see how now [865] this one's red but it's sort of hollow [867] red or an outline but then you know the [870] inside not being filled just means that [872] it's a variable that is connected to a [874] module that exists but we don't know if [876] the variable exists now obviously in our [878] case we know that the variable reply [880] text exists because I used it in a [881] previous module um but that's how you [883] get around um selecting things from [886] previous modules that may or may not [888] actually be um sorry I think I just like [891] switch back and forth five times that's [893] how you get by selecting data from a [895] previous module that may or may not [896] actually be accessible to you on the [897] right hand side so like you know my mind [900] is is very familiar with how make.com [901] works now so um if you've noticed in [904] previous videos a lot of the time I'm [905] like trying to reconnect the two modules [907] to like get it to uh show the variables [909] on the right hand side a lot of the time [911] I don't even do that anymore just [912] because I know okay I'm looking for you [914] know module number. uh variable unor [917] name most of the time and it's pretty [919] self-explanatory and pretty simple to to [920] push through any who so that's what that [923] looks like um I know that this works so [925] I'm just going to press enter here um [927] and then what I'm going to do is I'm [928] just going to write I'm going click run [930] oops not run once I'm going to run over [932] here and then I'm just going to add in [933] like an a random reply text just to test [935] my model uh and usually you should test [938] this probably like four or five times [939] just to make sure that your prompt is [940] good enough and you have a reasonable [941] enough success rate I know that this [942] works pretty well so I'm not going to [944] worry too much uh too much about it [946] first one I'm going to write is just [947]  off and I'm going to see if it says [949] unsubscribe it should so choices message [953] okay category un subscribe great second [956] one I'm going to say hey Nick [960] this sounds great men but we're just a [963] little busy right [966] now maybe follow up in a few months okay [970] and then I'm going to say and N uh Peter [974] pretend that Peter is sending [976] this now this is sort of a tricky one uh [979] because I said this sounds great so it's [981] not a completely unsurprising that [984] instead of us categor categorizing this [986] is not interested which is what I [987] initially wanted to ciz is interested in [990] my case this is okay um I would still [991] want like a salesperson to get a [993] notification like this and then maybe [994] create a followup in their calendar or [995] something like that um but any who the [998] last one is just going to be very simple [1000] I just want somebody to be like this [1001] sounds awesome let's do this is awesome [1005] I'd love to talk call me and then I'll [1008] just put a random phone number this [1010] should obviously be interested so let's [1011] go choices one message category is [1015] positive H I don't think we have a [1017] category called positive so that's [1020] unfortunate um no we do have a category [1022] called positive uh what we don't have is [1025] oh yeah yeah I uh actually screwed up [1028] the prompt here I should have said write [1030] positive not interested previously I had [1033] write interested and I got a little bit [1035] confused so yeah I'm going to put uh [1039] positive down here as a catch all my bad [1042] I'm going to copy this just so that I [1043] have it and then I'm actually going to [1044] go back to my original prompt here which [1047] was clearly edited and then I'm going to [1049] save that just for next time okay great [1052] so now that I'm pretty happy with how [1053] this thing uh works conceptually I'm [1056] going to try and email myself once with [1060] this test [1062] campaign uh which is sort of annoying to [1064] do but let me first select all the leads [1068] I'm going to delete all these [1070] leads add a new lead we're going to [1073] enter my own email [1077] manually [1080] and then uh I'm going to import the [1083] emails oh it already exists across [1085] campaigns that's annoying let's just [1089] do actual Gmail the reason why is [1091] because I want this to I want this to [1095] trigger and then I want us to be able to [1096] see what the text looks like um so let's [1100] see I added one lead in the sequence [1102] it's my personal email and then I have [1104] one email in the sequence with the first [1106] name and then that's basically it [1109] um I don't have a company name I don't [1110] think in my lead let's write your [1114] company okay and then uh I'm going to [1118] click save and then [1121] launch oh and then I'm going to select [1124] uh a bunch of accounts here that's the [1126] last thing I have to do for instantly so [1129] let's do that and then click launch this [1131] will now publish my campaign okay great [1133] so this is being sent I do only have one [1135] lead here uh that says not yet contacted [1137] and as I mentioned earlier you know um [1139] it can be I don't know it can be sort of [1141] 50/50 it doesn't always work immediately [1143] and sometimes instantly takes its time [1145] so uh regardless now that that's [1147] chucking along in the background [1148] hopefully by the end of the video we'll [1149] we'll get a response from this and then [1151] I'll be able to show you guys that [1152] variable without this hacky sort of [1154] workaround all right so next up after [1157] we've categorized the email what we need [1158] to do is we need to post it to slack [1161] basically um but I want to do a couple [1163] things before I do that I want to [1164] isolate a few variables I want to parse [1166] some text that's coming in uh and just [1169] generally uh you know get all of the [1171] text and everything like that in a [1172] format that is ready for slack so I'm [1174] going to do two things number one is I'm [1176] going to add a Json parse uh Json module [1179] so you have to go to [1180] Json here and then like so you have to [1184] write Json inside of the Json umbrella [1186] there will be a parse Json module what [1189] this does is anytime that you [1191] have text that's in a format that is [1194] Json and so that's what this looks like [1197] it's a curly bracket K uh it's usually [1199] quotes around some type of key and then [1202] if it's a string there'll be quotes [1203] around the value um sometimes it can be [1205] an integer so might just be a number and [1207] then it can also just be true false null [1209] um some special variables like that what [1211] this does is basically if the variable [1213] is in this format then we can actually [1216] turn it into make.com accessible [1218] variable like one of those little boxes [1220] with like the number [1222] 14. repore text and then we can access [1226] it in the rest of the campaign and so [1228] what I'm going to do is I'm going to go [1229] down here and then I'm going to feed in [1231] the content which is this Json string [1233] and then just for Simplicity I'm also [1235] going to copy this over and then we'll [1236] just test this so I'll show you what [1238] this uh what this looks like so I'm [1240] going to copy over this text and then [1243] I'm going to click okay here and then [1244] I'm actually going to run this oh uh [1247] we're just going to paste this all the [1248] way down here and you'll see that um the [1252] parsed version of this is a variable [1254] called category with a value called [1256] positive so it's more or less what we [1258] want which is nice you'll see that [1260] there's a little like one um aside from [1262] this because it's telling us that a [1264] Transformer should not be the last [1265] module in the route um that's okay um [1267] you know that's just like it saying hey [1269] you're not actually doing anything all [1270] you're doing is just like parsing text [1272] and then outputting it in [1273] make.com any who so we've parsed the [1275] Json from the open AI module now so this [1277] text this positive is actually [1279] accessible and what that means is now we [1281] can use it in filters we can use it in [1282] routes and we can use it in basically [1283] the next step so I'm going to do here is [1286] I'm going to choose a slack module [1288] because it's time for us to dump this [1289] into slack and you'll see it says [1292] beta um so I guess it's still sort of [1294] under development uh but what I want to [1296] do is I want to create a message and I'm [1297] just going to go over here and see if [1298] there's any special no we did use the [1300] slack module for this so I'm going to [1302] click create a message and I'm going to [1303] drag the server here um you have to [1306] connect your slack instance or your [1308] Discord instance works the exact same [1310] way or maybe any of your other instant [1312] messaging instances here um easiest way [1314] to do so click add um just do slackbot [1318] that's like the integromat [1320] bot um integromat is the name that [1322] make.com used to have before it [1326] swapped to make.com and then you [1328] actually have to like sign into your [1330] slack instance and do all that tough [1331] hard work which is sort of annoying um [1333] you have to like select all of the the [1336] availability sorry all of the um [1339] available uh permissions here and it's [1343] sort of annoying but I'm part of a bunch [1345] of slack workspaces so I'm not actually [1346] going to like open this up and and you [1348] guys how to connect because I don't [1349] actually have like the authorization to [1351] do the connection unfortunately um but [1353] afterwards you'll end up with um a [1355] basically connection here that I'm just [1357] calling left click integrat because it's [1359] the name of my slack group um sometimes [1362] I think you have to invite a user called [1364] integromat or an app called integromat [1367] um so you may have to do that before you [1368] complete the connection um if you don't [1371] do a bot and then if you add it as a [1374] user instead then you just log in as the [1376] user that you want the unfortunate thing [1378] is though then the uh every time you get [1380] a message in let's say your sales chat [1383] it'll just be the user that uh you [1385] connected as so if I connected as Nick [1387] then it would basically say Nick sarf [1389] and I would be talking sort of every [1391] time that we trigger that web hook and [1394] so you know in a bigger and more [1395] professional uh company you probably [1396] don't want to do that for enter a [1398] channel ID or name I'm just going to [1399] select from the list slack allows you to [1402] select from two different types of [1403] channels the public channels and the [1404] private channels I guess there's also an [1406] instant message Channel or multiple [1407] instant message Channel but in my case [1409] um the sales chat is a private Channel [1411] that's why it has a lock over it and so [1413] the idea here is like we only wanted [1415] people in the sales chat that are [1416] explicitly invited to the sales chat to [1418] be able to see the messages in the sales [1420] chat sort of makes sense right because a [1421] lot of the information there is a little [1423] bit more personal a little more private [1424] if we gave a list of leads to just a [1426] random person at our company uh maybe it [1429] would be a little less secure and then [1431] for the text so this is pretty [1433] interesting um there are two different [1435] ways that you could do this you could [1436] start with text and I'm going to show [1438] you an example of text um text is just [1440] what it sounds like it's just plain text [1442] you can't do any formatting you can't [1443] make it look pretty you can't do [1444] anything like that but obviously it's a [1446] quick and dirty it's just a simple way [1447] to get up and running but slack in [1449] particular also has a format called [1451] their block Builder which is sort of [1453] like their own markdown format sort of [1455] deal um it's just a way that you build [1457] out like a much more beautiful and a [1459] much more uh complex user interface and [1462] they actually offer a feature that [1463] allows you to do this called The Block [1464] kit [1465] Builder and so if you navigate over the [1467] block kit Builder you'll see it's like a [1468] big helper tool that allows you to like [1470] create your own block messages and [1472] format them correctly and whatever um [1474] you may need to be signed in to do this [1475] now that I'm thinking about it which is [1477] why my screen's blank alternatively my [1479] internet may be shitty I don't know so [1480] I'm going to load that while I just [1482] write um [1484] test I'm just click run this [1487] module and then I'm going to go back to [1489] sales and you'll see that integrad bot [1491] just wrote test that's the uh that's the [1493] default that's what it looks like before [1495] you do any [1496] customization if you go down to to [1497] advanced settings you scroll all the way [1500] down you got a bunch of settings over [1501] here I don't really use any of them the [1503] only one I'll use is use markdown [1505] because I want to be able to write in [1506] markdown and then um you can choose the [1509] emoji for this image and so if you go to [1512] like imager and just pick like whatever [1514] picture you want you can you can change [1516] that um if you don't choose an emoji you [1519] can also choose an icon I don't really [1522] fully know what the two differences are [1523] here uh and then you can change the [1525] username so in my case I'm just going to [1526] call this example [1529] uh company name let's see and then let's [1531] try this again and show you guys what it [1533] looks like so now it says example [1535] company name which is pretty [1538] cool okay great it looks like the slack [1541] block kit Builder loaded um this is more [1543] or less what a block will look like [1546] after you do your formatting and after [1547] you spend your time and energy working [1548] on it you can see it's a lot more [1549] complex than just using text so this is [1551] your first time doing it just slap some [1553] text on there or call it a day if you do [1555] want to get more complex though um if [1556] you wanted to write a a message that [1558] looked like this for instance with [1559] formatting and images on the side and [1561] star emojis and a bunch of information [1563] you'd basically have to work through [1565] this uh and there are a bunch of [1566] templates that are simple and sort of [1568] oneclick so if you wanted it to look [1570] like this for instance with an approve [1571] or a deny button just click use the [1573] message template and then you have just [1576] a bunch of text that you can just copy [1577] and paste into make um but in our case I [1580] actually already have a [1582] flow that's not completely fully [1584] developed but it's like reasonably uh [1586] reasonably good um with all of that [1588] formatting in there that I'm just going [1590] to copy over so that's all I'm going to [1592] do and then I'm going to remove the text [1595] the text and then I'm going to change [1596] the variables so as you see here there's [1599] like a block and the first type is [1601] header and the type is text and it says [1603] Nick just generated a warm lead if I go [1605] back to slack you'll see that [1606] corresponds to this right so it's just [1608] their own custom formatting it's not a [1610] big deal [1612] whatsoever um so there are a couple of [1615] let's see instantly sent out my campaign [1617] for [1620] actually might be a time thing now that [1622] I'm thinking about it because I think my [1624] schedule is probably out of [1627] um out of commission here me go back to [1630] analytics and check out activity yeah no [1634] there's no email here which is [1635] unfortunate um there's no way I can just [1637] like directly send an email I [1638] unfortunately just have to drip it out [1640] um so I'm just going to leave that but [1641] what I'm going to do instead is I'm just [1642] going to access the variables directly [1644] using the same trick that I just showed [1646] you guys so so the first variable of [1648] interest for us is first name and last [1650] name uh when the web hook comes in [1653] through um the instantly uh through an [1657] instantly response it includes a few [1659] variables like the first name the last [1660] name the reply undor text another [1662] variable called reply undor textor [1665] snippet and so we're just going to use [1666] all of those so if I want to access the [1668] first name and I can't actually just go [1670] to the right here and click it I'm going [1671] to go left curly bracket left curly [1673] bracket I'll write the number of the [1675] module that I'm interested in so if I [1677] scroll over here you'll see that that [1678] says one then I'll write one then [1680] underscore then period sorry and then [1682] I'll write uh [1685] first I think it was no underscore so [1690] first [1691] name then a right bracket right bracket [1694] done and then left curly left curly one [1698] do last name right curly right curly [1700] awesome so see here how it's turned red [1703] and there's an outline but there's no [1705] fill in that's because again I'm [1707] accessing a variable that it knows the [1709] module of that variable exists but it [1711] doesn't know if the variable does itself [1713] um and then underneath that what it [1714] looks like I'm doing is I [1717] am getting a variable called reply text [1721] snippet which I guess is just a short [1723] version of the reply text and that would [1725] be this and then it is [1728] replacing the reply text Snippets quotes [1732] with a single quote and then it's [1734] replacing the output of that with a new [1736] line [1738] so we'll test this in a [1742] second but suffice to say um that's what [1746] that looks like and then the last part [1749] is it looks like there's a direct [1752] link to instantly down here and then [1755] there's a heading called sequence and [1757] that's what that is so I'm just going to [1758] leave this for now because I don't think [1759] it's hyper relevant to get into how this [1762] works um basically if you imagine the [1764] reply text snippet has quotes around it [1767] says hey Peter how are you [1772] doing the first [1774] replace will take that text and then [1777] it'll replace all double quotes with [1779] single [1780] quotes and then the next replace will [1783] replace any um new lines here with a [1789] back sln and so you can imagine how [1792] maybe there's supposed to be a new line [1794] here so just replace that with back sln [1797] and then this is the completed text [1799] that's coming into this text section now [1802] from a bird's eye view just because I [1804] sort of remember what was going on here [1806] um it looks like the reply text snippet [1808] had a bunch of double quotes and if you [1810] look at the way that the block [1811] formatting is done it's like double [1812] quote around a variable double quote so [1814] what probably happened is we had double [1816] quotes right next to double quotes which [1818] sort of screwed with the formatting and [1819] then led to like a 400 error or [1821] something um so I'm solving for that [1823] here and then the new lines being [1825] replaced with the SL ends I know for a [1827] fact that slack actually just doesn't [1828] use new lines they use backs slash ends [1830] to represent new lines and what that [1832] means is in order for me to get this [1833] nice look I had to like embed a bunch of [1835] hidden new line characters right after [1837] every line so I imagine that's how that [1839] worked but any who um let's do this now [1843] let's just run this with a bunch of [1844] variables let's do Peter we'll do wick [1846] and the reply text [1848] snippet um let's just copy over this [1851] thing paste that in there let me see if [1854] I could [1856] do um um doesn't look like I can [1858] actually add new line characters here so [1859] it's probably just going to be all on [1860] one line but let's click okay let's see [1862] how it [1863] looks okay great so Nick just gener out [1865] a warm lead that's what we wanted we [1867] have a link to the instantly uni box and [1870] then we have the text down here which is [1872] called the reply text snippet and then [1873] we have the sequence instantly made [1876] awesome so that's looking like it's [1877] working as intended which is quite nice [1880] there is one more thing that I wanted to [1881] implement and just show you uh and [1883] that's a text parser and then I'll put [1884] in the filter and then that'll be it um [1886] it looks like there is a variable called [1889] lead email which we need to [1890] parse uh which is sort of annoying so [1893] let me see if I can grab some history [1895] from this okay it looks like there's one [1897] record in the queue waiting to be [1898] processed so maybe we can actually run [1899] this on a live [1903] record and then get the data that [1908] way okay uh looks [1911] like in this specific case we had we had [1914] a really really long email and and in [1917] order for this to work the reply text [1919] needs to be less than 3,000 characters [1921] and yeah I'm looking at the email that [1922] came in it's like super long but it's [1924] good that this example jumped in because [1925] you guys can now actually see all of [1927] those variables that I was talking about [1928] earlier so when instantly sends you that [1931] web hook it'll have a Tim stamp it'll [1932] have an event type you'll have workspace [1934] ID campaign ID all that stuff but you'll [1936] see that there's also the email account [1938] that it was sent to so that's where the [1940] reply was sent to there's then reply [1942] text snippet there's a lead email which [1945] has the email of the lead um another [1947] variable called email there's website [1950] last name first name as we've already [1951] seen there's profile URL company name [1954] reply subject so you can imagine how you [1956] can do a ton of stuff with this you [1957] could theoretically pump in the LinkedIn [1958] URL to a scraper grab the profile [1961] picture and then use that profile [1962] picture in the message that you send [1964] over so that maybe I don't know your [1965] sales team just gets a little bit more [1967] enriching of an experience um you can do [1969] a ton of stuff now what we're doing here [1971] specifically is we're basically in this [1973] text parser um instantly does not [1976] provide the website that they are [1978] hosting with in the email or in the um [1982] web hook back to you and so if we go [1984] back here you'll see there's no website [1986] variable uh and I really wanted to like [1988] get the website uh just for my own [1990] purposes and maybe just as a way that [1991] like we could quickly jump on their [1993] website first Okay I lied there actually [1995] is a variable called website I think [1997] they've just added this so there wasn't [1999] um and so what I used to have to do is I [2001] used to have to parse the lead email out [2005] and then use that to get just website [2007] domain uh which in this case is Eric [2009] wide folk. us I basically had to match [2013] just this section here and so I'm going [2015] to do that again just because I think [2017] that it's important skill to learn [2019] because we haven't actually done [2020] anything like that before we've just [2022] used AI to like quick and dirty do [2024] parsing and stuff like that so I'm just [2026] going to drag in this text parser module [2028] and then what I'm going to do is explain [2029] how exactly this works um so the text [2032] parser module influence what's called [2035] Rex um Rex is just just a language just [2038] like python or JavaScript or something [2040] like that it's just this language is [2042] solely set up to allow you to isolate [2044] different components of the text [2046] basically like manipulate strings and so [2049] in Rex there are a bunch of options that [2050] you'll always have you can choose [2051] whether it's a global match or a local [2053] match if it's a global match it'll go [2055] across the entire string if it's a local [2057] it'll stop at like the first instance of [2059] that and then only bring back the first [2061] um you can check case sensitivity you [2063] can check multi-line sometimes there are [2065] beginning and end characters which a [2067] little bit complex and unnecessary to [2069] understand there's single line and then [2071] there's a variable here that says do you [2073] want to continue the execution the r [2074] even if the module finds no matches [2076] you're almost always going to want to [2077] click yes to this uh the reason being is [2080] because if for whatever reason your Rex [2082] fails or something like that or you [2083] can't get the data um if that is no then [2086] the module just won't proceed past that [2087] point and I probably spent like a solid [2089] 10 hours of my life just staring at like [2091] a massive make flow with like 50 modules [2093] and being like why the hell isn't this [2094] thing moving only to like later realize [2097] it's because there was a tiny issue with [2098] one of the reg re xes at the very [2100] beginning so save yourself the time [2102] don't be dumb like me um just keep going [2105] while you're debugging and then if you [2106] need this to be no at the end just [2107] switch it to no at the end now um the [2111] pattern that we're going to be doing is [2113] really simple it's just going to be an [2115] at sign and then uh there going to be [2117] two brackets here there's going to be a [2119] left normal bracket and then a right [2120] normal bracket and it's going to be [2122] around a period and then um I think [2124] that's called an asterisk right yes and [2127] so if you imagine if the email that [2128] we're attempting to parse is like hello [2131] gmail.com basically what this is going [2134] to match is it's going to match any [2135] string that has an at in it and then [2138] anything basically after [2140] that now you'll notice that there are [2142] these brackets surrounding this period [2145] and then this asterisk well the way the [2147] brackets work is brackets are basically [2149] what allow you to pull data out so uh I [2153] think they're called match groups you [2154] can pull out a match group and then then [2157] that'll be like a variable in make that [2159] you can manipulate and so I'm probably [2161] not doing this as much Service as I [2162] should be you can but if you just wanted [2164] to select um you know one specific part [2167] then what You' do is you you'd have some [2169] identifier at the beginning so in our [2171] case like we're only ever really going [2172] to see an ad sign in an email [2175] here and then you know we sort of have [2177] brackets around the thing that we care [2179] about which is that gmail.com the period [2181] and then the asterisk is just sort of [2182] shorthand for everything and so I think [2185] the period stands for any character [2187] whatsoever and then the asterisk if I'm [2189] understanding if I'm remembering [2190] correctly um just stands for repeated it [2193] as many times as possible and so what [2195] we're really telling it in natural [2197] language to do is hey I want you to find [2199] the first instance of an ad sign and [2201] then I want you to find any character [2204] after that that repeats an infinite [2206] number of times and then I want you to [2207] just take that character uh take that [2209] string and then pull it out for me and [2211] you know you can imagine how in an email [2214] address um what happens after that sign [2217] it's just the URL of the website so [2218] that's how I was pulling the website out [2221] um and then the website enabled us to do [2223] something which I don't entirely [2224] remember what maybe I was just storing [2226] that for my own purposes at the time any [2228] who for the purposes of this I'm just [2230] going to say extract website uh and just [2232] call it what it is so yeah that's more [2234] or less it that's a very simple flow [2236] that allows us to categorize incoming [2237] requests with AI and then use that to [2239] post basically to an internal team [2242] dashboard um this is super high [2244] throughput and really useful if you're [2246] running like a coaching company or if [2248] you're running really any sort of [2249] business in which you need to be able to [2250] respond to lead inquiries very quickly [2252] what normally happens a lot of these [2254] coaching companies that I've seen that [2255] do like 200 300 400k a month is they [2257] found that product Market fit and it [2258] works really well but then they just [2260] start dumping all their messages into [2261] like a slack without any sort of um ma [2264] proper management or proper like uh I [2267] guess like operations and that can [2269] quickly quickly go out of control and [2272] and so that's something that like I'm [2273] usually called over to fix it's like hey [2275] you know instead of just dumping all [2276] these messages in here um like we still [2278] want to dump them in here but we just [2279] want a system where they can get managed [2281] and so an example system like that might [2283] be if you guys remember back to the [2284] slack block kit Builder there's uh you [2286] see you have a new request type whatever [2288] and then approve or deny well like a [2290] common workflow that uh a lot of [2292] coaching companies or a lot of companies [2293] have to deal with inquiries quickly need [2296] is they need something like this where [2298] like let's say a new Facebook lead comes [2299] in through like Facebook lead ads or [2301] something you get all the information [2302] you post it to slack and then there's [2304] like an accept or um [2307] I don't know like a like a reject or [2309] something and then if a salesperson [2311] clicks accept then maybe it'll send the [2314] lead um you know a quick text message [2316] that's templated that'll allow them to [2318] quickly get in touch with the lead or if [2319] we click reject then maybe it'll like [2321] change a record in our CRM so that you [2323] know the the salesperson just doesn't [2324] have to worry about that lead anymore [2326] maybe they're unqualified something of [2328] that nature this is just a much more [2330] like scalable way to manage these sorts [2331] of inquiries especially when you're [2333] getting the point where you get like one [2334] every five minutes like a lot of these [2336] big Co companies have slacks that are [2338] like every minute there's a$3 or $40,000 [2341] lead so any I hope you guys enjoyed me [2344] waxing poetic in this hotel room I'm [2346] pretty sure it's gotten noticeably [2347] darker since I started recording this so [2349] hopefully you all can still see my face [2350] if you have any questions about the way [2352] that this works in practice at like a [2353] real coaching company or real agency [2355] that's managing leads please let me know [2357] um again the whole purpose of this [2358] course series is just to teach you high [2360] Roi skills between software platforms [2362] that people actually use when they're [2364] building out Revenue systems and things [2366] that make money [2367] um so if there are systems that uh you [2369] know maybe these are similar systems [2371] that you use but they're not the exact [2372] same sorts of systems that you use [2373] that's okay just use the stems of what [2375] I've showed you to build out your own [2377] that are hopefully more complex and [2378] hopefully even higher Roi um rather than [2381] try and like mimic exactly the app [2384] platforms that I'm using and that sort [2385] of thing if they don't really fit your [2386] use case okay great like comment [2389] subscribe do all that fun stuff and I'll [2390] catch you in the next video thanks so [2392] much see you later

Video: https://www.youtube.com/watch?v=TMrVVO6r-y0
Title: How to Connect Any API To Make.com
[0] what's going on everybody welcome to [1] another video in our course make.com but [4] for people who want to make real money [6] and in this video I'm going to be diving [8] deep into apis application programming [11] interfaces because I think it's one of [13] the most commonly misunderstood Concepts [16] in both make.com and automation work in [18] general they're made way too complicated [20] by virtually everybody that talks about [22] them and 99.9% of the uh examples and [26] stuff like that that people are [27] providing just are not really applicable [29] to business use case so in this video [30] I'm actually going to show you guys an [32] applicable business use case something [33] very simple we're going to customize [35] some Outreach just using uh available [37] data from like a free API that I just [39] found on the internet I'm going to show [41] you how to authenticate I'm going to [42] show you how to you know use request [44] modules in make.com and basically I'm [46] just going to show you everything you [47] actually need to know to use this [49] productively if you guys watch a lot of [51] my videos you're probably wondering [52] where the hell I am and why my [53] background looks like it was filmed on a [54] potato U I'm just at a hotel here in the [56] beautiful City of Buffalo and the [58] Beautiful state of New York just on some [60] client work I do shadowing and [62] delegation and automation work as part [64] of my day-to-day and so I figured I'd [66] pick like a relevant example for you I [68] just record this before it it left my [69] brain so if all that sounds good to you [71] and if you're excited to dive into this [73] as I am then stay tuned and let's get [75] into [80] it okay so first things first what is an [82] API and why the hell is it when every [85] time that you Google this you get a [87] bunch of like Matrix looking ass stuff [89] where it's like apis are brains that are [91] embedded in the cloud bro well they're [94] nowhere near as complicated as what a [96] quick Google search would have you think [98] API stands for application programming [100] interface and it's basically just the [102] way that different servers on the [104] internet talk to each other um it's like [107] one of the language specifications [109] basically of like the Internet it's like [112] the simplest way that I found to explain [113] this and probably like the dumbest way [116] to is let's say you are going to a [119] coffee shop and you want a specific type [121] of coffee um I go to Starbucks a lot so [123] I'll walk in and then I'll say hi how's [125] it going I'll have a tall blonde roast [128] and I'd like you to leave room for cream [129] please they will kind of think about my [132] order you know if they're competent [133] Starbucks people they'll know what that [135] means they'll parse it and then in their [137] mind they'll sort of translate that to a [138] list of steps or a list of things that [140] they need to do in order to like fulfill [142] my order they'll be like okay H tall [144] blonde roast I know where that is um [146] tall cups you know I know where those [148] are uh room for okay like he probably [150] wants about an inch or something like [152] that right and they can ask me followup [153] questions they can use natural language [155] to try and determine uh the best way to [157] answer my query right now the thing is [160] apis you can conceptualize as let's [163] pretend you were going to a coffee shop [167] API well it works the exact same way as [169] what I just talked about the only [170] difference is that the person that you [172] are talking to is now really freaking [174] stupid and they only understand requests [177] that are formatted in an extremely [178] particular way and this isn't a knock [180] against Starbucks um Baristas it is a [183] knock against blend's Baristas y'all are [184] morons no I'm just kidding uh it's it's [187] you know let's just use this for the for [189] the sake of the example and let me show [190] you what I mean like let's say you walk [192] into the Starbucks and then instead of [194] you you know being able to say hey I'll [196] have a tall uh blonde roast with room [198] for cream you know they only understand [201] a request if you take a piece of paper [204] at the front desk and then write it out [205] in a very specific format and so the way [207] that you'd write it out uh is first you [210] define the roast type so in my case it [212] would be blonde then you define the size [214] which in my case would be tall uh and [216] then there's a variable for room for [218] cream which you will fill out is true or [219] false and then in order to um you know [222] access this API you need a credit card [225] number and so then you walk in you kind [227] of like put in your credit card number [228] which is like your API key in this case [230] um and then what you do is you give that [232] piece of paper over to the really dumb [234] Barista uh and then the really dumb [235] Barista looks at this like kind of [237] parses out all of the information it's [238] like okay roast type blond blond good uh [240] size tall good room for cream true okay [243] great credit card number let me just [244] double check this okay yeah it looks [246] good we can make this request they then [248] go to the back prepare my wonderful Tall [250] Blond Rose which is probably [251] horrifically overpriced uh and then they [253] bring it back to me and then you know [254] problem solve our transactions over so [257] apis work in basically the exact same [259] way um it's just instead of you you know [263] going to a coffee shop or whatever [264] you're just doing this on the internet [265] using various um software platforms that [268] usually allow to like connect to the [269] things automatically you can make [271] requests like in your terminal you know [273] on your computer if you're a developer [275] you can make requests just in code but [277] since we're in make.com we're going to [278] be making requests in make.com and I [281] really like doing this because it's one [282] of the uh it's one of the simplest ways [283] to get up and running with this stuff [285] like a lot of the formatting and whatnot [287] is sort of scaffolded for you and then [288] all you have to do is just use a very [289] simple module called the HTTP request [291] module um to go out and then you know [293] send or or receive information so in [296] this way you can connect literally any [298] two software platforms that have apis on [301] planet Earth and do some pretty amazing [303] things um in our case we're going to do [305] something that's not like super [307] incredibly amazing but I still think [308] it's cool and uh we're going to make [309] sure that it's applicable to business um [312] what we're going to do is I have a [315] monday.com CRM setup here that I'm [316] currently working on and you guys [318] probably recognize this from a previous [319] video if you're watching this series and [321] what I've noticed here is that one of [322] these fields is location now the cool [325] part about monday.com is in the location [327] field it provides like the address but [329] it also forces you to put in the [330] latitude and the longitude and so we can [332] pull the latitude and longitude [333] information and then presumably what I [335] think we're going to do is we're going [336] to use that information to call a bunch [338] of weather apis maybe just one weather [340] API um and then we're going to get that [342] information with maybe like what the [344] weather is looking like or what the [345] temperature is and then depending on [347] what the temperature is then we'll use [348] that to customize a line in in an [350] Outreach email so we'll say like you [352] know bommy weather we're having here in [355] California you [356] know hope you're doing well I wanted to [359] talk talk to you about X Y and Z right [361] and so this is a very simplified use [363] case obviously but um you know a lot of [365] people in email reaches scale now what [367] they're doing is they're grabbing [368] information from some data source let's [370] say LinkedIn and then they're calling an [371] API to enrich that data or get some [374] additional information about that data [376] and then they will use gp4 or some type [379] of AI to then customize an email based [382] off that information so it seems like [383] it's written in natural language it [384] seems like it's hyper relevant hyper [386] targeted to the person uh and this is [388] basically like the stem of that whole [389] flow so you can build this out as [391] arbitrarily complex as you [395] want okay great so what I'm going to do [397] here is I have set up a make scenario [400] called get monday.com item then set L [403] send latitude longitude to a weather API [405] and then customize email I have two [407] parts of this so far I have the get an [409] item from monday.com and what I've done [410] there is I've just gone to the specific [412] record that I'm using as an example so [413] location California USA in monday.com if [416] you click on the open record page up at [420] the top you'll see the URL changes and [421] there'll be a SL pulses with like a URL [424] so I just know this for my time working [425] with Monday but this is the ID of the [426] record so I'm going to basically go into [429] this module here which is Monday get an [431] item and you'll see there's an ID field [434] so I'll just paste this in uh and then [436] I'll run this once for [438] sanity and yeah you'll see that this [440] like goes out and it grabs the specific [442] name on the record and you know [444] everything like that's good um the [446] information that we are probably [447] concerned about is probably this [449] location [449] field yeah latitude longitude cool so I [453] imagine this is what we're going to need [454] I haven't actually looked into this all [455] I did was I typed free weather [458] API I scrolled past all of the examples [461] uh I tried doing open weather map uh [464] that didn't really seem to work so I [465] kept on scrolling uh and then I found [467] one called weather ai.com which I think [470] is going to work I don't actually know [472] even if it will um but I'm just going to [474] sign up for this and then we're going to [476] see what happens um I received a comment [478] earlier about about how somebody really [481] liked that I showed my mistakes while I [483] was doing this and I do believe that [485] that's pretty informative right like um [488] API Integrations and stuff like that [490] they don't always work out and sometimes [492] there's a little bit of debugging that [493] needs to happen and sometimes the [494] instructions aren't very clear um so my [496] hope is that you know by doing this I uh [499] if I do run into any issues then you [501] guys will be able to see what the [502] debugging process looks like so I just [505] copying and pasting in this email [506] verification go to the login page now [510] for this [511] service and I'm just typing [515] in um the credentials here and we're [518] going to see how we get the API stuff so [521] okay great um this is awesome they just [523] provided us all of the information up [525] front so one thing that you usually need [527] when you're working with an API is you [528] need what's called an API key which is [530] sort of like my credit card in the [531] previous example I mean it's not [532] actually a credit card but it's just a [533] way that you can verify that your [534] requests are legitimate look if I walked [536] into Starbucks and I'm like hey I want a [538] tall blonde with room for cre [540] um and they're like okay great pay us [541] and I'm like no like they wouldn't [542] consider that request legitimate they [544] probably kick me out of the store same [546] way uh that apis work if you don't have [548] your API key they don't really consider [550] you legitimate and then instead of [551] sending you the information that you [552] want they usually just send you like an [554] unauthorized request which is equivalent [556] to security throwing you [557] out um yeah so here's where we're at [560] right now you see that they gave us like [562] some Pro Plus plan we have an API key [564] how exactly does this work though so I'm [566] going to go to learn how to form HTTP [568] request to get weather from API Explorer [570] or use our new Swagger tool that's [575] interesting I have a ton of Swag man um [578] okay so looks like they have an [579] interactive API Explorer that's not what [580] we want we just want the docs this looks [583] this looks more like what we want [585] anytime you are connecting apis always [587] go to down to the docs page first before [589] you do anything and then these docs will [591] usually solve all of your problems I [593] will say they're written usually by like [597] the super nerdy type that it you know [599] can't go outside or his skin will get [601] burned by the sunlight so you do have to [602] be a little bit careful in the way that [604] you're parsing this and sometimes it's [605] just really annoying to try and convert [607] this into natural language you can just [609] paste apis into gpt3 or gp4 I've done [612] that a couple of times and then just [613] asked it questions in natural language [615] that's something you could do um but you [617] know as you get more and [619] more uh I guess competence at working [622] with apis you know you usually learn all [624] the that you could skip so I'm just [625] skipping through all this stuff here [627] what I'm really looking for is I'm [628] looking for some type of like quick [629] start or an example request that I could [631] just pump in so um let me see if I'll be [634] able to find [636] it there's a getting started up [640] here and there's a request [643] URL it says requests to whether api. [646] comom consists of Base URL and API [648] method you can make both HTTP or https [651] requests to our API this is an example [652] of what I mean it's just pointless this [654] probably doesn't do [656] anything um tangible unless you really [659] care about you know securing your HTTP [662] requests to uh to a weather [665] API so what we see here is there is [667] what's called a base URL which is HTTP [669] backb api. wether ai.com V1 this is [672] usually quite common common so there'll [674] usually be some type of Base URL here uh [676] which is nice and then there are a bunch [678] of request parameters this is sort of [681] silly the way they've laid it out here [683] like they're just giving you all of the [684] parameters up front as opposed to just [685] giving you an example URL that you can [687] call so we want the weather API that's [689] what we're curious about um so I'm going [691] to do the real time API that's probably [692] what that [695] is [697] and this is super silly in so far that [701] there is just so [703] many there's so much random information [706] whereas the only thing I really want is [707] I just want the [710] uh okay well whatever let's just do it [712] this way um a lot of the time these apis [714] just have the entire string that you can [715] just copy and paste but uh we're just [717] going to do it the way that they want us [718] to do do it so uh we have a base URL [720] here and then we have various endpoints [722] they're called for different parts of [725] the service so there's um this API base [728] and then on top of that what you do is [729] you slap like a SLC current. Json or [732] slash forecast. Json or slash search. [735] Json and then depending on what you're [737] doing um then you um you know depending [741] on what field you're you're looking at [743] then you can put in what are called [744] request parameters which in our case is [746] going to be a query and we're going to [748] put in a q equals this here so this is [753] probably what we're going to end up [754] doing [755] um and let me just pump this in so first [758] we have the base stem of our [760] URL and then what we're going to want is [763] slash current. [766] Json and [768] then uh our request parameter in this [771] case is going to be [772] Q so I'll always put a question mark [775] question mark is just how you start [776] defining the list of parameters then you [778] write what whatever your parameter is so [779] maybe in another API that's probably [782] written or specified a little bit better [783] you might do latitude equals whatever [787] and [788] longitude [790] equals and you know um that that's how [793] you do multiple variables but in our [795] case it's just Q then it looks like we [798] do some decimals uh so I'm just going to [801] copy and paste this in we're going to [802] see what [804] happens and then I'm also going to grab [807] the API key [809] somewhere I don't know where you would [811] do this API key [817] though looks like just a key parameter [820] okay so I imagine that would just be [822] end um key equals and then we have an [826] API key up here which I'm going to [828] copy paste that in and I'm just going to [830] try this as an example we'll see what [832] happens uh yeah okay looks like it [834] worked we got a 200 request um 200 [836] status code just means that everything [837] is hunky dory that were a 400 or a 401 [840] or basically anything starting with a [841] four there'd be a problem uh and so if [844] you open up this data um you'll see that [847] there is a location with the name of the [849] place that you are referencing looks [851] like they also give you the region the [852] country the latitude the longitude they [854] give you the time zone they give you the [856] local time and then under current they [858] have temp in C then they have temp in F [861] wow this is actually extremely [862] exhaustive you could do a lot of cool [864] stuff with this you could just feed all [866] this into Ai and say like hey like write [867] me a customized thing to with all of [869] this [871] information uh and then the text is [872] light rain okay great we're GNA do [874] something really funny with this um [876] anyway that was way simpler than I [877] thought it would be I thought we'd have [878] some issues which is sort of unfortunate [880] but uh but yeah while I'm just on that [882] note then let me run you through what [884] what a much better API would probably [886] look like um before this I was looking [889] at one called openweathermap.org [892] um and the cool thing about open weather [894] map is they just give you the whole URL [896] up front and this is usually what like [898] the good apis will do so if we scroll [900] down to openweathermap.org and then [902] check out their API they have a one call [904] Api 3.0 you'll see they have an entire [906] section just called how to make an API [908] call and inside of this they literally [910] have a whole URL with latitude equals [913] lat and longitude equals long and they [916] have some exclude parameter and then app [917] ID equals your API key so what you would [920] do if you really wanted to scaffold this [922] get up and running is you would just [923] copy this and then you paste this into [925] your make request [926] module which by the way if you're [928] unfamiliar with how to find just type in [930] um [931] HTTP down here I've already found it and [934] I've stuck it over here so it's not [935] popping up when I do the search but uh [937] the module that we're curious that that [938] we need to do is called make a request [941] um but yeah what you do is you just [942] paste this in and then you just fill in [943] these variables with the information um [945] from your service so there's a reason [947] why this one costs money and this one's [949] free probably but um yeah yeah a lot of [952] apis are unfortunately going to be quite [954] difficult and quite dense to understand [955] so it just gets um starts to be pretty [958] valid valuable just to get in the habit [959] of parsing this now while I'm on this I [961] might as well talk about a couple of [963] other ways that apis work um and these [965] are like common requirements uh for [968] various apis nowadays not all apis will [970] be structured in this way you'll see [972] that in this HTTP make a request module [974] there are a bunch of um parameters here [977] so the first is URL but then there's one [979] called method which allows you to do get [981] head post put patch delete options the [984] vast majority of the time you're going [985] to be using either a get request to get [987] some data from a resource or you going [989] to be using a post request which usually [991] can be getting data from a resource but [994] can also be like updating data or adding [996] data to a resource or something like [998] that and so the real difference that uh [1001] people just can't seem to understand [1002] simply or explain simply I should say is [1006] uh in a get request you just put all of [1007] your information in the URL itself so if [1010] you check this out what am I doing I'm [1011] like defining Q equals 48 whatever and [1015] then [1016] 23508 and key equals whatever like I'm [1018] putting all this information just in the [1020] URL but then uh if you were using a post [1022] request a lot of the time what you do [1025] is uh we we'd select raw and then we'd [1027] select Json so in a in a post request a [1030] lot of the time what you do is you just [1032] structure this in a JavaScript object so [1034] what that means is you would um do the [1037] curly braces and if you go back to our [1039] coffee shop example you would structure [1041] all this like this you'd say latitude [1044] equals 48 [1047] whatever long [1049] longitude you [1052] know I don't know if this is right [1054] probably not um API key A lot of the [1058] time right and then you'd put the [1061] information down here instead of up here [1063] and there's obviously some more Nuance [1065] to it you know the more developer [1066] friendly uh this tutorial becomes U but [1069] I'm going to keep it pretty light and [1071] essentially that's really the the main [1072] difference you'll usually find that [1074] information um somewhere in the API you [1076] you'll like type in get or something and [1078] then a lot of the time they say you need [1080] to get request or post request or [1083] something and so you'll see here that [1085] they [1085] sa